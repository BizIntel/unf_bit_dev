#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Данные = Новый Соответствие;
	Данные.Вставить("Справочник.Организации");
	Данные.Вставить("Справочник.Магазины");
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаБазыКорреспондентаПриСозданииНаСервере(
	ЭтаФорма,
	Метаданные.ПланыОбмена.ОбменРозницаУправлениеНебольшойФирмой.Имя,
	Данные);
	
	ВспомогательныйРеквизитРежимСинхронизацииОрганизаций =
	?(ИспользоватьОтборПоОрганизациям, "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям", "СинхронизироватьДанныеПоВсемОрганизациям");
	
	ЗагрузитьДанныеВТаблицуФормы(Данные["Справочник.Организации"], ВспомогательныйРеквизитОрганизации, "Организация");
	
	ОтметитьВыбранныеЭлементыТаблицы("Организации", "ВспомогательныйРеквизитОрганизации", "Организация_Ключ");
	
	ПланыОбмена.ОбменРозницаУправлениеНебольшойФирмой.ОпределитьВариантСинхронизацииДокументов(ВариантСинхронизацииДокументов, ЭтаФорма);
	ПланыОбмена.ОбменРозницаУправлениеНебольшойФирмой.ОпределитьВариантСинхронизацииСправочников(ВариантСинхронизацииСправочников, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РежимСинхронизацииОрганизацийПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтотОбъект, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВспомогательныйРеквизитРежимСинхронизацииОрганизацийПриИзменении(Элемент)
	
	РежимСинхронизацииОрганизацийПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ВспомогательныйРеквизитОрганизацииИспользоватьПриИзменении(Элемент)
	
	СформироватьЗаголовокТаблицыОрганизации();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИЗакрытьНаСервере();
	
	ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "ВспомогательныйРеквизитОрганизации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "ВспомогательныйРеквизитОрганизации");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьИЗакрытьНаСервере()
	
	ИспользоватьОтборПоОрганизациям =
		(ВспомогательныйРеквизитРежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
	
	Если ИспользоватьОтборПоОрганизациям Тогда
		
		Организации.Загрузить(ВспомогательныйРеквизитОрганизации.Выгрузить(Новый Структура("Использовать", Истина), "Организация, Организация_Ключ"));
		
	Иначе
		
		Организации.Очистить();
		
	КонецЕсли;
	
	ПланыОбмена.ОбменРозницаУправлениеНебольшойФирмой.ОпределитьРежимыВыгрузкиДокументов(ВариантСинхронизацииДокументов, ЭтаФорма);
	ПланыОбмена.ОбменРозницаУправлениеНебольшойФирмой.ОпределитьРежимыВыгрузкиСправочников(ВариантСинхронизацииСправочников, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВТаблице(Включить, ИмяТаблицы)
	
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		
		ЭлементКоллекции.Использовать = Включить;
		
	КонецЦикла;
	
	СформироватьЗаголовокТаблицыОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииОрганизацийПриИзмененииЗначения()
	
	Элементы.ВспомогательныйРеквизитОрганизации.Доступность =
		(ВспомогательныйРеквизитРежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
	
	СформироватьЗаголовокТаблицыОрганизации();
	
КонецПроцедуры

&НаСервере
Процедура ОтметитьВыбранныеЭлементыТаблицы(ИмяТаблицы, ИмяВспомогательнойТаблицы, ИмяРеквизита)
	
	Для Каждого СтрокаТаблицы Из ЭтаФорма[ИмяТаблицы] Цикл
		
		Строки = ЭтаФорма[ИмяВспомогательнойТаблицы].НайтиСтроки(Новый Структура(ИмяРеквизита, СтрокаТаблицы[ИмяРеквизита]));
		
		Если Строки.Количество() > 0 Тогда
			
			Строки[0].Использовать = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗаголовокТаблицыОрганизации()
	
	Если ВспомогательныйРеквизитРежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям" Тогда
		
		ЗаголовокСтраницы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'По организациям (%1)'"),
			КоличествоВыбранныхСтрок("ВспомогательныйРеквизитОрганизации"));
	Иначе
		
		ЗаголовокСтраницы = НСтр("ru = 'По всем организациям'");
	КонецЕсли;
	
	Элементы.СтраницаОрганизации.Заголовок = ЗаголовокСтраницы;
	
КонецПроцедуры

&НаКлиенте
Функция КоличествоВыбранныхСтрок(ИмяТаблицы)
	
	Результат = 0;
	
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		
		Если ЭлементКоллекции.Использовать Тогда
			
			Результат = Результат + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗагрузитьДанныеВТаблицуФормы(Источник, Приемник, ИмяРеквизита)
	
	Приемник.Очистить();
	
	Для Каждого СтрокаИсточника Из Источник Цикл
		
		СтрокаПриемника = Приемник.Добавить();
		СтрокаПриемника[ИмяРеквизита] = СтрокаИсточника.Представление;
		СтрокаПриемника[ИмяРеквизита + "_Ключ"] = СтрокаИсточника.Идентификатор;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
