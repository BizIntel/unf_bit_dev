////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОпределитьДоступностьНастройки();
	
	Если НастройкаДоступна Тогда
		Элементы.ГруппаНастройки.ТекущаяСтраница = Элементы.НастройкиДоступны;
		
		РежимСинхронизацииДанных =
			?(Объект.ИспользоватьОтборПоОрганизациям, "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям", "СинхронизироватьВсеДанные")
		;
		
		Организации.Загрузить(ВсеОрганизацииПриложения());
		
		Для Каждого СтрокаТаблицы Из Объект.Организации Цикл
			
			Организации.НайтиСтроки(Новый Структура("Организация", СтрокаТаблицы.Организация))[0].Использовать = Истина;
			
		КонецЦикла;
	Иначе
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.ГруппаНастройки.ТекущаяСтраница = Элементы.НастройкиНедоступны;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РежимСинхронизацииДанныхПриИзмененииЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ИспользоватьОтборПоОрганизациям =
		(РежимСинхронизацииДанных = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям")
	;
	
	Если ТекущийОбъект.ИспользоватьОтборПоОрганизациям Тогда
		
		ТекущийОбъект.Организации.Загрузить(Организации.Выгрузить(Новый Структура("Использовать", Истина), "Организация"));
		
	Иначе
		
		ТекущийОбъект.Организации.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_АвтономноеРабочееМесто");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД ФОРМЫ

&НаКлиенте
Процедура РежимСинхронизацииДанныхПриИзменении(Элемент)
	
	РежимСинхронизацииДанныхПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "Организации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "Организации");
	
КонецПроцедуры


&НаКлиенте
Процедура ДекорацияНевозможнаНастройкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Обработка.НастройкаПрограммы.Форма", Новый Структура("РазделПоУмолчанию", "Компания"), ЭтотОбъект);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура РежимСинхронизацииДанныхПриИзмененииЗначения()
	
	Элементы.Организации.Доступность =
		(РежимСинхронизацииДанных = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям")
	;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВТаблице(Включить, ИмяТаблицы)
	
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		
		ЭлементКоллекции.Использовать = Включить;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВсеОрганизацииПриложения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК Использовать,
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организации.Наименование";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции


&НаСервере
Процедура ОпределитьДоступностьНастройки()
	
	НастройкаДоступна = НЕ ЗначениеЗаполнено(Константы.Компания.Получить());
	
КонецПроцедуры
