
&НаКлиенте
Процедура ПрофильПриИзменении(Элемент)
	
	УстановитьРолиПоПрофилю();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРолиПоПрофилю()
	
	Если Объект.Профиль = ПредопределенноеЗначение("Перечисление.ПрофилиМобильногоПриложения.Собственник") Тогда
		Контрагенты = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		Номенклатура = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		Заказы = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ДвиженияТоваров = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетОстаткиТоваровНаСкладах = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетПродажи = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетДолги = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		НалоговыйКалендарь = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		Производство = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		Объект.ПоОтветственному = Ложь;
	ИначеЕсли Объект.Профиль = ПредопределенноеЗначение("Перечисление.ПрофилиМобильногоПриложения.Продавец") Тогда
		Контрагенты = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		Номенклатура = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.ТолькоПросмотр");
		Заказы = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		ДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ДвиженияТоваров = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетОстаткиТоваровНаСкладах = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетПродажи = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетДолги = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		НалоговыйКалендарь = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		Производство = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		Объект.ПоОтветственному = Истина;
	ИначеЕсли Объект.Профиль = ПредопределенноеЗначение("Перечисление.ПрофилиМобильногоПриложения.ТорговыйПредставитель") Тогда
		Контрагенты = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		Номенклатура = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.ТолькоПросмотр");
		Заказы = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ДвиженияТоваров = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетОстаткиТоваровНаСкладах = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетПродажи = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		ОтчетДолги = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		НалоговыйКалендарь = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		Производство = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		Объект.ПоОтветственному = Истина;
	ИначеЕсли Объект.Профиль = ПредопределенноеЗначение("Перечисление.ПрофилиМобильногоПриложения.СервисныйИнженер") Тогда
		Контрагенты = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.ТолькоПросмотр");
		Номенклатура = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.ТолькоПросмотр");
		Заказы = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ДвиженияТоваров = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетОстаткиТоваровНаСкладах = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена");
		ОтчетПродажи = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		ОтчетДолги = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		НалоговыйКалендарь = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		Производство = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Выключена");
		Объект.ПоОтветственному = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПрофильДетальнаяНастройка()
	
	Объект.Профиль = ПредопределенноеЗначение("Перечисление.ПрофилиМобильногоПриложения.ДетальнаяНастройка");
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияДенегПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияТоваровПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОстаткиТоваровПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетДвижениеДенегПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПродажиПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетДолгиПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРольВТаблицу(Роль)
	
	НоваяСтрока = Объект.Роли.Добавить();
	НоваяСтрока.Роль = Роль;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.Роли.Очистить();
	ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.БазовыеПрава"));
	Если Контрагенты = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.КонтрагентыПросмотрИРедактирование"));
	ИначеЕсли Контрагенты = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.ТолькоПросмотр") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.КонтрагентыТолькоПросмотр"));
	КонецЕсли;
	Если Номенклатура = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.НоменклатураПросмотрИРедактирование"));
	ИначеЕсли Номенклатура = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.ТолькоПросмотр") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.НоменклатураТолькоПросмотр"));
	КонецЕсли;
	Если Заказы = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ЗаказыПросмотрИРедактирование"));
	ИначеЕсли Заказы = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.ТолькоПросмотр") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ЗаказыТолькоПросмотр"));
	КонецЕсли;
	Если ДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ДвиженияДенегПросмотрИРедактирование"));
	ИначеЕсли ДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.ТолькоПросмотр") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ДвиженияДенегТолькоПросмотр"));
	КонецЕсли;
	Если ДвиженияТоваров = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ДвиженияТоваровПросмотрИРедактирование"));
	ИначеЕсли ДвиженияТоваров = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.ТолькоПросмотр") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ДвиженияТоваровТолькоПросмотр"));
	КонецЕсли;
	Если Производство = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ПроизводствоПросмотрИРедактирование"));
	ИначеЕсли Производство = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.ТолькоПросмотр") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ПроизводствоТолькоПросмотр"));
	КонецЕсли;
	Если ОтчетДвиженияДенег = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ОтчетДвиженияДенегПросмотр"));
	КонецЕсли;
	Если ОтчетОстаткиТоваровНаСкладах = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ОтчетОстаткиТоваровНаСкладахПросмотр"));
	КонецЕсли;
	Если ОтчетПродажи = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ОтчетПродажиПросмотр"));
	КонецЕсли;
	Если ОтчетДолги = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.ОтчетДолгиПросмотр"));
	КонецЕсли;
	Если НалоговыйКалендарь = ПредопределенноеЗначение("Перечисление.ЗначениеРоли.Включена") Тогда
		ДобавитьРольВТаблицу(ПредопределенноеЗначение("Перечисление.РолиМобильногоПриложения.НалоговыйКалендарь"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Контрагенты = Перечисления.ЗначениеРоли.Выключена;
	Номенклатура = Перечисления.ЗначениеРоли.Выключена;
	Заказы = Перечисления.ЗначениеРоли.Выключена;
	ДвиженияДенег = Перечисления.ЗначениеРоли.Выключена;
	ДвиженияТоваров = Перечисления.ЗначениеРоли.Выключена;
	Производство = Перечисления.ЗначениеРоли.Выключена;
	ОтчетДвиженияДенег = Перечисления.ЗначениеРоли.Выключена;
	ОтчетОстаткиТоваровНаСкладах = Перечисления.ЗначениеРоли.Выключена;
	ОтчетПродажи = Перечисления.ЗначениеРоли.Выключена;
	ОтчетДолги = Перечисления.ЗначениеРоли.Выключена;
	НалоговыйКалендарь = Перечисления.ЗначениеРоли.Выключена;
	
	ЕстьРольПолныеПрава = Ложь;
	
	Для каждого ТекСтрока Из Объект.Роли Цикл
		
		Если ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ПолныеПрава Тогда
			ЕстьРольПолныеПрава = Истина;
			Прервать;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.КонтрагентыПросмотрИРедактирование Тогда
			Контрагенты = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.КонтрагентыТолькоПросмотр Тогда
			Контрагенты = Перечисления.ЗначениеРоли.ТолькоПросмотр;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.НоменклатураПросмотрИРедактирование Тогда
			Номенклатура = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.НоменклатураТолькоПросмотр Тогда
			Номенклатура = Перечисления.ЗначениеРоли.ТолькоПросмотр;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ЗаказыПросмотрИРедактирование Тогда
			Заказы = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ЗаказыТолькоПросмотр Тогда
			Заказы = Перечисления.ЗначениеРоли.ТолькоПросмотр;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ДвиженияДенегПросмотрИРедактирование Тогда
			ДвиженияДенег = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ДвиженияДенегТолькоПросмотр Тогда
			ДвиженияДенег = Перечисления.ЗначениеРоли.ТолькоПросмотр;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ДвиженияТоваровПросмотрИРедактирование Тогда
			ДвиженияТоваров = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ДвиженияТоваровТолькоПросмотр Тогда
			ДвиженияТоваров = Перечисления.ЗначениеРоли.ТолькоПросмотр;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ПроизводствоПросмотрИРедактирование Тогда
			Производство = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ПроизводствоТолькоПросмотр Тогда
			Производство = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ОтчетДвиженияДенегПросмотр Тогда
			ОтчетДвиженияДенег = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ОтчетОстаткиТоваровНаСкладахПросмотр Тогда
			ОтчетОстаткиТоваровНаСкладах = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ОтчетПродажиПросмотр Тогда
			ОтчетПродажи = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.ОтчетДолгиПросмотр Тогда
			ОтчетДолги = Перечисления.ЗначениеРоли.Включена;
		ИначеЕсли ТекСтрока.Роль = Перечисления.РолиМобильногоПриложения.НалоговыйКалендарь Тогда
			НалоговыйКалендарь = Перечисления.ЗначениеРоли.Включена;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьРольПолныеПрава Тогда
		Объект.Профиль = Перечисления.ПрофилиМобильногоПриложения.Собственник;
		УстановитьРолиПоПрофилю();
	КонецЕсли;
	
	Если Объект.Роли.Количество() = 0 Тогда
		Элементы.Роли.Видимость = Ложь;
	Иначе
		Элементы.Роли.Видимость = Истина;
	КонецЕсли;
	
	Если МобильноеПриложениеВызовСервера.НужноОграничитьФункциональность() Тогда
		// Возможность выгрузки строго по ответственному доступна только для платного тарифа.
		Элементы.ПоОтветственному.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ ОбменМобильноеПриложениеПереопределяемый.ЭтоВерсияСПроизводством(Объект.Ссылка) Тогда
		Элементы.Производство.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговыйКалендарьПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизводствоПриИзменении(Элемент)
	
	УстановитьПрофильДетальнаяНастройка();
	
КонецПроцедуры
