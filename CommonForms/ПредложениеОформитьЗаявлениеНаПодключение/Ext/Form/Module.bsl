
#Область ОписаниеПеременных

Перем КонтрагентВ1СЭДО;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация             = Параметры.Организация;
	Контрагент              = Параметры.Контрагент;
	ДополнительныеПараметры = Параметры.ДополнительныеПараметры;
	
	HTMLДокумент = ПолучитьОбщийМакет(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ПредложениеОформитьЗаявлениеНаПодключение_%1", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())).ПолучитьТекст();
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		HTMLДокумент = ПолучитьОбщийМакет(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ПредложениеОформитьЗаявлениеНаПодключениеИзСправочникаКонтрагенты_%1",
		ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())).ПолучитьТекст();
	КонецЕсли;
	
	ПодготовитьФорму(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// В случае полного набора параметров сразу стартуем помощник подключения в 1С-ЭДО.
	Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
		Отказ = Истина;
		
		СпособыОЭД = Новый Массив;
		СпособыОЭД.Добавить(ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО"));
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("СпособыОбменаЭД", СпособыОЭД);
		
		ПараметрыФормы.Вставить("Организация", Организация);
		ПараметрыФормы.Вставить("Контрагент",  Контрагент);
		ПараметрыФормы.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
		
		ОткрытьФорму("Справочник.ПрофилиНастроекЭДО.Форма.ПомощникПодключенияЭДО",
			ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещенияОЗакрытии);
		
	ИначеЕсли ЗначениеЗаполнено(НастройкаЭДО) Тогда
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("НастройкаЭДО", НастройкаЭДО);
		ПараметрыФормы.Вставить("ФормаОткрытаИзНастройкиЭДО", Ложь);
		ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаПриглашения",
			ПараметрыФормы, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.Независимый);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияЗаголовокНажатие(Элемент)
	
	АдресСтраницы = "https://portal.1c.ru/applications/30";
	ОписаниеОповещения = Новый ОписаниеОповещения("ПустойОбработчик",ЭлектронноеВзаимодействиеСлужебныйКлиент);	
	НачатьЗапускПриложения(ОписаниеОповещения, АдресСтраницы);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НажатиеБольшеНеПоказывать(Команда)
		
	СохранитьЗначениеБольшеНеПоказыватьНаСервере(Истина);
		
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеПоказатьПозже(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключиться(Команда)
	
	Если ПодключитьсяКЭДО() Тогда
	
		Если ЗначениеЗаполнено(ПрофильНастроекЭДО) И ЗначениеЗаполнено(Контрагент) Тогда
			ПараметрыФормы = Новый Структура;
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("Контрагент",         Контрагент);
			ЗначенияЗаполнения.Вставить("Организация",        Организация);
			ЗначенияЗаполнения.Вставить("ПрофильНастроекЭДО", ПрофильНастроекЭДО);
			
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
			ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
			
		Иначе
			
			Если ТипПодключенияЭДО = 1 Тогда
				СпособыОЭД = Новый Массив;
				СпособыОЭД.Добавить(ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО"));
				
				ПараметрыФормы = Новый Структура();
				ПараметрыФормы.Вставить("СпособыОбменаЭД", СпособыОЭД);
				
				ПараметрыФормы.Вставить("Организация", Организация);
				ПараметрыФормы.Вставить("Контрагент",  Контрагент);
				
				ОткрытьФорму("Справочник.ПрофилиНастроекЭДО.Форма.ПомощникПодключенияЭДО", ПараметрыФормы, ЭтаФорма);
			Иначе
				ПараметрыФормы = Новый Структура("Ссылка", Организация);
				ФормаПомощникаБизнесСети = "Обработка.БизнесСеть.Форма.ПодключениеУчастников";
				ОткрытьФорму(ФормаПомощникаБизнесСети, ПараметрыФормы, ЭтаФорма);
			КонецЕсли;
			
		КонецЕсли;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПодключитьсяКЭДО()
	
	Если ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЕстьПравоОбработкиЭД() Тогда
		УстановитьЗначенияКонстант();
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьЗначенияКонстант()
	
	ИспользуютсяОбменЭД = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции(
		"ИспользоватьОбменЭД");
	Если Не ИспользуютсяОбменЭД Тогда
		Константы.ИспользоватьОбменЭД.Установить(Истина);
	КонецЕсли;
	
	ИспользуютсяЭП = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции(
		"ИспользоватьЭлектронныеПодписиЭД");
	Если Не ИспользуютсяЭП Тогда
		Константы.ИспользоватьЭлектронныеПодписи.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФорму(Отказ)
	
	ТипПодключенияЭДО = 1;
	ЭтаФорма.КлючСохраненияПоложенияОкна = УникальныйИдентификатор;
	
	// Проверим - есть ли уже подключение к сервису 1С-ЭДО по искомой организации.
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрофилиНастроекЭДО.Ссылка,
	|	ПрофилиНастроекЭДО.Организация
	|ИЗ
	|	Справочник.ПрофилиНастроекЭДО КАК ПрофилиНастроекЭДО
	|ГДЕ
	|	ПрофилиНастроекЭДО.СпособОбменаЭД = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО)
	|	И НЕ ПрофилиНастроекЭДО.ПометкаУдаления";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ТекстЗапроса = ТекстЗапроса + " И
			|	ПрофилиНастроекЭДО.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПрофильНастроекЭДО = Выборка.Ссылка;
	КонецЕсли;
	
	// Проверим - есть ли уже подключение к сервису 1С-ЭДО по искомого контрагента.
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СостоянияКонтрагентовБЭД.Состояние
		|ИЗ
		|	РегистрСведений.СостоянияКонтрагентовБЭД КАК СостоянияКонтрагентовБЭД
		|ГДЕ
		|	СостоянияКонтрагентовБЭД.Контрагент = &Контрагент
		|	И СостоянияКонтрагентовБЭД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрагентаБЭД.НеПодключен)";
		
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		КонтрагентВ1СЭДО = Запрос.Выполнить().Пустой();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(ПрофильНастроекЭДО) И Не ЗначениеЗаполнено(Контрагент) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПрофильНастроекЭДО) И ЗначениеЗаполнено(Контрагент) Тогда
		
		Если Не ЗначениеЗаполнено(Организация) Тогда
			Организация = ПрофильНастроекЭДО.Организация;
		КонецЕсли;
		
		УстановитьЗначенияКонстант();
		СформироватьНастройкуЭДО();
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
		УстановитьЗначенияКонстант();
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.ДекорацияПроверка.Заголовок = НСтр("ru = 'Из этой программы можно обмениваться электронными документами с контрагентами.'");
	
	Если КонтрагентВ1СЭДО Тогда
		ШаблонТекстаДекорации = НСтр("ru = 'С контрагентом ""%1"" можно обмениваться электронными документами
		|из этой программы.'");
		Элементы.ДекорацияПроверка.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаДекорации,
		Контрагент);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьЗначениеБольшеНеПоказыватьНаСервере(БольшеНеПоказывать)
	
	ХранилищеОбщихНастроек.Сохранить("Обработка.ОбменСКонтрагентами", "НеПоказыватьПредложениеОформитьЗаявлениеНаПодключение", БольшеНеПоказывать);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНастройкуЭДО()
	
	НастройкаЭДОИсходная = Справочники.СоглашенияОбИспользованииЭД.СоздатьЭлемент();
	НастройкаЭДОИсходная.ОбменДанными.Загрузка = Истина;
	
	НастройкаЭДОИсходная.Контрагент = Контрагент;
	НастройкаЭДОИсходная.Наименование = Строка(Контрагент);
	
	НастройкаЭДОИсходная.ПрофильНастроекЭДО = ПрофильНастроекЭДО;
	ПараметрыПрофиляНастроек = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПрофильНастроекЭДО,
		"Организация, ИдентификаторОрганизации, СпособОбменаЭД, ШаблонТекстаПриглашений, ИсходящиеДокументы");
	
	НастройкаЭДОИсходная.Организация                 = ПараметрыПрофиляНастроек.Организация;
	НастройкаЭДОИсходная.СпособОбменаЭД              = ПараметрыПрофиляНастроек.СпособОбменаЭД;
	НастройкаЭДОИсходная.ИдентификаторОрганизации    = ПараметрыПрофиляНастроек.ИдентификаторОрганизации;
	НастройкаЭДОИсходная.ВерсияФорматаПакета         = Перечисления.ВерсииФорматаПакетаЭД.Версия30;
	
	// Загружаем ТЧ из профиля настроек ЭДО.
	ИсходнаяТаблицаЭД = ПараметрыПрофиляНастроек.ИсходящиеДокументы.Выгрузить();
	ИсходнаяТаблицаЭД.Колонки.Добавить("ПрофильНастроекЭДО");
	ИсходнаяТаблицаЭД.Колонки.Добавить("СпособОбменаЭД");
	ИсходнаяТаблицаЭД.Колонки.Добавить("ИдентификаторОрганизации");
	
	ИсходнаяТаблицаЭД.ЗаполнитьЗначения(ПрофильНастроекЭДО, "ПрофильНастроекЭДО");
	ИсходнаяТаблицаЭД.ЗаполнитьЗначения(ПараметрыПрофиляНастроек.СпособОбменаЭД, "СпособОбменаЭД");
	ИсходнаяТаблицаЭД.ЗаполнитьЗначения(ПараметрыПрофиляНастроек.ИдентификаторОрганизации, "ИдентификаторОрганизации");
	
	НастройкаЭДОИсходная.ИсходящиеДокументы.Загрузить(ИсходнаяТаблицаЭД);
	
	НастройкаЭДОИсходная.СтатусПодключения           = Перечисления.СтатусыУчастниковОбменаЭД.ТребуетсяПригласить;
	НастройкаЭДОИсходная.СостояниеСоглашения                  = Перечисления.СостоянияСоглашенийЭД.ОжидаетсяСогласование;
	
	НастройкаЭДОИсходная.АвтоПереходНаНовыеФорматы = Истина;
	НастройкаЭДОИсходная.Записать();
	
	НастройкаЭДО = НастройкаЭДОИсходная.Ссылка;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

КонтрагентВ1СЭДО = Ложь;

#КонецОбласти

