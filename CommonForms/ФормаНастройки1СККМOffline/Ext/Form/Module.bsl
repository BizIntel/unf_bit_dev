
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Идентификатор", Идентификатор);
	Параметры.Свойство("ВерсияФорматаОбмена", ВерсияФорматаОбмена);
	
	Заголовок = НСтр("ru='Оборудование:'") + Символы.НПП  + Строка(Идентификатор);
	
	времКаталогВыгрузки  = Неопределено;
	времКаталогЗагрузки = Неопределено;
	времИмяФайлаНастроек   = Неопределено;
	времИмяФайлаПрайсЛиста   = Неопределено;
	времИмяЗагружаемогоФайла = Неопределено;
	времКоличествоЭлементовВПакете = Неопределено;
	
	Параметры.ПараметрыОборудования.Свойство("КаталогВыгрузки", времКаталогВыгрузки);
	Параметры.ПараметрыОборудования.Свойство("КаталогЗагрузки", времКаталогЗагрузки);
	Параметры.ПараметрыОборудования.Свойство("ИмяФайлаПрайсЛиста", времИмяФайлаПрайсЛиста);
	Параметры.ПараметрыОборудования.Свойство("ИмяФайлаНастроек", времИмяФайлаНастроек);
	Параметры.ПараметрыОборудования.Свойство("ИмяЗагружаемогоФайла",времИмяЗагружаемогоФайла);
	Параметры.ПараметрыОборудования.Свойство("КоличествоЭлементовВПакете",времКоличествоЭлементовВПакете);

	КаталогВыгрузки = ?(времКаталогВыгрузки = Неопределено, "", времКаталогВыгрузки);
	КаталогЗагрузки  = ?(времКаталогЗагрузки = Неопределено, "", времКаталогЗагрузки);
	ИмяФайлаНастроек = ?(времИмяФайлаНастроек = Неопределено, "Settings", времИмяФайлаНастроек);
	ИмяФайлаПрайсЛиста = ?(времИмяФайлаПрайсЛиста = Неопределено, "PriceList", времИмяФайлаПрайсЛиста);
	ИмяЗагружаемогоФайла = ?(времИмяЗагружаемогоФайла = Неопределено, "SalesReport", времИмяЗагружаемогоФайла);
	КоличествоЭлементовВПакете = ?(времКоличествоЭлементовВПакете = Неопределено, 0, времКоличествоЭлементовВПакете);
	
	ВерсииФорматовОбмена = МенеджерОборудованияВызовСервера.ДоступныеВерсииФорматовОбмена();
	Для ИндексФормата = 0 По ВерсииФорматовОбмена.Количество() - 1 Цикл 
		ФорматОбмена = ВерсииФорматовОбмена.Получить(ИндексФормата);
		Элементы.ВерсияФорматаОбмена.СписокВыбора.Добавить(ФорматОбмена.Значение, ФорматОбмена.Представление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КаталогВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("КаталогВыгрузкиНачалоВыбораЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьВыборФайла(Оповещение, КаталогВыгрузки, "ВыборКаталога");
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("КаталогЗагрузкиНачалоВыбораЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьВыборФайла(Оповещение, КаталогЗагрузки, "ВыборКаталога");
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ТекстОшибки = "";
	ТекстОшибкиОбщий = "";

	Если ПустаяСтрока(КаталогВыгрузки) Тогда
		Результат = Ложь;
		ТекстОшибкиОбщий = ТекстОшибкиОбщий + ?(ПустаяСтрока(ТекстОшибкиОбщий), "", Символы.ПС); 
		ТекстОшибкиОбщий = ТекстОшибкиОбщий + НСтр("ru='Каталог выгрузки не указан.'"); 
	КонецЕсли;
	
	Если ПустаяСтрока(КаталогЗагрузки) Тогда
		Результат = Ложь;
		ТекстОшибкиОбщий = ТекстОшибкиОбщий + ?(ПустаяСтрока(ТекстОшибкиОбщий), "", Символы.ПС); 
		ТекстОшибкиОбщий = ТекстОшибкиОбщий + НСтр("ru='Каталог загрузки не указан.'"); 
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяФайлаПрайсЛиста) Тогда
		Результат = Ложь;
		ТекстОшибкиОбщий = ТекстОшибкиОбщий + ?(ПустаяСтрока(ТекстОшибкиОбщий), "", Символы.ПС); 
		ТекстОшибкиОбщий = ТекстОшибкиОбщий + НСтр("ru='Имя файла прайс-листа не указано.'"); 
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяЗагружаемогоФайла) Тогда
		Результат = Ложь;
		ТекстОшибкиОбщий = ТекстОшибкиОбщий + ?(ПустаяСтрока(ТекстОшибкиОбщий), "", Символы.ПС); 
		ТекстОшибкиОбщий = ТекстОшибкиОбщий + НСтр("ru='Имя файла загрузки не указано.'"); 
	КонецЕсли;
	
	Если Не ПустаяСтрока(ИмяЗагружаемогоФайла) И Не ПустаяСтрока(ИмяФайлаПрайсЛиста) Тогда
		Если Лев(ИмяЗагружаемогоФайла, СтрДлина(ИмяФайлаПрайсЛиста)) = ИмяФайлаПрайсЛиста Тогда
			Результат = Ложь;
			ТекстОшибкиОбщий = ТекстОшибкиОбщий + ?(ПустаяСтрока(ТекстОшибкиОбщий), "", Символы.ПС); 
			ТекстОшибкиОбщий = ТекстОшибкиОбщий + НСтр("ru='Имена файлов не должны пересекаться.'"); 
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстОшибкиОбщий) Тогда
		
		НовыеЗначениеПараметров = Новый Структура;
		НовыеЗначениеПараметров.Вставить("КаталогВыгрузки", КаталогВыгрузки);
		НовыеЗначениеПараметров.Вставить("ИмяФайлаНастроек", ИмяФайлаНастроек);
		НовыеЗначениеПараметров.Вставить("ИмяФайлаПрайсЛиста", ИмяФайлаПрайсЛиста);
		НовыеЗначениеПараметров.Вставить("КаталогЗагрузки", КаталогЗагрузки);
		НовыеЗначениеПараметров.Вставить("ИмяЗагружаемогоФайла", ИмяЗагружаемогоФайла);
		НовыеЗначениеПараметров.Вставить("КоличествоЭлементовВПакете", КоличествоЭлементовВПакете);
		
		Результат = Новый Структура;
		Результат.Вставить("Идентификатор"        , Идентификатор);
		Результат.Вставить("ВерсияФорматаОбмена"  , ВерсияФорматаОбмена);
		Результат.Вставить("ПараметрыОборудования", НовыеЗначениеПараметров);
		
		Закрыть(Результат);
		
	Иначе
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru= 'При проверке были обнаружены следующие ошибки:'")+ Символы.ПС + ТекстОшибкиОбщий);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)
	
	ОчиститьСообщения();
	
	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("КаталогВыгрузки", КаталогВыгрузки);
	времПараметрыУстройства.Вставить("КаталогЗагрузки",	КаталогЗагрузки);
	времПараметрыУстройства.Вставить("ИмяФайлаПрайсЛиста", 	ИмяФайлаПрайсЛиста);
	времПараметрыУстройства.Вставить("ИмяЗагружаемогоФайла", 	ИмяЗагружаемогоФайла);
	времПараметрыУстройства.Вставить("КоличествоЭлементовВПакете", 	КоличествоЭлементовВПакете);

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ТестУстройства",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);

	ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
	                           И ВыходныеПараметры.Количество() >= 2,
	                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
	                           "");
	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура КаталогВыгрузкиНачалоВыбораЗавершение(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		КаталогВыгрузки = Результат[0];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогЗагрузкиНачалоВыбораЗавершение(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		КаталогЗагрузки = Результат[0];
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти