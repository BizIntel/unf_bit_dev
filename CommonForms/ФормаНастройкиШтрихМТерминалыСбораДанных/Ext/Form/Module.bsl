
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Идентификатор", Идентификатор);
	Параметры.Свойство("ДрайверОборудования", ДрайверОборудования);
	
	Заголовок = НСтр("ru='Оборудование:'") + Символы.НПП  + Строка(Идентификатор);
	
	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;
	
	СписокМодель = Элементы.Модель.СписокВыбора;
	СписокМодель.Добавить("Opticon DWT");
	СписокМодель.Добавить("Opticon OPL");
	СписокМодель.Добавить("Opticon PHL");
	СписокМодель.Добавить("Zebex PDx10");
	СписокМодель.Добавить("Zebex PDx20");
	
	СписокПорт = Элементы.Порт.СписокВыбора;
	Для Индекс = 1 По 64 Цикл
		СписокПорт.Добавить(Индекс, "COM" + СокрЛП(Индекс));
	КонецЦикла;

	СписокСкорость = Элементы.Скорость.СписокВыбора;
	СписокСкорость.Добавить(1,     "300 бод");
	СписокСкорость.Добавить(3,    "1200 бод");
	СписокСкорость.Добавить(4,    "2400 бод");
	СписокСкорость.Добавить(5,    "4800 бод");
	СписокСкорость.Добавить(7,    "9600 бод");
	СписокСкорость.Добавить(10,  "19200 бод");
	СписокСкорость.Добавить(11,  "38400 бод");
	СписокСкорость.Добавить(13,  "57600 бод");
	СписокСкорость.Добавить(14, "115200 бод");
	
	СписокЧетность = Элементы.Четность.СписокВыбора;
	СписокЧетность.Добавить(0, "Нет");
	СписокЧетность.Добавить(1, "Нечетность");
	СписокЧетность.Добавить(2, "Четность");
	СписокЧетность.Добавить(3, "Установлен");
	СписокЧетность.Добавить(4, "Сброшен");
	
	СписокБитыДанных = Элементы.БитыДанных.СписокВыбора;
	СписокБитыДанных.Добавить(3, "7 бит");
	СписокБитыДанных.Добавить(4, "8 бит");
	
	СписокСтопБиты = Элементы.СтопБиты.СписокВыбора;
	СписокСтопБиты.Добавить(0, "1 бит");
	СписокСтопБиты.Добавить(2, "2 бита");

	времПорт            = Неопределено;
	времСкорость        = Неопределено;
	времТаймаут         = Неопределено;
	времЧетность        = Неопределено;
	времБитыДанных      = Неопределено;
	времСтопБиты        = Неопределено;
	времТаблицаВыгрузки = Неопределено;
	времТаблицаЗагрузки = Неопределено;
	времРазделитель     = Неопределено;
	времФорматВыгрузки  = Неопределено;
	времФорматЗагрузки  = Неопределено;
	времМодель          = Неопределено;

	Параметры.ПараметрыОборудования.Свойство("Порт"            , времПорт);
	Параметры.ПараметрыОборудования.Свойство("Скорость"        , времСкорость);
	Параметры.ПараметрыОборудования.Свойство("Таймаут"         , времТаймаут);
	Параметры.ПараметрыОборудования.Свойство("Четность"        , времЧетность);
	Параметры.ПараметрыОборудования.Свойство("БитыДанных"      , времБитыДанных);
	Параметры.ПараметрыОборудования.Свойство("СтопБиты"        , времСтопБиты);
	Параметры.ПараметрыОборудования.Свойство("ТаблицаВыгрузки" , времТаблицаВыгрузки);
	Параметры.ПараметрыОборудования.Свойство("ТаблицаЗагрузки" , времТаблицаЗагрузки);
	Параметры.ПараметрыОборудования.Свойство("ФорматВыгрузки"  , времФорматВыгрузки);
	Параметры.ПараметрыОборудования.Свойство("ФорматЗагрузки"  , времФорматЗагрузки);
	Параметры.ПараметрыОборудования.Свойство("Модель"          , времМодель);
	
	Порт            = ?(времПорт            = Неопределено,    1, времПорт);
	Скорость        = ?(времСкорость        = Неопределено,    7, времСкорость);
	Таймаут         = ?(времТаймаут         = Неопределено, 3200, времТаймаут);
	Четность        = ?(времЧетность        = Неопределено,    0, времЧетность);
	БитыДанных      = ?(времБитыДанных      = Неопределено,    4, времБитыДанных);
	СтопБиты        = ?(времСтопБиты        = Неопределено,    0, времСтопБиты);
	ТаблицаВыгрузки = ?(времТаблицаВыгрузки = Неопределено,    1, времТаблицаВыгрузки);
	ТаблицаЗагрузки = ?(времТаблицаЗагрузки = Неопределено,    1, времТаблицаЗагрузки);
	
	Если времФорматВыгрузки <> Неопределено Тогда
		Для Каждого СтрокаБазы Из времФорматВыгрузки Цикл
			СтрокаТаблицы = ФорматВыгрузки.Добавить();
			СтрокаТаблицы.НомерПоля    = СтрокаБазы.НомерПоля;
			СтрокаТаблицы.Наименование = СтрокаБазы.Наименование;
		КонецЦикла;
	КонецЕсли;
	
	Если времФорматЗагрузки <> Неопределено Тогда
		Для Каждого СтрокаДокумента Из времФорматЗагрузки Цикл
			СтрокаТаблицы = ФорматЗагрузки.Добавить();
			СтрокаТаблицы.НомерПоля    = СтрокаДокумента.НомерПоля;
			СтрокаТаблицы.Наименование = СтрокаДокумента.Наименование;
		КонецЦикла;
	КонецЕсли;
	
	Модель = ?(времМодель = Неопределено, Элементы.Модель.СписокВыбора[0].Значение, времМодель);
	
	Элементы.ТестУстройства.Видимость = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	НовыеЗначениеПараметров = Новый Структура;
	НовыеЗначениеПараметров.Вставить("Порт"            , Порт);
	НовыеЗначениеПараметров.Вставить("Скорость"        , Скорость);
	НовыеЗначениеПараметров.Вставить("Таймаут"         , Таймаут);
	НовыеЗначениеПараметров.Вставить("Четность"        , Четность);
	НовыеЗначениеПараметров.Вставить("БитыДанных"      , БитыДанных);
	НовыеЗначениеПараметров.Вставить("СтопБиты"        , СтопБиты);
	НовыеЗначениеПараметров.Вставить("ТаблицаВыгрузки" , ТаблицаВыгрузки);
	НовыеЗначениеПараметров.Вставить("ТаблицаЗагрузки" , ТаблицаЗагрузки);
	НовыеЗначениеПараметров.Вставить("Модель"          , Модель);
	
	времФорматВыгрузки = Новый Массив();
	Для Каждого СтрокаТаблицы Из ФорматВыгрузки Цикл
		НоваяСтрока = Новый Структура("НомерПоля, Наименование",
		                              СтрокаТаблицы.НомерПоля,
		                              СтрокаТаблицы.Наименование);
		времФорматВыгрузки.Добавить(НоваяСтрока);
	КонецЦикла;
	НовыеЗначениеПараметров.Вставить("ФорматВыгрузки", времФорматВыгрузки);
	
	времФорматЗагрузки = Новый Массив();
	Для Каждого СтрокаТаблицы Из ФорматЗагрузки Цикл
		НоваяСтрока = Новый Структура("НомерПоля, Наименование",
		                              СтрокаТаблицы.НомерПоля,
		                              СтрокаТаблицы.Наименование);
		времФорматЗагрузки.Добавить(НоваяСтрока);
	КонецЦикла;
	НовыеЗначениеПараметров.Вставить("ФорматЗагрузки", времФорматЗагрузки);
	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор", Идентификатор);
	Результат.Вставить("ПараметрыОборудования", НовыеЗначениеПараметров);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)
	
	ОчиститьСообщения();
	
	РезультатТеста = Неопределено;
	
	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;
	
	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"           , Порт);
	времПараметрыУстройства.Вставить("Скорость"       , Скорость);
	времПараметрыУстройства.Вставить("Таймаут"        , Таймаут);
	времПараметрыУстройства.Вставить("Четность"       , Четность);
	времПараметрыУстройства.Вставить("БитыДанных"     , БитыДанных);
	времПараметрыУстройства.Вставить("СтопБиты"       , СтопБиты);
	времПараметрыУстройства.Вставить("ТаблицаВыгрузки", ТаблицаВыгрузки);
	времПараметрыУстройства.Вставить("ТаблицаЗагрузки", ТаблицаЗагрузки);
	времПараметрыУстройства.Вставить("Модель"         , Модель);

	времФорматВыгрузки = Новый Массив();
	Для Каждого СтрокаТаблицы Из ФорматВыгрузки Цикл
		НоваяСтрока = Новый Структура("НомерПоля, Наименование", СтрокаТаблицы.НомерПоля, СтрокаТаблицы.Наименование);
		времФорматВыгрузки.Добавить(НоваяСтрока);
	КонецЦикла;
	времПараметрыУстройства.Вставить("ФорматВыгрузки", времФорматВыгрузки);
	
	времФорматЗагрузки = Новый Массив();
	Для Каждого СтрокаТаблицы Из ФорматЗагрузки Цикл
		НоваяСтрока = Новый Структура("НомерПоля, Наименование", СтрокаТаблицы.НомерПоля, СтрокаТаблицы.Наименование);
		времФорматЗагрузки.Добавить(НоваяСтрока);
	КонецЦикла;
	времПараметрыУстройства.Вставить("ФорматЗагрузки", времФорматЗагрузки);
	
	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);
	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
		                           И ВыходныеПараметры.Количество() >= 2,
		                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1], "");
		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание), "", Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание), "", ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановкаДрайвераЗавершение(Результат, Параметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		АдресЗагрузкиДрайвера = "http://soft.shtrih-m.ru/programs/prilozhenie-task-m/";
		ПерейтиПоНавигационнойСсылке(АдресЗагрузкиДрайвера);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	ОчиститьСообщения();
	Текст = НСтр("ru = 'Установка производиться средствами дистрибутива поставщика.
		|Перейти на сайт поставщика для скачивания?'");
	Оповещение = Новый ОписаниеОповещения("УстановкаДрайвераЗавершение",  ЭтотОбъект);
	ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"           , Порт);
	времПараметрыУстройства.Вставить("Скорость"       , Скорость);
	времПараметрыУстройства.Вставить("Таймаут"        , Таймаут);
	времПараметрыУстройства.Вставить("Четность"       , Четность);
	времПараметрыУстройства.Вставить("БитыДанных"     , БитыДанных);
	времПараметрыУстройства.Вставить("СтопБиты"       , СтопБиты);
	времПараметрыУстройства.Вставить("ТаблицаВыгрузки", ТаблицаВыгрузки);
	времПараметрыУстройства.Вставить("ТаблицаЗагрузки", ТаблицаЗагрузки);
	времПараметрыУстройства.Вставить("Модель"         , Модель);

	времФорматВыгрузки = Новый Массив();
	Для Каждого СтрокаТаблицы Из ФорматВыгрузки Цикл
		НоваяСтрока = Новый Структура("НомерПоля, Наименование",
		                              СтрокаТаблицы.НомерПоля,
		                              СтрокаТаблицы.Наименование);
		времФорматВыгрузки.Добавить(НоваяСтрока);
	КонецЦикла;
	времПараметрыУстройства.Вставить("ФорматВыгрузки", времФорматВыгрузки);

	времФорматЗагрузки = Новый Массив();
	Для Каждого СтрокаТаблицы Из ФорматЗагрузки Цикл
		НоваяСтрока = Новый Структура("НомерПоля, Наименование",
		                              СтрокаТаблицы.НомерПоля,
		                              СтрокаТаблицы.Наименование);
		времФорматЗагрузки.Добавить(НоваяСтрока);
	КонецЦикла;
	времПараметрыУстройства.Вставить("ФорматЗагрузки", времФорматЗагрузки);

	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

	Элементы.УстановитьДрайвер.Доступность = Не (Драйвер = НСтр("ru='Установлен'"));

КонецПроцедуры

#КонецОбласти