
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Процедура заполняет параметры формы.
//
Процедура ПолучитьЗначенияПараметровФормы()
	
	ВалютаДокумента				   = Параметры.ВалютаДокумента;
	ВалютаДокументаПередИзменением = Параметры.ВалютаДокумента;
	Курс = Параметры.Курс;
	КурсПередИзменением = Параметры.Курс;
	Кратность = Параметры.Кратность;
	КратностьПередИзменением = Параметры.Кратность;
	
	СуммаВключаетНДС 		= Параметры.СуммаВключаетНДС;
	СуммаВключаетНДСПередИзменением  = Параметры.СуммаВключаетНДС;
	
	НДСВключатьВСтоимость = Параметры.НДСВключатьВСтоимость;
	НДСВключатьВСтоимостьПередИзменением = Параметры.НДСВключатьВСтоимость;
	
	ДатаДокумента = Параметры.ДатаДокумента;
	
	// Налогообложение НДС.
	Если Параметры.Свойство("НалогообложениеНДС") Тогда
		
		НалогообложениеНДС = Параметры.НалогообложениеНДС;
		НалогообложениеНДСПриОткрытии = Параметры.НалогообложениеНДС;
		НалогообложениеНДСЕстьРеквизит = Истина;
		
	Иначе
		
		Элементы.НалогообложениеНДС.Видимость = Ложь;
		НалогообложениеНДСЕстьРеквизит = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ПолучитьЗначенияПараметровФормы()

&НаСервере
// Процедура заполняет таблицу курсов валют
//
Процедура ЗаполнитьТаблицуКурсовВалют()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, ) КАК КурсыВалютСрезПоследних";
	
	ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	КурсыВалют.Загрузить(ТаблицаРезультатаЗапроса);
	
КонецПроцедуры // ЗаполнитьТаблицуКурсовВалют()

&НаКлиенте
// Процедура заполнения курса и кратности валюты документа.
//
Процедура ЗаполнитьКурсКратностьВалютыДокумента()
	
	Если ЗначениеЗаполнено(ВалютаДокумента) Тогда
		МассивКурсКратность = КурсыВалют.НайтиСтроки(Новый Структура("Валюта", ВалютаДокумента));
		Если ЗначениеЗаполнено(МассивКурсКратность) Тогда
			Курс = МассивКурсКратность[0].Курс;
			Кратность = МассивКурсКратность[0].Кратность;
		Иначе
			Курс = 0;
			Кратность = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьКурсКратностьВалютыДокумента()

&НаКлиенте
// Процедура проверяет правильность заполнения реквизитов формы.
//
Процедура ПроверитьЗаполнениеРеквизитовФормы(Отказ)
    	
	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не выбрана валюта для заполнения!'");
		Сообщение.Поле = "ВалютаДокумента";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Курс) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Обнаружен нулевой курс валюты документа!'");
		Сообщение.Поле = "Курс";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Кратность) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Обнаружена нулевая кратность курса валюты документа!'");
		Сообщение.Поле = "КратностьРасчетов";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;	
	
	// Налогообложение НДС.
	Если НалогообложениеНДСЕстьРеквизит Тогда
		Если НЕ ЗначениеЗаполнено(НалогообложениеНДС) Тогда
            Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Не заполнено налогообложение!'");
			Сообщение.Поле = "НалогообложениеНДС";
			Сообщение.Сообщить();
			Отказ = Истина;
   		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеРеквизитовФормы()

&НаКлиенте
// Процедура проверяет модифицированность формы.
//
Функция ПроверитьМодифицированностьФормы()

	БылиВнесеныИзменения = Ложь;

	ИзмененияНалогообложениеНДС = ?(НалогообложениеНДСЕстьРеквизит, НалогообложениеНДСПриОткрытии <> НалогообложениеНДС, Ложь);
	
	Если ПересчитатьЦеныПоВалюте 
		ИЛИ (СуммаВключаетНДСПередИзменением <> СуммаВключаетНДС)
		ИЛИ (НДСВключатьВСтоимостьПередИзменением <> НДСВключатьВСтоимость)
		ИЛИ (КурсПередИзменением <> Курс)
		ИЛИ (КратностьПередИзменением <> Кратность)
		ИЛИ (ВалютаДокументаПередИзменением <> ВалютаДокумента) 
		ИЛИ ИзмененияНалогообложениеНДС Тогда

        БылиВнесеныИзменения = Истина;

	КонецЕсли; 
	
	Возврат БылиВнесеныИзменения;

КонецФункции // ПроверитьМодифицированностьФормы()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере формы.
// В процедуре осуществляется
// - инициализация параметров формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьЗначенияПараметровФормы();
	ЗаполнитьТаблицуКурсовВалют();
		
КонецПроцедуры // ПриСозданииНаСервере()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
// Процедура - обработчик события нажатия кнопки Отмена.
//
Процедура ОтменаВыполнить()
	
	СтруктураВозврата = Новый Структура();
	СтруктураВозврата.Вставить("КодВозвратаДиалога", КодВозвратаДиалога.Отмена);
	СтруктураВозврата.Вставить("БылиВнесеныИзменения", Ложь);
	Закрыть(СтруктураВозврата);

КонецПроцедуры // ОтменаВыполнить()

&НаКлиенте
// Процедура - обработчик события нажатия кнопки ОК.
//
Процедура КнОКВыполнить()
	
	Отказ = Ложь;

	ПроверитьЗаполнениеРеквизитовФормы(Отказ);
	Если НЕ Отказ Тогда
		БылиВнесеныИзменения = ПроверитьМодифицированностьФормы();
		СтруктураВозврата = Новый Структура();
		СтруктураВозврата.Вставить("ВалютаДокумента", ВалютаДокумента);
		СтруктураВозврата.Вставить("Курс", Курс);
		СтруктураВозврата.Вставить("Кратность", Кратность);
		СтруктураВозврата.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);
		СтруктураВозврата.Вставить("НДСВключатьВСтоимость", НДСВключатьВСтоимость);
		СтруктураВозврата.Вставить("ПересчитатьЦеныПоВалюте", ПересчитатьЦеныПоВалюте);
		СтруктураВозврата.Вставить("НалогообложениеНДС", НалогообложениеНДС);
		СтруктураВозврата.Вставить("ПредНалогообложениеНДС", НалогообложениеНДСПриОткрытии);
		СтруктураВозврата.Вставить("БылиВнесеныИзменения", БылиВнесеныИзменения);
		СтруктураВозврата.Вставить("КодВозвратаДиалога", КодВозвратаДиалога.ОК);
		Закрыть(СтруктураВозврата);
	КонецЕсли;

КонецПроцедуры // КнОКВыполнить()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Валюта.
//
Процедура ВалютаПриИзменении(Элемент)
	
	ЗаполнитьКурсКратностьВалютыДокумента();
	Если ЗначениеЗаполнено(ВалютаДокумента) 
	   И ВалютаДокументаПередИзменением <> ВалютаДокумента Тогда
  		ПересчитатьЦеныПоВалюте = Истина;
		ЗаполнитьКурсКратностьВалютыДокумента();
  	Иначе
  		ПересчитатьЦеныПоВалюте = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ВалютаПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода КурсВалютыДокумента.
//
Процедура КурсВалютыДокументаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Курс) 
	   И КурсПередИзменением <> Курс Тогда
		ПересчитатьЦеныПоВалюте = Истина;
	Иначе
		ПересчитатьЦеныПоВалюте = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода КратностьВалютыДокумента.
//
Процедура КратностьВалютыДокументаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Кратность) 
	   И КратностьПередИзменением <> Кратность Тогда
		ПересчитатьЦеныПоВалюте = Истина;
	Иначе
		ПересчитатьЦеныПоВалюте = Ложь;
	КонецЕсли;
	
КонецПроцедуры