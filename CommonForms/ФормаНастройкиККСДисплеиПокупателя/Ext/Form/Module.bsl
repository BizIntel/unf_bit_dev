
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Идентификатор", Идентификатор);
	Параметры.Свойство("ДрайверОборудования", ДрайверОборудования);
	
	Заголовок = НСтр("ru='Оборудование:'") + Символы.НПП  + Строка(Идентификатор);

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СписокПорт = Элементы.Порт.СписокВыбора;
	Для Номер = 1 По 64 Цикл
		СписокПорт.Добавить(Номер, "COM" + Формат(Номер, "ЧЦ=2; ЧДЦ=0; ЧН=0; ЧГ=0"));
	КонецЦикла;
	
	СписокМодель = Элементы.Модель.СписокВыбора;
	СписокМодель.Добавить("Spark-PD-2001");

	СписокСкорость = Элементы.Скорость.СписокВыбора;
	СписокСкорость.Добавить(9600,   "9600");
    СписокСкорость.Добавить(19200,  "19200");
	СписокСкорость.Добавить(57600,  "57600");
	СписокСкорость.Добавить(115200, "115200");
	
	СписокЧетность = Элементы.Четность.СписокВыбора;
	СписокЧетность.Добавить(0, НСтр("ru='Нет'"));
	СписокЧетность.Добавить(1, НСтр("ru='Нечетность'"));
	СписокЧетность.Добавить(2, НСтр("ru='Четность'"));
	СписокЧетность.Добавить(3, НСтр("ru='Установлен'"));
	СписокЧетность.Добавить(4, НСтр("ru='Сброшен'"));

	СписокБитыДанных = Элементы.БитыДанных.СписокВыбора;
	СписокБитыДанных.Добавить(7, "7 бит");
	СписокБитыДанных.Добавить(8, "8 бит");

	СписокСтопБиты = Элементы.СтопБиты.СписокВыбора;
	СписокСтопБиты.Добавить(1, "1 бит");
	СписокСтопБиты.Добавить(2, "2 бита");
	
	времМодель     = Неопределено;
	времПорт       = Неопределено;
	времСкорость   = Неопределено;
	времЧетность   = Неопределено;
	времБитыДанных = Неопределено;
	времСтопБиты   = Неопределено;
	
	Параметры.ПараметрыОборудования.Свойство("Модель",          времМодель);
	Параметры.ПараметрыОборудования.Свойство("Порт",            времПорт);
	Параметры.ПараметрыОборудования.Свойство("Скорость",        времСкорость);
	Параметры.ПараметрыОборудования.Свойство("Четность",        времЧетность);
	Параметры.ПараметрыОборудования.Свойство("БитыДанных",      времБитыДанных);
	Параметры.ПараметрыОборудования.Свойство("СтопБиты",        времСтопБиты);
	
	Модель          = ?(времМодель          = Неопределено, "Spark-PD-2001", времМодель);
	Порт            = ?(времПорт            = Неопределено,               1, времПорт);
	Скорость        = ?(времСкорость        = Неопределено,            9600, времСкорость);
	Четность        = ?(времЧетность        = Неопределено,               0, времЧетность);
	БитыДанных      = ?(времБитыДанных      = Неопределено,               7, времБитыДанных);
	СтопБиты        = ?(времСтопБиты        = Неопределено,               1, времСтопБиты);
	
	Элементы.ТестУстройства.Видимость    = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();
	УстановитьДоступностьЭлементов();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	НовыеЗначениеПараметров = Новый Структура;
	НовыеЗначениеПараметров.Вставить("Модель"     , Модель);
	НовыеЗначениеПараметров.Вставить("Порт"       , Порт);
	НовыеЗначениеПараметров.Вставить("Скорость"   , Скорость);
	НовыеЗначениеПараметров.Вставить("Четность"   , Четность);
	НовыеЗначениеПараметров.Вставить("БитыДанных" , БитыДанных);
	НовыеЗначениеПараметров.Вставить("СтопБиты"   , СтопБиты);
	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор", Идентификатор);
	Результат.Вставить("ПараметрыОборудования", НовыеЗначениеПараметров);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайверИзАрхиваПриЗавершении(Результат) Экспорт 
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Установка драйвера завершена.'")); 
	ОбновитьИнформациюОДрайвере();
	
КонецПроцедуры 

&НаКлиенте
Процедура УстановитьДрайверИзДистрибутиваПриЗавершении(Результат, Параметры) Экспорт 
	
	Если Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Установка драйвера завершена.'")); 
		ОбновитьИнформациюОДрайвере();
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='При установке драйвера из дистрибутива произошла ошибка.'")); 
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	ОчиститьСообщения();
	ОповещенияДрайверИзДистрибутиваПриЗавершении = Новый ОписаниеОповещения("УстановитьДрайверИзДистрибутиваПриЗавершении", ЭтотОбъект);
	ОповещенияДрайверИзАрхиваПриЗавершении = Новый ОписаниеОповещения("УстановитьДрайверИзАрхиваПриЗавершении", ЭтотОбъект);
	МенеджерОборудованияКлиент.УстановитьДрайвер(ДрайверОборудования, ОповещенияДрайверИзДистрибутиваПриЗавершении, ОповещенияДрайверИзАрхиваПриЗавершении);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)
	
	ОчиститьСообщения();
	
	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт", Порт);
	времПараметрыУстройства.Вставить("Скорость", Скорость);
	времПараметрыУстройства.Вставить("Четность", Четность);
	времПараметрыУстройства.Вставить("БитыДанных", БитыДанных);
	времПараметрыУстройства.Вставить("СтопБиты", СтопБиты);
	
	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);
	ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
	                           И ВыходныеПараметры.Количество() >= 2,
	                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
	                           "");
	
	ТекстСообщения = ?(Результат,  НСтр("ru = 'Тест успешно выполнен.%ДополнительноеОписание%'"),
	                               НСтр("ru = 'Тест не пройден.%ДополнительноеОписание%'"));
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
	                             "", Символы.ПС + ДополнительноеОписание));
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт", Порт);
	времПараметрыУстройства.Вставить("Скорость", Скорость);
	времПараметрыУстройства.Вставить("Четность", 0);
	времПараметрыУстройства.Вставить("БитыДанных", 8);
	времПараметрыУстройства.Вставить("СтопБиты", 1);
	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

	Элементы.УстановитьДрайвер.Доступность = Не (Драйвер = НСтр("ru='Установлен'"));

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()

	Элементы.Порт.Доступность       = Истина;
	Элементы.Скорость.Доступность   = Истина;
	Элементы.Четность.Доступность   = Истина;
	Элементы.БитыДанных.Доступность = Истина;
	Элементы.СтопБиты.Доступность   = Истина;
	
КонецПроцедуры

#КонецОбласти