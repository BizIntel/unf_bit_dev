#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Сертификат = Параметры.Сертификат;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Просмотр сертификата: %1'"), Сертификат.Наименование);
		
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Сертификат,, ?(Сертификат.Свойство("Сертификат"), "Сертификат", Неопределено));
	
	СвойстваВладельца = РазобратьСтрокуСубъекта(Сертификат.Владелец);
	ВладелецОбщееИмя = 			СвойстваВладельца.Получить("CN");
	ВладелецОрганизация = 		СвойстваВладельца.Получить("O");
	ВладелецПодразделение = 	СвойстваВладельца.Получить("OU");
	
	СвойстваПоставщика = РазобратьСтрокуСубъекта(Сертификат.Поставщик);
	ПоставщикОбщееИмя = 		СвойстваПоставщика.Получить("CN");
	ПоставщикОрганизация = 		СвойстваПоставщика.Получить("O");
	ПоставщикПодразделение = 	СвойстваПоставщика.Получить("OU");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Проверить(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПроверитьЗавершение", ЭтотОбъект);
	КриптографияЭДКОКлиент.ПроверитьСертификат(Оповещение, Сертификат);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗавершение(Результат, ВходящийКонтекст) Экспорт
	
	Если Результат.Выполнено И Результат.Валиден Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Сертификат действителен'"));
	ИначеЕсли Результат.Выполнено И Не Результат.Валиден Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Сертификат не действителен.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСертификат(Команда)
	
	Если ЭтоЭлектроннаяПодписьВМоделиСервиса Тогда
		АдресФайла = ПолучитьСертификатНаСервере(Отпечаток, УникальныйИдентификатор);
		Если ЗначениеЗаполнено(АдресФайла) Тогда
			ПолучитьФайл(АдресФайла, Отпечаток + ".cer", Истина);
		КонецЕсли;
	Иначе
		Оповещение = Новый ОписаниеОповещения(
			"ОткрытьСертификатПослеЭкспортаСертификата", ЭтотОбъект);
		КриптографияЭДКОКлиент.ЭкспортироватьСертификатВФайл(
			Оповещение, Сертификат, ".cer");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСертификатПослеЭкспортаСертификата(Результат, ВходящийКонтекст) Экспорт
	
	Если Результат.Выполнено Тогда
		ОперацииСФайламиЭДКОКлиент.ОткрытьФайл(Результат.ИмяФайлаСертификата);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось открыть сертификат.'"));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьСертификатНаСервере(Отпечаток, Идентификатор)
	
	Сертификат = ХранилищеСертификатовВМоделиСервиса.ПолучитьСертификат(Новый Структура("Отпечаток", Отпечаток));
	Если ЗначениеЗаполнено(Сертификат) Тогда
		АдресФайла = ПоместитьВоВременноеХранилище(Сертификат, Идентификатор);
		Возврат АдресФайла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РазобратьСтрокуСубъекта(СтрокаДляРазбора)
	
	Составляющие = Новый Соответствие;
	
	ПодстрокаДляРазбора = СтрокаДляРазбора;
	
	ИндексРавно = СтрНайти(ПодстрокаДляРазбора, "=", НаправлениеПоиска.СКонца);
	Пока ИндексРавно Цикл
		Значение = Сред(ПодстрокаДляРазбора, ИндексРавно + 1);
		Если Прав(Значение, 1) = "," Тогда
			СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(Значение);
		КонецЕсли;
		
		ПодстрокаДляРазбора = Лев(ПодстрокаДляРазбора, ИндексРавно - 1);
		
		ИндексЗапятая = СтрНайти(ПодстрокаДляРазбора, ",", НаправлениеПоиска.СКонца);
		Если ИндексЗапятая Тогда
			Ключ = Сред(ПодстрокаДляРазбора, ИндексЗапятая + 1);
			ПодстрокаДляРазбора = Лев(ПодстрокаДляРазбора, ИндексЗапятая);
		Иначе
			Ключ = ПодстрокаДляРазбора;	
		КонецЕсли;
		ИндексРавно = СтрНайти(ПодстрокаДляРазбора, "=", НаправлениеПоиска.СКонца);
		
		Составляющие.Вставить(Ключ, Значение);
	КонецЦикла;
	
	Возврат Составляющие;	
	
КонецФункции

#КонецОбласти