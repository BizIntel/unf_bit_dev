                                    
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Идентификатор", Идентификатор);
	Параметры.Свойство("ДрайверОборудования", ДрайверОборудования);
	
	Заголовок = НСтр("ru='Оборудование:'") + Символы.НПП  + Строка(Идентификатор);
	
	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СписокМодель = Элементы.Модель.СписокВыбора;
	СписокМодель.Добавить(0 , НСтр("ru='Штрих-М: ЭЛВЕС-МИКРО-Ф'"));
	СписокМодель.Добавить(13, НСтр("ru='АТОЛ: Триум-Ф версия 01'"));
	СписокМодель.Добавить(14, НСтр("ru='АТОЛ: ФЕЛИКС-РФ версия 02'"));
	СписокМодель.Добавить(15, НСтр("ru='АТОЛ: ФЕЛИКС-02К/ЕНВД версия 01'"));
	СписокМодель.Добавить(16, НСтр("ru='АТОЛ: МЕРКУРИЙ-140Ф версия 02'"));
	СписокМодель.Добавить(16, НСтр("ru='АТОЛ: МЕРКУРИЙ-140Ф версия 03'"));
	СписокМодель.Добавить(17, НСтр("ru='Инкотекс: МЕРКУРИЙ 114.1Ф версия 01'"));
	СписокМодель.Добавить(17, НСтр("ru='Инкотекс: МЕРКУРИЙ 114.1Ф версия 02'"));
	СписокМодель.Добавить(18, НСтр("ru='Штрих-М: ШТРИХ-ФР-Ф версия 03'"));
	СписокМодель.Добавить(18, НСтр("ru='Штрих-М: ШТРИХ-ФР-Ф версия 04'"));
	СписокМодель.Добавить(19, НСтр("ru='Штрих-М: ЭЛВЕС-МИНИ-ФР-Ф версия 02'"));
	СписокМодель.Добавить(20, НСтр("ru='АТОЛ: ТОРНАДО (МЕРКУРИЙ-114.1 Ф версия 04)'"));
	СписокМодель.Добавить(23, НСтр("ru='АТОЛ: ТОРНАДО-К (МЕРКУРИЙ MS-K версия 02)'"));
	СписокМодель.Добавить(24, НСтр("ru='АТОЛ: ФЕЛИКС-РК/ЕНВД версия 01'"));
	СписокМодель.Добавить(25, НСтр("ru='Штрих-М: ШТРИХ-ФР-К версия 01'"));
	СписокМодель.Добавить(26, НСтр("ru='Штрих-М: ЭЛВЕС-ФР-К версия 01'"));
	СписокМодель.Добавить(27, НСтр("ru='АТОЛ: ФЕЛИКС-3СК версия 01'"));
	СписокМодель.Добавить(28, НСтр("ru='Штрих-М: ШТРИХ-МИНИ-ФР-К версия 01'"));
	СписокМодель.Добавить(30, НСтр("ru='АТОЛ: FPrint-02K/ЕНВД'"));
	СписокМодель.Добавить(31, НСтр("ru='АТОЛ: FPrint-03K/ЕНВД'"));
	СписокМодель.Добавить(32, НСтр("ru='АТОЛ: FPrint-88K/ЕНВД'"));
	СписокМодель.Добавить(33, НСтр("ru='АТОЛ: BIXOLON-01K'"));
	СписокМодель.Добавить(35, НСтр("ru='АТОЛ: FPrint-5200K/ЕНВД'"));
	СписокМодель.Добавить(41, НСтр("ru='АТОЛ: PayVKP-80K'"));
	СписокМодель.Добавить(42, НСтр("ru='АТОЛ: Аура-01ФРKZ'"));
	СписокМодель.Добавить(43, НСтр("ru='АТОЛ: PayVKP-80KZ'"));
	СписокМодель.Добавить(45, НСтр("ru='АТОЛ: PayPPU-700K'"));
	СписокМодель.Добавить(46, НСтр("ru='АТОЛ: PayCTS-2000K'"));   
	СписокМодель.Добавить(47, НСтр("ru='АТОЛ: FPrint-55K/ЕНВД'"));
	СписокМодель.Добавить(50, НСтр("ru='АТОЛ: Wincor Nixdorf TH-230K'"));
	СписокМодель.Добавить(51, НСтр("ru='АТОЛ: FPrint-11K/ПТК/ЕНВД'"));
	СписокМодель.Добавить(52, НСтр("ru='АТОЛ: FPrint-22K/ПТК/ЕНВД'"));
	СписокМодель.Добавить(53, НСтр("ru='АТОЛ: FPrint-77ПТК/ЕНВД'"));
	СписокМодель.Добавить(101, НСтр("ru='ПИЛОТ: POSPrint FP410K'"));
	СписокМодель.Добавить(102, НСтр("ru='МультиСофт: MSTAR-Ф'"));
	СписокМодель.Добавить(103, НСтр("ru='Мария-301 МТМ Т7'"));
	СписокМодель.Добавить(104, НСтр("ru='Искра: ПРИМ-88ТК'"));
	СписокМодель.Добавить(105, НСтр("ru='Искра: ПРИМ-08ТК'"));
	СписокМодель.Добавить(106, НСтр("ru='СЕРВИС ПЛЮС: СП101ФР-К'"));
	СписокМодель.Добавить(107, НСтр("ru='Штрих-М: ШТРИХ-КОМБО-ФР-К'"));
	СписокМодель.Добавить(108, НСтр("ru='Искра: ПРИМ-07К'"));
	СписокМодель.Добавить(109, НСтр("ru='Юнисистем: МИНИ-ФП6'"));
	СписокМодель.Добавить(110, НСтр("ru='Штрих-М: ШТРИХ-М-ФР-К'"));
	СписокМодель.Добавить(111, НСтр("ru='МультиСофт: MSTAR-TK.1'"));
	СписокМодель.Добавить(113, НСтр("ru='Штрих-М: ШТРИХ-LIGHT-ФР-К'"));
	СписокМодель.Добавить(114, НСтр("ru='КристаллСервис: ПИРИТ ФР01К'"));
	СписокМодель.Добавить(115, НСтр("ru='Штрих-М: NCR-001К'"));
	СписокМодель.Добавить(118, НСтр("ru='Штрих-М: ШТРИХ-ФР-К (БЕЛАРУСЬ)'"));
	СписокМодель.СортироватьПоПредставлению();

	СписокПорт = Элементы.Порт.СписокВыбора;
	Для Номер = 1 По 64 Цикл
		СписокПорт.Добавить(Номер, "COM" + Формат(Номер, "ЧЦ=2; ЧДЦ=0; ЧН=0; ЧГ=0"));
	КонецЦикла;

	СписокСкорость = Элементы.Скорость.СписокВыбора;
	СписокСкорость.Добавить(1200,   "1200");
	СписокСкорость.Добавить(2400,   "2400");
	СписокСкорость.Добавить(4800,   "4800");
	СписокСкорость.Добавить(9600,   "9600");
	СписокСкорость.Добавить(19200,  "19200");
	СписокСкорость.Добавить(38400,  "38400");
	СписокСкорость.Добавить(57600,  "57600");
	СписокСкорость.Добавить(115200, "115200");
	
	времПорт                       = Неопределено;
	времСкорость                   = Неопределено;
	времТаймаут                    = Неопределено;
	времПарольПользователя         = Неопределено;
	времПарольУстройства           = Неопределено;
	времПечататьНалогиВЧеке        = Неопределено;
	времНомерСекции                = Неопределено;
	времКодСимволаЧастичногоОтреза = Неопределено;
	времМодель                     = Неопределено;

	Параметры.ПараметрыОборудования.Свойство("Порт"                      , времПорт);
	Параметры.ПараметрыОборудования.Свойство("Скорость"                  , времСкорость);
	Параметры.ПараметрыОборудования.Свойство("Таймаут"                   , времТаймаут);
	Параметры.ПараметрыОборудования.Свойство("ПарольПользователя"        , времПарольПользователя);
	Параметры.ПараметрыОборудования.Свойство("ПарольУстройства"          , времПарольУстройства);
	Параметры.ПараметрыОборудования.Свойство("ПечататьНалогиВЧеке"       , времПечататьНалогиВЧеке);
	Параметры.ПараметрыОборудования.Свойство("НомерСекции"               , времНомерСекции);
	Параметры.ПараметрыОборудования.Свойство("КодСимволаЧастичногоОтреза", времКодСимволаЧастичногоОтреза);
	Параметры.ПараметрыОборудования.Свойство("Модель"                    , времМодель);

	Порт                       = ?(времПорт                       = Неопределено,      1, времПорт);
	Скорость                   = ?(времСкорость                   = Неопределено, 115200, времСкорость);
	Таймаут                    = ?(времТаймаут                    = Неопределено,    150, времТаймаут);
	ПарольПользователя         = ?(времПарольПользователя         = Неопределено,   "30", времПарольПользователя);
	ПарольУстройства           = ?(времПарольУстройства           = Неопределено,    "0", времПарольУстройства);
	ПечататьНалогиВЧеке        = ?(времПечататьНалогиВЧеке        = Неопределено,   Ложь, времПечататьНалогиВЧеке);
	НомерСекции                = ?(времНомерСекции                = Неопределено,      0, времНомерСекции);
	КодСимволаЧастичногоОтреза = ?(времКодСимволаЧастичногоОтреза = Неопределено,     22, времКодСимволаЧастичногоОтреза);
	Модель                     = ?(времМодель                     = Неопределено, Элементы.Модель.СписокВыбора[0].Значение, времМодель);

	Элементы.ТестУстройства.Видимость    = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	НовыеЗначениеПараметров = Новый Структура;
	НовыеЗначениеПараметров.Вставить("Порт"                       , Порт);
	НовыеЗначениеПараметров.Вставить("Скорость"                   , Скорость);
	НовыеЗначениеПараметров.Вставить("Таймаут"                    , Таймаут);
	НовыеЗначениеПараметров.Вставить("ПарольПользователя"         , ПарольПользователя);
	НовыеЗначениеПараметров.Вставить("ПарольУстройства"           , ПарольУстройства);
	НовыеЗначениеПараметров.Вставить("ПечататьНалогиВЧеке"        , ПечататьНалогиВЧеке);
	НовыеЗначениеПараметров.Вставить("НомерСекции"                , НомерСекции);
	НовыеЗначениеПараметров.Вставить("КодСимволаЧастичногоОтреза" , КодСимволаЧастичногоОтреза);
	НовыеЗначениеПараметров.Вставить("Модель"                     , Модель);
	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор", Идентификатор);
	Результат.Вставить("ПараметрыОборудования", НовыеЗначениеПараметров);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)
	
	ОчиститьСообщения();
	
	РезультатТеста = Неопределено;
	
	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"                      , Порт);
	времПараметрыУстройства.Вставить("Скорость"                  , Скорость);
	времПараметрыУстройства.Вставить("Таймаут"                   , Таймаут);
	времПараметрыУстройства.Вставить("ПарольПользователя"        , ПарольПользователя);
	времПараметрыУстройства.Вставить("ПарольУстройства"          , ПарольУстройства);
	времПараметрыУстройства.Вставить("ПечататьНалогиВЧеке"       , ПечататьНалогиВЧеке);
	времПараметрыУстройства.Вставить("НомерСекции"               , НомерСекции);
	времПараметрыУстройства.Вставить("КодСимволаЧастичногоОтреза", КодСимволаЧастичногоОтреза);
	времПараметрыУстройства.Вставить("Модель"                    , Модель);

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);

	ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
	                           И ВыходныеПараметры.Количество() >= 2,
	                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
	                           "");
	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановкаДрайвераЗавершение(Результат, Параметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		АдресЗагрузкиДрайвера = "http://www.atol.ru/link/cat/7/";
		ПерейтиПоНавигационнойСсылке(АдресЗагрузкиДрайвера);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	ОчиститьСообщения();
	Текст = НСтр("ru = 'Установка производиться средствами дистрибутива поставщика.
		|Перейти на сайт поставщика для скачивания?'");
	Оповещение = Новый ОписаниеОповещения("УстановкаДрайвераЗавершение",  ЭтотОбъект);
	ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"                      , Порт);
	времПараметрыУстройства.Вставить("Скорость"                  , Скорость);
	времПараметрыУстройства.Вставить("Таймаут"                   , Таймаут);
	времПараметрыУстройства.Вставить("ПарольПользователя"        , ПарольПользователя);
	времПараметрыУстройства.Вставить("ПарольУстройства"          , ПарольУстройства);
	времПараметрыУстройства.Вставить("ПечататьНалогиВЧеке"       , ПечататьНалогиВЧеке);
	времПараметрыУстройства.Вставить("НомерСекции"               , НомерСекции);
	времПараметрыУстройства.Вставить("КодСимволаЧастичногоОтреза", КодСимволаЧастичногоОтреза);
	времПараметрыУстройства.Вставить("Модель"                    , Модель);

	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

	Элементы.УстановитьДрайвер.Доступность = Не (Драйвер = НСтр("ru='Установлен'"));

КонецПроцедуры

#КонецОбласти