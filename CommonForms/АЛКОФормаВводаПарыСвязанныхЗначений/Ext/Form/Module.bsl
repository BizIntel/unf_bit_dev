
////////////////////////////////////////////////////////////////////////////////
//
// Параметры формы:
//
//	 	ЗаголовокФормы 				- Строка - Заголовок формы, по умолчанию "Ввод значения".
// 		ИмяПоляКод	 				- Строка - Надпись над полем "Код", по умолчанию "Код".
// 		ИмяПоляЗначение				- Строка - Надпись над полем "Значение", по умолчанию "Значение".
// 		ДлинаПоляКода			 	- Число  - Ширина поля "Код".
// 		ДлинаПоляЗначения			- Число  - Ширина поля "Значение".
//		Название					- Строка - Первоначальное значение для поля "Значение".
//		Код							- Строка - Первоначальное значение для поля "Код".
//		МногострочныйРежимЗначения	- Булево - Режим многострочности для поля "Значение", если в параметре
//									Название передана многострочная строка, режим многострочности всегда включен.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаголовокФормы = Параметры.ЗаголовокФормы;
	Заголовок = ?(НЕ ПустаяСтрока(ЗаголовокФормы), ЗаголовокФормы, Заголовок);
	
	ИмяПоляКод 		= Параметры.ИмяПоляКод;
	ИмяПоляЗначение = Параметры.ИмяПоляЗначение;
	Элементы.Код.Заголовок 		= ?(НЕ ПустаяСтрока(ИмяПоляКод), ИмяПоляКод, Элементы.Код.Заголовок);
	Элементы.Значение.Заголовок = ?(НЕ ПустаяСтрока(ИмяПоляЗначение), ИмяПоляЗначение, Элементы.Значение.Заголовок);
	
	ДлинаПоляКода 		= Параметры.ДлинаПоляКода;
	ДлинаПоляЗначения 	= Параметры.ДлинаПоляЗначения;
	
	Если ДлинаПоляКода > 0 Тогда
	    Элементы.Код.Ширина = ДлинаПоляКода;	
	КонецЕсли;
	Если ДлинаПоляЗначения > 0 Тогда
	    Элементы.Значение.Ширина = ДлинаПоляЗначения;	
	КонецЕсли;
	
	ЗначениеПоКоду 		= Параметры.Название;
	КодЗначения 		= Параметры.Код;
	
	МногострочныйРежимЗначения = Параметры.МногострочныйРежимЗначения;
	Если НЕ МногострочныйРежимЗначения Тогда
	    Элементы.Значение.МногострочныйРежим = (СтрЧислоСтрок(ЗначениеПоКоду) > 1);
	Иначе
		Элементы.Значение.МногострочныйРежим = МногострочныйРежимЗначения;
	КонецЕсли;
	
	УникальностьФормы = Параметры.УникальностьФормы;
		
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВладелецФормы = Неопределено Тогда
	    Отказ = Истина;
		ТекстПредупреждения = НСтр("ru='Данная форма вспомогательная, предназначена для редактирования данных
										|из форм регламентированных отчетов!'");
		ПоказатьПредупреждение(, ТекстПредупреждения, , НСтр("ru='Форма редактирования пары Код - Название.'"));
		Возврат;	
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = УникальностьФормы Тогда
		
		Если НРег(ИмяСобытия) = НРег("ЗакрытьОткрытыеФормы") Тогда			
		    Модифицированность = Ложь;
			Закрыть();			
		КонецЕсли;
					
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтменитьИЗакрыть(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры


&НаКлиенте
Процедура ПринятьИЗакрыть(Команда)
	
	ПараметрыВозврата = Новый Структура;
	ПараметрыВозврата.Вставить("Код", КодЗначения);
	ПараметрыВозврата.Вставить("Название", ЗначениеПоКоду);
		
	Модифицированность = Ложь;
	
	Закрыть(ПараметрыВозврата);
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#КонецОбласти


