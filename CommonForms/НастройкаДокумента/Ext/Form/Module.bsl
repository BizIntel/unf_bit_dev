
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БылиВнесеныИзменения = Ложь;
	ЗапомнитьВыбор = Ложь;
	
	Если Параметры.Свойство("ПоложениеВидаРаботВЗаказНаряде") Тогда
		ПоложениеВидаРаботВЗаказНаряде = Параметры.ПоложениеВидаРаботВЗаказНаряде;
		ПоложениеВидаРаботВЗаказНарядеПриОткрытии = Параметры.ПоложениеВидаРаботВЗаказНаряде;
		Элементы.ПоложениеВидаРаботВЗаказНаряде.Видимость = Истина;
	Иначе
		Элементы.ПоложениеВидаРаботВЗаказНаряде.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеВидаРаботВЗаданииНаРаботу") Тогда
		ПоложениеВидаРаботВЗаданииНаРаботу = Параметры.ПоложениеВидаРаботВЗаданииНаРаботу;
		ПоложениеВидаРаботВЗаданииНаРаботуПриОткрытии = Параметры.ПоложениеВидаРаботВЗаданииНаРаботу;
		Элементы.ПоложениеВидаРаботВЗаданииНаРаботу.Видимость = Истина;
	Иначе
		Элементы.ПоложениеВидаРаботВЗаданииНаРаботу.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеДатыОтгрузкиВЗаказеПокупателя") Тогда
		ПоложениеДатыОтгрузкиВЗаказеПокупателя = Параметры.ПоложениеДатыОтгрузкиВЗаказеПокупателя;
		ПоложениеДатыОтгрузкиВЗаказеПокупателяПриОткрытии = Параметры.ПоложениеДатыОтгрузкиВЗаказеПокупателя;
		Элементы.ПоложениеДатыОтгрузкиВЗаказеПокупателя.Видимость = Истина;
	Иначе
		Элементы.ПоложениеДатыОтгрузкиВЗаказеПокупателя.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеДатыПоступленияВЗаказеПоставщику") Тогда
		ПоложениеДатыПоступленияВЗаказеПоставщику = Параметры.ПоложениеДатыПоступленияВЗаказеПоставщику;
		ПоложениеДатыПоступленияВЗаказеПоставщикуПриОткрытии = Параметры.ПоложениеДатыПоступленияВЗаказеПоставщику;
		Элементы.ПоложениеДатыПоступленияВЗаказеПоставщику.Видимость = Истина;
	Иначе
		Элементы.ПоложениеДатыПоступленияВЗаказеПоставщику.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеЗаказаПокупателяВДокументахОтгрузки") Тогда
		ПоложениеЗаказаПокупателяВДокументахОтгрузки = Параметры.ПоложениеЗаказаПокупателяВДокументахОтгрузки;
		ПоложениеЗаказаПокупателяВДокументахОтгрузкиПриОткрытии = Параметры.ПоложениеЗаказаПокупателяВДокументахОтгрузки;
		Элементы.ПоложениеЗаказаПокупателяВДокументахОтгрузки.Видимость = Истина;
	Иначе
		Элементы.ПоложениеЗаказаПокупателяВДокументахОтгрузки.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеЗаказаПокупателяВПеремещенииЗапасов") Тогда
		ПоложениеЗаказаПокупателяВПеремещенииЗапасов = Параметры.ПоложениеЗаказаПокупателяВПеремещенииЗапасов;
		ПоложениеЗаказаПокупателяВПеремещенииЗапасовПриОткрытии = Параметры.ПоложениеЗаказаПокупателяВПеремещенииЗапасов;
		Элементы.ПоложениеЗаказаПокупателяВПеремещенииЗапасов.Видимость = Истина;
	Иначе
		Элементы.ПоложениеЗаказаПокупателяВПеремещенииЗапасов.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеЗаказаПоставщикуВДокументахПоступления") Тогда
		ПоложениеЗаказаПоставщикуВДокументахПоступления = Параметры.ПоложениеЗаказаПоставщикуВДокументахПоступления;
		ПоложениеЗаказаПоставщикуВДокументахПоступленияПриОткрытии = Параметры.ПоложениеЗаказаПоставщикуВДокументахПоступления;
		Элементы.ПоложениеЗаказаПоставщикуВДокументахПоступления.Видимость = Истина;
	Иначе
		Элементы.ПоложениеЗаказаПоставщикуВДокументахПоступления.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользоватьМатериалыЗаказчикаВЗаказНаряде") Тогда
		ИспользоватьМатериалыЗаказчикаВЗаказНаряде = Параметры.ИспользоватьМатериалыЗаказчикаВЗаказНаряде;
		ИспользоватьМатериалыЗаказчикаВЗаказНарядеПриОткрытии = Параметры.ИспользоватьМатериалыЗаказчикаВЗаказНаряде;
		Элементы.ИспользоватьМатериалыЗаказчикаВЗаказНаряде.Видимость = Истина;
	Иначе
		Элементы.ИспользоватьМатериалыЗаказчикаВЗаказНаряде.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользоватьТоварыВЗаказНаряде") Тогда
		ИспользоватьТоварыВЗаказНаряде = Параметры.ИспользоватьТоварыВЗаказНаряде;
		ИспользоватьТоварыВЗаказНарядеПриОткрытии = Параметры.ИспользоватьТоварыВЗаказНаряде;
		Элементы.ИспользоватьТоварыВЗаказНаряде.Видимость = Истина;
	Иначе
		Элементы.ИспользоватьТоварыВЗаказНаряде.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользоватьМатериалыВЗаказНаряде") Тогда
		ИспользоватьМатериалыВЗаказНаряде = Параметры.ИспользоватьМатериалыВЗаказНаряде;
		ИспользоватьМатериалыВЗаказНарядеПриОткрытии = Параметры.ИспользоватьМатериалыВЗаказНаряде;
		Элементы.ИспользоватьМатериалыВЗаказНаряде.Видимость = Истина;
	Иначе
		Элементы.ИспользоватьМатериалыВЗаказНаряде.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользоватьЗарплатаИсполнителейВЗаказНаряде") Тогда
		ИспользоватьЗарплатаИсполнителейВЗаказНаряде = Параметры.ИспользоватьЗарплатаИсполнителейВЗаказНаряде;
		ИспользоватьЗарплатаИсполнителейВЗаказНарядеПриОткрытии = Параметры.ИспользоватьЗарплатаИсполнителейВЗаказНаряде;
		Элементы.ИспользоватьЗарплатаИсполнителейВЗаказНаряде.Видимость = Истина;
	Иначе
		Элементы.ИспользоватьЗарплатаИсполнителейВЗаказНаряде.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеИсполнитель") Тогда
		ПоложениеИсполнитель = Параметры.ПоложениеИсполнитель;
		ПоложениеИсполнительПриОткрытии = Параметры.ПоложениеИсполнитель;
		Элементы.ПоложениеИсполнитель.Видимость = Истина;
	Иначе
		Элементы.ПоложениеИсполнитель.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеОтветственный") Тогда
		ПоложениеОтветственный = Параметры.ПоложениеОтветственный;
		ПоложениеПоложениеОтветственныйПриОткрытии = Параметры.ПоложениеОтветственный;
		Элементы.ПоложениеОтветственный.Видимость = Истина;
	Иначе
		Элементы.ПоложениеОтветственный.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	СтруктураРеквизитовФормы = Новый Структура;
	
	ПроверитьМодифицированностьФормы(СтруктураРеквизитовФормы);
	
	Закрыть(СтруктураРеквизитовФормы);
	
КонецПроцедуры // КомандаОК()

&НаКлиенте
Процедура ЗапомнитьВыбор(Команда)
	
	СтруктураРеквизитовФормы = Новый Структура;
	
	ПроверитьМодифицированностьФормы(СтруктураРеквизитовФормы);
	
	ЗаписатьНовыеНастройки();
	
	Закрыть(СтруктураРеквизитовФормы);
	
КонецПроцедуры // ЗапомнитьВыбор()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура записывает настройки пользователя в регистр.
//
&НаСервере
Процедура УстановитьНастройку(ИмяНастройки)	
	
	Пользователь = Пользователи.ТекущийПользователь();
	
	НаборЗаписей = РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Пользователь.Использование = Истина;
	НаборЗаписей.Отбор.Пользователь.Значение	  = Пользователь;
	НаборЗаписей.Отбор.Настройка.Использование	  = Истина;
	НаборЗаписей.Отбор.Настройка.Значение		  = ПланыВидовХарактеристик.НастройкиПользователей[ИмяНастройки];
	
	Запись = НаборЗаписей.Добавить();
	
	Запись.Пользователь = Пользователь;
	Запись.Настройка    = ПланыВидовХарактеристик.НастройкиПользователей[ИмяНастройки];
	Запись.Значение     = ПланыВидовХарактеристик.НастройкиПользователей[ИмяНастройки].ТипЗначения.ПривестиЗначение(ЭтаФорма[ИмяНастройки]);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры // ЗаписатьНовыеНастройки()

// Процедура записывает настройки пользователя в регистр.
//
&НаСервере
Процедура ЗаписатьНовыеНастройки()
	
	Если ЗначениеЗаполнено(ПоложениеВидаРаботВЗаказНаряде) Тогда
		УстановитьНастройку("ПоложениеВидаРаботВЗаказНаряде");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеВидаРаботВЗаданииНаРаботу) Тогда
		УстановитьНастройку("ПоложениеВидаРаботВЗаданииНаРаботу");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеДатыОтгрузкиВЗаказеПокупателя) Тогда
		УстановитьНастройку("ПоложениеДатыОтгрузкиВЗаказеПокупателя");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеДатыПоступленияВЗаказеПоставщику) Тогда
		УстановитьНастройку("ПоложениеДатыПоступленияВЗаказеПоставщику");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеЗаказаПокупателяВДокументахОтгрузки) Тогда
		УстановитьНастройку("ПоложениеЗаказаПокупателяВДокументахОтгрузки");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеЗаказаПокупателяВПеремещенииЗапасов) Тогда
		УстановитьНастройку("ПоложениеЗаказаПокупателяВПеремещенииЗапасов");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеЗаказаПоставщикуВДокументахПоступления) Тогда
		УстановитьНастройку("ПоложениеЗаказаПоставщикуВДокументахПоступления");
	КонецЕсли;	 
	Если ЗначениеЗаполнено(ИспользоватьМатериалыЗаказчикаВЗаказНаряде) Тогда
		УстановитьНастройку("ИспользоватьМатериалыЗаказчикаВЗаказНаряде");
	КонецЕсли;	 
	Если ЗначениеЗаполнено(ИспользоватьТоварыВЗаказНаряде) Тогда
		УстановитьНастройку("ИспользоватьТоварыВЗаказНаряде");
	КонецЕсли;	 
	Если ЗначениеЗаполнено(ИспользоватьМатериалыВЗаказНаряде) Тогда
		УстановитьНастройку("ИспользоватьМатериалыВЗаказНаряде");
	КонецЕсли;
	Если ЗначениеЗаполнено(ИспользоватьЗарплатаИсполнителейВЗаказНаряде) Тогда
		УстановитьНастройку("ИспользоватьЗарплатаИсполнителейВЗаказНаряде");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеИсполнитель) Тогда
		УстановитьНастройку("ПоложениеИсполнитель");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеОтветственный) Тогда
		УстановитьНастройку("ПоложениеОтветственный");
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры // ЗаписатьНовыеНастройки()

// Процедура проверяет модифицированность формы.
//
&НаКлиенте
Процедура ПроверитьМодифицированностьФормы(СтруктураРеквизитовФормы)

	БылиВнесеныИзменения = Ложь;
	
	ИзмененияПоложениеВидаРаботВЗаказНаряде						= ПоложениеВидаРаботВЗаказНарядеПриОткрытии <> ПоложениеВидаРаботВЗаказНаряде;
	ИзмененияПоложениеВидаРаботВЗаданииНаРаботу					= ПоложениеВидаРаботВЗаданииНаРаботуПриОткрытии <> ПоложениеВидаРаботВЗаданииНаРаботу;
	ИзмененияПоложениеДатыОтгрузкиВЗаказеПокупателя				= ПоложениеДатыОтгрузкиВЗаказеПокупателяПриОткрытии <> ПоложениеДатыОтгрузкиВЗаказеПокупателя;
	ИзмененияПоложениеДатыПоступленияВЗаказеПоставщику			= ПоложениеДатыПоступленияВЗаказеПоставщикуПриОткрытии <> ПоложениеДатыПоступленияВЗаказеПоставщику;
	ИзмененияПоложениеЗаказаПокупателяВДокументахОтгрузки		= ПоложениеЗаказаПокупателяВДокументахОтгрузкиПриОткрытии <> ПоложениеЗаказаПокупателяВДокументахОтгрузки;
	ИзмененияПоложениеЗаказаПокупателяВПеремещенииЗапасов		= ПоложениеЗаказаПокупателяВПеремещенииЗапасовПриОткрытии <> ПоложениеЗаказаПокупателяВПеремещенииЗапасов;
	ИзмененияПоложениеЗаказаПоставщикуВДокументахПоступления	= ПоложениеЗаказаПоставщикуВДокументахПоступленияПриОткрытии <> ПоложениеЗаказаПоставщикуВДокументахПоступления;
	ИзмененияИспользоватьМатериалыЗаказчикаВЗаказНаряде			= ИспользоватьМатериалыЗаказчикаВЗаказНарядеПриОткрытии <> ИспользоватьМатериалыЗаказчикаВЗаказНаряде;
	ИзмененияИспользоватьТоварыВЗаказНаряде						= ИспользоватьТоварыВЗаказНарядеПриОткрытии <> ИспользоватьТоварыВЗаказНаряде;
	ИзмененияИспользоватьМатериалыВЗаказНаряде					= ИспользоватьМатериалыВЗаказНарядеПриОткрытии <> ИспользоватьМатериалыВЗаказНаряде;
	ИзмененияИспользоватьЗарплатаИсполнителейВЗаказНаряде		= ИспользоватьЗарплатаИсполнителейВЗаказНарядеПриОткрытии <> ИспользоватьЗарплатаИсполнителейВЗаказНаряде;
	ИзмененияПоложениеИсполнитель								= ПоложениеИсполнительПриОткрытии <> ПоложениеИсполнитель;
	ИзмененияПоложениеОтветственный								= ПоложениеОтветственныйПриОткрытии <> ПоложениеОтветственный;
	
	Если ИзмененияПоложениеВидаРаботВЗаказНаряде
	 ИЛИ ИзмененияПоложениеВидаРаботВЗаданииНаРаботу
	 ИЛИ ИзмененияПоложениеДатыОтгрузкиВЗаказеПокупателя
	 ИЛИ ИзмененияПоложениеДатыПоступленияВЗаказеПоставщику
	 ИЛИ ИзмененияПоложениеЗаказаПокупателяВДокументахОтгрузки
	 ИЛИ ИзмененияПоложениеЗаказаПокупателяВПеремещенииЗапасов
	 ИЛИ ИзмененияПоложениеЗаказаПоставщикуВДокументахПоступления 
	 ИЛИ ИзмененияИспользоватьМатериалыЗаказчикаВЗаказНаряде
	 ИЛИ ИзмененияИспользоватьТоварыВЗаказНаряде
	 ИЛИ ИзмененияИспользоватьМатериалыВЗаказНаряде
	 ИЛИ ИзмененияИспользоватьЗарплатаИсполнителейВЗаказНаряде
	 ИЛИ ИзмененияПоложениеИсполнитель
	 ИЛИ ИзмененияПоложениеОтветственный Тогда
		
		БылиВнесеныИзменения = Истина;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.Вставить("БылиВнесеныИзменения",							 		БылиВнесеныИзменения);
	СтруктураРеквизитовФормы.Вставить("ПоложениеВидаРаботВЗаказНаряде",					 		ПоложениеВидаРаботВЗаказНаряде);
	СтруктураРеквизитовФормы.Вставить("ПоложениеВидаРаботВЗаданииНаРаботу",				 		ПоложениеВидаРаботВЗаданииНаРаботу);
	СтруктураРеквизитовФормы.Вставить("ПоложениеДатыОтгрузкиВЗаказеПокупателя",			 		ПоложениеДатыОтгрузкиВЗаказеПокупателя);
	СтруктураРеквизитовФормы.Вставить("ПоложениеДатыПоступленияВЗаказеПоставщику",		 		ПоложениеДатыПоступленияВЗаказеПоставщику);
	СтруктураРеквизитовФормы.Вставить("ПоложениеЗаказаПокупателяВДокументахОтгрузки",	 		ПоложениеЗаказаПокупателяВДокументахОтгрузки);
	СтруктураРеквизитовФормы.Вставить("ПоложениеЗаказаПокупателяВПеремещенииЗапасов",	 		ПоложениеЗаказаПокупателяВПеремещенииЗапасов);
	СтруктураРеквизитовФормы.Вставить("ПоложениеЗаказаПоставщикуВДокументахПоступления", 		ПоложениеЗаказаПоставщикуВДокументахПоступления);
	СтруктураРеквизитовФормы.Вставить("ИспользоватьМатериалыЗаказчикаВЗаказНаряде",		 		ИспользоватьМатериалыЗаказчикаВЗаказНаряде);
	СтруктураРеквизитовФормы.Вставить("ИспользоватьТоварыВЗаказНаряде",					 		ИспользоватьТоварыВЗаказНаряде);
	СтруктураРеквизитовФормы.Вставить("ИспользоватьМатериалыВЗаказНаряде",				 		ИспользоватьМатериалыВЗаказНаряде);
	СтруктураРеквизитовФормы.Вставить("ИспользоватьЗарплатаИсполнителейВЗаказНаряде",	 		ИспользоватьЗарплатаИсполнителейВЗаказНаряде);
	СтруктураРеквизитовФормы.Вставить("ПоложениеОтветственный",							 		ПоложениеОтветственный);
	СтруктураРеквизитовФормы.Вставить("ПоложениеИсполнитель",							 		ПоложениеИсполнитель);
	
КонецПроцедуры // ПроверитьМодифицированностьФормы()

#КонецОбласти
