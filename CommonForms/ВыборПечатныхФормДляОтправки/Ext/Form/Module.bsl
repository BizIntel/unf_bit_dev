
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.ИмяФормыОбъектаПечати) Тогда
		ВызватьИсключение НСтр("ru='Непосредственное открытие этой формы не предусмотрено.'");
	КонецЕсли;
	
	Если ТипЗнч(Параметры.ОбъектыОтправки) <> Тип("Массив")
		И НЕ ЗначениеЗаполнено(Параметры.ИмяМенеджераОбъекта) Тогда
		
		ВызватьИсключение НСтр("ru='Непосредственное открытие этой формы не предусмотрено.'");
	КонецЕсли;
	
	Если ТипЗнч(Параметры.ОбъектыОтправки) = Тип("Массив") И Параметры.ОбъектыОтправки.Количество() = 0
		И НЕ ЗначениеЗаполнено(Параметры.ИмяМенеджераОбъекта) Тогда
		
		ВызватьИсключение НСтр("ru='Непосредственное открытие этой формы не предусмотрено.'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЗаголовокФормы) Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = Параметры.ЗаголовокФормы;
	КонецЕсли;
	РежимВыбораПечатныхФорм = Параметры.РежимВыбораПечатныхФорм;
	
	КомандыПечати = УправлениеПечатьюПовтИсп.КомандыПечатиФормы(Параметры.ИмяФормыОбъектаПечати);
	Для Каждого КомандаПечати Из КомандыПечати Цикл
		
		Если КомандаПечати.СкрытаФункциональнымиОпциями
			И НЕ УправлениеНебольшойФирмойСервер.ОтображатьКомандуПриВыключеннойФО(КомандаПечати) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если НЕ УправлениеНебольшойФирмойСервер.КомандаПечатаетсяВСерверномКонтексте(КомандаПечати) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если КомандаПечати.ДополнительныеПараметры.Свойство("ВариантЗапуска") Тогда
			Если КомандаПечати.ДополнительныеПараметры.ВариантЗапуска <> Перечисления.СпособыВызоваДополнительныхОбработок.ВызовСерверногоМетода
				Или Не ЗначениеЗаполнено(КомандаПечати.ДополнительныеПараметры.Ссылка) Тогда
				
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ПечатныеФормы.Добавить(КомандаПечати.Идентификатор, КомандаПечати.Представление);
		
	КонецЦикла;
	АдресКомандПечати = ПоместитьВоВременноеХранилище(КомандыПечати, УникальныйИдентификатор);
	
	Если ТипЗнч(Параметры.ОбъектыОтправки) = Тип("Массив") Тогда
		ОбъектыОтправки = Новый ФиксированныйМассив(Параметры.ОбъектыОтправки);
	Иначе
		ОбъектыОтправки = Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ИмяМенеджераОбъекта) Тогда
		ИмяМенеджераОбъекта = Параметры.ИмяМенеджераОбъекта;
	Иначе
		ИмяМенеджераОбъекта = ОбъектыОтправки[0].Метаданные().ПолноеИмя();
	КонецЕсли;
	
	КлючНастроек = ?(ЗначениеЗаполнено(Параметры.КлючНастроек), Параметры.КлючНастроек, ИмяМенеджераОбъекта);
	
	НастройкаПечатныхФорм = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ОтправкаПечатныхФорм", КлючНастроек);
	Если НастройкаПечатныхФорм <> Неопределено Тогда
		Для Каждого ВыбраннаяПечатнаяФорма Из НастройкаПечатныхФорм Цикл 
			Команда = ПечатныеФормы.НайтиПоЗначению(ВыбраннаяПечатнаяФорма);
			Если Команда <> Неопределено Тогда
				Команда.Пометка = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ПечатныеФормы.Количество() > 0 И ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(ПечатныеФормы).Количество() = 0 Тогда
		ПечатныеФормы[0].Пометка = Истина;
	КонецЕсли;
	
	СохраненныеНастройкиФормата	= ОбщегоНазначения.ХранилищеСистемныхНастроекЗагрузить("ОбщаяФорма.ВыборФорматаВложений/ТекущиеДанные", "");
	Если СохраненныеНастройкиФормата <> Неопределено Тогда
		СохраненныеФорматы			= СохраненныеНастройкиФормата.Получить("ВыбранныеФорматыСохранения");
		СохраненныйУпаковатьВАрхив	= СохраненныеНастройкиФормата.Получить("УпаковатьВАрхив");
	КонецЕсли;
	
	Если СохраненныйУпаковатьВАрхив <> Неопределено Тогда
		УпаковатьВАрхив = СохраненныйУпаковатьВАрхив;
	КонецЕсли;
	
	НастройкиФорматовСохраненияТабличногоДокумента = УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента();
	Для Каждого ФорматСохранения Из НастройкиФорматовСохраненияТабличногоДокумента Цикл
		Пометка = Ложь;
		Если СохраненныеФорматы <> Неопределено Тогда
			НайденноеЗначение = СохраненныеФорматы.НайтиПоЗначению(ФорматСохранения.ТипФайлаТабличногоДокумента);
			Если НайденноеЗначение <> Неопределено И НайденноеЗначение.Пометка Тогда
				Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
		ВыбранныеФорматыСохранения.Добавить(ФорматСохранения.ТипФайлаТабличногоДокумента, Строка(ФорматСохранения.Ссылка), Пометка, ФорматСохранения.Картинка);
	КонецЦикла;
	
	Если ВыбранныеФорматыСохранения.Количество() > 0 И ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(ВыбранныеФорматыСохранения).Количество() = 0 Тогда
		ВыбранныеФорматыСохранения[0].Пометка = Истина;
	КонецЕсли;
	
	ПредставлениеФорматаВложений = ПолучитьПредставлениеФорматаВложений(ВыбранныеФорматыСохранения, УпаковатьВАрхив);
	
	Если ЭтоОтправкаПечатныхФормДоговора() Тогда
		Элементы.ПредставлениеФорматаВложений.Видимость = Ложь;
	Иначе
		ПредставлениеФорматаВложений = ПолучитьПредставлениеФорматаВложений(ВыбранныеФорматыСохранения, УпаковатьВАрхив);
	КонецЕсли;
	
	Если Параметры.Свойство("ДополнительныеПараметрыПечати") Тогда
		ДополнительныеПараметрыПечати = Параметры.ДополнительныеПараметрыПечати;
	Иначе
		ДополнительныеПараметрыПечати = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ РежимВыбораПечатныхФорм Тогда
		СохранитьВыбранныеПечатныеФормы(КлючНастроек, ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(ПечатныеФормы));
	Иначе
		// Сохранение печатных форм происходит по команде Выбрать.
	КонецЕсли;
	
	Оповестить("ВыборПечатныхФормДляОтправки");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ВыборФорматаВложений") Тогда
		
		Если ВыбранноеЗначение <> Неопределено И ВыбранноеЗначение <> КодВозвратаДиалога.Отмена Тогда
			
			УпаковатьВАрхив = ВыбранноеЗначение.УпаковатьВАрхив;
			ВыбранныеФорматыСохранения.ЗаполнитьПометки(Ложь);
			
			Для Каждого ВыбранныйФормат Из ВыбранноеЗначение.ФорматыСохранения Цикл
				НайденноеЗначение = ВыбранныеФорматыСохранения.НайтиПоЗначению(ВыбранныйФормат);
				Если НайденноеЗначение <> Неопределено Тогда
					НайденноеЗначение.Пометка = Истина;
				КонецЕсли;
			КонецЦикла;
			
			ПредставлениеФорматаВложений = ПолучитьПредставлениеФорматаВложений(ВыбранныеФорматыСохранения, УпаковатьВАрхив);
			
		КонецЕсли;
		
	ИначеЕсли ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ПодготовкаНовогоПисьма") Тогда
		
		Если ВыбранноеЗначение <> Неопределено И ВыбранноеЗначение <> КодВозвратаДиалога.Отмена Тогда
			
			ПараметрыОтправки.Получатель.Очистить();
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПараметрыОтправки.Получатель, ВыбранноеЗначение.Получатели);
			СоздатьНовоеПисьмо();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если РежимВыбораПечатныхФорм Тогда
		СохранитьВыбранныеПечатныеФормы(КлючНастроек, ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(ПечатныеФормы));
		Закрыть();
		Возврат;
	КонецЕсли;
	
	СформироватьТабличныеДокументыИВыбратьПолучателей();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СформироватьТабличныеДокументыИВыбратьПолучателей()
	
	ВыбранныеКоманды = ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(ПечатныеФормы);
	
	СформироватьТабличныеДокументыНаСервере(ВыбранныеКоманды);
	
	Если ПараметрыОтправки.Получатель.Количество() > 1 Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Получатели", ПараметрыОтправки.Получатель);
		ПараметрыФормы.Вставить("НеВыбиратьФорматВложений", Истина);
		ОткрытьФорму("ОбщаяФорма.ПодготовкаНовогоПисьма", ПараметрыФормы, ЭтотОбъект);
	Иначе
		СоздатьНовоеПисьмо();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьТабличныеДокументыНаСервере(ВыбранныеКоманды)
	
	МассивОбъектов = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ОбъектыОтправки);
	
	ТабличныеДокументыСИменамиФайлов = Новый Соответствие;
	ИнформацияОтправки = Новый Структура("Отправитель, Текст, Тема");
	ИнформацияОтправки.Вставить("Получатель", Новый Массив);
	
	КомандыПечати = ПолучитьИзВременногоХранилища(АдресКомандПечати);
	
	Для Каждого ВыбраннаяКоманда Из ВыбранныеКоманды Цикл
		
		КомандаПечати = КомандыПечати.Найти(ВыбраннаяКоманда, "Идентификатор");
		Если КомандаПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если КомандаПечати.ДополнительныеПараметры.Свойство("ВариантЗапуска") Тогда
			Результат = Новый Структура("КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода");
			ДополнительныеОтчетыИОбработки.ПечатьПоВнешнемуИсточнику(
				КомандаПечати.ДополнительныеПараметры.Ссылка,
				Новый Структура("ИдентификаторКоманды, ОбъектыНазначения", КомандаПечати.Идентификатор, МассивОбъектов),
				Результат.КоллекцияПечатныхФорм,
				Результат.ОбъектыПечати,
				Результат.ПараметрыВывода
			);
		Иначе
			
			Если ТипЗнч(КомандаПечати.ДополнительныеПараметры) = Тип("Структура") Тогда
				
				Если ДополнительныеПараметрыПечати <> Неопределено Тогда
					КомандаПечати.ДополнительныеПараметры.Вставить("УНФДополнительныеПараметрыПечати", ДополнительныеПараметрыПечати);
				КонецЕсли;
				
			КонецЕсли;
			
			Результат = УправлениеПечатью.СформироватьПечатныеФормы(
				КомандаПечати.МенеджерПечати,
				КомандаПечати.Идентификатор,
				МассивОбъектов,
				КомандаПечати.ДополнительныеПараметры
			);
		КонецЕсли;
		
		Если Результат.КоллекцияПечатныхФорм.Количество() > 0 Тогда
			
			Если Результат.ОбъектыПечати.Количество() = 0 Тогда
				ИмяФайла = ИмяФайлаПечатнойФормыПоУмолчанию(МассивОбъектов[0], Результат.КоллекцияПечатныхФорм[0].СинонимМакета);
				ТабличныеДокументыСИменамиФайлов.Вставить(Результат.КоллекцияПечатныхФорм[0].ТабличныйДокумент, ИмяФайла);
			Иначе
				ТабличныеДокументыПоОбъектам = ПечатныеФормыПоОбъектам(Результат.КоллекцияПечатныхФорм[0].ТабличныйДокумент, Результат.ОбъектыПечати);
				Для Каждого КлючИЗначение Из ТабличныеДокументыПоОбъектам Цикл
					ИмяФайла = ИмяФайлаПечатнойФормыПоУмолчанию(КлючИЗначение.Ключ, Результат.КоллекцияПечатныхФорм[0].СинонимМакета);
					ТабличныеДокументыСИменамиФайлов.Вставить(КлючИЗначение.Значение, ИмяФайла);
				КонецЦикла;
			КонецЕсли;
			
			Если Результат.ПараметрыВывода.ПараметрыОтправки.Свойство("Получатель") Тогда
				ДополнитьМассив(ИнформацияОтправки.Получатель, Результат.ПараметрыВывода.ПараметрыОтправки.Получатель);
			КонецЕсли;
			ИнформацияОтправки.Тема = ?(ЗначениеЗаполнено(ИнформацияОтправки.Тема), НСтр("ru='Документы'"), Результат.ПараметрыВывода.ПараметрыОтправки.Тема);
			Если Результат.ПараметрыВывода.ПараметрыОтправки.Свойство("Отправитель") Тогда
				ИнформацияОтправки.Отправитель = Результат.ПараметрыВывода.ПараметрыОтправки.Отправитель;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабличныеДокументы = Новый ФиксированноеСоответствие(ТабличныеДокументыСИменамиФайлов);
	ПараметрыОтправки = Новый ФиксированнаяСтруктура(ИнформацияОтправки);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТабличныеДокументыВоВременноеХранилище()
	Перем ЗаписьZipФайла, ИмяАрхива;
	
	Результат = Новый Массив;
	
	// подготовка архива
	Если УпаковатьВАрхив Тогда
		ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
		ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяАрхива);
	КонецЕсли;
	
	// подготовка временной папки
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	ИспользованныеИменаФайлов = Новый Соответствие;
	
	ВыбранныеФорматы = ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(ВыбранныеФорматыСохранения);
	ТаблицаФорматов = УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента();
	
	// сохранение печатных форм
	Для Каждого КлючИЗначение Из ТабличныеДокументы Цикл
		
		Если ТипЗнч(КлючИЗначение.Ключ) = Тип("ТабличныйДокумент") Тогда
			
			ТабДок = КлючИЗначение.Ключ;
			ИмяФайлаБезРасширения = КлючИЗначение.Значение;
			
			Если ВычислитьИспользованиеВывода(ТабДок) = ИспользованиеВывода.Запретить Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТабДок.Защита Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТабДок.ВысотаТаблицы = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ТипФайла Из ВыбранныеФорматы Цикл
				НастройкиФормата = ТаблицаФорматов.НайтиСтроки(Новый Структура("ТипФайлаТабличногоДокумента", ТипФайла))[0];
				
				ИмяФайла = ПолучитьИмяВременногоФайлаДляПечатнойФормы(ИмяФайлаБезРасширения, НастройкиФормата.Расширение, ИспользованныеИменаФайлов);
				
				ПолноеИмяФайла = УникальноеИмяФайла(ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ИмяФайла);
				ТабДок.Записать(ПолноеИмяФайла, ТипФайла);
				
				Если ТипФайла = ТипФайлаТабличногоДокумента.HTML Тогда
					ВставитьКартинкиВHTML(ПолноеИмяФайла);
				КонецЕсли;
				
				Если ЗаписьZipФайла <> Неопределено Тогда 
					ЗаписьZipФайла.Добавить(ПолноеИмяФайла);
				Иначе
					ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
					ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтотОбъект.УникальныйИдентификатор);
					ОписаниеФайла = Новый Структура;
					ОписаниеФайла.Вставить("Представление", ИмяФайла);
					ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
					Если ТипФайла = ТипФайлаТабличногоДокумента.ANSITXT Тогда
						ОписаниеФайла.Вставить("Кодировка", "windows-1251");
					КонецЕсли;
					Результат.Добавить(ОписаниеФайла);
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе // Печатная форма типа HTML
			
			Если ТипЗнч(КлючИЗначение.Ключ) <> Тип("Структура") Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ КлючИЗначение.Ключ.Свойство("HTMLДокумент") Тогда
				Продолжить;
			КонецЕсли;
			
			ИмяФайлаБезРасширения = КлючИЗначение.Значение;
			ПечатнаяФормаHTML = КлючИЗначение.Ключ;
			Расширение = ПечатнаяФормаHTML.РасширениеФайла;
			
			ИмяФайла = ПолучитьИмяВременногоФайлаДляПечатнойФормы(ИмяФайлаБезРасширения, Расширение, ИспользованныеИменаФайлов);
			ПолноеИмяФайла = УникальноеИмяФайла(ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ИмяФайла);
			
			ТекстовыйДокумент = Новый ТекстовыйДокумент;
			ТекстовыйДокумент.УстановитьТекст(ПечатнаяФормаHTML.HTMLДокумент);
			ТекстовыйДокумент.Записать(ПолноеИмяФайла);
			
			Если ЗаписьZipФайла <> Неопределено Тогда 
				ЗаписьZipФайла.Добавить(ПолноеИмяФайла);
			Иначе
				ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
				ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтотОбъект.УникальныйИдентификатор);
				ОписаниеФайла = Новый Структура;
				ОписаниеФайла.Вставить("Представление", ИмяФайла);
				ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
				
				Результат.Добавить(ОписаниеФайла);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Если архив подготовлен, записываем и помещаем его во временное хранилище.
	Если ЗаписьZipФайла <> Неопределено Тогда 
		ЗаписьZipФайла.Записать();
		ФайлАрхива = Новый Файл(ИмяАрхива);
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяАрхива);
		ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтотОбъект.УникальныйИдентификатор);
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Представление", НСтр("ru='Документы'") + ".zip");
		ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
		Результат.Добавить(ОписаниеФайла);
	КонецЕсли;
	
	УдалитьФайлы(ИмяВременнойПапки);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ВычислитьИспользованиеВывода(ТабличныйДокумент)
	Если ТабличныйДокумент.Вывод = ИспользованиеВывода.Авто Тогда
		Возврат ?(ПравоДоступа("Вывод", Метаданные), ИспользованиеВывода.Разрешить, ИспользованиеВывода.Запретить);
	Иначе
		Возврат ТабличныйДокумент.Вывод;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьИмяВременногоФайлаДляПечатнойФормы(ИмяМакета, Расширение, ИспользованныеИменаФайлов)
	
	ШаблонИмениФайла = "%1%2.%3";
	
	ИмяВременногоФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(
		СтрШаблон(ШаблонИмениФайла, ИмяМакета, "", Расширение));
		
	НомерИспользования = ?(ИспользованныеИменаФайлов[ИмяВременногоФайла] <> Неопределено,
							ИспользованныеИменаФайлов[ИмяВременногоФайла] + 1,
							1);
	
	ИспользованныеИменаФайлов.Вставить(ИмяВременногоФайла, НомерИспользования);
	
	// Если имя уже было ранее использовано, прибавляем счетчик в конце имени.
	Если НомерИспользования > 1 Тогда
		ИмяВременногоФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(
			СтрШаблон(ШаблонИмениФайла, ИмяМакета, " (" + НомерИспользования + ")", Расширение));
	КонецЕсли;
	
	Возврат ИмяВременногоФайла;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция УникальноеИмяФайла(ИмяФайла)
	
	Файл = Новый Файл(ИмяФайла);
	ИмяБезРасширения = Файл.ИмяБезРасширения;
	Расширение = Файл.Расширение;
	Папка = Файл.Путь;
	
	Счетчик = 1;
	Пока Файл.Существует() Цикл
		Счетчик = Счетчик + 1;
		Файл = Новый Файл(Папка + ИмяБезРасширения + " (" + Счетчик + ")" + Расширение);
	КонецЦикла;
	
	Возврат Файл.ПолноеИмя;
	
КонецФункции

&НаСервере
Процедура ВставитьКартинкиВHTML(ИмяФайлаHTML)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ИмяФайлаHTML, КодировкаТекста.UTF8);
	ТекстHTML = ТекстовыйДокумент.ПолучитьТекст();
	
	ФайлHTML = Новый Файл(ИмяФайлаHTML);
	
	ИмяПапкиКартинок = ФайлHTML.ИмяБезРасширения + "_files";
	ПутьКПапкеКартинок = СтрЗаменить(ФайлHTML.ПолноеИмя, ФайлHTML.Имя, ИмяПапкиКартинок);
	
	// Ожидается, что в папке будут только картинки.
	ФайлыКартинок = НайтиФайлы(ПутьКПапкеКартинок, "*");
	
	Для Каждого ФайлКартинки Из ФайлыКартинок Цикл
		КартинкаТекстом = Base64Строка(Новый ДвоичныеДанные(ФайлКартинки.ПолноеИмя));
		КартинкаТекстом = "data:image/" + Сред(ФайлКартинки.Расширение,2) + ";base64," + Символы.ПС + КартинкаТекстом;
		
		ТекстHTML = СтрЗаменить(ТекстHTML, ИмяПапкиКартинок + "\" + ФайлКартинки.Имя, КартинкаТекстом);
	КонецЦикла;
		
	ТекстовыйДокумент.УстановитьТекст(ТекстHTML);
	ТекстовыйДокумент.Записать(ИмяФайлаHTML, КодировкаТекста.UTF8);
	
КонецПроцедуры

&НаСервере
Функция ПечатныеФормыПоОбъектам(ПечатнаяФорма, ОбъектыПечати)
	
	Результат = Новый Соответствие;
	
	Для Каждого ОбъектПечати Из ОбъектыПечати Цикл
		ИмяОбласти = ОбъектПечати.Представление;
		Область = ПечатнаяФорма.Области.Найти(ИмяОбласти);
		Если Область = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ТабличныйДокумент = ПечатнаяФорма.ПолучитьОбласть(Область.Верх, , Область.Низ);
		ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ПечатнаяФорма,
			"АвтоМасштаб,Вывод,ВысотаСтраницы,ДвусторонняяПечать,Защита,ИмяПринтера,КодЯзыкаМакета,КоличествоЭкземпляров,МасштабПечати,ОриентацияСтраницы,ПолеСверху,ПолеСлева,ПолеСнизу,ПолеСправа,РазборПоКопиям,РазмерКолонтитулаСверху,РазмерКолонтитулаСнизу,РазмерСтраницы,ТочностьПечати,ЧерноБелаяПечать,ШиринаСтраницы,ЭкземпляровНаСтранице");
		Результат.Вставить(ОбъектПечати.Значение, ТабличныйДокумент);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИмяФайлаПечатнойФормыПоУмолчанию(ОбъектПечати, НазваниеПечатнойФормы)
	
	Если ОбщегоНазначения.ЭтоДокумент(Метаданные.НайтиПоТипу(ТипЗнч(ОбъектПечати))) Тогда
		ПараметрыДляВставки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектПечати, "Дата,Номер");
		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПрефиксацияОбъектов") Тогда
			МодульПрефиксацияОбъектовКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПрефиксацияОбъектовКлиентСервер");
			ПараметрыДляВставки.Номер = МодульПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ПараметрыДляВставки.Номер);
		КонецЕсли;
		ПараметрыДляВставки.Дата = Формат(ПараметрыДляВставки.Дата, "ДЛФ=D");
		ПараметрыДляВставки.Вставить("НазваниеПечатнойФормы", НазваниеПечатнойФормы);
		Шаблон = НСтр("ru = '[НазваниеПечатнойФормы] № [Номер] от [Дата]'");
	Иначе
		ПараметрыДляВставки = Новый Структура;
		ПараметрыДляВставки.Вставить("НазваниеПечатнойФормы",НазваниеПечатнойФормы);
		ПараметрыДляВставки.Вставить("ПредставлениеОбъекта", ОбщегоНазначения.ПредметСтрокой(ОбъектПечати));
		ПараметрыДляВставки.Вставить("ТекущаяДата",Формат(ТекущаяДатаСеанса(), "ДЛФ=D"));
		Шаблон = НСтр("ru = '[НазваниеПечатнойФормы] - [ПредставлениеОбъекта] - [ТекущаяДата]'");
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, ПараметрыДляВставки);
	
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьВыбранныеПечатныеФормы(КлючНастроек, ВыбранныеКоманды)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ОтправкаПечатныхФорм", КлючНастроек, ВыбранныеКоманды);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПредставлениеФорматаВложений(ВыбранныеФорматыСохранения, УпаковатьВАрхив)
	
	ФорматВложений = "";
	
	Для Каждого ВыбранныйФормат Из ВыбранныеФорматыСохранения Цикл
		Если ВыбранныйФормат.Пометка Тогда
			Если Не ПустаяСтрока(ФорматВложений) Тогда
				ФорматВложений = ФорматВложений + ", ";
			КонецЕсли;
			ФорматВложений = ФорматВложений + ВыбранныйФормат.Представление;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(ФорматВложений) Тогда
		ФорматВложений = НСтр("ru='<Не выбран формат вложений>'");
	КонецЕсли;
	
	Если УпаковатьВАрхив Тогда
		ФорматВложений = НСтр("ru='Архив .zip:'") + " " + ФорматВложений;
	КонецЕсли;
	
	Возврат ФорматВложений;
	
КонецФункции

&НаКлиенте
Процедура ПредставлениеФорматаВложенийНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиФормата = Новый Структура;
	НастройкиФормата.Вставить("УпаковатьВАрхив", УпаковатьВАрхив);
	НастройкиФормата.Вставить("ФорматыСохранения", ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(ВыбранныеФорматыСохранения));
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("НастройкиФормата", НастройкиФормата);
	ОткрытьФорму("ОбщаяФорма.ВыборФорматаВложений", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовоеПисьмо()
	
	ОбработчикРезультата = Новый ОписаниеОповещения("СоздатьНовоеПисьмоПродолжение", ЭтотОбъект);
	РаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(ОбработчикРезультата);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовоеПисьмоПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И ТипЗнч(Результат) = Тип("Булево") И Результат Тогда
	
		ПараметрыНовогоПисьма = Новый Структура;
		ПараметрыНовогоПисьма.Вставить("Получатель", ПараметрыОтправки.Получатель);
		ПараметрыНовогоПисьма.Вставить("Тема", ПараметрыОтправки.Тема);
		ПараметрыНовогоПисьма.Вставить("Текст", ПараметрыОтправки.Текст);
		ПараметрыНовогоПисьма.Вставить("Вложения", ПоместитьТабличныеДокументыВоВременноеХранилище());
		ПараметрыНовогоПисьма.Вставить("ДокументыОснования", ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ОбъектыОтправки));
		
		РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыНовогоПисьма);
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура дополняет массив приемник неуникальными значениями из массива источника.
// Для элементов-структур проверка осуществляется по совпадению ключей и значений структуры
//
&НаСервереБезКонтекста
Процедура ДополнитьМассив(МассивПриемник, МассивИсточник)
	
	Если ТипЗнч(МассивИсточник) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ЗначениеИсточника Из МассивИсточник Цикл
		Если ТипЗнч(ЗначениеИсточника) = Тип("Структура") Тогда
			Найдено = Ложь;
			Для Каждого ЗначениеПриемника Из МассивПриемник Цикл
				Если ТипЗнч(ЗначениеПриемника) = Тип("Структура") Тогда
					ВсеКлючиСовпадают = Истина;
					Для Каждого КлючИЗначение Из ЗначениеИсточника Цикл
						Если Не (ЗначениеПриемника.Свойство(КлючИЗначение.Ключ) И ЗначениеПриемника[КлючИЗначение.Ключ] = КлючИЗначение.Значение) Тогда
							ВсеКлючиСовпадают = Ложь;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Если ВсеКлючиСовпадают Тогда
						Найдено = Истина;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если Не Найдено Тогда
				МассивПриемник.Добавить(ЗначениеИсточника);
			КонецЕсли;
		ИначеЕсли МассивПриемник.Найти(ЗначениеИсточника) = Неопределено Тогда
			МассивПриемник.Добавить(ЗначениеИсточника);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Отправка печатных форм договора будет осуществляться только из формы элемента/списка договора,
// значит других печатных форм нет.
//
&НаСервере
Функция ЭтоОтправкаПечатныхФормДоговора()
	
	Для каждого Эл Из ПечатныеФормы Цикл
		
		Если СтрНачинаетсяС(Эл.Значение, "ДоговорКонтрагента") Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти
