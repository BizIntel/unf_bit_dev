////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Процедура записывает настройки подбора в пользовательские настройки
//
Процедура ЗаписатьНастройкиОтчета()

	УправлениеНебольшойФирмойСервер.УстановитьНастройкуПользователя(ПоказыватьОстатки, 		"ПоказыватьОстатки");
	УправлениеНебольшойФирмойСервер.УстановитьНастройкуПользователя(ПоказыватьРезерв, 		"ПоказыватьРезерв");
	УправлениеНебольшойФирмойСервер.УстановитьНастройкуПользователя(ПоказыватьСвободныйОстаток, "ПоказыватьСвободныйОстаток");
	УправлениеНебольшойФирмойСервер.УстановитьНастройкуПользователя(ПоказыватьЦены, 		"ПоказыватьЦены");
	УправлениеНебольшойФирмойСервер.УстановитьНастройкуПользователя(СпособВыводаОстатков,	"СпособВыводаОстатков");
	УправлениеНебольшойФирмойСервер.УстановитьНастройкуПользователя(ЗапоминатьТекущуюИерархию, "ЗапоминатьТекущуюИерархию");
	
КонецПроцедуры // ЗаписатьНастройкиОтчета()

&НаКлиенте
// Процедура управляет доступностью элементов формы
// 
// Для минимизации серверверных вызовов доступность регулируется страницами формы
//
Процедура УстановитьДоступностьПереключателей(ПризнакДоступности)
	
	Элементы.ГруппаСпособВыводаОстатков.ТекущаяСтраница = 
		?(ПризнакДоступности, 
			Элементы.ГруппаСпособВыводаОстатков.ПодчиненныеЭлементы.СтраницаПереключательДоступен, 
			Элементы.ГруппаСпособВыводаОстатков.ПодчиненныеЭлементы.СтраницаПереключательНеДоступен);
	
КонецПроцедуры // УстановитьДоступностьПереключателей()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Пользователь 			= Пользователи.ТекущийПользователь();
	СпособВыводаОстатков	= УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "СпособВыводаОстатков");
	СпособВыводаОстатков	= ?(ЗначениеЗаполнено(СпособВыводаОстатков), СпособВыводаОстатков, Перечисления.СпособВыводаОстатковВПодборе.ВТаблице);
	
	СтруктураНастроек = Новый Структура("ПоказыватьОстатки, ПоказыватьЦены, СпособВыводаОстатков, ЗапоминатьТекущуюИерархию",
				УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "ПоказыватьОстатки"),
				УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "ПоказыватьЦены"),
				СпособВыводаОстатков,
				УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "ЗапоминатьТекущуюИерархию"));
				
	//Если резервирование выключено, то нет смысла работать с переключателями резерва и своб. остатков
	ЗначениеКонстантыРезервированиеЗапасов = ПолучитьФункциональнуюОпцию("РезервированиеЗапасов"); 
	
	СтруктураНастроек.Вставить("ПоказыватьРезерв", 
		?(ЗначениеКонстантыРезервированиеЗапасов,
			УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "ПоказыватьРезерв"),
			Ложь)
		);
		
	СтруктураНастроек.Вставить("ПоказыватьСвободныйОстаток", 
		?(ЗначениеКонстантыРезервированиеЗапасов,
			УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "ПоказыватьСвободныйОстаток"),
			Ложь)
		);
		
	Элементы.ПоказыватьРезерв.Доступность			= ЗначениеКонстантыРезервированиеЗапасов;
	Элементы.ПоказыватьСвободныйОстаток.Доступность	= ЗначениеКонстантыРезервированиеЗапасов;
	
	//Заполним значения
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураНастроек);
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Процедура - обработчик события формы ПриОткрытии
//
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьПереключателей(
							ПоказыватьОстатки 
							ИЛИ ПоказыватьРезерв 
							ИЛИ ПоказыватьСвободныйОстаток 
							ИЛИ ПоказыватьЦены);
	
КонецПроцедуры // ПриОткрытии()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
// Процедура - обработчик команды "ОК"
//
Процедура ОК(Команда)
	
	ЗаписатьНастройкиОтчета();
	Закрыть(Новый Структура("ПоказыватьОстатки, ПоказыватьРезерв, ПоказыватьСвободныйОстаток, ПоказыватьЦены, СпособВыводаОстатков, ЗапоминатьТекущуюИерархию", 
			ПоказыватьОстатки, 
			ПоказыватьРезерв, 
			ПоказыватьСвободныйОстаток, 
			ПоказыватьЦены, 
			СпособВыводаОстатков, 
			ЗапоминатьТекущуюИерархию));
	
КонецПроцедуры // ОК()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ

&НаКлиенте
// Процедура - обработчик события ПриИзменении реквизита ПоказыватьОстатки
//
Процедура ПоказыватьОстаткиПриИзменении(Элемент)
	
	УстановитьДоступностьПереключателей(
							ПоказыватьОстатки 
							ИЛИ ПоказыватьРезерв 
							ИЛИ ПоказыватьСвободныйОстаток 
							ИЛИ ПоказыватьЦены);
	
КонецПроцедуры // ПоказыватьОстаткиПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении реквизита ПоказыватьРезерв
//
Процедура ПоказыватьРезервПриИзменении(Элемент)
	
	УстановитьДоступностьПереключателей(
							ПоказыватьОстатки 
							ИЛИ ПоказыватьРезерв 
							ИЛИ ПоказыватьСвободныйОстаток 
							ИЛИ ПоказыватьЦены);
	
КонецПроцедуры // ПоказыватьРезервПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении реквизита ПоказыватьСвободныйОстаток
//
Процедура ПоказыватьСвободныйОстатокПриИзменении(Элемент)
	
	УстановитьДоступностьПереключателей(
							ПоказыватьОстатки 
							ИЛИ ПоказыватьРезерв 
							ИЛИ ПоказыватьСвободныйОстаток 
							ИЛИ ПоказыватьЦены);
	
КонецПроцедуры // ПоказыватьСвободныйОстатокПриИзменении()

&НаКлиенте
//  Процедура - обработчик события ПриИзменении реквизита ПоказыватьЦены
//
Процедура ПоказыватьЦеныПриИзменении(Элемент)
	
	УстановитьДоступностьПереключателей(
							ПоказыватьОстатки 
							ИЛИ ПоказыватьРезерв 
							ИЛИ ПоказыватьСвободныйОстаток 
							ИЛИ ПоказыватьЦены);
	
КонецПроцедуры // ПоказыватьЦеныПриИзменении()

