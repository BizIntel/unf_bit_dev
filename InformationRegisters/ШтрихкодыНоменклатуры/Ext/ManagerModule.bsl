#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьДанныеПоШтрихкодам(Штрихкоды, СтруктурнаяЕдиница = Неопределено) Экспорт

	ДанныеПоШтрихкодам = Новый Соответствие;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Рег.Штрихкод КАК Штрихкод,
	|	Рег.Номенклатура КАК Номенклатура,
	|	Рег.Характеристика КАК Характеристика,
	|	Рег.Партия КАК Партия,
	|	Рег.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(СерийныеНомера.Ссылка, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Рег
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерийныеНомера КАК СерийныеНомера
	|		ПО (&СерийныеНомераИспользуются)
	|			И Рег.Номенклатура = СерийныеНомера.Владелец
	|			И (Рег.Номенклатура.ИспользоватьСерийныеНомера)
	|			И Рег.Штрихкод = СерийныеНомера.Наименование
	|ГДЕ
	|	Рег.Штрихкод В(&МассивШтрихкодов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗДанныеОВесовомТоваре.КодВесовогоТовара,
	|	ТЗДанныеОВесовомТоваре.ПрефиксВесовогоТовара,
	|	ТЗДанныеОВесовомТоваре.ШтрихКод
	|ПОМЕСТИТЬ ВременнаяТаблицаВесовойТовар
	|ИЗ
	|	&ТЗДанныеОВесовомТоваре КАК ТЗДанныеОВесовомТоваре
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КодыТоваровПодключаемогоОборудованияOffline.Номенклатура КАК Номенклатура,
	|	КодыТоваровПодключаемогоОборудованияOffline.Характеристика КАК Характеристика,
	|	КодыТоваровПодключаемогоОборудованияOffline.Партия КАК Партия,
	|	КодыТоваровПодключаемогоОборудованияOffline.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВременнаяТаблицаВесовойТовар.ШтрихКод,
	|	ВременнаяТаблицаВесовойТовар.КодВесовогоТовара,
	|	ВременнаяТаблицаВесовойТовар.ПрефиксВесовогоТовара,
	|	ЕСТЬNULL(СерийныеНомера.Ссылка, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер
	|ИЗ
	|	РегистрСведений.КодыТоваровПодключаемогоОборудованияOffline КАК КодыТоваровПодключаемогоОборудованияOffline
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаВесовойТовар КАК ВременнаяТаблицаВесовойТовар
	|		ПО КодыТоваровПодключаемогоОборудованияOffline.Код = ВременнаяТаблицаВесовойТовар.КодВесовогоТовара
	|			И КодыТоваровПодключаемогоОборудованияOffline.ПравилоОбмена.ПрефиксВесовогоТовара = ВременнаяТаблицаВесовойТовар.ПрефиксВесовогоТовара
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерийныеНомера КАК СерийныеНомера
	|		ПО (&СерийныеНомераИспользуются)
	|			И КодыТоваровПодключаемогоОборудованияOffline.Номенклатура = СерийныеНомера.Владелец
	|			И (КодыТоваровПодключаемогоОборудованияOffline.Номенклатура.ИспользоватьСерийныеНомера)
	|			И (ВременнаяТаблицаВесовойТовар.ШтрихКод = СерийныеНомера.Наименование)
	|ГДЕ
	|	КодыТоваровПодключаемогоОборудованияOffline.ПравилоОбмена.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|	И КодыТоваровПодключаемогоОборудованияOffline.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И КодыТоваровПодключаемогоОборудованияOffline.ПравилоОбмена.ТипПодключаемогоОборудования = ЗНАЧЕНИЕ(Перечисление.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаВесовойТовар.КодВесовогоТовара,
	|	ВременнаяТаблицаВесовойТовар.ПрефиксВесовогоТовара,
	|	ВременнаяТаблицаВесовойТовар.ШтрихКод
	|ИЗ
	|	ВременнаяТаблицаВесовойТовар КАК ВременнаяТаблицаВесовойТовар");
	
	МассивШтрихкодов = Новый Массив;
	ТЗДанныеОВесовомТоваре = Новый ТаблицаЗначений;
	ТЗДанныеОВесовомТоваре.Колонки.Добавить("КодВесовогоТовара", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 0, ДопустимыйЗнак.Неотрицательный)));
	ТЗДанныеОВесовомТоваре.Колонки.Добавить("ПрефиксВесовогоТовара", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1, 0, ДопустимыйЗнак.Неотрицательный)));
	ТЗДанныеОВесовомТоваре.Колонки.Добавить("Штрихкод", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(200)));
	
	Для каждого ТекШтрихкод Из Штрихкоды Цикл
		МассивШтрихкодов.Добавить(ТекШтрихкод.ШтрихКод);
		ДанныеПоШтрихкодам.Вставить(ТекШтрихкод.ШтрихКод, Новый Структура);
		
		Если СтруктурнаяЕдиница <> Неопределено И ТекШтрихкод.Свойство("КодВесовогоТовара") Тогда
			НоваяСтрокаОВесовомТоваре = ТЗДанныеОВесовомТоваре.Добавить();
			НоваяСтрокаОВесовомТоваре.КодВесовогоТовара = ТекШтрихкод.КодВесовогоТовара;
			НоваяСтрокаОВесовомТоваре.ПрефиксВесовогоТовара = ТекШтрихкод.ПрефиксВесовогоТовара;
			НоваяСтрокаОВесовомТоваре.Штрихкод = ТекШтрихкод.Штрихкод;
		КонецЕсли;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("МассивШтрихкодов", МассивШтрихкодов);
	ИспользоватьСерийныеНомера = РаботаССерийнымиНомерами.ИспользоватьСерийныеНомераОстатки();
	Если ИспользоватьСерийныеНомера<>Неопределено Тогда
		Запрос.УстановитьПараметр("СерийныеНомераИспользуются", Истина);
	Иначе
	    Запрос.УстановитьПараметр("СерийныеНомераИспользуются", Ложь);
	КонецЕсли;
	Запрос.УстановитьПараметр("ТЗДанныеОВесовомТоваре", ТЗДанныеОВесовомТоваре);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Выборка = МассивРезультатов[2].Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Штрихкод") Цикл
		ТекДанные = ДанныеПоШтрихкодам[Выборка.Штрихкод];
		ТекДанные.Вставить("Номенклатура", Выборка.Номенклатура);
		ТекДанные.Вставить("Характеристика", Выборка.Характеристика);
		ТекДанные.Вставить("Партия", Выборка.Партия);
		ТекДанные.Вставить("ЕдиницаИзмерения", Выборка.ЕдиницаИзмерения);
		ТекДанные.Вставить("КодВесовогоТовара", Выборка.КодВесовогоТовара);
		ТекДанные.Вставить("ПрефиксВесовогоТовара", Выборка.ПрефиксВесовогоТовара);
		
		Если ИспользоватьСерийныеНомера<>Неопределено Тогда
			ТекДанные.Вставить("СерийныйНомер", Выборка.СерийныйНомер);
		КонецЕсли;
	КонецЦикла;
	
	Выборка = МассивРезультатов[0].Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Штрихкод") Цикл
		ТекДанные = ДанныеПоШтрихкодам[Выборка.Штрихкод];
		Если НЕ ТекДанные.Свойство("КодВесовогоТовара") Тогда
			ТекДанные.Вставить("Номенклатура", Выборка.Номенклатура);
			ТекДанные.Вставить("Характеристика", Выборка.Характеристика);
			ТекДанные.Вставить("Партия", Выборка.Партия);
			ТекДанные.Вставить("ЕдиницаИзмерения", Выборка.ЕдиницаИзмерения);
			
			Если ИспользоватьСерийныеНомера<>Неопределено Тогда
				ТекДанные.Вставить("СерийныйНомер", Выборка.СерийныйНомер);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат ДанныеПоШтрихкодам;

КонецФункции

Функция ПолучитьНоменклатуруПоШтрихкоду(ДанныеШтрихкода) Экспорт
	
	Штрихкод = ДанныеШтрихкода.Штрихкод;
	ПреобразоватьВесовойШтрихкод(ДанныеШтрихкода);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Штрихкод);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Номенклатура;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьШтрихкодПоНоменклатуре(Номенклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
	|	ШтрихкодыНоменклатуры.Партия КАК Партия,
	|	ШтрихкодыНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Партия,
	|	ЕдиницаИзмерения,
	|	Штрихкод";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Штрихкод;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ГенерацияШтрихкодов

// Функция вычисляет контрольный символ кода EAN
//
// Параметры:
//  ШтрихКод     - штрихкод (без контрольной цифры)
//  Тип          - тип штрихкода: 13 - EAN13, 8 - EAN8
//
// Возвращаемое значение:
//  Контрольный символ штрихкода
//
Функция КонтрольныйСимволEAN(ШтрихКод, Тип) Экспорт
	
	Четн   = 0;
	Нечетн = 0;
	
	КоличествоИтераций = ?(Тип = 13, 6, 4);
	
	Для Индекс = 1 По КоличествоИтераций Цикл
		Если (Тип = 8) и (Индекс = КоличествоИтераций) Тогда
		Иначе
			Четн   = Четн   + Сред(ШтрихКод, 2 * Индекс, 1);
		КонецЕсли;
		Нечетн = Нечетн + Сред(ШтрихКод, 2 * Индекс - 1, 1);
	КонецЦикла;
	
	Если Тип = 13 Тогда
		Четн = Четн * 3;
	Иначе
		Нечетн = Нечетн * 3;
	КонецЕсли;
	
	КонтЦифра = 10 - (Четн + Нечетн) % 10;
	
	Возврат ?(КонтЦифра = 10, "0", Строка(КонтЦифра));
	
КонецФункции // КонтрольныйСимволEAN()

Функция ПолучитьМаксимальноеЗначениеКодаШтрихкодаЧислом(ПрефиксШтучногоТовара = "0", ПрефиксВнутреннегоШтрихкода = "00") Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МАКСИМУМ(ПОДСТРОКА(ШтрихкодыНоменклатуры.Штрихкод, 5, 8)) КАК Код
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО &ШаблонШтрихкод"
	);
	
	ШаблонШтрихкод = "2" + ПрефиксШтучногоТовара + ПрефиксВнутреннегоШтрихкода + "_________";
	Запрос.УстановитьПараметр("ШаблонШтрихкод", ШаблонШтрихкод);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеКодаЧислом = ОписаниеТипаЧисла.ПривестиЗначение(Выборка.Код);
	
	Возврат ЗначениеКодаЧислом;
	
КонецФункции // ПолучитьМаксимальноеЗначениеКодаШтрихкодаЧислом()

Функция ПолучитьШтрихкодПоКоду(Код, ПрефиксШтучногоТовара = "0", ПрефиксВнутреннегоШтрихкода = "00") Экспорт

	Штрихкод = "2" + ПрефиксШтучногоТовара + ПрефиксВнутреннегоШтрихкода + Формат(Код, "ЧЦ=8; ЧВН=; ЧГ=");
	Штрихкод = Штрихкод + КонтрольныйСимволEAN(ШтрихКод, 13);
	
	Возврат Штрихкод;

КонецФункции // ПолучитьШтрихкодПоКоду()

// Функция возвращает штрихкод весового товара,
// создаваемый из кода с префиксом весового товара и контрольным символом
//
// Параметры:
//  Код                   - Код
//  ПрефиксВесовогоТовара - Строка
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьШтрихкодВесовогоТовараПоКоду(Код, ПрефиксВесовогоТовара = "1") Экспорт

	Штрихкод = "2" + ПрефиксВесовогоТовара + Формат(Код, "ЧЦ=5; ЧВН=; ЧГ=") + "00000";
	Штрихкод = Штрихкод + КонтрольныйСимволEAN(ШтрихКод, 13);

	Возврат Штрихкод;

КонецФункции

// Функция возвращает префикс весового товара применяемого для генерации штрихкода.
// Используется при выгрузке в весы с печатью этикеток
//
// Параметры:
//  ПодключаемоеОборудованиеСсылка – Ссылка
//
// Возвращаемое значение:
//  Строка
//
Функция ПрефиксВесовогоТовара(ПодключаемоеОборудованиеСсылка) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ПодключаемоеОборудование.ПравилоОбмена.ПрефиксВесовогоТовара, 0) КАК ПрефиксВесовогоТовара
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ПодключаемоеОборудованиеСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ПрефиксВесовогоТовара = Выборка.ПрефиксВесовогоТовара;
		Если ЗначениеЗаполнено(ПрефиксВесовогоТовара) Тогда
			Возврат Строка(Выборка.ПрефиксВесовогоТовара);
		Иначе
			Возврат "1";
		КонецЕсли;
	Иначе
		Возврат "1";
	КонецЕсли;
	
КонецФункции

// Функция осуществляет формирование штрихкода EAN13 для
// штучного товара
//
// Параметры:
//  ПрефиксШтучногоТовара       – Строка
//  ПрефиксВнутреннегоШтрихкода – Строка
//  МаксимальныйКод             – Число
//
// Возвращаемое значение:
//  Строка
//
Функция СформироватьШтрихкодEAN13(ПрефиксШтучногоТовара = "0", ПрефиксВнутреннегоШтрихкода = "00", МаксимальныйКод = 99999999) Экспорт

	Код = Мин(ПолучитьМаксимальноеЗначениеКодаШтрихкодаЧислом(ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода) + 1, МаксимальныйКод);

	Возврат ПолучитьШтрихкодПоКоду(Код, ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода);

КонецФункции

// Функция осуществляет формирование штрихкода EAN13 для
// весового товара
//
// Параметры:
//  ПрефиксВесовогоТовара       – Строка
//  МаксимальныйКод             – Число
//
// Возвращаемое значение:
//  Строка
//
Функция СформироватьШтрихкодВесовогоТовараEAN13(ПрефиксВесовогоТовара = "1", МаксимальныйКод = 99999) Экспорт

	Код = Мин(ПолучитьМаксимальноеЗначениеКодаВесовогоШтрихкодаЧислом(ПрефиксВесовогоТовара) + 1, МаксимальныйКод);

	Возврат ПолучитьШтрихкодВесовогоТовараПоКоду(Код, ПрефиксВесовогоТовара);

КонецФункции

// Функция возвращает максимальное значение штрихкода числом
//
// Параметры:
//  ПрефиксВесовогоТовара       - Строка
//
// Возвращаемое значение:
//  Число
//
Функция ПолучитьМаксимальноеЗначениеКодаВесовогоШтрихкодаЧислом(ПрефиксВесовогоТовара = "1") Экспорт

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПОДСТРОКА(ШтрихкодыНоменклатуры.Штрихкод, 3, 5)) КАК Код
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО &ФорматШтрихкода
	|");

	Запрос.УстановитьПараметр("ФорматШтрихкода", РегистрыСведений.ШтрихкодыНоменклатуры.ФорматВесовогоШтрихкода(ПрефиксВесовогоТовара));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеКодаЧислом = ОписаниеТипаЧисла.ПривестиЗначение(Выборка.Код);
	
	Возврат ЗначениеКодаЧислом;

КонецФункции

// Функция возвращает формат весового штрихкода для запросов
//
// Параметры:
//  ПрефиксВесовогоШтрихкода – Строка
//
// Возвращаемое значение:
//  Строка
//
Функция ФорматВесовогоШтрихкода(ПрефиксВесовогоШтрихкода) Экспорт
	
	Возврат "2" + ПрефиксВесовогоШтрихкода + "_____00000_";
	
КонецФункции

// Функция возвращает массив префиксов весовых штрихкодов
Функция ПолучитьПрефиксыВесовыхШтрихкодов() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВозвращаемоеЗначение = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПравилаОбменаСПодключаемымОборудованиемOffline.ПрефиксВесовогоТовара КАК Префикс
	|ИЗ
	|	Справочник.ПравилаОбменаСПодключаемымОборудованиемOffline КАК ПравилаОбменаСПодключаемымОборудованиемOffline
	|ГДЕ
	|	ПравилаОбменаСПодключаемымОборудованиемOffline.ТипПодключаемогоОборудования = &ТипПодключаемогоОборудования");
	
	Запрос.УстановитьПараметр("ТипПодключаемогоОборудования", Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВозвращаемоеЗначение.Добавить(Строка(Выборка.Префикс));
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Процедура выполняет преобразование штрихкода, полученного
// из весов с печатью этикеток в штрихкод, пригодный для поиска в БД.
//
// Параметры:
//  ТекШтрихкод               – Строка
//  ПрефиксыВесовыхШтрихкодов – Массив
//
Процедура ПреобразоватьВесовойШтрихкод(ТекШтрихкод) Экспорт
	
	ПрефиксыВесовыхШтрихкодов = ПолучитьПрефиксыВесовыхШтрихкодов();
	
	Если СтрДлина(ТекШтрихкод.Штрихкод) = 13 // EAN13
		И Лев(ТекШтрихкод.Штрихкод, 1) = "2" // Внутренний штрихкод
		И ПрефиксыВесовыхШтрихкодов.Найти(Сред(ТекШтрихкод.Штрихкод, 2, 1)) <> Неопределено Тогда // Найден префикс весового товара
		
		// Штрихкод является весовым, выполняем преобразование.
		// Формат весового штрихкода: 2 + П + ЧЧЧЧЧ + BBBBB + K
		// Где,
		//  П     - Префикс весового товара
		//  ЧЧЧЧЧ - код весового товара
		//  BBBBB - Вес
		//  К     - Контрольное число
		
		ВнутреннийШтрихкод12 = Лев(ТекШтрихкод.Штрихкод, 7) + "00000";
		ВнутреннийШтрихкод13 = ВнутреннийШтрихкод12 + РегистрыСведений.ШтрихкодыНоменклатуры.КонтрольныйСимволEAN(ВнутреннийШтрихкод12, 13);
		Вес = Число(Сред(ТекШтрихкод.Штрихкод, 8, 2)) + Число(Сред(ТекШтрихкод.Штрихкод, 10, 3)) / 1000;
		
		ТекШтрихкод.Штрихкод   = ВнутреннийШтрихкод13;
		ТекШтрихкод.Количество = ТекШтрихкод.Количество * Вес;
		ТекШтрихкод.Вставить("КодВесовогоТовара", Число(Сред(ТекШтрихкод.Штрихкод, 3, 5)));
		ТекШтрихкод.Вставить("ПрефиксВесовогоТовара", Число(Сред(ТекШтрихкод.Штрихкод, 2, 1)));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли