
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаписьБылаЗаписана = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Запись.ИсходныйКлючЗаписи.ВидЦен) Тогда
		
		Запись.Автор = Пользователи.ТекущийПользователь();
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Актуальность", "Видимость", Ложь);
		
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура")
			И Параметры.ЗначенияЗаполнения.Свойство("Номенклатура")
			И ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.Номенклатура) Тогда
			
			Запись.ЕдиницаИзмерения = Параметры.ЗначенияЗаполнения.Номенклатура.ЕдиницаИзмерения;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ВидЦен") Тогда
		
		Если ЗначениеЗаполнено(Параметры.ВидЦен) Тогда
			Запись.ВидЦен = Параметры.ВидЦен;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.ВидЦен) Тогда
		
		Запись.ВидЦен = Справочники.ВидыЦен.ПолучитьОсновнойВидЦенПродажи();
		
	КонецЕсли;
	
	Если Параметры.Свойство("Номенклатура") Тогда
		
		Если ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
			Запись.Номенклатура = Параметры.Номенклатура;
			Запись.ЕдиницаИзмерения = Параметры.Номенклатура.ЕдиницаИзмерения;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Свойство("Цена") Тогда
		
		Запись.Цена = Параметры.Цена;
		
	КонецЕсли;
	
	ОкруглятьВБольшуюСторону = Запись.ВидЦен.ОкруглятьВБольшуюСторону;
	ПорядокОкругления = Запись.ВидЦен.ПорядокОкругления;
	ПорядкиОкругленияОкр0_01 = Перечисления.ПорядкиОкругления.Окр0_01;
	
	// Установка доступности цен для редактирования.
	РазрешеноРедактированиеЦенДокументов = УправлениеНебольшойФирмойУправлениеДоступомПовтИсп.ЕстьПравоДоступа(
		"Редактирование",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.РегистрыСведений.ЦеныНоменклатуры)
	);
	
	ИспользоватьХарактеристики = Запись.Номенклатура.ИспользоватьХарактеристики;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВключаяХарактеристики" , "Доступность", ИспользоватьХарактеристики И НЕ ЗначениеЗаполнено(Запись.Характеристика));
	
	ЭтаФорма.ТолькоПросмотр = НЕ РазрешеноРедактированиеЦенДокументов;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события ПередЗакрытием формы.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если ЗаписьБылаЗаписана Тогда
		Оповестить("ИзмененаЦена", ЗаписьБылаЗаписана);
	КонецЕсли;
КонецПроцедуры

&НаСервере
// Процедура - обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ВидЦен.РассчитыватьАвтоматически Тогда
		
		ТекстСообщения = Нстр("ru ='Записи по данному виду цен рассчитываются только автоматически'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.ВидЦен", , Отказ);
		
	КонецЕсли;
	
	Если Модифицированность Тогда
		ТекущийОбъект.Автор = Пользователи.ТекущийПользователь();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик события ПередЗаписью.
//
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "РегистрСведенийЦеныНоменклатурыЗаписьИнтерактивно");
	// СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры //ПередЗаписью()

&НаСервере
// Процедура - обработчик события ПослеЗаписиНаСервере формы
//
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ВключаяХарактеристики Тогда
		
		ДеталиЗаписи = Новый Структура;
		ДеталиЗаписи.Вставить("Период", 			НачалоДня(ТекущийОбъект.Период));
		ДеталиЗаписи.Вставить("ВидЦен", 			ТекущийОбъект.ВидЦен);
		ДеталиЗаписи.Вставить("Номенклатура",		ТекущийОбъект.Номенклатура);
		ДеталиЗаписи.Вставить("ЕдиницаИзмерения",	ТекущийОбъект.ЕдиницаИзмерения);
		ДеталиЗаписи.Вставить("Цена", 				ТекущийОбъект.Цена);
		ДеталиЗаписи.Вставить("Автор", 				ТекущийОбъект.Автор);
		
		ДеталиЗаписи.Вставить("ПараметрыЗаписи",	ПараметрыЗаписи);
		
		УправлениеНебольшойФирмойСервер.ЗаписатьЦеныХарактеристик(ДеталиЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры // ПослеЗаписиНаСервере()

&НаКлиенте
// Процедура - обработчик события ПослеЗаписи формы.
//
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаписьБылаЗаписана = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Номенклатура.
//
Процедура НоменклатураПриИзменении(Элемент)
	
	СтруктураДанных = ПолучитьДанныеНоменклатураПриИзменении(Запись.Номенклатура);
	Запись.ЕдиницаИзмерения = СтруктураДанных.ЕдиницаИзмерения;
	ИспользоватьХарактеристики = СтруктураДанных.ИспользоватьХарактеристики;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВключаяХарактеристики" , "Доступность", ИспользоватьХарактеристики);
	Если НЕ ИспользоватьХарактеристики Тогда
		
		Запись.ВключаяХарактеристики = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Номенклатура.
//
Процедура ХарактеристикаПриИзменении(Элемент)
	
	Если ИспользоватьХарактеристики Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВключаяХарактеристики" , "Доступность", НЕ ЗначениеЗаполнено(Запись.Характеристика));
		Если ЗначениеЗаполнено(Запись.Характеристика) Тогда
			
			Запись.ВключаяХарактеристики = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ХарактеристикаПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Цена.
//
Процедура ВидЦенПриИзменении(Элемент)
	
	СтруктураДанных = ПолучитьДанныеВидЦенПриИзменении(Запись.ВидЦен);
	ОкруглятьВБольшуюСторону = СтруктураДанных.ОкруглятьВБольшуюСторону;
	ПорядокОкругления = СтруктураДанных.ПорядокОкругления;
	
	Запись.Цена = ОкруглитьЦену(Запись.Цена, ПорядокОкругления, ОкруглятьВБольшуюСторону);
	
КонецПроцедуры // ВидЦенПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Цена.
//
Процедура ЦенаПриИзменении(Элемент)
	
	Запись.Цена = ОкруглитьЦену(Запись.Цена, ПорядокОкругления, ОкруглятьВБольшуюСторону);
	
КонецПроцедуры // ЦенаПриИзменении()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
// Получает набор данных с сервера для процедуры НоменклатураПриИзменении.
//
Функция ПолучитьДанныеНоменклатураПриИзменении(Номенклатура)
	
	Возврат Новый Структура("ЕдиницаИзмерения, ИспользоватьХарактеристики", Номенклатура.ЕдиницаИзмерения, Номенклатура.ИспользоватьХарактеристики);
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

&НаСервереБезКонтекста
// Получает набор данных с сервера для процедуры ВидЦенПриИзменении.
//
Функция ПолучитьДанныеВидЦенПриИзменении(ВидЦен)
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ОкруглятьВБольшуюСторону", ВидЦен.ОкруглятьВБольшуюСторону);
	СтруктураДанных.Вставить("ПорядокОкругления", ВидЦен.ПорядокОкругления);
	
	Возврат СтруктураДанных;
	
КонецФункции // ПолучитьДанныеВидЦенПриИзменении()	

&НаКлиенте
// Округляет число по заданному порядку.
//
// Параметры:
//  Число        - Число, которое необходимо округлить
//  ПорядокОкругления - Перечисления.ПорядкиОкругления - порядок округления
//  ОкруглятьВБольшуюСторону - Булево - округления в большую сторону.
//
// Возвращаемое значение:
//  Число        - результат округления.
//
Функция ОкруглитьЦену(Число, ПравилоОкругления, ОкруглятьВБольшуюСторону) Экспорт
	
	Перем Результат; // Возвращаемый результат.
	
	// Преобразуем порядок округления числа.
	// Если передали пустое значение порядка, то округлим до копеек. 
	Если НЕ ЗначениеЗаполнено(ПравилоОкругления) Тогда
		ПорядокОкругления = ПорядкиОкругленияОкр0_01; 
	Иначе
		ПорядокОкругления = ПравилоОкругления;
	КонецЕсли;
	Порядок = Число(Строка(ПорядокОкругления));
	
	// вычислим количество интервалов, входящих в число
	КоличествоИнтервал	= Число / Порядок;
	
	// вычислим целое количество интервалов.
	КоличествоЦелыхИнтервалов = Цел(КоличествоИнтервал);
	
	Если КоличествоИнтервал = КоличествоЦелыхИнтервалов Тогда
		
		// Числа поделились нацело. Округлять не нужно.
		Результат	= Число;
	Иначе
		Если ОкруглятьВБольшуюСторону Тогда
			
			// При порядке округления "0.05" 0.371 должно округлиться до 0.4
			Результат = Порядок * (КоличествоЦелыхИнтервалов + 1);
		Иначе
			
			// При порядке округления "0.05" 0.371 должно округлиться до 0.35,
			// а 0.376 до 0.4
			Результат = Порядок * Окр(КоличествоИнтервал, 0, РежимОкругления.Окр15как20);
		КонецЕсли; 
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ОкруглитьЦену()

#КонецОбласти
