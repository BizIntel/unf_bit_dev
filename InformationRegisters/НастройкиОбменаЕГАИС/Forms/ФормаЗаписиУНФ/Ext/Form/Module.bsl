
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьНадписьВерсия();
	
	Элементы.ОбменНаСервере.Видимость = НЕ ОбщегоНазначенияПовтИсп.РазделениеВключено();
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		Если Не ЗначениеЗаполнено(Запись.Организация) Тогда
			Запись.Организация = Справочники.Организации.ОсновнаяОрганизация;
		КонецЕсли;
		ОрганизацияКеш = Справочники.Организации.ОсновнаяОрганизация;
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("УчетПоНесколькимСкладам") Тогда
		Если Не ЗначениеЗаполнено(Запись.ТорговаяТочка) Тогда
			Запись.ТорговаяТочка = Справочники.СтруктурныеЕдиницы.ОсновнойСклад;
		КонецЕсли;
		СкладКеш = Справочники.СтруктурныеЕдиницы.ОсновнойСклад;
	КонецЕсли;
	ЗаполнитьДанные();
	ПриИзмененииВариантаПодключения();
	
	Если НЕ ПустаяСтрока(Запись.ИдентификаторФСРАР) Тогда
		ФорматОбмена = ИспользуемыйФорматОбмена(Запись.ИдентификаторФСРАР);
	Иначе
		ФорматОбмена = Перечисления.ФорматыОбменаЕГАИС.V1;
	КонецЕсли;
	
	Элементы.ГруппаОбработкаОбслуживания.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеОтчетыИОбработки");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПрочитатьРеквизитыФормы(ТекущийОбъект);
	ПриИзмененииВариантаПодключения();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьРеквизитыФормы(ТекущийОбъект)
	
	СкладКеш = ТекущийОбъект.ТорговаяТочка;
	ОрганизацияКеш = ТекущийОбъект.Организация;
	
	ТекущееРабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	Если Запись.РабочееМесто = ТекущееРабочееМесто И ЗначениеЗаполнено(ТекущееРабочееМесто) Тогда
		ИспользоватьНастройкуДляТекущегоРабочегоМеста = Истина;
	КонецЕсли;
	
	ОбменНаСервере = ТекущийОбъект.ОбменНаСервере;
	
	ЗаполнитьДанные();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ИспользоватьНастройкуДляТекущегоРабочегоМеста Тогда
		ТребуетсяПроверкаНаДубли = (СкладКеш <> Запись.ТорговаяТочка) Или (ОрганизацияКеш <> Запись.Организация) Или (ТекущееРабочееМесто <> Запись.РабочееМесто);
	Иначе
		ТребуетсяПроверкаНаДубли = (СкладКеш <> Запись.ТорговаяТочка) Или (ОрганизацияКеш <> Запись.Организация);
	КонецЕсли;
	
	Если ТребуетсяПроверкаНаДубли Тогда
	
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
		|ГДЕ
		|	НастройкиОбменаЕГАИС.Организация = &Организация
		|	И НастройкиОбменаЕГАИС.ТорговаяТочка = &ТорговаяТочка
		|	И НастройкиОбменаЕГАИС.РабочееМесто = &РабочееМесто");
		
		Запрос.УстановитьПараметр("ТорговаяТочка", Запись.ТорговаяТочка);
		Запрос.УстановитьПараметр("Организация", Запись.Организация);
		Запрос.УстановитьПараметр("РабочееМесто", ?(ИспользоватьНастройкуДляТекущегоРабочегоМеста, ТекущееРабочееМесто, Запись.РабочееМесто));
		
		Если НЕ Запрос.Выполнить().Пустой() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Настройка обмена для организации %1 и склада %2 уже существует'"),
					Запись.Организация,
					Запись.ТорговаяТочка),,
				"Запись.Организация",,
				Отказ);
		КонецЕсли;
	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИНН) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""ИНН""'"),, "ИНН",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК ОрганизацияЕГАИС
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Код = &КодВФСРАР");
	Запрос.УстановитьПараметр("КодВФСРАР", Запись.ИдентификаторФСРАР);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ОрганизацияЕГАИС = Выборка.ОрганизацияЕГАИС;
		
	Иначе
		
		КлассификаторОрганизацийЕГАИСОбъект = Справочники.КлассификаторОрганизацийЕГАИС.СоздатьЭлемент();
		КлассификаторОрганизацийЕГАИСОбъект.Код          = Запись.ИдентификаторФСРАР;
		КлассификаторОрганизацийЕГАИСОбъект.ИНН          = ИНН;
		КлассификаторОрганизацийЕГАИСОбъект.КПП          = КПП;
		КлассификаторОрганизацийЕГАИСОбъект.Наименование = Запись.Организация;
		КлассификаторОрганизацийЕГАИСОбъект.УчитыватьОстаткиАлкогольнойПродукции = Истина;
		КлассификаторОрганизацийЕГАИСОбъект.Записать();
		
		ОрганизацияЕГАИС = КлассификаторОрганизацийЕГАИСОбъект.Ссылка;
		
	КонецЕсли;
	
	ТекущийОбъект.ОбменНаСервере = ОбменНаСервере;
	
	Если ИспользоватьНастройкуДляТекущегоРабочегоМеста Тогда
		ТекущийОбъект.РабочееМесто = ТекущееРабочееМесто;
	Иначе
		ТекущийОбъект.РабочееМесто = Справочники.РабочиеМеста.ПустаяСсылка();
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ФорматыОбменаЕГАИС.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИдентификаторФСРАР = Запись.ИдентификаторФСРАР;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() И МенеджерЗаписи.ФорматОбмена = ФорматОбмена Тогда
		ИзмененФорматОбмена = Ложь;
	Иначе
		ИзмененФорматОбмена = Истина;
		МенеджерЗаписи.ИдентификаторФСРАР = Запись.ИдентификаторФСРАР;
		МенеджерЗаписи.ФорматОбмена = ФорматОбмена;
		МенеджерЗаписи.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ИнтеграцияЕГАИСУНФ.УстановитьПризнакУчетаОстатковАлкогольнойПродукции(ТекущийОбъект.ИдентификаторФСРАР);
	ПрочитатьРеквизитыФормы(ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Организация", Запись.Организация);
	ПараметрыЗаписи.Вставить("Склад",       Запись.ТорговаяТочка);
	
	ИнтеграцияЕГАИСКлиент.ПодключитьОбработчикОтветовЕГАИС();
	
	Оповестить("Запись_ПараметрыПодключенияЕГАИС", ПараметрыЗаписи, ЭтаФорма);
	
	Если ИзмененФорматОбмена Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ВыгрузкаИнформацииОФорматеОбмена_Подтверждение", ЭтотОбъект),
			НСтр("ru='Изменился формат обмена с ЕГАИС. Выгрузить информацию об изменении формата в УТМ?'"),
			РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗаполнитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	ЗаполнитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторФСРАРПриИзменении(Элемент)
	
	ЗаполнитьДанные();
	ФорматОбмена = ИспользуемыйФорматОбмена(Запись.ИдентификаторФСРАР);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбменНаСервереПриИзменении(Элемент)
	
	Если ОбменНаСервере = 1 Тогда
		ИспользоватьНастройкуДляТекущегоРабочегоМеста = Ложь;
	КонецЕсли;
	
	ПриИзмененииВариантаПодключения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОбслуживанияПриИзменении(Элемент)
	
	УстановитьНадписьВерсия();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДанные()
	
	Если Не ЗначениеЗаполнено(Запись.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("КодВФСРАР", ОбщегоНазначения.ОписаниеТипаСтрока(12));
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.Организация = Запись.Организация;
	НоваяСтрока.КодВФСРАР = СокрЛП(Запись.ИдентификаторФСРАР);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.КодВФСРАР   КАК КодВФСРАР
	|ПОМЕСТИТЬ Таблица
	|ИЗ
	|	&Таблица КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК ОрганизацияЕГАИС,
	|	ЕСТЬNULL(Таблица.Организация.ИНН, """") КАК ИНН,
	|	ЕСТЬNULL(Таблица.Организация.КПП, """") КАК КПП,
	|	КлассификаторОрганизацийЕГАИС.ИНН КАК ИНН_ЕГАИС,
	|	КлассификаторОрганизацийЕГАИС.КПП КАК КПП_ЕГАИС
	|ИЗ
	|	Таблица КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|			ПО КлассификаторОрганизацийЕГАИС.Код = Таблица.КодВФСРАР");
	
	Запрос.УстановитьПараметр("Таблица", Таблица);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ИНН                     = Выборка.ИНН;
		КПП                     = Выборка.КПП;
		ОрганизацияЕГАИС = Выборка.ОрганизацияЕГАИС;
		
		Элементы.ИНННеСоответствуетОрганизацииЕГАИС.Видимость = (Выборка.ИНН <> Выборка.ИНН_ЕГАИС) И ЗначениеЗаполнено(Запись.ИдентификаторФСРАР);
		Элементы.КППНеСоответствуетОрганизацииЕГАИС.Видимость = (Выборка.КПП <> Выборка.КПП_ЕГАИС) И ЗначениеЗаполнено(Запись.ИдентификаторФСРАР);
		
	Иначе
		
		ИНН                     = "";
		КПП                     = "";
		ОрганизацияЕГАИС = Неопределено;
		
		Элементы.ИНННеСоответствуетОрганизацииЕГАИС.Видимость = Ложь;
		Элементы.КППНеСоответствуетОрганизацииЕГАИС.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВариантаПодключения()
	
	Подсказка = "";
	Если ОбменНаСервере = 0 Тогда
		Подсказка = НСтр("ru = 'Подключение к УТМ будет осуществляться с компьютера пользователя'");
	ИначеЕсли ОбменНаСервере = 1 Тогда
		Подсказка = НСтр("ru = 'Подключение к УТМ будет осуществляться с компьютера, на котором установлен сервер 1С:Предприятия'");
	КонецЕсли;
	
	Элементы.ОбменНаСервере.Подсказка = Подсказка;
	
	Если ОбменНаСервере = 1 Тогда
		Элементы.ИспользоватьНастройкуДляТекущегоРабочегоМеста.Видимость = Ложь;
	Иначе
		Элементы.ИспользоватьНастройкуДляТекущегоРабочегоМеста.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНадписьВерсия()
	
	Элементы.ОбработкаОбслуживанияВерсия.Видимость = НЕ Запись.ОбработкаОбслуживания.Пустая();
	Элементы.НадписьОбработкаОбслуживанияНеВыбрана.Видимость = Запись.ОбработкаОбслуживания.Пустая();
	
	Если НЕ Запись.ОбработкаОбслуживания.Пустая() Тогда
		ВерсияОбработки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.ОбработкаОбслуживания, "Версия");
		
		Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ВерсияОбработки, ИнтеграцияЕГАИСКлиентСервер.ВерсияПодсистемыЕГАИС()) < 0 Тогда
			Элементы.ОбработкаОбслуживанияВерсия.ЦветТекста = Новый Цвет(255, 0, 0);
			Элементы.ОбработкаОбслуживанияВерсия.Подсказка = НСтр("ru = 'Используется устаревшая версия обработки'");
		Иначе
			Элементы.ОбработкаОбслуживанияВерсия.ЦветТекста = Новый Цвет(0, 128, 0);
			Элементы.ОбработкаОбслуживанияВерсия.Подсказка = НСтр("ru = 'Используемая версия актуальна'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользуемыйФорматОбмена(ИдентификаторФСРАР)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИдентификаторФСРАР", ИдентификаторФСРАР);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФорматыОбменаЕГАИС.ФорматОбмена КАК ФорматОбмена
	|ИЗ
	|	РегистрСведений.ФорматыОбменаЕГАИС КАК ФорматыОбменаЕГАИС
	|ГДЕ
	|	ФорматыОбменаЕГАИС.ИдентификаторФСРАР = &ИдентификаторФСРАР";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Возврат РезультатЗапроса.Выгрузить()[0].ФорматОбмена;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ВыгрузкаИнформацииОФорматеОбмена_Подтверждение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ИзмененФорматОбмена = Ложь;
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Массив;
	Отбор.Добавить(Новый Структура("Поле, Значение", "ИдентификаторФСРАР", Запись.ИдентификаторФСРАР));
	Отбор.Добавить(Новый Структура("Поле, Значение", "РабочееМесто", Запись.РабочееМесто));
	
	ДоступныеМодули = ИнтеграцияЕГАИСВызовСервера.ДоступныеТранспортныеМодули(Отбор);
	Если ДоступныеМодули.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТранспортныйМодуль = ДоступныеМодули[0];
	
	ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ИнформацияОФорматеОбмена");
	
	ВходныеПараметры = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(ВидДокумента);
	ВходныеПараметры.ИдентификаторФСРАР = ТранспортныйМодуль.ИдентификаторФСРАР;
	ВходныеПараметры.ФорматОбмена = ТранспортныйМодуль.ФорматОбмена;
	
	ИнтеграцияЕГАИСКлиент.НачатьФормированиеИсходящегоЗапроса(
		Новый ОписаниеОповещения("ВыгрузкаИнформацииОФорматеОбмена_Завершение", ЭтотОбъект),
		ВидДокумента,
		ВходныеПараметры,
		ТранспортныйМодуль);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаИнформацииОФорматеОбмена_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат.Результат Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьПредупреждение(, НСтр("ru='Информация об изменении формата обмена успешно выгружена в УТМ.'"));
	
КонецПроцедуры


#КонецОбласти