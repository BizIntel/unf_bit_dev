
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ОбменНаСервере.Видимость = НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая()
		И НЕ ОбщегоНазначенияПовтИсп.РазделениеВключено();
	
	РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	Список.Параметры.УстановитьЗначениеПараметра("ТекущееРабочееМесто", РабочееМесто);
	
	ИндексЭлементаУсловногоОформления = -1;
	УстановитьОтборПоРабочемуМесту();
	
	РасписаниеСтруктура = СтандартныеПодсистемыВызовСервера.ПараметрыРаботыКлиента().РасписаниеОбработкиОтветов;
	РасписаниеПроверкиОтветов = ОбщегоНазначенияКлиентСервер.СтруктураВРасписание(РасписаниеСтруктура);
	Элементы.НадписьОткрытьРасписание.Заголовок = ТекстНадписиОткрытьРасписание(РасписаниеПроверкиОтветов);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НадписьОткрытьРасписаниеНажатие(Элемент)
	
	Если РасписаниеПроверкиОтветов = Неопределено Тогда
		РасписаниеПроверкиОтветов = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеПроверкиОтветов);
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("НадписьОткрытьРасписаниеНажатиеЗавершение", ЭтотОбъект);
	Диалог.Показать(ОповещениеПриЗавершении);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьВсеРабочиеМеста(Команда)
	
	ПоказатьВсеРабочиеМеста = НЕ ПоказатьВсеРабочиеМеста;
	
	Элементы.ФормаПоказатьВсеРабочиеМеста.Пометка = ПоказатьВсеРабочиеМеста;
	
	Если ПоказатьВсеРабочиеМеста Тогда
		УдалитьОтборПоРабочемуМесту();
	Иначе
		УстановитьОтборПоРабочемуМесту();
	КонецЕсли;
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьЗаголовокФормы()
	
	Если ПоказатьВсеРабочиеМеста Тогда
		АвтоЗаголовок = Истина;
		Заголовок = "";
	Иначе
		АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru = 'Настройки обмена с ЕГАИС:'") + " " + Строка(РабочееМесто);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьОтборПоРабочемуМесту()
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.КомпоновщикНастроек.Настройки.Отбор, "РабочееМесто");
	
	ДобавитьУсловноеОформлениеПоТекущемуРабочемуМесту();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоРабочемуМесту()
	
	РабочиеМеста = Новый Массив;
	РабочиеМеста.Добавить(РабочееМесто);
	РабочиеМеста.Добавить(Справочники.РабочиеМеста.ПустаяСсылка());
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.КомпоновщикНастроек.Настройки.Отбор,
		"РабочееМесто",
		РабочиеМеста,
		ВидСравненияКомпоновкиДанных.ВСписке,
		НСтр("ru = 'Доступная настройка обмена'"),
		Истина);
		
	Если ИндексЭлементаУсловногоОформления >= 0 Тогда
		УсловноеОформление.Элементы.Удалить(УсловноеОформление.Элементы.Получить(ИндексЭлементаУсловногоОформления));
		ИндексЭлементаУсловногоОформления = -1;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьУсловноеОформлениеПоТекущемуРабочемуМесту()
	
	ПредставлениеЭлемента = НСтр("ru = 'Доступная настройка обмена'");
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Представление = ПредставлениеЭлемента;
	ЭлементУсловногоОформления.Использование = Истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,, Истина));
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Список");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ЭлементУсловногоОформления.Отбор,
		"Список.РабочееМесто",
		Новый ПолеКомпоновкиДанных("Список.ТекущееРабочееМесто"),
		ВидСравненияКомпоновкиДанных.Равно,
		ПредставлениеЭлемента,
		Истина);
		
	ИндексЭлементаУсловногоОформления = УсловноеОформление.Элементы.Индекс(ЭлементУсловногоОформления);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОткрытьРасписаниеНажатиеЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		РасписаниеПроверкиОтветов = Расписание;
		Элементы.НадписьОткрытьРасписание.Заголовок = ТекстНадписиОткрытьРасписание(РасписаниеПроверкиОтветов);
		ЗаписатьРасписаниеОбработкиОтветов(РасписаниеПроверкиОтветов);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьРасписаниеОбработкиОтветов(РасписаниеПроверкиОтветов)
	
	РегламентноеЗадание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.ОбработкаОтветовЕГАИС);
	Если РегламентноеЗадание <> Неопределено Тогда
		РегламентноеЗадание.Расписание = РасписаниеПроверкиОтветов;
		РегламентноеЗадание.Записать();
	Иначе
		ПоместитьВоВременноеХранилище(РасписаниеПроверкиОтветов, ПараметрыСеанса.ИдентификаторСеансаЕГАИС);
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекстНадписиОткрытьРасписание(Расписание)
	
	СтроковоеПредставлениеРасписания = Строка(Расписание);
	Возврат ?(Не ПустаяСтрока(СтроковоеПредставлениеРасписания),
		СтроковоеПредставлениеРасписания, НСтр("ru = 'Не задано'"));
		
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Представление = НСтр("ru='Представление рабочего места'");
	ЭлементУсловногоОформления.Использование = Истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='<Все>'"));
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("РабочееМесто");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ЭлементУсловногоОформления.Отбор,
		"Список.РабочееМесто",
		,
		ВидСравненияКомпоновкиДанных.НеЗаполнено,
		НСтр("ru='Пустое рабочее место'"),
		Истина);
	
КонецПроцедуры

#КонецОбласти