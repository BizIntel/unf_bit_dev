#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает идентификаторы письма.
// Сопоставление идентификаторов выполняется по полю ИдентификаторСообщения.
// При отсутствии идентификатора сообщения в поле Идентификатор записывается ИдентификаторСообщения.
//
// Параметры:
//  УчетнаяЗапись			 - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты
//  Событие					 - ДокументСсылка.Событие - событие, для которого записываются идентификаторы
//  ИдентификаторыСообщений	 - Массив - массив строк - идентификаторов письма, как указано в поле заголовка Message-ID
//
Процедура ЗаписатьИдентификаторы(Знач УчетнаяЗапись, Знач Событие, Знач ИдентификаторыСообщений) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
	НаборЗаписей.Отбор.Событие.Установить(Событие);
	НаборЗаписей.Прочитать();
	
	Для Каждого ТекИдентификатор Из ИдентификаторыСообщений Цикл
		
		ИдентификаторСообщения = ЭлектроннаяПочтаУНФКлиентСервер.СократитьУгловыеСкобки(ТекИдентификатор);
		
		Если ИдентификаторЕстьВНаборе(НаборЗаписей, ИдентификаторСообщения) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.УчетнаяЗапись = УчетнаяЗапись;
		НоваяЗапись.Событие = Событие;
		НоваяЗапись.ИдентификаторСообщения = ИдентификаторСообщения;
		
		НоваяЗапись.Ключ = ОбменСGoogle.КлючИзИдентификатора(ИдентификаторСообщения,
		"РС.ИдентификаторыСообщений.ЗаписатьИдентификаторы()");
		
	КонецЦикла;
	
	Если НаборЗаписей.Модифицированность() Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

Функция ИдентификаторыСообщений(Знач УчетнаяЗапись, Знач События) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый Массив;
	
	Если Не ЗначениеЗаполнено(События) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИдентификаторыСообщений.ИдентификаторСообщения
	|ИЗ
	|	РегистрСведений.ИдентификаторыСообщений КАК ИдентификаторыСообщений
	|ГДЕ
	|	ИдентификаторыСообщений.УчетнаяЗапись = &УчетнаяЗапись
	|	И ИдентификаторыСообщений.Событие В(&События)");
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	Запрос.УстановитьПараметр("События", События);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.ИдентификаторСообщения) Тогда
			Продолжить;
		КонецЕсли;
		
		Результат.Добавить(Выборка.ИдентификаторСообщения);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СобытияПоИдентификаторамСообщений(Знач УчетнаяЗапись, Знач ИдентификаторыСообщений) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый Соответствие;
	
	ТаблицаИдентификаторов = Новый ТаблицаЗначений;
	ТаблицаИдентификаторов.Колонки.Добавить("ИдентификаторСообщения", Новый ОписаниеТипов("Строка"));
	ТаблицаИдентификаторов.Колонки.Добавить("Ключ", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(64)));
	
	Для Каждого ТекИдентификаторСообщения Из ИдентификаторыСообщений Цикл
		Если Не ЗначениеЗаполнено(ТекИдентификаторСообщения) Тогда
			Продолжить;
		КонецЕсли;
		ТекСтрокаТаблицаИдентификаторов = ТаблицаИдентификаторов.Добавить();
		ТекСтрокаТаблицаИдентификаторов.ИдентификаторСообщения = ТекИдентификаторСообщения;
		ТекСтрокаТаблицаИдентификаторов.Ключ = ОбменСGoogle.КлючИзИдентификатора(
		ТекИдентификаторСообщения,
		"РС.ИдентификаторыСообщений.СобытияПоИдентификаторамСообщений()");
	КонецЦикла;
	
	Если ТаблицаИдентификаторов.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаИдентификаторов.ИдентификаторСообщения КАК ИдентификаторСообщения,
	|	ТаблицаИдентификаторов.Ключ КАК Ключ
	|ПОМЕСТИТЬ ИдентификаторыСообщенийНаСервере
	|ИЗ
	|	&ТаблицаИдентификаторов КАК ТаблицаИдентификаторов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИдентификаторов.ИдентификаторСообщения,
	|	ИдентификаторыСообщений.Событие
	|ИЗ
	|	РегистрСведений.ИдентификаторыСообщений КАК ИдентификаторыСообщений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИдентификаторыСообщенийНаСервере КАК ТаблицаИдентификаторов
	|		ПО ИдентификаторыСообщений.Ключ = ТаблицаИдентификаторов.Ключ
	|ГДЕ
	|	ИдентификаторыСообщений.УчетнаяЗапись = &УчетнаяЗапись");
	
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	Запрос.УстановитьПараметр("ТаблицаИдентификаторов", ТаблицаИдентификаторов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат[Выборка.ИдентификаторСообщения] = Выборка.Событие;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ОтправленныеСобытияПоИдентификаторамСообщений(Знач УчетнаяЗапись) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИдентификаторыСообщений.Событие,
	|	ИдентификаторыСообщений.ИдентификаторСообщения
	|ИЗ
	|	РегистрСведений.ИдентификаторыСообщений КАК ИдентификаторыСообщений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИдентификаторыСобытий КАК ИдентификаторыСобытий
	|		ПО ИдентификаторыСообщений.Событие = ИдентификаторыСобытий.Событие
	|			И ИдентификаторыСообщений.Ключ = ИдентификаторыСобытий.Ключ
	|ГДЕ
	|	ИдентификаторыСообщений.Событие.ВходящееИсходящееСобытие = ЗНАЧЕНИЕ(Перечисление.ВходящееИсходящееСобытие.Исходящее)
	|	И ИдентификаторыСообщений.УчетнаяЗапись = &УчетнаяЗапись
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыСообщений.Событие,
	|	ИдентификаторыСообщений.ИдентификаторСообщения
	|ИЗ
	|	РегистрСведений.ИдентификаторыСообщений КАК ИдентификаторыСообщений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИдентификаторыСобытий КАК ИдентификаторыСобытий
	|		ПО ИдентификаторыСообщений.Событие = ИдентификаторыСобытий.Событие
	|ГДЕ
	|	ИдентификаторыСообщений.Событие.ВходящееИсходящееСобытие = ЗНАЧЕНИЕ(Перечисление.ВходящееИсходящееСобытие.Исходящее)
	|	И ИдентификаторыСообщений.УчетнаяЗапись = &УчетнаяЗапись
	|	И ИдентификаторыСобытий.Событие ЕСТЬ NULL ");
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат[Выборка.ИдентификаторСообщения] = Выборка.Событие;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИдентификаторЕстьВНаборе(НаборЗаписей, ИдентификаторСообщения)
	
	Для Каждого ТекЗапись Из НаборЗаписей Цикл
		Если ТекЗапись.ИдентификаторСообщения = ИдентификаторСообщения Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецЕсли