#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция АбсолютныйКаталогОбменаИнформацией(Знач Корреспондент) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НастройкиТранспортаОбменаОбластиДанных.КаталогОбменаИнформацией КАК ОтносительныйКаталогОбменаИнформацией,
	|	ЕСТЬNULL(НастройкиТранспортаОбменаОбластейДанных.FILEКаталогОбменаИнформацией, """") КАК ОбщийКаталогОбменаИнформацией
	|ИЗ
	|	РегистрСведений.НастройкиТранспортаОбменаОбластиДанных КАК НастройкиТранспортаОбменаОбластиДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиТранспортаОбменаОбластейДанных КАК НастройкиТранспортаОбменаОбластейДанных
	|		ПО (НастройкиТранспортаОбменаОбластейДанных.КонечнаяТочкаКорреспондента = НастройкиТранспортаОбменаОбластиДанных.КонечнаяТочкаКорреспондента)
	|ГДЕ
	|	НастройкиТранспортаОбменаОбластиДанных.Корреспондент = &Корреспондент";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Корреспондент", Корреспондент);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не заданы настройки подключения для корреспондента ""%1"".'"), Строка(Корреспондент));
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ОбщийКаталогОбменаИнформацией = Выборка.ОбщийКаталогОбменаИнформацией;
	ОтносительныйКаталогОбменаИнформацией = Выборка.ОтносительныйКаталогОбменаИнформацией;
	
	Если ПустаяСтрока(ОбщийКаталогОбменаИнформацией)
		ИЛИ ПустаяСтрока(ОтносительныйКаталогОбменаИнформацией) Тогда
		
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не заданы настройки подключения для корреспондента ""%1"".'"), Строка(Корреспондент));
	КонецЕсли;
	
	Возврат ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла(ОбщийКаталогОбменаИнформацией, ОтносительныйКаталогОбменаИнформацией);
КонецФункции

Функция ВидТранспорта(Знач Корреспондент) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(НастройкиТранспортаОбменаОбластейДанных.ВидТранспортаСообщенийОбменаПоУмолчанию, НЕОПРЕДЕЛЕНО) КАК ВидТранспорта
	|ИЗ
	|	РегистрСведений.НастройкиТранспортаОбменаОбластиДанных КАК НастройкиТранспортаОбменаОбластиДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиТранспортаОбменаОбластейДанных КАК НастройкиТранспортаОбменаОбластейДанных
	|		ПО (НастройкиТранспортаОбменаОбластейДанных.КонечнаяТочкаКорреспондента = НастройкиТранспортаОбменаОбластиДанных.КонечнаяТочкаКорреспондента)
	|ГДЕ
	|	НастройкиТранспортаОбменаОбластиДанных.Корреспондент = &Корреспондент";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Корреспондент", Корреспондент);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ВидТранспорта;
КонецФункции

Функция НастройкиТранспорта(Знач Корреспондент) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	"""" КАК FILEКаталогОбменаИнформацией,
	|	"""" КАК FTPСоединениеПуть,
	|	НастройкиТранспортаОбменаОбластиДанных.КаталогОбменаИнформацией КАК ОтносительныйКаталогОбменаИнформацией,
	|	НастройкиТранспортаОбменаОбластейДанных.FILEКаталогОбменаИнформацией КАК FILEОбщийКаталогОбменаИнформацией,
	|	НастройкиТранспортаОбменаОбластейДанных.FILEСжиматьФайлИсходящегоСообщения,
	|	НастройкиТранспортаОбменаОбластейДанных.FTPСоединениеПуть КАК FTPОбщийКаталогОбменаИнформацией,
	|	НастройкиТранспортаОбменаОбластейДанных.FTPСжиматьФайлИсходящегоСообщения,
	|	НастройкиТранспортаОбменаОбластейДанных.FTPСоединениеМаксимальныйДопустимыйРазмерСообщения,
	|	НастройкиТранспортаОбменаОбластейДанных.FTPСоединениеПассивноеСоединение,
	|	НастройкиТранспортаОбменаОбластейДанных.FTPСоединениеПользователь,
	|	НастройкиТранспортаОбменаОбластейДанных.FTPСоединениеПорт,
	|	НастройкиТранспортаОбменаОбластейДанных.ВидТранспортаСообщенийОбменаПоУмолчанию,
	|	НастройкиТранспортаОбмена.WSURLВебСервиса,
	|	НастройкиТранспортаОбмена.WSИмяПользователя
	|ИЗ
	|	РегистрСведений.НастройкиТранспортаОбменаОбластиДанных КАК НастройкиТранспортаОбменаОбластиДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиТранспортаОбменаОбластейДанных КАК НастройкиТранспортаОбменаОбластейДанных
	|		ПО (НастройкиТранспортаОбменаОбластейДанных.КонечнаяТочкаКорреспондента = НастройкиТранспортаОбменаОбластиДанных.КонечнаяТочкаКорреспондента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиТранспортаОбмена КАК НастройкиТранспортаОбмена
	|		ПО (НастройкиТранспортаОбмена.Узел = НастройкиТранспортаОбменаОбластиДанных.КонечнаяТочкаКорреспондента)
	|ГДЕ
	|	НастройкиТранспортаОбменаОбластиДанных.Корреспондент = &Корреспондент";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Корреспондент", Корреспондент);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = ОбменДаннымиСервер.РезультатЗапросаВСтруктуру(РезультатЗапроса);
	УстановитьПривилегированныйРежим(Истина);
	Пароли = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Корреспондент, "FTPСоединениеПарольОбластейДанных,WSПароль, ПарольАрхиваСообщенияОбменаОбластейДанных");
	УстановитьПривилегированныйРежим(Ложь);
	Результат.Вставить("WSПароль", Пароли.WSПароль);
	Результат.Вставить("FTPСоединениеПароль", Пароли.FTPСоединениеПарольОбластейДанных);
	Результат.Вставить("ПарольАрхиваСообщенияОбмена", Пароли.ПарольАрхиваСообщенияОбменаОбластейДанных);
	
	Результат.FILEКаталогОбменаИнформацией = ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла(
		Результат.FILEОбщийКаталогОбменаИнформацией,
		Результат.ОтносительныйКаталогОбменаИнформацией);
	
	Результат.FTPСоединениеПуть = ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла(
		Результат.FTPОбщийКаталогОбменаИнформацией,
		Результат.ОтносительныйКаталогОбменаИнформацией);
	
	Результат.Вставить("ИспользоватьВременныйКаталогДляОтправкиИПриемаСообщений", Истина);
	
	Если Результат.ВидТранспортаСообщенийОбменаПоУмолчанию = Перечисления.ВидыТранспортаСообщенийОбмена.FTP Тогда
		
		ПараметрыFTP = ОбменДаннымиСервер.FTPИмяСервераИПуть(Результат.FTPСоединениеПуть);
		
		Результат.Вставить("FTPСервер", ПараметрыFTP.Сервер);
		Результат.Вставить("FTPПуть",   ПараметрыFTP.Путь);
		
	Иначе
		Результат.Вставить("FTPСервер", "");
		Результат.Вставить("FTPПуть",   "");
	КонецЕсли;
	
	ОбменДаннымиСервер.ДополнитьНастройкиТранспортаКоличествомЭлементовВТранзакции(Результат);
	
	Возврат Результат;
КонецФункции

Функция НастройкиТранспортаWS(Знач Корреспондент) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НастройкиТранспортаОбмена.WSURLВебСервиса КАК WSURLВебСервиса,
	|	НастройкиТранспортаОбмена.WSИмяПользователя КАК WSИмяПользователя,
	|	НастройкиТранспортаОбмена.Узел КАК Узел
	|ИЗ
	|	РегистрСведений.НастройкиТранспортаОбменаОбластиДанных КАК НастройкиТранспортаОбменаОбластиДанных
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиТранспортаОбмена КАК НастройкиТранспортаОбмена
	|		ПО (НастройкиТранспортаОбмена.Узел = НастройкиТранспортаОбменаОбластиДанных.КонечнаяТочкаКорреспондента)
	|
	|ГДЕ
	|	НастройкиТранспортаОбменаОбластиДанных.Корреспондент = &Корреспондент");
	
	Запрос.УстановитьПараметр("Корреспондент", Корреспондент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не заданы настройки подключения веб-сервиса для корреспондента %1.'"),
			Строка(Корреспондент));
			
	КонецЕсли;
	
	Результат = Новый Структура("WSURLВебСервиса, WSИмяПользователя");
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат.Вставить("WSПароль", ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Выборка.Узел, "WSПароль", Истина));
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

// Процедура обновляет запись в регистре по переданным значениям структуры
//
Процедура ОбновитьЗапись(СтруктураЗаписи) Экспорт
	
	ОбменДаннымиСервер.ОбновитьЗаписьВРегистрСведений(СтруктураЗаписи, "НастройкиТранспортаОбменаОбластиДанных");
	
КонецПроцедуры

// Процедура добавляет запись в регистр по переданным значениям структуры
//
Процедура ДобавитьЗапись(СтруктураЗаписи) Экспорт
	
	ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(СтруктураЗаписи, "НастройкиТранспортаОбменаОбластиДанных");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
