#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ИдентификаторИстории(УчетнаяЗапись) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИнкрементнаяСинхронизацияПочты.ИдентификаторИстории
	|ИЗ
	|	РегистрСведений.ИнкрементнаяСинхронизацияПочты КАК ИнкрементнаяСинхронизацияПочты
	|ГДЕ
	|	ИнкрементнаяСинхронизацияПочты.УчетнаяЗапись = &УчетнаяЗапись");
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ИдентификаторИстории;
	
КонецФункции

Процедура ЗаписатьИдентификаторИстории(ИдентификаторИстории, УчетнаяЗапись) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.УчетнаяЗапись = УчетнаяЗапись;
	МенеджерЗаписи.ИдентификаторИстории = ИдентификаторИстории;
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Функция ДатаОтправления(УчетнаяЗапись) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИнкрементнаяСинхронизацияПочты.ДатаОтправления
	|ИЗ
	|	РегистрСведений.ИнкрементнаяСинхронизацияПочты КАК ИнкрементнаяСинхронизацияПочты
	|ГДЕ
	|	ИнкрементнаяСинхронизацияПочты.УчетнаяЗапись = &УчетнаяЗапись");
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ДатаОтправления;
	
КонецФункции

Процедура ЗаписатьДатуОтправления(ДатаОтправления, УчетнаяЗапись) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.УчетнаяЗапись = УчетнаяЗапись;
	МенеджерЗаписи.ДатаОтправления = ДатаОтправления;
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли