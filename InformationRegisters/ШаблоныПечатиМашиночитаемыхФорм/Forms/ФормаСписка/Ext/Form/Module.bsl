
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Загрузить(Команда)
	
	ДобавитьШаблоны();
	
КонецПроцедуры

#Если ВебКлиент Тогда

&НаКлиенте
Процедура ДобавитьШаблоныНаВебКлиенте()
	
	АдресФайлаВоВременномХранилище = "";
	ВыбранноеИмяФайла              = "";
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьШаблоныНаВебКлиентеПоместитьФайлЗавершение", ЭтотОбъект, Новый Структура("АдресФайлаВоВременномХранилище, ВыбранноеИмяФайла", АдресФайлаВоВременномХранилище, ВыбранноеИмяФайла));
	НачатьПомещениеФайла(ОписаниеОповещения, АдресФайлаВоВременномХранилище,,, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьШаблоныНаВебКлиентеПоместитьФайлЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	АдресФайлаВоВременномХранилище = Адрес;
	
	Если НЕ Результат Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоФайлов = 1;
	
	ВыбранныеФайлы = Новый Массив();
	ВыбранныеФайлы.Добавить(ВыбранноеИмяФайла);
	
	РежимОдногоФайла = (КоличествоФайлов = 1);
	
	ОбъектыФайл = Новый Массив;
	КороткиеИменаФайлов = Новый Массив;
	Для Каждого ВыбранныйФайл Из ВыбранныеФайлы Цикл
		ОбъектФайл = Новый Файл(ВыбранныйФайл);
		ОбъектыФайл.Добавить(ОбъектФайл);
		КороткиеИменаФайлов.Добавить(ОбъектФайл.Имя);
	КонецЦикла;
	
	Если НЕ ОбъектФайл.Расширение = ".tif" Тогда
		ПоказатьПредупреждение(,НСтр("ru='Выбранный файл не является шаблоном печати машиночитаемой формы.'"));
		Возврат;
	КонецЕсли;
	
	Если ХотяБыОдинШаблонПрисутствуетВИБ(КороткиеИменаФайлов) Тогда
		Если РежимОдногоФайла Тогда
			ТекстВопроса = "Шаблон с аналогичным именем уже загружен в информационную базу.
				|Заменить существующий шаблон?";
		Иначе
			ТекстВопроса = "Некоторые из выбранных шаблонов уже присутствуют в информационной базе.
				|Продолжить загрузку с заменой шаблонов в информационной базе на шаблоны с диска?";
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура("АдресФайлаВоВременномХранилище, КоличествоФайлов, ОбъектФайл, РежимОдногоФайла", АдресФайлаВоВременномХранилище, КоличествоФайлов, ОбъектФайл, РежимОдногоФайла);
		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьШаблоныНаВебКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), ТекстВопроса), РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаписатьШаблоныВВебКлиенте(АдресФайлаВоВременномХранилище, КоличествоФайлов, ОбъектФайл, РежимОдногоФайла);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьШаблоныНаВебКлиентеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	АдресФайлаВоВременномХранилище = ДополнительныеПараметры.АдресФайлаВоВременномХранилище;
	КоличествоФайлов = ДополнительныеПараметры.КоличествоФайлов;
	ОбъектФайл = ДополнительныеПараметры.ОбъектФайл;
	РежимОдногоФайла = ДополнительныеПараметры.РежимОдногоФайла;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаписатьШаблоныВВебКлиенте(АдресФайлаВоВременномХранилище, КоличествоФайлов, ОбъектФайл, РежимОдногоФайла);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьШаблоныВВебКлиенте(АдресФайлаВоВременномХранилище, КоличествоФайлов, ОбъектФайл, РежимОдногоФайла)
	
	КоличествоНезагруженныхШаблонов = 0;
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Загрузка шаблона ""%1""...'"), ОбъектФайл.Имя), , , БиблиотекаКартинок.ЗагрузкаФайла);
	
	Если НЕ ЗагрузитьШаблоныМашиночитаемыхФорм(АдресФайлаВоВременномХранилище, ОбъектФайл.Имя, КоличествоНезагруженныхШаблонов) Тогда
		
		ПоказатьПредупреждение(,СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось загрузить шаблон ""%1"":%2'"), ОбъектФайл.Имя, ОписаниеОшибки()));
		
		Возврат;
		
	КонецЕсли;
	
	ПоказатьПредупрежденияПослеЗагрузкиШаблонов(КоличествоНезагруженныхШаблонов, КоличествоФайлов, РежимОдногоФайла);
	
КонецПроцедуры
	
#Иначе
	
&НаКлиенте
Процедура ДобавитьШаблоныНаТонкомКлиенте()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выберите шаблоны";
	ДиалогВыбораФайла.МножественныйВыбор =  Истина;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.Расширение = "tif";
	ДиалогВыбораФайла.Фильтр = "Файлы шаблонов печати машиночитаемых форм (*.tif)|*.tif";
	Если НЕ ДиалогВыбораФайла.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоФайлов = ДиалогВыбораФайла.ВыбранныеФайлы.Количество();
	
	ВыбранныеФайлы = ДиалогВыбораФайла.ВыбранныеФайлы;
	
	РежимОдногоФайла = (КоличествоФайлов = 1);
	
	ОбъектыФайл = Новый Массив;
	КороткиеИменаФайлов = Новый Массив;
	Для Каждого ВыбранныйФайл Из ВыбранныеФайлы Цикл
		ОбъектФайл = Новый Файл(ВыбранныйФайл);
		ОбъектыФайл.Добавить(ОбъектФайл);
		КороткиеИменаФайлов.Добавить(ОбъектФайл.Имя);
	КонецЦикла;
	
	Если ХотяБыОдинШаблонПрисутствуетВИБ(КороткиеИменаФайлов) Тогда
		Если РежимОдногоФайла Тогда
			ТекстВопроса = "Шаблон с аналогичным именем уже загружен в информационную базу.
				|Заменить существующий шаблон?";
		Иначе
			ТекстВопроса = "Некоторые из выбранных шаблонов уже присутствуют в информационной базе.
				|Продолжить загрузку с заменой шаблонов в информационной базе на шаблоны с диска?";
		КонецЕсли;
		ДополнительныеПараметры = Новый Структура("КоличествоФайлов, ОбъектыФайл, РежимОдногоФайла", КоличествоФайлов, ОбъектыФайл, РежимОдногоФайла);
		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьШаблоныНаТонкомКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), ТекстВопроса), РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаписатьШаблоныНаТонкомКлиенте(КоличествоФайлов, ОбъектыФайл, РежимОдногоФайла);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьШаблоныНаТонкомКлиентеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	КоличествоФайлов = ДополнительныеПараметры.КоличествоФайлов;
	ОбъектыФайл = ДополнительныеПараметры.ОбъектыФайл;
	РежимОдногоФайла = ДополнительныеПараметры.РежимОдногоФайла;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаписатьШаблоныНаТонкомКлиенте(КоличествоФайлов, ОбъектыФайл, РежимОдногоФайла);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьШаблоныНаТонкомКлиенте(КоличествоФайлов, ОбъектыФайл, РежимОдногоФайла)
	
	КоличествоНезагруженныхШаблонов = 0;
	
	ШаблоныМашиночитаемыхФорм = Новый Массив;
	
	НеЗагруженныеОбъекты = Новый Массив;
	
	Для Каждого ОбъектФайл Из ОбъектыФайл Цикл
		
		Если ОбъектФайл.Существует() Тогда
			
			Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Загрузка шаблона ""%1""...'"), ОбъектФайл.Имя), , , БиблиотекаКартинок.ЗагрузкаФайла);
			
			ШаблонМашиночитаемойФормы = Новый Структура;
			ШаблонМашиночитаемойФормы.Вставить("ИмяФайлаШаблона", НРег(ОбъектФайл.Имя));
			ШаблонМашиночитаемойФормы.Вставить("Размер", ОбъектФайл.Размер());
			
			Попытка
				ШаблонМашиночитаемойФормы.Вставить("Шаблон", Новый ДвоичныеДанные(ОбъектФайл.ПолноеИмя));
				ШаблоныМашиночитаемыхФорм.Добавить(ШаблонМашиночитаемойФормы);
			Исключение
				Если РежимОдногоФайла Тогда
					ПоказатьПредупреждение(,СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось загрузить шаблон ""%1"":%2'"), ОбъектФайл.Имя, ОписаниеОшибки()));
					Возврат;
				Иначе
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось загрузить шаблон ""%1"":%2'"), ОбъектФайл.Имя, Символы.ПС + Символы.ПС + ОписаниеОшибки());
					НеЗагруженныеОбъекты.Добавить(ТекстСообщения);
				КонецЕсли;
				КоличествоНезагруженныхШаблонов = КоличествоНезагруженныхШаблонов + 1;
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ТекстСообщения Из НеЗагруженныеОбъекты Цикл
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
	КонецЦикла;
	
	Состояние(НСтр("ru='Запись шаблонов...'"), , , БиблиотекаКартинок.Записать);
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ШаблоныМашиночитаемыхФорм, Новый УникальныйИдентификатор);
	ЗагрузитьШаблоны(АдресВременногоХранилища, КоличествоНезагруженныхШаблонов);
	ПоказатьПредупрежденияПослеЗагрузкиШаблонов(КоличествоНезагруженныхШаблонов, КоличествоФайлов, РежимОдногоФайла);
	
КонецПроцедуры

#КонецЕсли

&НаКлиенте
Процедура ДобавитьШаблоны()
		
	#Если ВебКлиент Тогда
		ДобавитьШаблоныНаВебКлиенте();
	#Иначе
		ДобавитьШаблоныНаТонкомКлиенте();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредупрежденияПослеЗагрузкиШаблонов(КоличествоНезагруженныхШаблонов, КоличествоФайлов, РежимОдногоФайла)
	
	Если КоличествоНезагруженныхШаблонов = КоличествоФайлов Тогда
		ПоказатьПредупреждение(,НСтр("ru='Не удалось загрузить ни один из указанных шаблонов.'"));
	Иначе
		Если РежимОдногоФайла Тогда
			ТекстПредупреждения = "Шаблон успешно загружен.";
		ИначеЕсли КоличествоНезагруженныхШаблонов = 0 Тогда
			ТекстПредупреждения = "Все шаблоны успешно загружены.";
		Иначе
			ТекстПредупреждения = "Загружены " + (КоличествоФайлов - КоличествоНезагруженныхШаблонов) + " из " + КоличествоФайлов + " шаблонов.
				|Остальные шаблоны загрузить на удалось.";
		КонецЕсли;
		ПоказатьПредупреждение(,СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), ТекстПредупреждения));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьШаблоныМашиночитаемыхФорм(АдресФайлаВоВременномХранилище, ИмяФайлаШаблона, КоличествоНезагруженныхШаблонов)
	
	ШаблоныМашиночитаемыхФорм = Новый Массив;
	
	ФайлаШаблона = ПолучитьИзВременногоХранилища(АдресФайлаВоВременномХранилище);
	
	Если НЕ ФайлаШаблона = Неопределено Тогда
		
		ШаблонМашиночитаемойФормы = Новый Структура;
		ШаблонМашиночитаемойФормы.Вставить("ИмяФайлаШаблона", НРег(ИмяФайлаШаблона));
		
		Попытка
						
			ШаблонМашиночитаемойФормы.Вставить("Шаблон", ФайлаШаблона);
			
			ШаблонМашиночитаемойФормы.Вставить("Размер", ФайлаШаблона.Размер());
			
			ШаблоныМашиночитаемыхФорм.Добавить(ШаблонМашиночитаемойФормы);
			
		Исключение
			
			Возврат Ложь;
			
		КонецПопытки;
		
	КонецЕсли;
	
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ШаблоныМашиночитаемыхФорм, Новый УникальныйИдентификатор);
	
	ЗагрузитьШаблоны(АдресВременногоХранилища, КоличествоНезагруженныхШаблонов);
	
	Возврат Истина;
	  	
КонецФункции

&НаСервере
Функция ХотяБыОдинШаблонПрисутствуетВИБ(КороткиеИменаФайлов)
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона
	                      |ИЗ
	                      |	РегистрСведений.ШаблоныПечатиМашиночитаемыхФорм КАК ШаблоныПечатиМашиночитаемыхФорм
	                      |ГДЕ
	                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона В(&ВыбранныеФайлы)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона");
	Запрос.УстановитьПараметр("ВыбранныеФайлы", КороткиеИменаФайлов);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	 	
КонецФункции

&НаСервере
Процедура ЗагрузитьШаблоны(АдресВременногоХранилища, КоличествоНезагруженныхШаблонов)
	
	ШаблоныМашиночитаемыхФорм = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	Для Каждого ШаблонМашиночитаемойФормы Из ШаблоныМашиночитаемыхФорм Цикл
		
		МенеджерЗаписи = РегистрыСведений.ШаблоныПечатиМашиночитаемыхФорм.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ИмяФайлаШаблона = ШаблонМашиночитаемойФормы.ИмяФайлаШаблона;
		МенеджерЗаписи.Размер = ШаблонМашиночитаемойФормы.Размер;
		МенеджерЗаписи.ДатаДобавления = НачалоДня(ТекущаяДатаСеанса()) + (ТекущаяДатаСеанса() - НачалоДня(ТекущаяДатаСеанса()));
		
		Попытка
			
			МенеджерЗаписи.Шаблон = Новый ХранилищеЗначения(ШаблонМашиночитаемойФормы.Шаблон, Новый СжатиеДанных(9));
			МенеджерЗаписи.Записать(Истина);
			
		Исключение
			
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось записать шаблон ""%1"":%2'"), ШаблонМашиночитаемойФормы.ИмяФайлаШаблона, Символы.ПС + ОписаниеОшибки());

			Сообщение.Сообщить();
						
			КоличествоНезагруженныхШаблонов = КоличествоНезагруженныхШаблонов + 1;
						
		КонецПопытки;
		
	КонецЦикла;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ТекСтроки = Элементы.Список.ВыделенныеСтроки;
		
	Если ТекСтроки.Количество() <> 0 Тогда
		
		КоличествоОшибок = 0;
		
		#Если ВебКлиент Тогда
			
			ШаблоныМашиночитаемыхФорм = ПолучитьИзВременногоХранилища(ПолучитьШаблоны(ТекСтроки, КоличествоОшибок, Истина));
			
			Для Каждого ШаблонМашиночитаемойФормы Из ШаблоныМашиночитаемыхФорм Цикл
				
				КороткоеИмяФайла = ШаблонМашиночитаемойФормы.ИмяФайлаШаблона;
				
				ПолучитьФайл(ШаблонМашиночитаемойФормы.Шаблон, ШаблонМашиночитаемойФормы.ИмяФайлаШаблона);
				
			КонецЦикла;
			
		#Иначе
			
			Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
			Диалог.Заголовок = "Выберите каталог для сохранения";
			
			Если Диалог.Выбрать() Тогда
				
				КаталогСохранения = ?(Прав(Диалог.Каталог, 1) = "\", Диалог.Каталог, Диалог.Каталог + "\");
				
				ШаблоныМашиночитаемыхФорм = ПолучитьИзВременногоХранилища(ПолучитьШаблоны(ТекСтроки, КоличествоОшибок));
				
				СписокСуществующихОбъектов = Новый СписокЗначений;
				
				Для Каждого ШаблонМашиночитаемойФормы Из ШаблоныМашиночитаемыхФорм Цикл
					
					КороткоеИмяФайла = ШаблонМашиночитаемойФормы.ИмяФайлаШаблона;
					ПолноеИмяСохраняемогоФайла = КаталогСохранения + КороткоеИмяФайла;
					ОбъектСохраняемыйФайл = Новый Файл(ПолноеИмяСохраняемогоФайла);
					
					Если ОбъектСохраняемыйФайл.Существует() Тогда
						// Запомним существующие объекты, чтобы потом спросить у пользователя что с ними делать.
						СписокСуществующихОбъектов.Добавить(ШаблонМашиночитаемойФормы, КороткоеИмяФайла);
					Иначе
						Попытка
							ШаблонМашиночитаемойФормы.Шаблон.Записать(ПолноеИмяСохраняемогоФайла);
						Исключение
							Сообщение = Новый СообщениеПользователю;
							Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Во время сохранения файла %1 возникла ошибка:%2'"), КороткоеИмяФайла, Символы.ПС + ОписаниеОшибки());
							Сообщение.Сообщить();
							КоличествоОшибок = КоличествоОшибок + 1;
						КонецПопытки;
					КонецЕсли;
				КонецЦикла;
				
				Если СписокСуществующихОбъектов.Количество() = 1 Тогда
					ШаблонМашиночитаемойФормы = СписокСуществующихОбъектов[0].Значение;
					КороткоеИмяФайла = ШаблонМашиночитаемойФормы.ИмяФайлаШаблона;
					ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В выбранном каталоге уже существует файл %1.%2Заменить указанный файл?'"),
						КороткоеИмяФайла, Символы.ПС);
					ДополнительныеПараметры = Новый Структура("КаталогСохранения, КороткоеИмяФайла, Сообщение, ТекСтроки, ШаблонМашиночитаемойФормы, КоличествоОшибок", КаталогСохранения, КороткоеИмяФайла, Сообщение, ТекСтроки, ШаблонМашиночитаемойФормы, КоличествоОшибок);
					ОписаниеОповещения = Новый ОписаниеОповещения("ВопросЗаменитьСуществующийФайлЗавершение", ЭтотОбъект, ДополнительныеПараметры);
					ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
				ИначеЕсли СписокСуществующихОбъектов.Количество() > 1 Тогда
					ДополнительныеПараметры = Новый Структура("КаталогСохранения, Сообщение, ТекСтроки, СписокСуществующихОбъектов, КоличествоОшибок", КаталогСохранения, Сообщение, ТекСтроки, СписокСуществующихОбъектов, КоличествоОшибок);
					ОписаниеОповещения = Новый ОписаниеОповещения("ОтметитьЭлементыДляЗаменыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
					СписокСуществующихОбъектов.ПоказатьОтметкуЭлементов(ОписаниеОповещения, НСтр("ru='Файлы существуют. Отметьте файлы для замены.'"));
				Иначе
					ПоказатьПредупреждениПослеВыгрузкиШаблонов(КоличествоОшибок, ТекСтроки);
				КонецЕсли;
			КонецЕсли;
		#КонецЕсли
	Иначе
		ПоказатьПредупреждение(,СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Выберите шаблоны, которые следует сохранить на диск, и повторите попытку.%1Для множественного выбора используйте клавишу Ctrl.'"), Символы.ПС));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьЭлементыДляЗаменыЗавершение(Список, ДополнительныеПараметры) Экспорт
	
	КаталогСохранения = ДополнительныеПараметры.КаталогСохранения;
	Сообщение = ДополнительныеПараметры.Сообщение;
	ТекСтроки = ДополнительныеПараметры.ТекСтроки;
	СписокСуществующихОбъектов = ДополнительныеПараметры.СписокСуществующихОбъектов;
	КоличествоОшибок = ДополнительныеПараметры.КоличествоОшибок;
	
	Для Каждого ЭлементСписка Из СписокСуществующихОбъектов Цикл
		Если НЕ ЭлементСписка.Пометка Тогда
			Продолжить;
		КонецЕсли;
		ШаблонМашиночитаемойФормы = ЭлементСписка.Значение;
		КороткоеИмяФайла = ШаблонМашиночитаемойФормы.ИмяФайлаШаблона;
		ПолноеИмяСохраняемогоФайла = КаталогСохранения + КороткоеИмяФайла;
		Попытка
			ШаблонМашиночитаемойФормы.Шаблон.Записать(ПолноеИмяСохраняемогоФайла);
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Во время сохранения файла %1 возникла ошибка:%2'"), КороткоеИмяФайла, Символы.ПС + ОписаниеОшибки());
			Сообщение.Сообщить();
			КоличествоОшибок = КоличествоОшибок + 1;
		КонецПопытки;
	КонецЦикла;
	
	ПоказатьПредупреждениПослеВыгрузкиШаблонов(КоличествоОшибок, ТекСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаменитьСуществующийФайлЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	КаталогСохранения = ДополнительныеПараметры.КаталогСохранения;
	КороткоеИмяФайла = ДополнительныеПараметры.КороткоеИмяФайла;
	Сообщение = ДополнительныеПараметры.Сообщение;
	ТекСтроки = ДополнительныеПараметры.ТекСтроки;
	ШаблонМашиночитаемойФормы = ДополнительныеПараметры.ШаблонМашиночитаемойФормы;
	КоличествоОшибок = ДополнительныеПараметры.КоличествоОшибок;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Попытка
			ПолноеИмяСохраняемогоФайла = КаталогСохранения + КороткоеИмяФайла;
			ШаблонМашиночитаемойФормы.Шаблон.Записать(ПолноеИмяСохраняемогоФайла);
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Во время сохранения файла %1 возникла ошибка:%2'"), КороткоеИмяФайла, Символы.ПС + ОписаниеОшибки());
			Сообщение.Сообщить();
			КоличествоОшибок = КоличествоОшибок + 1;
		КонецПопытки;
	КонецЕсли;
	
	ПоказатьПредупреждениПослеВыгрузкиШаблонов(КоличествоОшибок, ТекСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредупреждениПослеВыгрузкиШаблонов(Знач КоличествоОшибок, Знач ТекСтроки)
	
	Если ТекСтроки.Количество() = 1 Тогда
		Если КоличествоОшибок = 0 Тогда
			ПоказатьПредупреждение(,НСтр("ru='Шаблон успешно выгружен.'"));
		КонецЕсли;
	Иначе
		Если КоличествоОшибок = 0 Тогда
			ПоказатьПредупреждение(,НСтр("ru='Шаблоны успешно выгружены.'"));
		Иначе
			ПоказатьПредупреждение(,СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Во время сохранения произошли ошибки. Не удалось сохранить шаблонов: %1.'"), КоличествоОшибок));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьШаблоны(ТекСтроки, КоличествоОшибок, ВозвращатьВСтруктуреСсылкуНаШаблонВоВременномХранилище = Ложь)
	
	ИменаФайловШаблонов = Новый Массив;
	
	Для Каждого ТекСтрока Из ТекСтроки Цикл
		ИменаФайловШаблонов.Добавить(ТекСтрока.ИмяФайлаШаблона);
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона КАК ИмяФайлаШаблона,
	|	ШаблоныПечатиМашиночитаемыхФорм.Шаблон
	|ИЗ
	|	РегистрСведений.ШаблоныПечатиМашиночитаемыхФорм КАК ШаблоныПечатиМашиночитаемыхФорм
	|ГДЕ
	|	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона В(&ИменаФайловШаблона)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяФайлаШаблона");
	
	Запрос.УстановитьПараметр("ИменаФайловШаблона", ИменаФайловШаблонов);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ШаблоныМашиночитаемыхФорм = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		ШаблонМашиночитаемойФормы = Новый Структура;
		ШаблонМашиночитаемойФормы.Вставить("ИмяФайлаШаблона", Выборка.ИмяФайлаШаблона);
				
		Попытка
			
			Если ВозвращатьВСтруктуреСсылкуНаШаблонВоВременномХранилище Тогда
				
				ШаблонМашиночитаемойФормы.Вставить("Шаблон", ПоместитьВоВременноеХранилище(Выборка.Шаблон.Получить(), УникальныйИдентификатор));
				
			Иначе
				
				ШаблонМашиночитаемойФормы.Вставить("Шаблон", Выборка.Шаблон.Получить());
				
			КонецЕсли;	
			
			ШаблоныМашиночитаемыхФорм.Добавить(ШаблонМашиночитаемойФормы);
			
		Исключение
						
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Во время получения шаблона %1 возникла ошибка:%2'"), Выборка.ИмяФайлаШаблона, Символы.ПС + ОписаниеОшибки());

			Сообщение.Сообщить();
			
			КоличествоОшибок = КоличествоОшибок + 1;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ШаблоныМашиночитаемыхФорм, Новый УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура Удалить(Команда)
	
	УдалитьШаблоныНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьШаблоныНаКлиенте()
	
	ТекСтроки = Элементы.Список.ВыделенныеСтроки;
	
	КоличествоСтрок = ТекСтроки.Количество();
	
	Если КоличествоСтрок <> 0 Тогда
		
		ТекстВопроса = ?(КоличествоСтрок = 1, "Удалить шаблон?", "Удалить выбранные шаблоны?");
		ДополнительныеПараметры = Новый Структура("ТекСтроки", ТекСтроки);
		ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьШаблоныНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), ТекстВопроса);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
						
	Иначе
				
		ПоказатьПредупреждение(,СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Выберите шаблоны, которые следует удалить, и повторите попытку.%1Для множественного выбора используйте клавишу Ctrl.'"), Символы.ПС));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьШаблоныНаКлиентеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ТекСтроки = ДополнительныеПараметры.ТекСтроки;
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьШаблоныНаСервере(ТекСтроки);

КонецПроцедуры

&НаСервере
Процедура УдалитьШаблоныНаСервере(ТекСтроки)
	
	ИменаФайловШаблонов = Новый Массив;
	Для Каждого ТекСтрока Из ТекСтроки Цикл
		ИменаФайловШаблонов.Добавить(ТекСтрока.ИмяФайлаШаблона);
	КонецЦикла;
	
	МенеджерЗаписи = РегистрыСведений.ШаблоныПечатиМашиночитаемыхФорм.СоздатьМенеджерЗаписи();
	Для Каждого ИмяФайлаШаблона Из ИменаФайловШаблонов Цикл
		МенеджерЗаписи.ИмяФайлаШаблона = ИмяФайлаШаблона;
		МенеджерЗаписи.Удалить();
	КонецЦикла;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКомпоненту(Команда)
	
	КаталогКомпонентыМЧБ = "";
	
	#Если ВебКлиент Тогда
		
		Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьКомпонентуЗавершение", ЭтотОбъект);
			НачатьУстановкуРасширенияРаботыСФайлами(ОписаниеОповещения);
		Иначе
			ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
			
			ДиалогВыбораКаталога.Заголовок = "Выберите каталог для сохранения дистрибутива компоненты печати машиночитаемых форм.";
			
			Если ДиалогВыбораКаталога.Выбрать() Тогда
				КаталогКомпонентыМЧБ = ДиалогВыбораКаталога.Каталог;
			КонецЕсли;
			
			Если КаталогКомпонентыМЧБ = Неопределено
				ИЛИ ПустаяСтрока(КаталогКомпонентыМЧБ)
				ИЛИ КаталогКомпонентыМЧБ = Ложь Тогда	
				Возврат;
			КонецЕсли;
			
			КаталогКомпонентыМЧБ = КаталогКомпонентыМЧБ + "\";
			УстановитьКомпонентуПечати(КаталогКомпонентыМЧБ);
			
		КонецЕсли;
		
	#Иначе
		УстановитьКомпонентуПечати(КаталогКомпонентыМЧБ);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКомпонентуЗавершение(ДополнительныеПараметры) Экспорт
	
	Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда
		ПоказатьПредупреждение(,НСтр("ru='Не удалось подключить расширение работы с файлами.
		|Установка компоненты печати машиночитаемых форм невозможна.'"));
	Иначе
		ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		
		ДиалогВыбораКаталога.Заголовок = "Выберите каталог для сохранения дистрибутива компоненты печати машиночитаемых форм.";
		
		Если ДиалогВыбораКаталога.Выбрать() Тогда
			КаталогКомпонентыМЧБ = ДиалогВыбораКаталога.Каталог;
		КонецЕсли;
		
		Если КаталогКомпонентыМЧБ = Неопределено
			ИЛИ ПустаяСтрока(КаталогКомпонентыМЧБ)
			ИЛИ КаталогКомпонентыМЧБ = Ложь Тогда	
			Возврат;
		КонецЕсли;
		
		КаталогКомпонентыМЧБ = КаталогКомпонентыМЧБ + "\";
		УстановитьКомпонентуПечати(КаталогКомпонентыМЧБ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКомпонентуПечати(КаталогКомпонентыМЧБ)
	
	ДистрибутивКомпонентыПечатиМашиночитаемыхФорм = Новый СписокЗначений;
	
	РегламентированнаяОтчетностьВызовСервера.ПолучитьДистрибутивКомпонентыПечатиМашиночитаемыхФорм(ДистрибутивКомпонентыПечатиМашиночитаемыхФорм);
	
	РегламентированнаяОтчетностьКлиент.УстановитьКомпонентуПечатиМашиночитаемыхФорм(Истина, ДистрибутивКомпонентыПечатиМашиночитаемыхФорм, КаталогКомпонентыМЧБ);
	
	УправлениеКнопкойУстановкиКомпоненты();

КонецПроцедуры

&НаКлиенте
Процедура УправлениеКнопкойУстановкиКомпоненты()
	
	КомпонентаУстановлена = РегламентированнаяОтчетностьКлиент.КомпонентаПечатиМашиночитаемыхФормДоступна();
	КнопкаКомпоненты = Элементы.ФормаУстановитьКомпоненту;
	Если КомпонентаУстановлена Тогда
		КнопкаКомпоненты.Заголовок = "Переустановить компоненту";
	Иначе
		КнопкаКомпоненты.Заголовок = "Установить компоненту";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеДоступностьюЭУ();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеКнопкойУстановкиКомпоненты();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДоступностьюЭУ()
	
	ЕстьДоступНаЗапись = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ШаблоныПечатиМашиночитаемыхФорм);
	
	Если НЕ ЕстьДоступНаЗапись Тогда
		Элементы.Список.ТолькоПросмотр = Истина;
		Элементы.ФормаЗагрузить.Доступность = Ложь;
		Элементы.ФормаУдалить.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ДобавитьШаблоны();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	УдалитьШаблоныНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	#Если НЕ ВебКлиент Тогда
		
		ДополнительныеПараметры = Новый Структура("ВыбраннаяСтрока", ВыбраннаяСтрока);
		ОписаниеОповещения = Новый ОписаниеОповещения("СписокВыборЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = НСтр("ru='Шаблон будет выгружен на диск и открыт. Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	#КонецЕсли
		
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	#Если НЕ ВебКлиент Тогда

	ВыбраннаяСтрока = ДополнительныеПараметры.ВыбраннаяСтрока;
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	АдресВременногоХранилища = ПолучитьШаблонНаСервере(ВыбраннаяСтрока);
	
	Если НЕ АдресВременногоХранилища = Неопределено Тогда
		
		ШаблонМашиночитаемойФормы = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
		
		ВремФайл = ПолучитьИмяВременногоФайла("." + ШаблонМашиночитаемойФормы.ИмяФайлаШаблона);
		
		Попытка
			
			ШаблонМашиночитаемойФормы.Шаблон.Записать(ВремФайл);
			
		Исключение
			
			Сообщение = Новый СообщениеПользователю;
			
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось выгрузить шаблон во временный файл на диске:%1'"), Символы.ПС + ОписаниеОшибки());
			
			Сообщение.Сообщить();
			
			Возврат;
			
		КонецПопытки;
		
		ЗапуститьПриложение(ВремФайл);
		
	КонецЕсли;
	#КонецЕсли

КонецПроцедуры

&НаСервере
Функция ПолучитьШаблонНаСервере(ВыбраннаяСтрока)
		
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ШаблоныПечатиМашиночитаемыхФорм.Шаблон,
	                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона
	                      |ИЗ
	                      |	РегистрСведений.ШаблоныПечатиМашиночитаемыхФорм КАК ШаблоныПечатиМашиночитаемыхФорм
	                      |ГДЕ
	                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона = &ИмяФайлаШаблона");
	Запрос.УстановитьПараметр("ИмяФайлаШаблона", ВыбраннаяСтрока.ИмяФайлаШаблона);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ШаблонМашиночитаемойФормы = Новый Структура("ИмяФайлаШаблона, Шаблон");
	
	Выборка = РезультатЗапроса.Выбрать();
		
	Если Выборка.Следующий() Тогда

		ШаблонМашиночитаемойФормы.Вставить("ИмяФайлаШаблона", Выборка.ИмяФайлаШаблона);
				
		Попытка
			
			ШаблонМашиночитаемойФормы.Вставить("Шаблон", Выборка.Шаблон.Получить());
			
		Исключение
						
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось получить шаблон из хранилища:%1'"), Символы.ПС + ОписаниеОшибки());

			Сообщение.Сообщить();
			
			Возврат Неопределено;
			
		КонецПопытки;
				
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(ШаблонМашиночитаемойФормы, Новый УникальныйИдентификатор);
	          	
КонецФункции

#КонецОбласти
