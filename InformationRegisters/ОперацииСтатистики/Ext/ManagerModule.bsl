#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСсылку(Наименование) Экспорт
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA1);
	ХешированиеДанных.Добавить(Наименование);
	ХешНаименования = СтрЗаменить(Строка(ХешированиеДанных.ХешСумма), " ", "");
	
	Ссылка = НайтиПоХешу(ХешНаименования);
	Если Ссылка = Неопределено Тогда
		Ссылка = СоздатьНовый(Наименование, ХешНаименования);
	КонецЕсли;
	
	Возврат Ссылка;
КонецФункции

Функция НайтиПоХешу(Хеш)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ОперацииСтатистики.ИдентификаторОперации
	|ИЗ
	|	РегистрСведений.ОперацииСтатистики КАК ОперацииСтатистики
	|ГДЕ
	|	ОперацииСтатистики.ХешНаименования = &ХешНаименования
	|";
	Запрос.УстановитьПараметр("ХешНаименования", Хеш);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Ссылка = Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Ссылка = Выборка.ИдентификаторОперации;
	КонецЕсли;
	
	Возврат Ссылка;
КонецФункции

Функция СоздатьНовый(Наименование, ХешНаименования)
	НачатьТранзакцию();
	
	Попытка
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОперацииСтатистики");
		ЭлементБлокировки.УстановитьЗначение("ХешНаименования", ХешНаименования);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		Ссылка = НайтиПоХешу(ХешНаименования);
		
		Если Ссылка = Неопределено Тогда
			Ссылка = Новый УникальныйИдентификатор();
			
			НаборЗаписей = РегистрыСведений.ОперацииСтатистики.СоздатьНаборЗаписей();
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НовЗапись = НаборЗаписей.Добавить();
			НовЗапись.ХешНаименования = ХешНаименования;
			НовЗапись.ИдентификаторОперации = Ссылка;
			НовЗапись.Наименование = Наименование;
			НаборЗаписей.Записать(Ложь);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат Ссылка;
КонецФункции

Функция МожноНовыйКомментарий(СсылкаОперация) Экспорт
	КоличествоУникальныхМаксимум = 100;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОперацииСтатистики.КоличествоУникальныхКомментариев КАК КоличествоУникальных
		|ИЗ
		|	РегистрСведений.ОперацииСтатистики КАК ОперацииСтатистики
		|ГДЕ
		|	ОперацииСтатистики.ИдентификаторОперации = &ИдентификаторОперации";
		
	Запрос.УстановитьПараметр("ИдентификаторОперации", СсылкаОперация);	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	КоличествоУникальных = ВыборкаДетальныеЗаписи.КоличествоУникальных;
	
	Если КоличествоУникальных < КоличествоУникальныхМаксимум Тогда
		МожноНовыйКомментарий = Истина;
	Иначе
		МожноНовыйКомментарий = Ложь;
	КонецЕсли;
	
	Возврат МожноНовыйКомментарий;
КонецФункции

Функция УвеличитьКоличествоУникальныхКомментариев(СсылкаОперация, СсылкаКомментарий) Экспорт
	НаборЗаписей = РегистрыСведений.ОперацииСтатистики.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИдентификаторОперации.Установить(СсылкаОперация);
	НаборЗаписей.Прочитать();
	Для Каждого ТекЗапись Из НаборЗаписей Цикл
		ТекЗапись.КоличествоУникальныхКомментариев = ТекЗапись.КоличествоУникальныхКомментариев + 1;
	КонецЦикла;
	НаборЗаписей.Записать(Истина);
	
	РегистрыСведений.КомментарииОперацииСтатистики.СоздатьНовуюЗапись(СсылкаОперация, СсылкаКомментарий); 
КонецФункции

#КонецОбласти

#КонецЕсли