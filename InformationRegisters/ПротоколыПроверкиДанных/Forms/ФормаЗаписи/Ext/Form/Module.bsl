&НаСервере
Перем ВременныйМассивРасшифровок;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивРасшифровок = Неопределено;
	
	ВыполнитьНастройкуФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДочерниеЭлементы = Протокол.ПолучитьЭлементы();
	
	Для Каждого Строка Из ДочерниеЭлементы Цикл
		
		Если Строка.РезультатКонтроля > 0 Тогда
			Элементы.Протокол.Развернуть(Строка.ПолучитьИдентификатор(),Истина);
		Иначе
			Элементы.Протокол.Свернуть(Строка.ПолучитьИдентификатор());
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПротоколВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.Протокол.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ПротоколГиперссылкаРасшифровки" Тогда
		
		Если Элементы.Протокол.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
			
			#Если НЕ ВебКлиент Тогда
			МассивРазвернутых = ПолучитьМассивРазвернутых();
			#КонецЕсли
			
			ПараметрКонтроля = Элементы.Протокол.ТекущиеДанные.ПараметрКонтроля;
			КлючПротокола = ПовторитьПроверку(ПараметрКонтроля);
			
			Если КлючПротокола = Неопределено Тогда
				ПоказатьПредупреждение(,НСтр("ru='Повторная проверка не выполнена из-за внутренней ошибки'"));
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Запись.СобытиеКалендаря) Тогда
				
				СтруктураПараметровСобытия = Новый Структура(
					"Организация,СобытиеКалендаря,ЕстьОшибки,ЕстьПредупреждения, КлючПротоколаПроверки", 
					Запись.Организация,
					Запись.СобытиеКалендаря,
					Запись.ЕстьОшибки, 
					Запись.ЕстьПредупреждения,
					КлючПротокола);
				
				Оповестить("НовыйПротоколПоСобытию", СтруктураПараметровСобытия);
			КонецЕсли;
			
			#Если НЕ ВебКлиент Тогда
			ВосстановитьПараметрыДереваЗначений(МассивРазвернутых, ПараметрКонтроля);
			#КонецЕсли
		Иначе
			
			Расшифровка = МассивРасшифровок[Элементы.Протокол.ТекущиеДанные.ИндексСтрокиПротокола];
			ПроверкаДанныхКлиент.ПровестиРасшифровку(Расшифровка, Запись.Организация, Запись.СобытиеКалендаря);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьПротокол(ДеревоРезультата, ДанныеПротокола)
	
	СоздавалсяВременныйМассив = Ложь;
	Если ВременныйМассивРасшифровок = Неопределено Тогда
		ВременныйМассивРасшифровок = Новый Массив;
		СоздавалсяВременныйМассив = Истина;
	КонецЕсли;
	
	Для Каждого Строка Из ДеревоРезультата.Строки Цикл
		
		СтрокаПротокола = ДанныеПротокола.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПротокола, Строка, ,"Расшифровка");
		
		Если Строка.РезультатКонтроля > 0 Тогда
			ВременныйМассивРасшифровок.Добавить(Новый ФиксированнаяСтруктура(Строка.Расшифровка));
			СтрокаПротокола.ИндексСтрокиПротокола = ВременныйМассивРасшифровок.ВГраница();
			
			Если Строка.Родитель <> Неопределено Тогда
				
				Если Строка.Расшифровка.ТипРасшифровки = "НоваяЗаписьРегистраСведений" Тогда
					СтрокаПротокола.ГиперссылкаРасшифровки = НСтр("ru='Создать'");
				Иначе
					СтрокаПротокола.ГиперссылкаРасшифровки = НСтр("ru='Показать'");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Строка.Родитель = Неопределено Тогда
			СтрокаПротокола.ТребуетсяЖирный = Истина;
			СтрокаПротокола.ГиперссылкаРасшифровки = НСтр("ru='Повторить проверку'");
			СтрокаПротокола.КартинкаОбновления = 0;
		Иначе
			СтрокаПротокола.КартинкаОбновления = 1;
		КонецЕсли;
		
		ЗаполнитьПротокол(Строка, СтрокаПротокола);
		
	КонецЦикла;
	
	Если СоздавалсяВременныйМассив Тогда
		МассивРасшифровок = Новый ФиксированныйМассив(ВременныйМассивРасшифровок);
		ВременныйМассивРасшифровок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура СформироватьЗаголовок()
	
	Заголовок = НСтр("ru='Протокол проверки данных от '") + Запись.ДатаПроверки;
	
КонецПроцедуры

&НаСервере
Функция ПовторитьПроверку(ПараметрКонтроля)
	
	МассивРасшифровок = Неопределено;
	
	МенеджерЗаписи = РегистрыСведений.ПротоколыПроверкиДанных.СоздатьМенеджерЗаписи();
	
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Запись);
	МенеджерЗаписи.Прочитать();
	
	ДеревоПротокола = МенеджерЗаписи.Протокол.Получить();
	
	Результат = ПроверкаДанных.ВыполнитьПовторнуюПроверкуПараметраКонтроля(
		ПараметрКонтроля,
		Запись.Организация,
		Запись.СобытиеКалендаря,
		Запись.ДатаНачала,
		Запись.ДатаОкончания, 
		ДеревоПротокола);
	
	Если Результат.ЕстьКритическаяОшибка Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Результат.КлючПротоколаПроверки);
	
	МенеджерЗаписи.Прочитать();
	
	ЗначениеВРеквизитФормы(МенеджерЗаписи, "Запись");
	
	ВыполнитьНастройкуФормы(МенеджерЗаписи);
	
	Возврат Результат.КлючПротоколаПроверки;
	
КонецФункции

&НаСервере
Процедура ВыполнитьНастройкуФормы(МенеджерЗаписи = Неопределено)
	
	Если МенеджерЗаписи = Неопределено Тогда
		МенеджерЗаписи = РегистрыСведений.ПротоколыПроверкиДанных.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Запись);
		МенеджерЗаписи.Прочитать();
	КонецЕсли;
	
	ДанныеПротокола = РеквизитФормыВЗначение("Протокол");
	ДанныеПротокола.Строки.Очистить();
	ДеревоПротокола = МенеджерЗаписи.Протокол.Получить();
	
	
	ЗаполнитьПротокол(ДеревоПротокола, ДанныеПротокола);
	
	ЗначениеВРеквизитФормы(ДанныеПротокола ,"Протокол");
	
	СформироватьЗаголовок();
	
	ПредставлениеПериодаПроверки = ПредставлениеПериода(Запись.ДатаНачала, КонецДня(Запись.ДатаОкончания));
	
	Элементы.СобытиеКалендаря.Видимость = ЗначениеЗаполнено(Запись.СобытиеКалендаря);
	
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивРазвернутых()
	
	МассивРазвренутых = Новый Массив;
	ЭлементыПротокола = Протокол.ПолучитьЭлементы();
	
	Для Каждого Элемент Из ЭлементыПротокола Цикл
		
		Если Элементы.Протокол.Развернут(Элемент.ПолучитьИдентификатор()) Тогда
			МассивРазвренутых.Добавить(Элемент.ПараметрКонтроля);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивРазвренутых;
	
КонецФункции

&НаКлиенте
Процедура ВосстановитьПараметрыДереваЗначений(МассивРазвернутых, АктивныйПараметрКонтроля)
	
	ЭлементыПротокола = Протокол.ПолучитьЭлементы();
	ИдентификаторАктивнойСтроки = Неопределено;
	
	
	Для Каждого Развернутый Из МассивРазвернутых Цикл
		
		Для Каждого Элемент Из ЭлементыПротокола Цикл
			Если Развернутый = Элемент.ПараметрКонтроля Тогда
				Элементы.Протокол.Развернуть(Элемент.ПолучитьИдентификатор())
			КонецЕсли;
			
			Если АктивныйПараметрКонтроля = Элемент.ПараметрКонтроля Тогда
				ИдентификаторАктивнойСтроки = Элемент.ПолучитьИдентификатор();
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	// такое может быть в ситуации, когда все были изначально свернуты
	Если ИдентификаторАктивнойСтроки = Неопределено Тогда
		
		Для Каждого Элемент Из ЭлементыПротокола Цикл
			
			Если АктивныйПараметрКонтроля = Элемент.ПараметрКонтроля Тогда
				
				ИдентификаторАктивнойСтроки = Элемент.ПолучитьИдентификатор();
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Элементы.Протокол.ТекущаяСтрока = ИдентификаторАктивнойСтроки;
	
КонецПроцедуры

