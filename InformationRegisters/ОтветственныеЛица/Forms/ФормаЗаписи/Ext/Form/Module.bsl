
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустой() Тогда
		Если Параметры.ЕстьСобственныеДанныеЗаполнения Тогда
			ЗаполнитьЗначенияСвойств(Запись, Параметры.СобственныеДанныеЗаполнения);
		ИначеЕсли Не Параметры.ЗначенияЗаполнения.Свойство("Организация") Тогда
			Запись.Организация = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяОрганизация");
			Если Не ЗначениеЗаполнено(Запись.Организация) Тогда
				Запись.Организация =УправлениеНебольшойФирмойСервер.ПолучитьПредопределеннуюОрганизацию();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		
		ОтветственныеЛица	= РегистрыСведений.ОтветственныеЛица.СоздатьМенеджерЗаписи();
		ОтветственныеЛица.Период				= Запись.ИсходныйКлючЗаписи.Период;
		ОтветственныеЛица.Организация			= Запись.ИсходныйКлючЗаписи.Организация;
		ОтветственныеЛица.ТипОтветственногоЛица	= Запись.ИсходныйКлючЗаписи.ТипОтветственногоЛица;
		ОтветственныеЛица.Прочитать();
		
		СтруктураСтаройЗаписи	= Новый Структура("Период, Организация, ТипОтветственногоЛица, Сотрудник, Должность");
		ЗаполнитьЗначенияСвойств(СтруктураСтаройЗаписи, ОтветственныеЛица);
		ПараметрыЗаписи.Вставить("СтруктураСтаройЗаписи", СтруктураСтаройЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("СтруктураСтаройЗаписи") Тогда
		
		СтруктураСтаройЗаписи = ПараметрыЗаписи.СтруктураСтаройЗаписи;
		
		// Если была изменена дата и хотя бы одно из полей, тогда сохраним прежнюю запись
		Если (Не ТекущийОбъект.Период = СтруктураСтаройЗаписи.Период
				И (Не ТекущийОбъект.Сотрудник = СтруктураСтаройЗаписи.Сотрудник
					Или Не ТекущийОбъект.Должность = СтруктураСтаройЗаписи.Должность)) Тогда
			
			ОтветственныеЛица = РегистрыСведений.ОтветственныеЛица.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(ОтветственныеЛица, ТекущийОбъект);
			ЗаполнитьЗначенияСвойств(ОтветственныеЛица, СтруктураСтаройЗаписи);
			ОтветственныеЛица.Записать();
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("УстановленоДолжностноеЛицо", Новый Структура("ОтветственноеЛицо, ФизическоеЛицо",Запись.ТипОтветственногоЛица, Запись.Сотрудник), Запись);
	
КонецПроцедуры

#КонецОбласти