//По переданным данным создаем дерево строк на форме
//
// Выборка - выборка запроса с данными в иерархии
// ДеревоЗначени - элементы дерева значения, для которого создаются строки
//
Функция ДобавитьСтрокиВДерево(Выборка, ДеревоЗначений)
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрокаНастройки = ДеревоЗначений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаНастройки, Выборка);
		НоваяСтрокаНастройки.Значение = Выборка.Настройка.ТипЗначения.ПривестиЗначение(Выборка.Значение);
		
		СтрокиВыборки = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Если СтрокиВыборки.Количество() > 0 Тогда
			
			ДобавитьСтрокиВДерево(СтрокиВыборки, НоваяСтрокаНастройки.ПолучитьЭлементы());
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

// Процедура обновляет информацию в таблице настроек.
//
Процедура ЗаполнитьДерево()

	НастройкиЭлементы = ДеревоНастроек.ПолучитьЭлементы();
	НастройкиЭлементы.Очистить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Настройки.Родитель,
	|	Настройки.Ссылка КАК Настройка,
	|	Настройки.ЭтоГруппа КАК ЭтоГруппа,
	|	НЕ Настройки.ЭтоГруппа КАК НомерКартинки,
	|	ЗначениеНастроек.Значение,
	|	Константы.ИспользоватьНесколькоОрганизаций,
	|	Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам,
	|	Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям
	|ИЗ
	|	ПланВидовХарактеристик.НастройкиПользователей КАК Настройки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПользователей КАК ЗначениеНастроек
	|		ПО (ЗначениеНастроек.Настройка = Настройки.Ссылка)
	|			И (ЗначениеНастроек.Пользователь = &Пользователь),
	|	Константы КАК Константы
	|ГДЕ
	|	НЕ Настройки.ПометкаУдаления
	|	И НЕ(Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ОсновнаяОрганизация)
	|				И НЕ Константы.ИспользоватьНесколькоОрганизаций)
	|	И НЕ(Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ОсновнойСклад)
	|				И НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам)
	|	И НЕ(Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ОсновноеПодразделение)
	|				И НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям)
	|	И (Настройки.Родитель <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.НастройкаПодбора)
	|			ИЛИ Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ИспользоватьНовыйМеханизмПодбора))
	|	И НЕ(Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ИспользоватьЗарплатаИсполнителейВЗаказНаряде)
	|				И НЕ Константы.ФункциональнаяОпцияИспользоватьПодсистемуЗарплата)
	|	И НЕ(Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ИспользоватьЗарплатаИсполнителейВЗаказНаряде)
	|				И НЕ Константы.ФункциональнаяОпцияИспользоватьПодсистемуРаботы)
	|	И НЕ(Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ИспользоватьМатериалыВЗаказНаряде)
	|				И НЕ Константы.ФункциональнаяОпцияИспользоватьПодсистемуРаботы)
	|	И НЕ(Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ИспользоватьМатериалыЗаказчикаВЗаказНаряде)
	|				И НЕ Константы.ФункциональнаяОпцияИспользоватьПодсистемуРаботы)
	|	И НЕ(Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ИспользоватьТоварыВЗаказНаряде)
	|				И НЕ Константы.ФункциональнаяОпцияИспользоватьПодсистемуРаботы)
	|	И НЕ(Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ПоложениеВидаРаботВЗаказНаряде)
	|				И НЕ Константы.ФункциональнаяОпцияИспользоватьПодсистемуРаботы)
	|	И НЕ Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.СпособЗагрузкиДанныхИзВнешнихИсточников)
	|	И НЕ Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ЗагрузкаДанныхИзВнешнихИсточников)
	|	И НЕ Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ЗначениеЗаполненияКатегорияНоменклатуры)
	|	И НЕ Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.Биллинг)
	|	И НЕ Настройки.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ОпросПоПодсистемеБиллингЗавершен)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтоГруппа ИЕРАРХИЯ,
	|	Настройки.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ДобавитьСтрокиВДерево(Выборка, НастройкиЭлементы);
	
КонецПроцедуры // ЗаполнитьДерево()

// Процедура выполняет запись значений настроек в регистр сведений.
//
Процедура ОбновитьНастройки()
	
	НаборЗаписей = РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Пользователь.Использование = Истина;
	НаборЗаписей.Отбор.Пользователь.Значение      = Пользователь;
	
	НастройкиГруппы = ДеревоНастроек.ПолучитьЭлементы();
	Для Каждого ГруппаНастроек Из НастройкиГруппы Цикл
		
		НастройкиЭлементы = ГруппаНастроек.ПолучитьЭлементы();
		
		Для Каждого СтрокаНастроек Из НастройкиЭлементы Цикл
			
			Запись = НаборЗаписей.Добавить();
			
			Запись.Пользователь = Пользователь;
			Запись.Настройка    = СтрокаНастроек.Настройка;
			Запись.Значение     = СтрокаНастроек.Настройка.ТипЗначения.ПривестиЗначение(СтрокаНастроек.Значение);
			
		КонецЦикла;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры // ОбновитьНастройки()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Пользователь") Тогда
		
		Пользователь = Параметры.Пользователь;
		
		Если ЗначениеЗаполнено(Пользователь) Тогда
			
			ОсновноеПодразделение = ПланыВидовХарактеристик.НастройкиПользователей.ОсновноеПодразделение;
			ОсновнойСклад = ПланыВидовХарактеристик.НастройкиПользователей.ОсновнойСклад;
			
			ПараметрыВыбораПодразделение = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение;
			
			ПараметрыВыбораСклад = Новый СписокЗначений;
			ПараметрыВыбораСклад.Добавить(Перечисления.ТипыСтруктурныхЕдиниц.Склад);
			ПараметрыВыбораСклад.Добавить(Перечисления.ТипыСтруктурныхЕдиниц.Розница);
			ПараметрыВыбораСклад.Добавить(Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет);
			
			
			ЗаполнитьДерево();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы Тогда
		ОбновитьНастройки();
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии() 

&НаКлиенте
Процедура ДеревоНастроекПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные = Неопределено ИЛИ Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		
		Отказ = Истина;
		Возврат;
		
	ИначеЕсли Элемент.ТекущиеДанные.Настройка = ОсновноеПодразделение Тогда
		
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.ТипСтруктурнойЕдиницы", ПараметрыВыбораПодразделение));
		Элементы.ДеревоНастроекЗначение.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);;
		
	ИначеЕсли Элемент.ТекущиеДанные.Настройка = ОсновнойСклад Тогда
		
		НовыйМассив = Новый Массив();
		Для каждого ЭлементСписка Из ПараметрыВыбораСклад Цикл
			НовыйМассив.Добавить(ЭлементСписка.Значение);
		КонецЦикла;		
		МассивСклад = Новый ФиксированныйМассив(НовыйМассив);
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипСтруктурнойЕдиницы", МассивСклад);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		Элементы.ДеревоНастроекЗначение.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
		
	КонецЕсли;
	
КонецПроцедуры

