
#Область ПрограммныйИнтерфейс

// Вызывается при нажатии на гиперссылку форматированной строки, расположенной в элементе формы типа Расширение поля формы для поля надписи
// или в элементе формы Расширение декорации формы для надписи, у которого свойство Гиперссылка имеет значение Ложь.
//
// Параметры:
//  Форма - УправляемаяФорма - форма запущенной обработки корректировки остатков,
//  НавигационнаяСсылкаФорматированнойСтроки - Строка - значение гиперссылки форматированной строки,
//  СтандартнаяОбработка - Булево -  признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаНавигационнойСсылки(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	ИдентификаторФСРАР = ИнтеграцияЕГАИСВызовСервера.ЗначениеРеквизитаОбъекта(Форма.Объект.ОрганизацияЕГАИС, "Код");
	ОтборПоИдентификатору = Новый Структура("Поле, Значение", "ИдентификаторФСРАР", ИдентификаторФСРАР);
	
	Отбор = Новый Структура;
	
	ДоступныеМодули = ИнтеграцияЕГАИСВызовСервера.ДоступныеТранспортныеМодули(ОтборПоИдентификатору);
	Если ДоступныеМодули.Количество() <> 0 Тогда
		Отбор.Вставить("Склад", ДоступныеМодули[0].ТорговаяТочка);
	КонецЕсли;
	
	Если ВРег(Лев(НавигационнаяСсылкаФорматированнойСтроки, СтрДлина("СоздатьПриказ"))) = ВРег("СоздатьПриказ") Тогда
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Отбор);
		
		ОткрытьФорму("Документ.ИнвентаризацияЗапасов.ФормаОбъекта", ПараметрыФормы, Форма);
		
	ИначеЕсли ВРег(НавигационнаяСсылкаФорматированнойСтроки) = ВРег("ОткрытьСписокИнвентаризаций") Тогда
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", Отбор);
		
		ОткрытьФорму("Документ.ИнвентаризацияЗапасов.ФормаСписка", ПараметрыФормы, Форма);
		
	ИначеЕсли Лев(ВРег(НавигационнаяСсылкаФорматированнойСтроки), СтрДлина("СформироватьОтчетПоИзлишкамНедостачам")) = ВРег("СформироватьОтчетПоИзлишкамНедостачам") Тогда
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура(
			"Отбор, КлючНазначенияИспользования, КлючВарианта, СформироватьПриОткрытии",
			Новый Структура("СтруктурнаяЕдиница", Отбор.Склад),
			"ИзлишкиИНедостачиКонтекст",
			"Основной",
			Истина);

		ОткрытьФорму("Отчет.ИзлишкиИНедостачи.Форма",
					ПараметрыФормы,
					Форма,
					Форма.УникальныйИдентификатор);
					
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму сопоставления номенклатуры с классификатором алкогольной продукции ЕГАИС.
//
// Параметры:
//  ОповещениеПриЗавершении - ОписаниеОповещения - процедура, которая будет вызвана после закрытия формы сопоставления,
//  НеСопоставленныеТовары - Строка - адрес в хранилище таблицы несопоставленных товаров,
//  Форма - УправляемаяФорма - форма запущенной обработки корректировки остатков.
//
Процедура НачатьСопоставлениеНоменклатуры(ОповещениеПриЗавершении, НеСопоставленныеТовары, Форма) Экспорт
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("НеСопоставленныеТовары", НеСопоставленныеТовары);
	
	ОткрытьФорму(
		"Обработка.СопоставлениеНоменклатурыЕГАИС.Форма.Форма",
		ПараметрыОткрытияФормы,
		Форма,,,,
		ОповещениеПриЗавершении);
	
КонецПроцедуры

#КонецОбласти