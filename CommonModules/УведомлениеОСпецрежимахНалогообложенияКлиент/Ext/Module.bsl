#Область СлужебныеПроцедурыИФункции
Процедура ПриИзмененииСодержимогоОбласти(Форма, Область, ЕстьМногостраничность = Ложь) Экспорт
	ОбластьИмя = Область.Имя;
	
	Если Форма.ДанныеУведомления.Свойство(Форма.ТекущееИДНаименования)
		И Форма.ДанныеУведомления[Форма.ТекущееИДНаименования].Свойство(ОбластьИмя) Тогда 
		
		Форма.ДанныеУведомления[Форма.ТекущееИДНаименования].Вставить(ОбластьИмя, Область.Значение);
		Форма.Модифицированность = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЕстьМногостраничность И Форма.ДанныеМногостраничныхРазделов.Свойство(Форма.ТекущееИДНаименования) Тогда 
		Для Каждого Элт Из Форма.ДанныеМногостраничныхРазделов[Форма.ТекущееИДНаименования] Цикл 
			Если Не Элт.Значение.Свойство(ОбластьИмя) Тогда 
				Прервать;
			КонецЕсли;
			
			Если Элт.Значение.УИД = Форма.УИДТекущаяСтраница Тогда 
				Элт.Значение.Вставить(ОбластьИмя, Область.Значение);
				Форма.Модифицированность = Истина;
				Возврат;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(ОбластьИмя, "_") > 0 Тогда
		МнгЧ = Форма.ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ОбластьИмя);
		Если ЗначениеЗаполнено(МнгЧ) Тогда 
			База = Лев(Область.Имя, СтрНайти(ОбластьИмя, "_") - 1);
			Номер = Число(Сред(ОбластьИмя, СтрНайти(ОбластьИмя, "_") + 1));
			Форма[МнгЧ][Номер-1][База] = Область.Значение;
		КонецЕсли;
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
КонецПроцедуры

Процедура ПредставлениеУведомленияВыбор(Форма, Область, СтандартнаяОбработка, ЕстьМногостраничность = Ложь) Экспорт 
	Строки = Форма.СпискиВыбора.НайтиСтроки(Новый Структура("ИДНаименования,ИмяПоля", Форма.ТекущееИДНаименования, Область.Имя));
	Если Строки.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Форма.ЗагружаемыеКоды.Очистить();
	Для Каждого Стр Из Строки Цикл 
		НовСтр = Форма.ЗагружаемыеКоды.Добавить();
		НовСтр.Код = Стр.Код;
		НовСтр.Название = Стр.Наименование;
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          "Выберете соответствующий код");
	ПараметрыФормы.Вставить("ТаблицаЗначений",    Форма.ЗагружаемыеКоды);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура("Код", Область.Значение));
	
	ДополнительныеПараметры = Новый Структура("Область, Форма, ЕстьМногостраничность", Область, Форма, ЕстьМногостраничность);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаСпискаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

Процедура ОбработкаСпискаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Область = ДополнительныеПараметры.Область;
	Форма = ДополнительныеПараметры.Форма;
	ЕстьМногостраничность = ДополнительныеПараметры.ЕстьМногостраничность;
	Область.Значение = РезультатВыбора.Код;
	ПриИзмененииСодержимогоОбласти(Форма, Область, ЕстьМногостраничность);
КонецПроцедуры

Процедура ОбработкаАдреса(Форма, Область, РоссийскийАдрес, ЗначенияПолей, ПредставлениеАдреса, СтандартнаяОбработка) Экспорт
	РоссийскийАдрес = Новый Соответствие;
	
	РоссийскийАдрес.Вставить("Индекс", Истина);
	РоссийскийАдрес.Вставить("КодРегиона", Истина);
	РоссийскийАдрес.Вставить("Район", Истина);
	РоссийскийАдрес.Вставить("РайонСокращение", Истина);
	РоссийскийАдрес.Вставить("Город", Истина);
	РоссийскийАдрес.Вставить("ГородСокращение", Истина);
	РоссийскийАдрес.Вставить("НаселенныйПункт", Истина);
	РоссийскийАдрес.Вставить("НаселенныйПунктСокращение", Истина);
	РоссийскийАдрес.Вставить("Улица", Истина);
	РоссийскийАдрес.Вставить("УлицаСокращение", Истина);
	РоссийскийАдрес.Вставить("Дом", Истина);
	РоссийскийАдрес.Вставить("ТипДома", Истина);
	РоссийскийАдрес.Вставить("Корпус", Истина);
	РоссийскийАдрес.Вставить("ТипКорпуса", Истина);
	РоссийскийАдрес.Вставить("Квартира", Истина);
	РоссийскийАдрес.Вставить("ТипКвартиры", Истина);
	
	Регионы = Форма.Регионы;
	Префикс = "";
	ОблИмя = Область.Имя;
	Если СтрНачинаетсяС(ОблИмя, "АДДР") Тогда 
		Префикс = Лев(ОблИмя, 6);
		ОблИмя = Сред(ОблИмя, 7);
	КонецЕсли;
	
	Если РоссийскийАдрес.Получить(ОблИмя) = Истина Тогда 
		СтандартнаяОбработка = Ложь;
		Если Регионы.Количество() = 0 Тогда
			УведомлениеОСпецрежимахНалогообложенияВызовСервера.ЗаполнитьРегионы(Регионы);
		КонецЕсли;
		
		Для Каждого КЗ Из РоссийскийАдрес Цикл 
			РоссийскийАдрес[КЗ.Ключ] = Форма.ПредставлениеУведомления.Области[Префикс + КЗ.Ключ].Значение;
		КонецЦикла;
		
		Регион = Регионы.НайтиСтроки(Новый Структура("Код", СокрЛП(РоссийскийАдрес["КодРегиона"])));
		Если Регион.Количество() > 0 Тогда
			РоссийскийАдрес["Регион"] = Регион[0].Наим;
		КонецЕсли;
		
		ЗначенияПолей = Новый СписокЗначений;
		
		ЗначенияПолей.Добавить(РоссийскийАдрес["Индекс"],						"Индекс");
		ЗначенияПолей.Добавить(РоссийскийАдрес["КодРегиона"],					"КодРегиона");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Район"],						"Район");
		ЗначенияПолей.Добавить(РоссийскийАдрес["РайонСокращение"],				"РайонСокращение");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Город"],						"Город");
		ЗначенияПолей.Добавить(РоссийскийАдрес["ГородСокращение"],				"ГородСокращение");
		ЗначенияПолей.Добавить(РоссийскийАдрес["НаселенныйПункт"],				"НаселенныйПункт");
		ЗначенияПолей.Добавить(РоссийскийАдрес["НаселенныйПунктСокращение"],	"НаселенныйПунктСокращение");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Улица"],						"Улица");
		ЗначенияПолей.Добавить(РоссийскийАдрес["УлицаСокращение"],				"УлицаСокращение");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Дом"],							"Дом");
		ЗначенияПолей.Добавить(РоссийскийАдрес["ТипДома"],						"ТипДома");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Корпус"],						"Корпус");
		ЗначенияПолей.Добавить(РоссийскийАдрес["ТипКорпуса"],					"ТипКорпуса");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Квартира"],						"Квартира");
		ЗначенияПолей.Добавить(РоссийскийАдрес["ТипКвартиры"],					"ТипКвартиры");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Регион"],						"Регион");
		
		ПредставлениеАдреса = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеАдресаВФормате9Запятых("643," + РоссийскийАдрес["Индекс"] + ","
		+ РоссийскийАдрес["Регион"] + ","
		+ РоссийскийАдрес["КодРегиона"] + ","
		+ РоссийскийАдрес["Район"] + ","
		+ РоссийскийАдрес["Город"] + ","
		+ РоссийскийАдрес["НаселенныйПункт"] + ","
		+ РоссийскийАдрес["Улица"] + ","
		+ РоссийскийАдрес["Дом"] + ","
		+ РоссийскийАдрес["Корпус"] + ","
		+ РоссийскийАдрес["Квартира"]);
	КонецЕсли;
КонецПроцедуры

Процедура ОбновитьАдресВТабличномДокументе(Форма, Результат, Параметры, ЕстьМногостраничность = Ложь) Экспорт 
	Префикс = ?(Параметры.Свойство("Префикс"), Параметры.Префикс, "");
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		РоссийскийАдрес = Параметры.РоссийскийАдрес;
		
		УведомлениеОСпецрежимахНалогообложенияВызовСервера.СформироватьАдрес(Результат.КонтактнаяИнформация, РоссийскийАдрес);
		
		Для Каждого КЗ Из РоссийскийАдрес Цикл 
			Если Прав(КЗ.Ключ, СтрДлина("Сокращение")) = "Сокращение" Тогда 
				БезСокр = СтрЗаменить(КЗ.Ключ, "Сокращение", "");
				
				Если Прав(РоссийскийАдрес[БезСокр], СтрДлина(КЗ.Значение)) = КЗ.Значение Тогда
					РоссийскийАдрес[БезСокр] = СокрЛП(Лев(РоссийскийАдрес[БезСокр], СтрДлина(РоссийскийАдрес[БезСокр]) - СтрДлина(КЗ.Значение)));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Элт = Неопределено;
		Для Каждого КЗ Из РоссийскийАдрес Цикл 
			Обл = Форма.ПредставлениеУведомления.Области.Найти(Префикс + КЗ.Ключ);
			Если Обл <> Неопределено Тогда 
				Обл.Значение = РоссийскийАдрес[КЗ.Ключ];
				Если Форма.ДанныеУведомления.Свойство(Форма.ТекущееИДНаименования) Тогда 
					Форма.ДанныеУведомления[Форма.ТекущееИДНаименования].Вставить(Префикс + КЗ.Ключ, РоссийскийАдрес[КЗ.Ключ]);
				ИначеЕсли ЕстьМногостраничность И Форма.ДанныеМногостраничныхРазделов.Свойство(Форма.ТекущееИДНаименования) Тогда
					Если Элт = Неопределено Тогда 
						Для Каждого Элт Из Форма.ДанныеМногостраничныхРазделов[Форма.ТекущееИДНаименования] Цикл
							Если Элт.Значение.УИД = Форма.УИДТекущаяСтраница Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					Элт.Значение.Вставить(Префикс + КЗ.Ключ, РоссийскийАдрес[КЗ.Ключ]);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Форма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти