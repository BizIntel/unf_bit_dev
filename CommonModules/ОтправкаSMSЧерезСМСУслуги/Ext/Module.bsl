////////////////////////////////////////////////////////////////////////////////
// Подсистема "Отправка SMS"
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Отправляет SMS через СМС-Услуги.
//
// Параметры:
//  НомераПолучателей - Массив - номера получателей в формате +7ХХХХХХХХХХ;
//  Текст 			  - Строка - текст сообщения, длиной не более 480 символов;
//  ИмяОтправителя 	  - Строка - имя отправителя, которое будет отображаться вместо номера входящего SMS;
//  Логин			  - Строка - логин пользователя услуги отправки sms;
//  Пароль			  - Строка - пароль пользователя услуги отправки sms.
//
// Возвращаемое значение:
//  Структура: ОтправленныеСообщения - Массив структур: НомерОтправителя.
//                                                  ИдентификаторСообщения.
//             ОписаниеОшибки        - Строка - пользовательское представление ошибки, если пустая строка,
//                                          то ошибки нет.
Функция ОтправитьSMS(НомераПолучателей, Текст, ИмяОтправителя, Логин, Пароль) Экспорт
	
	Результат = Новый Структура("ОтправленныеСообщения,ОписаниеОшибки", Новый Массив, "");
	
	// Подготовка получателей.
	Получатели = Новый Массив;
	Для Каждого Элемент Из НомераПолучателей Цикл
		Получатель = ФорматироватьНомерДляОтправки(Элемент);
		Если Получатели.Найти(Получатель) = Неопределено Тогда
			Получатели.Добавить(Получатель);
		КонецЕсли;
	КонецЦикла;
	
	// Проверка на заполнение обязательных параметров.
	Если НомераПолучателей.Количество() = 0 Или ПустаяСтрока(Текст) Тогда
		Результат.ОписаниеОшибки = НСтр("ru = 'Неверные параметры сообщения'");
		Возврат Результат;
	КонецЕсли;
	
	// Подготовка параметров запроса.
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("login", Логин);
	ПараметрыЗапроса.Вставить("password", Пароль);
	ПараметрыЗапроса.Вставить("action", "send");
	ПараметрыЗапроса.Вставить("text", Текст);
	ПараметрыЗапроса.Вставить("to", Получатели);
	ПараметрыЗапроса.Вставить("source", ИмяОтправителя);
	
	// отправка запроса
	ИмяФайлаОтвета = ВыполнитьЗапрос("send.php", ПараметрыЗапроса);
	Если ПустаяСтрока(ИмяФайлаОтвета) Тогда
		Результат.ОписаниеОшибки = Результат.ОписаниеОшибки + НСтр("ru = 'Соединение не установлено'");
		Возврат Результат;
	КонецЕсли;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяФайлаОтвета);
	ОтветСервера = Новый Структура("code,descr,smsid");
	ЗаполнитьЗначенияСвойств(ОтветСервера, ФабрикаXDTO.ПрочитатьXML(ЧтениеXML));
	ЧтениеXML.Закрыть();
	УдалитьФайлы(ИмяФайлаОтвета);
	
	КодРезультата = ОтветСервера.code;
	Если КодРезультата = "1" Тогда
		ИдентификаторСообщения = ОтветСервера.smsid;
		Для Каждого Получатель Из Получатели Цикл
			ОтправленноеСообщение = Новый Структура("НомерПолучателя,ИдентификаторСообщения", 
				ФорматироватьНомерИзРезультатаОтправки(Получатель), Получатель + "/" + ИдентификаторСообщения);
			Результат.ОтправленныеСообщения.Добавить(ОтправленноеСообщение);
		КонецЦикла;
	Иначе
		Результат.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru = 'Не удалось отправить SMS:
			|%1 (код ошибки: %2)'"), ОтветСервера.descr, КодРезультата);
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Отправка SMS'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка, , , Результат.ОписаниеОшибки);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает текстовое представление статуса доставки сообщения.
//
// Параметры:
//  ИдентификаторСообщения - Строка - идентификатор, присвоенный sms при отправке;
//  НастройкиОтправкиSMS   - Структура - см. ОтправкаSMSПовтИсп.НастройкиОтправкиSMS;
//
// Возвращаемое значение:
//  Строка - статус доставки. См. описание функции ОтправкаSMS.СтатусДоставки.
Функция СтатусДоставки(ИдентификаторСообщения, НастройкиОтправкиSMS) Экспорт
	Логин = НастройкиОтправкиSMS.Логин;
	Пароль = НастройкиОтправкиSMS.Пароль;
	
	Результат = Новый Соответствие;
	
	// Подготовка параметров запроса.
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("login", Логин);
	ПараметрыЗапроса.Вставить("password", Пароль);
	ПараметрыЗапроса.Вставить("smsid", ИдентификаторСообщения);
	
	// отправка запроса
	ИмяФайлаОтвета = ВыполнитьЗапрос("report.php", ПараметрыЗапроса);
	Если ПустаяСтрока(ИмяФайлаОтвета) Тогда
		Возврат "Ошибка";
	КонецЕсли;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяФайлаОтвета);
	ОтветСервера = Новый Структура("code,descr,detail");
	ЗаполнитьЗначенияСвойств(ОтветСервера, ФабрикаXDTO.ПрочитатьXML(ЧтениеXML));
	ЧтениеXML.Закрыть();
	УдалитьФайлы(ИмяФайлаОтвета);
	
	КодРезультата = ОтветСервера.code;
	Если КодРезультата = "1" Тогда
		Для Каждого Статус Из ОтветСервера.detail.Свойства() Цикл
			Получатели = ОтветСервера.detail[Статус.Имя].Последовательность();
			Для Индекс = 0 По Получатели.Количество()-1 Цикл
				Получатель = Получатели.ПолучитьЗначение(Индекс);
				Результат.Вставить(Получатель, СтатусДоставкиSMS(Статус.Имя));
			КонецЦикла;
		КонецЦикла;
	Иначе
		ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru = 'Не удалось получить статус доставки SMS (smsid: ""%3""):
			|%1 (код ошибки: %2)'"), ОтветСервера.descr, КодРезультата, ИдентификаторСообщения);
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Отправка SMS'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки);
		Возврат "Ошибка";
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция СтатусДоставкиSMS(КодСостояния)
	СоответствиеСтатусов = Новый Соответствие;
	СоответствиеСтатусов.Вставить("enqueued", "Отправляется");
	СоответствиеСтатусов.Вставить("onModer", "Отправляется");
	СоответствиеСтатусов.Вставить("process", "Отправляется");
	СоответствиеСтатусов.Вставить("waiting", "Отправлено");
	СоответствиеСтатусов.Вставить("delivered", "Доставлено");
	СоответствиеСтатусов.Вставить("notDelivered", "НеДоставлено");
	СоответствиеСтатусов.Вставить("cancel", "НеОтправлено");
	
	Результат = СоответствиеСтатусов[КодСостояния];
	Возврат ?(Результат = Неопределено, "НеОтправлялось", Результат);
КонецФункции

Функция ВыполнитьЗапрос(ИмяМетода, ПараметрыЗапроса)
	
	Результат = "";
	
	ИмяФайлаЗапроса = СформироватьФайлДляPOSTЗапроса(ПараметрыЗапроса);
	ИмяФайлаОтвета = ПолучитьИмяВременногоФайла("xml");
	
	// формирование заголовка
	Заголовок = Новый Соответствие;
	Заголовок.Вставить("Content-Type", "application/x-www-form-urlencoded");
	Заголовок.Вставить("Content-Length", XMLСтрока(РазмерФайла(ИмяФайлаЗапроса)));
	
	// Отправка запроса и получение ответа.
	Попытка
		Соединение = Новый HTTPСоединение("lcab.sms-uslugi.ru", , , , ПолучениеФайловИзИнтернетаКлиентСервер.ПолучитьПрокси("http"), 60);
		Соединение.ОтправитьДляОбработки(ИмяФайлаЗапроса, "/API/XML/" + ИмяМетода, ИмяФайлаОтвета, Заголовок);
		Результат = ИмяФайлаОтвета;
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Отправка SMS'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	УдалитьФайлы(ИмяФайлаЗапроса);
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьФайлДляPOSTЗапроса(ПараметрыЗапроса)
	
	ИмяФайлаЗапроса = ПолучитьИмяВременногоФайла("txt");
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ИмяФайлаЗапроса, "utf-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("data");
	Для Каждого Параметр Из ПараметрыЗапроса Цикл
		Если Параметр.Ключ = "to" Тогда
			Для Каждого Номер Из Параметр.Значение Цикл
				ЗаписьXML.ЗаписатьНачалоЭлемента(Параметр.Ключ);
				ЗаписьXML.ЗаписатьАтрибут("number", Номер);
				ЗаписьXML.ЗаписатьКонецЭлемента();
			КонецЦикла;
		Иначе
			ЗаписьXML.ЗаписатьНачалоЭлемента(Параметр.Ключ);
			ЗаписьXML.ЗаписатьТекст(Параметр.Значение);
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.Закрыть();
	
	Возврат ИмяФайлаЗапроса;
КонецФункции

Функция РазмерФайла(ИмяФайла)
	Файл = Новый Файл(ИмяФайла);
	Возврат Файл.Размер();
КонецФункции

Функция ФорматироватьНомерДляОтправки(Номер)
	Результат = "";
	ДопустимыеСимволы = "1234567890";
	Для Позиция = 1 По СтрДлина(Номер) Цикл
		Символ = Сред(Номер,Позиция,1);
		Если СтрНайти(ДопустимыеСимволы, Символ) > 0 Тогда
			Результат = Результат + Символ;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ФорматироватьНомерИзРезультатаОтправки(Номер)
	Результат = Номер;
	
	Если СтрДлина(Результат) > 10 Тогда
		ПервыйСимвол = Лев(Результат, 1);
		Если ПервыйСимвол = "8" Тогда
			Результат = "+7" + Сред(Результат, 2);
		ИначеЕсли ПервыйСимвол <> "+" Тогда
			Результат = "+" + Результат;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Возвращает список разрешений для отправки SMS с использованием всех доступных провайдеров.
//
// Возвращаемое значение:
//  Массив.
//
Функция Разрешения() Экспорт
	
	Протокол = "HTTP";
	Адрес = "lcab.sms-uslugi.ru";
	Порт = Неопределено;
	Описание = НСтр("ru = 'Отправка SMS через ""СМС-Услуги"".'");
	
	Разрешения = Новый Массив;
	Разрешения.Добавить(
		РаботаВБезопасномРежиме.РазрешениеНаИспользованиеИнтернетРесурса(Протокол, Адрес, Порт, Описание));
	
	Возврат Разрешения;
КонецФункции

#КонецОбласти

