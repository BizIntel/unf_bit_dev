////////////////////////////////////////////////////////////////////////////////
// Подсистема "Присоединенные файлы".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс


// Позволяет переопределить справочники хранения файлов по типам владельцев.
// 
// Параметры:
//  ТипВладелецФайла  - Тип ссылки объекта, к которому добавляется файл.
//
//  ИменаСправочников - Соответствие, содержащее в ключах имена справочников.
//                      При вызове содержит стандартное имя одного справочника,
//                      помеченного, как основной (если существует).
//                      Основной справочник используется для интерактивного
//                      взаимодействия с пользователем. Чтобы указать основной
//                      справочник, нужно установить Истина в значение соответствия.
//                      Если установить Истина более одного раза, тогда будет ошибка.
//
Процедура ПриОпределенииСправочниковХраненияФайлов(ТипВладелецФайла, ИменаСправочников) Экспорт
	
	ЕстьОсновнойСправочник = Ложь;
	МассивКлючейКУдалению = Новый Массив;
	Для Каждого КлючИЗначение Из ИменаСправочников Цикл
		Если Метаданные.Справочники.Найти(КлючИЗначение.Ключ) = Неопределено Тогда
			МассивКлючейКУдалению.Добавить(КлючИЗначение.Ключ);
		Иначе
			ЕстьОсновнойСправочник = (НЕ ЕстьОсновнойСправочник И КлючИЗначение.Значение = Истина);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Ключ Из МассивКлючейКУдалению Цикл
		ИменаСправочников.Удалить(Ключ);
	КонецЦикла;
	
	// ЭДО
	Если Метаданные.ОпределяемыеТипы.ВладелецПрисоединенныхФайлов.Тип.СодержитТип(ТипВладелецФайла) Тогда
		ИменаСправочников.Вставить("ЭДПрисоединенныеФайлы", НЕ ЕстьОсновнойСправочник);
	Иначе
		ИменаСправочников.Вставить("ЭДПрисоединенныеФайлы");
	КонецЕсли;
	// Конец ЭДО
	
	// ИнтеграцияГИСМ
	Если ИнтеграцияГИСМ.ТипПодсистемыГИСМ(ТипВладелецФайла) Тогда
		ИменаСправочников.Вставить("ГИСМПрисоединенныеФайлы", Ложь);
	КонецЕсли;
	// Конец ИнтеграцияГИСМ
	
КонецПроцедуры

// Формирует массив метаданных, которые не должны выводиться в настройках очистки файлов.
//
// Параметры:
//   МассивИсключений   - Массив - метаданные, которые не должны выводиться в настройках очистки файлов.
//
// Например:
//   МассивИсключений.Добавить(Метаданные.Справочники.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы);
//
Процедура ПриОпределенииОбъектовИсключенияОчисткиФайлов(МассивИсключений) Экспорт
	
	// ЭДО
	МассивИсключений.Добавить(Метаданные.Справочники.ЭДПрисоединенныеФайлы);
	// Конец ЭДО
	
КонецПроцедуры

// Формирует массив метаданных, которые не должны выводиться в настройках синхронизации файлов.
//
// Параметры:
//   МассивИсключений   -Массив - метаданные, которые не должны выводиться в настройках синхронизации файлов.
//
// Например:
//   МассивИсключений.Добавить(Метаданные.Справочники.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы);
//
Процедура ПриОпределенииОбъектовИсключенияСинхронизацииФайлов(МассивИсключений) Экспорт

КонецПроцедуры

#КонецОбласти

#Область СлужебныйИнтерфейсУНФ

Процедура ПриСозданииНаСервереПрисоединенныйФайл(Знач Форма) Экспорт
	
	Если Форма.Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ Форма.Параметры.Свойство("Ключ", Форма.Ключ) Тогда
		Форма.Ключ = Форма.Параметры.Key;
	КонецЕсли;
	
	Форма.АвтоЗаголовок = Ложь;
	Форма.Заголовок = НСтр("ru = 'Присоединенный файл'");
	
	Команда = Форма.Команды.Добавить("ПерейтиКФормеФайла");
	Команда.Действие = "Подключаемый_ПерейтиКФормеФайла";
	
	Декорация = Форма.Элементы.Добавить("ПоясняющийТекст", Тип("ДекорацияФормы"));
	Декорация.Заголовок = НСтр("ru = 'Для того, чтобы перейти к карточке файла, нажмите на гиперссылку'");
	
	Кнопка = Форма.Элементы.Добавить("ПерейтиКФормеФайла1", Тип("КнопкаФормы"));
	Кнопка.Вид        = ВидКнопкиФормы.Гиперссылка;
	Кнопка.Заголовок  = НСтр("ru = 'Перейти к форме файла'");
	Кнопка.ИмяКоманды = "ПерейтиКФормеФайла";
	
КонецПроцедуры

Процедура ВызватьИсключениеОткрытияФормы(Форма) Экспорт
	
	Если Форма.Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ВызватьИсключение НСтр("ru = 'Самостоятельное использование формы не предусмотрено.'");
	
КонецПроцедуры

#КонецОбласти