
// Открывает форму редактирования произвольного многострочного текста.
//
// Параметры:
//  ОповещениеОЗакрытии     - ОписаниеОповещения - содержит описание процедуры, которая будет вызвана 
//                            после закрытия формы ввода текста с теми же параметрами, что и для метода ПоказатьВводСтроки.
//  МногострочныйТекст      - Строка - произвольный текст, который необходимо отредактировать;
//  Заголовок               - Строка - текст, который необходимо отобразить в заголовке формы.
//
// Пример:
//
//   Оповещение = Новый ОписаниеОповещения("КомментарийЗавершениеВвода", ЭтотОбъект);
//   ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(Оповещение, Элемент.ТекстРедактирования);
//
//   &НаКлиенте
//   Процедура КомментарийЗавершениеВвода(Знач ВведенныйТекст, Знач ДополнительныеПараметры) Экспорт
//      Если ВведенныйТекст = Неопределено Тогда
//		   Возврат;
//   	КонецЕсли;	
//	
//	   Объект.МногострочныйКомментарий = ВведенныйТекст;
//	   Модифицированность = Истина;
//   КонецПроцедуры
//
Процедура ПоказатьФормуРедактированияМногострочногоТекста(Знач ОповещениеОЗакрытии, 
	Знач МногострочныйТекст, Знач Заголовок = Неопределено) Экспорт
	
	Если Заголовок = Неопределено Тогда
		ПоказатьВводСтроки(ОповещениеОЗакрытии, МногострочныйТекст,,, Истина);
	Иначе
		ПоказатьВводСтроки(ОповещениеОЗакрытии, МногострочныйТекст, Заголовок,, Истина);
	КонецЕсли;

КонецПроцедуры

// Открывает форму редактирования многострочного комментария.
//
// Параметры:
//  МногострочныйТекст      - Строка - произвольный текст, который необходимо отредактировать
//  ФормаВладелец 			- УправляемаяФорма - форма, в поле которой выполняется ввод комментария
//  ИмяРеквизита            - Строка - имя реквизита формы, в который будет помещен введенный пользователем комментарий. 
//  Заголовок               - Строка - текст, который необходимо отобразить в заголовке формы.
//                                     По умолчанию: "Комментарий".
//
// Пример использования:
//
//	 ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
//
Процедура ПоказатьФормуРедактированияКомментария(Знач МногострочныйТекст, Знач ФормаВладелец, Знач ИмяРеквизита, 
	Знач Заголовок = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура("ФормаВладелец,ИмяРеквизита", ФормаВладелец, ИмяРеквизита);
	Оповещение = Новый ОписаниеОповещения("КомментарийЗавершениеВвода", ЭтотОбъект, ДополнительныеПараметры);
	ЗаголовокФормы = ?(Заголовок <> Неопределено, Заголовок, НСтр("ru='Комментарий'"));
	ПоказатьФормуРедактированияМногострочногоТекста(Оповещение, МногострочныйТекст, ЗаголовокФормы);
	
КонецПроцедуры

Процедура КомментарийЗавершениеВвода(Знач ВведенныйТекст, Знач ДополнительныеПараметры) Экспорт
	
	Если ВведенныйТекст = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	РеквизитФормы = ДополнительныеПараметры.ФормаВладелец;
	
	ПутьКРеквизитуФормы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДополнительныеПараметры.ИмяРеквизита, ".");
	// Если реквизит вида "Объект.Комментарий" и т.п.
	Если ПутьКРеквизитуФормы.Количество() > 1 Тогда
		Для Индекс = 0 По ПутьКРеквизитуФормы.Количество() - 2 Цикл 
			РеквизитФормы = РеквизитФормы[ПутьКРеквизитуФормы[Индекс]];
		КонецЦикла;
	КонецЕсли;	
	
	РеквизитФормы[ПутьКРеквизитуФормы[ПутьКРеквизитуФормы.Количество() - 1]] = ВведенныйТекст;
	ДополнительныеПараметры.ФормаВладелец.Модифицированность = Истина;
	
КонецПроцедуры

Процедура ОткрытьОтчетВзаиморасчетрыСКонтрагентом(Контрагент) Экспорт
	
	Вариант = РаботаСФормойДокументаКлиентСервер.ВариантОтчета("АктСверки", "АктСверкиКонтекст");
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина);
	ОтборРасшифровки = Новый Соответствие;
	ОтборРасшифровки.Вставить("Контрагент", Контрагент);
	ПараметрыОткрытия.Вставить("ОтборРасшифровки", ОтборРасшифровки);
	
	ВариантыОтчетовКлиент.ОткрытьФормуОтчета(, Вариант, ПараметрыОткрытия);
	
КонецПроцедуры

Процедура ОткрытьОтчетДенежныеСредства(БанковскийСчетКасса) Экспорт
	
	Вариант = РаботаСФормойДокументаКлиентСервер.ВариантОтчета("ДенежныеСредства", "ВедомостьВВалюте");
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина);
	ОтборРасшифровки = Новый Соответствие;
	ОтборРасшифровки.Вставить("БанковскийСчетКасса", БанковскийСчетКасса);
	ПараметрыОткрытия.Вставить("ОтборРасшифровки", ОтборРасшифровки);
	
	ВариантыОтчетовКлиент.ОткрытьФормуОтчета(, Вариант, ПараметрыОткрытия);
	
КонецПроцедуры

Процедура ОткрытьФормуДокументаПоТипу(ДокументСсылка) Экспорт
	
	ИмяФормыСтрока = ПолучитьИмяДокументаПоТипу(ТипЗнч(ДокументСсылка));
	ОткрытьФорму("Документ."+ИмяФормыСтрока+".ФормаОбъекта", Новый Структура("Ключ", ДокументСсылка), ЭтотОбъект);
		
КонецПроцедуры

//Получает имя документа по типу на клиенте, без обращения к серверу
Функция ПолучитьИмяДокументаПоТипу(ТипДокумента) Экспорт
	
	СтруктураТипов = Новый Соответствие;
	
	СтруктураТипов.Вставить(Тип("ДокументСсылка.АвансовыйОтчет"), "АвансовыйОтчет");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.АктВыполненныхРабот"), "АктВыполненныхРабот");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.АмортизацияВА"), "АмортизацияВА");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.Бюджет"), "Бюджет");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ВводНачальныхОстатков"), "ВводНачальныхОстатков");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.Взаимозачет"), "Взаимозачет");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ВыгрузкаРегламентированныхОтчетов"), "ВыгрузкаРегламентированныхОтчетов");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ВыработкаВА"), "ВыработкаВА");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.Доверенность"), "Доверенность");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ДоговорКредитаИЗайма"), "ДоговорКредитаИЗайма");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ДополнительныеРасходы"), "ДополнительныеРасходы");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЗаданиеНаРаботу"), "ЗаданиеНаРаботу");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЗаказНаПроизводство"), "ЗаказНаПроизводство");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЗаказПокупателя"), "ЗаказПокупателя");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЗаказПоставщику"), "ЗаказПоставщику");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЗакрытиеМесяца"), "ЗакрытиеМесяца");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЗаписиУСН"), "ЗаписиУСН");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП"), "ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика"), "ЗапросНаИнформационноеОбслуживаниеНалогоплательщика");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЗапросНаИнформационноеОбслуживаниеСтрахователя"), "ЗапросНаИнформационноеОбслуживаниеСтрахователя");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЗаявлениеАбонентаСпецоператораСвязи"), "ЗаявлениеАбонентаСпецоператораСвязи");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ИзменениеПараметровВА"), "ИзменениеПараметровВА");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ИнвентаризацияЗапасов"), "ИнвентаризацияЗапасов");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.КадровоеПеремещение"), "КадровоеПеремещение");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.КорректировкаПоступления"), "КорректировкаПоступления");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.КорректировкаРеализации"), "КорректировкаРеализации");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.КорректировкаРегистров"), "КорректировкаРегистров");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.МассоваяРассылка"), "МассоваяРассылка");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.НачислениеЗарплаты"), "НачислениеЗарплаты");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.НачислениеНалогов"), "НачислениеНалогов");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.НачисленияПоКредитамИЗаймам"), "НачисленияПоКредитамИЗаймам");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.Операция"), "Операция");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ОперацияПоПлатежнымКартам"), "ОперацияПоПлатежнымКартам");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ОписьПачекСЗВ_6"), "ОписьПачекСЗВ_6");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ОприходованиеЗапасов"), "ОприходованиеЗапасов");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ОтзывСогласияНаОбработкуПерсональныхДанных"), "ОтзывСогласияНаОбработкуПерсональныхДанных");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ОтчетКомиссионера"), "ОтчетКомиссионера");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ОтчетКомитенту"), "ОтчетКомитенту");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ОтчетОПереработке"), "ОтчетОПереработке");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ОтчетОРозничныхПродажах"), "ОтчетОРозничныхПродажах");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ОтчетПереработчика"), "ОтчетПереработчика");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПакетОбменСБанками"), "ПакетОбменСБанками");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПакетЭД"), "ПакетЭД");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_3"), "ПачкаДокументовСЗВ_6_3");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4"), "ПачкаДокументовСЗВ_6_4");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1"), "ПачкаРазделов6РасчетаРСВ_1");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПередачаВА"), "ПередачаВА");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПеремещениеДС"), "ПеремещениеДС");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПеремещениеДСПлан"), "ПеремещениеДСПлан");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПеремещениеЗапасов"), "ПеремещениеЗапасов");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПеремещениеПоЯчейкам"), "ПеремещениеПоЯчейкам");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПереоценкаВРозницеСуммовойУчет"), "ПереоценкаВРозницеСуммовойУчет");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПланПродаж"), "ПланПродаж");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПлатежнаяВедомость"), "ПлатежнаяВедомость");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПлатежноеПоручение"), "ПлатежноеПоручение");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПоказателиЕНВД"), "ПоказателиЕНВД");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПоступлениеВКассу"), "ПоступлениеВКассу");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПоступлениеДСПлан"), "ПоступлениеДСПлан");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПоступлениеНаСчет"), "ПоступлениеНаСчет");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПоясненияКДекларацииПоНДС"), "ПоясненияКДекларацииПоНДС");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПриемНаРаботу"), "ПриемНаРаботу");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПринятиеКУчетуВА"), "ПринятиеКУчетуВА");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПриходнаяНакладная"), "ПриходнаяНакладная");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПриходныйОрдер"), "ПриходныйОрдер");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПрочиеРасходы"), "ПрочиеРасходы");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.РаспределениеЗатрат"), "РаспределениеЗатрат");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.РасходДСПлан"), "РасходДСПлан");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.РасходИзКассы"), "РасходИзКассы");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.РасходнаяНакладная"), "РасходнаяНакладная");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.РасходныйОрдер"), "РасходныйОрдер");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.РасходСоСчета"), "РасходСоСчета");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.РегламентированныйОтчет"), "РегламентированныйОтчет");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.РеестрСЗВ_6_2"), "РеестрСЗВ_6_2");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.РезервированиеЗапасов"), "РезервированиеЗапасов");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СборкаЗапасов"), "СборкаЗапасов");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СверкаВзаиморасчетов"), "СверкаВзаиморасчетов");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СдельныйНаряд"), "СдельныйНаряд");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.Событие"), "Событие");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СогласиеНаОбработкуПерсональныхДанных"), "СогласиеНаОбработкуПерсональныхДанных");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СообщениеОбменСБанками"), "СообщениеОбменСБанками");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СписаниеВА"), "СписаниеВА");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СписаниеЗапасов"), "СписаниеЗапасов");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган"), "СправкиНДФЛДляПередачиВНалоговыйОрган");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СчетНаОплату"), "СчетНаОплату");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СчетНаОплатуПоставщика"), "СчетНаОплатуПоставщика");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СчетФактура"), "СчетФактура");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.СчетФактураПолученный"), "СчетФактураПолученный");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.Табель"), "Табель");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ТранспортноеСообщение"), "ТранспортноеСообщение");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения"), "УведомлениеОСпецрежимахНалогообложения");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.Увольнение"), "Увольнение");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.УчетВремени"), "УчетВремени");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЧекККМ"), "ЧекККМ");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ЧекККМВозврат"), "ЧекККМВозврат");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ТТНВходящаяЕГАИС"), "ТТНВходящаяЕГАИС");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ТТНИсходящаяЕГАИС"), "ТТНИсходящаяЕГАИС");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПриемИПередачаВРемонт"), "ПриемИПередачаВРемонт");
	СтруктураТипов.Вставить(Тип("ДокументСсылка.ПересортицаЗапасов"), "ПересортицаЗапасов");
	
	Возврат СтруктураТипов.Получить(ТипДокумента);

КонецФункции

Процедура ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, ИмяПоляОтбора) Экспорт
	
	НайденныеСтроки = ДанныеМеток.НайтиСтроки(Новый Структура("ИмяПоляОтбора",ИмяПоляОтбора));
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтруктураПараметров.Вставить(ИмяПоляОтбора, НайденныеСтроки[НайденныеСтроки.Количество()-1].Метка);
	КонецЕсли;
	
КонецПроцедуры
