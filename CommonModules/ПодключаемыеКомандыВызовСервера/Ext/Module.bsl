////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность" (вызов сервера).
// Обслуживает подключаемые команды.
// Выполняется на сервере, может вызываться с клиента.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Возвращает описание команды по имени элемента формы.
Функция ОписаниеКоманды(ИмяКомандыВФорме, АдресНастроек) Экспорт
	Возврат ПодключаемыеКоманды.ОписаниеКоманды(ИмяКомандыВФорме, АдресНастроек);
КонецФункции

// Проводит анализ массива документов на предмет проведенности и наличия прав на их проведение.
Функция ИнформацияОДокументах(МассивСсылок) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("ПроведенныеИСправочники", Новый Массив);
	Результат.Вставить("НеПроведенные", Новый Массив);
	Результат.Вставить("КоличествоНеПроведенных", 0);
	Результат.Вставить("ЕстьПравоПроведенияХотяБыОдногоНепроведенного", Ложь);
	
	Запрос = Новый Запрос;
	
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	&ПолноеИмяДокумента КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка В(&МассивДокументов)
	|	И НЕ Таблица.Проведен";
	
	МассивЗапросов = Новый Массив;
	ИнформацияОТипах = Новый Соответствие;
	КоличествоПараметров = 0;
	
	Для Каждого Ссылка Из МассивСсылок Цикл
		Тип = ТипЗнч(Ссылка);
		ИнформацияОТипе = ИнформацияОТипах[Тип];
		Если ИнформацияОТипе = Неопределено Тогда
			ИнформацияОТипе = Новый Структура;
			ИнформацияОТипе.Вставить("Метаданные", Ссылка.Метаданные());
			ИнформацияОТипе.Вставить("ПолноеИмя", ИнформацияОТипе.Метаданные.ПолноеИмя());
			ИнформацияОТипе.Вставить("ЭтоДокумент", ВРег(СтрРазделить(ИнформацияОТипе.ПолноеИмя, ".")[0]) = "ДОКУМЕНТ"
				И ИнформацияОТипе.Метаданные.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить);
			ИнформацияОТипе.Вставить("ПравоПроведения", Неопределено);
			ИнформацияОТипе.Вставить("МассивСсылок", Новый Массив);
			Если ИнформацияОТипе.ЭтоДокумент Тогда
				ИнформацияОТипе.ПравоПроведения = ПравоДоступа("Проведение", ИнформацияОТипе.Метаданные);
				КоличествоПараметров = КоличествоПараметров + 1;
				ИмяПараметра = "Массив" + Формат(КоличествоПараметров, "ЧН=; ЧГ=");
				ТекстЗапроса = ШаблонЗапроса;
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолноеИмяДокумента", ИнформацияОТипе.ПолноеИмя);
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "МассивДокументов", ИмяПараметра);
				МассивЗапросов.Добавить(ТекстЗапроса);
				Запрос.УстановитьПараметр(ИмяПараметра, ИнформацияОТипе.МассивСсылок);
			КонецЕсли;
			ИнформацияОТипах.Вставить(Тип, ИнформацияОТипе);
		КонецЕсли;
		Если ИнформацияОТипе.ЭтоДокумент Тогда
			ИнформацияОТипе.МассивСсылок.Добавить(Ссылка);
		Иначе
			Результат.ПроведенныеИСправочники.Добавить(Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст = СтрСоединить(МассивЗапросов, Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС);
	Результат.НеПроведенные = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Для Каждого КлючИЗначение Из ИнформацияОТипах Цикл
		ИнформацияОТипе = КлючИЗначение.Значение;
		Если Не ИнформацияОТипе.ЭтоДокумент Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого Ссылка Из ИнформацияОТипе.МассивСсылок Цикл
			Если Результат.НеПроведенные.Найти(Ссылка) = Неопределено Тогда
				Результат.ПроведенныеИСправочники.Добавить(Ссылка);
			Иначе
				Если ИнформацияОТипе.ПравоПроведения Тогда
					Результат.ЕстьПравоПроведенияХотяБыОдногоНепроведенного = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Результат.КоличествоНеПроведенных = Результат.НеПроведенные.Количество();
	
	Возврат Результат;
КонецФункции

#КонецОбласти
