
#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область РаботаСКорзиной

Процедура ЗаполнитьДокумент(СтруктураЗаполнения, ВидДокумента, ДанныеЗаполнения) Экспорт

	МассивРазрешенныхТиповНоменклатуры = Новый Массив;
	Если ВидДокумента = "ЗаказПокупателя" Тогда
		СтруктураЗаполнения.Вставить("ВидОперации",  ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа"));
		ИмяТабличнойЧасти = "Запасы";
	ИначеЕсли ВидДокумента = "СчетНаОплату" Тогда
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа"));
		ИмяТабличнойЧасти = "Запасы";
	ИначеЕсли ВидДокумента = "ЗаказНаряд" Тогда
		СтруктураЗаполнения.Вставить("ВидОперации",  ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ВидРабот"));
		ИмяТабличнойЧасти = "Запасы";
	ИначеЕсли ВидДокумента = "АктВыполненныхРабот" Тогда
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа"));
		ИмяТабличнойЧасти = "РаботыИУслуги";
	ИначеЕсли ВидДокумента = "РасходнаяНакладная" Тогда
		СтруктураЗаполнения.Вставить("ВидОперации",  ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		ИмяТабличнойЧасти = "Запасы";
	ИначеЕсли ВидДокумента = "ЗаказПоставщику" Тогда
		СтруктураЗаполнения.Вставить("ВидОперации",  ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПоставщику.ЗаказНаЗакупку"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		ИмяТабличнойЧасти = "Запасы";
	ИначеЕсли ВидДокумента = "ПриходнаяНакладная" Тогда
		СтруктураЗаполнения.Вставить("ВидОперации",  ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ПоступлениеОтПоставщика"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		ИмяТабличнойЧасти = "Запасы";
	КонецЕсли;
	
	МассивСообщенийОбОшибках = ПолучитьПараметрыЗаполнения(СтруктураЗаполнения, ДанныеЗаполнения, МассивРазрешенныхТиповНоменклатуры, ИмяТабличнойЧасти, ВидДокумента);
	
	Если ВидДокумента = "ЗаказНаряд" Тогда
		ОткрытьФорму("Документ.ЗаказПокупателя.Форма.ФормаЗаказНаряда", Новый Структура("ЗначенияЗаполнения", СтруктураЗаполнения));
	Иначе
		ОткрытьФорму("Документ."+ВидДокумента+".ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", СтруктураЗаполнения));
	КонецЕсли;
	
	Для каждого стрОшибка Из МассивСообщенийОбОшибках Цикл
		Сообщить(стрОшибка);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьПараметрыЗаполнения(СтруктураЗаполнения, ДанныеЗаполнения, МассивРазрешенныхТиповНоменклатуры, ИмяТабличнойЧасти, ВидДокумента)
	
	МассивСообщенийОбОшибках = Новый Массив;
	
	МассивТоваров 	= Новый Массив;
	МассивУслуг		= Новый Массив;
	МассивРабот		= Новый Массив;
	ВидРабот		= Неопределено;
	Для каждого стрКорзины Из ДанныеЗаполнения Цикл
		
		Если МассивРазрешенныхТиповНоменклатуры.Найти(стрКорзины.ТипНоменклатуры) = Неопределено Тогда
			
			ТекстСообщения = НСтр("ru = '%1: тип номенклатуры <%2> нельзя использовать в документе'");
			МассивСообщенийОбОшибках.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения,
				стрКорзины.Номенклатура,
				стрКорзины.ТипНоменклатуры
				));
			Продолжить;
		КонецЕсли;
		
		структураТовар = Новый Структура("Номенклатура", стрКорзины.Номенклатура);
		Если стрКорзины.Свойство("Характеристика") Тогда
			структураТовар.Вставить("Характеристика", стрКорзины.Характеристика);
		КонецЕсли;
		структураТовар.Вставить("Количество", стрКорзины.Количество);
		структураТовар.Вставить("ЕдиницаИзмерения", стрКорзины.ЕдиницаИзмерения);
		
		Если стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас") Тогда
			структураТовар.Вставить("ТипНоменклатурыЗапас", Истина);
		ИначеЕсли стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
			структураТовар.Вставить("ТипНоменклатурыУслуга", Истина);
			структураТовар.Вставить("КлючСвязи", 0);
		ИначеЕсли стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа") Тогда
			структураТовар.Вставить("КлючСвязи", 0);
		КонецЕсли;
		
		Если СтрКорзины.Свойство("СтранаПроисхождения") Тогда
			
			СтруктураТовар.Вставить("СтранаПроисхождения", СтрКорзины.СтранаПроисхождения);
			
		КонецЕсли;
		
		Если ВидДокумента="ЗаказНаряд" Тогда
			Если стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ВидРабот") Тогда
				ВидРабот = стрКорзины.Номенклатура;
			ИначеЕсли стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга")
				ИЛИ стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа")
				Тогда
				структураТовар.КлючСвязи = МассивРабот.Количество() + 1;
				МассивРабот.Добавить(структураТовар);
			Иначе
				МассивТоваров.Добавить(структураТовар);
			КонецЕсли;
		ИначеЕсли ВидДокумента="ПриходнаяНакладная" Тогда
			Если стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
				МассивУслуг.Добавить(структураТовар);
			Иначе
				МассивТоваров.Добавить(структураТовар);
			КонецЕсли;
		Иначе
			МассивТоваров.Добавить(структураТовар);
		КонецЕсли; 
		
	КонецЦикла;
	
	СтруктураЗаполнения.Вставить(ИмяТабличнойЧасти, МассивТоваров);
	
	//Для Заказ-Наряда
	СтруктураЗаполнения.Вставить("ВидРабот", ВидРабот);
	СтруктураЗаполнения.Вставить("Работы", МассивРабот);
	
	//Для Приходной накладной
	СтруктураЗаполнения.Вставить("Расходы", МассивУслуг);
	
	Возврат МассивСообщенийОбОшибках;
	
КонецФункции

Процедура ОформитьДокументСТоварамиИзКорзины(ПараметрыВыполненияКоманды, ВидДокумента, ДанныеЗаполнения = Неопределено) Экспорт
	
	Форма = ПараметрыВыполненияКоманды.Источник;
	ПараметрыЗаполнения = Новый Структура;
	Если ДанныеЗаполнения = Неопределено Тогда
		СтрокиНоменклатуры = Форма.Корзина;
	Иначе
		СтрокиНоменклатуры = ДанныеЗаполнения;
	КонецЕсли;
	
	ПараметрыЗаполнения.Вставить("ВидЦен",  Форма.ОтборВидЦен);
	Если ЗначениеЗаполнено(Форма.ОтборСклад) Тогда
		ПараметрыЗаполнения.Вставить("СтруктурнаяЕдиница",  Форма.ОтборСклад);
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.НалогообложениеНДС) Тогда
		ПараметрыЗаполнения.Вставить("НалогообложениеНДС",  Форма.НалогообложениеНДС);
		ПараметрыЗаполнения.Вставить("ИспользуетсяНДС",  Форма.ИспользуетсяНДС);
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.ВалютаПодбора) Тогда
		ПараметрыЗаполнения.Вставить("Валюта",  Форма.ВалютаПодбора);
	КонецЕсли;
	
	РаботаСНоменклатуройКлиент.ЗаполнитьДокумент(ПараметрыЗаполнения, ВидДокумента, СтрокиНоменклатуры);
	
	Если Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаКорзина" Тогда
		Форма.ПеренестиВДокумент = Истина;
		Форма.Закрыть();
	ИначеЕсли ДанныеЗаполнения = Неопределено Тогда
		Форма.Корзина.Очистить();
		Форма.ОбновитьНадписьПодобраноТоваров();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьРеквизитыСтрокСписка(ПараметрыВыполненияКоманды, ВидДокумента) Экспорт

	ИмяСписка = ПараметрыВыполненияКоманды.Источник.ТекущаяСтраницаНоменклатуры;
	ТаблицаФормы = ПараметрыВыполненияКоманды.Источник.Элементы[ИмяСписка];
	МассивВыделенныхСтрок = ТаблицаФормы.ВыделенныеСтроки;
	
	МассивСтрок = Новый Массив;
	Для каждого стр Из МассивВыделенныхСтрок Цикл
		ДанныеСтроки = ТаблицаФормы.ДанныеСтроки(стр);
		Если ДанныеСтроки=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураРеквизитовСписка = Новый Структура("Номенклатура, Количество, Цена, ЕдиницаИзмерения, ТипНоменклатуры, СтавкаНДС, СтранаПроисхождения",
			ДанныеСтроки.Номенклатура, 1, ДанныеСтроки.Цена, ДанныеСтроки.ЕдиницаИзмерения, ДанныеСтроки.ТипНоменклатуры, ДанныеСтроки.СтавкаНДС, ДанныеСтроки.СтранаПроисхождения);
		Если ДанныеСтроки.Свойство("Характеристика") Тогда
			СтруктураРеквизитовСписка.Вставить("Характеристика", ДанныеСтроки.Характеристика);
		КонецЕсли;
		
		МассивСтрок.Добавить(СтруктураРеквизитовСписка);
	КонецЦикла; 
	
	РаботаСНоменклатуройКлиент.ОформитьДокументСТоварамиИзКорзины(ПараметрыВыполненияКоманды, ВидДокумента, МассивСтрок);

КонецПроцедуры

Процедура ПодготовитьРеквизитыСтрокиПоЭлементу(ПараметрыВыполненияКоманды, ВидДокумента) Экспорт
	
	НоменклатураОбъект = ПараметрыВыполненияКоманды.Источник.Объект;
	СтруктураРеквизитовСписка = Новый Структура("Номенклатура, Количество, Цена, ЕдиницаИзмерения, ТипНоменклатуры, СтавкаНДС, СтранаПроисхождения",
		НоменклатураОбъект.Ссылка, 1, 0, НоменклатураОбъект.ЕдиницаИзмерения, НоменклатураОбъект.ТипНоменклатуры, НоменклатураОбъект.СтавкаНДС, НоменклатураОбъект.СтранаПроисхождения);
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтруктураРеквизитовСписка);
	
	ПараметрыЗаполнения = Новый Структура;
	Если ВидДокумента = "ЗаказПоставщику" Тогда
		Если ЗначениеЗаполнено(НоменклатураОбъект.Поставщик) Тогда
			ПараметрыЗаполнения.Вставить("Контрагент", НоменклатураОбъект.Поставщик);
		КонецЕсли;
	ИначеЕсли ВидДокумента = "ПриходнаяНакладная" Тогда
		Если ЗначениеЗаполнено(НоменклатураОбъект.Поставщик) Тогда
			ПараметрыЗаполнения.Вставить("Контрагент", НоменклатураОбъект.Поставщик);
		КонецЕсли;
	КонецЕсли;
	
	РаботаСНоменклатуройКлиент.ЗаполнитьДокумент(ПараметрыЗаполнения, ВидДокумента, МассивСтрок);
	
КонецПроцедуры

#КонецОбласти