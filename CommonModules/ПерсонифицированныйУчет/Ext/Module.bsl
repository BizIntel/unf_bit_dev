
Функция ПолучитьДатыПериодаДокумента(ДокументСсылка)Экспорт
	ТипДокумента = ТипЗнч(ДокументСсылка);
	
	Если ТипДокумента = Тип("ДокументСсылка.ОписьПачекСЗВ_6")
		Или ТипДокумента = Тип("ДокументСсылка.РеестрСЗВ_6_2") 
		Или ТипДокумента = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_3")
		Или ТипДокумента = Тип("СправочникСсылка.КомплектыОтчетностиПерсучета") Тогда

		ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "ОтчетныйПериод,Организация");
		Если ТипДокумента = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_3") Тогда
			
			ДатаНачала = Дата(ДанныеДокумента.ОтчетныйПериод, 1, 1);
			ДатаОкончания = Дата(ДанныеДокумента.ОтчетныйПериод, 12, 31, 23, 59, 59);
		Иначе
			ДатаНачала = ДанныеДокумента.ОтчетныйПериод;
			ДатаОкончания = ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ДатаНачала);
		КонецЕсли;
		
		Возврат Новый Структура("ДатаНачала, ДатаОкончания, Организация", ДатаНачала, ДатаОкончания, ДанныеДокумента.Организация);
	Иначе
		ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Дата,Организация");
		
		Возврат Новый Структура("ДатаНачала, ДатаОкончания, Организация", ДанныеДокумента.Дата, ДанныеДокумента.Дата, ДанныеДокумента.Организация);
	КонецЕсли;	
 КонецФункции	

Функция ПредставлениеПараметровТерриториальныхУсловий(ЗаписьСтажа) Экспорт
	
	ПредставлениеПараметровТУ = "";
	Ставка = ЗаписьСтажа.ПараметрТерриториальныхУсловий;
	ПервыйПараметрТУ = ЗаписьСтажа.ПервыйПараметрИсчисляемогоСтажа;
	ВторойПараметрТУ = ЗаписьСтажа.ВторойПараметрИсчисляемогоСтажа;
	
	Если Ставка <> "0.00" Тогда
		ПредставлениеПараметровТУ = Ставка;
	Иначе
		ПредставлениеПараметровТУ = ?(ПервыйПараметрТУ > 0,"" + ПервыйПараметрТУ+" м ","") + ?(ВторойПараметрТУ > 0,""+ВторойПараметрТУ+" дн ","");
	КонецЕсли;
	
	Возврат ПредставлениеПараметровТУ;
	
КонецФункции

// Формирует представление параметров исчисляемого  трудового стажа
//
// Параметры:
//		ЗаписьСтажа -	структура - запись о стаже
// Возвращаемое значение:
//		Строка
Функция ПредставлениеПараметровИсчисляемогоТрудовогоСтажа(ЗаписьСтажа) Экспорт
	
	ПредставлениеПараметровИТС = "";
	КодОснованияИТС = ЗаписьСтажа.ОснованиеИсчисляемогоСтажаКод;
	ПервыйПараметрИТС = ЗаписьСтажа.ПервыйПараметрИсчисляемогоСтажа;
	ВторойПараметрИТС = ЗаписьСтажа.ВторойПараметрИсчисляемогоСтажа;
	ТретийПараметрИТС = ЗаписьСтажа.ТретийПараметрИсчисляемогоСтажа;
	
	Если КодОснованияИТС = "ВОДОЛАЗ" Тогда
		ПредставлениеПараметровИТС = ?(ПервыйПараметрИТС > 0,""+ПервыйПараметрИТС+" ч ","")+?(ВторойПараметрИТС > 0,""+ВторойПараметрИТС+" мин","");
	ИначеЕсли КодОснованияИТС = "СЕЗОН" Тогда
		ПредставлениеПараметровИТС = "";
	Иначе
		ПредставлениеПараметровИТС = ?(ПервыйПараметрИТС > 0,"" + ПервыйПараметрИТС+" м ","") + ?(ВторойПараметрИТС > 0,""+ВторойПараметрИТС+" дн ","") + Строка(ТретийПараметрИТС);
	КонецЕсли;
	
	Возврат ПредставлениеПараметровИТС;
	
КонецФункции

// Формирует строки "дополнительных сведений" по выслуге лет в "удобочитаемом" виде для отражения в формах.
//
// Параметры:
//		ЗаписьСтажа -	структура - запись о стаже
//		СтрПервыйВторойПараметр  -	строка - возвращаемый параметр - представление первых двух параметров
//		СтрСтавки  -	строка - возвращаемый параметр - представление третьего параметра
//
Процедура ПредставлениеПараметровПенсииЗаВыслугуЛет(ЗаписьСтажа, СтрПервыйВторойПараметр, СтрСтавки) Экспорт
	
	КодОснования = ЗаписьСтажа.ОснованиеВыслугиЛетКод;
	ПервыйПараметр = ЗаписьСтажа.ПервыйПараметрВыслугиЛет;
	ВторойПараметр = ЗаписьСтажа.ВторойПараметрВыслугиЛет;
	ТретийПараметр = ЗаписьСтажа.ТретийПараметрВыслугиЛет;
	
	СтрПервыйВторойПараметр = "";
	СтрСтавки = "";
	
	Если (КодОснования="ИСПКЛС1") или (КодОснования="САМОЛЕТ") или (КодОснования="ИНСПЕКТ") 
		или (КодОснования="СПЕЦАВ") или (КодОснования="ЛЕТИСП") или (КодОснования="ИТСИСП") 
		или (КодОснования="ИНСПЕКТ") или (КодОснования="ИТСМАВ") или (КодОснования="ОПЫТИСП") Тогда
		СтрПервыйВторойПараметр = ?(ПервыйПараметр>0,""+ПервыйПараметр+" ч ","")+?(ВторойПараметр>0,""+ВторойПараметр+" мин","");
		
	ИначеЕсли (КодОснования="РЕАКТИВН") или (КодОснования="НОРМСП") или (КодОснования="НОРМАПР") Тогда
		СтрПервыйВторойПараметр = ?(ПервыйПараметр>0,""+ПервыйПараметр+" прыжков ","");
		
	ИначеЕсли (КодОснования="УВД") или (КодОснования="ИТС")	или (КодОснования="27-14") или (КодОснования="27-15") Тогда
		СтрПервыйВторойПараметр = ?(ПервыйПараметр>0,""+ПервыйПараметр+" м ","")+?(ВторойПараметр>0,""+ВторойПараметр+" дн ","");
		
	ИначеЕсли (КодОснования="ХИРУРГД") или (КодОснования="ХИРУРСМ") или (КодОснования="ЗП81ГД") или (КодОснования="ЗП81СМ") 
		или (КодОснования="28-ГДХР") или (КодОснования="28-СМХР") или (КодОснования="28-ГД") или (КодОснования="28-СМ") Тогда
		СтрСтавки = ?(ТретийПараметр>0,""+ТретийПараметр,"");
		
	ИначеЕсли (КодОснования="ЗП80РК") или (КодОснования="ЗП80ПД") 
		или (КодОснования="28-ПДРК") или (КодОснования="28-ПД") Тогда
		СтрПервыйВторойПараметр = ?(ПервыйПараметр>0,""+ПервыйПараметр+" ч ","");
		СтрСтавки = ?(ТретийПараметр>0,""+ТретийПараметр,"");
		
	КонецЕсли;
	
КонецПроцедуры 

Функция ОписаниеВыгруженногоФайлаОтчетности() Экспорт
	ОписаниеФайла = Новый Структура;
	ОписаниеФайла.Вставить("Владелец");
	ОписаниеФайла.Вставить("ИмяФайла");
	ОписаниеФайла.Вставить("АдресВоВременномХранилище");
	ОписаниеФайла.Вставить("ПроверятьCheckXML", Ложь);
	ОписаниеФайла.Вставить("ПроверятьCheckUFA", Ложь);
	ОписаниеФайла.Вставить("ПроверятьTesterNDFL", Ложь);
	ОписаниеФайла.Вставить("ФайлВСоставеКомплекта", Ложь);
	ОписаниеФайла.Вставить("ПроверяемыйФайлКомплекта", Ложь);
	
	Возврат ОписаниеФайла;
КонецФункции


Функция ПредставлениеДатыВФорматеdateTimeСЧасовымПоясом(Дата) Экспорт

	СмещениеВСекундах = СмещениеСтандартногоВремени();
	ЗнакЧасовогоПояса = ?(СмещениеВСекундах < 0, "-", "+");
	ПоложительноеСмещениеВСекундах = ?(СмещениеВСекундах < 0, -СмещениеВСекундах, СмещениеВСекундах);
	
	Возврат Формат(Дата, "ДФ=yyyy-MM-ddTЧЧ:мм:сс; ДП=0001-01-01T00:00:00") + ЗнакЧасовогоПояса + Формат('00010101' + ПоложительноеСмещениеВСекундах, "ДФ=чч:мм")

КонецФункции


Функция ВыгрузитьДокументы(ДокументСсылка, УникальныйИдентификатор)Экспорт
	
	Если ТипЗнч(ДокументСсылка) = Тип("СправочникСсылка.КомплектыОтчетностиПерсучета") Тогда
		МассивОписанийФайловВыгрузки = Новый Массив;

		КомплектОбъект = ДокументСсылка.ПолучитьОбъект();
		КомплектОбъект.ПоместитьОписанияФайловКомплектаВМассив(МассивОписанийФайловВыгрузки, УникальныйИдентификатор);
		
		Возврат МассивОписанийФайловВыгрузки;		
	Иначе	
		СоответсвиеТиповСсылокТипамФайловВыгрузки = СоответсвиеТиповСсылокТипамФайловВыгрузки();
		Кодировка =  КодировкаТекста.ANSI;
		ИмяФайла =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "ИмяФайлаДляПФР");
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОписьПачекСЗВ_6") Тогда
			СсылкаНаДвоичныеДанныеФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиАДВ62(ДокументСсылка);
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			СсылкаНаДвоичныеДанныеФайла = "";
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РеестрСЗВ_6_2") Тогда
			СсылкаНаДвоичныеДанныеФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВ62(ДокументСсылка);
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_3") Тогда
			СсылкаНаДвоичныеДанныеФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВ63(ДокументСсылка);
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4") Тогда
			СсылкаНаДвоичныеДанныеФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВ64(ДокументСсылка);
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СведенияОЗастрахованныхЛицахСЗВ_М") Тогда
			СсылкаНаДвоичныеДанныеФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВМ(ДокументСсылка);
			Кодировка = КодировкаТекста.UTF8;
			ИмяФайла =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "ИмяФайлаДляПФР") +".xml";
		КонецЕсли;
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка",  ДокументСсылка);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки", СсылкаНаДвоичныеДанныеФайла);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки", ИмяФайла);
		ТипФайлаВыгрузки = СоответсвиеТиповСсылокТипамФайловВыгрузки.Получить(ТипЗнч(ДокументСсылка));
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  ?(ТипФайлаВыгрузки = Неопределено, "", ТипФайлаВыгрузки));
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки", Кодировка);

		Возврат ОписаниеФайла;
	КонецЕсли;
	
КонецФункции

Функция СоответсвиеТиповСсылокТипамФайловВыгрузки()Экспорт
	СоответствиеТиповСсылокТипамФайловВыгрузки = Новый Соответствие;
	СоответствиеТиповСсылокТипамФайловВыгрузки.Вставить(Тип("ДокументСсылка.ОписьПачекСЗВ_6"), "ПачкаАДВ");
	СоответствиеТиповСсылокТипамФайловВыгрузки.Вставить(Тип("ДокументСсылка.РегламентированныйОтчет"), "ПачкаРСВ");	
	СоответствиеТиповСсылокТипамФайловВыгрузки.Вставить(Тип("ДокументСсылка.РеестрСЗВ_6_2"), "ПачкаИС");
	СоответствиеТиповСсылокТипамФайловВыгрузки.Вставить(Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_3"), "ПачкаИС");
	СоответствиеТиповСсылокТипамФайловВыгрузки.Вставить(Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4"), "ПачкаИС");
	СоответствиеТиповСсылокТипамФайловВыгрузки.Вставить(Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1"), "пачкаСВВ");
	СоответствиеТиповСсылокТипамФайловВыгрузки.Вставить(Тип("ДокументСсылка.СведенияОЗастрахованныхЛицахСЗВ_М"), "ПачкаИС");
	
	Возврат СоответствиеТиповСсылокТипамФайловВыгрузки;
	
КонецФункции

// Процедура возвращает структуру с табличными документами разделов 2.5 и 6 формы РСВ-1.
//
// Параметры:
//  СсылкаНаСохрРеглОтчет - ссылка на сохраненный документ "РегламентированныйОтчет".
//  СтруктураРазделов     - Структура - структура с полями:
//    * Раздел25 - Массив - массив структур см. РегламентированнаяОтчетность.ПустаяСтруктураДляРазделовФормыРСВ_1;
//    * Раздел6  - Массив - массив структур см. РегламентированнаяОтчетность.ПустаяСтруктураДляРазделовФормыРСВ_1
//
Процедура ЗаполнитьПечатныеФормыРазделовРСВ1(СсылкаНаСохрРеглОтчет, СтруктураРазделов, НумероватьСтраницы, НомерПервойстраницыРаздела25, НомерПоследнейстраницыРаздела25, НомерПервойстраницыРаздела6, ОбщееКоличествоСтраницРаздела6) Экспорт
	Ссылка = Справочники.КомплектыОтчетностиПерсучета.КомплектСодержащийРСВ_1(СсылкаНаСохрРеглОтчет);
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ПараметрыФормирования = Справочники.КомплектыОтчетностиПерсучета.ПараметрыФормированияПечатныхФормКомплекта();
		
		Если СтруктураРазделов.Свойство("Раздел25") Тогда
			ПараметрыФормирования.ФормироватьПечатныеФормыРаздел25 = СтруктураРазделов.Раздел25.ПолучатьТабличныеДокументыРаздела;
			ПараметрыФормирования.ФормироватьСтруктуруРаздел25 = СтруктураРазделов.Раздел25.ПолучатьСтруктуруРаздела;
		КонецЕсли;	
		
		Если СтруктураРазделов.Свойство("Раздел6") Тогда
			Если СтруктураРазделов.Раздел6.ПолучатьСтруктуруРаздела Тогда
				ПараметрыФормирования.ФормироватьСтруктуруРаздел6 = Истина;
			Иначе
				
				ПараметрыФормирования.ФормироватьСтруктуруРаздел6 = Ложь;
				ПечатуемыеДокументы = Новый Массив;
				
				Для Каждого ОписаниеСтраницыРаздела6 Из СтруктураРазделов.Раздел6.СтраницыРаздела Цикл
					ПечатуемыеДокументы.Добавить(ОписаниеСтраницыРаздела6.Идентификатор);	
				КонецЦикла;	
				
				ПараметрыФормирования.ПечатуемыеДокументы = ПечатуемыеДокументы;
			КонецЕсли;	
			
			ПараметрыФормирования.ФормироватьПечатныеФормыРаздел6 = СтруктураРазделов.Раздел6.ПолучатьТабличныеДокументыРаздела;	
		КонецЕсли;	
			
		
		ПечатныеФормыКомплекта2014Года = Справочники.КомплектыОтчетностиПерсучета.ПечатныеФормыКомплекта2014Года(
												Ссылка, 
												ПараметрыФормирования,
												НумероватьСтраницы,
												НомерПервойстраницыРаздела25,
												НомерПоследнейстраницыРаздела25,
												НомерПервойстраницыРаздела6,
												ОбщееКоличествоСтраницРаздела6);
												
		Если СтруктураРазделов.Свойство("Раздел25") Тогда 
			СтруктураРазделов.Раздел25.СтраницыРаздела = ПечатныеФормыКомплекта2014Года.Раздел25;
		КонецЕсли;	
							
		Если СтруктураРазделов.Свойство("Раздел6") Тогда
			СтруктураРазделов.Раздел6.СтраницыРаздела =  ПечатныеФормыКомплекта2014Года.Раздел6 ;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		ДанныеРСВ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаСохрРеглОтчет, "ДатаНачала, Организация, ДатаПодписи");
		ОписаниеРаздела25 = РегламентированнаяОтчетностьПереопределяемый.ПустаяСтруктураДляРазделовФормыРСВ_1();
		ОписаниеРаздела25.Описание = "Раздел 2.5";
		ОписаниеРаздела25.ТабличныйДокумент = Справочники.КомплектыОтчетностиПерсучета.ПустойРаздел25РасчетаРСВ1(
												ДанныеРСВ.Организация, 
												ДанныеРСВ.ДатаПодписи,
												НумероватьСтраницы, 
												НомерПервойстраницыРаздела25,
												НачалоКвартала(ДанныеРСВ.ДатаНачала));
												
												
												
		СтруктураРазделов.Раздел25.СтраницыРаздела.Добавить(ОписаниеРаздела25);	
	КонецЕсли;		

КонецПроцедуры

Процедура ВывестиДанныеПоБуквенно(Данные, Раздел, ИмяПоказателя, КоличествоЯчеек, НачальнаяЯчейка = 1) Экспорт

	Для НомЯчейки = НачальнаяЯчейка По НачальнаяЯчейка + КоличествоЯчеек - 1 Цикл
		Раздел.Области[ИмяПоказателя + Формат(НомЯчейки,"ЧГ=0")].Текст = Сред(Данные, НомЯчейки - НачальнаяЯчейка + 1, 1);
	КонецЦикла;

КонецПроцедуры

Процедура ПроставитьНомерСтраницыВЯчейках(НумероватьСтраницы, НомерСтраницы, ОбластьКолонтитула) Экспорт

	Если НумероватьСтраницы Тогда
		ВывестиДанныеПоБуквенно(СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(НомерСтраницы,"ЧГ=0"), 6, "0", "Слева"), ОбластьКолонтитула, "НомСтр", 6);
	КонецЕсли;

КонецПроцедуры

Функция ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях() Экспорт
	Описание = Новый Структура;
	Описание.Вставить("ИмяТаблицы");
	Описание.Вставить("ИмяПоляОрганизация");
	Описание.Вставить("ИмяПоляПериод");
	Описание.Вставить("СписокСсылок");
	
	Возврат Описание;
КонецФункции	


Процедура СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(МенеджерВременныхТаблиц, ОписаниеИсточникаДанных) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокСсылок", ОписаниеИсточникаДанных.СписокСсылок);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсточникДанных.Организация КАК Организация,
	|	ИсточникДанных.Период КАК Период
	|ПОМЕСТИТЬ ВТОрганизации
	|ИЗ
	|	#ИсточникДанных КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка В(&СписокСсылок)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ".Организация", "." + ОписаниеИсточникаДанных.ИмяПоляОрганизация); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ".Период", "." + ОписаниеИсточникаДанных.ИмяПоляПериод); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ИсточникДанных", ОписаниеИсточникаДанных.ИмяТаблицы); 

	Запрос.Выполнить();
	
	СоздатьВТСведенияОбОрганизацияхПоВременнойТаблице(МенеджерВременныхТаблиц);	

	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТОрганизации";
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СоздатьВТСведенияОбОрганизацияхПоВременнойТаблице(МенеджерВременныхТаблиц) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Организация,
	|	Организации.Период,
	|	Организации.Организация КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВТОрганизацииДляСреза
	|ИЗ
	|	ВТОрганизации КАК Организации";
	
	
	Запрос.Выполнить();
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Организация,
	|	Организации.Период,
	|	ДанныеОрганизации.ИНН,
	|	ДанныеОрганизации.КодОрганаПФР,
	|	""""  КАК КодОрганаФСГС,
	|	"""" КАК КодПодчиненностиФСС,
	|	ДанныеОрганизации.КодПоОКПО,
	|	ДанныеОрганизации.НаименованиеПолное,
	|	ДанныеОрганизации.Наименование КАК НаименованиеСокращенное,
	|	ДанныеОрганизации.Наименование,
	|	ДанныеОрганизации.ОГРН,
	|	ДанныеОрганизации.КодОКВЭД,
	|	ДанныеОрганизации.НаименованиеОКВЭД,
	|	ДанныеОрганизации.КодОКОПФ,
	|	"""" КАК НаименованиеОКОПФ,
	|	ДанныеОрганизации.КодОКФС,
	|	"""" КАК НаименованиеОКФС,
	|	ЕСТЬNULL(ДанныеОрганизации.РегистрацияВНалоговомОргане.КПП, """") КАК КПП,
	|	ЕСТЬNULL(ДанныеОрганизации.РегистрацияВНалоговомОргане.НаименованиеИФНС, """") КАК НаименованиеИФНС,
	|	ЕСТЬNULL(ДанныеОрганизации.РегистрацияВНалоговомОргане.КодПоОКАТО, """") КАК ОКАТО,
	|	"""" КАК ТерриториальныеУсловияПФР,
	|	ЕСТЬNULL(ДанныеОрганизации.РегистрационныйНомерПФР, """") КАК РегистрационныйНомерПФР,
	|	ДанныеОрганизации.ЮридическоеФизическоеЛицо,
	|	ДанныеОрганизации.ЮридическоеФизическоеЛицо,
	|	"""" КАК РайонныйКоэффициент,
	|	Организации.Организация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТСведенияОбОрганизациях
	|ИЗ
	|	ВТОрганизации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизации
	|		ПО Организации.Организация = ДанныеОрганизации.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОрганизацииДляСреза";
		
	Запрос.Выполнить();	
	
КонецПроцедуры


Функция УзелФайлаПФР(ДеревоВыгрузки) Экспорт
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("xmlns", "http://schema.pfr.ru");
	УзелПФР = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ФайлПФР", "", Атрибуты);	
	
	Возврат УзелПФР;
КонецФункции