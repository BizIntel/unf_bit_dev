
#Область ПрограммныйИнтерфейс

// Процедура вызывается перед записью организации в базу.
//
// Параметры:
//  Организация             - СправочникОбъект.КлассификаторОрганизацийЕГАИС - загружаемая организация,
//  ДополнительныеПараметры - Произвольный - параметры прикладной конфигурации.
//
Процедура ПриЗагрузкеОрганизации(Организация, ДополнительныеПараметры) Экспорт



КонецПроцедуры

// Процедура вызывается перед записью алкогольной продукции в базу.
//
// Параметры:
//  АлкогольнаяПродукция - СправочникОбъект.КлассификаторАлкогольнойПродукцииЕГАИС - загружаемая алкогольная продукция,
//  ДополнительныеПараметры - Произвольный - параметры прикладной конфигурации.
//
Процедура ПриЗагрузкеАлкогольнойПродукции(АлкогольнаяПродукция, ДополнительныеПараметры) Экспорт

	

КонецПроцедуры

// Процедура вызывается перед записью справки в базу.
//
// Параметры:
//  Справка - СправочникОбъект.СправкиА(Б)ЕГАИС - загружаемая справка,
//  ДополнительныеПараметры - Произвольный - параметры прикладной конфигурации.
//
Процедура ПриЗагрузкеСправки(Справка, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

// Процедура вызывается при загрузке ТТН (перед записью).
//
// Параметры:
//  ТТН_Объект - ДокументОбъект.ТТНВходящаяЕГАИС - загружаемая ТТН,
//  ДополнительныеПараметры - Произвольный - параметры прикладной конфигурации.
//
Процедура ПриЗагрузкеТТН(ТТН_Объект, ДополнительныеПараметры) Экспорт
	
	// Заполнение склада и организации
	Если НЕ ДополнительныеПараметры = Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ТТН_Объект, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается при загрузке акта подтверждения ТТН.
//
// Параметры:
//  ТТН - ДокументСсылка.ТТНИсходящаяЕГАИС - подтверждаемая ТТН,
//  ОтказОтТТН - Булево - признак загрузки акта отказа от ТТН,
//  ЕстьРасхождения - Булево - признак загрузки акта расхождений.
//
Процедура ПриЗагрузкеАктаПодтвержденияТТН(ТТН, ОтказОтТТН, ЕстьРасхождения) Экспорт
	
	
	
КонецПроцедуры

// Процедура вызывается при загрузке подтверждения акта расхождений ТТН.
//
// Параметры:
//  ТТН - ДокументСсылка.ТТНВходящаяЕГАИС - подтверждаемая ТТН,
//  ОтказОтАкта - Булево - признак загрузки отказа от акта расхождений ТТН,
//
Процедура ПриЗагрузкеПодтвержденияАктаРасхожденийТТН(ТТН, ОтказОтАкта) Экспорт
	
	
	
КонецПроцедуры

// Процедура вызывается при изменении статуса обработки документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - ссылка на документ,
//  ПредыдущийСтатус - ПеречислениеСсылка.СтатусыОбработки* - предыдущий статус обработки,
//  НовыйСтатус - ПеречислениеСсылка.СтатусыОбработки* - новый статус обработки.
//
Процедура ПриИзмененииСтатусаОбработкиДокумента(ДокументСсылка, ПредыдущийСтатус, НовыйСтатус) Экспорт
	
	ИнтеграцияЕГАИСУНФ.ПриИзмененииСтатусаОбработкиДокумента(ДокументСсылка, ПредыдущийСтатус, НовыйСтатус);
	
КонецПроцедуры

// Обработчик события вызывается на сервере при получении стандартной управляемой формы.
// Если требуется переопределить выбор открываемой формы, необходимо установить в параметре <ВыбраннаяФорма>
// другое имя формы или объект метаданных формы, которую требуется открыть, и в параметре <СтандартнаяОбработка>
// установить значение Ложь.
//
// Параметры:
//  ИмяСправочника - Строка - имя справочника, для которого открывается форма,
//  ВидФормы - Строка - имя стандартной формы,
//  Параметры - Структура - параметры формы,
//  ВыбраннаяФорма - Строка, УправляемаяФорма - содержит имя открываемой формы или объект метаданных Форма,
//  ДополнительнаяИнформация - Структура - дополнительная информация открытия формы,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной обработки события.
//
Процедура ПриПолученииФормыСправочника(ИмяСправочника, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	
	
КонецПроцедуры

// Обработчик события вызывается на сервере при получении стандартной управляемой формы.
// Если требуется переопределить выбор открываемой формы, необходимо установить в параметре <ВыбраннаяФорма>
// другое имя формы или объект метаданных формы, которую требуется открыть, и в параметре <СтандартнаяОбработка>
// установить значение Ложь.
//
// Параметры:
//  ИмяДокумента - Строка - имя документа, для которого открывается форма,
//  ВидФормы - Строка - имя стандартной формы,
//  Параметры - Структура - параметры формы,
//  ВыбраннаяФорма - Строка, УправляемаяФорма - содержит имя открываемой формы или объект метаданных Форма,
//  ДополнительнаяИнформация - Структура - дополнительная информация открытия формы,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной обработки события.
//
Процедура ПриПолученииФормыДокумента(ИмяДокумента, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	Если ИмяДокумента = "ТТНВходящаяЕГАИС" Тогда
		СтандартнаяОбработка = Ложь;
		Если ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаДокументаУНФ";
		ИначеЕсли ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаУНФ";
		ИначеЕсли ВидФормы = "ФормаВыбора" Тогда
			ВыбраннаяФорма = "ФормаВыбора";
		КонецЕсли;
	ИначеЕсли ИмяДокумента = "ТТНИсходящаяЕГАИС" Тогда
		СтандартнаяОбработка = Ложь;
		Если ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаДокументаУНФ";
		ИначеЕсли ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаУНФ";
		ИначеЕсли ВидФормы = "ФормаВыбора" Тогда
			ВыбраннаяФорма = "ФормаВыбора";
		КонецЕсли;
	ИначеЕсли ИмяДокумента = "АктПостановкиНаБалансЕГАИС" Тогда
		СтандартнаяОбработка = Ложь;
		Если ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаДокументаУНФ";
		ИначеЕсли ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаУНФ";
		ИначеЕсли ВидФормы = "ФормаВыбора" Тогда
			ВыбраннаяФорма = "ФормаВыбораУНФ";
		КонецЕсли;
	ИначеЕсли ИмяДокумента = "АктСписанияЕГАИС" Тогда
		Если ВидФормы = "ФормаОбъекта" Тогда
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаДокументаУНФ";
		КонецЕсли;
	ИначеЕсли ИмяДокумента = "ОстаткиЕГАИС" Тогда
		СтандартнаяОбработка = Ложь;
		Если ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаДокументаУНФ";
		ИначеЕсли ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаУНФ";
		ИначеЕсли ВидФормы = "ФормаВыбора" Тогда
			ВыбраннаяФорма = "ФормаВыбораУНФ";
		КонецЕсли;
	ИначеЕсли ИмяДокумента = "ПередачаВТорговыйЗалЕГАИС" Тогда
		Если ВидФормы = "ФормаОбъекта" Тогда
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаДокументаУНФ";
		КонецЕсли;
	ИначеЕсли ИмяДокумента = "ВозвратИзТорговогоЗалаЕГАИС" Тогда
		Если ВидФормы = "ФормаОбъекта" Тогда
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаДокументаУНФ";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события вызывается на сервере при получении стандартной управляемой формы.
// Если требуется переопределить выбор открываемой формы, необходимо установить в параметре <ВыбраннаяФорма>
// другое имя формы или объект метаданных формы, которую требуется открыть, и в параметре <СтандартнаяОбработка>
// установить значение Ложь.
//
// Параметры:
//  ИмяРегистра - Строка - имя регистра сведений, для которого открывается форма,
//  ВидФормы - Строка - имя стандартной формы,
//  Параметры - Структура - параметры формы,
//  ВыбраннаяФорма - Строка, УправляемаяФорма - содержит имя открываемой формы или объект метаданных Форма,
//  ДополнительнаяИнформация - Структура - дополнительная информация открытия формы,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной обработки события.
//
Процедура ПриПолученииФормыРегистраСведений(ИмяРегистра, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	Если ИмяРегистра = "НастройкиОбменаЕГАИС" Тогда
		СтандартнаяОбработка = Ложь;
		Если ВидФормы = "ФормаЗаписи" Тогда
			ВыбраннаяФорма = "ФормаЗаписиУНФ";
		ИначеЕсли ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаУНФ";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при определении настроек обмена с УТМ.
//
// Параметры:
//  ТранспортныйМодуль - Структура - данные транспортного модуля
//
Процедура ПриПолученииНастроекУТМ(ТранспортныйМодуль) Экспорт
	
	
	
КонецПроцедуры

// Вызывается при вводе документа на основании, при выполнении метода Заполнить или при интерактивном вводе нового.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - заполняемый документ,
//  ДанныеЗаполнения - Произвольный - значение, которое используется как основание для заполнения,
//  ТекстЗаполнения - Строка, Неопределено - текст, используемый для заполнения документа,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктСписанияЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(ДокументОбъект,ДанныеЗаполнения);
			Если ДанныеЗаполнения.Свойство("СтруктурнаяЕдиница") Тогда
				ДокументОбъект.Магазин = ДанныеЗаполнения.СтруктурнаяЕдиница;
			КонецЕсли;
			
			Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
				ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаВТорговыйЗалЕГАИС") Тогда
			
			ИнтеграцияЕГАИСУНФ.ЗаполнитьАктСписанияЕГАИСНаОснованииПередачиВТорговыйЗал(ДокументОбъект, ДанныеЗаполнения);
		
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
			
			ИнтеграцияЕГАИСУНФ.ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеЗапасов") Тогда
			
			ИнтеграцияЕГАИСУНФ.ЗаполнитьАктСписанияЕГАИСНаОснованииСписанияЗапасов(ДокументОбъект, ДанныеЗаполнения);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаВТорговыйЗалЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(ДокументОбъект,ДанныеЗаполнения);
			Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
				ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
			КонецЕсли;
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
			
			ИнтеграцияЕГАИСУНФ.ЗаполнитьПередачуВТорговыйЗалЕГАИСНаОснованииПоступления(ДокументОбъект, ДанныеЗаполнения);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
			
			ИнтеграцияЕГАИСУНФ.ЗаполнитьПередачуВТорговыйЗалЕГАИСНаОснованииПеремещения(ДокументОбъект, ДанныеЗаполнения);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратИзТорговогоЗалаЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(ДокументОбъект,ДанныеЗаполнения);
			Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
				ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
			КонецЕсли;
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
			
			ИнтеграцияЕГАИСУНФ.ЗаполнитьВозвратИзТорговогоЗалаЕГАИСНаОснованииПеремещения(ДокументОбъект, ДанныеЗаполнения);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС")
		ИЛИ ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		Если Не ДокументОбъект.Организация.Пустая() ИЛИ НЕ ДокументОбъект.Магазин.Пустая() Тогда
			ТранспортныйМодуль = ИнтеграцияЕГАИСУНФ.ИспользуемыйТранспортныйМодуль(ДокументОбъект.Организация, ДокументОбъект.Магазин);
			Если ЗначениеЗаполнено(ТранспортныйМодуль) Тогда
				ДокументОбъект.ОрганизацияЕГАИС = ТранспортныйМодуль.ОрганизацияЕГАИС;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Не ЗначениеЗаполнено(ДокументОбъект.Организация) Тогда
		Выборка = ИнтеграцияЕГАИСУНФ.ОрганизацияТорговаяТочкаПоОрганизацииЕГАИС(ДокументОбъект.ОрганизацияЕГАИС);
		Если Выборка <> Неопределено Тогда
			ДокументОбъект.Организация = Выборка.Организация;
			ДокументОбъект.Магазин = Выборка.ТорговаяТочка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти