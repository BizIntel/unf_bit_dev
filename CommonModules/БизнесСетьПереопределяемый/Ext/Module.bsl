
#Область ПрограммныйИнтерфейс

// Создание контрагента при загрузке документов из сервиса.
//
// Параметры:
//   СтруктураРеквизитов - Структура - реквизиты необходимые для создания контрагента.
//   Отказ - Булево - признак отказа выполнения.
//
Процедура СоздатьКонтрагентаПоРеквизитам(СтруктураРеквизитов, Отказ) Экспорт
	
	РеквизитыКонтрагента = СтруктураРеквизитов.РеквизитыКонтрагента;
	РеквизитыКонтрагента.Вставить("ЭтоЭлектронныйДокумент", Истина);
	
	Контрагент = Справочники.Контрагенты.СоздатьЭлемент();
	Контрагент.Заполнить(РеквизитыКонтрагента);
	
	Попытка
		Контрагент.Записать();
		СтруктураРеквизитов.Вставить("Контрагент", Контрагент.Ссылка);
	Исключение
		Отказ = Истина;
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Запись нового элемента справочника Контрагенты'"),
			УровеньЖурналаРегистрации.Ошибка,
			Контрагент.Метаданные(),
			Контрагент,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ТекстОшибки = НСтр("ru = 'Ошибка при записи нового элемента справочника Контрагенты
			|Подробности см. в Журнале регистрации.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецПопытки;
	
КонецПроцедуры

// Возвращает контакты пользователя для регистрации в сервисе.
//
// Параметры:
//   Пользователь - СправочникСсылка.Пользователи - выбранный пользователь.
//   Результат - Структура - информация о пользователе.
//     * НаименованиеРоли - Строка - наименование роли пользователя.
//     * АдресПочты - Строка - адрес электронной почты пользователя.
//
Процедура ПолучитьКонтактыПользователяИБ(Пользователь, Результат) Экспорт
	
	Результат.НаименованиеРоли = "Тестовая роль";
	//Результат.АдресПочты = ""; // Может быть только уникальным, ограничение сервиса.
	
КонецПроцедуры

// Проверка соответствия реквизитов в документах.
//
// Параметры:
//   МассивСсылокНаОбъект - Массив - проверяемые ссылки объектов.
//   Реквизиты - Строка - список проверяемых реквизитов через запятую.
//
// Возвращаемое значение:
//   Булево - Истина, если все реквизиты соответствуют
//
Процедура ВыполнитьКонтрольРеквизитовДокументов(МассивСсылокНаОбъект, ТекстСообщения, Отказ) Экспорт
	
	ИмяМетаданных = "";
	Для каждого Ссылка Из МассивСсылокНаОбъект Цикл
		Если ИмяМетаданных = "" Тогда
			ИмяМетаданных = Ссылка.Метаданные().Имя;
		ИначеЕсли ИмяМетаданных <> Ссылка.Метаданные().Имя Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Операция невозможна для разных видов документов'");
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Реквизиты = "Организация, Контрагент";
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ";
	МассивРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(Реквизиты, ",");
	ПоследнийЭлемент = МассивРеквизитов.Получить(МассивРеквизитов.Количество()-1);
	Для каждого Элемент Из МассивРеквизитов Цикл
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.Таб + ИмяМетаданных + "." + СокрЛП(Элемент)
			+ ?(Элемент = ПоследнийЭлемент, "", ",");
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + "ИЗ " + "Документ." + ИмяМетаданных + " КАК "
		+ ИмяМетаданных	+ " ГДЕ " + ИмяМетаданных + ".Ссылка В(&МассивСсылокНаОбъект)";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивСсылокНаОбъект", МассивСсылокНаОбъект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 1 Тогда
		Отказ = Истина;
		Шаблон = НСтр("ru = 'Операция невозможна. Отличаются реквизиты документов (%1)'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Реквизиты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти