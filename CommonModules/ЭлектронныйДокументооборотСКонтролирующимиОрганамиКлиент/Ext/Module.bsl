
////////////////////////////////////////////////////////////////////////////////
// Электронный документооборот с контролирующими органами.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ОткрытьПротоколОтправки

Процедура ОткрытьПротоколОтправки(Форма, КонтролирующийОрган) Экспорт
	
	Если КонтролирующийОрган = "ФСС" Тогда
		ДополнительныеПараметры = Новый Структура("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПротоколОтправкиФССЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		ДополнительныеПараметры = Новый Структура("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПротоколОтправкиФСРАРЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		ДополнительныеПараметры = Новый Структура("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПротоколОтправкиРПНЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	ИначеЕсли КонтролирующийОрган = "ФТС" Тогда
		ДополнительныеПараметры = Новый Структура("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПротоколОтправкиФТСЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	Иначе
		
		СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		
		СвойстваПротоколаСервисСОС = СдачаОтчетностиЧерезСервисСпецоператораВызовСервера.ПолучитьСвойстваАктуальногоПротокола(СсылкаНаОтчет);
		СвойстваПротоколаЭДО = ДокументооборотСКОВызовСервера.ПолучитьСвойстваАктуальногоПротокола(СсылкаНаОтчет);
		
		ДатаПротоколаСервисСОС = ПолучитьДатуПротокола(СвойстваПротоколаСервисСОС);
		ДатаПротоколаЭДО = ПолучитьДатуПротокола(СвойстваПротоколаЭДО);
		
		Если ДатаПротоколаСервисСОС = '00010101' И ДатаПротоколаЭДО = '00010101' Тогда
			ПоказатьПредупреждение(, "Протокол не найден.");
			Возврат;
		ИначеЕсли ДатаПротоколаЭДО > ДатаПротоколаСервисСОС Тогда
			ПоказатьЗначение(, СвойстваПротоколаЭДО.Протокол);
		Иначе
			СдачаОтчетностиЧерезСервисСпецоператораКлиент.ПоказатьПротокол(Форма)
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьПротоколОтправкиФССЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ОткрытьПротоколОтправкиФСС(ДополнительныеПараметры.Форма);
	
КонецПроцедуры

Процедура ОткрытьПротоколОтправкиФСРАРЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ОткрытьПротоколОтправкиФСРАР(ДополнительныеПараметры.Форма);
	
КонецПроцедуры

Процедура ОткрытьПротоколОтправкиРПНЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ОткрытьПротоколОтправкиРПН(ДополнительныеПараметры.Форма);
	
КонецПроцедуры

Процедура ОткрытьПротоколОтправкиФТСЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ОткрытьПротоколОтправкиФТС(ДополнительныеПараметры.Форма);
	
КонецПроцедуры

#КонецОбласти

#Область ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(
		Форма,
		КонтролирующийОрган,
		КодРегионаВФорме = Неопределено,
		Знач ЭтоОтправкаИзФормыОтчетность = Ложь,
		Знач СсылкаНаОтчет = Неопределено,
		Знач ОрганизацияОтчета = Неопределено,
		Знач АдресГотовыхДанных = Неопределено,
		Знач ИмяФайлаГотовыхДанных = Неопределено) Экспорт
	
	Если КонтролирующийОрган = "ФСС" Тогда
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Форма",                        Форма);
		ДополнительныеПараметры.Вставить("ЭтоОтправкаИзФормыОтчетность", ЭтоОтправкаИзФормыОтчетность);
		ДополнительныеПараметры.Вставить("СсылкаНаОтчет",                СсылкаНаОтчет);
		ДополнительныеПараметры.Вставить("ОрганизацияОтчета",            ОрганизацияОтчета);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганФССЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
		
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Форма",                        Форма);
		ДополнительныеПараметры.Вставить("КодРегионаВФорме",             КодРегионаВФорме);
		ДополнительныеПараметры.Вставить("ЭтоОтправкаИзФормыОтчетность", ЭтоОтправкаИзФормыОтчетность);
		ДополнительныеПараметры.Вставить("СсылкаНаОтчет",                СсылкаНаОтчет);
		ДополнительныеПараметры.Вставить("ОрганизацияОтчета",            ОрганизацияОтчета);
		ДополнительныеПараметры.Вставить("АдресГотовыхДанных",           АдресГотовыхДанных);
		ДополнительныеПараметры.Вставить("ИмяФайлаГотовыхДанных",        ИмяФайлаГотовыхДанных);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганФСРАРЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
		
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Форма",                        Форма);
		ДополнительныеПараметры.Вставить("ЭтоОтправкаИзФормыОтчетность", ЭтоОтправкаИзФормыОтчетность);
		ДополнительныеПараметры.Вставить("СсылкаНаОтчет",                СсылкаНаОтчет);
		ДополнительныеПараметры.Вставить("ОрганизацияОтчета",            ОрганизацияОтчета);

		ОписаниеОповещения = Новый ОписаниеОповещения("ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганРПНЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
		
	ИначеЕсли КонтролирующийОрган = "ФТС" Тогда
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Форма",                        Форма);
		ДополнительныеПараметры.Вставить("ЭтоОтправкаИзФормыОтчетность", ЭтоОтправкаИзФормыОтчетность);
		ДополнительныеПараметры.Вставить("СсылкаНаОтчет",                СсылкаНаОтчет);
		ДополнительныеПараметры.Вставить("ОрганизацияОтчета",            ОрганизацияОтчета);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганФТСЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
		
	ИначеЕсли КонтролирующийОрган = "БанкРоссии" Тогда
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Форма",                        Форма);
		ДополнительныеПараметры.Вставить("ЭтоОтправкаИзФормыОтчетность", ЭтоОтправкаИзФормыОтчетность);
		ДополнительныеПараметры.Вставить("СсылкаНаОтчет",                СсылкаНаОтчет);
		ДополнительныеПараметры.Вставить("ОрганизацияОтчета",            ОрганизацияОтчета);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганБанкРоссииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
		
	Иначе
		
		ДокументооборотСКОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(
			Форма,
			КонтролирующийОрган,
			ЭтоОтправкаИзФормыОтчетность,
			СсылкаНаОтчет,
			ОрганизацияОтчета);
			
	КонецЕсли;

КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганФССЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	ЭтоОтправкаИзФормыОтчетность = ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	СсылкаНаОтчет = ДополнительныеПараметры.СсылкаНаОтчет; 
	ОрганизацияОтчета = ДополнительныеПараметры.ОрганизацияОтчета;
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганДляФСС(Форма, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета);
	
КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганФСРАРЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма 							= ДополнительныеПараметры.Форма;
	КодРегионаВФорме 				= ДополнительныеПараметры.КодРегионаВФорме;
	ЭтоОтправкаИзФормыОтчетность 	= ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	СсылкаНаОтчет 					= ДополнительныеПараметры.СсылкаНаОтчет; 
	ОрганизацияОтчета 				= ДополнительныеПараметры.ОрганизацияОтчета;
	АдресГотовыхДанных 				= ДополнительныеПараметры.АдресГотовыхДанных;
	ИмяФайлаГотовыхДанных 			= ДополнительныеПараметры.ИмяФайлаГотовыхДанных;
	КонтекстЭДОКлиент 				= Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганДляФСРАР(
		Форма,
		КодРегионаВФорме,
		ЭтоОтправкаИзФормыОтчетность,
		СсылкаНаОтчет,
		ОрганизацияОтчета,
		АдресГотовыхДанных,
		ИмяФайлаГотовыхДанных);
	
КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганРПНЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	ЭтоОтправкаИзФормыОтчетность = ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	СсылкаНаОтчет = ДополнительныеПараметры.СсылкаНаОтчет; 
	ОрганизацияОтчета = ДополнительныеПараметры.ОрганизацияОтчета;
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганДляРПН(Форма, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета);
	
КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганФТСЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	ЭтоОтправкаИзФормыОтчетность = ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	СсылкаНаОтчет = ДополнительныеПараметры.СсылкаНаОтчет; 
	ОрганизацияОтчета = ДополнительныеПараметры.ОрганизацияОтчета;
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганДляФТС(Форма, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета);
	
КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганБанкРоссииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	КонтекстЭДОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганДляБанкаРоссии(Результат, ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область ПроверитьВИнтернете

Процедура ПроверитьВИнтернетеПоСсылке(Ссылка, КонтролирующийОрган = "ФНС", АдресГотовыхДанных = Неопределено, ИмяФайлаГотовыхДанных = Неопределено) Экспорт
	
	ДокументооборотСКОКлиент.ПроверитьВИнтернетеПоСсылке(Ссылка, КонтролирующийОрган, АдресГотовыхДанных, ИмяФайлаГотовыхДанных);
	
КонецПроцедуры

Процедура ПроверитьВИнтернете(Форма, КонтролирующийОрган = "ФНС", АдресГотовыхДанных = Неопределено, ИмяФайлаГотовыхДанных = Неопределено) Экспорт
	
	ДокументооборотСКОКлиент.ПроверитьВИнтернете(Форма, КонтролирующийОрган, АдресГотовыхДанных, ИмяФайлаГотовыхДанных);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФормой1СОтчетность

Процедура ПоказатьФормуПредложениеОформитьЗаявлениеНаПодключение(Организация = Неопределено) Экспорт
	
	ПарметрыОткрытия = Новый Структура();
	ПарметрыОткрытия.Вставить("Организация", Организация);
	
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ПредложениеОформитьЗаявлениеНаПодключение", ПарметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ОткрытьФормуМастераЗаявленияНаПодключение(Организация, ВладелецОткрываемойФормы = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура("Организация, ВладелецОткрываемойФормы", Организация, ВладелецОткрываемойФормы);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуМастераЗаявленияНаПодключениеПослеПолученияКонтекстаЭДО", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОткрытьФормуМастераЗаявленияНаПодключениеПослеПолученияКонтекстаЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Подключение к электронному документообороту невозможно: недостаточно прав.'"));
		
	Иначе
		
		Организация = ДополнительныеПараметры.Организация;
		ВладелецОткрываемойФормы = ДополнительныеПараметры.ВладелецОткрываемойФормы;
		
		// Если учетная запись настроена, то открываем не первичное, а вторичное заявление
		УжеНастроенаУчетнаяЗаписьДокументооборота = ЗначениеЗаполнено(КонтекстЭДОКлиент.УчетнаяЗаписьОрганизации(Организация));
		ПоддерживаетсяВторичноеЗаявление = КонтекстЭДОКлиент.ПоддерживаетсяВторичноеЗаявление(Организация);
		
		Если УжеНастроенаУчетнаяЗаписьДокументооборота И ПоддерживаетсяВторичноеЗаявление Тогда
			
			РеквизитыУчетнойЗаписи = ЭлектроннаяПодписьВМоделиСервисаБРОВызовСервера.РеквизитыУчетнойЗаписи(Организация);
			ЭтоЭлектроннаяПодписьВМоделиСервиса = РеквизитыУчетнойЗаписи.ЭлектроннаяПодписьВМоделиСервиса;
			
			ПараметрыФормы = Новый Структура("Организация", Организация);
			ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.МастерФормированияЗаявкиНаИзменениеПараметровПодключения", ПараметрыФормы);
		Иначе

			// Открытие первичного мастера
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("Организация", Организация);
			ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.МастерФормированияЗаявкиНаПодключение", ПараметрыФормы, ВладелецОткрываемойФормы);

		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаЗаявленийНаПодключение(Организация = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура("Организация", Организация);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуСпискаЗаявленийНаПодключениеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаЗаявленийНаПодключениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	Организация = ДополнительныеПараметры.Организация;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Подключение к электронному документообороту невозможно: недостаточно прав.'"));
		
	Иначе
		
		КонтекстЭДОКлиент.ОткрытьФормуСпискаЗаявленийНаПодключение(Организация);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПараметрыПодключенияК1СОтчетности(Параметр, ФормаВладельца) Экспорт
	
	ТребуетсяПроверкаПараметров = Ложь;
	
	Если ТипЗнч(Параметр) = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ТипФизЛица() Тогда
		
		// Изменилось физ лицо
		ТребуетсяПроверкаПараметров = Истина;
		
	ИначеЕсли ТипЗнч(Параметр) = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ТипОрганизации() Тогда
		
		// Изменилась организация
		УчетнаяЗаписьОрганизации = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.УчетнаяЗаписьОрганизации(Параметр);
		Если ЗначениеЗаполнено(УчетнаяЗаписьОрганизации) Тогда
			
			ТребуетсяПроверкаПараметров = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТребуетсяПроверкаПараметров Тогда
		
		Оповестить("Запись_ВладельцаИлиБухгалтера",,Параметр);
		
		// Проверка прав
		ДополнительныеПараметры = Новый Структура("Параметр, ФормаВладельца", Параметр, ФормаВладельца);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьПараметрыПодключенияК1СОтчетностиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПараметрыПодключенияК1СОтчетностиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент 	= Результат.КонтекстЭДО;
	Параметр 			= ДополнительныеПараметры.Параметр;
	ФормаВладельца 		= ДополнительныеПараметры.ФормаВладельца;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметр) = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ТипФизЛица() Тогда
		
		// Изменилось физ лицо
		Организации = КонтекстЭДОКлиент.ОрганизацияФизЛицаИзДокументаЗаявления(Параметр);
		Для каждого Организация Из Организации Цикл
			КонтекстЭДОКлиент.ПоказатьФормуПредупрежденияОбИзменившихсяНастройкахПодключения(Организация, ФормаВладельца);
		КонецЦикла; 
		
	ИначеЕсли ТипЗнч(Параметр) = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ТипОрганизации() Тогда
		
		// Изменилась организация
		Организация = Параметр;
		КонтекстЭДОКлиент.ПоказатьФормуПредупрежденияОбИзменившихсяНастройкахПодключения(Организация, ФормаВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтметитьКакПрочтенное(Ссылка) Экспорт

	ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ОтметитьКакПрочтенное(Ссылка);
	Оповестить("Пометка прочтенным", , Ссылка);
	
КонецПроцедуры

// Открывает форму 1С-Отчетность на разделе "Новые"
//
Процедура Открыть1СОтчетностьНаЗакладкеНовое() Экспорт
	
	ПараметрыФормы = Новый Структура("Раздел", ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Новое"));
	ОткрытьФорму("ОбщаяФорма.РегламентированнаяОтчетность", ПараметрыФормы, , "1С-Отчетность");

КонецПроцедуры

#КонецОбласти

#Область ВыбратьКодОрганаТОГС

// Открывает форму выбора кодов ТОГС.
// ДополнительныеПараметры 	- Структура - возможные ключи структуры:
//	- ТекущийКодТОГС 		- Используется для позиционирования в списке на текущем ТОГС
//	- КодРегиона 			- по региону ищется текущй ТОГС и на нем позиционируется.
//	- Элемент 				- Элемент, для которого осуществляется выбор и в который будет 
//								возвращаться результат методом ОповеститьОВыборе.
//	- ОписаниеОповещения 	- используется в случае, если после выбора необходимо продолжть выполнение кода.
//
Процедура ВыбратьКодОрганаТОГС(ДополнительныеПараметры) Экспорт
		
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыбратьКодОрганаТОГСПослеПолученияКонтекста", 
		ЭтотОбъект, 
		ДополнительныеПараметры);
		
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	// В процедуре ниже ничего не писать - это асинхронный метод!

КонецПроцедуры

Процедура ВыбратьКодОрганаТОГСПослеПолученияКонтекста(Результат, ВходящийКонтекст) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	КонтекстЭДОКлиент.ВыбратьКодОрганаТОГС(ВходящийКонтекст);
	
КонецПроцедуры
 	
Процедура ВыбратьСотрудникаИзСписка(ОповещениеОЗавершении, Сотрудник, Организация, Владелец, СтандартнаяОбработка) Экспорт
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентПереопределяемый.ВыбратьСотрудникаИзСписка(
		ОповещениеОЗавершении, Сотрудник, Организация, Владелец, СтандартнаяОбработка);
	
КонецПроцедуры
	
#КонецОбласти

// Открывает последний протокол по ссылке на отправляемый объект.
//
// Параметры:
//  Ссылка					 - ДокументСсылка, СправочникСсылка - ссылка на объект, отправляемый в контролирующие органы.
//  КонтролирующийОрган		 - Строка или Перечисление.ТипыКонтролирующихОрганов
//  Протокол				 - Строка или СправочникСсылка.ЦиклыОбмена/ОтправкиХХХХ или Неопределено:
//		- Идентификатор отправки (ЦиклыОбмена.Идентификатор) или ИдентификаторОтправкиНаСервере для отправок.
//		- Ссылка на цикл обмена или отправку.
//		- Если протокол не указан, то берется последний цикл обмена или отправка.
Процедура ПоказатьПротоколОтправки(Ссылка, КонтролирующийОрган = "ФНС", Протокол = Неопределено) Экспорт

	// Получаем КонтекстЭДОКлиент
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Ссылка", 				Ссылка);
	ДополнительныеПараметры.Вставить("КонтролирующийОрган", КонтролирующийОрган);
	ДополнительныеПараметры.Вставить("Протокол", 			Протокол);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьПоследнийПротоколОтправкиЗавершение", 
		ЭтотОбъект, 
		ДополнительныеПараметры);
	
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);

КонецПроцедуры

Процедура ОткрытьПоследнийПротоколОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	Ссылка 				= ДополнительныеПараметры.Ссылка;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	Протокол 			= ДополнительныеПараметры.Протокол;
	
	Если ТипЗнч(Протокол) = Тип("Строка") Тогда
		// Значит у нас идентификатор отправки, а не ссылка на отправку.
		Протокол = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ОтправкаПоИдентификатору(Протокол);
	КонецЕсли;
	
	КонтекстЭДОКлиент.ОткрытьПротокол(Ссылка, КонтролирующийОрган, Протокол);
	
КонецПроцедуры

Процедура ОткрытьФормуСотрудникаНаРеквизите(ОповещениеОЗавершении, ФормаВладелец, Сотрудник, ЗначениеРеквизита, ИмяРеквизита) Экспорт
	
	СтандартнаяОбработка = Истина;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентПереопределяемый.ОткрытьФормуСотрудникаНаРеквизите(Сотрудник, ИмяРеквизита, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка Тогда
		Если ИмяРеквизита = "СНИЛС" Тогда
			ОткрытьФорму(
				"Справочник.МакетыПенсионныхДел.Форма.ВводСНИЛС",
				Новый Структура("Сотрудник,СНИЛС", Сотрудник, ЗначениеРеквизита),
				ФормаВладелец,,,,
				ОповещениеОЗавершении);
		ИначеЕсли ИмяРеквизита = "АдресРегистрации" Тогда
			Параметры = Новый Структура;
			Параметры.Вставить("Заголовок",               НСтр("ru = 'Ввод адреса'"));
			Параметры.Вставить("Представление", 		   ЗначениеРеквизита);
			Параметры.Вставить("ВидКонтактнойИнформации", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"));
			ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент").ОткрытьФормуКонтактнойИнформации(Параметры, , ОповещениеОЗавершении);
		ИначеЕсли ИмяРеквизита = "Телефон" Тогда
			Параметры = Новый Структура;
			Параметры.Вставить("Заголовок",               НСтр("ru = 'Ввод телефона'"));
			Параметры.Вставить("Представление", 		   ЗначениеРеквизита);
			Параметры.Вставить("ВидКонтактнойИнформации", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
			ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент").ОткрытьФормуКонтактнойИнформации(Параметры, , ОповещениеОЗавершении);
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЗапросНаСверкуПослеПолученияКонтекста(Результат, ВходящийКонтекст) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	ТекстОшибкиИнициализацииКонтекстаЭДО = Результат.ТекстОшибки;

	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиИнициализацииКонтекстаЭДО);
		Возврат;
	КонецЕсли;
	
	ПоказыватьРекламу 	= ВходящийКонтекст.ПоказыватьРекламу;
	Организация 		= ВходящийКонтекст.Организация;
	ВидУслуги 			= ВходящийКонтекст.ВидСверки;
	
	Если ПоказыватьРекламу
		И ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.НужноПоказатьРекламу1СОтчетности(Организация) Тогда
		
		ПоказатьРекламу1СОтчетности(Организация);
		Возврат;
		
	КонецЕсли;
	
	КонтекстЭДОКлиент.СоздатьЗапросНаСверку(Организация, ВидУслуги);
	
КонецПроцедуры

Процедура ПоказатьРекламу1СОтчетности(Организация)
	
	ОткрытьФорму(
		"Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ПредложениеОформитьЗаявлениеНаПодключение", 
		, 
		ЭтотОбъект, 
		Истина);
	
	КонецПроцедуры
	

Процедура ОбновитьОтправкуИзПанелиОтправки(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	// Получаем КонтекстЭДОКлиент
	ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган", Форма, КонтролирующийОрган);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьОтправкуИзПанелиОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОбновитьОтправкуИзПанелиОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Форма = ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// По форме получаем ссылку и организацию
	Если КонтролирующийОрган = "ФСС" Тогда
		Ссылка 		= ДокументооборотСФССКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация = ДокументооборотСФССКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		Ссылка 		= ДокументооборотСФСРАРКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСФСРАРКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		Ссылка 		= ДокументооборотСРПНКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСРПНКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФТС" Тогда
		Ссылка 		= ДокументооборотСФТСКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСФТСКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "БанкРоссии" Тогда
		Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("РегламентированнаяОтчетность.ЭлектронныйДокументооборотСКонтролирующимиОрганами.СдачаОтчетностиВБанкРоссии") Тогда
			МодульДокументооборотСБанкомРоссииКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ДокументооборотСБанкомРоссииКлиентСервер");
			Ссылка 		= МодульДокументооборотСБанкомРоссииКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
			Организация	= МодульДокументооборотСБанкомРоссииКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);	
		КонецЕсли;
	Иначе
		Ссылка 		= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСКОКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		// Получаем организацию из регистра сведений
		Сведения = КонтекстЭДОКлиент.СведенияПоОтправляемымОбъектам(Ссылка);
		Организация = Сведения.Организация;
	КонецЕсли;
	
	// Отправка извещений
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Форма",               Форма);
	ДополнительныеПараметры.Вставить("КонтролирующийОрган", КонтролирующийОрган);
	ДополнительныеПараметры.Вставить("Ссылка",              Ссылка);
	ДополнительныеПараметры.Вставить("Организация",         Организация);

	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьПанельСостоянияОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	КонтекстЭДОКлиент.ОсуществитьОбменПоОрганизации(
		Форма,
		Организация,
		ОписаниеОповещения,
		КонтролирующийОрган,
		Ссылка);
	
КонецПроцедуры

Процедура ОбновитьПанельСостоянияОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма 				= ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	Организация 		= ДополнительныеПараметры.Организация;
	Ссылка 				= ДополнительныеПараметры.Ссылка;
	
	РегламентированнаяОтчетностьКлиент.ОбновитьПанельСостоянияОтправкиВРегламентированномОтчете(Форма, КонтролирующийОрган);
	
	// Оповещаем о завершении отправки
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Организация", Организация);
	ПараметрыОповещения.Вставить("Ссылка", Ссылка);
	Оповестить("Завершение отправки", ПараметрыОповещения, Ссылка);
	
КонецПроцедуры

Процедура ОткрытьПротоколИзПанелиОтправки(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	// Получаем КонтекстЭДОКлиент
	ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган", Форма, КонтролирующийОрган);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПротоколИзПанелиОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОткрытьПротоколИзПанелиОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Форма = ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;

	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// По форме получаем ссылку
	Если КонтролирующийОрган = "ФСС" Тогда
		Ссылка = ДокументооборотСФССКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		Ссылка = ДокументооборотСФСРАРКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		Ссылка = ДокументооборотСРПНКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФТС" Тогда
		Ссылка = ДокументооборотСФТСКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	Иначе
		Ссылка = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	КонецЕсли;
	
	КонтекстЭДОКлиент.ОткрытьПротокол(Ссылка, КонтролирующийОрган);
	
КонецПроцедуры

Процедура ОткрытьКритическиеОшибкиИзПанелиОтправки(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	// По форме получаем ссылку
	Если КонтролирующийОрган = "ФСС" Тогда
		Ссылка = ДокументооборотСФССКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		Ссылка = ДокументооборотСФСРАРКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		Ссылка = ДокументооборотСРПНКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФТС" Тогда
		Ссылка = ДокументооборотСФТСКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	Иначе
		Ссылка = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	КонецЕсли;
	
	// Получаем КонтекстЭДОКлиент
	ДополнительныеПараметры = Новый Структура("Ссылка", Ссылка);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьКритическиеОшибкиИзПанелиОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОткрытьКритическиеОшибкиИзПанелиОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Ссылка = ДополнительныеПараметры.Ссылка;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// Открываем критические ошибки
	КонтекстЭДОКлиент.ПоказатьКритическиеОшибкиПоСсылке(Ссылка);
	
КонецПроцедуры

Процедура ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	// Получаем КонтекстЭДОКлиент
	ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган", Форма, КонтролирующийОрган);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьНеотправленноеИзвещениеИзПанелиОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОтправитьНеотправленноеИзвещениеИзПанелиОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Форма = ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// По форме получаем ссылку и организацию
	Если КонтролирующийОрган = "ФСС" Тогда
		Ссылка 		= ДокументооборотСФССКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация = ДокументооборотСФССКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		Ссылка 		= ДокументооборотСФСРАРКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСФСРАРКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		Ссылка 		= ДокументооборотСРПНКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСРПНКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФТС" Тогда
		Ссылка 		= ДокументооборотСФТСКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСФТСКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	Иначе
		Ссылка 		= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСКОКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		// Получаем организацию из регистра сведений
		Сведения = КонтекстЭДОКлиент.СведенияПоОтправляемымОбъектам(Ссылка);
		Организация = Сведения.Организация;
	КонецЕсли;
	
	// Отправка извещений
	ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган", Форма, КонтролирующийОрган);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьНеотправленноеИзвещениеИзПанелиОтправкиПослеОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	КонтекстЭДОКлиент.ОтправитьНеотправленныеИзвещенияОПриеме(Ссылка, Организация, КонтролирующийОрган, ОписаниеОповещения);
	
	
КонецПроцедуры

Процедура ОтправитьНеотправленноеИзвещениеИзПанелиОтправкиПослеОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	РегламентированнаяОтчетностьКлиент.ОбновитьПанельСостоянияОтправкиВРегламентированномОтчете(Форма, КонтролирующийОрган);
	
КонецПроцедуры

Процедура ОткрытьСостояниеОтправкиИзПанелиОтправки(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	// По форме получаем ссылку
	Если КонтролирующийОрган = "ФСС" Тогда
		Ссылка = ДокументооборотСФССКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		Ссылка = ДокументооборотСФСРАРКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		Ссылка = ДокументооборотСРПНКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФТС" Тогда
		Ссылка = ДокументооборотСФТСКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	Иначе
		Ссылка = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	КонецЕсли;
	
	// Получаем КонтекстЭДОКлиент
	
	ДополнительныеПараметры = Новый Структура("Ссылка", Ссылка);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСостояниеОтправкиИзПанелиОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);

	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОткрытьСостояниеОтправкиИзПанелиОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Ссылка = ДополнительныеПараметры.Ссылка;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// Отображение формы статуса
	КонтекстЭДОКлиент.ПоказатьФормуСтатусовОтправки(Ссылка);
	
КонецПроцедуры

Процедура ПоказатьСостояниеОтправкиОтчетаПереопределяемый(Ссылка, СтандартнаяОбработка) Экспорт

	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентПереопределяемый.ПоказатьСостояниеОтправкиОтчета(Ссылка, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОтправитьВКонтролирующийОрганПереопределяемый(Ссылка, ВидКонтролирующегоОргана, КодКонтролирующегоОргана, СтандартнаяОбработка) Экспорт
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентПереопределяемый.ОтправитьВКонтролирующийОрган(Ссылка, ВидКонтролирующегоОргана, КодКонтролирующегоОргана, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеПереопределяемый(Ссылка, СтандартнаяОбработка) Экспорт

	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентПереопределяемый.ПроверитьВИнтернете(Ссылка, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОтборВидОтчетаНачалоВыбора(МассивВидовОтчетов) Экспорт
	
	// Сворачиваем макеты пенсионных дел в один элемент отбора.
	
	ВидМакетПенсионногоДела = "Макет пенсионного дела";
	
	ЭлементыДляУдаления = Новый Массив;
	Для Каждого ВидОтчета Из МассивВидовОтчетов Цикл
		Если СтрНайти(ВидОтчета, ВидМакетПенсионногоДела) Тогда
			ЭлементыДляУдаления.Добавить(ВидОтчета);
		КонецЕсли;
	КонецЦикла;
	
	МассивВидовОтчетов = ОбщегоНазначенияКлиентСервер.СократитьМассив(МассивВидовОтчетов, ЭлементыДляУдаления);
	Если ЗначениеЗаполнено(ЭлементыДляУдаления) Тогда
		МассивВидовОтчетов.Добавить(ВидМакетПенсионногоДела);
	КонецЕсли;
	
КонецПроцедуры


// ОТПРАВКА ПОЯСНЕНИЯ ПО ДЕКЛАРАЦИИ ПО НДС
////////////////////////////////////////////////////////////////////////////////

Процедура ОтправитьПояснение(
		КонтекстЭДОКлиент,
		Пояснение,
		Организация,
		УникальныйИдентификатор,
		ОповещениеПослеОтправки) Экспорт
	
	СведенияОЗаполнении = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.СведенияОЗаполненииПоясненияКДекларацииПоНДС(Пояснение);
	
	Если НЕ СведенияОЗаполнении.ЕстьСтрокиДляОтправки Тогда
		Если СведенияОЗаполнении.ЕстьИзмененияПоНДС Тогда
			ТекстПредупреждения = НСтр("ru = 'Все строки, в которых указан ответ, содержат изменения в сумме начисленного НДС.
						|Отправка пояснения невозможна, внесите исправления в учетные данные и сформируйте корректирующую декларацию.'");
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Нет ни одной строки, в которой указан ответ.
						|Отправка пояснения невозможна.'");
		КонецЕсли;
		ПоказатьПредупреждение( , ТекстПредупреждения, , НСтр("ru = 'Невозможно отправить пояснение'"));
		Возврат;
	КонецЕсли;
	
	Кнопки = Новый СписокЗначений();
	МассивСообщений = Новый Массив();
	
	Если СведенияОЗаполнении.ЕстьИзмененияПоНДС Тогда
		МассивСообщений.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Внимание!'"), , Новый Цвет(225, 40, 40)));
		МассивСообщений.Добавить(Новый ФорматированнаяСтрока(
								НСтр("ru = '
									|Изменилась сумма начисленного НДС. 
									|Внесите исправления в учетные данные и сформируйте корректирующую декларацию.
									|Строки, содержащие изменения по начисленному НДС, в пояснение включены не будут.'")));
		Кнопки.Добавить("ПОДГОТОВИТЬДЕКЛАРАЦИЮ", "Перейти к журналу отчетов");
	КонецЕсли;
	
	Кнопки.Добавить("ОТПРАВИТЬ", "Отправить пояснение");
	
	ТекстНеотвеченныеСтроки = "";
	Если СведенияОЗаполнении.ЕстьНеОтвеченныеСтроки Тогда
		Если СведенияОЗаполнении.ЕстьИзмененияПоНДС Тогда
			МассивСообщений.Добавить("
									|
									|");
		КонецЕсли;
		МассивСообщений.Добавить(Новый ФорматированнаяСтрока(
								НСтр("ru = 'В ФНС будут отправлены только те строки пояснения, по которым указан ответ.
								|Уточнение по остальным строкам требования можно будет отправить позже в другом пояснении.'")));
	КонецЕсли;
	
	Кнопки.Добавить("ОТМЕНА", "Отмена");
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("КонтекстЭДОКлиент",        КонтекстЭДОКлиент);
	ДополнительныеПараметры.Вставить("Пояснение",                Пояснение);
	ДополнительныеПараметры.Вставить("Организация",              Организация);
	ДополнительныеПараметры.Вставить("УникальныйИдентификатор",  УникальныйИдентификатор);
	ДополнительныеПараметры.Вставить("ОповещениеПослеОтправки",  ОповещениеПослеОтправки);
	
	Если МассивСообщений.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросОбУточненнойДекларацииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, Новый ФорматированнаяСтрока(МассивСообщений), Кнопки, , , НСтр("ru = 'Отправка пояснения'"));
	Иначе
		ВопросОбУточненнойДекларацииЗавершение("ОТПРАВИТЬ", ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВопросОбУточненнойДекларацииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент 		= ДополнительныеПараметры.КонтекстЭДОКлиент;
	Пояснение 				= ДополнительныеПараметры.Пояснение;
		
	Если Результат = "ОТПРАВИТЬ" Тогда
		
		Организация 			= ДополнительныеПараметры.Организация;
		УникальныйИдентификатор = ДополнительныеПараметры.УникальныйИдентификатор;
		ОповещениеПослеОтправки = ДополнительныеПараметры.ОповещениеПослеОтправки;
		
		КонтекстЭДОКлиент.ОтправкаОтветаНаТребованиеПоясненийКДекларацииНДС(
			Пояснение,
			Организация,
			УникальныйИдентификатор,
			ОповещениеПослеОтправки);
		
	ИначеЕсли Результат = "ПОДГОТОВИТЬДЕКЛАРАЦИЮ" Тогда
		
		КонтекстЭДОКлиент.ПодготовитьКорректирующуюДекларациюПоНДСИзПояснения(Пояснение);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьДиалогОшибкиДоступаВИнтернет(ОписаниеОшибки, ВыполняемоеОповещение = Неопределено) Экспорт
	
	ПараметрыФормы = Новый Структура("ОписаниеОшибки", ОписаниеОшибки);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьДиалогОшибкиДоступаВИнтернетЗавершение", ЭтотОбъект, ВыполняемоеОповещение);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ОшибкаДоступаВИнтернет", ПараметрыФормы,,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ПоказатьДиалогОшибкиДоступаВИнтернетЗавершение(Результат, ВыполняемоеОповещение) Экспорт
	
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Результат);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьОтправкуОтчета(Ссылка, Организация, Наименование, ОповещениеОЗакрытии) Экспорт
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Ссылка", 				Ссылка);
	ДополнительныеПараметры.Вставить("Наименование", 		Наименование);
	ДополнительныеПараметры.Вставить("Организация", 		Организация);
	ДополнительныеПараметры.Вставить("ЗаголовокФормы", 		Наименование);
	ДополнительныеПараметры.Вставить("СтраницаЖурнала", 
		ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Отчеты"));
	ДополнительныеПараметры.Вставить("ОповещениеОЗакрытии", ОповещениеОЗакрытии);
	ДополнительныеПараметры.Вставить("РежимВыбора", 		Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьОтправкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);

КонецПроцедуры
	
Процедура ВыбратьОтправкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗакрытии = ДополнительныеПараметры.ОповещениеОЗакрытии;
	ДополнительныеПараметры.Удалить("ОповещениеОЗакрытии");
	
	ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.ВсеОтправки",
		ДополнительныеПараметры,
		ЭтотОбъект,
		,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры


// Процедура определяет, открывать или нет из формы "1С-Отчетность" файлы, присоединенные к объекту.
//
// Параметры:
//  ПараметрыПроверки - Структура:
//   "Владелец"             - СправочникСсылка, ДокументСсылка - ссылка на объект;
//   "ТекстПредупреждения"  - Строка - если заполнен и СтандартнаяОбработка = Ложь, то будет выведено предупреждение;
//   "СтандартнаяОбработка" - Булево - если Ложь, открытие присоединенных файлов не выполняется.
//
Процедура ПроверитьВладельцаПриОткрытииПрисоединенныхФайловИзСпискаОтчетов(ПараметрыПроверки) Экспорт
	
	Если ТипЗнч(ПараметрыПроверки.Владелец) = Тип("СправочникСсылка.МакетыПенсионныхДел") Тогда
		ПараметрыПроверки.СтандартнаяОбработка = Ложь;
		ПараметрыПроверки.ТекстПредупреждения = НСтр("ru = 'Присоединение файлов к ""Макету пенсионного дела"" должно выполняться из основной формы.'");
	КонецЕсли;
		
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДатуПротокола(СвойстваПротокола)
	
	Если СвойстваПротокола = Неопределено Тогда
		Возврат '00010101';
	КонецЕсли;
	
	Если СвойстваПротокола.Дата = Неопределено Тогда
		Возврат '00010101';
	КонецЕсли;
	
	Возврат СвойстваПротокола.Дата;
	
КонецФункции

#КонецОбласти

