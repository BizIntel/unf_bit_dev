&НаКлиенте
Процедура ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, ИмяПоляОтбора, ИмяПараметраЗаполнения = "", ИмяСписка = "") Экспорт
	
	Если ИмяСписка = "" Тогда
		ЗначениеОтбора = ДанныеМеток.НайтиСтроки(Новый Структура("ИмяПоляОтбора",ИмяПоляОтбора));
	Иначе
		ЗначениеОтбора = ДанныеМеток.НайтиСтроки(Новый Структура("ИмяПоляОтбора, ИмяСписка", ИмяПоляОтбора, ИмяСписка));
	КонецЕсли;
	
	Если ЗначениеОтбора.Количество() > 0 Тогда
		СтруктураПараметров.Вставить(?(ИмяПараметраЗаполнения = "", ИмяПоляОтбора, ИмяПараметраЗаполнения), ЗначениеОтбора[ЗначениеОтбора.Количество()-1].Метка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокумент(ВидДокумента, ИмяОперации, ДанныеМеток = Неопределено, ИмяСписка = "", СтруктураПараметровПеремещения = Неопределено) Экспорт
	
	СтруктураПараметров = Новый Структура();
	
	Если ДанныеМеток <> Неопределено Тогда
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Контрагент",, ИмяСписка);
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Валюта", "ВалютаДенежныхСредств", ИмяСписка);
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Организация",, ИмяСписка);
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "БанковскийСчет", "БанковскийСчет", ИмяСписка);
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Касса", "Касса", ИмяСписка);
		
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "СчетКассаДляОтбора", "БанковскийСчет", ИмяСписка);
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "СчетКассаДляОтбора", "Касса", ИмяСписка);
		
		// Для документов перемещения ДС
		// Для РМ Банк и Касса.
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "СчетКассаДляОтбора", "БанковскийСчетПолучатель", ИмяСписка);
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "СчетКассаДляОтбора", "КассаПолучатель", ИмяСписка);
		
		// Для формы списка документов ПеремещениеДС.
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "СчетКассаПолучательДляОтбора", "БанковскийСчетПолучатель", ИмяСписка);
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "СчетКассаПолучательДляОтбора", "КассаПолучатель", ИмяСписка);
		// Конец Для документов перемещения ДС
		
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Ответственный",, ИмяСписка);
		
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "ОрганизацияДляОтбора", "Организация", ИмяСписка);
		//ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Автор",, ИмяСписка);
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Эквайрер",, ИмяСписка);
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "ВалютаДокумента",, ИмяСписка);
		ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "ЭквайринговыйТерминал",, ИмяСписка);
	КонецЕсли;
	
	Если ИмяОперации <> "" Тогда
		Если ВидДокумента = "ПеремещениеДС" Тогда
			Для Каждого ПараметрПеремещения Из СтруктураПараметровПеремещения.ЗначенияЗаполнения Цикл
				СтруктураПараметров.Вставить(ПараметрПеремещения.Ключ, ПараметрПеремещения.Значение);
			КонецЦикла;
		Иначе
			Если ВидДокумента = "ОперацияПоПлатежнымКартам" Тогда
				ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭквайринга." + ИмяОперации);
			Иначе
				ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОпераций" + ВидДокумента + "." + ИмяОперации);
			КонецЕсли;
			СтруктураПараметров.Вставить("ВидОперации", ВидОперации);
		КонецЕсли;
	Иначе
		Если ВидДокумента = "ПеремещениеДС" Тогда
			Для Каждого ПараметрПеремещения Из СтруктураПараметровПеремещения.ЗначенияЗаполнения Цикл
				СтруктураПараметров.Вставить(ПараметрПеремещения.Ключ, ПараметрПеремещения.Значение);
			КонецЦикла;
		ИначеЕсли ВидДокумента = "ПоступлениеВКассу" Тогда
			СтруктураПараметров.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя"));
		ИначеЕсли ВидДокумента = "ПоступлениеНаСчет" Тогда
			СтруктураПараметров.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя"));
		ИначеЕсли ВидДокумента = "РасходИзКассы" Тогда
			СтруктураПараметров.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходИзКассы.Поставщику"));
		ИначеЕсли ВидДокумента = "РасходСоСчета" Тогда
			СтруктураПараметров.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходСоСчета.Поставщику"));
		ИначеЕсли ВидДокумента = "ОперацияПоПлатежнымКартам" Тогда
			СтруктураПараметров.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя"));
		ИначеЕсли ВидДокумента = "ПлатежноеПоручение" Тогда
			СтруктураПараметров.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.Оплата"));
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", СтруктураПараметров);
	ПараметрыОткрытия.Вставить("СозданПоКомандеИзФормыСписка", Истина);
	
	ОткрытьФорму("Документ."+ВидДокумента+".ФормаОбъекта", ПараметрыОткрытия);
	
КонецПроцедуры