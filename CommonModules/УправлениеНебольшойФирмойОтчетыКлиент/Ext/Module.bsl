
// Открывает предопределенный вариант отчета
//
// Параметры:
//  Вариант  - Структура - описание варианта отчета:
//     * ИмяОтчета           - Строка - имя отчета
//     * КлючВарианта        - Строка - ключ варианта отчета
//
Процедура ОткрытьВариантОтчета(Вариант, Отбор = Неопределено) Экспорт
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("КлючВарианта", Вариант.КлючВарианта);
	
	Уникальность = "Отчет." + Вариант.ИмяОтчета + "/КлючВарианта." + Вариант.КлючВарианта;
	
	ПараметрыОткрытия.Вставить("КлючПараметровПечати",        Уникальность);
	ПараметрыОткрытия.Вставить("КлючСохраненияПоложенияОкна", Уникальность);
	
	Если Отбор <> Неопределено Тогда
		ПараметрыОткрытия.Вставить("Отбор", Отбор);
	КонецЕсли;
	
	ОткрытьФорму("Отчет." + Вариант.ИмяОтчета + ".Форма", ПараметрыОткрытия, Неопределено, Уникальность);
	
КонецПроцедуры

Процедура ОбработкаРасшифровки(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка) Экспорт
	
	Если ЭтаФорма.КлючУникальности = "Отчет.ДинамикаЗадолженностиПокупателей/КлючВарианта.ДинамикаЗадолженности" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СвойстваВариантаОтчета = Новый Структура("КлючВарианта, КлючОбъекта",
			"Основной", "Отчет.РеестрСтаренияДебиторскойЗадолженности");
		
		КомпоновщикНастроекВариантаОтчета = УправлениеНебольшойФирмойОтчетыВызовСервера.КомпоновщикНастроекВариантаОтчета(СвойстваВариантаОтчета);
		Если КомпоновщикНастроекВариантаОтчета = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		КомпоновщикНастроекТекущегоВарианта = ЭтаФорма.Отчет.КомпоновщикНастроек;
		СкопироватьОтбор(КомпоновщикНастроекВариантаОтчета, КомпоновщикНастроекТекущегоВарианта);
		
		ПользовательскиеНастройкиВариантаОтчета = КомпоновщикНастроекВариантаОтчета.ПользовательскиеНастройки;
		
		ЗначениеПериода = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("Период", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
		Если ЗначениеПериода <> Неопределено Тогда
			ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных("ПериодПольз");
			Для Каждого ЭлементНастройки Из ПользовательскиеНастройкиВариантаОтчета.Элементы Цикл
				Если ТипЗнч(ЭлементНастройки) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") И ЭлементНастройки.Параметр = ПараметрКомпоновки Тогда
					ЗначениеПараметра = ЭлементНастройки;
					Если ТипЗнч(ЗначениеПараметра.Значение) = Тип("СтандартнаяДатаНачала") Тогда
						ЗначениеПараметра.Значение.Вариант = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
						ЗначениеПараметра.Значение.Дата = ЗначениеПериода;
						ЗначениеПараметра.Использование = Истина;
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыОтчета = Новый Структура("ПользовательскиеНастройки, 
											|КлючВарианта, 
											|КлючНазначенияИспользования, 
											|СформироватьПриОткрытии",
											ПользовательскиеНастройкиВариантаОтчета,
											СвойстваВариантаОтчета.КлючВарианта,
											"РасшифровкаДинамикиЗадолженностиПокупателей",
											Истина);
		
		ОткрытьФорму("Отчет.РеестрСтаренияДебиторскойЗадолженности.Форма", ПараметрыОтчета);
		
	ИначеЕсли ЭтаФорма.КлючУникальности = "Отчет.ДинамикаЗадолженностиПоставщикам/КлючВарианта.ДинамикаЗадолженности" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СвойстваВариантаОтчета = Новый Структура("КлючВарианта, КлючОбъекта",
			"Основной", "Отчет.РеестрСтаренияКредиторскойЗадолженности");
		
		КомпоновщикНастроекВариантаОтчета = УправлениеНебольшойФирмойОтчетыВызовСервера.КомпоновщикНастроекВариантаОтчета(СвойстваВариантаОтчета);
		Если КомпоновщикНастроекВариантаОтчета = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		КомпоновщикНастроекТекущегоВарианта = ЭтаФорма.Отчет.КомпоновщикНастроек;
		СкопироватьОтбор(КомпоновщикНастроекВариантаОтчета, КомпоновщикНастроекТекущегоВарианта);
		
		ПользовательскиеНастройкиВариантаОтчета = КомпоновщикНастроекВариантаОтчета.ПользовательскиеНастройки;
		
		ЗначениеПериода = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("ДинамическийПериод", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
		Если ЗначениеПериода <> Неопределено Тогда
			ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных("ПериодПольз");
			Для Каждого ЭлементНастройки Из ПользовательскиеНастройкиВариантаОтчета.Элементы Цикл
				Если ТипЗнч(ЭлементНастройки) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") И ЭлементНастройки.Параметр = ПараметрКомпоновки Тогда
					ЗначениеПараметра = ЭлементНастройки;
					Если ТипЗнч(ЗначениеПараметра.Значение) = Тип("СтандартнаяДатаНачала") Тогда
						ЗначениеПараметра.Значение.Вариант = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
						ЗначениеПараметра.Значение.Дата = ЗначениеПериода;
						ЗначениеПараметра.Использование = Истина;
					КонецЕсли;
					
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыОтчета = Новый Структура("ПользовательскиеНастройки, 
											|КлючВарианта, 
											|КлючНазначенияИспользования, 
											|СформироватьПриОткрытии",
											ПользовательскиеНастройкиВариантаОтчета,
											СвойстваВариантаОтчета.КлючВарианта,
											"РасшифровкаДинамикиЗадолженностиПоставщикам",
											Истина);
		
		ОткрытьФорму("Отчет.РеестрСтаренияКредиторскойЗадолженности.Форма", ПараметрыОтчета);
		
	ИначеЕсли ЭтаФорма.ИмяФормы = "Отчет.КонтрольЗаполненияКонтактнойИнформации.Форма" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ЗначениеКЛ = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("КонтактноеЛицо", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
		Если ЗначениеКЛ <> Неопределено Тогда
			ОткрытьФорму("Справочник.КонтактныеЛица.ФормаОбъекта", Новый Структура("Ключ", ЗначениеКЛ), ЭтаФорма);
		Иначе
			ЗначениеКА = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("Контрагент", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			Если ЗначениеКА <> Неопределено Тогда
				ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", Новый Структура("Ключ", ЗначениеКА), ЭтаФорма);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.ВоронкаПродаж" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Расшифровка", Расшифровка);
		ПараметрыФормы.Вставить("ДанныеРасшифровки", ЭтаФорма.ОтчетДанныеРасшифровки);
		ПараметрыФормы.Вставить("АдресСхемы", ЭтаФорма.НастройкиОтчета.АдресСхемы);
		
		ОткрытьФорму("Отчет.ВоронкаПродаж.Форма.Расшифровка", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СкопироватьОтбор(КомпоновщикПриемник, КомпоновщикИсточник) Экспорт
	
	НастройкиПриемник = КомпоновщикПриемник.Настройки;
	НастройкиИсточник = КомпоновщикИсточник.Настройки;
	ПользовательскиеНастройкиИсточник = КомпоновщикИсточник.ПользовательскиеНастройки;
	
	Для Каждого ЭлементОтбора Из НастройкиИсточник.Отбор.Элементы Цикл
		Если ЗначениеЗаполнено(ЭлементОтбора.ИдентификаторПользовательскойНастройки) Тогда
			
			Для каждого ПользовательскаяНастройка Из ПользовательскиеНастройкиИсточник.Элементы Цикл
				Если ПользовательскаяНастройка.ИдентификаторПользовательскойНастройки = ЭлементОтбора.ИдентификаторПользовательскойНастройки Тогда
					Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЭлементОтбораКомпоновкиДанных")
						И ПользовательскаяНастройка.Использование Тогда
						
						ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
							НастройкиПриемник.Отбор,
							Строка(ЭлементОтбора.ЛевоеЗначение),
							ПользовательскаяНастройка.ПравоеЗначение,
							ПользовательскаяНастройка.ВидСравнения,
							,
							Истина);
						
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикПриемник.ЗагрузитьНастройки(НастройкиПриемник);

КонецПроцедуры





