
////////////////////////////////////////////////////////////////////////////////
//
// ИнтеграцияГИСМКлиент : переопределяемые сеоверные процедуры и функции подсистемы "Интеграция с ГИСМ"
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Предоставляет возможность переопределить обработку заполнения документа "Заявка на выпуск КиЗ".
//
// Параметры:
//  ЗаявкаОбъект - ДокументОбъект.ЗаявкаНаВыпускКиЗ - документ, для которого выполняется заполнение.
//  ДанныеЗаполнения - Произвольный - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  ТекстЗаполнения - Строка,Неопределено - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  СтандартнаяОбработка - Булево - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполненияЗаявкиНаВыпускКиЗ(ЗаявкаОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ИнтеграцияГИСМУНФ.ОбработкаЗаполненияЗаявкиНаВыпускКиЗ(ЗаявкаОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

// Предоставляет возможность переопределить заполение документа "Заявка на выпуск КиЗ".
//
// Параметры:
//  ЗаявкаОбъект         - ДокументОбъект.ЗаявкаНаВыпускКиЗ - документ, для которого выполняется заполнение.
//  ДанныеЗаполнения - Произвольный - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  ТекстЗаполнения - Строка - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  СтандартнаяОбработка - Булево - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//
Процедура ЗаполнитьЗаявкуНаВыпускКиЗНаОснованииДругогоДокумента(ЗаявкаОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	
КонецПроцедуры

// Предоставляет возможность переопределить обработку заполнения документа "Уведомление об отгрузке маркированных товаров ГИСМ".
//
// Параметры:
//  УведомлениеОбъект    - ДокументОбъект.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ - документ, для которого выполняется заполнение.
//  ДанныеЗаполнения - Произвольный - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  ТекстЗаполнения - Строка - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  СтандартнаяОбработка - Булево - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполненияУведомленияОбОтгрузкеГИСМ(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

//++ НЕ ГИСМ
	ИнтеграцияГИСМУНФ.ЗаполнитьУведомлениеОбОтгрузкеГИСМНаОснованииРеализации(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	//-- НЕ ГИСМ
	
КонецПроцедуры

// Предоставляет возможность переопределить обработку заполнения документа "Уведомление о ввозе маркированных товаров из ЕАЭС".
//
// Параметры:
//  УведомлениеОбъект    - ДокументОбъект.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ - документ, для которого выполняется заполнение.
//  ДанныеЗаполнения - Произвольный - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  ТекстЗаполнения - Строка - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  СтандартнаяОбработка - Булево - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполненияУведомленияОВвозеИзЕАЭСГИСМ(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаУчета.Получить());
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Дата,ВалютаДокумента");
	Запрос.УстановитьПараметр("ДатаОснования", РеквизитыОснования.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования", РеквизитыОснования.ВалютаДокумента);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Основание,
	|	НЕ ПоступлениеТоваровУслуг.Проведен КАК ЕстьОшибкиПроведен,
	|	ЕСТЬNULL(СтатусыИнформированияГИСМ.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ПО (СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка)
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	ПоступлениеТоваровУслугСерии.Ссылка.СтруктурнаяЕдиница КАК Склад,
	|	КОЛИЧЕСТВО(ПоступлениеТоваровУслугСерии.СерийныйНомер) КАК КоличествоСерий
	|ПОМЕСТИТЬ втСерии
	|ИЗ
	|	Документ.ПриходнаяНакладная.СерийныеНомера КАК ПоступлениеТоваровУслугСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная.Запасы КАК Запасы
	|		ПО (Запасы.КлючСвязи = ПоступлениеТоваровУслугСерии.КлючСвязи И Запасы.Ссылка = ПоступлениеТоваровУслугСерии.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (Запасы.Номенклатура = СправочникНоменклатура.Ссылка)
	|ГДЕ
	|	СправочникНоменклатура.ВидМаркировки = ЗНАЧЕНИЕ(Перечисление.ВидыМаркировки.МаркируемаяПродукция)
	|	И ПоступлениеТоваровУслугСерии.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	ПоступлениеТоваровУслугСерии.Ссылка.СтруктурнаяЕдиница
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ПоступлениеТоваровУслугТовары.Ссылка.СтруктурнаяЕдиница КАК Склад,
	|	СУММА(ПоступлениеТоваровУслугТовары.Сумма * ВЫБОР
	|			КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(КурсВалютыОснования.Кратность, 0) > 0
	|								И ЕСТЬNULL(КурсВалютыОснования.Курс, 0) > 0
	|								И ЕСТЬNULL(КурсВалютыРегл.Кратность, 0) > 0
	|								И ЕСТЬNULL(КурсВалютыРегл.Курс, 0) > 0
	|							ТОГДА КурсВалютыОснования.Курс * КурсВалютыРегл.Кратность / (КурсВалютыРегл.Курс * КурсВалютыОснования.Кратность)
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаСНДС
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ПоступлениеТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ПоступлениеТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	СправочникНоменклатура.ВидМаркировки = ЗНАЧЕНИЕ(Перечисление.ВидыМаркировки.МаркируемаяПродукция)
	|	И ПоступлениеТоваровУслугТовары.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика,
	|	ПоступлениеТоваровУслугТовары.Ссылка.СтруктурнаяЕдиница
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Характеристика КАК Характеристика,
	|	втТовары.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втТовары.СуммаСНДС, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ втТовары.СуммаСНДС / ВЫБОР
	|				КОГДА ЕСТЬNULL(втСерии.КоличествоСерий, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ втСерии.КоличествоСерий
	|			КОНЕЦ
	|	КОНЕЦ КАК СтоимостьКиЗ
	|ПОМЕСТИТЬ втСтоимостьКиЗ
	|ИЗ
	|	втСерии КАК втСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТовары КАК втТовары
	|		ПО втСерии.Номенклатура = втТовары.Номенклатура
	|			И втСерии.Характеристика = втТовары.Характеристика
	|			И втСерии.Склад = втТовары.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугСерии.СерийныйНомер.RFIDTID КАК RFIDTID,
	|	ПоступлениеТоваровУслугСерии.СерийныйНомер.RFIDEPC КАК RFIDEPC,
	|	ПоступлениеТоваровУслугСерии.СерийныйНомер.НомерКиЗГИСМ КАК НомерКиЗ,
	|	втСтоимостьКиЗ.СтоимостьКиЗ КАК Стоимость
	|ИЗ
	|	Документ.ПриходнаяНакладная.СерийныеНомера КАК ПоступлениеТоваровУслугСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная.Запасы КАК Запасы
	|		ПО (Запасы.КлючСвязи = ПоступлениеТоваровУслугСерии.КлючСвязи И Запасы.Ссылка = ПоступлениеТоваровУслугСерии.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (Запасы.Номенклатура = СправочникНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьКиЗ КАК втСтоимостьКиЗ
	|		ПО (втСтоимостьКиЗ.Номенклатура = Запасы.Номенклатура)
	|			И (втСтоимостьКиЗ.Характеристика = Запасы.Характеристика)
	|			И (втСтоимостьКиЗ.Склад = ПоступлениеТоваровУслугСерии.Ссылка.СтруктурнаяЕдиница)
	|ГДЕ
	|	СправочникНоменклатура.ВидМаркировки = ЗНАЧЕНИЕ(Перечисление.ВидыМаркировки.МаркируемаяПродукция)
	|	И ПоступлениеТоваровУслугСерии.Ссылка = &ДокументОснование";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[0].Выбрать();
	РеквизитыОснования.Следующий();
	
	Если Не РегистрыСведений.СтатусыИнформированияГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru='Для %Документ% уже существует актуальное уведомление о ввозе маркированных товаров ГИСМ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.АктуальноеУведомлениеОбОтгрузкеГИСМ);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[5].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru='В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.НомераКиЗ.Загрузить(РезультатЗапроса[5].Выгрузить());
	
	
	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

// Предоставляет возможность переопределить обработку заполнения документа "Уведомление об импорте маркированных товаров".
//
// Параметры:
//  УведомлениеОбъект    - ДокументОбъект.УведомлениеОбИмпортеМаркированныхТоваровГИСМ - документ, для которого выполняется заполнение.
//  ДанныеЗаполнения - Произвольный - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  ТекстЗаполнения - Строка - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  СтандартнаяОбработка - Булево - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполненияУведомленияОбИмпортеГИСМ(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Основание,
	|	НЕ ПоступлениеТоваровУслуг.Проведен КАК ЕстьОшибкиПроведен,
	|	ЕСТЬNULL(СтатусыИнформированияГИСМ.Статус,
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ПО (СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка)
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Номенклатура.ТНВЭДГИСМ КАК КодТНВЭД,
	|	ПоступлениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ПоступлениеТоваровУслугТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ПриходнаяНакладная.ЗАпасы КАК ПоступлениеТоваровУслугТовары
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ПО
	|	ПоступлениеТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ВидМаркировки = Значение(Перечисление.ВидыМаркировки.МаркируемаяПродукция)
	|	И ПоступлениеТоваровУслугТовары.Ссылка = &ДокументОснование
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[0].Выбрать();
	РеквизитыОснования.Следующий();
	
	Если Не РегистрыСведений.СтатусыИнформированияГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru='Для %Документ% уже существует актуальное уведомление об импорте маркированных товаров ГИСМ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.АктуальноеУведомлениеОбОтгрузкеГИСМ);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[1].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru='В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.Товары.Загрузить(РезультатЗапроса[1].Выгрузить());
	
	Индекс = 0;
	Для Каждого СтрокаТЧ Из УведомлениеОбъект.Товары Цикл
		Индекс = Индекс + 1;
		СтрокаТЧ.КлючСвязи = Индекс;
	КонецЦикла;

	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();	
	
КонецПроцедуры

// Предоставляет возможность переопределить обработку заполнения документа "Уведомление о списании КиЗ для маркировки".
//
// Параметры:
//  УведомлениеОбъект    - ДокументОбъект.УведомлениеОСписанииКиЗГИСМ - документ, для которого выполняется заполнение.
//  ДанныеЗаполнения - Произвольный - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  ТекстЗаполнения - Строка - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  СтандартнаяОбработка - Булево - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполненияУведомленияОСписанииКиЗ(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	
	//++ НЕ ГИСМ
	
	ИнтеграцияГИСМУНФ.ЗаполнитьУведомлениеОСписанииКиЗНаОснованииВнутреннегоПотребления(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	//-- НЕ ГИСМ
	
КонецПроцедуры

// Предоставляет возможность переопределить обработку заполнения документа "Уведомление об импорте маркированных товаров".
//
// Параметры:
//  Объект - ДокументОбъект.УведомлениеОбИмпортеМаркированныхТоваровГИСМ - документ, для которого выполняется заполнение.
//  Отказ - Булево - Признак отказа.
//  ПроверяемыеРеквизиты - Массив - Проверяемые реквизиты.
//
Процедура УведомлениеОбИмпортеОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Определяет контрагента по ИНН и КПП
//
// Параметры:
//  ИНН  - Строка - ИНН контрагента.
//  КПП  - Строка - КПП контрагента.
//
// Возвращаемое значение:
//   ОпределяемыйТип.КонтрагентГИСМ, Неопределено  - Найденный контрагент или Неопределено, если поиск завершился неудачей.
//
Функция КонтрагентПоИННКПП(ИНН, КПП) Экспорт
	
	Возврат ИнтеграцияГИСМУНФ.КонтрагентПоИННКПП(ИНН,КПП);
	
КонецФункции

// Возвращает  структуру, содержащую ИНН и КПП контагента.
//
// Параметры:
//  Контрагент - ОпределяемыйТип.КонтрагентГИСМ - контрагент.
//
// Возвращаемое значение:
//   Структура - со свойствами:
//     ИНН  - Строка - ИНН контрагента.
//     КПП  - Строка - КПП контрагента.
//
Функция ИННКПППоКонтрагенту(Контрагент) Экспорт
	
	Возврат ИнтеграцияГИСМУНФ.ИННКПППоКонтрагенту(Контрагент);
	
КонецФункции

// Возвращает структуру, содержащую ИНН, КПП, GLN организации.
//
// Параметры:
//  Организация - ОпределяемыйТип.Организация - Организация.
//  Подразделение - ОпределяемыйТип.Подразделение - Подразделение организации.
//
// Возвращаемое значение:
//   Структура - со свойствами:
//     ИНН  - Строка - ИНН контрагента.
//     КПП  - Строка - КПП контрагента.
//     GLN  - Строка - GLN контрагента.
//
Функция ИННКППGLNОрганизации(Организация, Подразделение = Неопределено) Экспорт
	
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ИНН", "");
	ВозвращаемоеЗначение.Вставить("КПП", "");
	ВозвращаемоеЗначение.Вставить("GLN", "");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Организации.ИНН КАК ИНН,
	|	Организация.КПП КАК КПП,
	|	ОрганизацииДляОбменаГИСМ.GLN КАК GLN
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОрганизацииДляОбменаГИСМ КАК ОрганизацииДляОбменаГИСМ
	|			ПО Организации.Ссылка = ОрганизацииДляОбменаГИСМ.Организация
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Возвращает структуру, содержащую Страну, Регистрационный номер, наименование, признак физического лица, ИНН и КПП.
//
// Параметры:
//  Контрагент - ОпределяемыйТип.КонтрагентГИСМ - Контрагент.
//
// Возвращаемое значение:
//   Структура - со свойствами:
//     Страна  - Строка - Страна регистрации контрагента.
//     РегистрационныйНомер  - Строка - Регистриционный номер контрагента.
//     Наименование  - Строка - Наименование контрагента.
//     НаименованиеПолное  - Строка - Полное наименование контрагента.
//     ЭтоФизическоеЛицо  - Булево - Признак физического лица.
//     ИНН  - Строка - ИНН контрагента.
//     КПП  - Строка - КПП контрагента.
//     ЮридическийАдрес - Строка - Юридический адрес контрагента.
//
Функция РеквизитыКонтрагента(Контрагент) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Страна", "");
	ВозвращаемоеЗначение.Вставить("РегистрационныйНомер", "");
	ВозвращаемоеЗначение.Вставить("Наименование", "");
	ВозвращаемоеЗначение.Вставить("НаименованиеПолное", "");
	ВозвращаемоеЗначение.Вставить("ИНН", "");
	ВозвращаемоеЗначение.Вставить("КПП", "");
	ВозвращаемоеЗначение.Вставить("ЭтоФизическоеЛицо", Ложь);
	ВозвращаемоеЗначение.Вставить("ЮридическийАдрес", "");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(Контрагенты.СтранаРегистрации.КодАльфа2, """") КАК Страна,
	|	Контрагенты.РегистрационныйНомер КАК РегистрационныйНомер,
	|	Контрагенты.Наименование КАК Наименование,
	|	Контрагенты.НаименованиеПолное КАК НаименованиеПолное,
	|	Контрагенты.ИНН,
	|	Контрагенты.КПП,
	|	ВЫБОР КОГДА Контрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.ЮридическоеЛицо) ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК ЭтоФизическоеЛицо
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент");
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
	КонецЕсли;
	
	ЮридическийАдрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Контрагент,
		Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента,
		ТекущаяДатаСеанса());
	ВозвращаемоеЗначение.ЮридическийАдрес = ЮридическийАдрес;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Проверяет использование подразделений в информационной базе.
// 
// Возвращаемое значение:
//  Булево - Подразделения используются.
//
Функция ИспользоватьПодразделения() Экспорт
	
	
	Возврат Ложь;
	
КонецФункции

// Проверяет использование заявок на выпуск КиЗ.
// 
// Возвращаемое значение:
//  Булево - Заявки используются.
//
Функция ИспользоватьЗаявкиНаВыпускКиЗ() Экспорт
	
	
	Возврат Истина;
	
КонецФункции

// Проверяет использование нескольких организаций в информационной базе.
// 
// Возвращаемое значение:
//  Булево - Несколько организаций используются.
//
Функция ИспользоватьНесколькоОрганизаций() Экспорт
	
	
	Возврат Истина;
	
КонецФункции

// Документ-основание является возвратом поставщику
//
// Параметры:
//  ДокументСсылка - ДокументСсылка- Документ-основание
// 
// Возвращаемое значение:
//  Булево - Основание является возвратом поставщику
//
Функция ДокументОснованиеВозвратПоставщику(ДокументСсылка) Экспорт
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		
		ВидОперацииРасходнойНакладной = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			ДокументСсылка,
			"ВидОперации");
		
		Если ВидОперацииРасходнойНакладной = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Получить организацию и подразделение документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - Документ, подразделение и организацию которого необходимо получить.
// 
// Возвращаемое значение:
//  Структура со свойствами:
//    * Организация - ОпределяемыйТип.Организация - Организация документа.
//    * Подразделение - ОпределяемыйТип.Подразделение - Подразделение документа.
//
Функция ОрганизацияПодразделениеДокумента(ДокументСсылка) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Организация,СтруктурнаяЕдиница");
	
КонецФункции

// Позволяет определить получение валюты регламентированного учета.
//
// Возвращаемое значение:
//  СправочникСсылка.Валюты - Валюта регламентированного учета.
//
Функция ВалютаРегламентированногоУчета() Экспорт
	
	Возврат ИнтеграцияГИСМУНФ.ВалютаРегламентированногоУчета();
	
КонецФункции

// В данной функции необходимо реализовать запрос, который определяет поступившие КиЗ
// для документов "Заявка на выпуск КиЗ", "Уведомление о поступлении маркированной продукции".
//
// Параметры:
//  Объект - ДокументОбъект, ДанныеФормыСтруктура - Объект
//
// Возвращаемое значение:
//  Запрос - Запрос для определения поступивших КиЗ.
//
Функция ЗапросПоПоступившимКиЗ(Объект) Экспорт
	
	
		Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления,
	|	НомераКиЗ.СостояниеПодтверждения,
	|	НомераКиЗ.НомерСтроки
	|ПОМЕСТИТЬ НомераКиЗ
	|ИЗ
	|	&НомераКиЗ КАК НомераКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления,
	|	НомераКиЗ.СостояниеПодтверждения,
	|	НомераКиЗ.НомерСтроки
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ПОМЕСТИТЬ ВсеДокументыПоступленияПоКиЗ
	|ИЗ
	|	РегистрСведений.СерийныеНомераГарантии КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерийныеНомера КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.СерийныйНомер = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслуг
	|		ПО ДвиженияСерийТоваров.Регистратор = ПоступлениеТоваровУслуг.Ссылка
	|			И (&Организация = ПоступлениеТоваровУслуг.Организация)
	|			И (&Контрагент = ПоступлениеТоваровУслуг.Контрагент)
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|	И ДвиженияСерийТоваров.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииСерийныхНомеров.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления
	|ПОМЕСТИТЬ РанееСопоставленныеПоступления
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НЕ НомераКиЗ.ДокументПоступления В (&ПустыеЗначенияДокументовПоступления)
	|	И НомераКиЗ.НомерКиЗ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|	И НомераКиЗ.Ссылка <> &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НЕ НомераКиЗ.ДокументПоступления В (&ПустыеЗначенияДокументовПоступления)
	|	И НомераКиЗ.НомерКиЗ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|	И НомераКиЗ.Ссылка <> &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеДокументыПоступленияПоКиЗ.ДокументПоступления,
	|	ВсеДокументыПоступленияПоКиЗ.НомерКиЗ
	|ПОМЕСТИТЬ ДокументыПоступленияКандидаты
	|ИЗ
	|	ВсеДокументыПоступленияПоКиЗ КАК ВсеДокументыПоступленияПоКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РанееСопоставленныеПоступления КАК РанееСопоставленныеПоступления
	|		ПО ВсеДокументыПоступленияПоКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И ВсеДокументыПоступленияПоКиЗ.ДокументПоступления = РанееСопоставленныеПоступления.ДокументПоступления
	|ГДЕ
	|	РанееСопоставленныеПоступления.ДокументПоступления ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НеподтвержденныеКиЗ.НомерКиЗ КАК НомерКиЗ,
	|	НеподтвержденныеКиЗ.ДокументПоступления,
	|	НеподтвержденныеКиЗ.НомерСтроки,
	|	НеподтвержденныеКиЗ.СостояниеПодтверждения,
	|	ЕСТЬNULL(ДокументыПоступленияКандидаты.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриходнаяНакладная.ПустаяСсылка)) КАК ДокументПоступленияКандидат
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПоступленияКандидаты КАК ДокументыПоступленияКандидаты
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ДокументыПоступленияКандидаты.НомерКиЗ
	|ИТОГИ ПО
	|	НомерКиЗ");
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаявкаНаВыпускКиЗГИСМ") Тогда
		Запрос.УстановитьПараметр("НомераКиЗ", Объект.ВыпущенныеКиЗ.Выгрузить());
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.УведомлениеОПоступленииМаркированныхТоваровГИСМ") Тогда
		Запрос.УстановитьПараметр("НомераКиЗ", Объект.НомераКиЗ.Выгрузить());
	КонецЕсли;
	
	ПустыеЗначенияДокументовПоступления = ИнтеграцияГИСМУНФ.МассивПустыхЗначенийДокументовПоступленияМаркированнойПродукции();
	
	Запрос.УстановитьПараметр("ДокументСсылка",                      Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация",                         Объект.Организация);
	Запрос.УстановитьПараметр("Контрагент",                          Объект.Контрагент);
	Запрос.УстановитьПараметр("ПустыеЗначенияДокументовПоступления", ПустыеЗначенияДокументовПоступления);
	
	Возврат Запрос;
	
	
КонецФункции

// Обновляет в табличной части документа "Заявкам на выпуск КиЗ" табличную часть "Заказанные КиЗ"
//
// Параметры:
//  Объект - ДокументОбъект, ДанныеФормыСтруктура - Объект
//
Процедура ОбновитьКолонкиВыпущеноПолученоВТЧЗаказанныеКиЗ(Объект) Экспорт
	
	
КонецПроцедуры

// Получает данные по "Заявкам на выпуск КиЗ" для заполнения обработки "Подтверждение поступивших КиЗ".
//
// Параметры:
//  ДокументыКПодтверждению - Массив - Содержит документы "Заявка на выпуск КиЗ", для которых будет выполняться подтверждение поступления.
//
// Возвращаемое значение:
//   Структура - со свойствами:
//     НомераКиЗКПодтверждению - ТаблицаЗначений - содержит данные по выпущенным КиЗ, их статусам и документам поступления.
//     ПроблемыДублиКиЗ        - ТаблицаЗначений - содержит информацию о дублирующихся в обрабатываемых документах номерах КиЗ.
//     ПроблемыСопоставления   - ТаблицаЗначений - содержит информацию о выпущенных киз, которые не удалость сопоставить заказанным КиЗ.
//
Функция ДанныеПоЗаявкамНаВыпускКиЗ(ДокументыКПодтверждению) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераКиЗ.НомерКиЗ,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ ДублирующиесяНомераКиЗ
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|
	|СГРУППИРОВАТЬ ПО
	|	НомераКиЗ.НомерКиЗ
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераКиЗ.НомерКиЗ КАК НомерКиЗ,
	|	НомераКиЗ.Ссылка КАК Документ,
	|	ЕСТЬNULL(Номенклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура
	|ПОМЕСТИТЬ НомераКиЗНоменклатура
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО НомераКиЗ.ВидКиЗ = Номенклатура.КиЗГИСМВид
	|			И НомераКиЗ.СпособВыпускаВОборот = Номенклатура.КиЗГИСМСпособВыпускаВОборот
	|			И НомераКиЗ.GTIN = Номенклатура.КиЗГИСМGTIN
	|			И НомераКиЗ.РазмерКиЗ = Номенклатура.КиЗГИСМРазмер
	|			И (Номенклатура.КиЗГИСМ)
	|ГДЕ
	|	НомераКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|	И НЕ НомераКиЗ.НомерКиЗ В
	|				(ВЫБРАТЬ
	|					ДублирующиесяНомераКиЗ.НомерКиЗ
	|				ИЗ
	|					ДублирующиесяНомераКиЗ КАК ДублирующиесяНомераКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераКиЗНоменклатура.НомерКиЗ,
	|	НомераКиЗНоменклатура.Документ,
	|	НомераКиЗНоменклатура.Номенклатура
	|ПОМЕСТИТЬ НомераКиЗПроблемыСопоставления
	|ИЗ
	|	НомераКиЗНоменклатура КАК НомераКиЗНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВыпускКиЗГИСМ.ЗаказанныеКиЗ КАК ТаблицаЗаказанныеКиЗ
	|		ПО НомераКиЗНоменклатура.Документ = ТаблицаЗаказанныеКиЗ.Ссылка
	|			И НомераКиЗНоменклатура.Номенклатура = ТаблицаЗаказанныеКиЗ.Номенклатура
	|ГДЕ
	|	ТаблицаЗаказанныеКиЗ.Номенклатура ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.Ссылка КАК Документ,
	|	НомераКиЗ.НомерКиЗ КАК НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления КАК ДокументПоступления,
	|	НомераКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВыпускКиЗГИСМ КАК Документы
	|		ПО НомераКиЗ.Ссылка = Документы.Ссылка
	|ГДЕ
	|	НомераКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|	И НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче))
	|	И НЕ НомераКиЗ.НомерКиЗ В
	|				(ВЫБРАТЬ
	|					ДублирующиесяНомераКиЗ.НомерКиЗ
	|				ИЗ
	|					ДублирующиесяНомераКиЗ КАК ДублирующиесяНомераКиЗ)
	|	И НЕ (НомераКиЗ.НомерКиЗ, НомераКиЗ.Ссылка) В
	|				(ВЫБРАТЬ
	|					НомераКиЗПроблемыСопоставления.НомерКиЗ,
	|					НомераКиЗПроблемыСопоставления.Документ
	|				ИЗ
	|					НомераКиЗПроблемыСопоставления КАК НомераКиЗПроблемыСопоставления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслуг.Организация КАК Организация
	|ПОМЕСТИТЬ ВсеДокументыПоступленияПоКиЗ
	|ИЗ
	|	РегистрСведений.СерийныеНомераГарантии КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерийныеНомера КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.СерийныйНомер = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслуг
	|		ПО ДвиженияСерийТоваров.Регистратор = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|	И ДвиженияСерийТоваров.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииСерийныхНомеров.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления,
	|	НомераКиЗ.Ссылка,
	|	Документы.Организация,
	|	Документы.Контрагент
	|ПОМЕСТИТЬ РанееСопоставленныеПоступления
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВыпускКиЗГИСМ КАК Документы
	|		ПО НомераКиЗ.Ссылка = Документы.Ссылка
	|ГДЕ
	|	НомераКиЗ.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПриходнаяНакладная.ПустаяСсылка)
	|	И НомераКиЗ.НомерКиЗ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НеподтвержденныеКиЗ.Документ КАК Документ,
	|	НеподтвержденныеКиЗ.НомерКиЗ КАК НомерКиЗ,
	|	НеподтвержденныеКиЗ.ДокументПоступления КАК ДокументПоступления,
	|	НеподтвержденныеКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
	|	ЕСТЬNULL(ВсеДокументыПоступленияПоКиЗ.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриходнаяНакладная.ПустаяСсылка)) КАК ДокументПоступленияКандидат,
	|	ЕСТЬNULL(РанееСопоставленныеПоступления.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриходнаяНакладная.ПустаяСсылка)) КАК ДокументПоступленияУжеСопоставлено
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РанееСопоставленныеПоступления КАК РанееСопоставленныеПоступления
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Организация = РанееСопоставленныеПоступления.Организация
	|			И НеподтвержденныеКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Документ <> РанееСопоставленныеПоступления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеДокументыПоступленияПоКиЗ КАК ВсеДокументыПоступленияПоКиЗ
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ВсеДокументыПоступленияПоКиЗ.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Контрагент = ВсеДокументыПоступленияПоКиЗ.Контрагент
	|			И НеподтвержденныеКиЗ.Организация = ВсеДокументыПоступленияПоКиЗ.Организация
	|ИТОГИ ПО
	|	Документ,
	|	НомерКиЗ,
	|	ДокументПоступления,
	|	СостояниеПодтверждения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДублирующиесяНомераКиЗ.НомерКиЗ
	|ИЗ
	|	ДублирующиесяНомераКиЗ КАК ДублирующиесяНомераКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗПроблемыСопоставления.Документ,
	|	НомераКиЗПроблемыСопоставления.НомерКиЗ
	|ИЗ
	|	НомераКиЗПроблемыСопоставления КАК НомераКиЗПроблемыСопоставления";
	
	Если ДокументыКПодтверждению.Количество() > 0 Тогда
		
		Запрос.УстановитьПараметр("ДокументыКПодтверждению", ДокументыКПодтверждению);
		
	Иначе
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДокументыКПодтверждению", Обработки.ПодтверждениеПоступившихКиЗГИСМ.ТекстУсловияПоЗаявкамНаВыпускКиЗ());
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НомераКиЗКПодтверждению", РезультатЗапроса[6]);
	ВозвращаемоеЗначение.Вставить("ПроблемыДублиКиЗ",        РезультатЗапроса[7]);
	ВозвращаемоеЗначение.Вставить("ПроблемыСопоставления",   РезультатЗапроса[8]);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Получает данные по "Заявкам на выпуск КиЗ" для заполнения обработки "Подтвреждение поступивших КиЗ".
//
// Параметры:
//  ДокументыКПодтверждению - Массив - Содержит документы "Заявка на выпуск КиЗ", для которых будет выполняться подтверждение поступления.
//
// Возвращаемое значение:
//   Структура - со свойствами:
//     НомераКиЗКПодтверждению - ТаблицаЗначений - содержит данные по ожидаемым маркированным товарам, их статусам и документам поступления.
//     ПроблемыДублиКиЗ        - ТаблицаЗначений - содержит информацию о дублирующихся в обрабатываемых документах номерах КиЗ ожидаемых товарах.
//     ПроблемыСопоставления   - Неопределено    - всегда устанавливается в Неопределено.
//
Функция ДанныеПоУведомлениямОПоступлении(ДокументыКПодтверждению) Экспорт
	
	
	Возврат Новый Структура;
	
КонецФункции

// Позволяет переопределить представление номенклатуры, исходя из представления номенклатуры и характеристики.
//
// Параметры:
//  НоменклатураПредставление - Строка - представление номенклатуры.
//  ХарактеристикаПредставление - Строка - представление характеристики номенклатуры.
//
// Возвращаемое значение:
//   Строка - сформированное представление номенклатуры.
//
Функция ПредставлениеНоменклатуры(НоменклатураПредставление, ХарактеристикаПредставление) Экспорт
	
	
	Возврат УправлениеНебольшойФирмойСервер.ПредставлениеНоменклатуры(НоменклатураПредставление, ХарактеристикаПредставление);
	
КонецФункции

// Формирует текст запроса для отчета "ПоступленияБезДокументовГИСМ"
//
// Параметры:
//  ИмяНабораДанных - Строка - определяет, по каким документу ГИСМ будут получаться данные. 
//     Если имя "КиЗ", то по "Заявкам на выпуск КиЗ", если "МаркированныеТовары", то по "Уведомлениям о поступлении маркированной продукции"
//  ОтборОрганизация - ОпределяемыйТип.Организация - отбор по организации.
//  ОтборКонтрагент  - ОпределяемыйТип.Контрагенты - отбор по контрагентам.
// 
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаПоПроблемнымПоступлениям(ИмяНабораДанных, ОтборОрганизация, ОтборКонтрагент) Экспорт
	
	
	Возврат "";
	
КонецФункции

#Область МенюОтчеты

// Заполнить подменю отчеты в командной панели формы
//
// Параметры:
//  Форма - УправляемаяФорма - Форма, на которую требуется добавить отчеты.
//
Процедура ЗаполнитьПодменюОтчеты(Форма) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандуДвиженияДокумента(КомандыОтчетов) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ПодпискиНаСобытия

// Обрабочик события перед записью, документов влияющих на расчет поступления КиЗ от эмитента.
//
// Параметры:
//  Источник         - ДокументОбъект - документ, влияющий на расчет.
//  Отказ - Булево - см. описание параметра в синтаксис-помощнике к обработчику ПередЗаписью документа.
//  РежимЗаписи  - РежимЗаписиДокумента - см. описание параметра в синтаксис-помощнике к обработчику ПередЗаписью документа.
//  РежимПроведения - РежимПроведенияДокумента - см. описание параметра в синтаксис-помощнике к обработчику ПередЗаписью документа.
//
Процедура ВлияющийНаСтатусПоступленияКиЗДокументПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Обрабочик события при проведении, документов влияющих на расчет поступления КиЗ от эмитента.
//
// Параметры:
//  Источник         - ДокументОбъект - документ, влияющий на расчет.
//  Отказ - Булево - см. описание параметра в синтаксис-помощнике к обработчику ПередЗаписью документа.
//  РежимПроведения - РежимПроведенияДокумента - см. описание параметра в синтаксис-помощнике к обработчику ПередЗаписью документа.
//
Процедура ВлияющийНаСтатусПоступленияКиЗДокументПриПроведении(Источник, Отказ, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Обрабочик события при записи документа "Заявка на выпуск КиЗ" и его оснований для расчета статуса заявки.
//
// Параметры:
//  Источник         - ДокументОбъект - документ, влияющий на расчет.
//  Отказ            - см. описание параметра в синтаксис-помощнике к обработчику ПередЗаписью документа.
//
Процедура РассчитатьСтатусЗаявкиНаВыпускКиЗ(Источник, Отказ) Экспорт
	
	ИнтеграцияГИСМУНФ.РассчитатьСтатусЗаявкиНаВыпускКиЗ(Источник, Отказ);
	
КонецПроцедуры

// Обрабочик события при записи документа "Уведомления о поступлении маркированных товаров" для расчета статуса уведомления.
//
// Параметры:
//  Источник         - ДокументОбъект - документ, влияющий на расчет.
//  Отказ            - см. описание параметра в синтаксис-помощнике к обработчику ПередЗаписью документа.
//
Процедура РассчитатьСтатусУведомленияОПоступлении(Источник, Отказ) Экспорт
	
	ИнтеграцияГИСМУНФ.РассчитатьСтатусУведомленияОПоступлении(Источник, Отказ);
	
КонецПроцедуры

// Обрабочик события при записи документа "Уведомления о отгрузке маркированных товаров" и его основаних для расчета статуса уведомления.
//
// Параметры:
//  Источник         - ДокументОбъект - документ, влияющий на расчет.
//  Отказ            - см. описание параметра в синтаксис-помощнике к обработчику ПередЗаписью документа.
//
Процедура РассчитатьСтатусУведомленияОбОтгрузке(Источник, Отказ) Экспорт
	
	ИнтеграцияГИСМУНФ.РассчитатьСтатусУведомленияОбОтгрузке(Источник, Отказ);
	
КонецПроцедуры

// Обрабочик события при записи документов, влияющих на расчет состояних информирования ГИСМ для расчета статуса уведомлени1.
//
// Параметры:
//  Источник         - ДокументОбъект - документ, влияющий на расчет.
//  Отказ            - см. описание параметра в синтаксис-помощнике к обработчику ПередЗаписью документа.
//
Процедура РассчитатьСтатусИнформированияГИСМ(Источник, Отказ) Экспорт
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеЗапасов") Тогда
		
		ЗаписьТребуется = (Источник.ЕстьКиЗГИСМ Или Источник.ЕстьМаркируемаяПродукцияГИСМ);
		ИнтеграцияГИСМУНФ.РассчитатьСтатусИнформированияГИСМДляДокументаРаспоряжения(Источник, ЗаписьТребуется);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПриходнаяНакладная") Тогда
		
		ВидИмпорта = ИнтеграцияГИСМУНФ.РассчитатьВидИмпорта(Источник.Контрагент);
		ЗаписьТребуется = (ВидИмпорта = "ПоступлениеПоИмпорту" ИЛИ ВидИмпорта = "ПоступлениеИзЕАЭС") 
		                   И Источник.ЕстьМаркируемаяПродукцияГИСМ;
		ИнтеграцияГИСМУНФ.РассчитатьСтатусИнформированияГИСМДляДокументаРаспоряжения(Источник, ЗаписьТребуется);

		ИнтеграцияГИСМУНФ.РассчитатьСтатусИнформированияГИСМДляДокументаРаспоряжения(Источник, Истина);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОСписанииКиЗГИСМ")
		  Или ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ")
		  Или ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОбИмпортеМаркированныхТоваровГИСМ") Тогда
		
		ИнтеграцияГИСМУНФ.РассчитатьСтатусИнформированияГИСМДляДокументаСРаспоряжением(Источник);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах") Тогда
		
		ЗаписьТребуется = Источник.ЕстьМаркируемаяПродукцияГИСМ;
		ИнтеграцияГИСМУНФ.РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, ЗаписьТребуется);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.МаркировкаТоваровГИСМ")
		Или ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремаркировкаТоваровГИСМ") Тогда
		
		ИнтеграцияГИСМУНФ.РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполненияПредставленияТоваров

// Заполняет представление номенклатуры в документах уведомлениях по номерам КиЗ, указанным в документе основании.
//
// Параметры:
//  Основание  - ДокументСсылка - документ, являющийся основанием для уведомления.
//  НомераКиЗ  - ТабличнаяЧастьДокумента - ТЧ, которая содержит колонку НомерКиЗ.
//
Процедура ЗаполнитьПредставлениеТоваровУведомленияПоНомерамКиЗОснования(Основание, НомераКиЗ) Экспорт
	
	Если Не ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НомераКиЗ.НомерСтроки КАК НомерСтроки,
	|	НомераКиЗ.НомерКиЗ КАК НомерКиЗ
	|ПОМЕСТИТЬ втНомераКиЗ
	|ИЗ
	|	&НомераКиЗ КАК НомераКиЗ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗАпасы.Номенклатура КАК Номенклатура,
	|	ЗАпасы.Характеристика КАК Характеристика,
	|	СерииОснования.СерийныйНомер КАК Серия,
	|	СерииОснования.СерийныйНомер.НомерКиЗГИСМ КАК НомерКиЗ
	|ПОМЕСТИТЬ втСерииОснования
	|ИЗ
	|	Документ.#ДокументОснование#.СерийныеНомера КАК СерииОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.#ДокументОснование#.Запасы КАК ЗАпасы
	|		ПО (ЗАпасы.Ссылка = СерииОснования.Ссылка)
	|			И (ЗАпасы.КлючСвязи = СерииОснования.КлючСвязи)
	|ГДЕ
	|	СерииОснования.Ссылка = &Основание
	|	И СерииОснования.СерийныйНомер.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				втНомераКиЗ.НомерКиЗ КАК НомерКиЗ
	|			ИЗ
	|				втНомераКиЗ КАК втНомераКиЗ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНомераКиЗ.НомерСтроки КАК НомерСтроки,
	|	втСерииОснования.Номенклатура КАК Номенклатура,
	|	втСерииОснования.Характеристика КАК Характеристика,
	|	втСерииОснования.Серия КАК Серия
	|ИЗ
	|	втСерииОснования КАК втСерииОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНомераКиЗ КАК втНомераКиЗ
	|		ПО (втНомераКиЗ.НомерКиЗ = втСерииОснования.НомерКиЗ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки");
	

	
	Запрос.УстановитьПараметр("НомераКиЗ", НомераКиЗ.Выгрузить(, "НомерСтроки,НомерКиЗ"));
	Запрос.УстановитьПараметр("Основание", Основание);
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ДокументОснование#", "РасходнаяНакладная");
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ДокументОснование#", "ПриходнаяНакладная");
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеЗапасов") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ДокументОснование#", "СписаниеЗапасов");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Для Каждого ТекСтрока Из НомераКиЗ Цикл
		
		Если Выборка.НайтиСледующий(ТекСтрока.НомерСтроки, "НомерСтроки") Тогда
			
			ТекСтрока.Номенклатура   = Выборка.Номенклатура;
			ТекСтрока.Характеристика = Выборка.Характеристика;
			ТекСтрока.Серия          = Выборка.Серия;
			ТекСтрока.НоменклатураПредставление = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(Выборка.Номенклатура,Выборка.Характеристика);
			
		Иначе
			
			ТекСтрока.Номенклатура   = Неопределено;
			ТекСтрока.Характеристика = Неопределено;
			ТекСтрока.Серия                     = Неопределено;
			ТекСтрока.НоменклатураПредставление = Неопределено;
			
		КонецЕсли;
		
		Выборка.Сбросить();
		
	КонецЦикла;
	
	
КонецПроцедуры

// Заполняет представление номенклатуры в документе "Уведомление о поступлении маркированной продукции" по номерам КиЗ, указанным в документе основании.
//
// Параметры:
//  Основание  - ДокументСсылка - документ, являющийся основанием для уведомления.
//  НомераКиЗ  - ТабличнаяЧастьДокумента - ТЧ, которая содержит колонку НомерКиЗ.
//
Процедура ЗаполнитьПредставлениеТоваровУведомленияОПоступлении(НомераКиЗ) Экспорт
	
	ИнтеграцияГИСМУНФ.ЗаполнитьПредставлениеТоваровУведомленияОПоступлении(НомераКИЗ);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаявкаНаВыпускКиЗ

// Проверяет корректность заказываемых КиЗ. В одном документе могут быть либо персонифицированные, либо неперсонифицированные КиЗ.
//
// Параметры:
//  Объект             - ДокументОбъект - документ, в котором выполняется проверка.
//  ИмяТабличнойЧасти  - Строка - имя табличной части, которая содержит заказываемые КиЗ.
//  Отказ              - Булево - устанавливается в Ложь, если проверка завершилась неудачей.
//
Процедура ПроверитьКорректностьПерсонифицованностиЗаказываемыхКиЗ(Объект, ИмяТабличнойЧасти, Отказ) Экспорт

	
КонецПроцедуры

// Проверяет указания характеристик в табличной части документа.
//
// Параметры:
//  Объект                         - ДокументОбъект - документ, в котором выполняется проверка.
//  МассивНепроверяемыхРеквизитов  - Массив - содержит реквизиты, для которых в метаданных установлен признак проверки, но они исключаются из платформенной проверки.
//  ИмяТаблицы                     - Строка - имя табличной части, которая содержит заказываемые КиЗ.
//  Отказ                          - Булево - устанавливается в Ложь, если проверка завершилась неудачей.
//
Процедура ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, ИмяТаблицы, Отказ) Экспорт
	
	
КонецПроцедуры

// Обрабатывает результат подбора заказываемых КиЗ в документе "Заявка на выпуск КиЗ".
//
// Параметры:
//  Форма              - УправляемаяФорма - форма, из которой был вызван подбор.
//  ВыбранноеЗначение  - Произвольный - результат, возвращенный обработкой подбора КиЗ.
//
Процедура ОбработкаПодбораЗаявкиНаВыпускКиЗ(Форма, ВыбранноеЗначение) Экспорт
	
	
КонецПроцедуры

// Дополняет условное оформление формы документа "Заявка на выпуск КиЗ".
//
// Параметры:
//  Форма              - УправляемаяФорма - форма, из которой был вызван подбор.
//
Процедура ДополнитьУсловноеОформлениеЗаявкаНаВыпускКиЗ(Форма) Экспорт
	
	
КонецПроцедуры

// Дополняет условное оформление формы документа "Уведомление об импорте".
//
// Параметры:
//  Форма              - УправляемаяФорма - форма, из которой был вызван подбор.
//
Процедура ДополнитьУсловноеОформлениеУведомлениеОбИмпорте(Форма) Экспорт
	
	
КонецПроцедуры

// Предоставляет возможность заполнить служебные реквизиты в ТЧ документа "Заявка на выпуск КиЗ" 
//
// Параметры:
//  Форма	 - УправляемаяФорма - Форма документа "Заявка на выпуск КиЗ"
//
Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧастиЗаявкиНаВыпускКиЗ(Форма) Экспорт
	
	
КонецПроцедуры

// Предоставляет возможность заполнить служебные реквизиты в ТЧ документа "Уведомление об импорте маркированных товаров"
//
// Параметры:
//  Форма - ТабличнаяЧасть - ТЧ "Товары "документа "Уведомление об импорте маркированных товаров".
//
Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧастиУведомлениеОбИмпорте(Товары) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Панель1СМаркировка

// Проверяет наличие права чтения на документ и функциональную опцию использования,
// которым отражается факт розничных продаж.
//
// Возвращаемое значение:
//   Булево   - Истина, если право есть, Ложь в обратном случае.
//
Функция ДоступенОтчетОРозничныхПродажах() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Проверяет наличие права чтения на документ и функциональную опцию использования,
// которыми отражается факт возврата от розничного покупателя.
//
// Возвращаемое значение:
//   Булево   - Истина, если право есть, Ложь в обратном случае.
//
Функция ДоступенВозвратТоваровОтРозничногоКлиента() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов, которыми оформляется факт розничных продаж,
// требующих дальнейшего действия для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаОтчетыОРозничныхПродажах() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов, которыми оформляется факт розничных продаж,
// требующих дальнейшего действия для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаОтчетыОРозничныхПродажахОтработайте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие В 
	|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;

	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов, которыми оформляется факт розничных продаж,
// требующих ожидания для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаОтчетыОРозничныхПродажахОжидайте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие В 
	|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	

	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов, которыми оформляется факт возврата от розничного покупателя,
// требующих дальнейшего действия для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаВозвратыТоваровОтРозничныхКлиентов() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ПриходнаяНакладная КАК ВозвратТоваровОтКлиента
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ВозвратТоваровОтКлиента.Ссылка
	|ГДЕ
	|	ВозвратТоваровОтКлиента.Ссылка ЕСТЬ НЕ NULL
	|	И ВозвратТоваровОтКлиента.ВидОперации = Значение(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриходнаяНакладная
	|	И (ВозвратТоваровОтКлиента.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов, которыми оформляется факт возврата от розничного покупателя,
// требующих дальнейшего действия или ожидания для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОтработайте() Экспорт
	
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ПриходнаяНакладная КАК ВозвратТоваровОтКлиента
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ВозвратТоваровОтКлиента.Ссылка
	|ГДЕ
	|	ВозвратТоваровОтКлиента.Ссылка ЕСТЬ НЕ NULL
	|	И ВозвратТоваровОтКлиента.ВидОперации = Значение(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие В 
	|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриходнаяНакладная
	|	И (ВозвратТоваровОтКлиента.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;

	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов, которыми оформляется факт возврата от розничного покупателя,
// требующих ожидания для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОжидайте() Экспорт
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ПриходнаяНакладная КАК ВозвратТоваровОтКлиента
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ВозвратТоваровОтКлиента.Ссылка
	|ГДЕ
	|	ВозвратТоваровОтКлиента.Ссылка ЕСТЬ НЕ NULL
	|	И ВозвратТоваровОтКлиента.ВидОперации = Значение(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие В 
	|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриходнаяНакладная
	|	И (ВозвратТоваровОтКлиента.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов "Уведомление о списании КиЗ",
// требующих дальнейшего действия для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаУведомленияОСписанииКиЗГИСМ() Экспорт
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.УведомлениеОСписанииКиЗГИСМ КАК УведомлениеОСписанииКиЗГИСМ
	|ПО
	|	СтатусыИнформированияГИСМ.ТекущееУведомление = УведомлениеОСписанииКиЗГИСМ.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.СписаниеЗапасов КАК ВнутреннееПотреблениеТоваров
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ВнутреннееПотреблениеТоваров.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.СписаниеЗапасов
	|	И (ВнутреннееПотреблениеТоваров.Ссылка ЕСТЬ НЕ NULL
	|	И (СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И (ВнутреннееПотреблениеТоваров.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(УведомлениеОСписанииКиЗГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (УведомлениеОСписанииКиЗГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов "Уведомление о списании КиЗ",
// требующих дальнейшего действия "оформите" для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаУведомленияОСписанииКиЗГИСМОформите() Экспорт
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.СписаниеЗапасов КАК ВнутреннееПотреблениеТоваров
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ВнутреннееПотреблениеТоваров.Ссылка
	|ГДЕ
	|	ВнутреннееПотреблениеТоваров.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.СписаниеЗапасов
	|	И (ВнутреннееПотреблениеТоваров.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов "Уведомление о отгрузке маркированных товаров",
// требующих дальнейшего действия для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаУведомленияОбОтгрузке() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ КАК УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ
	|ПО
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке = УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.РасходнаяНакладная КАК РеализацияТоваровУслуг
	|ПО
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = РеализацияТоваровУслуг.Ссылка
	|
	|ГДЕ
	|	((РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL ) И
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоКлиентом),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка))
	|	И (РеализацияТоваровУслуг.Организация = &Организация  ИЛИ
	|		&Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ДальнейшееДействие <>
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И (УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Ответственный = &Ответственный
	|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов "Уведомление о отгрузке маркированных товаров",
// требующих дальнейшего действия "оформите" для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаУведомленияОбОтгрузкеОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.РасходнаяНакладная КАК РеализацияТоваровУслуг
	|ПО
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = РеализацияТоваровУслуг.Ссылка
	|	
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL И
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоКлиентом),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)
	|	)
	|	И (РеализацияТоваровУслуг.Организация = &Организация ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов "Заявка на выпуск КиЗ",
// требующих дальнейшего действия для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаЗаявкиНаВыпускКиЗГИСМ()  Экспорт
	
	Возврат ИнтеграцияГИСМУНФ.ТекстЗапросаЗаявкиНаВыпускКиЗГИСМ();
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов "Заявка на выпуск КиЗ",
// требующих дальнейшего действия "оформите" для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаЗаявкиНаВыпускКиЗГИСМОформите()  Экспорт
	
	Возврат ИнтеграцияГИСМУНФ.ТекстЗапросаЗаявкиНаВыпускКиЗГИСМОформите();
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов "Уведомление о ввозе маркированных товаров из ЕАЭС",
// требующих дальнейшего действия для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаУведомленияОВвозеИзЕАЭС() Экспорт
	
	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ КАК УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ
	|		ПО СтатусыИнформированияГИСМ.ТекущееУведомление = УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслуг
	|		ПО СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка ЕСТЬ НЕ NULL 
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриходнаяНакладная
	|	И ПоступлениеТоваровУслуг.Контрагент.СтранаРегистрации.Код В (""112"", ""398"", ""051"", ""417"")
	|	И (СтатусыИнформированияГИСМ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует), ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ), ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|				И (ПоступлениеТоваровУслуг.Организация = &Организация
	|					ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|			ИЛИ УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Ссылка ЕСТЬ НЕ NULL 
	|				И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|				И (УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Организация = &Организация
	|					ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|				И (УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Ответственный = &Ответственный
	|					ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО));";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов "Уведомление о ввозе маркированных товаров из ЕАЭС",
// требующих дальнейшего действия "оформите" для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаУведомленияОВвозеИзЕАЭСОформите() Экспорт
	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслуг
	|		ПО СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка ЕСТЬ НЕ NULL 
	|	И СтатусыИнформированияГИСМ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует), ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ), ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриходнаяНакладная
	|	И ПоступлениеТоваровУслуг.Контрагент.СтранаРегистрации.Код В ( ""112"", ""398"", ""051"", ""417"")
	|	И (СтатусыИнформированияГИСМ.Документ.Организация = &Организация
	|			ИЛИ &Организация = НЕОПРЕДЕЛЕНО);";
	Возврат ТекстЗапроса;
	
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов "Уведомление об импорте маркированных товаров",
// требующих дальнейшего действия для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаУведомленияОбИмпорте() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ КАК УведомлениеОбИмпортеМаркированныхТоваровГИСМ
	|		ПО СтатусыИнформированияГИСМ.ТекущееУведомление = УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслуг
	|		ПО СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка ЕСТЬ НЕ NULL 
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриходнаяНакладная
	|	И НЕ ПоступлениеТоваровУслуг.Контрагент.СтранаРегистрации.Код В ( ""643"", ""112"", ""398"", ""051"", ""417"")
	|	И (СтатусыИнформированияГИСМ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует), ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ), ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|				И (ПоступлениеТоваровУслуг.Организация = &Организация
	|					ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|			ИЛИ УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Ссылка ЕСТЬ НЕ NULL 
	|				И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|				И (УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Организация = &Организация
	|					ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|				И (УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Ответственный = &Ответственный
	|					ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО));";
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов "Уведомление об импорте маркированных товаров",
// требующих дальнейшего действия "оформите" для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаУведомленияОбИмпортеОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслуг
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриходнаяНакладная
	|	И НЕ ПоступлениеТоваровУслуг.Контрагент.СтранаРегистрации.Код В ( ""643"", ""112"", ""398"", ""051"", ""417"")
	|	И (ПоступлениеТоваровУслуг.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов ожидающих отправки "Отчеты о розничных продажах",
// требующих дальнейшего действия "оформите" для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаКоличествоОтчетовОРозничныхПродажахОжидающиеОтправки() Экспорт
	
	
	Возврат 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.ТекущееУведомление = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка ЕСТЬ НЕ NULL
	|	И (СтатусыИнформированияГИСМ.ДальнейшееДействие В (
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием)
	|	)
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И (ОтчетОРозничныхПродажах.Ответственный = &Ответственный
	|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
	|/////////////////////////////////////////////////////////////////////////////
	|ОБЪЕДИНИТЬ ВСЕ ";
	
КонецФункции

// Формирует текст запроса, вычисляющий количество документов ожидающих отправки "Возвраты товаров от клиентов",
// требующих дальнейшего действия "оформите" для отображения в панели "1С - Маркировка".
//
// Возвращаемое значение:
//   Строка   - текст запроса.
//
Функция ТекстЗапросаКоличествоВозвратовОтРозничныхКлиентовОжидающиеОтправки() Экспорт
	
	Возврат 
	"ВЫБРАТЬ 0 
	|/////////////////////////////////////////////////////////////////////////////
	|ОБЪЕДИНИТЬ ВСЕ ";
	
КонецФункции

#КонецОбласти

#Область ЗапросыДинамическихСписковРаспоряжений

// Формирует текст запроса для динамического списка распоряжений уведомлений об импорте.
//
// Возвращаемое значение:
//   Строка - текст запроса динамического списка.
//            Если пустой - то в динамическом списке остается библиотечный запрос.
//
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОбИмпорте() Экспорт
	
	Возврат ИнтеграцияГИСМУНФ.ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОбИмпорте();
	
КонецФункции

// Формирует текст запроса для динамического списка распоряжений уведомлений о ввозе из ЕАЭС.
//
// Возвращаемое значение:
//   Строка - текст запроса динамического списка.
//            Если пустой - то в динамическом списке остается библиотечный запрос.
//
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОВвозеИзЕАЭС() Экспорт
	
	Возврат ИнтеграцияГИСМУНФ.ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОВвозеИзЕАЭС();
	
КонецФункции

// Формирует текст запроса для динамического списка распоряжений уведомлений о списании.
//
// Возвращаемое значение:
//   Строка - текст запроса динамического списка.
//            Если пустой - то в динамическом списке остается библиотечный запрос.
//
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОСписании() Экспорт
	
	Возврат ИнтеграцияГИСМУНФ.ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОСписании();
	
КонецФункции

// Формирует текст запроса для динамического списка распоряжений уведомлений об отгрузке.
//
// Возвращаемое значение:
//   Строка - текст запроса динамического списка.
//            Если пустой - то в динамическом списке остается библиотечный запрос.
//
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОбОтгрузке() Экспорт
	
	
	Возврат ИнтеграцияГИСМУНФ.ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОбОтгрузке();
	
КонецФункции

// Формирует текст запроса для динамического списка заявок на выпуск КиЗ.
//
// Возвращаемое значение:
//   Строка - текст запроса динамического списка.
//            Если пустой - то в динамическом списке остается библиотечный запрос.
//
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийЗаявкаНаВыпускКиЗ() Экспорт
	
	Возврат ИнтеграцияГИСМУНФ.ТекстЗапросаДинамическогоСпискаРаспоряженийЗаявкаНаВыпускКиЗ();
	
КонецФункции

// В данной функции необходимо реализовать текст запроса, который определяет поступившие КиЗ для документа "Заявка на выпуск КиЗ".
//
//  Строка - текст запроса.
//
Функция ТекстЗапросаПоПоступившимКиЗ() Экспорт
	
	
	Возврат
	"ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления,
	|	НомераКиЗ.СостояниеПодтверждения,
	|	НомераКиЗ.НомерСтроки
	|ПОМЕСТИТЬ НомераКиЗ
	|ИЗ
	|	&НомераКиЗ КАК НомераКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления,
	|	НомераКиЗ.СостояниеПодтверждения,
	|	НомераКиЗ.НомерСтроки
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ПОМЕСТИТЬ ВсеДокументыПоступленияПоКиЗ
	|ИЗ
	|	РегистрСведений.СерийныеНомераГарантии КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерийныеНомера КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.СерийныйНомер = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслуг
	|		ПО ДвиженияСерийТоваров.Регистратор = ПоступлениеТоваровУслуг.Ссылка
	|	                         И &Организация = ПоступлениеТоваровУслуг.Организация
	|	                          И &Контрагент = ПоступлениеТоваровУслуг.Контрагент
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	| И ДвиженияСерийТоваров.Операция = Значение(Перечисление.ОперацииСерийныхНомеров.Приход)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления
	|ПОМЕСТИТЬ РанееСопоставленныеПоступления
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПриходнаяНакладная.ПустаяСсылка)
	|	И НомераКиЗ.НомерКиЗ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|	И НомераКиЗ.Ссылка <> &УведомлениеОПоступлении
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеДокументыПоступленияПоКиЗ.ДокументПоступления,
	|	ВсеДокументыПоступленияПоКиЗ.НомерКиЗ
	|ПОМЕСТИТЬ ДокументыПоступленияКандидаты
	|ИЗ
	|	ВсеДокументыПоступленияПоКиЗ КАК ВсеДокументыПоступленияПоКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РанееСопоставленныеПоступления КАК РанееСопоставленныеПоступления
	|		ПО ВсеДокументыПоступленияПоКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И ВсеДокументыПоступленияПоКиЗ.ДокументПоступления = РанееСопоставленныеПоступления.ДокументПоступления
	|ГДЕ
	|	РанееСопоставленныеПоступления.ДокументПоступления ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НеподтвержденныеКиЗ.НомерКиЗ КАК НомерКиЗ,
	|	НеподтвержденныеКиЗ.ДокументПоступления,
	|	НеподтвержденныеКиЗ.НомерСтроки,
	|	НеподтвержденныеКиЗ.СостояниеПодтверждения,
	|	ЕстьNULL(ДокументыПоступленияКандидаты.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриходнаяНакладная.ПустаяСсылка)) КАК ДокументПоступленияКандидат
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПоступленияКандидаты КАК ДокументыПоступленияКандидаты
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ДокументыПоступленияКандидаты.НомерКиЗ
	|ИТОГИ ПО
	|	НомерКиЗ";
	
КонецФункции

#КонецОбласти

#КонецОбласти
