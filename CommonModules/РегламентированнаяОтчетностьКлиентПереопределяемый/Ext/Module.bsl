
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА РАСШИФРОВКИ
//

// Процедура выводит форму расшифровки.
//
// Параметры:
//	ИДОтчета - Строка - идентификатор отчета (совпадает с именем объекта метаданных).
// 	ИДРедакцииОтчета - Строка - идентификатор редакции формы отчета (совпадает с именем формы объекта метаданных).
//  ИДИменПоказателей - Массив - массив идентификаторов имен показателей, по которым формируется расшифровка.
//  ПараметрыОтчета - Структура - структура параметров отчета, необходимых для формирования расшифровки.
// 
// Пример:
// 	Если ИДОтчета = "РегламентированныйОтчетБухОтчетность" Тогда
//		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв1" Тогда
//			ОткрытьРасшифровкуБухОтчетностьФормаОтчета2011Кв1(ИДИменПоказателей, ПараметрыОтчета);
//		КонецЕсли;
// 	КонецЕсли;
//
Процедура ОткрытьРасшифровкуОтчета(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета) Экспорт
	
КонецПроцедуры

Процедура ОткрытьФормуПомощникаПоУчетуНДС(ПараметрыОткрытияПомощника) Экспорт
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ КАЛЕНДАРЯ БУХГАЛТЕРА
//

// Функция возвращает имя формы, используемой для уплаты налога.
// 
// Пример:
//  Возврат "Документ.ПлатежноеПоручение.ФормаОбъекта";
//
Функция ИмяФормыДляУплатыНалога() Экспорт
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ СПИСКА ЗАДАЧ БУХГАЛТЕРА
//

// Процедура открывает форму списка задач бухгалтера.
//
Процедура ОткрытьКалендарь(Владелец, Организация, СтандартнаяОбработка) Экспорт
			
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ИНТЕРФЕЙСА ВЗАИМОДЕЙСТВИЯ С КОНФИГУРАЦИЯМИ (БИБЛИОТЕКАМИ) - ПОТРЕБИТЕЛЯМИ
//

// Процедура переопределяет создание формы РСВ-1 из списка регламентированных отчетов.
//
// Параметры:
//  ОписаниеРСВ_1            – структура с полями:
//   Организация             – организация;
//   ДатаНачалаПериодаОтчета - дата;
//   ДатаКонцаПериодаОтчета  - дата;
//   КорректирующаяФорма     - булево;
//  СтандартнаяОбработка     – булево.
//
Процедура ПриСозданииРСВ_1ИзСпискаРеглОтчетов(ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт

КонецПроцедуры

// Процедура переопределяет открытие формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//  Ссылка                   – ссылка на регламентированный отчет;
//  ОписаниеРСВ_1            – структура с полями:
//   Организация             – организация;
//   ДатаНачалаПериодаОтчета - дата;
//   ДатаКонцаПериодаОтчета  - дата;
//   КорректирующаяФорма     - булево;
//  СтандартнаяОбработка     – булево.
//
Процедура ПриОткрытииРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт

КонецПроцедуры

// Процедура переопределяет поведение при печати формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//  Ссылка                   – ссылка на регламентированный отчет;
//  ОписаниеРСВ_1            – структура с полями:
//   Организация             – организация;
//   ДатаНачалаПериодаОтчета - дата;
//   ДатаКонцаПериодаОтчета  - дата;
//   КорректирующаяФорма     - булево;
//  СтандартнаяОбработка     – булево.
//
Процедура ПриПечатиРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт

КонецПроцедуры

// Процедура переопределяет поведение при выгрузке формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//  Ссылка                   – ссылка на регламентированный отчет;
//  ОписаниеРСВ_1            – структура с полями:
//   Организация             – организация;
//   ДатаНачалаПериодаОтчета - дата;
//   ДатаКонцаПериодаОтчета  - дата;
//   КорректирующаяФорма     - булево;
//  СтандартнаяОбработка     – булево.
//
Процедура ПриВыгрузкеРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт

КонецПроцедуры

// Процедура переопределяет поведение при проверке выгрузки формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//  Ссылка                   – ссылка на регламентированный отчет;
//  ОписаниеРСВ_1            – структура с полями:
//   Организация             – организация;
//   ДатаНачалаПериодаОтчета - дата;
//   ДатаКонцаПериодаОтчета  - дата;
//   КорректирующаяФорма     - булево;
//  СтандартнаяОбработка     – булево.
//
Процедура ПриПроверкеВыгрузкиРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт

КонецПроцедуры

// Процедура открывает форму с информацией об изменениях.
//
// Параметры:
//  ИмяОтчета - Строка - имя отчета в дереве объектов метаданных;
//  ИмяФормы  - Строка - имя формы отчета;
//  Форма     - УправляемаФорма - форма, из которой вызывается процедура.
//
Процедура ПредупредитьОбИзменениях(ИмяОтчета, ИмяФормы, Форма) Экспорт
	
КонецПроцедуры

// Процедура изменяет признак вывода предупреждения об изменениях.
//
// Параметры:
//  ИмяОтчета - Строка - имя отчета в дереве объектов метаданных;
//  ИмяФормы  - Строка - имя формы отчета;
//  ТребуетсяПредупредитьОбИзменениях - Булево - признак вывода предупреждения об изменениях;
//  Форма     - УправляемаФорма - форма, из которой вызывается процедура.
//
Процедура ИзменитьПризнакВыводаПредупрежденияОбИзменениях(ИмяОтчета, ИмяФормы, ТребуетсяПредупредитьОбИзменениях, Форма) Экспорт
	
КонецПроцедуры

// Процедура уточняет данные для автозаполнения уведомления.
//
// Параметры:
//  ИДОтчета                 - Строка - имя отчета в дереве объектов метаданных
//  ПараметрыОтчета          - Структура обязательных параметров
//  ФормаОтчета              - УправляемаФорма - ссылка на заполняемую форму уведомления
//  ОписаниеОповещения       - процедура для продолжения процедуры автозаполнения
//  СтандартнаяОбработка     - Булево, если Истина то никакой новой информации не 
//                           добавляется для автозаполнения, необходимо продолжить автозаполнение в самой форме
//
Процедура ПередЗаполнениемОтчета(ИДОтчета, ПараметрыОтчета, ФормаОтчета, ОписаниеОповещения, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Процедура переопределяет вывод дополнительной информации о регламентированном отчете
//
// Параметры:
//  Ссылка                    – ссылка на регламентированный отчет.
//  ИмяФормыПодробнееОбОтчете - Строка, имя формы, которая будет открыта с параметром "Ссылка" для предоставления дополнительной информации об отчете.
//  СтандартнаяОбработка      - Булево, если Истина - будет открыта форма по имени: "Обработка.ОбщиеОбъектыРеглОтчетности.Форма." + ИмяФормыПодробнееОбОтчете;
//                                                    иначе - можно выполнить свой алгоритм обработки ПодробнееОбОчете()
//
Процедура ПодробнееОбОчете(Ссылка, ИмяФормыПодробнееОбОтчете, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Процедура вызывается в формах отчета "РегламентированныйОтчетРСВ1"
// при нажатии кнопки перехода в специализированное рабочее место подготовки
// отчетности в ПФР.
//
Процедура ПерейтиВРабочееМестоПФР(Организация, ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета) Экспорт
			
КонецПроцедуры

// Процедура выполняет назначаемую команду формы.
//
// Параметры:
//   Форма - форма, из которой вызвана команда.
//
Процедура ВыполнитьНазначаемуюКомандуНаКлиенте(Форма) Экспорт
	
КонецПроцедуры

// Процедура выполняет назначаемую команду формы "РегламентированнаяОтчетность".
//
// Параметры:
//   Форма   - Форма, из которой вызвана команда.
//   Команда - КомандаФормы, назначенная команда формы.
//
// Пример:
//   Если Команда.Имя = "ОтчетыПоказатьДополнительнуюИнформацию" Тогда
//   	ПоказатьПредупреждение(, "Заполните обработчик команды """ + Команда.Имя + """");
//   КонецЕсли;
//
Процедура ФормаРегламентированнойОтчетности_ВыполнитьНазначаемуюКомандуНаКлиенте(Форма, Команда) Экспорт
	
КонецПроцедуры

// Процедура переопределяет имя формы выбора периода для установки отбора в форме "1С Отчетность".
//
// Параметры:
//  ПолноеИмяФормыВыбораПериода  - Строка - Полный путь к форме выбора периода.
//
// Пример:
//  ПолноеИмяФормыВыбораПериода = "ОбщаяФорма.ВыборПроизвольногоПериода";
//
Процедура ФормаРегламентированнойОтчетности_ИмяФормыВыбораПериода(ПолноеИмяФормыВыбораПериода) Экспорт
	
КонецПроцедуры

// Процедура проверяет, выполнялась ли ранее настройка автозаполнения.
//
// Параметры:
// ПараметрыОтчета                        - Структура 
// ВыполняемоеОповещение                  - ОписаниеОповещения - Описание оповещения, которое будет вызвано после выполнения данной операции.
//                                                       В качестве результата описания оповещения должно передаваться булево значение, от которого зависит
//                                                       будет ли выполнятся дальнейший код в процедуре, которая вызвала этот метод.
//
Процедура ПроверитьНастройкиЗаполненияОтчета(ПараметрыОтчета, ВыполняемоеОповещение) Экспорт
	
КонецПроцедуры	

// Процедура открывает форму настройки автозаполнения.
//
Процедура ОткрытьФормуНастройкиАвтозаполнения(ПараметрыФормы) Экспорт
             	
КонецПроцедуры

// Процедура реализует печать объектов, отображаемых на закладке Отчеты и Уведомления формы Отчетность
// Параметры
//	Ссылка - СправочникСсылка, ДокументСсылка - Ссылка на объект, который необходимо напечатать
//		Если для данного объекта печать невозможна - нужно выдавать соотвествующее предупрежедние
//	ИмяМакетаДляПечати - Строка - имя макета для печати, при использовании которого необходимо распечатать объект
//		Если ИмяМакетаДляПечати пустое, то для печати использовать основной макет
//	СтандартнаяОбработка - Булево - Если СтандартнаяОбработка = Истина, то будет выполнена печать с помощью подсистемы печати из БСП. 
Процедура Печать(Ссылка, ИмяМакетаДляПечати, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Процедура реализует выгрузку объектов, отображаемых на закладке Отчеты и Уведомления формы Отчетность
// Параметры
//	Ссылка - СправочникСсылка, ДокументСсылка - Ссылка на объект, который необходимо выгрузить
//Если для данного объекта выгрузка невозможна - нужно выдавать соотвествующее предупрежедние
//
Процедура Выгрузить(Ссылка) Экспорт
	
КонецПроцедуры

// Процедура реализует создание объектов, отображаемых на закладке Уведомления и Отчетность формы Отчетность, не входящие в состав БРО 
// Параметры
//	Организация - СправочникСсылка.Организации - Организация, по которой нужно создать объект
//  Тип  - Тип - Тип объекта, который необходимо создать
//  СтандартнаяОбработка - Булево - Если СтандартнаяОбработка = Истина, то будет выполнено создание объекта стандартным образом
Процедура СоздатьНовыйОбъект(Организация, Тип, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Процедура открывает окно выбора обособленных подразделений в случае, когда стандартный механизм 
// по каким-либо причинам не может быть использован
// Вызывается из форм статистики (ЗП-*, П-4 и некоторых других)
// В качестве callback-процедуры следует использовать РегламентированнаяОтчетностьКлиент.ОбработкаВыбораОбособленногоПодразделения
// Параметры
//  Форма - форма отчета откуда открывается выбор подразделения
//  СтандартнаяОбработка - если отработано необходимо выставить СтандартнаяОбработка = Ложь
// Пример для ЗУП 3.0 КОРП
//  Там форма выбора это форма списка с параметром открытия РежимВыбора = Истина
//  СтандартнаяОбработка = Ложь;
//  Отбор = Новый Структура("Владелец, ИмеетНомерТерриториальногоОрганаРосстата", Форма.СтруктураРеквизитовФормы.Организация, Истина);
//  Параметры = Новый Структура("Отбор, РежимВыбора", Отбор, Истина);
//  ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработкаВыбораОбособленногоПодразделения", РегламентированнаяОтчетностьКлиент, Новый Структура("Форма", Форма));
//  ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаВыбора",Параметры,Форма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//
Процедура ОбработкаВыбораПоляОбособленныхПодразделений(Форма, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Процедура определяет, открывать или нет из формы "1С-Отчетность" файлы, присоединенные к объекту.
//
// Параметры:
//  ПараметрыПроверки - Структура:
//   "Владелец"             - СправочникСсылка, ДокументСсылка - ссылка на объект;
//   "ТекстПредупреждения"  - Строка - если заполнен и СтандартнаяОбработка = Ложь, то будет выведено предупреждение;
//   "СтандартнаяОбработка" - Булево - если Ложь, открытие присоединенных файлов не выполняется.
//
// Пример:
//  Если ТипЗнч(ПараметрыПроверки.Владелец) = Тип("СправочникСсылка.МакетыПенсионныхДел") Тогда
//  	
//  	ПараметрыПроверки.СтандартнаяОбработка = Ложь;
//  	
//  	ПараметрыПроверки.ТекстПредупреждения = НСтр(
//  	"ru='Присоединение файлов к ""Макетам пенсионных дел"" из списка отчетов не предусмотрено'");
//  	
//  КонецЕсли;
//
Процедура ПроверитьВладельцаПриОткрытииПрисоединенныхФайловИзСпискаОтчетов(ПараметрыПроверки) Экспорт
	
КонецПроцедуры

// Дополняет функционал обработчика "ОбработкаОповещения" общей формы "Регламентированная отчетность",
// здесь можно добавить новую функциональность к существующей обработке оповещения.
//
// Параметры:
//  ИмяСобытия - Строка - Имя события может быть использовано для идентификации сообщений принимающими их формами.
//  Параметр   - Параметр сообщения. Могут быть переданы любые необходимые данные.
//  Источник   - Источник события. Например, в качестве источника может быть указана другая форма.
//  Форма      - УправляемаяФорма - Общая форма "Регламентированная отчетность".
//
// Пример:
//  Если ИмяСобытия = "Получены новые сообщения 1С-Отчетности" И Источник <> Форма Тогда
//      Оповестить("Закрыть форму новых сообщений 1С-Отчетности",, Форма);
//  КонецЕсли;
//
Процедура ФормаРегламентированнойОтчетности_ОбработкаОповещения(ИмяСобытия, Параметр, Источник, Форма) Экспорт
	
КонецПроцедуры
