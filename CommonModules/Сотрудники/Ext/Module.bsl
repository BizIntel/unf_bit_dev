/////////////////////////////////////////////////////////////////////////////////
//// Процедуры и функции работы с данными сотрудников и расчетами с ними


/////////////////////////////////////////////////////////////////////////////////
//// Заполнение первоначальных сведений по сотрудникам

// Добавляет запись в набор записей регистра "НДФЛРазмерВычетов"
//
Процедура ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, КодВычета, Размер, ОграничениеПоДоходам)
	Запись = Неопределено;
	
	Для Каждого ПоискЗаписи Из НаборЗаписей Цикл
		Если ПоискЗаписи.КодВычета = КодВычета И
			ПоискЗаписи.Период = ДатаСведений Тогда
			Запись = ПоискЗаписи;
		КонецЕсли;
	КонецЦикла;
	
	Если Запись= Неопределено Тогда
		Запись = НаборЗаписей.Добавить();
	КонецЕсли;
	
	Запись.КодВычета            = КодВычета;
	Запись.Период               = ДатаСведений;
	Запись.Размер               = Размер;
	Запись.ОграничениеПоДоходам = ОграничениеПоДоходам;

КонецПроцедуры

// Выполняет заполнение реквизитов справочника "ВычетыНДФЛ" 
//
Процедура ЗаполнитьРазмерыВычетовНДФЛ() Экспорт
	
	ВычетыНДФЛ = Справочники.ВычетыНДФЛ;

	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	НаборЗаписей = РегистрыСведений.НДФЛРазмерВычетов.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
	
	ДатаСведений = Дата("20010101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код105, 3000, 0);
	
	ДатаСведений = Дата("20080101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код311, 2000000, 0);
	
	// Добавляем записи
	ДатаСведений = Дата("20090101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код103,  400, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код108, 1000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код110, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код109, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код112, 4000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код111, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код113, 4000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код115, 1000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код116, 1000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код119, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код120, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код123, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код124, 2000, 280000);
	
	ДатаСведений = Дата("20110101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код109, 3000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код112, 6000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код113, 6000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код116, 3000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код109, 3000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код120, 6000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код124, 6000, 280000);
	
	ДатаСведений = Дата("20120101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код103,	   0, 0);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код108, 1400, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код110, 2800, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код111, 2800, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код108, 1400, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код115, 1400, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код119, 2800, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код123, 2800, 280000);
	
	// Запишем набор записей в режиме добавления
	НаборЗаписей.Записать();
	
КонецПроцедуры


Функция ОтветственныеЛицаОрганизаций(Организация, ДатаСреза, Исполнитель = Неопределено) Экспорт
	
	Результат = Новый Структура("Руководитель, РуководительДолжность, ГлавныйБухгалтер, Кассир, Исполнитель, ИсполнительДолжность, ОтветственныйЗаРегистры");
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОтветственныеЛицаОрганизацийСрезПоследних.ТипОтветственногоЛица,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Сотрудник КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", ДатаСреза);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТипОтветственногоЛица = Перечисления.ТипыОтветственныхЛиц.ГлавныйБухгалтер Тогда
			Результат.ГлавныйБухгалтер = Выборка.ФизическоеЛицо;
		ИначеЕсли Выборка.ТипОтветственногоЛица = Перечисления.ТипыОтветственныхЛиц.Кассир Тогда
			Результат.Кассир = Выборка.ФизическоеЛицо;
		ИначеЕсли Выборка.ТипОтветственногоЛица = Перечисления.ТипыОтветственныхЛиц.Руководитель Тогда
			Результат.Руководитель = Выборка.ФизическоеЛицо;
		КонецЕсли;
	КонецЦикла;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ЮридическоеФизическоеЛицо") = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		Результат.Руководитель = Организация;
		Результат.РуководительДолжность = "Руководитель";
		Если НЕ ЗначениеЗаполнено(Результат.Исполнитель) Тогда
			Результат.Исполнитель = Организация;
			Результат.ИсполнительДолжность = "Руководитель";
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ОтветственныеЛицаОрганизаций()

/////////////////////////////////////////////////////////////////////////////////
//// ПРОЦЕДУРА ДВИЖЕНИЯ ПО РЕГИСТРАМ



// Выполняет движения по регистру накопления ПримененныеВычетыПоНДФЛ
// 
Процедура ОтразитьПримененныеВычетыПоНДФЛ(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПримененныеВычетыПоНДФЛ;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ПримененныеВычетыПоНДФЛ.Записывать = Истина;
	Движения.ПримененныеВычетыПоНДФЛ.Загрузить(Таблица);

КонецПроцедуры


// Выполняет движения по регистру накопления НДФЛДоходы
// 
Процедура ОтразитьНДФЛДоходы(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДФЛДоходы;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.НДФЛДоходы.Записывать = Истина;
	Движения.НДФЛДоходы.Загрузить(Таблица);

КонецПроцедуры



// Выполняет движения по регистру накопления ТаблицаСтраховыеВзносыДоходы
// 
Процедура ОтразитьСтраховыеВзносыДоходы(ДокументСсылка, ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&ПериодДокумента КАК Период,
	|	&Организация,
	|	ТаблицаНачисления.Сотрудник,
	|	ВидыНачисленийИУдержаний.ВидДоходаПоСтраховымВзносам КАК ВидДохода,
	|	СУММА(ВЫБОР
	|			КОГДА ВидыНачисленийИУдержаний.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление)
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаНачисления.Сумма * КурсыВалютРасчетов.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК СуммаНачисления,
	|	СУММА(ВЫБОР
	|			КОГДА ВидыНачисленийИУдержаний.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление)
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаНачисления.Сумма * КурсыВалютРасчетов.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	0 КАК Скидка
	|ИЗ
	|	Документ.НачислениеЗарплаты.НачисленияУдержания КАК ТаблицаНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНачисленийИУдержаний КАК ВидыНачисленийИУдержаний
	|		ПО (ТаблицаНачисления.Ссылка = &Ссылка)
	|			И (ВидыНачисленийИУдержаний.Ссылка = ТаблицаНачисления.ВидНачисленияУдержания)
	|			И (ВидыНачисленийИУдержаний.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление)
	|				ИЛИ ВидыНачисленийИУдержаний.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Удержание))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ПериодДокумента, Валюта = &ВалютаУчета) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ПериодДокумента, ) КАК КурсыВалютРасчетов
	|		ПО (&ВалютаДокумента = КурсыВалютРасчетов.Валюта)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНачисления.Сотрудник,
	|	ВидыНачисленийИУдержаний.ВидДоходаПоСтраховымВзносам";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ПериодДокумента", КонецМесяца(ДокументСсылка.ПериодРегистрации));
	Запрос.УстановитьПараметр("Организация", ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("ВалютаДокумента", ДокументСсылка.ВалютаДокумента);
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.СтраховыеВзносыДоходы.Загрузить(Таблица);
	
	Движения.СтраховыеВзносыДоходы.Записать();
	Движения.СтраховыеВзносыДоходы.Записывать = Ложь;
	
КонецПроцедуры

// Выполняет движения по регистру накопления РасчетыСФондамиПоСтраховымВзносам
// 
Процедура ОтразитьРасчетыСФондамиПоСтраховымВзносам(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРасчетыСФондамиПоСтраховымВзносам;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.РасчетыСФондамиПоСтраховымВзносам.Записывать = Истина;
	Движения.РасчетыСФондамиПоСтраховымВзносам.Загрузить(Таблица);

КонецПроцедуры

// Выполняет движения по регистру накопления НДФЛРасчетыНалоговыхАгентовСБюджетом
// 
Процедура ОтразитьНДФЛРасчетыНалоговыхАгентовСБюджетом(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДФЛРасчетыНалоговыхАгентовСБюджетом;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.НДФЛРасчетыНалоговыхАгентовСБюджетом.Записывать = Истина;
	Движения.НДФЛРасчетыНалоговыхАгентовСБюджетом.Загрузить(Таблица);

КонецПроцедуры

// Функция рассчитывает среднесписочную численность работников
//
// Параметры:
//		Организация
//		НачалоПериода
//		КонецПериода
//
Функция СреднесписочнаяЧисленностьРаботающих(Организация, НачалоПериода, КонецПериода) Экспорт 
	
	ВсегоЧисленность = 0;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	НачМесяца = НачалоПериода;
	ДатыПоМесяцамТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(НачМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК МесяцОтчета";
	ДатыПоМесяцамТекст = ДатыПоМесяцамТекст +"
	|ПОМЕСТИТЬ ВТМесяцыОтчета";
	Пока НачМесяца < НачалоМесяца(КонецПериода) Цикл
		НачМесяца = КонецМесяца(НачМесяца) + 1;
		ДатыПоМесяцамТекст = ДатыПоМесяцамТекст +"
		|ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(НачМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	ДатыПоМесяцамТекст = ДатыПоМесяцамТекст +"
	|ИНДЕКСИРОВАТЬ ПО МесяцОтчета";
	Запрос.Текст = ДатыПоМесяцамТекст;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыРаботыСотрудниковДатаПриема.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТСотрудникиОрганизации
	|ИЗ
	|	Документ.ПриемНаРаботу.Сотрудники КАК ПериодыРаботыСотрудниковДатаПриема
	|ГДЕ
	|	ПериодыРаботыСотрудниковДатаПриема.Ссылка.Организация = &Организация
	|	И ПериодыРаботыСотрудниковДатаПриема.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	И ПериодыРаботыСотрудниковДатаПриема.Период <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ПериодыРаботыСотрудниковДатаПриема.Период <= &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СРЕДНЕЕ(ВЫРАЗИТЬ(СредняяЧисленностьПоМесяцам.СредняяЧисленность КАК ЧИСЛО(15, 0))) КАК СредняяЧисленность
	|ИЗ
	|	(ВЫБРАТЬ
	|		МесяцыОтчета.МесяцОтчета КАК МесяцОтчета,
	|		СУММА(ЕСТЬNULL(РАЗНОСТЬДАТ(ПериодыРаботыПоМесяцам.ДатаС, ЕСТЬNULL(ПериодыРаботыПоМесяцам.ДатаПо, НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(МесяцыОтчета.МесяцОтчета, МЕСЯЦ), ДЕНЬ)), ДЕНЬ) + 1, 0)) / РАЗНОСТЬДАТ(МесяцыОтчета.МесяцОтчета, ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(МесяцыОтчета.МесяцОтчета, МЕСЯЦ), СЕКУНДА, 1), ДЕНЬ) КАК СредняяЧисленность
	|	ИЗ
	|		ВТМесяцыОтчета КАК МесяцыОтчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				МесяцыОтчета.МесяцОтчета КАК МесяцОтчета,
	|				ПериодыРаботы.Сотрудник КАК Сотрудник,
	|				ВЫБОР
	|					КОГДА ПериодыРаботы.ДатаНачала > МесяцыОтчета.МесяцОтчета
	|						ТОГДА ПериодыРаботы.ДатаНачала
	|					ИНАЧЕ МесяцыОтчета.МесяцОтчета
	|				КОНЕЦ КАК ДатаС,
	|				ВЫБОР
	|					КОГДА ПериодыРаботы.ДатаОкончания > КОНЕЦПЕРИОДА(МесяцыОтчета.МесяцОтчета, МЕСЯЦ)
	|						ТОГДА КОНЕЦПЕРИОДА(МесяцыОтчета.МесяцОтчета, МЕСЯЦ)
	|					ИНАЧЕ ПериодыРаботы.ДатаОкончания
	|				КОНЕЦ КАК ДатаПо
	|			ИЗ
	|				ВТМесяцыОтчета КАК МесяцыОтчета
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						ДатаНачала.Сотрудник КАК Сотрудник,
	|						ДатаНачала.Организация КАК Организация,
	|						ДатаНачала.Период КАК ДатаНачала,
	|						МИНИМУМ(ЕСТЬNULL(ДатыОкончания.Период, &КонецПериода)) КАК ДатаОкончания
	|					ИЗ
	|						(ВЫБРАТЬ
	|							РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|							РаботникиОрганизаций.Организация КАК Организация,
	|							РаботникиОрганизаций.Период КАК Период
	|						ИЗ
	|							РегистрСведений.Сотрудники КАК РаботникиОрганизаций
	|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиОрганизации КАК ВТСотрудникиОрганизации
	|							ПО ВТСотрудникиОрганизации.Сотрудник = РаботникиОрганизаций.Сотрудник
	|						ГДЕ
	|							РаботникиОрганизаций.Должность <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)

	|							И РаботникиОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|						
	|						ОБЪЕДИНИТЬ ВСЕ
	|						
	|						ВЫБРАТЬ
	|							РаботникиОрганизацийСрезПоследних.Сотрудник,
	|							РаботникиОрганизацийСрезПоследних.Организация,
	|							РаботникиОрганизацийСрезПоследних.Период
	|						ИЗ
	|							РегистрСведений.Сотрудники.СрезПоследних(&НачалоПериода, Организация = &Организация) КАК РаботникиОрганизацийСрезПоследних
	|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиОрганизации КАК ВТСотрудникиОрганизации
	|							ПО ВТСотрудникиОрганизации.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|						ГДЕ
	|							РаботникиОрганизацийСрезПоследних.Должность <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)) КАК ДатаНачала

	|							ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|								РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|								РаботникиОрганизаций.Организация КАК Организация,
	|								ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1) КАК Период
	|							ИЗ
	|								РегистрСведений.Сотрудники КАК РаботникиОрганизаций
	|							ГДЕ
	|								 РаботникиОрганизаций.Должность = ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)

	|								И ВЫБОР
	|										КОГДА РаботникиОрганизаций.Должность = ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
	|											ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
	|										ИНАЧЕ РаботникиОрганизаций.Период
	|									КОНЕЦ <= ДОБАВИТЬКДАТЕ(&КонецПериода, ДЕНЬ, 1)
	|								И РаботникиОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода) КАК ДатыОкончания
	|							ПО ДатаНачала.Сотрудник = ДатыОкончания.Сотрудник
	|								И ДатаНачала.Организация = ДатыОкончания.Организация
	|								И ДатаНачала.Период < ДатыОкончания.Период
	|					
	|					СГРУППИРОВАТЬ ПО
	|						ДатаНачала.Сотрудник,
	|						ДатаНачала.Организация,
	|						ДатаНачала.Период) КАК ПериодыРаботы
	|					ПО (МесяцыОтчета.МесяцОтчета >= НАЧАЛОПЕРИОДА(ПериодыРаботы.ДатаНачала, МЕСЯЦ))
	|						И (МесяцыОтчета.МесяцОтчета <= КОНЕЦПЕРИОДА(ПериодыРаботы.ДатаОкончания, МЕСЯЦ))) КАК ПериодыРаботыПоМесяцам
	|			ПО МесяцыОтчета.МесяцОтчета = ПериодыРаботыПоМесяцам.МесяцОтчета
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МесяцыОтчета.МесяцОтчета) КАК СредняяЧисленностьПоМесяцам";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса <> Неопределено и Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			Если ЗначениеЗаполнено(Выборка.СредняяЧисленность) Тогда
				ВсегоЧисленность = Окр(Выборка.СредняяЧисленность);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВсегоЧисленность;
	
КонецФункции


Функция РаспределитьПеречисленныйНалогПоФизическимЛицам(Ссылка, Организация, ДатаОперации, Сумма, МесяцНалоговогоПериода) Экспорт

	ПеречисленныеСуммы = Новый ТаблицаЗначений();
	ПеречисленныеСуммы.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	ПеречисленныеСуммы.Колонки.Добавить("Сотрудник",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	
	Если Сумма = 0 Тогда
		Возврат ПеречисленныеСуммы;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.Сотрудник,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ ВТОстатки
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыНалоговыхАгентовСБюджетом.Остатки(
	|			&ДатаОперации,
	|			Организация = &Организация
	|				И ПериодРегистрации = &МесяцНалоговогоПериода ) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Сотрудник,
	|	СУММА(Остатки.Сумма) КАК Сумма
	|ИЗ
	|	ВТОстатки КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Сотрудник
	|
	|ИМЕЮЩИЕ
	|	СУММА(Остатки.Сумма) > 0;";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОперации", ДатаОперации);
	Запрос.УстановитьПараметр("МесяцНалоговогоПериода", МесяцНалоговогоПериода);
	
	Результат = Запрос.Выполнить().Выгрузить();
	РезультатРаспределения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
		Сумма,
		ОбщегоНазначения.ВыгрузитьКолонку(Результат,"Сумма"));
	Если РезультатРаспределения = Неопределено Тогда
		Возврат ПеречисленныеСуммы
	Иначе
		Индекс = 0;
		Для каждого СтрокаТЗ Из Результат Цикл
			НоваяСтрока = ПеречисленныеСуммы.Добавить();
			НоваяСтрока.Сотрудник = СтрокаТЗ.Сотрудник;
			НоваяСтрока.Сумма = РезультатРаспределения[Индекс];
			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПеречисленныеСуммы
	
КонецФункции

Функция РаспределитьПеречисленныйВзносПоФизическимЛицам(Ссылка, Организация, ДатаОперации, Сумма, ВидОбязательногоСтрахованияСотрудников) Экспорт

	ПеречисленныеСуммы = Новый ТаблицаЗначений();
	ПеречисленныеСуммы.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	ПеречисленныеСуммы.Колонки.Добавить("Сотрудник",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	
	Если Сумма = 0 Тогда
		Возврат ПеречисленныеСуммы;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыСФондамиПоСтраховымВзносам.Сотрудник КАК Сотрудник,
	|	РасчетыСФондамиПоСтраховымВзносам.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ ВТОстатки
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Остатки(
	|			&ДатаОперации,
	|			Организация = &Организация И ВидОбязательногоСтрахованияСотрудников = &ВидОбязательногоСтрахованияСотрудников И ЭтоСтраховыеВзносы) КАК РасчетыСФондамиПоСтраховымВзносам
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Сотрудник,
	|	СУММА(Остатки.Сумма) КАК Сумма
	|ИЗ
	|	ВТОстатки КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Сотрудник
	|
	|ИМЕЮЩИЕ
	|	СУММА(Остатки.Сумма) > 0;";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОперации", ДатаОперации);
	Запрос.УстановитьПараметр("ВидОбязательногоСтрахованияСотрудников", ВидОбязательногоСтрахованияСотрудников);
	
	Результат = Запрос.Выполнить().Выгрузить();
	РезультатРаспределения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
		Сумма,
		ОбщегоНазначения.ВыгрузитьКолонку(Результат,"Сумма"));
	Если РезультатРаспределения = Неопределено Тогда
		Возврат ПеречисленныеСуммы
	Иначе
		Индекс = 0;
		Для каждого СтрокаТЗ Из Результат Цикл
			НоваяСтрока = ПеречисленныеСуммы.Добавить();
			НоваяСтрока.Сотрудник = СтрокаТЗ.Сотрудник;
			НоваяСтрока.Сумма = РезультатРаспределения[Индекс];
			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПеречисленныеСуммы
	
КонецФункции

