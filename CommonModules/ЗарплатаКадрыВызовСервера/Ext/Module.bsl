////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Проверяет необходимость обработки данных связанной с изменениями свойств организации
// 
// Параметры:
//	СостояниеОрганизации - структура с данными организации
//		Ссылка
//		ПрименятьРайонныйКоэффициент
//		ПрименятьСевернуюНадбавку
//	ВозвращаемаяИнформация - структура с полями
//		ОбработатьСН
//		ОбработатьРК
//	
// Информация возвращается в переданном параметре ВозвращаемаяИнформация
// Если ВозвращаемаяИнформация.ОбработатьСН = Истина, то требуется обработка 
// данных по северным надбавкам (СН)
// Если ВозвращаемаяИнформация.ОбработатьРК = Истина, то требуется обработка 
// данных по районным коэффициентам (РК)
Процедура НеобходимостьОбработкиДанныхПриЗаписиОрганизации(СостояниеОрганизации, ВозвращаемаяИнформация) Экспорт
	ВозвращаемаяИнформация = Новый Структура("ОбработатьСН,ОбработатьРК,ПрименятьСевернуюНадбавку,ПрименятьРайонныйКоэффициент", Ложь, Ложь);
	Если НЕ СостояниеОрганизации.ПрименятьСевернуюНадбавку ИЛИ НЕ СостояниеОрганизации.ПрименятьРайонныйКоэффициент Тогда
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолученияСотрудниковОрганизаций.Организация = СостояниеОрганизации.Ссылка;
		
		КадровыйУчет.СоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудниковОрганизаций);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст  = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА 1 В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					1
		|				ИЗ
		|					ВТСотрудникиОрганизации КАК ОтобранныеСотрудники ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|						ПО
		|							Сотрудники.Ссылка = ОтобранныеСотрудники.Сотрудник
		|				ГДЕ
		|					Сотрудники.ТекущийПроцентСевернойНадбавки > 0
		|					И НЕ &ПрименятьСевернуюНадбавку)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОбработатьСН,
		|	ВЫБОР
		|		КОГДА 1 В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					1
		|				ИЗ
		|					Справочник.ПодразделенияОрганизаций КАК Подразделения
		|				ГДЕ
		|					Подразделения.Владелец = Организации.Ссылка
		|					И Подразделения.РайонныйКоэффициент <> 1
		|					И НЕ &ПрименятьРайонныйКоэффициент)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОбработатьРК
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &Ссылка
		|	И (Организации.ПрименятьСевернуюНадбавку <> &ПрименятьСевернуюНадбавку
		|			ИЛИ Организации.ПрименятьРайонныйКоэффициент <> &ПрименятьРайонныйКоэффициент)";
		Запрос.УстановитьПараметр("Ссылка", СостояниеОрганизации.Ссылка);
		Запрос.УстановитьПараметр("ПрименятьСевернуюНадбавку", СостояниеОрганизации.ПрименятьСевернуюНадбавку);
		Запрос.УстановитьПараметр("ПрименятьРайонныйКоэффициент", СостояниеОрганизации.ПрименятьРайонныйКоэффициент);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ВозвращаемаяИнформация, Выборка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Выполняет обработку данных при записи организации
// Список обработок передается как массив строковых идентификаторов параметром СписокОбработок
// Параметры:
//	Организация - ссылка на организацию
//	СписокОбработок - список обработок
//		Поддерживаются обработки:
//			УдалитьСН - удаление данных о северных надбавках
//			УдалитьРК - удаление данных о районных коэффициентах
Процедура ОбработкаДанныхПриЗаписиОрганизации(Организация, СписокОбработок) Экспорт
	Для Каждого ИмяОбработки Из СписокОбработок Цикл
		НачатьТранзакцию();
		Если ИмяОбработки = "УдалитьСН" Тогда
			УдалитьСНПоОрганизации(Организация);
		ИначеЕсли ИмяОбработки = "УдалитьРК" Тогда
			УдалитьРКПоОрганизации(Организация);
		КонецЕсли;
		ЗафиксироватьТранзакцию();
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьАдрес(Адрес) Экспорт
	
	Возврат УправлениеКонтактнойИнформацией.ПроверитьАдрес(Адрес);
	
КонецФункции

Функция ДанныеРегистрацииВНалоговомОргане(СтруктурнаяЕдиница, РегистрацияВНалоговомОргане) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияВНалоговомОргане, "Код,Наименование,КПП,КодПоОКАТО");
	
	Если РегистрацияВНалоговомОргане.Владелец.Метаданные().Реквизиты.Найти("ЮридическоеФизическоеЛицо") <> Неопределено Тогда
		РеквизитЮридическоеФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане.Владелец, "ЮридическоеФизическоеЛицо");
		ЭтоФизическоеЛицо = РеквизитЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	Иначе
		ЭтоФизическоеЛицо = Ложь;
	КонецЕсли;
	
	ДанныеРегистрации.Вставить("ВладелецФизическоеЛицо", ЭтоФизическоеЛицо);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсторияРегистрацийВНалоговомОргане.Период КАК Период
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
		|ГДЕ
		|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|	И ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДанныеРегистрации.Вставить("Период", Выборка.Период);
	Иначе
		ДанныеРегистрации.Вставить("Период", Неопределено);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
		
	Возврат ДанныеРегистрации;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УдалитьСНПоОрганизации(Организация)
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.Организация = Организация;
	
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудниковОрганизаций);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка,
	|	Сотрудники.Наименование
	|ИЗ
	|	ВТСотрудникиОрганизации КАК ОтобранныеСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО (Сотрудники.Ссылка = ОтобранныеСотрудники.Сотрудник)
	|ГДЕ
	|	Сотрудники.ТекущийПроцентСевернойНадбавки > 0";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ТекущийПроцентСевернойНадбавки = 0;
		Попытка
			Объект.Заблокировать();
			Объект.Записать();
		Исключение
			ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru =  'Ошибка при записи сотрудника %1. Возможно, данные сотрудника редактируются другим пользователем'"), Выборка.Наименование);
			ВызватьИсключение ТекстИсключения;
		КонецПопытки;
	КонецЦикла;
		
КонецПроцедуры

Процедура УдалитьРКПоОрганизации(Организация)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Подразделения.Ссылка,
	|	Подразделения.Наименование
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК Подразделения
	|ГДЕ
	|	Подразделения.Владелец = &Организация
	|	И Подразделения.РайонныйКоэффициент <> 1");
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.РайонныйКоэффициент = 1;
		Объект.ДополнительныеСвойства.Вставить("ОбработкаЗаписиРодителя", Истина);
		Попытка
			Объект.Заблокировать();
		Исключение
			ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru =  'Ошибка при записи подразделения %1. Возможно, данные подразделения редактируются другим пользователем'"), Выборка.Наименование);
			ВызватьИсключение ТекстИсключения;
		КонецПопытки;
		Объект.Записать();
	КонецЦикла;
		
КонецПроцедуры

