
#Область ПрограммныйИнтерфейс

// Проверяет активна ли кассовая смена. Под активностью понимается соблюдение следующих уловий:
// - кассовая смена не закрыта
// - с момента открытия кассовой смены прошло не более 24 часов
//
// Параметры:
//  КассоваяСмена - ДокументСсылка.КассоваяСмена - Кассовая смена, актвность которой необходимо проверить
//
// Возвращаемое значение:
//  Булево - активность смены
Функция СменаАктивна(КассоваяСмена) Экспорт
	
	ОписаниеСмены = КассовыеСменыВызовСервера.ОписаниеКассовойСмены(КассоваяСмена);
	
	Если ОписаниеСмены = Неопределено Тогда
		
		Возврат Ложь;
		
	ИначеЕсли ОписаниеСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта
		и ОписаниеСмены.ДатаИстеченияСрокаДействия > ТекущаяДатаСеанса() Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// Проверяет закрыта ли кассовая смена.
//
// Параметры:
//  КассоваяСмена - ДокументСсылка.КассоваяСмена - Кассовая смена, актвность которой необходимо проверить
//
// Возвращаемое значение:
//  Булево - Истина - смена закрыта, Ложь - смена не закрыта
Функция СменаЗакрыта(КассоваяСмена) Экспорт
	
	ОписаниеПоследнейСмены = КассовыеСменыВызовСервера.ОписаниеКассовойСмены(КассоваяСмена);
	
	Если ОписаниеПоследнейСмены = Неопределено Тогда
		
		Возврат Истина;
		
	ИначеЕсли не ОписаниеПоследнейСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// Получает реквизиты кассовой смены
//
// Параметры:
//  КассоваяСмена - ДокументСсылка.КассоваяСмена - Кассовая смена, актвность которой необходимо проверить
//
// Возвращаемое значение:
//  Структура - реквизиты кассовой смены. Содержит следующие резвизиты:
//    КассоваяСмена - ДокументСсылка.КассоваяСмена - ссылка на кассовую смену
//    ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - ссылка на устройство, на котором открыта смена
//    НачалоКассовойСмены - Дата - дата открытия смены
//    ОкончаниеКассовойСмены - Дата - дата закрытия смены (если смена закрывалась)
//    ДатаИстеченияСрокаДействия - дата, в которую истечет срок действия смены (дата открытия + 24 часа)
//    Организация - организация, указанная в документе КассоваяСмена
//    Статус - статус кассовой смены
Функция ОписаниеКассовойСмены(КассоваяСмена) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КассоваяСмена.Ссылка КАК КассоваяСмена,
	|	КассоваяСмена.ФискальноеУстройство,
	|	КассоваяСмена.НачалоКассовойСмены,
	|	КассоваяСмена.ОкончаниеКассовойСмены,
	|	ДОБАВИТЬКДАТЕ(КассоваяСмена.НачалоКассовойСмены, ДЕНЬ, 1) КАК ДатаИстеченияСрокаДействия,
	|	КассоваяСмена.Организация,
	|	КассоваяСмена.Статус
	|ИЗ
	|	Документ.КассоваяСмена КАК КассоваяСмена
	|ГДЕ
	|	Ссылка = &КассоваяСмена";
	Запрос.УстановитьПараметр("КассоваяСмена", КассоваяСмена);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		СтруктураРезультат = Новый Структура();
		Для Каждого КолонкаРезультата Из Результат.Колонки Цикл
			СтруктураРезультат.Вставить(КолонкаРезультата.Имя, Результат[0][КолонкаРезультата.Имя]);
		КонецЦикла;
		Возврат СтруктураРезультат;
	КонецЕсли;
	
КонецФункции

// По фискальному устройству определяет последнюю смену и проверяет ее активность. Под активностью понимается соблюдение следующих уловий:
// - кассовая смена не закрыта
// - с момента открытия кассовой смены прошло не более 24 часов
//
// Параметры:
//  ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - фискальное устройство, для которого требуется определить активность смены
//
// Возвращаемое значение:
//  Булево - Истина - смена открыта, Ложь - смена закрыта, прошло более 24 часов с момента открытия или никогда не была открыта
Функция ПоследняяСменаАктивна(ФискальноеУстройство) Экспорт
	
	ОписаниеПоследнейСмены = ОписаниеПоследнейКассовойСмены(ФискальноеУстройство);
	
	Если ОписаниеПоследнейСмены = Неопределено Тогда
		
		Возврат Ложь;
		
	ИначеЕсли ОписаниеПоследнейСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта
		и ОписаниеПоследнейСмены.ДатаИстеченияСрокаДействия > ТекущаяДатаСеанса() Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// По фискальному устройству определяет последнюю смену и проверяет закрыта ли она.
//
// Параметры:
//  ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - фискальное устройство, для которого требуется определить закрыта ли смена
//
// Возвращаемое значение:
//  Булево - Истина - смена закрыта или никогда не была открыта, Ложь - смена не закрыта
Функция ПоследняяСменаЗакрыта(ФискальноеУстройство) Экспорт
	
	ОписаниеПоследнейСмены = ОписаниеПоследнейКассовойСмены(ФискальноеУстройство);
	
	Если ОписаниеПоследнейСмены = Неопределено Тогда
		
		Возврат Истина;
		
	ИначеЕсли не ОписаниеПоследнейСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// По фискальному устройству определяет последнюю смену и получает ее реквизиты
//
// Параметры:
//  ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - фискальное устройство, для которого требуется определить активность смены
//
// Возвращаемое значение:
//  Структура - реквизиты кассовой смены, Неопределено - если ни одной смены небыло открыто. Содержит следующие резвизиты:
//    КассоваяСмена - ДокументСсылка.КассоваяСмена - ссылка на кассовую смену
//    ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - ссылка на устройство, на котором открыта смена
//    НачалоКассовойСмены - Дата - дата открытия смены
//    ОкончаниеКассовойСмены - Дата - дата закрытия смены (если смена закрывалась)
//    ДатаИстеченияСрокаДействия - дата, в которую истечет срок действия смены (дата открытия + 24 часа)
//    Организация - организация, указанная в документе КассоваяСмена
//    Статус - статус кассовой смены
Функция ОписаниеПоследнейКассовойСмены(ФискальноеУстройство) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ДокументКС.НачалоКассовойСмены) КАК ПоследняяДатаНачала
	|ПОМЕСТИТЬ втПоследняяДатаНачала
	|ИЗ
	|	Документ.КассоваяСмена КАК ДокументКС
	|ГДЕ
	|	ДокументКС.ФискальноеУстройство = &ФискальноеУстройство
	|	И ДокументКС.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	КассоваяСмена.Ссылка КАК КассоваяСмена,
	|	КассоваяСмена.ФискальноеУстройство,
	|	КассоваяСмена.НачалоКассовойСмены,
	|	КассоваяСмена.ОкончаниеКассовойСмены,
	|	ДОБАВИТЬКДАТЕ(КассоваяСмена.НачалоКассовойСмены, ДЕНЬ, 1) КАК ДатаИстеченияСрокаДействия,
	|	КассоваяСмена.Организация,
	|	КассоваяСмена.Статус
	|ИЗ
	|	Документ.КассоваяСмена КАК КассоваяСмена
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПоследняяДатаНачала КАК втПоследняяДатаНачала
	|		ПО КассоваяСмена.НачалоКассовойСмены = втПоследняяДатаНачала.ПоследняяДатаНачала
	|ГДЕ
	|	КассоваяСмена.ФискальноеУстройство = &ФискальноеУстройство
	|	И КассоваяСмена.Проведен";
	Запрос.УстановитьПараметр("ФискальноеУстройство", ФискальноеУстройство);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		СтруктураРезультат = Новый Структура();
		Для Каждого КолонкаРезультата Из Результат.Колонки Цикл
			СтруктураРезультат.Вставить(КолонкаРезультата.Имя, Результат[0][КолонкаРезультата.Имя]);
		КонецЦикла;
		Возврат СтруктураРезультат;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Для внутреннего использования
Процедура ПослеВыполненияКомандыФискальнымУстройством(ПараметрыКоманды) Экспорт
	
	Если ПараметрыКоманды.ВыполняемаяКоманда = "OpenShift" Тогда
		
		КассоваяСменаОбъект = Документы.КассоваяСмена.СоздатьДокумент();
		КассоваяСменаОбъект.Дата = ТекущаяДатаСеанса();
		
		КассоваяСменаОбъект.ФискальноеУстройство = ПараметрыКоманды.ИдентификаторУстройства;
		КассоваяСменаОбъект.НачалоКассовойСмены = КассоваяСменаОбъект.Дата;
		КассоваяСменаОбъект.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыКоманды.ИдентификаторУстройства, "Организация");
		КассоваяСменаОбъект.Статус = Перечисления.СтатусыКассовойСмены.Открыта;
		Если ПараметрыКоманды.Свойство("ДополнительныеПараметры")
			И ПараметрыКоманды.ДополнительныеПараметры <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(КассоваяСменаОбъект, ПараметрыКоманды.ДополнительныеПараметры);
		КонецЕсли;
		
	ИначеЕсли ПараметрыКоманды.ВыполняемаяКоманда = "CloseShift" Тогда
		
		КассоваяСменаОбъект = ПараметрыКоманды.КассоваяСмена.ПолучитьОбъект();
		
		КассоваяСменаОбъект.Статус = Перечисления.СтатусыКассовойСмены.Закрыта;
		КассоваяСменаОбъект.ОкончаниеКассовойСмены = ТекущаяДатаСеанса();
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Если ПараметрыКоманды.Свойство("ФискальныеДанныеСтруктура") Тогда
		ЗаполнитьЗначенияСвойств(КассоваяСменаОбъект, ПараметрыКоманды.ФискальныеДанныеСтруктура);
	КонецЕсли;
	
	Если ПараметрыКоманды.ВыполняемаяКоманда = "CloseShift" и ПараметрыКоманды.Свойство("ФискальныеДанныеXMLСтрока") Тогда
		КассоваяСменаОбъект.ФДОЗакрытииСмены = Новый ХранилищеЗначения(ПараметрыКоманды.ФискальныеДанныеXMLСтрока, Новый СжатиеДанных(9));
	КонецЕсли;
	
	Если КассоваяСменаОбъект.Модифицированность() Тогда
		КассоваяСменаОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры

// Для внутреннего использования
Функция НоваяКассоваяСмена(ФискальноеУстройство) Экспорт
	
	КассоваяСменаОбъект = Документы.КассоваяСмена.СоздатьДокумент();
	КассоваяСменаОбъект.Дата = ТекущаяДатаСеанса();
	
	КассоваяСменаОбъект.ФискальноеУстройство = ФискальноеУстройство;
	КассоваяСменаОбъект.НачалоКассовойСмены = КассоваяСменаОбъект.Дата;
	КассоваяСменаОбъект.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФискальноеУстройство, "Организация");
	КассоваяСменаОбъект.Статус = Перечисления.СтатусыКассовойСмены.Открыта;
	
	КассоваяСменаОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат КассоваяСменаОбъект.Ссылка;
	
КонецФункции

#КонецОбласти
