// Считает количество месяцев в периоде подписки
//
// Параметры
//  СрокПодписки  – <Перечисление.АО_СрокиПодписокИТС>
//
Функция ПолучитьКолвоМесяцев(СрокПодписки) Экспорт
 
 	КолвоМесяцев = 0;
	Если СрокПодписки = ПредопределенноеЗначение("Перечисление.бизСрокиПодписокИТС.Месяц") Тогда
		КолвоМесяцев = 1;
	ИначеЕсли СрокПодписки = ПредопределенноеЗначение("Перечисление.бизСрокиПодписокИТС.Квартал") Тогда
		КолвоМесяцев = 3;
	ИначеЕсли СрокПодписки = ПредопределенноеЗначение("Перечисление.бизСрокиПодписокИТС.Полугодие") Тогда
		КолвоМесяцев = 6;
	ИначеЕсли СрокПодписки = ПредопределенноеЗначение("Перечисление.бизСрокиПодписокИТС.Год") Тогда
		КолвоМесяцев = 12;
	КонецЕсли;
	
	Возврат КолвоМесяцев;
 
КонецФункции

&НаСервере
Функция ПроверкаИТС(Контрагент) Экспорт
	
	ОбъектПроверкаПодписок = Обработки.АРБИС_ПроверкаНаличияПодпискиИТС.Создать();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.Текст = "ВЫБРАТЬ
	|	АРБИС_НоменклатураКонтрагентовПоРегНомерамСрезПоследних.РегистрационныйНомер
	|ИЗ
	|	РегистрСведений.АРБИС_НоменклатураКонтрагентовПоРегНомерам.СрезПоследних КАК АРБИС_НоменклатураКонтрагентовПоРегНомерамСрезПоследних
	|ГДЕ
	|	АРБИС_НоменклатураКонтрагентовПоРегНомерамСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.АРБИС_СостоянияНоменклатурыУКонтрагентов.Установлена)
	|	И АРБИС_НоменклатураКонтрагентовПоРегНомерамСрезПоследних.Контрагент = &Контрагент";
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		СтрокаРегНомера = ОбъектПроверкаПодписок.РегНомера.Добавить();
		СтрокаРегНомера.РегНомер = Результат.РегистрационныйНомер;
	КонецЦикла;
	Ощибка = ОбъектПроверкаПодписок.ПроверитьРегНомеров();
	ТаблДок = Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет("АРБИС_ПроверкаРегНомеров");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Строка = Макет.ПолучитьОбласть("Строка");
	Шапка.Параметры.КонтрагентНаименование = Контрагент.Наименование;
	ТаблДок.Вывести(Шапка);
	Для Каждого СтрокаРегНомера Из ОбъектПроверкаПодписок.РегНомера Цикл
		Строка.Параметры.РегНомер = СтрокаРегНомера.РегНомер;
		Если Ощибка = 0 Тогда
			Строка.Параметры.Подписка = "Состояние не определно";
		Иначе
			Строка.Параметры.Подписка = СтрокаРегНомера.ЕстьПодпискаИТС;
		КонецЕсли;
		ТаблДок.Вывести(Строка);
	КонецЦикла;
	ТаблДок.ОтображатьСетку = Ложь;
	ТаблДок.ОтображатьЗаголовки = Ложь;
	ТаблДок.ТолькоПросмотр = Истина;	
	Возврат ТаблДок;
	
КонецФункции

//Функция возращает ссылку на элемент справочника организации в зависимости от контекста операции

&НаСервере	
Функция ПолучитьОрганизациюВКонтекстеОперации(Контрагент, ДатаДокументаКонецДня) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ДоговорыКонтрагентов.Организация,
	               |	ДоговорыКонтрагентов.ДатаДоговора
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Владелец = &Владелец
	               |	И (ДоговорыКонтрагентов.Наименование ПОДОБНО ""%ИТС%""
	               |			ИЛИ ДоговорыКонтрагентов.НомерДоговора ПОДОБНО ""%ИТС%"")
	               |	И ДоговорыКонтрагентов.ДатаДоговора <= &ДатаДокументаКонецДня
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДоговорыКонтрагентов.ДатаДоговора УБЫВ";
	Запрос.УстановитьПараметр("Владелец",Контрагент);
	Запрос.УстановитьПараметр ("ДатаДокументаКонецДня", ДатаДокументаКонецДня);
	
	РезультатЗапроса = Запрос.Выполнить();
    ВыборкаДЗ = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДЗ.Следующий() Тогда
		Возврат ВыборкаДЗ.Организация; 
	Иначе Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли;
КонецФункции // ПолучитьОрганизациюВКонтекстеОперации()


// <Проверить оформлена ли подписка ИТС, на одну из организаций в ИБ. 
//Если да тогда вернуть тип подписки - ИТС ПРОФ или ТЕХНО >
//
// Параметры:
//  <Контрагент>  - <СправочникСсылка.Контрагенты> - <Контрагент на имя которого может быть оформлена подписка>
//                 <продолжение описания параметра>
//  <ДатаСреза>  - <Дата.ДатаВремя> - <Дата и время на которую, осуществляется проверка>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Коллекция.Структура>   - <Структура с Ключами ЕстьПодписка, СкидкаВ_минутах - только если первый ключ Истина>
//
&НаСервере
Функция ПолучитьСведенияОПодпискеИТС(Контрагент, ДатаСреза) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	СУММА(ВЫБОР
	                |			КОГДА бизПодпискиСрезПоследних.ВидПодписки = ЗНАЧЕНИЕ(Справочник.бизВидыПодписок.ИТСПроф1DVDплатный)
	                |				ТОГДА 60
	                |			ИНАЧЕ 0
	                |		КОНЕЦ) КАК СкидкаВ_минутах,
	                |	бизПодпискиСрезПоследних.ВидПодписки
	                |ИЗ
	                |	РегистрСведений.бизПодписки.СрезПоследних(&ДатаСреза, ) КАК бизПодпискиСрезПоследних
	                |ГДЕ
	                |	бизПодпискиСрезПоследних.ДатаНачалаПодписки <= &ДатаСреза
	                |	И бизПодпискиСрезПоследних.ДатаОкончанияПодписки >= &ДатаСреза
	                |	И бизПодпискиСрезПоследних.Контрагент.Ссылка = &Контрагент
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	бизПодпискиСрезПоследних.ВидПодписки";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый Структура ("ЕстьПодписка", Ложь);
	Иначе 
		ВыборкаДЗ = РезультатЗапроса.Выбрать();
		ВыборкаДЗ.Следующий();   		
		Возврат Новый Структура("ЕстьПодписка, СкидкаВ_минутах", Истина, ВыборкаДЗ.СкидкаВ_минутах);
	КонецЕсли;
КонецФункции // ПолучитьСведенияОПодпискеИТС()
