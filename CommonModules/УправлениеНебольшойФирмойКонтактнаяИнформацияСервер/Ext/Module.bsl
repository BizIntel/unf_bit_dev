////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ УНФ

//Функция возвращает описание типов метаданных для которых необходимо извлекать адреса электронной почты
//
Функция ПолучитьТипыМетаданныхСодержащиеПартнерскиеEmail() Экспорт
	
	СписокТиповМетаданныхСодержащиеEmail = Новый СписокЗначений;
	
	СписокТиповМетаданныхСодержащиеEmail.Добавить(Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	СписокТиповМетаданныхСодержащиеEmail.Добавить(Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛица"));
	
	Возврат СписокТиповМетаданныхСодержащиеEmail;
	
КонецФункции // ПолучитьТипыМетаданныхСодержащиеПартнерскиеEmail()

// Функция формирует получателей с адресами электронной почты для отправки электронного письма.
//
// Параметры:
//  Получатели			 - Список значений	 - допустимые типы элементов СправочникСсылка.Контрагенты, СправочникСсылка.КонтактныеЛица
//  ВключаяПодчиненные	 - Булево	 - признак включения в результат контактных лиц для контрагентов
// Возвращаемое значение:
//  Массив - Массив структур с ключами:
//   * Представление - СправочникСсылка.Контрагенты, СправочникСсылка.КонтактныеЛица
//   * Адрес - Строка
//   * ВидПочтовогоАдреса - не используется
Функция ПодготовитьЭлектронныеАдресаПолучателей(знач Получатели, ВключаяПодчиненные = Истина) Экспорт
	
	ЭлектронныеАдресаПолучателей = Новый Массив;
	Если Получатели.Количество() = 0 Тогда
		Возврат ЭлектронныеАдресаПолучателей;
	КонецЕсли;
	АдресЭлектроннойПочты = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	
	МассивПолучателей = Получатели.ВыгрузитьЗначения();
	ТаблицаEmail = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивПолучателей, АдресЭлектроннойПочты);
	
	Для каждого Получатель из Получатели Цикл
		
		ЗначениеЭлементаСпискаЗначений = Получатель.Значение;
		
		АдресаЭП = "";
		МассивНайденныхСтрок = ТаблицаEmail.НайтиСтроки(Новый Структура("Объект", ЗначениеЭлементаСпискаЗначений));
		Для Каждого СтрокаКИ Из МассивНайденныхСтрок Цикл
			АдресаЭП = АдресаЭП + ?(АдресаЭП = "", "", ", ") + СтрокаКИ.Представление;
		КонецЦикла;
		
		СтруктураПолучателя = Новый Структура("
			|Представление,
			|Адрес,
			|ИсточникКонтактнойИнформации,
			|ВидПочтовогоАдреса"); // Необходим для чтения подсистемой БСП - ОбщаяФорма.ПодготовкаНовогоПисьма
		СтруктураПолучателя.Представление = ЗначениеЭлементаСпискаЗначений;
		СтруктураПолучателя.Адрес = АдресаЭП;
		СтруктураПолучателя.ИсточникКонтактнойИнформации = ЗначениеЭлементаСпискаЗначений;
		
		ЭлектронныеАдресаПолучателей.Добавить(СтруктураПолучателя);
		
		// Получим E-mail контактных лиц при помощи рекурсии
		Если ВключаяПодчиненные 
			И ТипЗнч(ЗначениеЭлементаСпискаЗначений) = Тип("СправочникСсылка.Контрагенты") Тогда
			
			ЭлектронныеАдресаКонтактныхЛиц = ПодготовитьЭлектронныеАдресаПолучателей(
				УправлениеНебольшойФирмойСервер.ПолучитьКонтактныеЛицаКонтрагента(ЗначениеЭлементаСпискаЗначений),
				Ложь);
			
			Для каждого ЭлементАдреса Из ЭлектронныеАдресаКонтактныхЛиц Цикл
				
				ЭлектронныеАдресаПолучателей.Добавить(ЭлементАдреса);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЭлектронныеАдресаПолучателей;
	
КонецФункции

// Функция возвращает значение поля "ЗначенияПолей" контактной информации
//
// Ссылка - ссылка на справочник (Организация, Контрагент)
// ВидКонтактнойИнформации - вид контактной информации (Справочник.ВидыКонтактнойИнформации)
//
Функция ПолучитьЗначениеПолейКонтактнойИнформации(Ссылка, ВидКонтактнойИнформации) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Ссылка) 
		ИЛИ НЕ ЗначениеЗаполнено(ВидКонтактнойИнформации) Тогда
		
		Возврат "";
		
	КонецЕсли;
	
	КонтактнаяИнформация = Ссылка.КонтактнаяИнформация.Найти(ВидКонтактнойИнформации, "Вид");
	Если КонтактнаяИнформация = Неопределено Тогда
		
		Возврат "";
		
	КонецЕсли;
	
	Возврат КонтактнаяИнформация.ЗначенияПолей;
	
КонецФункции // ПолучитьЗначениеПолейКонтактнойИнформации()

// Опредяет, что получатель электронного письма является множественным
//
Функция ПолучателейБольшеОдного(Получатель) Экспорт
	
	Если ТипЗнч(Получатель) = Тип("Массив") Или ТипЗнч(Получатель) = Тип("СписокЗначений") Тогда
		
		Возврат Получатель.Количество() > 1;
		
	Иначе
		
		Возврат ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(Получатель).Количество() > 1;
		
	КонецЕсли;
	
КонецФункции // ПолучателейБольшеОдного()
