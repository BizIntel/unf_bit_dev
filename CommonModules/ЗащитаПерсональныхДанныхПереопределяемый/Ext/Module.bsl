////////////////////////////////////////////////////////////////////////////////
// Подсистема "Защита персональных данных".
// Модуль предназначен для размещения переопределяемых процедур подсистемы.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура обеспечивает сбор сведений о хранении данных, 
// относящихся к персональным
//
// Параметры:
//		ТаблицаСведений - таблица значений с полями:
//			Объект 			- строка, содержащая полное имя объекта метаданных,
//			ПоляРегистрации - строка, в которой перечислены имена полей регистрации, 
//								отдельные поля регистрации отделяются запятой,
//								альтернативные - символом "|",
//			ПоляДоступа		- строка, в которой перечислены через запятую имена полей доступа.
//			ОбластьДанных	- строка с идентификатором области данных, необязательно для заполнения.
//
Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	
	// СтандартныеПодсистемы.ФизическиеЛица
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Справочник.ФизическиеЛица";
	НовыеСведения.ПоляРегистрации	= "Ссылка";
	НовыеСведения.ПоляДоступа		= "ДатаРождения,Пол";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	// РегистрСведений.ДокументыФизическихЛиц
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.ДокументыФизическихЛиц";
	НовыеСведения.ПоляРегистрации	= "Физлицо";
	НовыеСведения.ПоляДоступа		= "ВидДокумента,Серия,Номер,ДатаВыдачи,СрокДействия,КемВыдан,КодПодразделения,Представление";
	НовыеСведения.ОбластьДанных		= "ПаспортныеДанные";
	// Конец СтандартныеПодсистемы.ФизическиеЛица
	
КонецПроцедуры

// Процедура обеспечивает составление коллекции областей персональных данных.
//
// Параметры:
//		ОбластиПерсональныхДанных - таблица значений с полями:
//			Имя - идентификатор области данных.
//			Представление - пользовательское представление области данных.
//			Родитель - идентификатор родительской области данных.
//
Процедура ЗаполнитьОбластиПерсональныхДанных(ОбластиПерсональныхДанных) Экспорт
	
	// Заполнение представлений для используемых областей
	// СтандартныеПодсистемы.ФизическиеЛица
	НоваяОбласть = ОбластиПерсональныхДанных.Добавить();
	НоваяОбласть.Имя = "ЛичныеДанные";
	НоваяОбласть.Представление = НСтр("ru = 'Личные данные'");
	
	НоваяОбласть = ОбластиПерсональныхДанных.Добавить();
	НоваяОбласть.Имя = "ПаспортныеДанные";
	НоваяОбласть.Представление = НСтр("ru = 'Паспортные данные'");
	НоваяОбласть.Родитель = "ЛичныеДанные";
	// Конец СтандартныеПодсистемы.ФизическиеЛица
	
КонецПроцедуры

// Процедура вызывается при заполнении формы "Согласие на обработку персональных данных"
//  данными, переданных в качестве параметров, субъектов.
//
// Параметры:
//		СубъектыПерсональныхДанных 	- данные формы коллекция, содержащая сведения о субъектах.
//		ДатаАктуальности			- дата, на которую нужно заполнить сведения.
//
Процедура ДополнитьДанныеСубъектовПерсональныхДанных(СубъектыПерсональныхДанных, ДатаАктуальности) Экспорт
	
	Для каждого ДанныеСубъекта Из СубъектыПерсональныхДанных Цикл
		
		// ДанныеСубъекта.Субъект
		// ДанныеСубъекта.ФИО
		// ДанныеСубъекта.Адрес
		// ДанныеСубъекта.ПаспортныеДанные
		
		СубъектСсылка = ДанныеСубъекта.Субъект;
		Если ТипЗнч(СубъектСсылка) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			
			ЗаполнитьДанныеПоФизическомуЛицу(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности);
			
		ИначеЕсли ТипЗнч(СубъектСсылка) = Тип("СправочникСсылка.Сотрудники") Тогда
			
			ЗаполнитьДанныеПоСотруднику(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности);
			
		ИначеЕсли ТипЗнч(СубъектСсылка) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
			
			ЗаполнитьДанныеПоКонтактномуЛицу(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности);
			
		ИначеЕсли ТипЗнч(СубъектСсылка) = Тип("СправочникСсылка.Контрагенты") Тогда
			
			ЗаполнитьДанныеПоКонтагенту(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура вызывается при заполнении формы "Согласие на обработку персональных данных"
//  данными организации.
//
// Параметры:
//		Организация					- организация - оператор персональных данных.
//		ДанныеОрганизации			- структура с данными об организации (адрес, ФИО ответственного и т.д.).
//		ДатаАктуальности			- дата, на которую нужно заполнить сведения.
//
Процедура ДополнитьДанныеОрганизацииОператораПерсональныхДанных(Организация, ДанныеОрганизации, ДатаАктуальности) Экспорт
	
	СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Организация, ДатаАктуальности);
	ДанныеОрганизации.АдресОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ЮридическийАдрес");
	
	ОтветственныеЛица = УправлениеНебольшойФирмойСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Организация, ДатаАктуальности);
	ДанныеОрганизации.ОтветственныйЗаОбработкуПерсональныхДанных = ОтветственныеЛица.Руководитель;
	
КонецПроцедуры

#КонецОбласти

#Region УНФ

Процедура ЗаполнитьДанныеПоФизическомуЛицу(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности)
	
	ФИО = РегистрыСведений.ФИОФизЛиц.ФИОФизЛица(ДатаАктуальности, СубъектСсылка);
	
	ДанныеСубъекта.ФИО = ?(ПустаяСтрока(ФИО), СубъектСсылка.Наименование, ФИО);
	ДанныеСубъекта.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СубъектСсылка, Справочники.ВидыКонтактнойИнформации.АдресФизЛицаПоПрописке);
	
	ДокументыФизическихЛиц = Справочники.ФизическиеЛица.ДокументФизЛицаПоВиду(ДатаАктуальности, СубъектСсылка, Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ);
	Если ДокументыФизическихЛиц.Количество() > 0 Тогда
		
		ДанныеСубъекта.ПаспортныеДанные	= ДокументыФизическихЛиц[0].Представление;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоСотруднику(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности)
	
	Если ЗначениеЗаполнено(СубъектСсылка.Физлицо) Тогда
		
		ЗаполнитьДанныеПоФизическомуЛицу(ДанныеСубъекта, СубъектСсылка.Физлицо, ДатаАктуальности)
		
	Иначе
		
		ДанныеСубъекта.ФИО = СубъектСсылка.Наименование;
		ДанныеСубъекта.Адрес = "";
		ДанныеСубъекта.ПаспортныеДанные = "";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоКонтактномуЛицу(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности)
	
	ДанныеСубъекта.ФИО = СубъектСсылка.Наименование;
	ДанныеСубъекта.Адрес = "";
	ДанныеСубъекта.ПаспортныеДанные = СубъектСсылка.ДокументУдостоверяющийЛичность;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоКонтагенту(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности)
	
	Если СубъектСсылка.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ЮридическоеЛицо Тогда
		
		ДанныеСубъекта.ФИО = СубъектСсылка.Наименование;
		ДанныеСубъекта.ПаспортныеДанные = "";
		
	ИначеЕсли СубъектСсылка.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ФизическоеЛицо
		ИЛИ СубъектСсылка.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ИндивидуальныйПредприниматель Тогда
		
		ДанныеСубъекта.ФИО = СубъектСсылка.ФИО;
		Если ПустаяСтрока(ДанныеСубъекта.ФИО)
			И ЗначениеЗаполнено(СубъектСсылка.КонтактноеЛицо) Тогда
			
			ДанныеСубъекта.ФИО = СубъектСсылка.КонтактноеЛицо.Наименование;
			
		КонецЕсли;
		
		ДанныеСубъекта.ПаспортныеДанные = СубъектСсылка.ДокументУдостоверяющийЛичность;
		Если ПустаяСтрока(ДанныеСубъекта.ПаспортныеДанные)
			И ЗначениеЗаполнено(СубъектСсылка.КонтактноеЛицо) Тогда
			
			ДанныеСубъекта.ПаспортныеДанные = СубъектСсылка.КонтактноеЛицо.ДокументУдостоверяющийЛичность;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеСубъекта.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СубъектСсылка, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	
КонецПроцедуры

#EndRegion