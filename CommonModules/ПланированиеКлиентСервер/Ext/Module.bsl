
#Область ПрограммныйИнтерфейс

// Расчет дат начала и окончания периода планирования с заданной периодичностью
//
// Параметры:
//  Периодичность  	- ПеречислениеСсылка.Периодичность - Периодичность с которой нужно рассчитать даты
//  НачалоПериода  	- Дата - Дата начала периода
//  ОкончаниеПериода  	- Дата - Дата окончания периода
//
Процедура УстановитьНачалоОкончаниеПериодаПланирования(Знач Периодичность, НачалоПериода, ОкончаниеПериода) Экспорт 
	
	Если Не ЗначениеЗаполнено(Периодичность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НачалоПериода) Тогда
		НачалоПериода = ТекущаяДата();
	КонецЕсли;
	
	НачалоПериода = УправлениеНебольшойФирмойКлиентСервер.РассчитатьДатуНачалаБлижайшегоПериода(НачалоПериода, Периодичность);
	
	Если ЗначениеЗаполнено(ОкончаниеПериода) И Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") И ОкончаниеПериода > НачалоПериода Тогда
		// Перерасчет даты окончания не нужен
	ИначеЕсли ЗначениеЗаполнено(ОкончаниеПериода) И ОкончаниеПериода > НачалоПериода Тогда
		
		НачалоПоследнегоПериода = УправлениеНебольшойФирмойКлиентСервер.РассчитатьДатуНачалаБлижайшегоПериода(ОкончаниеПериода, Периодичность);
		ОкончаниеПериода = УправлениеНебольшойФирмойКлиентСервер.РассчитатьДатуОкончанияПериода(НачалоПоследнегоПериода, Периодичность, 0);
		
	Иначе
		
		ОкончаниеПериода = УправлениеНебольшойФирмойКлиентСервер.РассчитатьДатуОкончанияПериода(НачалоПериода, Периодичность, 1);
		
	КонецЕсли;
	
КонецПроцедуры

// Рассчитывает дату начала периода по указанной дате и периодичности
//
// Параметры:
// Дата          	   - дата, к которой будет рассчитана дата начала периода
// Периодичность       - значение перечисления "Периодичность"
//
// Возвращаемое значение:
// Дата - Дата начала периода
//
Функция РассчитатьДатуНачалаПериода(Знач Дата, Знач Периодичность) Экспорт
	
	ОдинДень = 86400;
	
	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
		
		ДатаНачала = НачалоДня(Дата);
		
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		
		ДатаНачала = НачалоНедели(Дата);
				
	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада")) Тогда
		
		ДеньМесяца   = День(Дата);
		НачалоМесяца = НачалоМесяца(Дата);
		
		Если ДеньМесяца = 1 Или ДеньМесяца = 11 Или ДеньМесяца = 21 Тогда
			ДатаНачала = Дата;
		ИначеЕсли ДеньМесяца <= 10 Тогда // Первая декада
			ДатаНачала = НачалоМесяца
		ИначеЕсли ДеньМесяца <= 20 Тогда // Вторая декада
			ДатаНачала = НачалоМесяца + ОдинДень * 10;
		Иначе // Третья декада
			ДатаНачала = НачалоМесяца + ОдинДень * 20;
		КонецЕсли;
		
	ИначеЕсли (Периодичность= ПредопределенноеЗначение("Перечисление.Периодичность.Месяц")) Тогда
		
		ДатаНачала = НачалоМесяца(Дата);
		
	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал")) Тогда
		
		ДатаНачала = НачалоКвартала(Дата);

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие")) Тогда
		
		НачалоГода      = НачалоГода(Дата);
		НачалоПолугодия = ДобавитьМесяц(НачалоГода,6);
		
		Если Дата >= НачалоПолугодия Тогда
			ДатаНачала = НачалоПолугодия;
		Иначе
			ДатаНачала = НачалоГода;
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год")) Тогда
		
		ДатаНачала = НачалоГода(Дата);
		
	КонецЕсли;
	
	Возврат ДатаНачала;
	
КонецФункции

// Рассчитывает дату окончания периода по указанной дате и периодичности
//
// Параметры:
// Дата          	   - дата, к которой будет рассчитана дата окончания периода
// Периодичность       - значение перечисления "Периодичность"
//
// Возвращаемое значение:
// Дата - Дата окончания периода
//
Функция РассчитатьДатуОкончанияПериода(Знач Дата, Знач Периодичность) Экспорт
	
	ОдинДень = 86400;
	
	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
		
		ДатаОкончания = КонецДня(Дата);
		
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		
		ДатаОкончания = КонецНедели(Дата);
				
	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада")) Тогда
		
		ДеньМесяца   = День(Дата);
		КонецМесяца = КонецМесяца(Дата);
		НачалоМесяца = НачалоМесяца(Дата);
		
		Если ДеньМесяца = 10 Или ДеньМесяца = 20 Или ДеньМесяца = День(КонецМесяца) Тогда
			ДатаОкончания = КонецДня(Дата);
		ИначеЕсли ДеньМесяца <= 9 Тогда // Первая декада
			ДатаОкончания = НачалоМесяца - 1 + ОдинДень * 10
		ИначеЕсли ДеньМесяца <= 19 Тогда // Вторая декада
			ДатаОкончания = НачалоМесяца - 1 + ОдинДень * 20;
		Иначе // Третья декада
			ДатаОкончания = КонецМесяца;
		КонецЕсли;
		
	ИначеЕсли (Периодичность= ПредопределенноеЗначение("Перечисление.Периодичность.Месяц")) Тогда
		
		ДатаОкончания = КонецМесяца(Дата);
		
	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал")) Тогда
		
		ДатаОкончания = КонецКвартала(Дата);

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие")) Тогда
		
		КонецГода      = КонецГода(Дата);
		КонецПолугодия = ДобавитьМесяц(КонецГода,-6);
		
		Если Дата < КонецПолугодия Тогда
			ДатаОкончания = КонецПолугодия;
		Иначе
			ДатаОкончания = КонецГода;
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год")) Тогда
		
		ДатаОкончания = КонецГода(Дата);
		
	КонецЕсли;
	
	Возврат ДатаОкончания;
	
КонецФункции

// Формирует заголовок для интервала дат с заданной периодичностью (День, неделя, декада, месяц и т.д.)
//
// Параметры:
//  Периодичность 	- ПеречислениеСсылка.Периодичность - Периодичность для которой нужно сформировать заголовок
//  ДатаНачала 		- Дата - Дата начала периода
//  ДатаОкончания 	- Дата - Дата окончания периода
//  ОтображатьНомерПериода  - Булево - Флаг отображения заголовка по номеру периода в пределах года
//
// Возвращаемое значение:
//  Строка - Текстовое представление заголовка периода
//
Функция СформироватьЗаголовокПериода(Знач ДатаНачала, Знач ДатаОкончания, Знач Периодичность, Знач ОтображатьНомерПериода = Ложь) Экспорт
	
	Заголовок = "";
	
	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
		Если ОтображатьНомерПериода Тогда
			Заголовок = Формат(ДеньГода(ДатаНачала), "ЧДЦ=0; ЧГ=0") + " " + НСтр("ru='день'");
		Иначе
			Заголовок = Формат(ДатаНачала, "ДЛФ=D");
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		Если ОтображатьНомерПериода Тогда
			Заголовок = НСтр("ru='%НомерНедели% неделя'");
			Если Год(ДатаНачала) <> Год(ДатаОкончания) Тогда
				НомерНедели = Формат(НеделяГода(ДатаНачала), "ЧДЦ=0; ЧГ=0") + "/" +  Формат(НеделяГода(ДатаОкончания), "ЧДЦ=0; ЧГ=0");
			Иначе
				НомерНедели = Формат(НеделяГода(ДатаНачала), "ЧДЦ=0; ЧГ=0");
			КонецЕсли; 
			Заголовок = СтрЗаменить(Заголовок, "%НомерНедели%", НомерНедели);
		Иначе
			ТекстДатаНачала = Формат(НачалоДня(ДатаНачала)+1, "ДФ=dd.MM"); 
			ТекстДатаОкончания = Формат(ДатаОкончания, "ДФ=dd.MM");
			Заголовок   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 - %2'"), ТекстДатаНачала, ТекстДатаОкончания);
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада") Тогда
		ТекстДатаНачала = Формат(НачалоДня(ДатаНачала)+1, "ДФ=dd.MM"); 
		ТекстДатаОкончания = Формат(ДатаОкончания, "ДФ=dd.MM");
		Заголовок   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 - %2'"), ТекстДатаНачала, ТекстДатаОкончания);
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
		Если ОтображатьНомерПериода Тогда
			Заголовок = Формат(Месяц(НачалоДня(ДатаНачала)+1), "ЧДЦ=0; ЧГ=0") + " " + НСтр("ru='месяц'");
		Иначе
			Заголовок = Формат(НачалоДня(ДатаНачала)+1, "ДФ='MMMM yyyy'");
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		Если ОтображатьНомерПериода Тогда
			Заголовок = Формат(ДатаНачала, "ДФ='q'") + " " + НСтр("ru='квартал'");
		Иначе
			ТекстДатаНачала = Формат(ДатаНачала, "ДФ='q'");
			ТекстДатаОкончания = Формат(ДатаНачала, "ДФ=yyyy"); 
			Заголовок   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 кв. %2'"), ТекстДатаНачала, ТекстДатаОкончания);
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие") Тогда
		Если ОтображатьНомерПериода Тогда
			Заголовок = ?(ДатаНачала=НачалоГода(ДатаНачала),"1", "2");
		Иначе
			ТекстДатаНачала = ?(ДатаНачала=НачалоГода(ДатаНачала),"1", "2");
			ТекстДатаОкончания = Формат(ДатаНачала, "ДФ=yyyy"); 
			Заголовок   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 полугодие %2'"), ТекстДатаНачала, ТекстДатаОкончания);
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		Заголовок = Формат(ДатаНачала, "ДФ='yyyy ""г.""'");
	Иначе 
		Заголовок = Строка(ДатаНачала);
	КонецЕсли;
	
	Возврат Заголовок;
	
КонецФункции

Функция ОписаниеТипаПланированияПоИзмерению(ИзмерениеПланирования) Экспорт
	
	Возврат СоответствиеОбъектовПланированияТипам()[ИзмерениеПланирования];
	
КонецФункции

Функция СоответствиеОбъектовПланированияТипам() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Соответствие.Вставить(
		ПредопределенноеЗначение("Перечисление.ИзмеренияПланирования.КатегорияНоменклатуры"),
		Новый ОписаниеТипов("СправочникСсылка.КатегорииНоменклатуры")
	);
	Соответствие.Вставить(
		ПредопределенноеЗначение("Перечисление.ИзмеренияПланирования.ГруппаНоменклатуры"),
		Новый ОписаниеТипов("СправочникСсылка.Номенклатура")
	);
	Соответствие.Вставить(
		ПредопределенноеЗначение("Перечисление.ИзмеренияПланирования.Номенклатура"),
		Новый ОписаниеТипов("СправочникСсылка.Номенклатура")
	);
	Соответствие.Вставить(
		ПредопределенноеЗначение("Перечисление.ИзмеренияПланирования.Менеджер"),
		Новый ОписаниеТипов("СправочникСсылка.Сотрудники")
	);
	
	Возврат Соответствие;
	
КонецФункции

#КонецОбласти