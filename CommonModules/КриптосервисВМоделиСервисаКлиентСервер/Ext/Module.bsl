////////////////////////////////////////////////////////////////////////////////
// Подсистема "Криптосервис".
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ЭтоИсключениеОшибкаАвторизации(ИнформацияОбОшибке) Экспорт
	
	ИнформацияОбОшибке = ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке);
	
	Если СтрНайти(ИнформацияОбОшибке.Описание, ТекстИсключенияНеУказанВременныйПароль()) > 0
		ИЛИ СтрНайти(ИнформацияОбОшибке.Описание, ТекстИсключенияУказанНеВерныйВременныйПароль()) > 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке) Экспорт
	
	Результат = ИнформацияОбОшибке;
	Если ИнформацияОбОшибке <> Неопределено Тогда
		Если ИнформацияОбОшибке.Причина <> Неопределено Тогда
			Результат = ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке.Причина);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ТекстИсключенияНеУказанВременныйПароль() Экспорт
	
	Возврат "НеУказанВременныйПароль";	
	
КонецФункции

Функция ТекстИсключенияУказанНеВерныйВременныйПароль() Экспорт
	
	Возврат "Invalid password";	
	
КонецФункции

Функция ЗамаскироватьНомерТелефона(Знач НомерТелефона) Экспорт
	
	ЗамаскированныйНомерТелефона = НомерТелефона(НомерТелефона);
	МассивСимволов = Новый Массив;
	ВсегоСимволов = СтрДлина(ЗамаскированныйНомерТелефона);
	Индекс = 0;
	Пока Индекс < ВсегоСимволов Цикл
		Индекс = Индекс + 1;
		
		ТекущийСимвол = Сред(ЗамаскированныйНомерТелефона, Индекс, 1);
		МассивСимволов.Добавить(ТекущийСимвол);
	КонецЦикла;
	
	Если МассивСимволов.Количество() = 12 Тогда
		// Заменить цифры на '*'
		Для Индекс = 5 По 9 Цикл
			МассивСимволов[Индекс] = "*";
		КонецЦикла;
	Иначе
		ВызватьИсключение(НСтр("ru = 'Ошибка преобразования номера телефона.'"));
	КонецЕсли;
	
	ЗамаскированныйНомерТелефона = "";
	Для Каждого Символ Из МассивСимволов Цикл
		ЗамаскированныйНомерТелефона = ЗамаскированныйНомерТелефона + Символ;
	КонецЦикла;
	
	Возврат ФорматироватьНомерТелефона(МассивСимволов);
	
КонецФункции

// Преобразует в требуемый формат
// +79999999999
//
Функция НомерТелефона(Знач НомерТелефона) Экспорт 
	
	НомерТелефонаТолькоЦифры = "";
	
	Цифры = "0123456789";
	ВсегоСимволов = СтрДлина(НомерТелефона);
	Индекс = 0;
	Пока Индекс < ВсегоСимволов Цикл
		Индекс = Индекс + 1;
		
		ТекущийСимвол = Сред(НомерТелефона, Индекс, 1);
		
		Если СтрНайти(Цифры, ТекущийСимвол) > 0 Тогда
			НомерТелефонаТолькоЦифры = НомерТелефонаТолькоЦифры + ТекущийСимвол;
		КонецЕсли;
	КонецЦикла;
	
	Если СтрДлина(НомерТелефонаТолькоЦифры) = 10 Тогда
		Возврат "+7" + НомерТелефонаТолькоЦифры;
	ИначеЕсли СтрДлина(НомерТелефонаТолькоЦифры) = 11 Тогда
		Возврат "+7" + Прав(НомерТелефонаТолькоЦифры, 10);
	Иначе
		ВызватьИсключение(НСтр("ru = 'Ошибка преобразования номера телефона к формату +79999999999.'"));
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Преобразование к формату +7 (999) 999-99-99
Функция ФорматироватьНомерТелефона(Знач НомерТелефона)
	
	ОтформатированныйНомерТелефона = "";
	Если ТипЗнч(НомерТелефона) = Тип("Массив") И НомерТелефона.Количество() = 12 Тогда
		КодОператора = НомерТелефона[2] + НомерТелефона[3] + НомерТелефона[4];
		ОтформатированныйНомерТелефона = НомерТелефона[0] + НомерТелефона[1] + " (" + КодОператора + ") " 
			+ НомерТелефона[5] + НомерТелефона[6] + НомерТелефона[7] + "-" 
			+ НомерТелефона[8] + НомерТелефона[9] + "-" + НомерТелефона[10] + НомерТелефона[11]; 
	КонецЕсли;
	
	Возврат ОтформатированныйНомерТелефона;
	
КонецФункции

#КонецОбласти