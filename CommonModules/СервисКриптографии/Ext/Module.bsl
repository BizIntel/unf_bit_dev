////////////////////////////////////////////////////////////////////////////////
// Подсистема "Сервис криптографии".
//  
////////////////////////////////////////////////////////////////////////////////


#Область ПрограммныйИнтерфейс

// Шифрует данные для заданного списка получателей.
//
// Параметры:
//   Данные - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище файла данных,
//                                     который необходимо зашифровать.
//
//   Получатели - ДвоичныеДанные, Структура, ФиксированнаяСтруктура, Массив, ФиксированныйМассив - сертификаты получателей зашифрованного сообщения.
//                Либо ДвоичныеДанные файлов сертификатов или Структура с параметрами для поиска сертификатов в хранилище.
//     Структура - ключевые параметры сертификата, используемые для поиска.
//                 Отпечаток или пара СерийныйНомер и Издатель, или Сертификат с двоичными данными.
//       * Отпечаток     - ДвоичныеДанные, Строка - отпечаток сертификат.
//       * СерийныйНомер - ДвоичныеДанные, Строка - серийный номер сертификата.
//       * Издатель      - Структура, ФиксированнаяСтрока, Строка - свойства издателя
//       * Сертификат    - ДвоичныеДанные - файл сертификата.
//
//   ТипШифрования - Строка - тип шифрования. Поддерживается только CMS.
//
//   ПараметрыШифрования - Структура, ФиксированнаяСтруктура - позволяет указать дополнительные параметры шифрования.
//
// Возвращаемое значение:
//	 ДвоичныеДанные, Строка - зашифрованные данные. Если данные переданы через временное хранилище,
//                            то и результат будет возвращен также.
//
Функция Зашифровать(Данные, Получатели, ТипШифрования = "CMS", ПараметрыШифрования = Неопределено) Экспорт
	
	Возврат СервисКриптографииСлужебный.Зашифровать(Данные, Получатели, ТипШифрования, ПараметрыШифрования);
	
КонецФункции

// Выполняет расшифровку данных.
//
// Параметры:
//   ЗашифрованныеДанные - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище файла данных,
//                                                  который необходимо расшифровать.
//
//   Сертификат - Структура - сертификат, который необходимо использовать для расшифровки.
//     * Идентификатор - идентификатор сертификата.
//
//   ТипШифрования - Строка - поддерживается только CMS.
//
//   ПараметрыШифрования - Структура, ФиксированнаяСтруктура - позволяет указать дополнительные параметры шифрования.
//
// Возвращаемое значение:
//	 ДвоичныеДанные, Строка - расшифрованные данные. Если данные переданы через временное хранилище,
//                            то и результат будет возвращен также.
//   Структура - Описание ошибки выполнения.
//     *КодВозврата - Строка - код ошибки.
//     *Идентификатор - Строка - идентификатор сертификата.
//
Функция Расшифровать(ЗашифрованныеДанные, Сертификат, ТипШифрования = "CMS", ПараметрыШифрования = Неопределено) Экспорт
	
	Возврат СервисКриптографииСлужебный.Расшифровать(ЗашифрованныеДанные, Сертификат, ТипШифрования, ПараметрыШифрования);
	
КонецФункции

// Выполняет подписание данных.
//
// Параметры:
//   Данные - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище файла данных,
//                                     который необходимо подписать.
//
//   Подписант - ДвоичныеДанные, Структура, ФиксированнаяСтруктура - сертификат для подписания.
//                Либо ДвоичныеДанные файла сертификата или Структура с параметрами для поиска сертификата в хранилище.
//     Структура - ключевые параметры сертификата, используемые для поиска.
//                 Отпечаток или пара СерийныйНомер и Издатель, или Сертификат с двоичными данными.
//       * Отпечаток     - ДвоичныеДанные, Строка - отпечаток сертификат.
//       * СерийныйНомер - ДвоичныеДанные, Строка - серийный номер сертификата.
//       * Издатель      - Структура, ФиксированнаяСтруктура, Строка - свойства издателя.
//       * Сертификат    - ДвоичныеДанные - файл сертификата.
//
//   ТипПодписи - Строка - тип подписи. Поддерживаются только "CMS" или "GOST3410".
//
//   ПараметрыПодписания - Структура, ФиксированнаяСтруктура - позволяет указать дополнительные параметры подписания.
//     * ОтсоединеннаяПодпись - Булево - поддерживается только CMS, если Истина, то будет сформирована отсоединенная подпись, иначе - присоединенная.
//                                       Истина - значение по умолчанию.
//
// Возвращаемое значение:
//	 ДвоичныеДанные, Строка - подпись. Если данные переданы через временное хранилище,
//                            то и результат будет возвращен также.
//   Структура - Описание ошибки выполнения.
//     *КодВозврата - Строка - код ошибки.
//     *Идентификатор - Строка - идентификатор сертификата.
//
Функция Подписать(Данные, Подписант, ТипПодписи = "CMS", ПараметрыПодписания = Неопределено) Экспорт
	
	Возврат СервисКриптографииСлужебный.Подписать(Данные, Подписант, ТипПодписи, ПараметрыПодписания);
	
КонецФункции

// Выполняет проверку подписи.
//
// Параметры:
//   Подпись - ДвоичныеДанные - подпись, которую необходимо проверить.
//
//   Данные - ДвоичныеДанные - исходные данные, необходимые для проверки подписи. Используется для проверки ОтсоединеннаяПодпись.
//
//   ТипПодписи - Строка - тип подписи. Поддерживаются только "CMS" или "GOST3410".
//
//   ПараметрыПодписания - Структура, ФиксированнаяСтруктура - позволяет указать дополнительные параметры подписания.
//     * ОтсоединеннаяПодпись - Булево - используется совместно с ТипПодписи = "CMS", если Истина, то подпись будет проверяться с использованием Данные.
//                                       Истина - значение по умолчанию.
//     * Сертификат - ДвоичныеДанные - файл сертификата, обязательно используется совместно с ТипПодписи = "GOST3410".
//
// Возвращаемое значение:
//	 Булево - если Истина, то подпись действительна.
//
Функция ПроверитьПодпись(Подпись, Данные = Неопределено, ТипПодписи = "CMS", ПараметрыПодписания = Неопределено) Экспорт
	
	Возврат СервисКриптографииСлужебный.ПроверитьПодпись(Подпись, Данные, ТипПодписи, ПараметрыПодписания);
	
КонецФункции

// Выполняет проверку сертификата.
//
// Параметры:
//   Сертификат - ДвоичныеДанные - файл сертификата.
//
// Возвращаемое значение:
//	 Булево - если Истина, то сертификат действителен.
//
Функция ПроверитьСертификат(Сертификат) Экспорт
	
	Возврат СервисКриптографииСлужебный.ПроверитьСертификат(Сертификат);
	
КонецФункции

// Получает основные свойства переданного сертификата.
// 
// Параметры:
//   Сертификат - ДвоичныеДанные - сертификат, свойства которого необходимо получить.
//
// Возвращаемое значение:
//	 ФиксированнаяСтруктура - свойства сертификата.
//    * Версия - Строка - версия сертификата.
//    * ДатаНачала - Дата - дата начала действия сертификата (UTC).
//    * ДатаОкончания - Дата - дата окончания действия сертификата (UTC).
//    * Издатель - ФиксированнаяСтруктура - информация об издателе сертификата:
//        ** CN - commonName; 
//        ** O - organizationName; 
//        ** OU - organizationUnitName; 
//        ** C - countryName; 
//        ** ST - stateOrProvinceName; 
//        ** L - localityName; 
//        ** E - emailAddress; 
//        ** SN - surname; 
//        ** GN - givenName; 
//        ** T - title;
//        ** STREET - streetAddress;
//        ** OGRN - ОГРН;
//        ** OGRNIP - ОГРНИП;
//        ** INN - ИНН;
//        ** SNILS - СНИЛС;
//           ...
//    * ИспользоватьДляПодписи - Булево - указывает, можно ли использовать данный сертификат для подписи.
//    * ИспользоватьДляШифрования - Булево - указывает, можно ли использовать данный сертификат для шифрования.
//    * ОткрытыйКлюч - ДвоичныеДанные - содержит данные открытого ключа.
//    * Отпечаток - ДвоичныеДанные - содержит данные отпечатка. Вычисляется динамически, по алгоритму SHA-1.
//    * РасширенныеСвойства - ФиксированнаяСтруктура -  расширенные свойства сертификата:
//        ** EKU - ФиксированныйМассив - Enhanced Key Usage.
//    * СерийныйНомер - ДвоичныеДанные - серийный номер сертификата.
//    * Субъект - ФиксированнаяСтруктура - информацию о субъекте сертификата. Состав см. Издатель.
//    * Сертификат - ДвоичныеДанные - файл сертификата в кодировке DER.
//    * Идентификатор - Строка - вычисляется по ключевым свойствам Издателя и серийному номеру по алгоритму SHA1.
//                               Используется для идентификации сертификата в сервисе криптографии.
//
Функция ПолучитьСвойстваСертификата(Сертификат) Экспорт
	
	Возврат СервисКриптографииСлужебный.ПолучитьСвойстваСертификата(Сертификат);
	
КонецФункции

// Извлекает массив сертификатов из данных подписи.
//
// Параметры:
//   Подпись - ДвоичныеДанные - файл подписи.
//
// Возвращаемое значение:
//	 Массив - массив объектов ФиксированнаяСтруктура со свойствами сертификатов.
//    * Издатель - ФиксированнаяСтруктура - информация об издателе сертификата:
//        ** CN - commonName; 
//        ** O - organizationName; 
//        ** OU - organizationUnitName; 
//        ** C - countryName; 
//        ** ST - stateOrProvinceName; 
//        ** L - localityName; 
//        ** E - emailAddress; 
//        ** SN - surname; 
//        ** GN - givenName; 
//        ** T - title;
//        ** STREET - streetAddress;
//        ** OGRN - ОГРН;
//        ** OGRNIP - ОГРНИП;
//        ** INN - ИНН;
//        ** SNILS - СНИЛС;
//           ...
//    * СерийныйНомер - ДвоичныеДанные - серийный номер сертификата.
//    * Сертификат - ДвоичныеДанные - файл сертификата в кодировке DER.
//    * Идентификатор - Строка - вычисляется по ключевым свойствам Издателя и серийному номеру по алгоритму SHA1.
//                               Используется для идентификации сертификата в сервисе криптографии.
//
Функция ПолучитьСертификатыИзПодписи(Подпись) Экспорт
	
	Возврат СервисКриптографииСлужебный.ПолучитьСертификатыИзПодписи(Подпись);
	
КонецФункции

// Извлекает свойства из файла криптосообщения.
//
// Параметры:
//   Криптосообщение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище файла криптосообщения.
//   ТолькоКлючевыеСвойства - Булево - если Истина, то Содержимое будет возвращаться всегда пустое.
//
// Возвращаемое значение:
//   Размер - Число - размер файла в байтах.
//   Тип - Строка - указывает тип сообщения: envelopedData, signedData, unknown.
//   Получатели - ФиксированныйМассив - описание сертификатов получателей зашифрованного сообщения. Только для Тип="envelopedData".
//   	См. описание возвращаемого значения метода ПолучитьСвойстваСертификата 
//   Подписанты - ФиксированныйМассив - описание сертификатов получателей зашифрованного сообщения. Только для Тип="signedData".
//   	См. описание возвращаемого значения метода ПолучитьСвойстваСертификата
//   Содержимое - ДвоичныеДанные - содержимое криптосообщения.
//
Функция ПолучитьСвойстваКриптосообщения(Криптосообщение, ТолькоКлючевыеСвойства = Ложь) Экспорт
	
	Возврат СервисКриптографииСлужебный.ПолучитьСвойстваКриптосообщения(Криптосообщение, ТолькоКлючевыеСвойства);
	
КонецФункции

// Получает возможные способы доставки временных паролей.
//
// Параметры:
//   ИдентификаторСертификата - Строка - идентификатор сертификата, для которого необходимо получить способы доставки паролей.
//
// Возвращаемое значение:
//   Структура - Число - размер файла в байтах.
//     * Телефон          - Строка - замаскированное представление телефона для получения временных паролей в SMS.
//     * ЭлектроннаяПочта - Строка - замаскированное представление электронной почты для получения временных паролей в письмах.
//
Функция ПолучитьНастройкиПолученияВременныхПаролей(ИдентификаторСертификата) Экспорт
	
	Возврат СервисКриптографииСлужебный.ПолучитьСпособыДоставкиПаролей(ИдентификаторСертификата);
	
КонецФункции

//  Выполняет расчет хеш-суммы по переданным данным.
//
// Параметры:
//   Данные - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище файла данных,
//                                     от которых необходимо посчитать хеш-сумму.
//   АлгоритмХеширования - Строка - константа "GOST R 34.11-94", единственный поддерживаемый алгоритм хеширования.
//
//   ПараметрыХеширования - Структура, ФиксированнаяСтруктура - позволяет указать дополнительные параметры хеширования.
//     * ИнвертироватьПолубайты - Булево - управляет инвертированием полубайт в значении хеш-суммы.
//                                Например, прямой порядок - 62 FB, обратный - 26 BF.
//                                Истина - значение по умолчанию.
//
// Возвращаемое значение:
//	 ДвоичныеДанные - значение хеш-суммы.
//
Функция ХешированиеДанных(Данные, АлгоритмХеширования = "GOST R 34.11-94", ПараметрыХеширования = Неопределено) Экспорт
	
	Возврат СервисКриптографииСлужебный.ХешированиеДанных(Данные, АлгоритмХеширования, ПараметрыХеширования);
	
КонецФункции

#КонецОбласти