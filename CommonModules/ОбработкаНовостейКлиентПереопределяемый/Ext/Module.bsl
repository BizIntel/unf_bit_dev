////////////////////////////////////////////////////////////////////////////////
// Подсистема "Новости".
// ОбщийМодуль.ОбработкаНовостейКлиентПереопределяемый.
//
////////////////////////////////////////////////////////////////////////////////

#Область ОбработкаСобытий

// В процедуре могут прописываться специфичные для этой конфигурации вызовы процедур и функций,
//  соответственно новости с помощью гиперссылок могут запускать эти процедуры / функции.
// Из обработчика ОбработкаНовостейКлиент.ОбработкаНавигационнойСсылки для действия "Запуск процедуры с параметрами"
//  вызывается эта процедура со списком значений параметров.
// Состав значений параметров - произвольный.
// Пример:
// Если ТипЗнч(СписокПараметров) = Тип("СписокЗначений") Тогда
//		НайденноеДействие = ИнтернетПоддержкаПользователейКлиентСервер.НайтиЭлементСпискаЗначений(
//			СписокПараметров,
//			Новый Структура("ВариантПоиска, ЗначениеПоиска",
//				"ПоПредставлениюБезУчетаРегистра",
//				"Действие"));
//		Если НайденноеДействие <> Неопределено Тогда
//			Если НайденноеДействие.Значение = "ОткрытьОбработку" Тогда
//				ОткрываемаяФорма = ИнтернетПоддержкаПользователейКлиентСервер.НайтиЭлементСпискаЗначений(
//					СписокПараметров,
//					Новый Структура("ВариантПоиска, ЗначениеПоиска",
//						"ПоПредставлениюБезУчетаРегистра",
//						"ИмяФормы"));
//				Если ОткрываемаяФорма <> Неопределено Тогда
//					ОткрытьФорму(ОткрываемаяФорма);
//				КонецЕсли;
//			ИначеЕсли НайденноеДействие.Значение = "Предупреждение" Тогда
//				Текст = ИнтернетПоддержкаПользователейКлиентСервер.НайтиЭлементСпискаЗначений(
//					СписокПараметров,
//					Новый Структура("ВариантПоиска, ЗначениеПоиска",
//						"ПоПредставлениюБезУчетаРегистра",
//						"Текст"));
//				Если Текст <> Неопределено Тогда
//					Предупреждение(
//						Текст,
//						0,
//						НСтр("ru='Информация'"));
//				КонецЕсли;
//			Иначе
//				// Другие действия
//			КонецЕсли;
//		КонецЕсли;
// КонецЕсли;
//
// Параметры:
//  НовостьСсылка    - Ссылка на новость;
//  Форма            - Форма-владелец, откуда вызывается обработчик;
//  СписокПараметров - СписокЗначений - произвольный список параметров.
//
Процедура ОбработкаСобытия(НовостьСсылка, Форма, СписокПараметров) Экспорт
	
	НайденноеДействие = ОбработкаНовостейКлиентСервер.НайтиПоПредставлению(СписокПараметров, "Действие");
	
	Если НайденноеДействие <> Неопределено Тогда
		
		Если НайденноеДействие.Значение = "ПодключитьЭДО" Тогда
			
			Если УправлениеНебольшойФирмойВызовСервера.ПолучитьФункциональнуюОпциюСервер("ИспользоватьОбменЭД") Тогда
				
				Если ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЕстьПравоНастройкиЭДО(Ложь) Тогда
					ОбменСКонтрагентамиКлиент.ПомощникПодключенияКСервису1СЭДО();
				Иначе
					ТекстПредупреждения = НСтр("ru='Недостаточно прав для настройки обмена электронными документами. Обратитесь к администратору.'");
					ПоказатьПредупреждение(,ТекстПредупреждения);
				КонецЕсли;
				
			ИначеЕсли УправлениеНебольшойФирмойСервер.ЭтоПолноправныйПользователь() Тогда
				
				ОткрытьФорму("Обработка.ПанельАдминистрированияЭДО.Форма.ОбменЭлектроннымиДокументами");
				
			Иначе
				
				ТекстПредупреждения = НСтр("ru='Для включения возможности обмена электронными документами с контрагентами обратитесь к администратору.'");
				ПоказатьПредупреждение(,ТекстПредупреждения);
				
			КонецЕсли;
			
		ИначеЕсли НайденноеДействие.Значение = "Отписаться" Тогда
			
			Результат = ОбработкаНовостейУНФВызовСервера.ОтписатьсяОтЛентыНовостей(НовостьСсылка);
			Если Результат.Успешно Тогда
				ПоказатьОповещениеПользователя(
					НСтр("ru='Отказ получения новостей'"),
					,
					СтрШаблон(НСтр("ru='Лента новостей ""%1"" отключена'"), Результат.ПредставлениеЛентыНовостей),
					БиблиотекаКартинок.Информация32
				);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КонтекстныеНовости

// Процедура переопределяет надписи всплывающего сообщения при попытке открытия формы контекстных новостей,
//  но если контекстных новостей нет.
//
// Параметры:
//  Форма              - Управляемая форма - форма, из которой происходит показ оповещения пользователю;
//  ТекстСообщения     - Строка - заголовок оповещения пользователю, если установить в пустую строку, то сообщение выводиться не будет;
//  ПояснениеСообщения - Строка - пояснение оповещения пользователю;
//  Отказ              - Булево - установить в Ложь, чтобы форма контекстных новостей открылась.
//
Процедура ПереопределитьНадписиСообщенияПриОтсутствииКонтекстныхНовостей(Форма, ТекстСообщения, ПояснениеСообщения, Отказ) Экспорт

КонецПроцедуры

// Процедура переопределяет структуру параметров открытия формы контекстных новостей.
// Можно установить произвольные настройки открытия формы списка контекстных новостей, например скрыть колонку "Подзаголовок" и т.п.
// Если настройки не меняются - можно вызвать из модуля с повторным использованием.
//
// Параметры:
//  ПараметрыОткрытия - Структура - Структура с параметрами открытия, до обработки. Возможны ключи:
//    * ЗаголовокФормы                - Строка - заголовок формы контекстных новостей;
//    * СкрыватьКолонкуЛентаНовостей  - Булево - Истина, если надо скрыть колонку "ЛентаНовостей";
//    * СкрыватьКолонкуПодзаголовок   - Булево - Истина, если надо скрыть колонку "Подзаголовок";
//    * СкрыватьКолонкуДатаПубликации - Булево - Истина, если надо скрыть колонку "ДатаПубликации";
//    * ПоказыватьПанельНавигации     - Булево - Истина, если надо показать гиперссылку перехода к списку всех новостей;
//    * РежимОткрытияОкна             - Строка - режим открытия окна ("Независимый", "Блокировать окно владельца" (по-умолчанию), "Блокировать весь интерфейс").
//
Процедура ПереопределитьПараметрыОткрытияФормыКонтекстныхНовостей(ПараметрыОткрытия) Экспорт


КонецПроцедуры

// Процедура обрабатывает нажатие кнопки, принадлежащей механизму контекстных новостей.
// Вызывается после выполнения стандартных команд (показ формы списка контекстных новостей,
//  открытие новости из подменю контекстных новостей).
//  Можно прописать обработку нестандартных событий. Например, в кнопку "Новости" можно добавить две команды:
//   "Команда_Новость_Список_БыстроеОсвоение" и "Команда_Новость_Список_БазаЗнаний" и на нажатие этих
//    кнопок вызывать форму списка контекстных новостей, но отфильтрованную по определенным лентам новостей, например:
// Пример:
// СписокЛент_БыстроеОсвоение = МойМодуль.ПолучитьСписокЛентНовостей_БыстроеОсвоение(); // Необходимо самостоятельно написать эту функцию!
// СписокЛент_БазаЗнаний      = МойМодуль.ПолучитьСписокЛентНовостей_БазаЗнаний(); // Необходимо самостоятельно написать эту функцию!
// Если Команда.Имя = "Команда_Новость_Список_БыстроеОсвоение" Тогда
//	ПоказатьКонтекстныеНовости(
//		Форма, // ФормаВладелец
//		СписокЛент_БыстроеОсвоение, // СписокЛентНовостей
//		Форма.Новости.Метаданные, // ИмяМетаданных
//		, // ИмяФормы = По всем
//		, // ИмяСобытия = По всем
//		ОбработкаНовостейКлиентПереопределяемый.ПолучитьПараметрыОткрытияФормыКонтекстныхНовостей(
//			Новый Структура("ЗаголовокФормы, СкрыватьКолонкуЛентаНовостей, СкрыватьКолонкуПодзаголовок, СкрыватьКолонкуДатаПубликации, ПоказыватьПанельНавигации, РежимОткрытияОкна",
//				Форма.Новости.ЗаголовокФормыКонтекстныхНовостей, // ЗаголовокФормы
//				Истина, // СкрыватьКолонкуЛентаНовостей
//				Ложь, // СкрыватьКолонкуПодзаголовок
//				Ложь, // СкрыватьКолонкуДатаПубликации
//				Ложь, // ПоказыватьПанельНавигации
//				"Блокировать окно владельца" // РежимОткрытияОкна ("Независимый", "Блокировать окно владельца" (по-умолчанию), "Блокировать весь интерфейс")
//			)
//		) // ПараметрыОткрытия
//	);
// ИначеЕсли Команда.Имя = "Команда_Новость_Список_БазаЗнаний" Тогда
//	ПоказатьКонтекстныеНовости(
//		Форма, // ФормаВладелец
//		СписокЛент_БазаЗнаний, // СписокЛентНовостей
//		Форма.Новости.Метаданные, // ИмяМетаданных
//		, // ИмяФормы = По всем
//		, // ИмяСобытия = По всем
//		ОбработкаНовостейКлиентПереопределяемый.ПолучитьПараметрыОткрытияФормыКонтекстныхНовостей(
//			Новый Структура("ЗаголовокФормы, СкрыватьКолонкуЛентаНовостей, СкрыватьКолонкуПодзаголовок, СкрыватьКолонкуДатаПубликации, ПоказыватьПанельНавигации, РежимОткрытияОкна",
//				Форма.Новости.ЗаголовокФормыКонтекстныхНовостей, // ЗаголовокФормы
//				Истина, // СкрыватьКолонкуЛентаНовостей
//				Ложь, // СкрыватьКолонкуПодзаголовок
//				Ложь, // СкрыватьКолонкуДатаПубликации
//				Ложь, // ПоказыватьПанельНавигации
//				"Блокировать окно владельца" // РежимОткрытияОкна ("Независимый", "Блокировать окно владельца" (по-умолчанию), "Блокировать весь интерфейс")
//			)
//		) // ПараметрыОткрытия
//	);
// КонецЕсли;
//
// Параметры:
//  Форма   - УправляемаяФорма - форма, в которой необходимо обработать нажатие на кнопку механизма контекстных новостей;
//  Команда - КомандаФормы - вызванная команда.
//
Процедура КонтекстныеНовости_ОбработкаКомандыНовости(Форма, Команда) Экспорт


КонецПроцедуры

// Процедура обрабатывает оповещение, приходящее в форму через обработчик ОбработкаОповещения.
// Можно прописать обработку нестандартных оповещений или нестандартные действия.
// Например, при поступлении события "Новости. Новость прочтена" можно в каком-то
//  элементе управления изменить счетчик непрочитанных новостей.
//
// Параметры:
//  Форма        - УправляемаяФорма - форма, в которой необходимо обработать оповещение;
//  ИмяСобытия   - Произвольный - данные обработчика оповещения;
//  Параметр     - Произвольный - данные обработчика оповещения;
//  Источник     - Произвольный - данные обработчика оповещения.
//
Процедура КонтекстныеНовости_ОбработкаОповещения(
			Форма,
			ИмяСобытия,
			Параметр,
			Источник) Экспорт

КонецПроцедуры

// Устаревший функционал.
// Заменена на КонтекстныеНовости_ПриОткрытии_ПередСтандартнойОбработкой и КонтекстныеНовости_ПриОткрытии_ПослеСтандартнойОбработки.
// Процедура вызывается при открытии формы с контекстными новостями.
//
// Параметры:
//  Форма        - УправляемаяФорма - форма, в которой необходимо обработать событие ПриОткрытии.
//
Процедура КонтекстныеНовости_ПриОткрытии(Форма) Экспорт

	// Устаревший функционал - см. комментарий к процедуре.

КонецПроцедуры

// Процедура вызывается при открытии формы с контекстными новостями, перед выполнением стандартной обработки.
//
// Параметры:
//  Форма                - УправляемаяФорма - форма, в которой необходимо обработать событие ПриОткрытии;
//  СтандартнаяОбработка - Булево - если установить в Ложь, то стандартная обработка, а также
//                                  вызов КонтекстныеНовости_ПриОткрытии_ПослеСтандартнойОбработки выполняться не будут.
//
Процедура КонтекстныеНовости_ПриОткрытии_ПередСтандартнойОбработкой(Форма, СтандартнаяОбработка = Истина) Экспорт

КонецПроцедуры

// Процедура вызывается при открытии формы с контекстными новостями, после выполнения стандартной обработки.
//
// Параметры:
//  Форма        - УправляемаяФорма - форма, в которой необходимо обработать событие ПриОткрытии.
//
Процедура КонтекстныеНовости_ПриОткрытии_ПослеСтандартнойОбработки(Форма) Экспорт

КонецПроцедуры

// Устаревший функционал.
// Заменена на КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии_ПередСтандартнойОбработкой
//  и КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии_ПослеСтандартнойОбработки.
// Процедура вызывается из подключаемой процедуры показа контекстных новостей для отображения важных и очень важных новостей при открытии формы.
//
// Параметры:
//  Форма                            - УправляемаяФорма - форма, в которой необходимо обработать событие ПриОткрытии;
//  ИдентификаторыСобытийПриОткрытии - Строка, Массив - идентификаторы событий, по которым необходимо отбирать контекстные новости.
//
Процедура КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(
			Форма,
			ИдентификаторыСобытийПриОткрытии) Экспорт

	// Устаревший функционал - см. комментарий к процедуре.

КонецПроцедуры

// Процедура вызывается из подключаемой процедуры показа контекстных новостей для отображения важных
//  и очень важных новостей при открытии формы.
//
// Параметры:
//  Форма                            - УправляемаяФорма - форма, в которой необходимо обработать событие ПриОткрытии;
//  ИдентификаторыСобытийПриОткрытии - Строка, Массив - идентификаторы событий, по которым необходимо отбирать контекстные новости;
//  СтандартнаяОбработка             - Булево - если установить в Ложь, то стандартная обработка, а также
//                                     вызов КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии_ПослеСтандартнойОбработки
//                                     выполняться не будут.
//
Процедура КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии_ПередСтандартнойОбработкой(
			Форма,
			ИдентификаторыСобытийПриОткрытии,
			СтандартнаяОбработка = Истина) Экспорт

КонецПроцедуры

// Процедура вызывается из подключаемой процедуры показа контекстных новостей для отображения важных
//  и очень важных новостей при открытии формы.
//
// Параметры:
//  Форма                            - УправляемаяФорма - форма, в которой необходимо обработать событие ПриОткрытии;
//  ИдентификаторыСобытийПриОткрытии - Строка, Массив - идентификаторы событий, по которым необходимо отбирать контекстные новости.
//
Процедура КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии_ПослеСтандартнойОбработки(
			Форма,
			ИдентификаторыСобытийПриОткрытии) Экспорт

КонецПроцедуры

#КонецОбласти

#Область НастройкиНовостей

// Процедура вызывается из формы пользовательских настроек новостей (Хранилища настроек / НастройкиНовостей / ФормаНастройкиПоказаНовостей)
//  после нажатия на кнопку ОК.
// Если в переопределяемых модулях с повторно используемыми значениями используется, например,
//   список лент новостей (с учетом отключенных пользователем), то после нажатия на ОК надо сбросить повторно используемые значения:
// ОбновитьПовторноИспользуемыеЗначения();
//
// Параметры:
//  СохраненныеНастройки - Структура - структура уже сохраненных настроек с ключами:
//    * ОтборыПоЛентамНовостейПользовательские - данные по отборам;
//    * ОтключенныеЛентыНовостей               - список отключенных лент новостей;
//    * НастройкиПоказаНовостей                - данные по настройкам показа новостей.
//  Отказ                - Булево - Если установить в Истина, то форма настроек не будет закрыта.
//                                  В таком случае необходимо также вывести сообщение пользователю, почему форма не может быть закрыта.
//
Процедура ПослеЗаписиПользовательскихНастроек(СохраненныеНастройки, Отказ) Экспорт

КонецПроцедуры

// Процедура переопределяет время в секундах, после которого необходимо после старта программы показать важные и очень важные новости.
// По-умолчанию это время = 2 секунды.
// Если переопределить на значение = 0, то при старте программы важные и очень важные новости
//  не будут показаны (но будут показаны после интервала обновления новостей).
//
// Параметры:
//  ИнтервалСекунд - Число - интервал в секундах, после которого (при старте программы) необходимо показать важные и очень важные новости.
//
Процедура ПереопределитьВремяПервогоПоказаВажныхИОченьВажныхНовостейПриСтартеПрограммы(ИнтервалСекунд) Экспорт

КонецПроцедуры

// Процедура переопределяет время в секундах между показами важных новостей.
// По-умолчанию это время = 7 секунд.
// Возможные значения - в интервале 1..30 секунд.
// Механизм последовательного показа новостей необходим для замены стандартного платформенного механизма вызова
//  в цикле ПоказатьОповещениеПользователю, при котором показывается только последнее оповещение, а предыдущие остаются
//  только в окне истории.
//
// Параметры:
//  ИнтервалСекунд - Число - интервал в секундах между показами каждой следующей важной новости.
//
Процедура ПереопределитьИнтервалПоказаВажныхНовостей(ИнтервалСекунд) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ПолучениеФорм

// Процедура переопределяет имя и параметры открытия формы списка новостей.
// Можно задать другое имя формы, например
//	ИмяФормы = "ОбщиеФормы.НоваяФормаСпискаНовостей";
// Можно задать другие параметры открытия формы, например:
//	ПараметрыОткрытия.Вставить("ЗаголовокФормы", "Все новости");
//
// Параметры:
//  ИмяФормы           - Строка - имя формы по-умолчанию;
//  ПараметрыОткрытия  - Структура - структура параметров открытия формы, по умолчанию в ней могут быть ключи:
//    * ЗаголовокФормы - Строка - новый заголовок формы;
//  ПараметрКоманды    - Произвольный - Параметры, которые были переданы в команду показа списка новостей ("Справочник.Новости.Команда*");
//  ПараметрыВыполненияКоманды - Структура - Параметры, которые были переданы в команду показа списка новостей ("Справочник.Новости.Команда*").
//
Процедура ПереопределитьПараметрыОткрытияФормыСпискаНовостей(
			ИмяФормы,
			ПараметрыОткрытия,
			ПараметрКоманды = Неопределено,
			ПараметрыВыполненияКоманды = Неопределено) Экспорт

КонецПроцедуры

// Процедура переопределяет имя и параметры открытия формы списка контекстных новости.
// Можно задать другое имя формы, например
//	ИмяФормы = "ОбщиеФормы.НоваяФормаСпискаКонтекстныхНовостей";
// Можно задать другие параметры открытия формы, например:
//	ПараметрыОткрытия.Вставить("ПоказыватьПанельНавигации", Истина);
//
// Параметры:
//  ИмяФормы          - Строка - имя формы по-умолчанию;
//  ПараметрыОткрытия - Структура - структура параметров открытия формы, по умолчанию в ней могут быть ключи:
//    * РежимОткрытияОкна         - Строка - или "БлокироватьОкноВладельца", или любое другое значение (которое будет воспринято как "Независимое");
//    * ПоказыватьПанельНавигации - Булево - Истина, если надо показать гиперссылку перехода к списку всех новостей.
//
Процедура ПереопределитьПараметрыОткрытияФормыСпискаКонтекстныхНовостей(ИмяФормы, ПараметрыОткрытия) Экспорт

КонецПроцедуры

// Процедура переопределяет имя и параметры открытия формы единственной новости.
// Можно задать другое имя формы, например
//	ИмяФормы = "ОбщиеФормы.НоваяФормаНовости";
// Можно задать другие параметры открытия формы, например:
//	ПараметрыОткрытия.Вставить("ПоказыватьПанельНавигации", Истина);
//
// Параметры:
//  ИмяФормы          - Строка - имя формы по-умолчанию;
//  ПараметрыОткрытия - Структура - структура параметров открытия формы, по умолчанию в ней могут быть ключи:
//    * РежимОткрытияОкна         - Строка - или "БлокироватьОкноВладельца", или любое другое значение (которое будет воспринято как "Независимое");
//    * ПоказыватьПанельНавигации - Булево - Истина, если надо показать гиперссылку перехода к списку всех новостей.
//
Процедура ПереопределитьПараметрыОткрытияФормыНовости(ИмяФормы, ПараметрыОткрытия) Экспорт

КонецПроцедуры

// Процедура переопределяет имя и параметры открытия формы очень важных контекстных новостей.
// Можно задать другое имя формы, например
//	ИмяФормы = "ОбщиеФормы.НоваяФормаСпискаОченьВажныхКонтекстныхНовостей";
//
// Можно задать другое имя формы, в зависимости от параметров открытия, например если хотим открыть только одну новость
//  в окне для показа одной новости, а не в форме просмотра списка новостей:
// Если ТипЗнч(ПараметрыОткрытия) = Тип("Структура") Тогда
//	Если (ПараметрыОткрытия.Свойство("СписокНовостей") = Истина)
//			И (ТипЗнч(ПараметрыОткрытия.СписокНовостей) = Тип("СписокЗначений"))
//			И (ПараметрыОткрытия.СписокНовостей.Количество() = 1) Тогда
//		ПараметрыОткрытия.Вставить("Ключ", ПараметрыОткрытия.СписокНовостей[0].Значение);
//		ИмяФормы = "Справочник.Новости.Форма.ФормаНовости";
//	ИначеЕсли (ПараметрыОткрытия.Свойство("АдресМассиваНовостей") = Истина)
//			И (ТипЗнч(ПараметрыОткрытия.АдресМассиваНовостей) = Тип("Строка")) Тогда
//		// Вызов серверного кода для проверки - одна новость или несколько, затратен
//		// Если новости находятся на сервере, то тогда всегда открываем форму по-умолчанию
//	КонецЕсли;
// КонецЕсли;
//
// Параметры:
//  ИмяФормы          - Строка - имя формы по-умолчанию;
//  ПараметрыОткрытия - Структура - структура параметров открытия формы, по умолчанию в ней могут быть ключи:
//    * РежимОткрытияОкна                     - Строка - или "БлокироватьОкноВладельца", или любое другое значение
//                                                       (которое будет воспринято как "Независимое");
//    * Заголовок                             - Строка - Заголовок окна;
//    * СписокНовостей                        - Список значений - список новостей (если передан, то параметры АдресМассиваНовостей,
//                                                       ИдентификаторФормы, ИдентификаторыСобытий) можно не проверять;
//    * АдресМассиваНовостей                  - Строка - Адрес хранилища новостей (массив структур) - в случае,
//                                                       если новости не хранятся в реквизите формы;
//    * ИдентификаторФормы                    - Строка - идентификатор формы, в случае, если новости не хранятся в реквизите формы;
//    * ИдентификаторыСобытий                 - Строка - идентификатор события, в случае, если новости не хранятся в реквизите формы;
//    * Ключ                                  - СправочникСсылка.Новости - в случае, если будет открываться форма единственной новости;
//    * ВремяПереносаПоказатьПозжеМинут       - Число - Время (в минутах), на которое новости из списка становятся неважными
//                                                       и не отображаются при повторном открытии формы-владельца;
//    * СкрыватьСписокНовостейДляОднойНовости - Булево - Если = ИСТИНА и в СписокНовостей всего 1 новость, то список новостей
//                                                       (слева в форме контекстных новостей) не будет отображаться.
//
Процедура ПереопределитьПараметрыОткрытияФормыСпискаОченьВажныхКонтекстныхНовостей(ИмяФормы, ПараметрыОткрытия) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ИнтерактивныеДействия

// Процедура выполняет интерактивное действие, которое невозможно выполнить на сервере - оповещения и т.п.
//
// Параметры
//  Действие - Произвольный.
//
Процедура ВыполнитьИнтерактивноеДействие(Действие) Экспорт

КонецПроцедуры

#КонецОбласти

