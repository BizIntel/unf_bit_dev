// Функция возвращает пустую структуру состояния кассовой смены.
//
Функция ПолучитьСтруктуруОписанияКассовойСмены()
	
	СостояниеКассовойСмены = Новый Структура;
	СостояниеКассовойСмены.Вставить("ДатаИзмененияСтатуса");
	СостояниеКассовойСмены.Вставить("СтатусКассовойСмены");
	СостояниеКассовойСмены.Вставить("КассоваяСмена");
	СостояниеКассовойСмены.Вставить("НаличностьВКассе");
	СостояниеКассовойСмены.Вставить("НомерКассовойСмены");
	СостояниеКассовойСмены.Вставить("СменаОткрыта", Ложь);
	
	// Описание реквизитов кассовой смены.
	СостояниеКассовойСмены.Вставить("КассаККМ");
	СостояниеКассовойСмены.Вставить("Организация");
	//СостояниеКассовойСмены.Вставить("Кассир");
	СостояниеКассовойСмены.Вставить("СтруктурнаяЕдиница");
	СостояниеКассовойСмены.Вставить("ВалютаДокумента");
	СостояниеКассовойСмены.Вставить("ВалютаДокументаПредставление");
	СостояниеКассовойСмены.Вставить("ОтчетОРозничныхПродажах");
	СостояниеКассовойСмены.Вставить("ВидЦен");
	СостояниеКассовойСмены.Вставить("Подразделение");
	СостояниеКассовойСмены.Вставить("СуммаВключаетНДС");
	СостояниеКассовойСмены.Вставить("НДСВключатьВСтоимость");
	СостояниеКассовойСмены.Вставить("НалогообложениеНДС");
	СостояниеКассовойСмены.Вставить("Ответственный");
	
	Возврат СостояниеКассовойСмены;
	
КонецФункции

// Функция возвращает структуру, характеризующую состояние последней кассовой смены по кассе ККМ.
//
Функция ПолучитьСостояниеКассовойСмены(КассаККМ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	КассоваяСменаДокумент.Номер КАК НомерКассовойСмены,
	|	КассоваяСменаДокумент.Ссылка КАК КассоваяСмена,
	|	КассоваяСменаДокумент.Статус КАК СтатусКассовойСмены,
	|	КассоваяСменаДокумент.КассаККМ КАК КассаККМ,
	|	КассоваяСменаДокумент.КассаККМ.ВалютаДенежныхСредств КАК ВалютаДокумента,
	|	КассоваяСменаДокумент.КассаККМ.ВалютаДенежныхСредств.Представление КАК ВалютаДокументаПредставление,
	|	КассоваяСменаДокумент.Организация КАК Организация,
	|	КассоваяСменаДокумент.КассаККМ.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА КассоваяСменаДокумент.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.Открыта)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СменаОткрыта,
	|	ВЫБОР
	|		КОГДА КассоваяСменаДокумент.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.Открыта)
	|			ТОГДА КассоваяСменаДокумент.НачалоКассовойСмены
	|		ИНАЧЕ КассоваяСменаДокумент.ОкончаниеКассовойСмены
	|	КОНЕЦ КАК ДатаИзмененияСтатуса,
	|	ЕСТЬNULL(ДенежныеСредстваККМОстатки.СуммаОстаток, 0) КАК НаличностьВКассе,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.Ссылка, НЕОПРЕДЕЛЕНО) КАК ОтчетОРозничныхПродажах,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.ВидЦен, НЕОПРЕДЕЛЕНО)  КАК ВидЦен,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.НалогообложениеНДС, НЕОПРЕДЕЛЕНО)  КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.Ответственный, НЕОПРЕДЕЛЕНО)  КАК Ответственный,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.Подразделение, НЕОПРЕДЕЛЕНО)  КАК Подразделение,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.СуммаВключаетНДС, НЕОПРЕДЕЛЕНО)  КАК СуммаВключаетНДС,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.НДСВключатьВСтоимость, НЕОПРЕДЕЛЕНО)  КАК НДСВключатьВСтоимость
	|ИЗ
	|	Документ.КассоваяСмена КАК КассоваяСменаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваВКассахККМ.Остатки(, КассаККМ = &КассаККМ) КАК ДенежныеСредстваККМОстатки
	|		ПО КассоваяСменаДокумент.КассаККМ = ДенежныеСредстваККМОстатки.КассаККМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ПО КассоваяСменаДокумент.Ссылка = ОтчетОРозничныхПродажах.КассоваяСмена
	|ГДЕ
	|	КассоваяСменаДокумент.Проведен
	|	И КассоваяСменаДокумент.КассаККМ = &КассаККМ
	|
	|УПОРЯДОЧИТЬ ПО
	|	КассоваяСменаДокумент.Дата УБЫВ,
	|	КассоваяСмена УБЫВ";
	
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ОписаниеКассовойСмены = ПолучитьСтруктуруОписанияКассовойСмены();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ОписаниеКассовойСмены, Выборка);
		Если НЕ ЗначениеЗаполнено(ОписаниеКассовойСмены.НалогообложениеНДС) Тогда
			ОписаниеКассовойСмены.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОписаниеКассовойСмены.Ответственный) Тогда
			ОписаниеКассовойСмены.Ответственный = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
				Пользователи.ТекущийПользователь(),
				"ОсновнойОтветственный"
			);
		КонецЕсли;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ДенежныеСредстваККМОстатки.СуммаОстаток, 0) КАК НаличностьВКассе
		|ИЗ
		|	Справочник.КассыККМ КАК КассыККМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваВКассахККМ.Остатки(
		|				,
		|				КассаККМ = &КассаККМ) КАК ДенежныеСредстваККМОстатки
		|		ПО (ДенежныеСредстваККМОстатки.КассаККМ = КассыККМ.Ссылка)
		|ГДЕ
		|	КассыККМ.Ссылка = &КассаККМ";
		
		Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ОписаниеКассовойСмены.КассаККМ = КассаККМ;
		ОписаниеКассовойСмены.НаличностьВКассе    = Выборка.НаличностьВКассе;
	КонецЕсли;
	
	Возврат ОписаниеКассовойСмены;
	
КонецФункции

// Функция возвращает текущую сумму положительного остатка денежных средств (ДС) по кассе ККМ.
// Параметры:
//  КассаККМ - СправочникСсылка.КассыККМ
// Возвращаемое значение:
//  Число
//
Функция СуммаОстаткаДСПоКассеККМ(КассаККМ, ДоговорПлатежногоАгента = Неопределено) Экспорт

	ЗапросОстатокДСвКассе= Новый Запрос();
	ЗапросОстатокДСвКассе.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДенежныеСредстваККМОстатки.СуммаОстаток КАК СуммаОстатка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваВКассахККМ.Остатки(
	|			,
	|			КассаККМ = &КассаККМ) КАК ДенежныеСредстваККМОстатки
	|ГДЕ
	|	ДенежныеСредстваККМОстатки.СуммаОстаток > 0";
	ЗапросОстатокДСвКассе.УстановитьПараметр("КассаККМ", КассаККМ);
		
	ВыборкаОстатокДСвКассе = ЗапросОстатокДСвКассе.Выполнить().Выбрать();
	Если ВыборкаОстатокДСвКассе.Следующий() Тогда
		СуммаОстатка = ВыборкаОстатокДСвКассе.СуммаОстатка;
	Иначе
		СуммаОстатка = 0;
	КонецЕсли;
	
	Возврат СуммаОстатка;
	
КонецФункции // СуммаОстаткаДСПоКассеККМ()

// Функция выполняет открытие кассовой смены.
//
Функция ОткрытьКассовуюСмену(КассаККМ, ОписаниеОшибки = "", ТекстПереходящегоОстатка = "", КассоваяСмена = Неопределено) Экспорт
	
	Результат = Истина;
	
	СтруктураСостояниеКассовойСмены = ПолучитьСостояниеКассовойСмены(КассаККМ);
	
	ДатаОткрытияКассовойСмены = ТекущаяДатаСеанса();
	
	ТекстПереходящегоОстатка = "";
	Если СтруктураСостояниеКассовойСмены.СтатусКассовойСмены = Перечисления.СтатусыКассовойСмены.Открыта Тогда
		
		КассоваяСмена = СтруктураСостояниеКассовойСмены.КассоваяСмена; 
		
		// Если смена открыта, то с момента открытия должно пройти не больше чем 24 часа.
		Если ДатаОткрытияКассовойСмены - СтруктураСостояниеКассовойСмены.ДатаИзмененияСтатуса < 86400 Тогда
			
			// Все в порядке
			
		Иначе
			
			Результат = Ложь;
			// Вероятно, что смена была не закрыта.
			ОписаниеОшибки = НСтр("ru = 'С момента открытия кассовой смены истекло более 24 часов.'");
			
		КонецЕсли;
		
	Иначе
		
		// Смена закрыта. Откроем новую кассовую смену.
		
		НоваяКассоваяСмена = Документы.КассоваяСмена.СоздатьДокумент();
		РеквизитыКассыККМ = Справочники.КассыККМ.ПолучитьРеквизитыКассыККМ(КассаККМ);
		ЗаполнитьЗначенияСвойств(НоваяКассоваяСмена, РеквизитыКассыККМ);
		
		НоваяКассоваяСмена.Дата                   = ДатаОткрытияКассовойСмены;
		НоваяКассоваяСмена.Статус                 = Перечисления.СтатусыКассовойСмены.Открыта;
		НоваяКассоваяСмена.НачалоКассовойСмены    = ДатаОткрытияКассовойСмены;
		НоваяКассоваяСмена.ОкончаниеКассовойСмены = '00010101';
		
		Если НоваяКассоваяСмена.ПроверитьЗаполнение() Тогда
			НоваяКассоваяСмена.Записать(РежимЗаписиДокумента.Проведение);
			
			СуммаОстатка = СуммаОстаткаДСПоКассеККМ(КассаККМ);
			Если СуммаОстатка <> 0 Тогда
				ТекстПереходящегоОстатка = НСтр("ru = 'Сумма остатка в кассе: %1 руб.'");
				ТекстПереходящегоОстатка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПереходящегоОстатка, 
																						 Формат(СуммаОстатка, "ЧЦ=15; ЧДЦ=2; ЧРГ=' '; ЧН=0,00; ЧГ=3,0"));
			КонецЕсли;
			КассоваяСмена = НоваяКассоваяСмена.Ссылка;
		Иначе
			Результат = Ложь;
			ОписаниеОшибки = НСтр("ru = 'Проверьте настройки кассы ККМ.'");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция СоздатьОтчетОРозничныхПродажах(КассоваяСмена, ОписаниеОшибки = "") Экспорт
	
	НовыйОтчетОРозничныхПродажах = Документы.ОтчетОРозничныхПродажах.СоздатьДокумент();
	НовыйОтчетОРозничныхПродажах.Автор = Пользователи.ТекущийПользователь();
	НовыйОтчетОРозничныхПродажах.Заполнить(Новый Структура("КассаККМ", КассоваяСмена.КассаККМ));
	
	НовыйОтчетОРозничныхПродажах.Дата = КассоваяСмена.Дата;
	НовыйОтчетОРозничныхПродажах.КассоваяСмена = КассоваяСмена.Ссылка;
	Если КассоваяСмена.Статус = Перечисления.СтатусыКассовойСмены.Закрыта Тогда
		НовыйОтчетОРозничныхПродажах.СтатусКассовойСмены = Перечисления.СтатусыОтчетаОРозничныхПродажах.Закрыта;
	Иначе
		НовыйОтчетОРозничныхПродажах.СтатусКассовойСмены = Перечисления.СтатусыОтчетаОРозничныхПродажах.Открыта;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", НовыйОтчетОРозничныхПродажах.Организация);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", НовыйОтчетОРозничныхПродажах.КассаККМ.СтруктурнаяЕдиница);
	
	Запрос.УстановитьПараметр("Дата", НовыйОтчетОРозничныхПродажах.Дата);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПримененияЕНВД.РозничнаяТорговляОблагаетсяЕНВД КАК ЕНВД
	|ИЗ
	|	РегистрСведений.ПримененияЕНВД.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ПримененияЕНВД
	|ГДЕ
	|	ПримененияЕНВД.РозничнаяТорговляОблагаетсяЕНВД";
	
	Выборка = Запрос.Выполнить();
	НовыйОтчетОРозничныхПродажах.УчитыватьВНУ = Выборка.Пустой();
	
	Если НовыйОтчетОРозничныхПродажах.ПроверитьЗаполнение() Тогда
		НовыйОтчетОРозничныхПродажах.Записать(РежимЗаписиДокумента.Запись);
		Возврат НовыйОтчетОРозничныхПродажах;
	Иначе
		ВыполненоУспешно = Ложь;
		ОписаниеОшибки = НСтр("ru = 'Проверьте настройки розничного склада и кассы ККМ.'");
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Процедура выполняет закрытие кассовой смены.
//
Функция ЗакрытьКассовуюСмену(КассаККМ, ОписаниеОшибки = "", СсылкаНаОтчет = Неопределено) Экспорт
	
	Результат = Истина;
	
	СтруктураСостояниеКассовойСмены = ПолучитьСостояниеКассовойСмены(КассаККМ);
	
	Если СтруктураСостояниеКассовойСмены.СтатусКассовойСмены = Перечисления.СтатусыКассовойСмены.Открыта Тогда
		
		КассоваяСменаОбъект = СтруктураСостояниеКассовойСмены.КассоваяСмена.ПолучитьОбъект();
		КассоваяСменаОбъект.Дата                   = ТекущаяДатаСеанса();
		КассоваяСменаОбъект.Статус    = Перечисления.СтатусыКассовойСмены.Закрыта;
		КассоваяСменаОбъект.ОкончаниеКассовойСмены = КассоваяСменаОбъект.Дата;
		
		Попытка
			
			КассоваяСменаОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Если СсылкаНаОтчет <> Неопределено Тогда
				ОбъектОтчет = СсылкаНаОтчет.ПолучитьОбъект();
				ОбъектОтчет.КассоваяСмена = СтруктураСостояниеКассовойСмены.КассоваяСмена;
				ОбъектОтчет.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			
		Исключение
			
			Результат = Ложь;
			
			ОписаниеОшибки = НСтр("ru = 'При закрытии кассовой смены произошла ошибка.
			                            |Дополнительное описание:
			                            |%ДополнительноеОписание%'");
			ОписаниеОшибки = СтрЗаменить(ОписаниеОшибки, "%ДополнительноеОписание%", ИнформацияОбОшибке().Описание);
			
		КонецПопытки;
		
	Иначе
		
		// Смена не открыта.
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Функция проверяет состояние кассовой смены на дату. Если смена не открыта - возвращаеся описание ошибки.
//
Функция СменаОткрыта(ОтчетОРозничныхПродажах, Дата, ОписаниеОшибки = "") Экспорт
	
	СменаОткрыта = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КассоваяСмена.Статус КАК Статус,
	|	КассоваяСмена.НачалоКассовойСмены КАК НачалоКассовойСмены,
	|	КассоваяСмена.ОкончаниеКассовойСмены КАК ОкончаниеКассовойСмены
	|ИЗ
	|	Документ.КассоваяСмена КАК КассоваяСмена
	|ГДЕ
	|	КассоваяСмена.Проведен
	|	И КассоваяСмена.Ссылка = &КассоваяСмена";
	
	Запрос.УстановитьПараметр("КассоваяСмена", ОтчетОРозничныхПродажах.КассоваяСмена);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если Выборка.Статус = Перечисления.СтатусыКассовойСмены.Открыта Тогда
			
			// Если смена открыта, то с момента открытия должно пройти не больше чем 24 часа.
			Если Дата - Выборка.НачалоКассовойСмены < 86400 Тогда
				СменаОткрыта = Истина;
			Иначе
				ОписаниеОшибки = НСтр("ru = 'С момента открытия кассовой смены истекло более 24 часов. Необходимо выполнить закрытие кассовой смены'");
				СменаОткрыта = Ложь;
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(Выборка.Статус) Тогда
			
			Если Выборка.ОкончаниеКассовойСмены >= Дата И Выборка.НачалоКассовойСмены <= Дата Тогда
				СменаОткрыта = Истина;
			Иначе
				ОписаниеОшибки = НСтр("ru = 'Смена не открыта'");
				СменаОткрыта = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ОписаниеОшибки = НСтр("ru = 'Смена не открыта'");
		СменаОткрыта = Ложь;
		
	КонецЕсли;
	
	Возврат СменаОткрыта;
	
КонецФункции // СменаОткрыта()

// Функция возвращает структуру, характеризующую состояние кассовой смены на дату.
//
Функция ПолучитьСостояниеКассовойСменыНаДату(КассаККМ, ДатаВремя) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	КассоваяСменаДокумент.Номер КАК НомерКассовойСмены,
	|	КассоваяСменаДокумент.Ссылка КАК КассоваяСмена,
	|	КассоваяСменаДокумент.Статус КАК СтатусКассовойСмены,
	|	КассоваяСменаДокумент.КассаККМ КАК КассаККМ,
	|	КассоваяСменаДокумент.КассаККМ.ВалютаДенежныхСредств КАК ВалютаДокумента,
	|	КассоваяСменаДокумент.КассаККМ.ВалютаДенежныхСредств.Представление КАК ВалютаДокументаПредставление,
	|	КассоваяСменаДокумент.Организация КАК Организация,
	|	КассоваяСменаДокумент.КассаККМ.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА КассоваяСменаДокумент.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.Открыта)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СменаОткрыта,
	|	ВЫБОР
	|		КОГДА КассоваяСменаДокумент.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.Открыта)
	|			ТОГДА КассоваяСменаДокумент.НачалоКассовойСмены
	|		ИНАЧЕ КассоваяСменаДокумент.ОкончаниеКассовойСмены
	|	КОНЕЦ КАК ДатаИзмененияСтатуса,
	|	ЕСТЬNULL(ДенежныеСредстваККМОстатки.СуммаОстаток, 0) КАК НаличностьВКассе,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.Ссылка, НЕОПРЕДЕЛЕНО) КАК ОтчетОРозничныхПродажах,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.ВидЦен, НЕОПРЕДЕЛЕНО) КАК ВидЦен,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.НалогообложениеНДС, НЕОПРЕДЕЛЕНО) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.Ответственный, НЕОПРЕДЕЛЕНО) КАК Ответственный,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.Подразделение, НЕОПРЕДЕЛЕНО) КАК Подразделение,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.СуммаВключаетНДС, НЕОПРЕДЕЛЕНО) КАК СуммаВключаетНДС,
	|	ЕСТЬNULL(ОтчетОРозничныхПродажах.НДСВключатьВСтоимость, НЕОПРЕДЕЛЕНО) КАК НДСВключатьВСтоимость
	|ИЗ
	|	Документ.КассоваяСмена КАК КассоваяСменаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваВКассахККМ.Остатки(&ДатаВремя, КассаККМ = &КассаККМ) КАК ДенежныеСредстваККМОстатки
	|		ПО КассоваяСменаДокумент.КассаККМ = ДенежныеСредстваККМОстатки.КассаККМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ПО КассоваяСменаДокумент.Ссылка = ОтчетОРозничныхПродажах.КассоваяСмена
	|ГДЕ
	|	КассоваяСменаДокумент.Проведен
	|	И КассоваяСменаДокумент.КассаККМ = &КассаККМ
	|	И ВЫБОР
	|			КОГДА КассоваяСменаДокумент.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.Открыта)
	|				ТОГДА КассоваяСменаДокумент.НачалоКассовойСмены
	|			ИНАЧЕ КассоваяСменаДокумент.ОкончаниеКассовойСмены
	|		КОНЕЦ <= &ДатаВремя
	|
	|УПОРЯДОЧИТЬ ПО
	|	КассоваяСменаДокумент.Дата УБЫВ,
	|	КассоваяСмена УБЫВ";
	
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	Запрос.УстановитьПараметр("ДатаВремя", ДатаВремя + 100);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ОписаниеКассовойСмены = ПолучитьСтруктуруОписанияКассовойСмены();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ОписаниеКассовойСмены, Выборка);
		Если НЕ ЗначениеЗаполнено(ОписаниеКассовойСмены.НалогообложениеНДС) Тогда
			ОписаниеКассовойСмены.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОписаниеКассовойСмены.Ответственный) Тогда
			ОписаниеКассовойСмены.Ответственный = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
				Пользователи.ТекущийПользователь(),
				"ОсновнойОтветственный"
			);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОписаниеКассовойСмены;
	
КонецФункции // ПолучитьСостояниеКассовойСменыНаДату()

// Функция возвращает остатков денежных средств в кассе в валюте кассы.
//
Функция ПолучитьОстатокДенежныхСредствВКассеККМ(КассаККМ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДенежныеСредстваВКассахККМОстатки.СуммаВалОстаток КАК НаличностьВКассе
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваВКассахККМ.Остатки(, КассаККМ = &КассаККМ) КАК ДенежныеСредстваВКассахККМОстатки";
	
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.НаличностьВКассе;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции // ПолучитьОстатокДенежныхСредствВКассе()

Процедура ПриЗаписиКассовойСменыПереопределяемый(КассоваяСмена) Экспорт
	
	ОтчетОРозничныхПродажах = Документы.ОтчетОРозничныхПродажах.ПолучитьОтчетОРозничныхПродажахПоКассовойСмене(КассоваяСмена);
		
	Если ЗначениеЗаполнено(ОтчетОРозничныхПродажах) Тогда
		ОтчетОРозничныхПродажахОбъект = ОтчетОРозничныхПродажах.ПолучитьОбъект();
		НужноЗаписатьОтчет = Ложь;
		Если КассоваяСмена.Статус = Перечисления.СтатусыКассовойСмены.Закрыта
			И ОтчетОРозничныхПродажахОбъект.СтатусКассовойСмены <> Перечисления.СтатусыОтчетаОРозничныхПродажах.Закрыта
			И ОтчетОРозничныхПродажахОбъект.СтатусКассовойСмены <> Перечисления.СтатусыОтчетаОРозничныхПродажах.ЗакрытаЧекиЗаархивированы Тогда
			ОтчетОРозничныхПродажахОбъект.СтатусКассовойСмены = Перечисления.СтатусыОтчетаОРозничныхПродажах.Закрыта;
			НужноЗаписатьОтчет = Истина;
		ИначеЕсли КассоваяСмена.Статус = Перечисления.СтатусыКассовойСмены.Открыта
			И ОтчетОРозничныхПродажахОбъект.СтатусКассовойСмены <> Перечисления.СтатусыОтчетаОРозничныхПродажах.Открыта Тогда
			ОтчетОРозничныхПродажахОбъект.СтатусКассовойСмены = Перечисления.СтатусыОтчетаОРозничныхПродажах.Открыта;
			НужноЗаписатьОтчет = Истина;	
		КонецЕсли;
		Если НужноЗаписатьОтчет Тогда
			Попытка
				РежимЗаписи = ?(ОтчетОРозничныхПродажахОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись);
				ОтчетОРозничныхПродажахОбъект.Записать(РежимЗаписи);
			Исключение
				ЗаписьЖурналаРегистрации("СинхронизацияСтатусовКассовойСмены", УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЕсли;
	Иначе
		Попытка
			РозничныеПродажиСервер.СоздатьОтчетОРозничныхПродажах(КассоваяСмена);
		Исключение
			ЗаписьЖурналаРегистрации("СозданиеОтчетаОРозничныхПродажах", УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКодСистемыНалогообложения(Организация, СтруктурнаяЕдиница = Неопределено, ДатаДокумента = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктурнаяЕдиница)
		И РегистрыСведений.ПримененияЕНВД.ПрименяетсяЕНВД(Организация, СтруктурнаяЕдиница, ДатаДокумента) Тогда
		Возврат 3; // ЕНВД
	КонецЕсли;
	
	Возврат РегистрыСведений.СистемыНалогообложенияОрганизаций.ПолучитьКодСистемыНалогообложенияОрганизации(Организация, ДатаДокумента);
	
КонецФункции

Процедура КассоваяСменаПриЗаписиДокументаПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если НЕ Источник.ДополнительныеСвойства.Свойство("НеСоздаватьОтчетОРозничныхПродажах") Тогда
		РозничныеПродажиСервер.ПриЗаписиКассовойСменыПереопределяемый(Источник.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура КассоваяСменаПередЗаписьюПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Источник.КассаККМ)
		И ЗначениеЗаполнено(Источник.ФискальноеУстройство) Тогда
		Источник.КассаККМ = Справочники.КассыККМ.ПолучитьКассуККМПоФискальномуУстройству(Источник.ФискальноеУстройство);
	КонецЕсли;

КонецПроцедуры

// Убирает разделители в номере телефона.
//
// Параметры:
//    НомерТелефона - Строка - номер телефона или факса.
//
// Возвращаемое значение:
//     Строка - номер телефона или факса без разделителей.
//
Функция УбратьРазделителиВНомереТелефона(Знач НомерТелефона) Экспорт
	
	НомерТелефона = СтрЗаменить(НомерТелефона, "-", "");
	НомерТелефона = СтрЗаменить(НомерТелефона, " ", "");
	НомерТелефона = СтрЗаменить(НомерТелефона, "+7", "");
	НомерТелефона = СтрЗаменить(НомерТелефона, "(", "");
	НомерТелефона = СтрЗаменить(НомерТелефона, ")", "");
	
	Возврат НомерТелефона;
	
КонецФункции

Функция ПолучитьРеквизитыКассира(Автор) Экспорт
	
	СотрудникиПользователя = РегистрыСведений.СотрудникиПользователя.ПолучитьСотрудниковПользователя(Автор);
	Если ЗначениеЗаполнено(СотрудникиПользователя) И СотрудникиПользователя.Количество() > 0 Тогда
		Кассир = СотрудникиПользователя[0];
		Если ЗначениеЗаполнено(СотрудникиПользователя[0].Физлицо) Тогда
			ИмяКассира = Строка(СотрудникиПользователя[0].Физлицо.Наименование);
			КассирИНН = СотрудникиПользователя[0].Физлицо.ИНН;
		Иначе
			Кассир = "";
			ИмяКассира = "";
			КассирИНН = "";
		КонецЕсли;
	Иначе
		Кассир = "";
		ИмяКассира = "";
		КассирИНН = "";
	КонецЕсли;
	
	Возврат Новый Структура("Кассир, ИмяКассира, КассирИНН", Кассир, ИмяКассира, КассирИНН);
	
КонецФункции