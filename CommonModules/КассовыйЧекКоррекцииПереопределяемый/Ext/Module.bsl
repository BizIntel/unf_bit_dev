#Область ПрограммныйИнтерфейс

#Область МодульОбъекта

// Переопределяемая процедура обработки заполнения.
// Вызывается из модуля объекта "КассовыйЧекКоррекции"
// 
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//  ДанныеЗаполнения - Данные заполнения, переданные при программном и интерфейсном вызоде процедуры
//  СтандартнаяОбработка - Булево, см. описание процедуры ОбработкаЗаполнения модуля документа
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(Объект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") 
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЧекККМ")Тогда
		Объект.Организация = ДанныеЗаполнения.Организация;
		Объект.КассаККМ    = ДанныеЗаполнения.КассаККМ;
		Объект.ОснованиеДляКоррекции = ДанныеЗаполнения;
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.Организация) 
		И НЕ ЗначениеЗаполнено(Объект.КассаККМ) Тогда
		Объект.КассаККМ = Справочники.КассыККМ.ПолучитьКассуККМПоУмолчанию(Перечисления.ТипыКассККМ.ФискальныйРегистратор);
	КонецЕсли;

	ИнициализироватьДокумент(Объект, ДанныеЗаполнения);
	
	Если ЗначениеЗаполнено(Объект.КассаККМ)  Тогда
		КассаККМПриИзменении(Объект);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ОснованиеДляКоррекции) Тогда
		ОснованиеДляКоррекцииПриИзменении(Объект);
	КонецЕсли;
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая перед записью.
// Вызывается из модуля объекта "КассовыйЧекКоррекции"
// 
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//  Отказ, РежимЗаписи, РежимПроведения - см. описание процедуры "ПередЗаписью" модуля документа
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
КонецПроцедуры

// Переопределяемая процедура обработки проведения.
// Вызывается из модуля объекта "КассовыйЧекКоррекции"
// 
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//  Отказ, РежимПроведения - см. описание процедуры "ОбработкаПроведения" модуля документа
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая при копировании.
// Вызывается из модуля объекта "КассовыйЧекКоррекции"
// 
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//  ОбъектКопирования - ДокументОбъект.КассовыйЧекКоррекции, копируемый документ
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	ИнициализироватьДокумент(Объект);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ФормаДокумента

#Область ФормаДокументаОбработчикиСобытийФормы

// Переопределяемая процедура, вызываемая при создании.
// Вызывается из модуля формы документа "КассовыйЧекКоррекции"
// 
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//  Форма  - Форма документа КассовыйЧекКоррекции
//  Отказ, СтандартнаяОбработка - см. описание процедуры "ПриСозданииНаСервере" модуля формы документа
//
Процедура ПриСозданииНаСервере(Объект, Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ИзменитьФормуДокумента(Форма);
	
	Форма.ИспользоватьПодключаемоеОборудование = МенеджерОборудованияВызовСервераПереопределяемый.ИспользоватьПодключаемоеОборудование();
	
	УстановитьДоступностьЭлементовИФормы(Объект, Форма);
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая при чтении.
// Вызывается из модуля формы документа "КассовыйЧекКоррекции"
// 
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//  Форма  - Форма документа КассовыйЧекКоррекции
//  ТекущийОбъект - см. описание процедуры "ПриЧтенииНаСервере" модуля формы документа
//
Процедура ПриЧтенииНаСервере(Объект, Форма, ТекущийОбъект) Экспорт
	
	ИзменитьФормуДокумента(Форма);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(Форма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(Форма, ТекущийОбъект);
	
	УстановитьДоступностьЭлементовИФормы(Объект, Форма);
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая перед записью на сервере.
// Вызывается из модуля формы документа "КассовыйЧекКоррекции"
// 
// Параметры:
//  Форма  - Форма документа КассовыйЧекКоррекции
//  Отказ, ТекущийОбъект, ПараметрыЗаписи - см. описание процедуры "ПередЗаписьюНаСервере" модуля формы документа
//
Процедура ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	Если ТекущийОбъект.Ответственный.Пустая() Тогда
		ТекущийОбъект.Ответственный = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			Пользователи.ТекущийПользователь(),
			"ОсновнойОтветственный");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ФормаДокументаОбработчикиСобытийЭлементовШапки

// Переопределяемая процедура, вызываемая при изменении кассы ККМ.
// Вызывается из модуля формы документа "КассовыйЧекКоррекции"
// 
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//
Процедура КассаККМПриИзменении(Объект) Экспорт
	
	Объект.ПодключаемоеОборудование = Объект.КассаККМ.ПодключаемоеОборудование;
	Объект.Организация = Объект.КассаККМ.Владелец;
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая при изменении основания для коррекции.
// Вызывается из модуля формы документа "КассовыйЧекКоррекции"
// 
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//
Процедура ОснованиеДляКоррекцииПриИзменении(Объект) Экспорт
	
	Если ТипЗнч(Объект.ОснованиеДляКоррекции) = Тип("ДокументСсылка.ЧекККМ") Тогда
		Объект.НомерДокументаОснования = Формат(Объект.ОснованиеДляКоррекции.НомерЧекаККМ, "ЧГ=0");
	Иначе
		Объект.НомерДокументаОснования = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ОснованиеДляКоррекции) 
		И НЕ ТипЗнч(Объект.ОснованиеДляКоррекции) = Тип("Строка") Тогда
		
		Объект.ДатаДокументаОснования = Объект.ОснованиеДляКоррекции.Дата;
		Объект.Организация = Объект.ОснованиеДляКоррекции.Организация;
		Объект.КассаККМ    = Объект.ОснованиеДляКоррекции.КассаККМ;
		Если НЕ ЗначениеЗаполнено(Объект.НомерДокументаОснования) Тогда
			Объект.НомерДокументаОснования = Объект.ОснованиеДляКоррекции.Номер;
		КонецЕсли;
	КонецЕсли;
	
	КассаККМПриИзменении(Объект);
	
КонецПроцедуры

#КонецОбласти

#Область ФормаДокументаСлужебныеПроцедурыИФункции

//Переопределяемая процедура устанавливает правила работы формы документа. 
//
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//  Форма  - Форма документа КассовыйЧекКоррекции
//
Процедура УстановитьДоступностьЭлементовИФормы(Объект, Форма) Экспорт
	
КонецПроцедуры

//Переопределяемая процедура проверяет возможность печати чека, при этом подготавливает информацию для печтати. 
//
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//  Отказ - Булево.
//  ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудовае, устройство фискализирующее чек
//  ИспользоватьКассуБезПодключенияОборудования - Булево.
//
Процедура ПодготовитьИПроверитьПечатьЧека(Объект,
										  Отказ, 
										  ИдентификаторУстройства, 
										  ИспользоватьКассуБезПодключенияОборудования)	Экспорт
	
	Отказ = Ложь;
	
	Если ЗначениеЗаполнено(Объект.КассаККМ)  Тогда
		ПараметрыКассыККМ       = УправлениеНебольшойФирмойПовтИсп.ПолучитьПараметрыКассыККМ(Объект.КассаККМ);
		ИдентификаторУстройства = ПараметрыКассыККМ.ИдентификаторУстройства;
		
		//РаспределениеВыручкиПоСекциям = ПараметрыКассыККМ.РаспределениеВыручкиПоСекциям;
		ИспользоватьКассуБезПодключенияОборудования = ПараметрыКассыККМ.ИспользоватьБезПодключенияОборудования;
		
		СтруктураСостояниеКассовойСмены = РозничныеПродажиСервер.ПолучитьСостояниеКассовойСмены(Объект.КассаККМ);
		
		ОтчетОРозничныхПродажах = СтруктураСостояниеКассовойСмены.ОтчетОРозничныхПродажах;
		
		ТекстОшибки = НСтр("ru='Кассовая смена не открыта!'");
		Если НЕ РозничныеПродажиСервер.СменаОткрыта(ОтчетОРозничныхПродажах, Объект.Дата, ТекстОшибки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				"Объект.КассаККМ",
				,
				Отказ);
			
		КонецЕсли;
	Иначе
		ТекстОшибки = НСтр("ru='Не выбрана касса ККМ!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			"Объект.КассаККМ",
			,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

// Переопределяемая процедура получает данные для отправки по кассиру (ответственному)
//
// Параметры:
//  Объект - ДокументОбъект.КассовыйЧекКоррекции, заполняемый документ
//
Функция ПолучитьРеквизитыКассира(Объект) Экспорт
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Наименование");
	СтруктураРеквизитов.Вставить("ИНН");
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ответственный.Физлицо, СтруктураРеквизитов);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняеет данные документа.
//
Процедура ИнициализироватьДокумент(Объект, ДанныеЗаполнения = Неопределено)
	
	Объект.Ответственный  = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
	Пользователи.ТекущийПользователь(),
	"ОсновнойОтветственный");
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(Объект, ДанныеЗаполнения);
		Если ДанныеЗаполнения.Свойство("КассаККМ") Тогда
			Объект.КассаККМ      = ДанныеЗаполнения.КассаККМ;
			Объект.Организация   = Объект.КассаККМ.Владелец;
		КонецЕсли;
	КонецЕсли;
	
	Объект.НомерЧекаККМ   = 0;
	Объект.СуммаДокумента = 0;
	Объект.ПробитЧек      = Ложь;
	
КонецПроцедуры

// Процедура довавляет (изменяет) дополнительные фозможности формы
//
Процедура ИзменитьФормуДокумента(Форма)
	
	Если Форма.РеквизитыДобавлены Тогда
		Возврат;
	КонецЕсли;
	
	// Реквизиты формы
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	ОписаниеТиповЧисло  = Новый ОписаниеТипов("Число");
	// Добавление реквизитов на форму.
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("РазрешеноПроведение"       , ОписаниеТиповБулево,));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИзменятьУчетДС"            , ОписаниеТиповБулево,));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("КартинкаСостоянияДокумента", ОписаниеТиповЧисло,));
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	Форма.РеквизитыДобавлены = Истина;
	
	Элементы = Форма.Элементы;
	
	НовоеПоле = Элементы.Вставить(
		"КартинкаСостоянияДокумента", 
		Тип("ПолеФормы"), 
		Элементы.ГруппаПодвал, 
		Элементы.ДекорацияРазделительИтогов);
		
	
	НовоеПоле.Заголовок					= НСтр("ru = 'Картинка состояния документа'");
	НовоеПоле.Вид 						= ВидПоляФормы.ПолеКартинки;
	НовоеПоле.КартинкаЗначений			= БиблиотекаКартинок.СтатусыДокумента;
	НовоеПоле.ПутьКДанным				= "КартинкаСостоянияДокумента";
	НовоеПоле.ПоложениеЗаголовка 		= ПоложениеЗаголовкаЭлементаФормы.Нет;
	НовоеПоле.Ширина 					= 2;
	НовоеПоле.Высота 					= 1;
	НовоеПоле.РастягиватьПоГоризонтали	= Ложь;
	НовоеПоле.РастягиватьПоВертикали	= Ложь;
	НовоеПоле.ГиперссылкаЯчейки			= Истина;
	
	НовоеПоле.ВертикальноеПоложениеВГруппе = ВертикальноеПоложениеЭлемента.Центр;
	
	Элемент = Форма.Элементы.КассаККМ;
	
	ПараметрМагазин = Новый ПараметрВыбора("Отбор.ТипОборудования", Перечисления.ТипыПодключаемогоОборудования.ККТ);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(ПараметрМагазин);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	Элемент.ПараметрыВыбора = НовыеПараметры;
	
КонецПроцедуры

#КонецОбласти
