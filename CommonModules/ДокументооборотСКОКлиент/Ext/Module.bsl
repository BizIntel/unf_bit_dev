
////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// Процедура получает Контекст ЭДО и возвращает его в Обработку оповещения, 
// переданную в параметрах к этой процедуре.
// 
//
// Параметры:
//	ВыполняемоеОповещение                  - ОписаниеОповещения - Описание оповещения, которое будет вызвано после получения Контекста ЭДО.
//                                                       В качестве результата описания оповещения передается структура с ключами: 
//                                                       * КонтекстЭДО    - Форма обработки, либо неопределено 
//                                                       * ТекстОшибки - Текст сообщения об ошибке, из-за которой не удалось получить контекст
//	ВызовИзМастераПодключенияК1СОтчетности - Булево - .
//
Процедура ПолучитьКонтекстЭДО(ВыполняемоеОповещение, ОбновитьСейчас = Ложь) Экспорт
	
	ТекстСообщения = "";
	
	СтруктураПараметров = Новый Структура("КонтекстЭДО");
	Оповестить("Получение контекста ЭДО", СтруктураПараметров);
	
	Если СтруктураПараметров.КонтекстЭДО <> Неопределено И НЕ ОбновитьСейчас Тогда
		
		СтруктураРезультата = Новый Структура;
		СтруктураРезультата.Вставить("ТекстОшибки", ТекстСообщения);
		СтруктураРезультата.Вставить("КонтекстЭДО", СтруктураПараметров.КонтекстЭДО);
		
		ПараметрыПриложения.Вставить("РегламентированнаяОтчетность.КонтекстЭДО", СтруктураПараметров.КонтекстЭДО);

		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, СтруктураРезультата);
		
	ИначеЕсли НЕ ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.РазделениеВключено() И ДокументооборотСКОВызовСервера.ПодключатьВнешнююОбработкуЭДО() Тогда
		Если ДокументооборотСКОВызовСервера.ЕстьПравоНаДОсКО(Истина) Тогда
			Попытка
				ФормаРезультат = ПолучитьФорму("ВнешняяОбработка.Обработка_ДокументооборотСКО.Форма.КонтейнерКлиентскихМетодов");
				ФормаРезультат.ПутьКОбъекту = "ВнешняяОбработка.Обработка_ДокументооборотСКО";
			Исключение
				Состояние(НСтр("ru = 'Не удалось загрузить внешний модуль для документооборота с налоговыми органами.
					|Будет использован модуль, встроенный в конфигурацию.'"));
				ФормаРезультат = ПолучитьФорму("Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.КонтейнерКлиентскихМетодов");
				ФормаРезультат.ПутьКОбъекту = "Обработка.ДокументооборотСКонтролирующимиОрганами";
			КонецПопытки;
			
			// Проверка обновления
			ДополнительныеПараметры = Новый Структура("ВыполняемоеОповещение, ФормаРезультат", ВыполняемоеОповещение, ФормаРезультат);
			
			ФормаРезультат.ОбновитьМодульДокументооборотаСФНСПриНеобходимости(ОбновитьСейчас, ДополнительныеПараметры);
				
		Иначе
			ТекстСообщения = НСтр("ru = 'Недостаточно прав для использования методов электронного документооборота с контролирующими органами.'");
			
			СтруктураРезультата = Новый Структура;
			СтруктураРезультата.Вставить("ТекстОшибки", ТекстСообщения);
			СтруктураРезультата.Вставить("КонтекстЭДО", Неопределено);
			
			ПараметрыПриложения.Вставить("РегламентированнаяОтчетность.КонтекстЭДО", Неопределено);
			
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, СтруктураРезультата);
		КонецЕсли;
		
	Иначе
		Если ДокументооборотСКОВызовСервера.ЕстьПравоНаДОсКО(Ложь) Тогда
			ФормаРезультат = ПолучитьФорму("Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.КонтейнерКлиентскихМетодов");
			ФормаРезультат.ПутьКОбъекту = "Обработка.ДокументооборотСКонтролирующимиОрганами";
			
			// Проверка обновления
			ДополнительныеПараметры = Новый Структура("ВыполняемоеОповещение, ФормаРезультат", ВыполняемоеОповещение, ФормаРезультат);
			
			ФормаРезультат.ОбновитьМодульДокументооборотаСФНСПриНеобходимости(ОбновитьСейчас, ДополнительныеПараметры);
			
		Иначе
			ТекстСообщения = НСтр("ru = 'Недостаточно прав для использования методов электронного документооборота с контролирующими органами.'");
			
			СтруктураРезультата = Новый Структура;
			СтруктураРезультата.Вставить("ТекстОшибки", ТекстСообщения);
			СтруктураРезультата.Вставить("КонтекстЭДО", Неопределено);
			
			ПараметрыПриложения.Вставить("РегламентированнаяОтчетность.КонтекстЭДО", Неопределено);

			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, СтруктураРезультата);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИПолучитьКонтекстЭДО(ВыполняемоеОповещение) Экспорт
	
	Попытка
		КонтекстИнициализирован = ДокументооборотСКОВызовСервера.ИнициализироватьКонтекстДокументооборотаСНалоговымиОрганами();
	Исключение
		КонтекстИнициализирован = Ложь;
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не удалось загрузить внешний модуль для документооборота с налоговыми органами.
			|%1
			|Будет продолжено использование текущего модуля конфигурации.'"), ИнформацияОбОшибке().Описание);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецПопытки;
	
	Если КонтекстИнициализирован Тогда
		Попытка
			ФормаРезультат = ПолучитьФорму("ВнешняяОбработка.Обработка_ДокументооборотСКО.Форма.КонтейнерКлиентскихМетодов");
			ФормаРезультат.ПутьКОбъекту = "ВнешняяОбработка.Обработка_ДокументооборотСКО";
		Исключение
			Состояние(НСтр("ru = 'Не удалось загрузить внешний модуль для документооборота с налоговыми органами.
				|Будет использован модуль, встроенный в конфигурацию.'"));
			ФормаРезультат = ПолучитьФорму("Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.КонтейнерКлиентскихМетодов");
			ФормаРезультат.ПутьКОбъекту = "Обработка.ДокументооборотСКонтролирующимиОрганами";
		КонецПопытки;
	КонецЕсли;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("ТекстОшибки", "");
	СтруктураРезультата.Вставить("КонтекстЭДО", ФормаРезультат);
	
	ПараметрыПриложения.Вставить("РегламентированнаяОтчетность.КонтекстЭДО", ФормаРезультат);
	
	ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(
		Форма, 
		КонтролирующийОрган, 
		ЭтоОтправкаИзФормыОтчетность = Ложь, 
		СсылкаНаОтчет = Неопределено, 
		ОрганизацияОтчета = Неопределено) Экспорт
	
	Если НЕ ЭтоОтправкаИзФормыОтчетность Тогда
		СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	КонецЕсли;
	
	ЭтоУведомлениеФНС 			= ЭтоУведомлениеФНС(СсылкаНаОтчет);
	ЭтоЖурналСчетовФактурФНС 	= ЭтоЖурналСчетовФактурФНС(СсылкаНаОтчет);
	ЭтоЗаявлениеОВвозе 			= ЭтоЗаявлениеОВвозе(СсылкаНаОтчет);
	ЭтоРеестрНДС				= ЭтоРеестрНДС(СсылкаНаОтчет);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СсылкаНаОтчет",				СсылкаНаОтчет);
	ДополнительныеПараметры.Вставить("Форма",						Форма);
	ДополнительныеПараметры.Вставить("КонтролирующийОрган",			КонтролирующийОрган);
	ДополнительныеПараметры.Вставить("ЭтоОтправкаИзФормыОтчетность",ЭтоОтправкаИзФормыОтчетность);
	ДополнительныеПараметры.Вставить("СсылкаНаОтчет",				СсылкаНаОтчет);
	ДополнительныеПараметры.Вставить("ОрганизацияОтчета",			ОрганизацияОтчета);
	ДополнительныеПараметры.Вставить("ЭтоУведомлениеФНС",			ЭтоУведомлениеФНС);
	ДополнительныеПараметры.Вставить("ЭтоЖурналСчетовФактурФНС",	ЭтоЖурналСчетовФактурФНС);
	ДополнительныеПараметры.Вставить("ЭтоРеестрНДС",				ЭтоРеестрНДС);
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);
	
	Если ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка.РегламентированныйОтчет")
		ИЛИ ТипЗнчСсылкаНаОтчет = Тип("Неопределено") Тогда
		
		Если НЕ ЭтоОтправкаИзФормыОтчетность Тогда
			
			// Сохраняем перед отправкой
			Если Форма.Модифицированность Тогда
				
				ОписаниеОповещения = Новый ОписаниеОповещения("ПродолжитьОтправкуПослеСохраненияРегОтчета", ЭтотОбъект, ДополнительныеПараметры);
				Форма.СохранитьНаКлиенте(,ОписаниеОповещения);
				Возврат;
				
			КонецЕсли;
		КонецЕсли;
			
	ИначеЕсли ЭтоУведомлениеФНС Тогда
		
		Если ЭтоОтправкаИзФормыОтчетность Тогда
			// Уведомление будет записано
		ИначеЕсли Форма.Модифицированность ИЛИ НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			
			ИмяДокументаУведомлениеОКонтролируемыхСделках
				= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("УведомлениеОКонтролируемыхСделках");
			
			// Записываем
			Если ИмяДокументаУведомлениеОКонтролируемыхСделках <> Неопределено 
					И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаУведомлениеОКонтролируемыхСделках) Тогда
				Форма.Записать();
			Иначе
				Форма.СохранитьДанные();
			КонецЕсли;
			
			// Получаем ссылку еще раз после записи
			СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
			// Обновляем данные после сохранения.
			ДополнительныеПараметры.СсылкаНаОтчет = СсылкаНаОтчет;
			
		КонецЕсли;
			
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ЭтоЖурналСчетовФактурФНС Тогда
		
		Если ЭтоОтправкаИзФормыОтчетность Тогда
			// Уведомление будет записано
		ИначеЕсли Форма.Модифицированность ИЛИ НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			
			// Записываем
			Форма.Записать();
			
			// Получаем ссылку еще раз после записи
			СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
			// Обновляем данные после сохранения.
			ДополнительныеПараметры.СсылкаНаОтчет = СсылкаНаОтчет;
			
		КонецЕсли;
			
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			Возврат;
		КонецЕсли;
				
	ИначеЕсли ЭтоЗаявлениеОВвозе Тогда
		
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			ПоказатьПредупреждение(,"Перед отправкой необходимо записать заявление.");
			Возврат;
		КонецЕсли;
		
		Если НЕ ЭтоОтправкаИзФормыОтчетность И Форма.Модифицированность Тогда
			ПоказатьПредупреждение(, "Перед отправкой необходимо записать заявление.");
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
		
	ПроверитьЧтоЭДОПодключенИПродолжитьОтправку(ДополнительныеПараметры);

КонецПроцедуры

Процедура ПродолжитьОтправкуПослеСохраненияРегОтчета(Результат, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.СсылкаНаОтчет = Неопределено Тогда
		
		СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(ДополнительныеПараметры.Форма);
		
		// Обновляем данные после сохранения.
		ДополнительныеПараметры.СсылкаНаОтчет 	= СсылкаНаОтчет;
		ДополнительныеПараметры.ЭтоРеестрНДС 	= ЭтоРеестрНДС(СсылкаНаОтчет);
			
	КонецЕсли;
	
	ПроверитьЧтоЭДОПодключенИПродолжитьОтправку(ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ПроверитьЧтоЭДОПодключенИПродолжитьОтправку(ДополнительныеПараметры)
	
	Форма				 			= ДополнительныеПараметры.Форма;
	КонтролирующийОрган 			= ДополнительныеПараметры.КонтролирующийОрган;
	ОрганизацияОтчета				= ДополнительныеПараметры.ОрганизацияОтчета;
	ЭтоОтправкаИзФормыОтчетность	= ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	
	Если НЕ ЭтоОтправкаИзФормыОтчетность Тогда
		ОрганизацияОтчета = ДокументооборотСКОКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
		ДополнительныеПараметры.ОрганизацияОтчета = ОрганизацияОтчета;
	КонецЕсли;
	
	НастроенОбменВУниверсальномФормате = Ложь;
	УчетнаяЗаписьПредназначенаДляДокументооборотаСКО = Ложь;
	
	ДокументооборотСКОВызовСервера.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(
		ОрганизацияОтчета, 
		КонтролирующийОрган, 
		НастроенОбменВУниверсальномФормате, 
		УчетнаяЗаписьПредназначенаДляДокументооборотаСКО);
	
	Если НЕ НастроенОбменВУниверсальномФормате Тогда
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ПоказатьФормуПредложениеОформитьЗаявлениеНаПодключение(ОрганизацияОтчета);
		Возврат;
	Иначе
		Если УчетнаяЗаписьПредназначенаДляДокументооборотаСКО = Неопределено Тогда
			ПоказатьПредупреждение(, "Недостаточно прав для использования модуля документооборота!");
			Возврат;
			
		ИначеЕсли УчетнаяЗаписьПредназначенаДляДокументооборотаСКО = Ложь Тогда
			
			Если КонтролирующийОрган = "ФНС" Тогда
				ПоказатьПредупреждение(, "Учетная запись документооборота, сопоставленная организации, не предназначена для взаимодействия с ФНС.");
			ИначеЕсли КонтролирующийОрган = "ПФР" Тогда
				ПоказатьПредупреждение(, "Учетная запись документооборота, сопоставленная организации, не предназначена для взаимодействия с ПФР.");
			ИначеЕсли КонтролирующийОрган = "ФСГС" Тогда
				ПоказатьПредупреждение(, "Учетная запись документооборота, сопоставленная организации, не предназначена для взаимодействия с Росстатом.");
			КонецЕсли;
			
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправкаВКонтролирующийОрганПослеПроверкиПодключенностиЭДО", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОповеститьОЗавершенииОтправкиИПерерисоватьПанельОтправки(РезультатОтправки, ДополнительныеПараметры) Экспорт
	
	ЭтоОтправкаИзФормыОтчетность 	= ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	Форма 							= ДополнительныеПараметры.Форма;
	КонтролирующийОрган 			= ДополнительныеПараметры.КонтролирующийОрган;
	СсылкаНаОтчет 					= ДополнительныеПараметры.СсылкаНаОтчет;
	ОрганизацияОтчета 				= ДополнительныеПараметры.ОрганизацияОтчета;
	
	ПредупредитьОСтатусеВКонверте(ДополнительныеПараметры);
	
	Если НЕ ЭтоОтправкаИзФормыОтчетность Тогда
		Если РезультатОтправки Тогда
			ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ОбновитьПанельСостоянияОтправкиВРегламентированномОтчете(Форма, КонтролирующийОрган);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура(); 
	ПараметрыОповещения.Вставить("Ссылка", 		СсылкаНаОтчет);
	ПараметрыОповещения.Вставить("Организация", ОрганизацияОтчета);
	Оповестить("Завершение отправки в контролирующий орган", ПараметрыОповещения, );
	
КонецПроцедуры

Процедура ОтправкаВКонтролирующийОрганПослеПроверкиПодключенностиЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	СсылкаНаОтчет 		= ДополнительныеПараметры.СсылкаНаОтчет;
	КонтекстЭДОКлиент 	= Результат.КонтекстЭДО;
	
	ДополнительныеПараметры.Вставить("КонтекстЭДОКлиент", КонтекстЭДОКлиент);
	
	ПараметрыФормы = Новый Структура("СсылкаНаОтчет", СсылкаНаОтчет);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправкаВКонтролирующийОрганПослеПодтвержденияОтправки", ЭтотОбъект, ДополнительныеПараметры);
	// при отправке из списка подтверждение запрашивается перед запуском отправки для предотвращения попадания сообщений в диалог подтверждения
	Если ДополнительныеПараметры.Форма = Неопределено ИЛИ ДополнительныеПараметры.Форма.ИмяФормы <> "ОбщаяФорма.РегламентированнаяОтчетность" Тогда
		ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.ПодтверждениеОтправкиОтчета", ПараметрыФормы,,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.ОК);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправкаВКонтролирующийОрганПослеПодтвержденияОтправки(Результат, ВходящийКонтекст) Экспорт
	
	Если Результат <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Форма 						= ВходящийКонтекст.Форма;
	ОрганизацияОтчета			= ВходящийКонтекст.ОрганизацияОтчета;
	ЭтоУведомлениеФНС			= ВходящийКонтекст.ЭтоУведомлениеФНС;
	ЭтоЖурналСчетовФактурФНС	= ВходящийКонтекст.ЭтоЖурналСчетовФактурФНС;
	ЭтоРеестрНДС				= ВходящийКонтекст.ЭтоРеестрНДС;
	КонтекстЭДОКлиент			= ВходящийКонтекст.КонтекстЭДОКлиент;
	КонтролирующийОрган			= ВходящийКонтекст.КонтролирующийОрган;
	СсылкаНаОтчет 				= ВходящийКонтекст.СсылкаНаОтчет;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОповеститьОЗавершенииОтправкиИПерерисоватьПанельОтправки", 
		ЭтотОбъект, 
		ВходящийКонтекст);
	
	Если ЭтоУведомлениеФНС Тогда
		
		КонтекстЭДОКлиент.ОтправкаУведомлениеФНС(
			СсылкаНаОтчет, 
			Форма.УникальныйИдентификатор, 
			ОписаниеОповещения);
		
	ИначеЕсли ЭтоЖурналСчетовФактурФНС Тогда
		
		КонтекстЭДОКлиент.ОтправкаЖурналаСчетовФактурВФНС(
			СсылкаНаОтчет, 
			ОрганизацияОтчета, 
			Форма.УникальныйИдентификатор,
			ОписаниеОповещения);
			
	ИначеЕсли ЭтоРеестрНДС Тогда
		
		КонтекстЭДОКлиент.ОтправкаРеестраНДС(
			ОписаниеОповещения);
		
	Иначе
		
		// регистрируем заявку на отправку
		Если КонтролирующийОрган = "ФНС" Тогда
			КонтекстЭДОКлиент.ОтправкаРегламентированногоОтчетаВФНС(СсылкаНаОтчет, ОписаниеОповещения);
		ИначеЕсли КонтролирующийОрган = "ФСГС" Тогда
			КонтекстЭДОКлиент.ОтправкаРегламентированногоОтчетаВФСГС(СсылкаНаОтчет, ОписаниеОповещения);
		Иначе
			КонтекстЭДОКлиент.ОтправкаРегламентированногоОтчетаВПФР(СсылкаНаОтчет, ОписаниеОповещения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВИнтернете(Форма, КонтролирующийОрган = "ФНС", АдресГотовыхДанных = Неопределено, ИмяФайлаГотовыхДанных = Неопределено) Экспорт
	
	СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);
	ИмяДокументаУведомлениеОКонтролируемыхСделках 					= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("УведомлениеОКонтролируемыхСделках");
	ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде	= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде");
	ИмяДокументаИсходящееУведомлениеФНС					 			= "УведомлениеОСпецрежимахНалогообложения";
	
	ИмяДокументаЗаявлениеОВвозеТоваров 	= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЗаявлениеОВвозеТоваров");
	
	Если ИмяДокументаЗаявлениеОВвозеТоваров <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаЗаявлениеОВвозеТоваров) Тогда
		ЭтоЗаявлениеОВвозе = Истина;
	Иначе
		ЭтоЗаявлениеОВвозе = Ложь;
	КонецЕсли;
	
	Если (ИмяДокументаУведомлениеОКонтролируемыхСделках <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаУведомлениеОКонтролируемыхСделках))
		ИЛИ (ИмяДокументаИсходящееУведомлениеФНС <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаИсходящееУведомлениеФНС)) Тогда
		ЭтоУведомлениеФНС = Истина;
	Иначе
		ЭтоУведомлениеФНС = Ложь;
	КонецЕсли;
	
	Если ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде) Тогда
		ЭтоЖурналСчетовФактурФНС = Истина;
	Иначе
		ЭтоЖурналСчетовФактурФНС = Ложь;
	КонецЕсли;
	
	Если ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка.РегламентированныйОтчет")
		ИЛИ ТипЗнчСсылкаНаОтчет = Тип("Неопределено") Тогда
		
		// отправляем только из записанной формы
		Если Форма.Модифицированность Тогда
			
			ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган", Форма, КонтролирующийОрган);
			ДополнительныеПараметры.Вставить("АдресГотовыхДанных", АдресГотовыхДанных);
			ДополнительныеПараметры.Вставить("ИмяФайлаГотовыхДанных", ИмяФайлаГотовыхДанных);
			ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			
			Форма.СохранитьНаКлиенте(, ОписаниеОповещения);
			
		Иначе
			ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет, АдресГотовыхДанных, ИмяФайлаГотовыхДанных)
		КонецЕсли;
		
	ИначеЕсли ЭтоУведомлениеФНС Тогда
		
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) ИЛИ Форма.Модифицированность Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Перед проверкой необходимо записать уведомление.'"));
			Возврат;
		КонецЕсли;
		
		ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет)
		
	ИначеЕсли ЭтоЖурналСчетовФактурФНС Тогда
		
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) ИЛИ Форма.Модифицированность Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Перед проверкой необходимо записать журнал.'"));
			Возврат;
		КонецЕсли;
		
		ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет)
		
	ИначеЕсли ЭтоЗаявлениеОВвозе Тогда
		
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) ИЛИ Форма.Модифицированность Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Перед проверкой необходимо записать заявление.'"));
			Возврат;
		КонецЕсли;
		
		ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет)
		
	Иначе // все, кроме документа РегламентированныйОтчет
		
		ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет)
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	
	АдресГотовыхДанных = Неопределено;
	ИмяФайлаГотовыхДанных = Неопределено;
	Если ДополнительныеПараметры.Свойство("АдресГотовыхДанных") Тогда 
		АдресГотовыхДанных = ДополнительныеПараметры.АдресГотовыхДанных;
		ИмяФайлаГотовыхДанных = ДополнительныеПараметры.ИмяФайлаГотовыхДанных;
	КонецЕсли;
			
	ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет, АдресГотовыхДанных, ИмяФайлаГотовыхДанных)
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет, АдресГотовыхДанных = Неопределено, ИмяФайлаГотовыхДанных = Неопределено)
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	ДополнительныеПараметры.Вставить("КонтролирующийОрган", КонтролирующийОрган);
	ДополнительныеПараметры.Вставить("СсылкаНаОтчет", СсылкаНаОтчет);
	
	ДополнительныеПараметры.Вставить("АдресГотовыхДанных", АдресГотовыхДанных);
	ДополнительныеПараметры.Вставить("ИмяФайлаГотовыхДанных", ИмяФайлаГотовыхДанных);
			
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеПослеПолученияКонтекста", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	СсылкаНаОтчет = ДополнительныеПараметры.СсылкаНаОтчет;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	Форма = ДополнительныеПараметры.Форма;
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	АдресГотовыхДанных = Неопределено;
	ИмяФайлаГотовыхДанных = Неопределено;
	Если ДополнительныеПараметры.Свойство("АдресГотовыхДанных") Тогда 
		АдресГотовыхДанных = ДополнительныеПараметры.АдресГотовыхДанных;
		ИмяФайлаГотовыхДанных = ДополнительныеПараметры.ИмяФайлаГотовыхДанных;
	КонецЕсли;
	
	Если КонтекстЭДОКлиент <> Неопределено Тогда
		
		// Проверяем наличие учетной записи
		ОрганизацияОтчета = КонтекстЭДОКлиент.ОрганизацияОтчетаДляОнлайнПроверки(СсылкаНаОтчет);
		УчетнаяЗаписьОрганизации = КонтекстЭДОКлиент.УчетнаяЗаписьОрганизации(ОрганизацияОтчета);
		
		Если НЕ ЗначениеЗаполнено(УчетнаяЗаписьОрганизации) Тогда
			ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ПоказатьФормуПредложениеОформитьЗаявлениеНаПодключение(ОрганизацияОтчета);
			Возврат;
		КонецЕсли;
		
		КонтекстЭДОКлиент.ПроверитьОтчетСИспользованиемСервисаОнлайнПроверки(СсылкаНаОтчет, КонтролирующийОрган, Истина, Форма, АдресГотовыхДанных, ИмяФайлаГотовыхДанных);
	Иначе
		ПоказатьПредупреждение(,НСтр("ru = 'Недостаточно прав для использования методов электронного документооборота с контролирующими органами.'"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеПоСсылке(Ссылка, КонтролирующийОрган = "ФНС", АдресГотовыхДанных = Неопределено, ИмяФайлаГотовыхДанных = Неопределено) Экспорт
	
	ТипЗнчСсылка = ТипЗнч(Ссылка);
	ИмяДокументаУведомлениеОКонтролируемыхСделках 					= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("УведомлениеОКонтролируемыхСделках");
	ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде	= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде");
	ИмяДокументаИсходящееУведомлениеФНС 							= "УведомлениеОСпецрежимахНалогообложения";
	
	Если (ИмяДокументаУведомлениеОКонтролируемыхСделках <> Неопределено И ТипЗнчСсылка = Тип("ДокументСсылка." + ИмяДокументаУведомлениеОКонтролируемыхСделках))
	ИЛИ (ИмяДокументаИсходящееУведомлениеФНС <> Неопределено И ТипЗнчСсылка = Тип("ДокументСсылка." + ИмяДокументаИсходящееУведомлениеФНС)) Тогда
		ЭтоУведомлениеФНС = Истина;
	Иначе
		ЭтоУведомлениеФНС = Ложь;
	КонецЕсли;
	
	Если ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде <> Неопределено И ТипЗнчСсылка = Тип("ДокументСсылка." + ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде) Тогда
		ЭтоЖурналСчетовФактурФНС = Истина;
	Иначе
		ЭтоЖурналСчетовФактурФНС = Ложь;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("Ссылка, КонтролирующийОрган", Ссылка, КонтролирующийОрган);
	
	ДополнительныеПараметры.Вставить("АдресГотовыхДанных", АдресГотовыхДанных);
	ДополнительныеПараметры.Вставить("ИмяФайлаГотовыхДанных", ИмяФайлаГотовыхДанных);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеПоСсылкеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеПоСсылкеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Ссылка = ДополнительныеПараметры.Ссылка;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	АдресГотовыхДанных = Неопределено;
	ИмяФайлаГотовыхДанных = Неопределено;
	Если ДополнительныеПараметры.Свойство("АдресГотовыхДанных") Тогда
		АдресГотовыхДанных = ДополнительныеПараметры.АдресГотовыхДанных;
		ИмяФайлаГотовыхДанных = ДополнительныеПараметры.ИмяФайлаГотовыхДанных;
	КонецЕсли;
	
	Если КонтекстЭДОКлиент <> Неопределено Тогда
		КонтекстЭДОКлиент.ПроверитьОтчетСИспользованиемСервисаОнлайнПроверки(Ссылка, КонтролирующийОрган,,, АдресГотовыхДанных, ИмяФайлаГотовыхДанных);
	Иначе
		ПоказатьПредупреждение(,НСтр("ru = 'Недостаточно прав для использования методов электронного документооборота с контролирующими органами.'"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗапускаСистемы() Экспорт
	
	Если ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыРаботыКлиентаПриЗапуске = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	ТекущемуПользователюЭДОДоступен = ПараметрыРаботыКлиентаПриЗапуске.ДокументооборотСКонтролирующимиОрганами_ТекущемуПользователюЭДОДоступен;
	ВыбранныйCSPИзВременныхНастроек = ПараметрыРаботыКлиентаПриЗапуске.ДокументооборотСКонтролирующимиОрганами_ВыбранныйCSPИзВременныхНастроек;
	
	Если ТекущемуПользователюЭДОДоступен Тогда
		ПодключитьОбработчикОжидания("ПолучитьИнформациюОВходящихСообщенияхДляПользователяЭДО", 10, Истина);
	КонецЕсли;
	ПодключениеОбработчикаОжиданияАвтообмена(Истина);
	ОткрытьМастерПодключенияК1СОтчетности(ВыбранныйCSPИзВременныхНастроек);
	Если ТекущемуПользователюЭДОДоступен Тогда
		ПодключитьОбработчикОжидания("ПредупредитьОбИстеченииСертификатов", 300, Истина);
		ПодключитьОбработчикОжидания("ПредупредитьОНекорректныхСтатусахОтправки2НДФЛ", 3 * 60, Истина);		
	КонецЕсли;
	ПараметрыРаботыКлиентаПриЗапуске = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если ЗначениеЗаполнено(ПараметрыРаботыКлиентаПриЗапуске.ДоступныеЛокальныеСертификатыПользователя)
		И НЕ ПараметрыРаботыКлиентаПриЗапуске.НеПоказыватьПредупреждениеОКонфликтеКриптопровайдеров Тогда
		ПодключитьОбработчикОжидания("ПредупредитьОКонфликтеКриптопровайдеров", 30, Истина);
	КонецЕсли;

	// Подключаем без повторения, иначе при повторении сохранится короткий интервал в 10 секунд,
	// а нужен значительно больший.
	ОбработкаЗаявленийАбонентаКлиент.ПодключитьОбработчикПроверкиЗаявлений(10);
	
КонецПроцедуры

Процедура ПодключениеОбработчикаОжиданияАвтообмена(Подключать = Истина) Экспорт
	
	Если Подключать Тогда
		
		ПараметрыРаботыКлиентаПриЗапуске 	= СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
		ТекущемуПользователюАОДоступен 		= ПараметрыРаботыКлиентаПриЗапуске.ДокументооборотСКонтролирующимиОрганами_ТекущемуПользователюАОДоступен;
	
		// проверяем, является ли текущий пользователь пользователем ДО
		// проверяем отключение автообмена на уровне учетной записи документооборота
		// Может равняться Неопределено.
		Если ТекущемуПользователюАОДоступен = Истина Тогда
			
			// если проверки пройдены, определяем интервал выполнения
			Интервал = ПолучитьИнтервалВыполнения();
			
			Если Интервал = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			ПодключитьОбработчикОжидания("ПолучитьИнформациюОВходящихСообщениях", Интервал);
			
		КонецЕсли;
		
	Иначе
		ОтключитьОбработчикОжидания("ПолучитьИнформациюОВходящихСообщениях");
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИнтервалВыполнения()
	
	Результат = 900;
	
	Возврат Результат;
	
КонецФункции

Процедура ОткрытьМастерПодключенияК1СОтчетности(СохраненныеНастройки)
	
	// Если пользователь в мастере подключения остановился на шаге установки криптопровайдеров (шаг 2)
	// и после установки криптопровайдера перезагрузил компьютер, то необходимо открыть мастер для продолжения
	// подключения к 1С-Отчетности
	Если СохраненныеНастройки <> Неопределено Тогда
		
		ДополнительныеПараметры = Новый Структура("СохраненныеНастройки", СохраненныеНастройки);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьМастерПодключенияК1СОтчетностиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьМастерПодключенияК1СОтчетностиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	СохраненныеНастройки = ДополнительныеПараметры.СохраненныеНастройки;
	
	Если КонтекстЭДОКлиент <> Неопределено Тогда
		
		Если ТипЗнч(СохраненныеНастройки) = Тип("СправочникСсылка.Организации") Тогда
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("Организация", СохраненныеНастройки);
			ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.МастерФормированияЗаявкиНаПодключение", ПараметрыФормы);
		Иначе
			ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.МастерФормированияЗаявкиНаПодключение");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьИнформациюОВходящихСообщенияхЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КонтекстЭДОКлиент.ПолучитьИОбработатьВходящиеКлиент();
	
КонецПроцедуры

Процедура ПолучитьИнформациюОВходящихСообщенияхДляПользователяЭДОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КонтекстЭДОКлиент.ПолучитьИОбработатьВходящиеКлиент();
	
КонецПроцедуры

Процедура ПредупредитьОбИстеченииСертификатовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КонтекстЭДОКлиент.ПредупредитьОбИстеченииСертификатовКлиент();
	
КонецПроцедуры

Процедура ПредупредитьОНекорректныхСтатусахОтправки2НДФЛПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДОКлиент.ПредупредитьОбОшибкеВСтатусахОтправки2НДФЛ();
	
КонецПроцедуры

Процедура СоздатьЭлектронноеПредставлениеРегламентированныхОтчетовИзФайлов(Файлы, Адрес) Экспорт
	
	МассивФайлов = Новый Массив;
	Если ТипЗнч(Файлы) = Тип("Файл") Тогда
		МассивФайлов.Добавить(Файлы.ПолноеИмя);
	ИначеЕсли ТипЗнч(Файлы) = Тип("Массив") Тогда
		Для Каждого Значение Из Файлы Цикл
			Если ТипЗнч(Значение) = Тип("Файл") Тогда
				МассивФайлов.Добавить(Значение.ПолноеИмя);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если МассивФайлов.Количество() > 0 Тогда
		ФайлыИмпорта = СтрСоединить(МассивФайлов, Символы.ПС);
				              
		ДополнительныеПараметры = Новый Структура("Адрес, ФайлыИмпорта", Адрес, ФайлыИмпорта);
		ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьЭлектронноеПредставлениеРегламентированныхОтчетовИзФайловЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЭлектронноеПредставлениеРегламентированныхОтчетовИзФайловЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ПолучениеФайловДляИмпортаНачало(ДополнительныеПараметры.Адрес, ДополнительныеПараметры.ФайлыИмпорта);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПредупредитьОСтатусеВКонверте(ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = ДополнительныеПараметры.КонтекстЭДОКлиент;
	
	Представление = "";
	Если ДополнительныеПараметры.ЭтоУведомлениеФНС Тогда
		Представление = "уведомление";
	ИначеЕсли ДополнительныеПараметры.ЭтоЖурналСчетовФактурФНС Тогда
		Представление = "журнал";
	ИначеЕсли ДополнительныеПараметры.ЭтоРеестрНДС Тогда
		Представление = "реестр";
	Иначе
		Представление = "отчет";
	КонецЕсли;
		
	КонтекстЭДОКлиент.ПредупредитьЕслиСтатусОтправкиВКонверте(ДополнительныеПараметры.СсылкаНаОтчет, Представление);
	
КонецПроцедуры

Функция ЭтоУведомлениеФНС(СсылкаНаОтчет)
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);

	ЭтоУведомлениеФНС = Ложь;
	
	ИмяДокументаУведомлениеОКонтролируемыхСделках
		= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("УведомлениеОКонтролируемыхСделках");
	ИмяДокументаИсходящееУведомлениеФНС = "УведомлениеОСпецрежимахНалогообложения";
	
	Если (ИмяДокументаУведомлениеОКонтролируемыхСделках <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаУведомлениеОКонтролируемыхСделках))
		ИЛИ (ИмяДокументаИсходящееУведомлениеФНС <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаИсходящееУведомлениеФНС)) Тогда
		ЭтоУведомлениеФНС = Истина;
	Иначе
		ЭтоУведомлениеФНС = Ложь;
	КонецЕсли;
	
	Возврат ЭтоУведомлениеФНС;

КонецФункции

Функция ЭтоЖурналСчетовФактурФНС(СсылкаНаОтчет)
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);
	
	ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде	= 
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде");
		
	ЭтоЖурналСчетовФактурФНС = Ложь;
		
	Если ТипЗнч(СсылкаНаОтчет) = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
		ЭтоЖурналСчетовФактурФНС = 
			ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ЗначениеРеквизитаОбъекта(СсылкаНаОтчет, "ВидОтчета") =
				ПредопределенноеЗначение("Справочник.ВидыОтправляемыхДокументов.ЖурналУчетаСчетовФактур");	
	Иначе	
		
		Если ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде <> Неопределено 
			И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде) Тогда
			
			ЭтоЖурналСчетовФактурФНС = Истина;
		Иначе
			ЭтоЖурналСчетовФактурФНС = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЭтоЖурналСчетовФактурФНС;

КонецФункции

Функция ЭтоРеестрНДС(СсылкаНаОтчет)
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);
	
	ЭтоРеестрНДС = Ложь;
		
	Если ТипЗнч(СсылкаНаОтчет) = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
		
		ВидОтчета = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ЗначениеРеквизитаОбъекта(
			СсылкаНаОтчет, 
			"ВидОтчета");
			
		ВидыОтчетов = ДокументооборотСКОКлиентСервер.ВидыОтправляемыхДокументовРеестровНДС();
		
		ЭтоРеестрНДС = ВидыОтчетов.Найти(ВидОтчета) <> Неопределено;
		
	Иначе
		
		ЭтоРеестрНДС = ДокументооборотСКОВызовСервера.ЭтоРегламентированныйОтчетРеестрНДС(СсылкаНаОтчет);
		
	КонецЕсли;
	
	Возврат ЭтоРеестрНДС;

КонецФункции 

Функция ЭтоЗаявлениеОВвозе(СсылкаНаОтчет)
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);

	ЭтоЗаявлениеОВвозе = Ложь;
	
	ИмяДокументаЗаявлениеОВвозеТоваров = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЗаявлениеОВвозеТоваров");
	
	Если ИмяДокументаЗаявлениеОВвозеТоваров <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаЗаявлениеОВвозеТоваров) Тогда
		ЭтоЗаявлениеОВвозе = Истина;
	Иначе
		ЭтоЗаявлениеОВвозе = Ложь;
	КонецЕсли;
	
	Возврат ЭтоЗаявлениеОВвозе;

КонецФункции

#КонецОбласти