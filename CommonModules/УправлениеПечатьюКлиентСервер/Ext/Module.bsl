////////////////////////////////////////////////////////////////////////////////
// Подсистема "Печать".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Обновляет список команд печати в зависимости от текущего контекста.
//
// Параметры:
//  Форма - УправляемаяФорма - форма, для которой требуется обновление команд печати.
//  Источник - ДанныеФормыСтруктура, ТаблицаФормы - контекст для проверки условий (Форма.Объект или Форма.Элементы.Список).
//
Процедура ОбновитьКоманды(Форма, Источник) Экспорт
	Если ТипЗнч(Источник) = Тип("ТаблицаФормы") Тогда
		ВыбранныеОбъекты = Новый Массив;
		#Если Клиент Тогда
		ВыделенныеСтроки = Источник.ВыделенныеСтроки;
		Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
			Если ТипЗнч(ВыделеннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
				Продолжить;
			КонецЕсли;
			ТекущаяСтрока = Источник.ДанныеСтроки(ВыделеннаяСтрока);
			Если ТекущаяСтрока <> Неопределено Тогда
				ВыбранныеОбъекты.Добавить(ТекущаяСтрока);
			КонецЕсли;
		КонецЦикла;
		#КонецЕсли
		ОбновитьКомандыПечатиСпискаФормы(Форма, ВыбранныеОбъекты);
	Иначе
		ОбновитьКомандыПечатиФормыОбъекта(Форма, Источник);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КомандыНаФорме(Форма)
	КомандаФормы = Форма.Команды.Найти("АдресКомандПечатиВоВременномХранилище");
	Если КомандаФормы = Неопределено Тогда
		Возврат Новый Массив;
	КонецЕсли;
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Результат = УправлениеПечатью.СписокКомандЭкземпляраФормы(КомандаФормы.Действие);
#Иначе
	Результат = УправлениеПечатьюКлиентПовтИсп.СписокКомандЭкземпляраФормы(КомандаФормы.Действие);
#КонецЕсли
	Возврат Результат;
КонецФункции

Процедура ОбновитьКомандыПечатиСпискаФормы(Форма, ВыбранныеОбъекты)
	ГруппыПечать = Новый Соответствие;
	КомандыНаФорме = КомандыНаФорме(Форма);
	Для Каждого Команда Из КомандыНаФорме Цикл
		Если Не ЗначениеЗаполнено(Команда.ИмяКомандыНаФорме) Тогда
			Продолжить;
		КонецЕсли;
		ПоказыватьКоманду = Истина;
		Для Каждого Объект Из ВыбранныеОбъекты Цикл
			ПоказыватьКоманду = ПоказыватьКоманду И (Команда.ТипыОбъектовПечати.Количество() = 0 
				Или Команда.ТипыОбъектовПечати.Найти(ТипЗнч(Объект.Ссылка)) <> Неопределено);
			Если ПоказыватьКоманду Тогда
				ПоказыватьКоманду = ПоказыватьКоманду И УсловияВыполняются(Команда.УсловияВидимости, Объект);
			КонецЕсли;
			Если Не ПоказыватьКоманду Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		КомандаЭлемент = Форма.Элементы[Команда.ИмяКомандыНаФорме];
		КомандаЭлемент.Видимость = ПоказыватьКоманду;
		ГруппыПечать.Вставить(КомандаЭлемент.Родитель);
	КонецЦикла;
	
	Для Каждого Элемент Из ГруппыПечать Цикл
		ОбновитьВидГруппыПечать(Элемент.Ключ);
	КонецЦикла;
КонецПроцедуры

Процедура ОбновитьКомандыПечатиФормыОбъекта(Форма, Объект)
	КомандыНаФорме = КомандыНаФорме(Форма);
	Для Каждого Команда Из КомандыНаФорме Цикл
		Если Не ЗначениеЗаполнено(Команда.ИмяКомандыНаФорме) Тогда
			Продолжить;
		КонецЕсли;
		Видимость = УсловияВыполняются(Команда.УсловияВидимости, Объект);
		КомандаЭлемент = Форма.Элементы[Команда.ИмяКомандыНаФорме];
		КомандаЭлемент.Видимость = Видимость;
	КонецЦикла;
КонецПроцедуры

Процедура ОбновитьВидГруппыПечать(Группа)
	ИмяЭлементаЗаглушки = Группа.Имя + "КомандаПечатиЗаглушка";
	КоличествоВидимых = 0;
	Для Каждого Элемент Из Группа.ПодчиненныеЭлементы Цикл
		Если Элемент.Имя <> ИмяЭлементаЗаглушки И Элемент.Видимость Тогда
			КоличествоВидимых = КоличествоВидимых + 1;
		КонецЕсли;
	КонецЦикла;
	ЭлементЗаглушка = Группа.ПодчиненныеЭлементы.Найти(ИмяЭлементаЗаглушки);
	ЭлементЗаглушка.Видимость = КоличествоВидимых = 0;
КонецПроцедуры

Функция УсловияВыполняются(Условия, ЗначенияРеквизитов)
	Результат = Истина;
	Для Каждого Условие Из Условия Цикл
		ИмяРеквизита = Условие.Реквизит;
		Если ТипЗнч(ЗначенияРеквизитов) = Тип("ДанныеФормыСтруктура")
			И Не ЗначенияРеквизитов.Свойство(ИмяРеквизита) Тогда
			Продолжить;
		КонецЕсли;
		Если Условие.ВидСравнения = ВидСравнения.Равно Тогда
			Результат = Результат И ЗначенияРеквизитов[ИмяРеквизита] = Условие.Значение;
		ИначеЕсли Условие.ВидСравнения = ВидСравнения.Больше Тогда
			Результат = Результат И ЗначенияРеквизитов[ИмяРеквизита] > Условие.Значение;
		ИначеЕсли Условие.ВидСравнения = ВидСравнения.БольшеИлиРавно Тогда
			Результат = Результат И ЗначенияРеквизитов[ИмяРеквизита] >= Условие.Значение;
		ИначеЕсли Условие.ВидСравнения = ВидСравнения.Меньше Тогда
			Результат = Результат И ЗначенияРеквизитов[ИмяРеквизита] < Условие.Значение;
		ИначеЕсли Условие.ВидСравнения = ВидСравнения.МеньшеИлиРавно Тогда
			Результат = Результат И ЗначенияРеквизитов[ИмяРеквизита] <= Условие.Значение;
		ИначеЕсли Условие.ВидСравнения = ВидСравнения.НеРавно Тогда
			Результат = Результат И ЗначенияРеквизитов[ИмяРеквизита] <> Условие.Значение;
		ИначеЕсли Условие.ВидСравнения = ВидСравнения.ВСписке Тогда
			Результат = Результат И Условие.Значение.Найти(ЗначенияРеквизитов[ИмяРеквизита]) <> Неопределено;
		ИначеЕсли Условие.ВидСравнения = ВидСравнения.НеВСписке Тогда
			Результат = Результат И Условие.Значение.Найти(ЗначенияРеквизитов[ИмяРеквизита]) = Неопределено;
		КонецЕсли;
		Если Не Результат Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

#КонецОбласти