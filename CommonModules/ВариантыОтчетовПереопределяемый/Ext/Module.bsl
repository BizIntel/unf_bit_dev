////////////////////////////////////////////////////////////////////////////////
// Подсистема "Варианты отчетов" (сервер, переопределяемый).
// 
// Выполняется на сервере, изменяется под специфику прикладной конфигурации,
// но предназначен для использования только данной подсистемой.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Настройки подсистемы

// Определяет разделы, в которых доступна панель отчетов.
//
// Параметры:
//   Разделы - СписокЗначений - Разделы в которые выведена команды открытия панели отчетов.
//       * Значение - ОбъектМетаданных: Подсистема - Метаданные подсистемы.
//           - Строка - Используется для панели отчетов начальной страницы.
//               В качестве раздела можно указать ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы().
//       * Представление - Строка - Заголовок панели отчетов этого раздела.
//
// Описание:
//   В Разделы необходимо добавить метаданные тех подсистем 1го уровня,
//   в которых размещены команды вызова панелей отчетов.
//
// Например:
//	Разделы.Добавить(Метаданные.Подсистемы.ИмяПодсистемы, <ЗаголовокПанелиОтчетов>);
//	Разделы.Добавить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы(), <ЗаголовокПанелиОтчетовНачальнойСтраницы>);
//
Процедура ОпределитьРазделыСВариантамиОтчетов(Разделы) Экспорт
	
	Разделы.Добавить(Метаданные.Подсистемы.МаркетингИПродажи, НСтр("ru = 'Маркетинг и продажи'"));
	Разделы.Добавить(Метаданные.Подсистемы.ЗапасыИЗакупки, НСтр("ru = 'Запасы и закупки'"));
	Разделы.Добавить(Метаданные.Подсистемы.Работы, НСтр("ru = 'Работы'"));
	Разделы.Добавить(Метаданные.Подсистемы.КомплектацияИПроизводство, НСтр("ru = 'Производство'"));
	Разделы.Добавить(Метаданные.Подсистемы.ДенежныеСредства, НСтр("ru = 'Деньги'"));
	Разделы.Добавить(Метаданные.Подсистемы.ЗарплатаИПерсонал, НСтр("ru = 'Зарплата и персонал'"));
	Разделы.Добавить(Метаданные.Подсистемы.Компания, НСтр("ru = 'Компания'"));
	
КонецПроцедуры // ОпределитьРазделыСВариантамиОтчетов

Процедура СделатьОсновным(Настройки,ИмяОтчета, ВариантыСтрокой)

	МассивВариантов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВариантыСтрокой);
	
	Для каждого ИмяВарианта Из МассивВариантов Цикл
	
		Попытка
			Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты[ИмяОтчета], ИмяВарианта);
		Исключение
			Продолжить;
		КонецПопытки;
		
		Для каждого РазмещениеВПодстистеме Из Вариант.Размещение Цикл
		
			Вариант.Размещение.Вставить(РазмещениеВПодстистеме.Ключ,"Важный");
		
		КонецЦикла; 
	
	КонецЦикла;

КонецПроцедуры // СделатьВторостепенным()

// Перемещает указанные варианты указанного отчета в СмТакже
//
// Параметры
//   Настройки (ДеревоЗначений) Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации()
//
//  ИмяОтчета  - Строка - Имя отчета который необходимо переместить в СмТакже
//
//  Варианты  - Строка - Варианты отчета, перечисленные через запятую,
//                 которые необходимо переместить в СмТакже
//
Процедура СделатьВторостепенным(Настройки,ИмяОтчета, ВариантыСтрокой)

	МассивВариантов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВариантыСтрокой);
	
	Для каждого ИмяВарианта Из МассивВариантов Цикл
	
		Попытка
			Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты[ИмяОтчета], ИмяВарианта);
		Исключение
			Продолжить;
		КонецПопытки;
		
		Для каждого РазмещениеВПодстистеме Из Вариант.Размещение Цикл
		
			Вариант.Размещение.Вставить(РазмещениеВПодстистеме.Ключ,"СмТакже");
		
		КонецЦикла; 
	
	КонецЦикла;

КонецПроцедуры // СделатьВторостепенным()

Процедура ВыделитьОсновныеОтчеты(Настройки)

	СделатьОсновным(Настройки,"АнализДоступности","Основной");
	СделатьОсновным(Настройки,"Взаиморасчеты","ВедомостьКратко");
	СделатьОсновным(Настройки,"ТоварныйОтчетТОРГ29","Основной");
	СделатьОсновным(Настройки,"СводныйАнализЗаказовПокупателей","Основной,ВыполнениеИОплатаЗаказНарядов");
	СделатьОсновным(Настройки,"СводныйАнализЗаказовПоставщикам","Основной");
	СделатьОсновным(Настройки,"АнализПотребности","Основной");
	СделатьОсновным(Настройки,"Склад","Ведомость");
	СделатьОсновным(Настройки,"ВыпускПродукции","Основной");
	СделатьОсновным(Настройки,"ДенежныеСредства","Остатки");
	СделатьОсновным(Настройки,"ДенежныеСредства","Ведомость");
	СделатьОсновным(Настройки,"ПлатежныйКалендарь","Основной");
	СделатьОсновным(Настройки,"НачисленияИУдержания","ВВалюте");
	СделатьОсновным(Настройки,"РасчетыСПерсоналом","ВедомостьВВалюте");
	СделатьОсновным(Настройки,"Продажи","ВаловаяПрибыль");
	СделатьОсновным(Настройки,"Продажи","ДинамикаПродаж");
	СделатьОсновным(Настройки,"ДоходыИРасходы","Ведомость");
	СделатьОсновным(Настройки,"ДоходыИРасходыКассовымМетодом","Основной");
	СделатьОсновным(Настройки,"ОборотноСальдоваяВедомость","ОСВ");
	
	// ДисконтныеКарты
	СделатьОсновным(Настройки,"ПродажиПоДисконтнымКартам","ПродажиПоДисконтнымКартам");
	// Конец ДисконтныеКарты
	// АвтоматическиеСкидки
	СделатьОсновным(Настройки,"АвтоматическиеСкидки","АвтоматическиеСкидки");
	// Конец АвтоматическиеСкидки

КонецПроцедуры

// Убирает часть отчетов в раздел "СмТакже"
//
// Параметры:
//   Настройки (ДеревоЗначений) Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации()
//
Процедура ВыделитьВторостепенныеОтчеты(Настройки)
	
	СделатьВторостепенным(Настройки,"Ценообразование_ЦенаИзПоследнегоПоступления","Основной");
	СделатьВторостепенным(Настройки,"Ценообразование_ЦенаИзПоследнейРеализации","Основной");
	СделатьВторостепенным(Настройки,"Ценообразование_СравнениеЦенЗаПериод","Основной");
	СделатьВторостепенным(Настройки,"Взаиморасчеты","Ведомость,Остатки");
	СделатьВторостепенным(Настройки,"РеестрСтаренияДебиторскойЗадолженности","Основной");
	СделатьВторостепенным(Настройки,"ДенежныеСредстваВКассахККМ","Ведомость,Остатки,ОстаткиВВалюте");
	СделатьВторостепенным(Настройки,"СуммовойУчетВРознице","Ведомость,Остатки,ОстаткиВВалюте");
	СделатьВторостепенным(Настройки,"Запасы","Ведомость,Остатки");
	СделатьВторостепенным(Настройки,"РазмещениеЗаказов","Ведомость");
	СделатьВторостепенным(Настройки,"ДенежныеСредства","Ведомость,Остатки,Анализ движений");
	СделатьВторостепенным(Настройки,"ДенежныеСредстваПрогноз","Основной,План-фактный анализ");
	СделатьВторостепенным(Настройки,"НачисленияИУдержания","Основной");
	СделатьВторостепенным(Настройки,"РасчетыСПерсоналом","Ведомость,Остатки,ОстаткиВВалюте");
	СделатьВторостепенным(Настройки,"БюджетДвиженияДенежныхСредств","План-фактный анализ");
	СделатьВторостепенным(Настройки,"БюджетПрибылейИУбытков","План-фактный анализ");
	СделатьВторостепенным(Настройки,"Себестоимость","Полный");
	СделатьВторостепенным(Настройки,"Закупки","Основной");
	СделатьВторостепенным(Настройки,"ABCАнализПродаж","ABCанализПродажПоПокупателям,ABCанализПродажПоМенеджерам");
	СделатьВторостепенным(Настройки,"ABCXYZАнализПродаж","ABCXYZанализПродажПоПокупателям,ABCXYZанализПродажПоМенеджерам");
	СделатьВторостепенным(Настройки,"Склад","Остатки");
	СделатьВторостепенным(Настройки,"ИзлишкиИНедостачи","Основной");
	СделатьВторостепенным(Настройки,"ЗапасыВРазрезеГТД","Ведомость,Остатки");
	СделатьВторостепенным(Настройки,"ЗапасыПринятые","Ведомость,Остатки,ЗапасыВПереработке,ЗапасыНаОтветхранении");
	СделатьВторостепенным(Настройки,"ЗапасыПереданные","Ведомость,Остатки,ЗапасыВПереработке,ЗапасыНаОтветхранении");
	СделатьВторостепенным(Настройки,"ЗаказыНаПроизводство","Остатки");
	СделатьВторостепенным(Настройки,"РасчетыСПодотчетниками","Ведомость,Остатки,ОстаткиВВалюте");
	СделатьВторостепенным(Настройки,"РасчетыСПокупателями","Ведомость,ВедомостьВВалюте,Остатки,ОстаткиВВалюте");
	СделатьВторостепенным(Настройки,"ВзаиморасчетыКратко","Ведомость в валюте (кратко)");
	СделатьВторостепенным(Настройки,"ЗаказыПокупателей","Ведомость,Остатки");
	СделатьВторостепенным(Настройки,"ЗаказыПоставщикам","Ведомость,Остатки");
	СделатьВторостепенным(Настройки,"РазмещениеЗаказов","Ведомость,Остатки");
	СделатьВторостепенным(Настройки,"РасчетыСПоставщиками","Ведомость,Остатки,ВедомостьВВалюте,ОстаткиВВалюте");
	СделатьВторостепенным(Настройки,"РеестрСтаренияКредиторскойЗадолженности","Основной");
	СделатьВторостепенным(Настройки,"РасчетыПоНалогам","Остатки");
	СделатьВторостепенным(Настройки,"НЗП","Остатки");
	
КонецПроцедуры // ВыделитьВторостепенныеОтчеты()

// Содержит настройки размещения вариантов отчетов в панели отчетов.
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоПредопределенных().
//
// Описание:
//   В данной процедуре необходимо указать каким именно образом предопределенные варианты отчетов
//   будут регистрироваться в программе и показываться в панели отчетов.
//
// Вспомогательные методы:
//   1. Функции ОписаниеОтчета и ОписаниеВарианта формируют описание настроек отчета и варианта для последующего изменения:
//		НастройкиОтчета   = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.<ИмяОтчета>);
//		НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//       Возвращаемые коллекции содержат одинаковый набор свойств.
//       НастройкиОтчета используются как умолчания для вариантов, описания которых еще не получены.
//       
//       Свойства для изменения:
//       * Включен - Булево -
//           Если Ложь, то вариант отчета не регистрируется в подсистеме.
//           Используется для удаления технических и контекстных вариантов отчетов из всех интерфейсов.
//           Эти варианты отчета по прежнему можно открывать в форме отчета программно при помощи
//           параметров открытия (см. справку по "Расширение управляемой формы для отчета.КлючВарианта").
//       * ВидимостьПоУмолчанию - Булево -
//           Если Ложь, то вариант отчета по умолчанию скрыт в панели отчетов.
//           Пользователь может "включить" его в режиме настройки панели отчетов
//           или открыть через форму "Все отчеты".
//       * Описание - Строка - Дополнительная информация по варианту отчета.
//           В панелях отчетов выводится в виде подсказки.
//           Должно расшифровывать для пользователя содержимое варианта отчета
//           и не должно дублировать наименование варианта отчета.
//           Используется при поиске.
//       * Размещение - Соответствие - Настройки размещения варианта отчета в разделах.
//           ** Ключ     - ОбъектМетаданных: Подсистема - Подсистема, в которой размещается отчет или вариант отчета.
//           ** Значение - Строка - Необязательный. Настройки размещения в подсистеме.
//               ""        - Выводить отчет в своей группе обычным шрифтом.
//               СВажный"  - Выводить отчет в своей группе жирным шрифтом.
//               ССмТакже" - Выводить отчет в группе "См. также".
//       * ФункциональныеОпции - Массив из Строка -
//            Имена функциональных опций варианта отчета.
//       * НастройкиДляПоиска - Структура - Дополнительные настройки для поиска этого варианта отчета.
//           Эти настройки необходимо задавать только если СКД не используется или используется не в полном объеме.
//           Например, СКД может использоваться только для параметризации и получения данных,
//           а вывод выполняться в фиксированный макет табличного документа.
//           ** НаименованияПолей - Строка - Имена полей варианта отчета.
//           ** НаименованияПараметровИОтборов - Строка - Имена настроек варианта отчета.
//           ** КлючевыеСлова - Строка - Дополнительная терминология (в т.ч. специализированная или устаревшая).
//           Разделитель терминов: Символы.ПС.
//       * ФорматНастроекСКД - Булево - Отчет использует типовой формат хранения настроек на механике СКД,
//           а его основные формы поддерживают стандартную схему взаимодействия между формами (параметры и тип возвращаемого значения).
//           Если Ложь, тогда для отчета отключаются проверки консистентности и некоторые механизмы, которые рассчитывают на типовой формат.
//       * ОпределитьНастройкиФормы - Булево - Отчет имеет программный интерфейс для тесной интеграции с формой отчета,
//           в том числе может переопределять некоторые настройки формы и подписываться на ее события.
//           Если Истина и отчет подключен к общей форме ФормаОтчета,
//           тогда в модуле объекта отчета следует определить процедуру по шаблону:
//               
//               // Настройки общей формы отчета подсистемы "Варианты отчетов".
//               //
//               // Параметры:
//               //   Форма - УправляемаяФорма, Неопределено - Форма отчета или форма настроек отчета.
//               //       Неопределено когда вызов без контекста.
//               //   КлючВарианта - Строка, Неопределено - Имя предопределенного
//               //       или уникальный идентификатор пользовательского варианта отчета.
//               //       Неопределено когда вызов без контекста.
//               //   Настройки - Структура - см. возвращаемое значение
//               //       ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//               //
//               Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
//               	// Код процедуры.
//               КонецПроцедуры
//               
//   2. Процедура УстановитьРежимВыводаВПанеляхОтчетов позволяет настроить режим группировки вариантов в панелях отчетов:
//		ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь);
//		ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Метаданные.Отчеты.<ИмяОтчета>, Истина/Ложь);
//		ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Метаданные.Подсистемы.<ИмяПодсистемы>, Истина/Ложь);
//
//   3. Процедура НастроитьОтчетВМодулеМенеджера позволяет переопределять настройки отчета в его модуле менеджера:
//		ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.<ИмяОтчета>);
//      После вставки вызова в модуле менеджера указанного отчета следует разместить экспортную процедуру по шаблону:
//      // Настройки размещения в панели отчетов.
//      //
//      // Параметры:
//      //   Настройки - Коллекция - Передается "как есть" из ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//      //       Может использоваться для получения настроек варианта этого отчета при помощи функции ВариантыОтчетов.ОписаниеВарианта().
//      //   НастройкиОтчета - СтрокаДереваЗначений - Настройки этого отчета,
//      //       уже сформированные при помощи функции ВариантыОтчетов.ОписаниеОтчета() и готовые к изменению.
//      //       См. "Свойства для изменения" процедуры ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//      //
//      // Описание:
//      //   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//      //
//      // Вспомогательные методы:
//      //	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//      //	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь);
//      //
//      // Примеры:
//      //
//      //  1. Установка описания варианта.
//      //	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//      //	НастройкиВарианта.Описание = НСтр("ru = '<Описание>'");
//      //
//      //  2. Отключение варианта отчета.
//      //	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//      //	НастройкиВарианта.Включен = Ложь;
//      //
//      Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
//      	// Код процедуры.
//      КонецПроцедуры
//
// Примеры:
//
//  1. Добавление варианта отчета в подсистему.
//	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ИмяОтчета, "<ИмяВарианта>");
//	НастройкиВарианта.Размещение.Вставить(Метаданные.Подсистемы.ИмяРаздела.Подсистемы.ИмяПодсистемы);
//
//  2. Отключение варианта отчета.
//	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ИмяОтчета, "<ИмяВарианта>");
//	НастройкиВарианта.Включен = Ложь;
//
//  3. Отключение всех вариантов отчета, кроме одного.
//	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИмяОтчета);
//	НастройкиОтчета.Включен = Ложь;
//	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//	НастройкиВарианта.Включен = Истина;
//
//  4. Заполнение настроек для поиска - наименования полей, параметров и отборов:
//	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ИмяОтчетаБезСхемы, "");
//	НастройкиВарианта.НастройкиДляПоиска.НаименованияПолей =
//		НСтр("ru = 'Контрагент
//		|Договор
//		|Ответственный
//		|Скидка
//		|Дата'");
//	НастройкиВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов =
//		НСтр("ru = 'Период
//		|Ответственный
//		|Контрагент
//		|Договор'");
//
//  5. Переключение режима вывода в панелях отчетов:
//  5.1. Группировка вариантов отчета по этому отчету:
//	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Метаданные.Отчеты.ИмяОтчета, Истина);
//  5.2. Без группировки по отчету:
//	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИмяОтчета);
//	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Отчет, Ложь);
//
// Важно:
//   Отчет выступает в качестве контейнера вариантов.
//     Изменяя настройки отчета можно сразу изменять настройки всех его вариантов.
//     Однако, если явно получить настройки варианта отчета, то они станут самостоятельными,
//     т.е. более не будут наследовать изменения настроек от отчета. См. пример 3.
//   
//   Начальная настройка размещения отчетов по подсистемам зачитывается из метаданных,
//     ее дублирование в коде не требуется.
//   
//   Функциональные опции варианта объединяются с функциональными опциями этого отчета по следующим правилам:
//     (ФО1_Отчета ИЛИ ФО2_Отчета) И (ФО3_Варианта ИЛИ ФО4_Варианта).
//   Функциональные опции отчетов не зачитываются из метаданных,
//     они применяются на этапе использования подсистемы пользователем.
//   Через ОписаниеОтчета можно добавлять функциональные опции, которые будут соединяться по указанным выше правилам,
//     но надо помнить, что эти функциональные опции будут действовать только для предопределенных вариантов отчетов.
//   Для пользовательских вариантов отчета действуют только функциональные опции отчета
//     - они отключаются только с отключением всего отчета.
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	// ИнтернетПоддержкаПользователей
	ИнтернетПоддержкаПользователей.НастроитьВариантыОтчетов(Настройки);
	// Конец ИнтернетПоддержкаПользователей
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализЗаказовПокупателей, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет проанализировать выполнение заказов покупателей.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализЗаказаПокупателя, "Основной");
	Вариант.Описание = НСтр("ru = 'Детальная информация по заказу: состояние, заказано, оплачено, отгружено.'");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализЗаказаПоставщику, "Основной");
	Вариант.Описание = НСтр("ru = 'Детальная информация по заказу: состояние, заказано, получено.'");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Взаиморасчеты, "ВедомостьКраткоКонтекст");
	Вариант.Описание = НСтр("ru = 'Динамика изменения долга контрагента за указанный период.'");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализДоступности, "СвободныеОстаткиКонтекст");
	Вариант.Описание = НСтр("ru = 'Анализ доступности товарных позиций на складах.'");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "ПродажиКонтекст");
	Вариант.Описание = НСтр("ru = 'История продаж с детализацией по документу, товару или услуге за указанный период.'");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РозничныеПродажи, "РозничныеПродажиКонтекст");
	Вариант.Описание = НСтр("ru = 'История розничных продаж с детализацией по товару или услуге за указанный период.'");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РозничныеПродажи, "РозничныеПродажиПоТочкамКонтекст");
	Вариант.Описание = НСтр("ru = 'История розничных продаж в разрезе касс ККМ за указанный период.'");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Ценообразование_ЦенаИзПоследнегоПоступления, "Основной");
	Вариант.Описание = НСтр("ru = 'Цены последних поступлений товара.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Ценообразование_ЦенаИзПоследнейРеализации, "Основной");
	Вариант.Описание = НСтр("ru = 'Цена последней реализации товара.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Ценообразование_СравнениеЦенЗаПериод, "Основной");
	Вариант.Описание = НСтр("ru = 'Сравнение цен за период.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализОплатыПоЗаказамПокупателей, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет проанализировать оплату заказов покупателей.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализОплатыПоЗаказамПоставщикам, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет проанализировать оплату заказов поставщикам.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализПотребности, "Основной");
	Вариант.Описание = НСтр("ru = 'Показывает обеспечение потребности в сырье и материалах, необходимых для выполнения работ, оказания услуг, производства продукции.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализСчетовНаОплату, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет проанализировать оплату счетов покупателями.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализСчетовНаОплатуПоставщиков, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет проанализировать оплату счетов поставщиков.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Баланс, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет формирует управленческий баланс на указанный период.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.БюджетДвиженияДенежныхСредств, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет формирует бюджет движения денежных средств по указанному сценарию.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.БюджетДвиженияДенежныхСредств, "План-фактный анализ");
	Вариант.Описание = НСтр("ru = 'Отчет формирует бюджет движения денежных средств по указанному сценарию.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.БюджетПрибылейИУбытков, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет формирует бюджет прибылей и убытков по указанному сценарию.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.БюджетПрибылейИУбытков, "План-фактный анализ");
	Вариант.Описание = НСтр("ru = 'Отчет формирует план-фактный анализ бюджета прибылей и убытков по указанному сценарию.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВедомостьПоТоварамНаСкладахВЦенахНоменклатуры, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для оценки стоимости остатков и движений товаров на складах указанному виду цен.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВедомостьПоТоварамНаСкладахВЦенахНоменклатуры, "ОценкаСтоимостиСклада");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для оценки стоимости остатков товаров на складах указанному виду цен.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Взаиморасчеты, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику взаиморасчетов с покупателями и поставщиками сводно за выбранный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Взаиморасчеты, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет отображает состояние взаиморасчетов с покупателями и поставщиками сводно за выбранный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Взаиморасчеты, "ВедомостьКратко");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику взаиморасчетов с покупателями и поставщиками сводно за выбранный период времени в валюте расчетов (кратко).'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВзаиморасчетыКратко, "Ведомость в валюте (кратко)");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику взаиморасчетов с покупателями и поставщиками сводно за выбранный период времени расчетов (кратко без использования детализации по договорам).'");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Долги, "Долги");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику взаиморасчетов с покупателями и поставщиками сводно за выбранный период времени расчетов.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВнеоборотныеАктивы, "Ведомость");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сводные сведения об амортизации имущества.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВнеоборотныеАктивы, "Карточка");
	Вариант.Описание = НСтр("ru = 'Инвентарная карточка имущества.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВыпускПродукции, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет по выполнению работ, оказанию услуг и выпуску продукции.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВыработкаВнеоборотныхАктивов, "Основной");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения о выработке имущества за выбранный период времени.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ГрафикДвиженияЗапасов, "Основной");
	Вариант.Описание = НСтр("ru = 'Показывает плановые поступления и отгрузки номенклатуры по заказам в количественном выражении за указанный период.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализДоступности, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет отображает свободный остаток товара на складах.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДвижениеДенежныхСредств, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет о движении денежных средств организации за указанный период.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДвижениеТоваров, "ДвижениеТоваров");
	Вариант.Описание = НСтр("ru = 'Товарная ведомость с детализацией по местам хранения и хозяйственным операциям.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныйПоток, "Денежный поток");
	Вариант.Описание = НСтр("ru = 'В отчете отражаются все поступления денежных средств и платежи.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредства, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Ведомость движения денежных средств с детализацией по кассам и банковским счетам за указаный период.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредства, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет показывает остатки денежных средств на счетах и в кассах на указанную дату.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредства, "Анализ движений");
	Вариант.Описание = НСтр("ru = 'Отчет показывает движение денежных средств с детализацией по статьям за выбранный период времени.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредства, "ВедомостьВВалюте");
	Вариант.Описание = НСтр("ru = 'Ведомость движения денежных средств с детализацией по кассам и банковским счетам за указанный период в валюте денежных средств.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредства, "ОстаткиВВалюте");
	Вариант.Описание = НСтр("ru = 'Отчет показывает остатки денежных средств на счетах и в кассах на указанную дату в валюте денежных средств.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредства, "Анализ движений в валюте");
	Вариант.Описание = НСтр("ru = 'Отчет показывает движение денежных средств с детализацией по статьям за выбранный период времени в валюте денежных средств.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредства, "ДинамикаПоступленияДенежныхСредств");
	Вариант.Описание = НСтр("ru = 'Отчет показывает динамику поступления денежных средств с детализацией по статьям за выбранный период времени в валюте учета.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредства, "ДинамикаРасходаДенежныхСредств");
	Вариант.Описание = НСтр("ru = 'Отчет показывает динамику расхода денежных средств с детализацией по статьям за выбранный период времени в валюте учета.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредстваВКассахККМ, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет отображает движения денежных средств в кассах ККМ за выбранный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредстваВКассахККМ, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет выводит остатки денежных средств в кассах ККМ на указанную дату.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредстваВКассахККМ, "ВедомостьВВалюте");
	Вариант.Описание = НСтр("ru = 'Отчет отображает движения денежных средств в кассах ККМ за выбранный период времени в валюте денежных средств.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредстваВКассахККМ, "ОстаткиВВалюте");
	Вариант.Описание = НСтр("ru = 'Отчет выводит остатки денежных средств в кассах ККМ на указанную дату в валюте денежных средств.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредстваПрогноз, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет показывает запланированные движения денежных средств по указанному сценарию.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредстваПрогноз, "ВВалюте");
	Вариант.Описание = НСтр("ru = 'Отчет показывает запланированные движения денежных средств по указанному сценарию в валюте денежных средств.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредстваПрогноз, "План-фактный анализ");
	Вариант.Описание = НСтр("ru = 'Отчет показывает план-фактный анализ движения денежных средств.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДенежныеСредстваПрогноз, "План-фактный анализ (вал.)");
	Вариант.Описание = НСтр("ru = 'Отчет показывает план-фактный анализ движения денежных средств в валюте денежных средств.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПланируемыеОстаткиДС, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет показывает информацию о планируемых остатках денежных средств в выбранной валюте.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДоходыИРасходы, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет содержит данные о доходах и расходах (по отгрузке).'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДоходыИРасходы, "ДоходыИРасходыПоЗаказам");
	Вариант.Описание = НСтр("ru = 'Отчет содержит данные о доходах и расходах по заказам покупателей(по отгрузке).'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДоходыИРасходы, "ДинамикаДоходовИРасходов");
	Вариант.Описание = НСтр("ru = 'Динамика изменения доходов, расходов, прибыли (по отгрузке) за указанный период.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДоходыИРасходыКассовымМетодом, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет содержит данные о доходах и расходах (по оплате).'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДоходыИРасходыКассовымМетодом, "ДинамикаДоходовИРасходов");
	Вариант.Описание = НСтр("ru = 'Отчет показывает динамику изменения доходов, расходов и прибыли (по оплате) за выбранный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДоходыИРасходыПрогноз, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет содержит прогнозные данные о доходах и расходах (по отгрузке).'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДоходыИРасходыПрогноз, "План-фактный анализ");
	Вариант.Описание = НСтр("ru = 'Отчет содержит план-фактный анализ доходов и расходов (по отгрузке).'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗаданияНаРаботу, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет показывает запланированные и выполненные задания на работу.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗаданияНаРаботу, "ОтчетЗаказчику");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для предоставления сведений заказчику о выполненных заданиях на работу.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗаказыНаПроизводство, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику работы с заказами за выбранный период.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗаказыНаПроизводство, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для анализа состояния заказов на указанную дату.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗаказыПокупателей, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику работы с заказами за выбранный период.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗаказыПокупателей, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет отображает состояние заказов на указанную дату.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗаказыПоставщикам, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику работы с заказами за выбранный период.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗаказыПоставщикам, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет отображает состояние заказов на указанную дату.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ABCАнализПродаж, "ABCанализПродажПоНоменклатуре");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет классифицировать продаваемые товары по степени их важности.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ABCАнализПродаж, "ABCанализПродажПоПокупателям");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет классифицировать покупателей по степени их важности.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ABCАнализПродаж, "ABCанализПродажПоМенеджерам");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет классифицировать менеджеров компании по степени их важности.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ABCАнализПродаж, "ABCанализПродажПоКатегориямНоменклатуры");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет классифицировать категории товаров по степени их важности.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ABCXYZАнализПродаж, "ABCXYZанализПродажПоНоменклатуре");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет классифицировать продаваемые товары по степени их важности и стабильности продаж.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ABCXYZАнализПродаж, "ABCXYZанализПродажПоКатегориямНоменклатуры");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет классифицировать категории товаров по степени их важности и стабильности продаж.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ABCXYZАнализПродаж, "ABCXYZанализПродажПоПокупателям");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет классифицировать покупателей по степени их важности и стабильности продаж.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ABCXYZАнализПродаж, "ABCXYZанализПродажПоМенеджерам");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет классифицировать менеджеров компании по степени их важности и стабильности продаж.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Закупки, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для анализа закупок номенклатуры, совершенных предприятием в течение заданного периода времени.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Запасы, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Поступление, отгрузка и текущее количество запасов в свободном остатке и в резерве по заказам покупателей.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Запасы, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет отображает состояние запасов на указанную дату.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ИзлишкиИНедостачи, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию об излишках и недостачах по итогам инвентаризации.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗапасыВРазрезеГТД, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о поступлении, отгрузке и текущем количестве любого импортного товара, которому присвоен номер ГТД.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗапасыВРазрезеГТД, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о текущем количестве любого импортного товара, которому присвоен номер ГТД.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗапасыПереданные, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о товарах, переданных на комиссию за указанный период времени.'");
	Вариант.ФункциональныеОпции.Добавить("ПередачаТоваровНаКомиссию");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗапасыПереданные, "ЗапасыВПереработке");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о запасах, переданных в переработку за указанный период времени.'");
	Вариант.ФункциональныеОпции.Добавить("ПередачаСырьяВПереработку");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗапасыПереданные, "ЗапасыНаОтветхранении");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о запасах, переданных на ответственное хранение за указанный период времени.'");
	Вариант.ФункциональныеОпции.Добавить("ПередачаЗапасовНаОтветхранение");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗапасыПереданные, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию об остатках запасов, принятых на комиссию, в переработку и на ответственное хранение.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ОстаткиТоваров, "ПоМестамХранения");
	Вариант.Описание = НСтр("ru = 'Остатки товаров в различных разрезах с режимами: Свой/Чужой/На складах/У реализаторов.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ОстаткиТоваров, "Прогноз");
	Вариант.Описание = НСтр("ru = 'Остатки товаров с прогнозом расхода и поступлений.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ОстаткиТоваровМеньшеНуля, "ОстаткиТоваровМеньшеНуля");
	Вариант.Описание = НСтр("ru = 'Остатки товаров < 0 в различных разрезах с режимами: Свой/Чужой/На складах/У реализаторов.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСКомиссионерами, "РасчетыСКомиссионерами");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о товарах, переданных на реализацию и состоянию расчетов комиссионерами.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСКомитентами, "РасчетыСКомитентами");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о товарах, принятых на реализацию и состоянию расчетов комитентами.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗапасыПринятые, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о товарах, принятых на комиссию за указанный период времени.'");
	Вариант.Размещение.Удалить(Метаданные.Подсистемы.КомплектацияИПроизводство.Подсистемы.Переработка);
	Вариант.ФункциональныеОпции.Добавить("ПриемТоваровНаКомиссию");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗапасыПринятые, "ЗапасыВПереработке");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о запасах, принятых в переработку за указанный период времени.'");
	Вариант.ФункциональныеОпции.Добавить("ПереработкаДавальческогоСырья");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗапасыПринятые, "ЗапасыНаОтветхранении");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о запасах, принятых на ответственное хранение за указанный период времени.'");
	Вариант.Размещение.Удалить(Метаданные.Подсистемы.КомплектацияИПроизводство.Подсистемы.Переработка);
	Вариант.ФункциональныеОпции.Добавить("ПриемЗапасовНаОтветхранение");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЗапасыПринятые, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию об остатках запасов, принятых на комиссию, в переработку и на ответственное хранение.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.КалендарьСобытий, "КалендарьСобытий");
	Вариант.Описание = НСтр("ru = 'Список всех событий с отбором по периоду без группировок.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.КалендарьСобытий, "КалендарьСобытийПоОтветственным");
	Вариант.Описание = НСтр("ru = 'Список всех событий с отбором по периоду с группировкой по ответственным лицам.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.КалендарьСобытий, "КалендарьСобытийПоКонтактам");
	Вариант.Описание = НСтр("ru = 'Список всех событий с отбором по периоду с группировкой по контактам.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.КалендарьСобытий, "КалендарьСобытийПоТемам");
	Вариант.Описание = НСтр("ru = 'Список всех событий с отбором по периоду с группировкой по темам.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.НачисленияИУдержания, "Основной");
	Вариант.Описание = НСтр("ru = 'В отчете отражаются данные по начислениям и удержаниям сотрудников с детализацией до вида начисления/удержания.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.НачисленияИУдержания, "ВВалюте");
	Вариант.Описание = НСтр("ru = 'В отчете отражаются данные по начислениям и удержаниям сотрудников в валюте с детализацией до вида начисления/удержания.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.НЗП, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Изменения прямых и косвенных затрат предприятия в разрезе подразделений с детализацией по заказам покупателей.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.НЗП, "Остатки");
	Вариант.Описание = НСтр("ru = 'Cостояние прямых и косвенных затрат предприятия в разрезе подразделений с детализацией по заказам покупателей.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.НормативныйСоставИзделия); //Вариант отсутствует, описание надо ставить для отчета.
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Отчет, Истина);
	Отчет.Описание = НСтр("ru = 'Отчет предоставляет информацию о нормативном составе и технологии работ, продукции.'");
	Отчет.НастройкиДляПоиска.НаименованияПолей =
		НСтр("ru = 'Номенклатура
		|Технологическая операция
		|Учетная цена.'");
	Отчет.НастройкиДляПоиска.НаименованияПараметровИОтборов =
		НСтр("ru = 'Дата расчета
		|Вид цен
		|Номенклатура
		|Характеристика
		|Спецификация.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ОборачиваемостьЗапасов, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для анализа оборачиваемости и среднего срока хранения запасов.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ОборотноСальдоваяВедомость, "ОСВ");
	Вариант.Описание = НСтр("ru = 'Отчет содержит информацию о начальных и конечных остатках по счетам учета, а так же оборотов по счетам за указанный период.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ОтработанноеВремя, "ПоДням");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения о ежедневных затратах рабочего времени по дням за указанный период.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ОтработанноеВремя, "ВЦеломЗаПериод");
	Вариант.Описание = НСтр("ru = 'В отчет выводятся данные о суммарных затратах рабочего времени с детализацией до вида рабочего времени за указанный период.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПланФактныйАнализПродаж, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет контролировать прогресс выполнения плана продаж.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПланФактныйАнализПроизводства, "Основной");
	Вариант.Описание = НСтр("ru = 'План-фактный анализ выполнения работ, оказания услуг, производства продукции.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПланыПродаж, "Основной");
	Вариант.Описание = НСтр("ru = 'В отчете отображается общий (сгруппированный) план продаж, введеный отдельными документами.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПлатежныйКалендарь, "Основной");
	Вариант.Описание = НСтр("ru = 'Платежный календарь.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПрибылиИУбытки, "Основной");
	Вариант.Описание = НСтр("ru = 'В отчет выводится информация о прибылях и убытках за указанный период.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПрогнозныйБаланс, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет формирует бюджет по балансовому листу по указанному сценарию.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПрогнозныйБаланс, "План-фактный анализ");
	Вариант.Описание = НСтр("ru = 'Отчет показывает план-фактный анализ исполнения бюджета по балансовому листу.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет отображает сведения о проданных позициях номенклатуры в количественном и суммовом выражении за определенный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "Возвраты");
	Вариант.Описание = НСтр("ru = 'Отчет отображает сведения о возвращенных позициях номенклатуры в количественном и суммовом выражении за определенный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "ВаловаяПрибыль");
	Вариант.Описание = НСтр("ru = 'Отчет отображает валовую прибыль за определенный период времени.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "ВаловаяПрибыльПоКатегориямНоменклатуры");
	Вариант.Описание = НСтр("ru = 'Отчет отображает валовую прибыль по категориям номенклатуры за определенный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "ВаловаяПрибыльПоПокупателям");
	Вариант.Описание = НСтр("ru = 'Отчет отображает валовую прибыль по покупателям за определенный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "ВаловаяПрибыльПоМенеджерам");
	Вариант.Описание = НСтр("ru = 'Отчет отображает валовую прибыль по менеджерам за определенный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "ДинамикаПродаж");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику продаж по периодам за определенный период времени.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "ДинамикаПродажПоНоменклатуре");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику продаж по номенклатуре за определенный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "ДинамикаПродажПоКатегориямНоменклатуры");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику продаж по категориям номенклатуры за определенный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "ДинамикаПродажПоПокупателям");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику продаж по покупателям за определенный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Продажи, "ДинамикаПродажПоМенеджерам");
	Вариант.Описание = НСтр("ru = 'Отчет отображает динамику продаж по менеджерам за определенный период времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РазмещениеЗаказов, "Ведомость");
	Вариант.Описание = НСтр("ru = 'В отчете отражаются изменение данных о заказах покупателей, выполнение которых обеспечивается за счет поступлений по другим заказам - поставщикам и на комплектацию, производство.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РазмещениеЗаказов, "Остатки");
	Вариант.Описание = НСтр("ru = 'В отчете отражаются данные о заказах покупателей, выполнение которых обеспечивается за счет поступлений по другим заказам - поставщикам и на комплектацию, производство.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасчетнаяВедомость);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Отчет, Истина);	
	Отчет.Описание = НСтр("ru = 'Расчетная ведомость произвольной формы. Предназначена для внутренней отчетности предприятия.'");
	Отчет.НастройкиДляПоиска.НаименованияПолей =
		НСтр("ru = 'Табельный номер
		|Сотрудник
		|Должность
		|Тарифная ставка
		|Подразделение
		|Организация.'");
	Отчет.НастройкиДляПоиска.НаименованияПараметровИОтборов =
		НСтр("ru = 'Период регистрации
		|Подразделение
		|Валюта
		|Организация.'");
	
	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасчетныеЛистки);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Отчет, Истина);	
	Отчет.Описание = НСтр("ru = 'Формирование расчетных листков, отобранных и сгруппированных по организациям и подразделениям.'");
	Отчет.НастройкиДляПоиска.НаименованияПолей =
		НСтр("ru = 'Табельный номер
		|Сотрудник
		|Должность
		|Тарифная ставка
		|Подразделение
		|Организация.'");
	Отчет.НастройкиДляПоиска.НаименованияПараметровИОтборов =
		НСтр("ru = 'Период регистрации
		|Подразделение
		|Валюта
		|Сотрудник.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыПоНалогам, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о расчетах с бюджетом по налогам и сборам, в разрезе видов налогов.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыПоНалогам, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить информацию о состоянии расчетов с бюджетом по налогам сборам, в разрезе видов налогов.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПерсоналом, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет отображает изменение задолженности по заработной плате сотрудникам в течение выбранного периода времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПерсоналом, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет отображает состояние задолженности по заработной плате сотрудникам в течение выбранного периода времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПерсоналом, "ВедомостьВВалюте");
	Вариант.Описание = НСтр("ru = 'Отчет отображает изменение задолженности по заработной плате сотрудникам в валюте расчетов в течение выбранного периода времени.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПерсоналом, "ОстаткиВВалюте");
	Вариант.Описание = НСтр("ru = 'Отчет отображает состояние задолженности по заработной плате сотрудникам в валюте расчетов в течение выбранного периода времени.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПодотчетниками, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет отображает изменение задолженностей в течение выбранного периода времени, возникающих при расчетах с подотчетными лицами.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПодотчетниками, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет отображает состояние задолженностей в течение выбранного периода времени, возникающих при расчетах с подотчетными лицами.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПодотчетниками, "ВедомостьВВалюте");
	Вариант.Описание = НСтр("ru = 'Отчет отображает изменение задолженностей в валюте расчетов в течение выбранного периода времени, возникающих при расчетах с подотчетными лицами.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПодотчетниками, "ОстаткиВВалюте");
	Вариант.Описание = НСтр("ru = 'Отчет отображает состояние задолженностей в валюте расчетов в течение выбранного периода времени, возникающих при расчетах с подотчетными лицами.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПокупателями, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Расчеты компании с покупателями по заказам и договорам, в рамках которых заключались сделки.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПокупателями, "Остатки");
	Вариант.Описание = НСтр("ru = 'Остатки расчетов компании с покупателями по заказам и договорам, в рамках которых заключались сделки.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПокупателями, "ВедомостьВВалюте");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения о расчетах компании с покупателями в валюте расчетов, включая заказы и договоры, в рамках которых заключались сделки между компанией и контрагентами.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПокупателями, "ОстаткиВВалюте");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения об остатках расчетов компании с покупателями в валюте расчетов, включая заказы и договоры, в рамках которых заключались сделки между компанией и контрагентами.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДинамикаЗадолженностиПокупателей, "ДинамикаЗадолженности");
	Вариант.Описание = НСтр("ru = 'Отчет показывает динамику изменения общей и просроченной задолженности покупателей за выбранный период времени.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПоставщиками, "Ведомость");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения о расчетах компании с поставщиками, включая заказы и договоры, в рамках которых заключались сделки между компанией и контрагентами.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПоставщиками, "Остатки");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения об остатках расчетов компании с поставщиками, включая заказы и договоры, в рамках которых заключались сделки между компанией и контрагентами.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПоставщиками, "ВедомостьВВалюте");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения о расчетах компании с поставщиками в валюте расчетов, включая заказы и договоры, в рамках которых заключались сделки между компанией и контрагентами.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыСПоставщиками, "ОстаткиВВалюте");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения об остатках расчетов компании с поставщиками в валюте расчетов, включая заказы и договоры, в рамках которых заключались сделки между компанией и контрагентами.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДинамикаЗадолженностиПоставщикам, "ДинамикаЗадолженности");
	Вариант.Описание = НСтр("ru = 'Отчет показывает динамику изменения общей и просроченной задолженности поставщикам за выбранный период времени.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РеестрСтаренияДебиторскойЗадолженности, "Основной");
	Вариант.Описание = НСтр("ru = 'Задолженность покупателей с указанием длительности просрочки.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РеестрСтаренияДебиторскойЗадолженности, "ВВалюте");
	Вариант.Описание = НСтр("ru = 'Задолженность покупателей в валюте расчетов с указанием длительности просрочки.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РеестрСтаренияКредиторскойЗадолженности, "Основной");
	Вариант.Описание = НСтр("ru = 'Наша задолженность перед поставщиками по срокам долга.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РеестрСтаренияКредиторскойЗадолженности, "ВВалюте");
	Вариант.Описание = НСтр("ru = 'Наша задолженность перед поставщиками в валюте расчетов по срокам долга.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СводныйАнализЗаказовПокупателей, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет проанализировать выполнение заказов покупателей по суммам и количеству.'");
	Вариант.Размещение.Удалить(Метаданные.Подсистемы.Работы.Подсистемы.Работы);
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СводныйАнализЗаказовПокупателей, "ВыполнениеИОплатаЗаказНарядов");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет проанализировать выполнение заказов-нарядов по суммам и количеству.'");
	Вариант.Размещение.Удалить(Метаданные.Подсистемы.МаркетингИПродажи.Подсистемы.Продажи);
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СводныйАнализЗаказовПоставщикам, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет проанализировать выполнение заказов поставщикам по суммам и количеству.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СдельныеНаряды, "Основной");
	Вариант.Описание = НСтр("ru = 'План-фактный анализ технологических операций, выполняемых сотрудниками в рамках сдельных нарядов.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Себестоимость, "Полный");
	Вариант.Описание = НСтр("ru = 'Отчет содержит данные о себестоимости выпущенной продукции, работ и услуг с расшифровкой понесенных при этом затрат.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Себестоимость, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет содержит данные о себестоимости выпущенной продукции, работ и услуг.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПланФактныйАнализСебестоимостиВыпуска, "Основной");
	Вариант.Описание = НСтр("ru = 'План-фактный анализ затрат на выпуск продукции.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Склад, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет позволяет получить полную информацию о поступлении, отгрузке и текущем количестве товаров в выбранном месте хранения.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Склад, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет отображает состояние склада, информацию для кладовщика.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СпискиСотрудников, "СписокСотрудников");
	Вариант.Описание = НСтр("ru = 'Отчет отображает кадровую информацию сотрудников.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СпискиСотрудников, "ПлановыеНачисления");
	Вариант.Описание = НСтр("ru = 'Отчет отображает информацию о плановых начислениях сотрудников.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СпискиСотрудников, "ПаспортныеДанные");
	Вариант.Описание = НСтр("ru = 'Отчет отображает паспортные данные физических лиц.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СпискиСотрудников, "КонтактнаяИнформация");
	Вариант.Описание = НСтр("ru = 'Отчет отображает контактную информацию физических лиц.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СуммовойУчетВРознице, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для анализа продаж в розничной точке с суммовым учетом.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СуммовойУчетВРознице, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для анализа состояния продаж в розничной точке с суммовым учетом.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СуммовойУчетВРознице, "ВедомостьВВалюте");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для анализа состояния продаж в розничной точке с суммовым учетом в валюте.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СуммовойУчетВРознице, "ОстаткиВВалюте");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для анализа состояния задолженности розницы с суммовым учетом в валюте.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ТоварныйОтчетТОРГ29, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для анализа розничных продаж. Отчет формируется по регламентированной форме Торг-29.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЖурналУчетаПродажиАлкогольнойПродукции, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для формирования журнала учета объема розничной продажи алкогольной и спиртосодержащей продукции.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ФинансовыйРезультат, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Экономический итог хозяйственной деятельности, выраженный в денежной форме.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ФинансовыйРезультатПрогноз, "Основной");
	Вариант.Описание = НСтр("ru = 'В отчет выводятся сведения о прогнозе финансового результата по указанному сценарию.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ФинансовыйРезультатПрогноз, "План-фактный анализ");
	Вариант.Описание = НСтр("ru = 'В отчете сравнивается прогнозный и фактический финансовый результат.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ШтатноеРасписание, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для предоставления информации о состоянии штатного расписания организации.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РаспределениеМатериалов, "Основной");
	Вариант.Описание = НСтр("ru = 'Распределение материалов на единицу продукции.'");
	Вариант.Размещение.Очистить();
	
	// ДисконтныеКарты
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПродажиПоДисконтнымКартам, "ПродажиПоДисконтнымКартам");
	Вариант.Описание = НСтр("ru = 'Отчет отображает сведения о продажах по дисконтным картам в суммовом выражении за определенный период времени.'");	
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПродажиПоДисконтнымКартам, "ПродажиПоДисконтнойКарте");
	Вариант.Описание = НСтр("ru = 'Отчет вызывается из обработки ""Дисконтные карты"" и отображает сведения о продажах по дисконтной карте в суммовом выражении за определенный период времени.'");	
	Вариант.Включен = Ложь;
	Вариант.ВидимостьПоУмолчанию = Ложь;
	// Конец ДисконтныеКарты
	
	// АвтоматическиеСкидки
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АвтоматическиеСкидки, "АвтоматическиеСкидки");
	Вариант.Описание = НСтр("ru = 'Отчет отображает сведения о предоставленных автоматических скидках в суммовом выражении за определенный период времени.'");	
	// Конец АвтоматическиеСкидки
	
	// Эквайринг
	Если ПолучитьФункциональнуюОпцию("ВестиУчетРасчетовСБанкомЭквайрером") Тогда
		Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыПоЭквайрингу, "Основной");
		Вариант.Описание = НСтр("ru = 'Отчет отображает сведения о взваиморасчетах с банками-эквайрерами.'");
		
		МассивФункциональныхОпций = Новый Массив;
		МассивФункциональныхОпций.Добавить("РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям");
		Вариант.ФункциональныеОпции = МассивФункциональныхОпций;
		
		Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыПоЭквайрингу, "ОсновнойБезРазнесенияПоОперациямОплаты");
		Вариант.Описание = НСтр("ru = 'Отчет отображает сведения о взваиморасчетах с банками-эквайрерами. Используется когда отключена опция ""Разносить оплату от эквайрера по эквайринговым операциям"".'");
		
		Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.КонтрольОперацийЭквайринга, "Основной");
		Вариант.Описание = НСтр("ru = 'Отчет отображает сведения для контроля эквайринговых операций.'");
	КонецЕсли;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ОплатаПлатежнымиКартами, "ОплатаПлатежнымиКартами");
	Вариант.Описание = НСтр("ru = 'Отчет отображает сведения о продажах по платежным картам в оптовой и розничной торговле.'");
	// Конец Эквайринг
	
	// Прочие расчеты
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыПоКредитамИЗаймам, "ЗаймыСотрудникам");
	Вариант.Описание = НСтр("ru = 'Отчет отображает сведения о расчетах по предоставленным займам сотрудникам.'");	
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыПоКредитамИЗаймам, "КредитыПолученные");
	Вариант.Описание = НСтр("ru = 'Отчет отображает сведения о расчетах по полученным кредитам.'");	
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыПоПрочимОперациям, "Ведомость");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения о прочих расчетах компании, включая заказы и договоры, в рамках которых заключались сделки между компанией и контрагентами.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыПоПрочимОперациям, "Остатки");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения о прочих расчетах компании, включая заказы и договоры, в рамках которых заключались сделки между компанией и контрагентами.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыПоПрочимОперациям, "ВедомостьВВалюте");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения о прочих расчетах компании в валюте расчетов, включая заказы и договоры, в рамках которых заключались сделки между компанией и контрагентами.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.РасчетыПоПрочимОперациям, "ОстаткиВВалюте");
	Вариант.Описание = НСтр("ru = 'В отчете отображаются сведения о прочих расчетах компании в валюте расчетов, включая заказы и договоры, в рамках которых заключались сделки между компанией и контрагентами.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	// Конец Прочие расчеты
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СоставСегмента, "СоставСегментаКонтекст");
	Вариант.Описание = НСтр("ru = 'Отчет отображает текущий состав сегмента контрагентов.'");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.КонтрольЗаполненияКонтактнойИнформации, "КонтрольЗаполненияКонтактнойИнформации");
	Вариант.Описание = НСтр("ru = 'Отчет предназначен для контроля заполненности контактной информации у контрагентов и контактных лиц.'");
	
	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализБазыКонтрагентов);
	Отчет.Описание = НСтр("ru = 'Отчет предназначен для анализа имеющейся базы контрагентов по дате создания и ответственным менеджерам.'");
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Отчет, Истина);
	Отчет.НастройкиДляПоиска.НаименованияПолей =
		НСтр("ru = 'Менеджер.'");
	Отчет.НастройкиДляПоиска.НаименованияПараметровИОтборов =
		НСтр("ru = 'Сегмент
		|Тег
		|Менеджер.'");
		
	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализРаботыМенеджеров);
	Отчет.Описание = НСтр("ru = 'Отчет предназначен для сравнительного анализа работы всех менеджеров.'");
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Отчет, Истина);
	Отчет.НастройкиДляПоиска.НаименованияПолей =
		НСтр("ru = 'Менеджер.'");
	Отчет.НастройкиДляПоиска.НаименованияПараметровИОтборов =
		НСтр("ru = 'Менеджер.'");
		
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЧистыеАктивы, "ЧистыеАктивы");
	Вариант.Описание = НСтр("ru = 'Отчет показывает реальную стоимость имеющегося имущества, за вычетом долгов.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Траты, "Траты");
	Вариант.Описание = НСтр("ru = 'Диаграмма трат денежных средств.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Расходы, "Расходы");
	Вариант.Описание = НСтр("ru = 'Диаграмма расходов.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СлужебныйОтчетДобавлениеВПанельОтчетов, "МониторРасчетовСПокупателями");
	Вариант.Описание = НСтр("ru = 'Монитор отображает состояние расчетов с покупателями.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СлужебныйОтчетДобавлениеВПанельОтчетов, "МониторРасчетовСПоставщиками");
	Вариант.Описание = НСтр("ru = 'Монитор отображает состояние расчетов с поставщиками.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СлужебныйОтчетДобавлениеВПанельОтчетов, "МониторДенежныеСредства");
	Вариант.Описание = НСтр("ru = 'Монитор отображает динамику движения денежных средств.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СлужебныйОтчетДобавлениеВПанельОтчетов, "МониторОбщиеПоказатели");
	Вариант.Описание = НСтр("ru = 'Монитор отображает основные показатели состояния бизнеса.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СлужебныйОтчетДобавлениеВПанельОтчетов, "МониторРуководителя");
	Вариант.Описание = НСтр("ru = 'Монитор отображает основные показатели состояния бизнеса.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СлужебныйОтчетДобавлениеВПанельОтчетов, "МониторРуководителяНовый");
	Вариант.Описание = НСтр("ru = 'Монитор отображает основные показатели состояния бизнеса.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СлужебныйОтчетДобавлениеВПанельОтчетов, "МониторПульсБизнеса");
	Вариант.Описание = НСтр("ru = 'Монитор отображает заданные пользователем показатели и диаграммы, характеризующие состояния бизнеса.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализСчетовИЗаказовВВалютеУчета, "СчетаНаОплатуКонтекст");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализСчетовИЗаказовВВалютеУчета, "ЗаказыПокупателейКонтекст");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализСчетовИЗаказовВВалютеУчета, "ЗаказыПоставщикамКонтекст");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АктСверки, "АктСверкиКонтекст");
	Вариант.Описание = НСтр("ru = 'Акт сверки с контрагентом с детализацией по документам с расшифровкой до товаров и услуг.'");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПлановыеДвиженияДенежныхСредств, "Ведомость");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПроверкаЦелостностиТома, "Основной");
	Вариант.Включен = Ложь;
	Вариант.Размещение.Очистить();
	
	// Серийные номера
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ДвиженияСерийныхНомеров, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет отображает движения товаров с учетом серийных номеров.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СкладПоСерийнымНомерам, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет отображает остаток товаров на складах с детализацией по серийным номерам.'");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СкладПоСерийнымНомерам, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет отображает ведомость движения товаров на складах с детализацией по серийным номерам.'");
	
	// Ремонты
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СкладПоЗапасамВРемонте, "Остатки");
	Вариант.Описание = НСтр("ru = 'Отчет отображает остаток изделий, принятых в ремонт.'");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СкладПоЗапасамВРемонте, "Ведомость");
	Вариант.Описание = НСтр("ru = 'Отчет отображает ведомость движения изделий в ремонте по складам и сервисным центрам.'");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВоронкаПродаж, "ВоронкаПродаж");
	Вариант.Описание = НСтр("ru = 'Наглядно отображает распределение клиентов по стадиям процесса продаж.'");
	
	// Отчеты БСП
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.СогласияНаОбработкуПерсональныхДанныхДействующие);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.СогласияНаОбработкуПерсональныхДанныхИстекающие);
	
	Вариант = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИспользуемыеВнешниеРесурсы);
	Вариант.Включен = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СведенияОПользователях, "СведенияОПользователяхИВнешнихПользователях");
	Вариант.Включен = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СведенияОПользователях, "СведенияОПользователях");
	Вариант.Включен = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.СведенияОПользователях, "СведенияОВнешнихПользователях");
	Вариант.Включен = Ложь;
	
	ВыделитьОсновныеОтчеты(Настройки);
	ВыделитьВторостепенныеОтчеты(Настройки);
	ПроверкаКонтрагентовБРО.НастроитьВариантыОтчетов(Настройки);
	
КонецПроцедуры // НастроитьВариантыОтчетов

// Содержит описания изменений имен вариантов отчетов. Используется
//   при обновлении информационной базы, в целях контроля ссылочной целостности
//   и для сохранения настроек варианта, сделанных администратором.
//
// Параметры:
//   Изменения - ТаблицаЗначений - Таблица изменений имен вариантов. Колонки:
//       * Отчет - ОбъектМетаданных - Метаданные отчета, в схеме которого изменилось имя варианта.
//       * СтароеИмяВарианта - Строка - Старое имя варианта, до изменения.
//       * АктуальноеИмяВарианта - Строка - Текущее (последнее актуальное) имя варианта.
//
// Описание:
//   В Изменения необходимо добавить описания изменений имен вариантов
//   отчетов, подключенных к подсистеме.
//
// Например:
//	Изменение = Изменения.Добавить();
//	Изменение.Отчет = Метаданные.Отчеты.<ИмяОтчета>;
//	Изменение.СтароеИмяВарианта = "<СтароеИмяВарианта>";
//	Изменение.АктуальноеИмяВарианта = "<АктуальноеИмяВарианта>";
//
// Важно:
//   Старое имя варианта резервируется и не может быть использовано в дальнейшем.
//   Если изменений было несколько, то каждое изменение необходимо зарегистрировать,
//   указывая в актуальном имени варианта последнее (текущее) имя варианта отчета.
//   Поскольку имена вариантов отчетов не выводятся в пользовательском интерфейсе,
//   то рекомендуется задавать их таким образом, что бы затем не менять.
//
Процедура ЗарегистрироватьИзмененияКлючейВариантовОтчетов(Изменения) Экспорт
	
КонецПроцедуры // ЗарегистрироватьИзмененияКлючейВариантовОтчетов

// Глобальные настройки, применяемые как умолчания для объектов подсистемы.
//
// Параметры:
//   Настройки - Коллекция настроек подсистемы. Реквизиты:
//       * ВыводитьОтчетыВместоВариантов - Булево - Умолчание для вывода гиперссылок в панели отчетов:
//           - Истина - Варианты отчетов по умолчанию скрыты, а отчеты включены и видимы.
//           - Ложь   - Значение по умолчанию. Варианты отчетов по умолчанию видимы, а отчеты отключены.
//       * ВыводитьОписания - Булево - Умолчание для вывода описаний в панели отчетов:
//           - Истина - Значение по умолчанию. Выводить описания в виде подписей под гиперссылками вариантов
//               (режим чтения описаний).
//           - Ложь   - Выводить описания в виде всплывающих подсказок
//               (как раньше).
//       * Поиск - Структура - Настройки поиска вариантов отчетов.
//           * ПодсказкаВвода - Строка - Текст подсказки выводится в поле поиска когда поиск не задан.
//               В качестве примера рекомендуется указывать часто используемые термины прикладной конфигурации.
//       * ДругиеОтчеты - Структура - Настройки формы "Другие отчеты":
//           * ЗакрыватьПослеВыбора - Булево - Закрывать ли форму после выбора гиперссылки отчета.
//               - Истина - Значение по умолчанию. Закрывать "Другие отчеты" после выбора.
//               - Ложь   - Не закрывать.
//           * ПоказыватьФлажок - Булево - Показывать ли флажок ЗакрыватьПослеВыбора.
//               - Истина - Показывать флажок "Закрывать это окно после перехода к другому отчету".
//               - Ложь   - Значение по умолчанию. Не показывать флажок.
//
// Например:
//	Настройки.Поиск.ПодсказкаВвода = НСтр("ru = 'Например, себестоимость'");
//	Настройки.ДругиеОтчеты.ЗакрыватьПослеВыбора = Ложь;
//	Настройки.ДругиеОтчеты.ПоказыватьФлажок = Истина;
//
Процедура ОпределитьГлобальныеНастройки(Настройки) Экспорт
	
	Настройки.ВыводитьОписания = Ложь;
	
КонецПроцедуры

#КонецОбласти
