////////////////////////////////////////////////////////////////////////////////
// Подсистема "ОблачныйАрхив".
// ОбщийМодуль.ОблачныйАрхивПовтИсп.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область ФункциональныеОпции

// Функция возвращает результат - можно ли работать с облачным архивом.
// В отличие от ВозможнаРаботаСОблачнымАрхивом() проверяется наличие технической возможности
//  и результат выбора пользователя в форме настроек.
// Это результат функциональной опции "РазрешенаРаботаСОблачнымАрхивом",
//   И доступны нужные роли,
//   И это файловая база,
//   И конфигурация запущена в Windows,
//   И это не веб-клиент и не внешнее соединение.
// 
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Булево.
//
Функция РазрешенаРаботаСОблачнымАрхивом() Экспорт

	#Если Сервер ИЛИ ТонкийКлиент ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда

		// Сервер, ТонкийКлиент, ТолстыйКлиентОбычноеПриложение, ТолстыйКлиентУправляемоеПриложение.

		УстановитьПривилегированныйРежим(Истина);

		Результат = 
			ВозможнаРаботаСОблачнымАрхивом()
			И ПолучитьФункциональнуюОпцию("РазрешенаРаботаСОблачнымАрхивом");

	#Иначе

		// ВебКлиент, ВнешнееСоединение.

		Результат = Ложь;

	#КонецЕсли

	Возврат Результат;

КонецФункции

// Функция возвращает результат - можно ли работать с облачным архивом.
// В отличие от РазрешенаРаботаСОблачнымАрхивом() проверяется только наличие технической возможности работы с облачным архивом.
// Это результат, что
//   доступны нужные роли,
//   И это файловая база,
//   И конфигурация запущена в Windows,
//   И это не веб-клиент и не внешнее соединение.
// 
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Булево.
//
Функция ВозможнаРаботаСОблачнымАрхивом() Экспорт

	#Если Сервер ИЛИ ТонкийКлиент ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда

		// Сервер, ТонкийКлиент, ТолстыйКлиентОбычноеПриложение, ТолстыйКлиентУправляемоеПриложение.

		УстановитьПривилегированныйРежим(Истина); // Надо учесть, что привилегированный режим влияет на работу Пользователи.ЭтоПолноправныйПользователь.

		лкСистемнаяИнформация = Новый СистемнаяИнформация;

		Результат = 
			ОбщегоНазначения.ИнформационнаяБазаФайловая() // Не должна работать во фреше, только в файловой базе.
			И Пользователи.ЭтоПолноправныйПользователь(,,Ложь) // Привилегированный режим уже установлен, но его не надо учитывать.
			И (
				(лкСистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86)
				ИЛИ (лкСистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64));

	#Иначе

		// ВебКлиент, ВнешнееСоединение.

		Результат = Ложь;

	#КонецЕсли

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область ЛогИОтладка

// Функция возвращает значение, надо ли вести подробный журнал регистрации.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//   Булево - Истина, если надо вести подробный журнал регистрации, Ложь в противном случае.
//
Функция ВестиПодробныйЖурналРегистрации() Экспорт

	ТипСтруктура = Тип("Структура");
	ТипБулево    = Тип("Булево");

	ЖурналРегистрации_ПодробнаяЗапись = Истина;

	НастройкиЖурналаРегистрации = ОблачныйАрхив.ПолучитьНастройкиОблачногоАрхива(
		"НастройкиЖурналаРегистрации",
		"");

	Если ТипЗнч(НастройкиЖурналаРегистрации) = ТипСтруктура Тогда
		Если НастройкиЖурналаРегистрации.Свойство("ЖурналРегистрации_ПодробнаяЗапись") Тогда
			Если ТипЗнч(НастройкиЖурналаРегистрации.ЖурналРегистрации_ПодробнаяЗапись) = ТипБулево Тогда
				ЖурналРегистрации_ПодробнаяЗапись = НастройкиЖурналаРегистрации.ЖурналРегистрации_ПодробнаяЗапись;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат ЖурналРегистрации_ПодробнаяЗапись;

КонецФункции

#КонецОбласти

#КонецОбласти
