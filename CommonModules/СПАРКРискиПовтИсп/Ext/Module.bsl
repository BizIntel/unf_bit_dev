////////////////////////////////////////////////////////////////////////////////
// Подсистема "СПАРК".
// ОбщийМодуль.СПАРКРискиПовтИсп.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Определяет возможность использования сервиса в соответствии с текущим
// режимом работы и правами пользователя.
//
// Возвращаемое значение:
//	Булево:
//		Истина - использование разрешено, Ложь - в противном случае.
//
Функция ИспользованиеРазрешено(ДополнительныеПрава = Неопределено) Экспорт
	
	Результат = Пользователи.РолиДоступны("ЧтениеДанныхСПАРКРиски", , Ложь);
	Если Не Результат Или ДополнительныеПрава = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если СтрНайти(ДополнительныеПрава, "ПостановкаНаМониторинг;")
		И Не Пользователи.РолиДоступны("ПостановкаКонтрагентовНаМониторингСПАРКРиски", , Ложь) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрНайти(ДополнительныеПрава, "ЗапросСправки;")
		И Не Пользователи.РолиДоступны("ЗапросНовойСправкиСПАРКРиски", , Ложь) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает реквизит Название элемента справочника ТипыСобытийСПАРКРиски.
//
// Параметры:
//  ТипСобытия - СправочникСсылка.ТипыСобытийСПАРКРиски - событие, у которого надо получить название.
//
// Возвращаемое значение:
//   Строка - Название типа события.
//
Функция НазваниеТипаСобытия(ТипСобытия) Экспорт
	
	Если Не ЗначениеЗаполнено(ТипСобытия) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = "";
	ТипЗнчТипСобытия = ТипЗнч(ТипСобытия);
	
	Если ТипЗнчТипСобытия = Тип("СправочникСсылка.ТипыСобытийСПАРКРиски") Тогда
		ТекстЗапроса = "
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	Спр.Название КАК Название
			|ИЗ
			|	Справочник.ТипыСобытийСПАРКРиски КАК Спр
			|ГДЕ
			|	Спр.Ссылка = &ТипСобытия
			|";
	ИначеЕсли ТипЗнчТипСобытия = Тип("УникальныйИдентификатор") Тогда
		ТекстЗапроса = "
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	Спр.Название КАК Название
			|ИЗ
			|	Справочник.ТипыСобытийСПАРКРиски КАК Спр
			|ГДЕ
			|	Спр.Идентификатор = &ТипСобытия
			|";
	ИначеЕсли ТипЗнчТипСобытия = Тип("Строка") Тогда
		ТекстЗапроса = "
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	Спр.Название КАК Название
			|ИЗ
			|	Справочник.ТипыСобытийСПАРКРиски КАК Спр
			|ГДЕ
			|	Спр.Идентификатор = &ТипСобытия
			|";
		ТипСобытия = Новый УникальныйИдентификатор(ТипСобытия);
	Иначе
		Возврат "";
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТипСобытия", ТипСобытия);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Если Выборка.Следующий() Тогда
			Результат = Выборка.Название;
		КонецЕсли;
	Иначе
		// Если не удалось определить наименование типа события,
		// тогда не кэшировать его представление в виде пустой строки на время всего сеанса.
		ВызватьИсключение НСтр("ru = 'Неизвестный тип события.'");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
