////////////////////////////////////////////////////////////////////////////////
// ЭлектронноеВзаимодействиеСлужебныйПовтИсп: общий механизм обмена электронными документами.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Получает значение функциональной опции.
//
// Параметры:
//  НаименованиеФО - Строка - имя функциональной опции.
//
// Возвращаемое значение:
//  Булево - признак включенной ФО.
//
Функция ЗначениеФункциональнойОпции(НаименованиеФО) Экспорт
	
	Возврат ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции(НаименованиеФО);
	
КонецФункции

// Возвращает имя прикладного справочника по имени библиотечного справочника.
//
// Параметры:
//  ИмяСправочника - строка - название справочника из библиотеки.
//
// Возвращаемое значение:
//  ИмяПрикладногоСправочника - строковое имя прикладного справочника.
//
Функция ИмяПрикладногоСправочника(ИмяСправочника) Экспорт
	
	СоответствиеСправочников = Новый Соответствие;
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьСоответствиеСправочников(СоответствиеСправочников);
	
	ИмяПрикладногоСправочника = СоответствиеСправочников.Получить(ИмяСправочника);
	
	Возврат ИмяПрикладногоСправочника;
	
КонецФункции

// Получение имени объекта или реквизита в прикладном решении.
//
// Параметры:
//  ИмяПараметра - Строка - наименование в библиотеке электронных документов.
// 
// Возвращаемое значение:
//  Строка - наименование в прикладном решении.
//
Функция ИмяНаличиеОбъектаРеквизитаВПрикладномРешении(ИмяПараметра) Экспорт
	
	СоответствиеРеквизитовОбъекта = Новый Соответствие;
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьСоответствиеНаименованийОбъектовМДИРеквизитов(СоответствиеРеквизитовОбъекта);
	
	Возврат СоответствиеРеквизитовОбъекта.Получить(ИмяПараметра);
	
КонецФункции

// Возвращает текст сообщения пользователю по коду ошибки.
//
// Параметры:
//  КодОшибки - Строка - код ошибки;
//  СтороннееОписаниеОшибки - Строка - описание ошибки, переданное другой системой.
//
// Возвращаемое значение:
//  Строка - переопределенное описание ошибки.
//
Функция ПолучитьСообщениеОбОшибке(КодОшибки, СтороннееОписаниеОшибки = "") Экспорт
	
	Возврат ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ПолучитьСообщениеОбОшибке(КодОшибки, СтороннееОписаниеОшибки);
	
КонецФункции

// Прикладное представление реквизита по коду.
//
// Параметры:
//  Код - Строка - код реквизита.
// 
// Возвращаемое значение:
//  Строка - представления реквизита.
//
Функция ПрикладноеПредставлениеРеквизита(Код) Экспорт
	
	СоответствиеКодовРеквизитовИПредставлений = Новый Соответствие;
	
	Макет = ПолучитьОбщийМакет(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ПрикладноеПредставлениеРеквизитов_%1",
		ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
	ВысотаТаблицы = Макет.ВысотаТаблицы;
	Для НСтр = 1 По ВысотаТаблицы Цикл
		СоответствиеКодовРеквизитовИПредставлений.Вставить(СокрЛП(Макет.Область(НСтр, 1).Текст), СокрЛП(Макет.Область(НСтр,2).Текст));
	КонецЦикла;
	
	ЭлектронноеВзаимодействиеПереопределяемый.СоответствиеКодовРеквизитовИПредставлений(СоответствиеКодовРеквизитовИПредставлений);
	Возврат СоответствиеКодовРеквизитовИПредставлений.Получить(Код);
	
КонецФункции

// Возвращает массив актуальных видов электронных документов.
//
// Возвращаемое значение:
//  Массив - виды актуальных ЭД.
//     * ПеречислениеСсылка.ВидыЭД - виды актуальных ЭД обмена с контрагентами;
//     * ПеречислениеСсылка.ВидыЭДОбменСБанками - виды актуальных ЭД обмена с банками.
//
Функция АктуальныеВидыЭД() Экспорт
	
	МассивЭД = Новый Массив;
	
	ЕстьОбменСКонтрагентами = ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСКонтрагентами");
	ЕстьОбменСБанками = ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСБанками");

	Если ЕстьОбменСКонтрагентами Тогда
		МодульОбменСКонтрагентамиПовтИсп = ОбщегоНазначения.ОбщийМодуль("ОбменСКонтрагентамиПовтИсп");
		МассивЭДОбменСКонтрагентами = МодульОбменСКонтрагентамиПовтИсп.ПолучитьАктуальныеВидыЭД();
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивЭД, МассивЭДОбменСКонтрагентами);
	КонецЕсли;
	
	Если ЕстьОбменСБанками Тогда
		МодульОбменСБанкамиСлужебныйПовтИсп = ОбщегоНазначения.ОбщийМодуль("ОбменСБанкамиСлужебныйПовтИсп");
		МассивЭДОбменСБанками = МодульОбменСБанкамиСлужебныйПовтИсп.АктуальныеВидыЭД();
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивЭД, МассивЭДОбменСБанками);
	КонецЕсли;

	МассивВозврата = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивЭД);
	
	Возврат МассивВозврата;
	
КонецФункции

// Получает таблицу с ключевыми реквизитами объекта.
// 
// Параметры:
//  ИмяОбъекта - Строка - имя объекта конфигурации, ключевые реквизиты которого необходимо получить.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица ключевых реквизитов.
//
Функция КлючевыеРеквизитыОбъекта(ИмяОбъекта) Экспорт
	
	ТаблицаРеквизитов = ИнициализацияТаблицыРеквизитовОбъектов();
	
	Если ИмяОбъекта = "Документ.ПакетЭД" Тогда
		Возврат ТаблицаРеквизитов;
	КонецЕсли;
	
	СтруктураКлючевыхРеквизитов = Новый Структура;
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьСтруктуруКлючевыхРеквизитовОбъекта(ИмяОбъекта, СтруктураКлючевыхРеквизитов);

	Если НЕ ЗначениеЗаполнено(СтруктураКлючевыхРеквизитов) Тогда
		ШаблонСообщения = НСтр("ru = 'Не определена структура ключевых реквизитов для объекта %1.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ИмяОбъекта);
		ВызватьИсключение(ТекстСообщения);
	КонецЕсли;
	
	ТекПорядок = -50;
	Для Каждого ТекЭлемент Из СтруктураКлючевыхРеквизитов Цикл
		НовСтрока                            = ТаблицаРеквизитов.Добавить();
		НовСтрока.Порядок                    = ТекПорядок;
		НовСтрока.ИмяОбъекта                 = ИмяОбъекта;
		НовСтрока.ИмяТабличнойЧасти          = ?(ТекЭлемент.Ключ = "Шапка", "", ТекЭлемент.Ключ);
		НовСтрока.РеквизитыОбъекта           = ТекЭлемент.Значение;
		НовСтрока.СтруктураРеквизитовОбъекта = Новый Структура(ТекЭлемент.Значение);
		ТекПорядок = ТекПорядок + 100;
	КонецЦикла;
	
	ТаблицаРеквизитов.Сортировать("Порядок Возр");
	
	Возврат ТаблицаРеквизитов;
	
КонецФункции

// Возвращает список команд ЭДО для указанной формы.
//
// Параметры:
//  Форма - УправляемаяФорма, Строка - форма или полное имя формы, для которой необходимо получить список команд ЭДО;
//  МодульПодсистемы - Строка - модуль, в котором размещены обработчики команд;
//  НаправлениеЭД - ПеречислениеСсылка.НаправленияЭД - направление документа, для которого выполняется команда;
//  ТолькоВМенюЕще - Булево - если Истина, то команда будет размещена только в меню Еще.
//
// Возвращаемое значение:
//  ТаблицаЗначений - описание см. в СоздатьКоллекциюКомандЭДО().
//
Функция КомандыЭДОФормы(Форма, МодульПодсистемы, НаправлениеЭД, ТолькоВМенюЕще) Экспорт
	
	Возврат ЭлектронноеВзаимодействиеСлужебный.КомандыЭДОФормы(Форма, МодульПодсистемы, НаправлениеЭД, ТолькоВМенюЕще);
	
КонецФункции

// Проверяет наличие используемого регламентного задания "НаличиеНовыхЭД"
// Возвращаемое значение:
//  Булево - используется задание или нет.
//
Функция ЕстьПроверкаНовыхЭД() Экспорт
	
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		ЕстьПроверкаНовыхЭД = Ложь;
	Иначе
		УстановитьПривилегированныйРежим(Истина);
		ЗаданиеНаличиеНовыхЭД = Метаданные.РегламентныеЗадания.Найти("НаличиеНовыхЭД");
		ЕстьПроверкаНовыхЭД = РегламентныеЗаданияСервер.РегламентноеЗаданиеИспользуется(ЗаданиеНаличиеНовыхЭД);
	КонецЕсли;
	
	Возврат ЕстьПроверкаНовыхЭД;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИнициализацияТаблицыРеквизитовОбъектов()
	
	ТаблицаРеквизитов = Новый ТаблицаЗначений;
	
	Колонки = ТаблицаРеквизитов.Колонки;
	Колонки.Добавить("Порядок",                    Новый ОписаниеТипов("Число"));
	Колонки.Добавить("ИмяОбъекта",                 Новый ОписаниеТипов("Строка"));
	Колонки.Добавить("ИмяТабличнойЧасти",          Новый ОписаниеТипов("Строка"));
	Колонки.Добавить("РеквизитыОбъекта",           Новый ОписаниеТипов("Строка"));
	Колонки.Добавить("СтруктураРеквизитовОбъекта", Новый ОписаниеТипов("Структура"));
	
	ТаблицаРеквизитов.Индексы.Добавить("ИмяОбъекта");
	
	Возврат ТаблицаРеквизитов;
	
КонецФункции

#КонецОбласти