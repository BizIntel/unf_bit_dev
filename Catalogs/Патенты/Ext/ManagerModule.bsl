#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПараметрыФормыВыбораДляКода(НазваниеМакета, ТекущийПериод) Экспорт
	
	КодыЛьгот = Новый ТаблицаЗначений;
	
	КодыЛьгот.Колонки.Добавить("Код");
	КодыЛьгот.Колонки.Добавить("Наименование");
	КодыЛьгот.Колонки.Добавить("КодЕдиницыИзмерения");
	
	Макет	= ПолучитьМакет(НазваниеМакета);
	
	НазваниеОбласти = "";
	СписокОбластей = Новый СписокЗначений;
	ОпределитьПараметрыСпискаКодов(Макет, ТекущийПериод, НазваниеОбласти, СписокОбластей);
	
	ТекущаяОбласть = Макет.Области.Найти("Область" + НазваниеОбласти);
	
	Если НЕ (ТекущаяОбласть = Неопределено) Тогда	
		
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			// Перебираем строки макета.
			КодПоказателя       = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название            = СокрП(Макет.Область(НомерСтр, 2).Текст);
			КодЕдиницыИзмерения = СокрП(Макет.Область(НомерСтр, 3).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				НоваяСтрока = КодыЛьгот.Добавить();
				НоваяСтрока.Код                 = КодПоказателя;
				НоваяСтрока.Наименование        = Название;
				НоваяСтрока.КодЕдиницыИзмерения = КодЕдиницыИзмерения;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("СписокКодов"           , КодыЛьгот);
	Параметры.Вставить("СписокПериодовДействия", СписокОбластей);
	Параметры.Вставить("ТекущийПериод"         , НазваниеОбласти);
	
	Возврат Параметры;
	
КонецФункции

Процедура ОпределитьПараметрыСпискаКодов(Макет, ТекущийПериод, НазваниеОбласти, СписокОбластей)
	
	Области = Макет.Области;
	Если Области.Количество() = 0 Тогда
		НазваниеОбласти = "";
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекОбласть Из Области Цикл
		СписокОбластей.Добавить(Прав(ТекОбласть.Имя,4));
	КонецЦикла;
	
	ТекущаяОбласть = СписокОбластей[0].Значение;
	Для Каждого ТекОбласть Из СписокОбластей Цикл
		Если Год(ТекущийПериод) < Число(ТекОбласть.Значение) Тогда
			Прервать;
		КонецЕсли;
		
		ТекущаяОбласть = ТекОбласть.Значение;
	КонецЦикла;
	
	НазваниеОбласти = ТекущаяОбласть;
	
КонецПроцедуры

Функция НаправлениеПОКБК(КБК) Экспорт
	ТекстСоответствие = Новый Соответствие;
	ТекстСоответствие.Вставить("18210504010021000110", "городских округов");
	ТекстСоответствие.Вставить("18210504020021000110", "муниципальных районов");
	ТекстСоответствие.Вставить("18210504030021000110", "городов федерального значения");
	ТекстСоответствие.Вставить("18210504040021000110", "городских округов с внутригородским делением");
	ТекстСоответствие.Вставить("18210504050021000110", "внутригородских районов");
	
	Возврат ТекстСоответствие.Получить(КБК);
КонецФункции

Функция ПолучитьПатентыОрганизации(Организация, Дата = Неопределено) Экспорт
	
	МассивПатентов = Новый Массив;
	
	Запрос = Новый Запрос;
	
	Если Дата = Неопределено Тогда
		
		ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Патенты.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Патенты КАК Патенты
			|ГДЕ
			|	Патенты.Владелец = &Владелец
			|	И НЕ Патенты.ПометкаУдаления";
		
	Иначе
		
		ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Патенты.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Патенты КАК Патенты
			|ГДЕ
			|	Патенты.ДатаНачала <= &КонецДняДокумента
			|	И Патенты.ДатаОкончания >= &НачалоДняДокумента
			|	И Патенты.Владелец = &Владелец
			|	И НЕ Патенты.ПометкаУдаления";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Владелец", Организация);
	Если Дата <> Неопределено Тогда
		Запрос.УстановитьПараметр("НачалоДняДокумента", НачалоДня(Дата));
		Запрос.УстановитьПараметр("КонецДняДокумента", КонецДня(Дата));
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		МассивПатентов = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	
	Возврат МассивПатентов;
	
КонецФункции

#КонецОбласти

#КонецЕсли
