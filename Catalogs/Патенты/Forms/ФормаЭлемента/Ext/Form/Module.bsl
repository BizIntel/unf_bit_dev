#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() И Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		Объект.Владелец = Параметры.Организация;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		Объект.Владелец = РегламентированнаяОтчетностьУСН.ПолучитьТекущуюОрганизациюДляЦелейЗадачОтчетности();
	КонецЕсли;
	
	Если Параметры.ОшибкиЗаполнения Тогда
		ПроверкаДанныхКлиентСервер.ВывестиСообщенияОбОшибкахЗаполнения("Объект", Параметры.ПереченьОшибок);
	КонецЕсли;
	
	ОдинПлатеж = ОдинПлатеж(Объект.ДатаНачала, Объект.ДатаОкончания);
	СуммаНалога = Объект.СуммаПервогоПлатежа + Объект.СуммаВторогоПлатежа;
	УстановитьПредставлениеОплаты(ЭтотОбъект);
	НайтиЗадачиПоОплате();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.Наименование = НСтр("ru = 'Патент'") + ?(ПустаяСтрока(Объект.НомерПатента),""," №"+ Объект.НомерПатента)+
		 НСтр("ru = ', срок действия:'") + Формат(Объект.ДатаНачала,"ДЛФ=D") + " - " + Формат(Объект.ДатаОкончания,"ДЛФ=D");
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписьПатента",Новый Структура("Организация", Объект.Владелец));
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	СоздатьЗадачиПоОплате();
КонецПроцедуры



&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если НЕ ЗначениеЗаполнено(Объект.НомерПатента) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, , НСтр("ru = 'Номер патента'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.НомерПатента", , Отказ);
	КонецЕсли;
		
	Если СуммаНалога > 0  И НЕ ЗначениеЗаполнено(Объект.КБК) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, , НСтр("ru = 'КБК'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.КБК", , Отказ);
	КонецЕсли;
	
	Если Объект.СуммаВторогоПлатежа > 0 И Объект.СуммаПервогоПлатежа > 0
		И НЕ (Объект.ДатаНачала <= Объект.ДатаПервогоПлатежа И Объект.ДатаПервогоПлатежа <= Объект.ДатаОкончания) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, "КОРРЕКТНОСТЬ", НСтр("ru = 'Дата первого платежа'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.ДатаПервогоПлатежа", , Отказ);
	КонецЕсли;
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания)
		ИЛИ Объект.ДатаНачала > Объект.ДатаОкончания
		ИЛИ Год(Объект.ДатаОкончания) <> Год(Объект.ДатаНачала) Тогда
		
		Объект.ДатаОкончания = КонецГода(Объект.ДатаНачала);
		
	КонецЕсли;
	
	РассчитатьПлатеж();
	УстановитьПредставлениеОплаты(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала)
		ИЛИ Объект.ДатаНачала > Объект.ДатаОкончания
		ИЛИ Год(Объект.ДатаОкончания) <> Год(Объект.ДатаНачала) Тогда
		
		Объект.ДатаНачала = НачалоГода(Объект.ДатаОкончания);
		
	КонецЕсли;
	
	РассчитатьПлатеж();
	УстановитьПредставлениеОплаты(ЭтотОбъект);
	
КонецПроцедуры


&НаКлиенте
Процедура ПотенциальноВозможныйГодовойДоходПриИзменении(Элемент)
	
	РассчитатьПлатеж();
	УстановитьПредставлениеОплаты(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаНалогаПриИзменении(Элемент)
	
	РассчитатьПлатеж(Ложь);
	УстановитьПредставлениеОплаты(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КБКНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыборКода("КБК", "КБК");
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЗаполнитьПоОрганизацииНажатие(Элемент)
	ДекорацияЗаполнитьПоОрганизацииНажатиеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОплатитьПервыйПлатеж(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ Записать() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗадачаПоОплатеПервогоПлатежа) Тогда
		ДанныеЗадачи = ПолучитьДанныеЗадачи(ЗадачаПоОплатеПервогоПлатежа);
		Если Не ПустаяСтрока(ДанныеЗадачи.ИмяФормыЗадачи) Тогда
			ОткрытьФорму(ДанныеЗадачи.ИмяФормыЗадачи, ДанныеЗадачи.СтруктураСобытия);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатитьВторойПлатеж(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ Записать() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗадачаПоОплатеВторогоПлатежа) Тогда
		ДанныеЗадачи = ПолучитьДанныеЗадачи(ЗадачаПоОплатеВторогоПлатежа);
		Если Не ПустаяСтрока(ДанныеЗадачи.ИмяФормыЗадачи) Тогда
			ОткрытьФорму(ДанныеЗадачи.ИмяФормыЗадачи, ДанныеЗадачи.СтруктураСобытия);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПервогоПлатежаПриИзменении(Элемент)
	ПересчитатьСуммуНалога(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СуммаВторогоПлатежаПриИзменении(Элемент)
	ПересчитатьСуммуНалога(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КодНалоговогоОрганаПолучателяПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.КодНалоговогоОрганаПолучателя) Тогда
		ВыполнитьЗаполнениеСведенийОНалоговойИнспекции();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредставлениеОплаты(Форма);
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Форма.ОдинПлатеж Тогда
		Элементы.ГруппаВторойПлатеж.Видимость = Ложь;
		Элементы.СуммаПервогоПлатежа.ТолькоПросмотр = Истина;
		Элементы.ДатаПервогоПлатежа.ТолькоПросмотр  = Истина;
		Элементы.СуммаПервогоПлатежа.Заголовок  	= Нстр("ru = 'Сумма налога'");
	Иначе
		Элементы.СуммаПервогоПлатежа.ТолькоПросмотр = Ложь;
		Элементы.ДатаПервогоПлатежа.ТолькоПросмотр = Ложь;
		Элементы.ГруппаВторойПлатеж.Видимость = Истина;
		Элементы.СуммаПервогоПлатежа.Заголовок  	= Нстр("ru = '1/3 налога'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПлатеж(ПересчитатьСуммуНалога = Истина)
	
	Если ПересчитатьСуммуНалога Тогда
		НалоговаяБаза = ПотенциальноВозможныйДоход(
		Объект.ПотенциальноВозможныйГодовойДоход, Объект.ДатаНачала, Объект.ДатаОкончания);
	
		НалоговаяСтавка = РегламентированнаяОтчетностьУСНКлиентСервер.НалоговаяСтавкаПоПатентнойСистеме(Объект.ДатаНачала);
	
		СуммаНалога = Окр(НалоговаяБаза * НалоговаяСтавка, 0);
	
	КонецЕсли;

	Если СуммаНалога = 0 Тогда
		Объект.СуммаПервогоПлатежа = 0;
		Объект.ДатаПервогоПлатежа = '00010101';
		Объект.СуммаВторогоПлатежа = 0;
		Объект.ДатаВторогоПлатежа = '00010101';
	Иначе
		ОдинПлатеж = ОдинПлатеж(Объект.ДатаНачала, Объект.ДатаОкончания);
		
		Если ОдинПлатеж тогда
			Объект.СуммаПервогоПлатежа = СуммаНалога;
			Объект.ДатаПервогоПлатежа = Объект.ДатаОкончания;
			Объект.СуммаВторогоПлатежа = 0;
			Объект.ДатаВторогоПлатежа = '00010101';
		Иначе
			Объект.СуммаПервогоПлатежа = Окр(СуммаНалога/3);
			Объект.ДатаПервогоПлатежа = Объект.ДатаНачала+89*86400;
			Объект.СуммаВторогоПлатежа = СуммаНалога - Окр(СуммаНалога/3);
			Объект.ДатаВторогоПлатежа = Объект.ДатаОкончания;
		КонецЕсли;
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОдинПлатеж(ДатаНачала, ДатаОкончания)
	
	ПериодВторогоПлатежа = НачалоДня( ДобавитьМесяц(ДатаНачала, 5));
	
	Возврат ПериодВторогоПлатежа > НачалоДня(КонецГода(ДатаНачала))
			ИЛИ ПериодВторогоПлатежа > ДатаОкончания;
	
КонецФункции


&НаКлиентеНаСервереБезКонтекста
Функция ПотенциальноВозможныйДоход(ПотенциальноВозможныйГодовойДоход, ДатаНачала, ДатаОкончания)
	
	ПотенциальноВозможныйДоход = РегламентированнаяОтчетностьУСНКлиентСервер.РассчитатьПотенциальноВозможныйДоход(
		ПотенциальноВозможныйГодовойДоход, ДатаНачала, ДатаОкончания);
	
	Возврат ПотенциальноВозможныйДоход;
	
КонецФункции

&НаКлиенте
Процедура ВыборКода(ИмяКода, НазваниеМакета)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъекта",		"Справочник");
	ПараметрыФормы.Вставить("НазваниеОбъекта",	"Патенты");
	ПараметрыФормы.Вставить("НазваниеМакета",	НазваниеМакета);
	ПараметрыФормы.Вставить("ТекущийПериод",	Объект.ДатаНачала);
	ПараметрыФормы.Вставить("ТекущийКод",		Объект[ИмяКода]);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяКода", ИмяКода);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборКодаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораКода", ПараметрыФормы,,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКодаЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ИмяКода = ДополнительныеПараметры.ИмяКода;
	
	ВыбранныйКод = РезультатЗакрытия;
	
	Если ВыбранныйКод <> Неопределено Тогда
		
		Модифицированность = Истина;
		
		Объект[ИмяКода] = ВыбранныйКод;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДекорацияЗаполнитьПоОрганизацииНажатиеНаСервере()
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта( Объект.Владелец, "КодПоОКТМО, КодНалоговогоОрганаПолучателя");
	Объект.КодПоОКТМО = РеквизитыОрганизации.КодПоОКТМО;
	Объект.КодНалоговогоОрганаПолучателя = РеквизитыОрганизации.КодНалоговогоОрганаПолучателя;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПересчитатьСуммуНалога(Форма)
	
	Форма.СуммаНалога = Форма.Объект.СуммаПервогоПлатежа + Форма.Объект.СуммаВторогоПлатежа;
	
	УстановитьПредставлениеОплаты(Форма);
	
КонецФункции

&НаСервере
Процедура НайтиЗадачиПоОплате() Экспорт
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КалендарьПерсональныхЗадачОтчетности.Ссылка КАК Задача,
	|	КалендарьПерсональныхЗадачОтчетности.ДатаОкончанияСобытия
	|ИЗ
	|	Справочник.КалендарьПерсональныхЗадачОтчетности КАК КалендарьПерсональныхЗадачОтчетности
	|ГДЕ
	|	КалендарьПерсональныхЗадачОтчетности.Основание = &Патент";
	Запрос.УстановитьПараметр("Патент", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ДатаОкончанияСобытия = Объект.ДатаПервогоПлатежа Тогда
			ЗадачаПоОплатеПервогоПлатежа = Выборка.Задача;
		Иначе
			ЗадачаПоОплатеВторогоПлатежа = Выборка.Задача;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗадачиПоОплате() Экспорт
	
	Если ЗначениеЗаполнено(ЗадачаПоОплатеПервогоПлатежа) Тогда
		ОбъектПерваяЗадача = ЗадачаПоОплатеПервогоПлатежа.ПолучитьОбъект();
		Если ОбъектПерваяЗадача.ПометкаУдаления Тогда
			ОбъектПерваяЗадача.УстановитьПометкуУдаления(Ложь);
		КонецЕсли;
	Иначе
		ОбъектПерваяЗадача = Справочники.КалендарьПерсональныхЗадачОтчетности.СоздатьЭлемент();
	КонецЕсли;
	
	ОбъектПерваяЗадача.Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.НалогПатент;
	ОбъектПерваяЗадача.ДатаНачалаИнформирования 		= Объект.ДатаНачала;
	ОбъектПерваяЗадача.ДатаНачалаСобытия 				= Объект.ДатаНачала;
	ОбъектПерваяЗадача.ДатаОкончанияСобытия 			= Объект.ДатаПервогоПлатежа;
	ОбъектПерваяЗадача.ДатаДокументаОбработкиСобытия 	= Объект.ДатаПервогоПлатежа;
	ОбъектПерваяЗадача.ПредставлениеВКалендаре 			= ?(ОдинПлатеж, НСтр("ru = 'Уплатить налог с патента '"), НСтр("ru = 'Уплатить 1/3 налога с патента '")) + ?(ПустаяСтрока(Объект.НомерПатента),"","№"+ Объект.НомерПатента)+ " (" + Формат(Объект.ДатаНачала,"ДЛФ=D") + "-" + Формат(Объект.ДатаПервогоПлатежа,"ДЛФ=D")+ ")";
	ОбъектПерваяЗадача.ДатаНачалаДокументов 			= Объект.ДатаНачала;
	ОбъектПерваяЗадача.ДатаОкончанияДокументов 			= Объект.ДатаПервогоПлатежа;
	ОбъектПерваяЗадача.Основание 						= Объект.Ссылка;
	ОбъектПерваяЗадача.Записать();
	
	ЗадачаПоОплатеПервогоПлатежа = ОбъектПерваяЗадача.Ссылка;
	
	Если ОдинПлатеж Тогда
		Если ЗначениеЗаполнено(ЗадачаПоОплатеВторогоПлатежа) Тогда
			ОбъектВтораяЗадача = ЗадачаПоОплатеВторогоПлатежа.ПолучитьОбъект();
			ОбъектВтораяЗадача.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(ЗадачаПоОплатеВторогоПлатежа) Тогда
			ОбъектВтораяЗадача = ЗадачаПоОплатеВторогоПлатежа.ПолучитьОбъект();
			Если ОбъектВтораяЗадача.ПометкаУдаления Тогда
				ОбъектВтораяЗадача.УстановитьПометкуУдаления(Ложь);
			КонецЕсли;
		Иначе
			ОбъектВтораяЗадача = Справочники.КалендарьПерсональныхЗадачОтчетности.СоздатьЭлемент();
		КонецЕсли;
		
		ОбъектВтораяЗадача.Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.НалогПатент;
		ОбъектВтораяЗадача.ДатаНачалаИнформирования 		= Объект.ДатаНачала;
		ОбъектВтораяЗадача.ДатаНачалаСобытия 				= Объект.ДатаНачала;
		ОбъектВтораяЗадача.ДатаОкончанияСобытия 			= Объект.ДатаВторогоПлатежа;
		ОбъектВтораяЗадача.ДатаДокументаОбработкиСобытия 	= Объект.ДатаВторогоПлатежа;
		ОбъектВтораяЗадача.ПредставлениеВКалендаре 			= НСтр("ru = 'Уплатить 2/3 налога с патента '")+ ?(ПустаяСтрока(Объект.НомерПатента),"","№"+ Объект.НомерПатента)+ " (" + Формат(Объект.ДатаНачала,"ДЛФ=D") + "-" + Формат(Объект.ДатаВторогоПлатежа,"ДЛФ=D")+ ")";
		ОбъектВтораяЗадача.ДатаНачалаДокументов 			= Объект.ДатаНачала;
		ОбъектВтораяЗадача.ДатаОкончанияДокументов 			= Объект.ДатаВторогоПлатежа;
		ОбъектВтораяЗадача.Основание 						= Объект.Ссылка;
		ОбъектВтораяЗадача.Записать();
		
		ЗадачаПоОплатеВторогоПлатежа = ОбъектВтораяЗадача.Ссылка;
	КонецЕсли;
	
	
	// Создаем записи в календаре подготовки отчетности
	//
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиКалендаряПодготовкиОтчетности.Ссылка,
	|	ЗаписиКалендаряПодготовкиОтчетности.ПометкаУдаления,
	|	ЗаписиКалендаряПодготовкиОтчетности.СобытиеКалендаря
	|ИЗ
	|	Справочник.ЗаписиКалендаряПодготовкиОтчетности КАК ЗаписиКалендаряПодготовкиОтчетности
	|ГДЕ
	|	ЗаписиКалендаряПодготовкиОтчетности.СобытиеКалендаря В(&МассивЗадач)";
	
	МассивЗадач = Новый Массив;
	МассивЗадач.Добавить(ЗадачаПоОплатеПервогоПлатежа);
	МассивЗадач.Добавить(ЗадачаПоОплатеВторогоПлатежа);
	
	Запрос.УстановитьПараметр("МассивЗадач", МассивЗадач);
	ЗаписьПервойЗадачи = Неопределено;
	ЗаписьВторойЗадачи = Неопределено;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.СобытиеКалендаря = ЗадачаПоОплатеПервогоПлатежа Тогда
			ЗаписьПервойЗадачи = Выборка.Ссылка;
			Если Выборка.ПометкаУдаления Тогда
				ЗаписьОбъект = ЗаписьПервойЗадачи.ПолучитьОбъект();
				ЗаписьОбъект.УстановитьПометкуУдаления(Ложь);
			КонецЕсли;
		ИначеЕсли Выборка.СобытиеКалендаря = ЗадачаПоОплатеВторогоПлатежа Тогда
			ЗаписьВторойЗадачи = Выборка.Ссылка;
			Если Выборка.ПометкаУдаления Тогда
				ЗаписьОбъект = ЗаписьВторойЗадачи.ПолучитьОбъект();
				ЗаписьОбъект.УстановитьПометкуУдаления(Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗаписьПервойЗадачи = Неопределено Тогда
		// Создаем запись;
		ЗаписьКалендаряПодготовкиОтчетности = Справочники.ЗаписиКалендаряПодготовкиОтчетности.СоздатьЭлемент();
		ЗаписьКалендаряПодготовкиОтчетности.Организация = Объект.Владелец;
		ЗаписьКалендаряПодготовкиОтчетности.СобытиеКалендаря = ЗадачаПоОплатеПервогоПлатежа;
		ЗаписьКалендаряПодготовкиОтчетности.Состояние = Перечисления.СостоянияСобытийКалендаря.Заполнить;
		ЗаписьКалендаряПодготовкиОтчетности.Записать();
	КонецЕсли;
	
	Если НЕ ОдинПлатеж И ЗаписьВторойЗадачи = Неопределено Тогда
		// Создаем запись;
		ЗаписьКалендаряПодготовкиОтчетности = Справочники.ЗаписиКалендаряПодготовкиОтчетности.СоздатьЭлемент();
		ЗаписьКалендаряПодготовкиОтчетности.Организация = Объект.Владелец;
		ЗаписьКалендаряПодготовкиОтчетности.СобытиеКалендаря = ЗадачаПоОплатеВторогоПлатежа;
		ЗаписьКалендаряПодготовкиОтчетности.Состояние = Перечисления.СостоянияСобытийКалендаря.Заполнить;
		ЗаписьКалендаряПодготовкиОтчетности.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеЗадачи(Событие)
	
	Результат = Новый Структура("ИмяФормыЗадачи, СтруктураСобытия");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаписиКалендаряПодготовкиОтчетности.СобытиеКалендаря,
	|	ЗаписиКалендаряПодготовкиОтчетности.Организация,
	|	ЗаписиКалендаряПодготовкиОтчетности.Состояние КАК СостояниеСобытия
	|ИЗ
	|	Справочник.ЗаписиКалендаряПодготовкиОтчетности КАК ЗаписиКалендаряПодготовкиОтчетности
	|ГДЕ
	|	ЗаписиКалендаряПодготовкиОтчетности.СобытиеКалендаря = &СобытиеКалендаря";
	Запрос.УстановитьПараметр("СобытиеКалендаря", Событие);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат.СтруктураСобытия = Новый Структура("СобытиеКалендаря, СостояниеСобытия, Организация");
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат.СтруктураСобытия, Выборка);
	КонецЕсли;
	
	Результат.ИмяФормыЗадачи = Справочники.ЗаписиКалендаряПодготовкиОтчетности.ПолучитьИмяФормыПоЗадачеИСостоянию(Событие.Задача, Результат.СтруктураСобытия.СостояниеСобытия);
	
	Возврат Результат;
	
КонецФункции

#Область ЗаполнениеСведенийОНалоговойИнспекции

&НаКлиенте
Процедура ВыполнитьЗаполнениеСведенийОНалоговойИнспекции()
	
	ОписаниеОшибки = "";
	ЗаполнитьСведенияОНалоговойИнспекцииПоКоду(ОписаниеОшибки);
	
	// Обработка ошибок
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		Если ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
			
			ТекстВопроса = НСтр("ru='Для автоматического создания налогового органа
				|в справочнике «Контрагенты» необходимо подключиться к Интернет-поддержке
				|пользователей. Данные по налоговому органу пригодятся при уплате налогов.
				|Подключиться сейчас?'");
				
			ПараметрыВопроса = Новый Структура("ВызовПослеПодключения", "ЗаполнитьСведенияОНалоговойИнспекцииПоКоду");
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект, ПараметрыВопроса);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		Иначе
			ПоказатьПредупреждение(, ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОНалоговойИнспекцииПоКоду(ОписаниеОшибки = "")
	
	Если НЕ ЗначениеЗаполнено(Объект.КодНалоговогоОрганаПолучателя) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыНалоговогоОргана = ДанныеГосударственныхОрганов.РеквизитыНалоговогоОрганаПоКоду(Объект.КодНалоговогоОрганаПолучателя);
	
	Если ЗначениеЗаполнено(РеквизитыНалоговогоОргана.ОписаниеОшибки) Тогда
		ОписаниеОшибки = РеквизитыНалоговогоОргана.ОписаниеОшибки;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(РеквизитыНалоговогоОргана.Ссылка) Тогда
		ДанныеГосударственныхОрганов.ОбновитьДанныеГосударственногоОргана(РеквизитыНалоговогоОргана);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержку(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(Оповещение);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Если ДополнительныеПараметры.Свойство("ВызовПослеПодключения") Тогда
			
			Если ДополнительныеПараметры.ВызовПослеПодключения = "ЗаполнитьСведенияОНалоговойИнспекцииПоКоду" Тогда
				
				ЗаполнитьСведенияОНалоговойИнспекцииПоКоду();
				
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
