&НаСервере 
Перем СоответствиеТипаТранспортногоСообщенияКартинке;
&НаСервере 
Перем СоответствиеТипаТранспортногоСообщенияНадписи;
&НаСервере 
Перем СоответствиеТипаТранспортногоСообщенияТекстуНадписи;
&НаСервере 
Перем СоответствиеЭлементовУправленияТипуТранспортногоСообщения;
&НаСервере 
Перем СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений;
&НаСервере 
Перем СоответствиеТипаСообщенийТипамЦиклаОбмена;
&НаСервере 
Перем СоответствиеКартинкиЦветуНадписи;
&НаСервере 
Перем СоответствиеТипаСообщенияПорядку;
&НаСервере 
Перем КонтекстЭДОСервер;
&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		//Создается новый объект
		ТекстСообщения = НСтр("ru='Справочник не предназначен для ручного заполнения!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	
	Если Объект.Тип <> Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность
	И Объект.Тип <> Перечисления.ТипыЦикловОбмена.Заявление	
	И Объект.Тип <> Перечисления.ТипыЦикловОбмена.Форма2НДФЛ
	И Объект.Тип <> Перечисления.ТипыЦикловОбмена.ОтчетностьПФР
	И Объект.Тип <> Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС Тогда
		Элементы.КнопкаПоказатьДокументы.Видимость = Ложь;
	КонецЕсли;

	Если Объект.Тип <> Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность Тогда
		Элементы.КнопкаВыгрузитьПакет.Видимость = Ложь;
	КонецЕсли;
	
	ЗаполнитьДанными();
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.СкрытьЭлементыФормыПриИспользованииОднойОрганизации(ЭтаФорма, "НадписьОрганизация");

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если КонтекстЭДОКлиент = Неопределено Тогда 
		// инициализируем контекст ЭДО - модуль обработки
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	Иначе
		МассивПолученныхСообщений = Новый Массив;
		Оповестить("Заполнение списка полученных сообщений", МассивПолученныхСообщений);
		Если МассивПолученныхСообщений.Количество() > 0 Тогда 
			ПолученныеТранспортныеСообщения.ЗагрузитьЗначения(МассивПолученныхСообщений);
		КонецЕсли;
		
		ПрорисоватьСтатусыЧтенияСообщений();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Чтение сообщения" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		Если Параметр.Свойство("Сообщение") Тогда 
			ЭлементСписка = ПолученныеТранспортныеСообщения.НайтиПоЗначению(Параметр.Сообщение);
			Если ЭлементСписка <> Неопределено Тогда 
				ПолученныеТранспортныеСообщения.Удалить(ЭлементСписка);
				ПрорисоватьСтатусыЧтенияСообщений();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредметНажатие(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Предмет) Тогда
		Если Объект.Тип = ПредопределенноеЗначение("Перечисление.ТипыЦикловОбмена.Документ") И Объект.ДополнительныеПредметы.Количество() > 0 Тогда
			
			СписокПредметов = Новый СписокЗначений;
			СписокПредметов.ЗагрузитьЗначения(ПолучитьПредметыДокумента());
			ОписаниеОповещения = Новый ОписаниеОповещения("ПредметНажатиеЗавершение", ЭтотОбъект);
			СписокПредметов.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите предмет");
			
		Иначе
			ПоказатьЗначение(, Объект.Предмет);
		КонецЕсли;
	Иначе
		ПоказатьПредупреждение(, "Для текущего цикла обмена предмет отсутствует!");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СообщениеНажатие(Элемент)
	
	Результат = ПоказатьТранспортноеСообщение(Элемент.Имя);
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда 
		ПоказатьПредупреждение(, Результат);
	ИначеЕсли ТипЗнч(Результат) = Тип("ДокументСсылка.ТранспортноеСообщение") Тогда 
		ПоказатьЗначение(, Результат);
	ИначеЕсли ТипЗнч(Результат) = Тип("СписокЗначений") Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("СообщениеНажатиеЗавершение", ЭтотОбъект);
		Результат.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите сообщение", Результат.Получить(0));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьПротоколКвитанцияПФРНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПротоколПФР");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьПодтверждениеполученияНеформализованногоСообщенияПФРНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПисьмоВходящееПФР");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПодтверждениеНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатПриемаНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатОбработкиНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПодтверждениеНП2НДФЛНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатПриемаНП2НДФЛНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПодтверждениеНПОбращениеНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатПриемаНПОбращениеНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПисьмоНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПисьмоНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРассылкаНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РассылкаНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПодтверждениеНПЗапросНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатПриемаНПЗапросНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатОбработкиНПЗапросНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО");
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаЗакрытияНажатие(Элемент, СтандартнаяОбработка)
	
	НоваяДатаЗакрытия = ?(Объект.ДатаЗакрытия = КонтекстЭДОКлиент.ПолучитьПустуюДатуЗавершенияЦиклаОбменаКлиент(),
		'00010101000000',
		Объект.ДатаЗакрытия);
		
	СтандартнаяОбработка = Ложь;
	ДополнительныеПараметры = Новый Структура("НоваяДатаЗакрытия", НоваяДатаЗакрытия);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиДатуЗакрытияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВводДаты(ОписаниеОповещения, НоваяДатаЗакрытия, "Введите дату закрытия");

КонецПроцедуры

&НаКлиенте
Процедура НадписьОткрытьЦиклОбменаНажатие(Элемент)

	ТекстВопроса = "Пометить цикл обмена как незавершенный?";
	ОписаниеОповещения = Новый ОписаниеОповещения("НадписьОткрытьЦиклОбменаНажатиеЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура НадписьВниманиеОшибкиНажатие(Элемент)
	
	Результат = КонтекстЭДОКлиент.ПоказатьКритическиеОшибкиЦиклаОбмена(Объект.Ссылка);
	Если ТипЗнч(Результат) = Тип("ДокументСсылка.ТранспортноеСообщение") Тогда 
		ПоказатьЗначение(, Результат);
	ИначеЕсли ТипЗнч(Результат) = Тип("Структура") Тогда
		ПараметрыФормы = Новый Структура("Отбор", Результат);
		ОткрытьФорму("Документ.ТранспортноеСообщение.ФормаСписка", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьНажатие(Элемент)

	Отбор = Новый Структура("ЦиклОбмена", Объект.Ссылка);
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	ОткрытьФорму("Документ.ТранспортноеСообщение.ФормаСписка", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ДополнительныйПредметНажатие(Элемент)
	
	Если Объект.ДополнительныеПредметы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныйПредмет = Объект.ДополнительныеПредметы[0].Предмет;
	
	Если ЗначениеЗаполнено(ДополнительныйПредмет) Тогда
		ПоказатьЗначение(, ДополнительныйПредмет);
	Иначе
		ПоказатьПредупреждение(, "Для текущего цикла обмена дополнительный предмет отсутствует!");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеДокументНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ДокументНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПодтверждениеЗаявлениеНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатПриемаЗаявлениеНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО");

КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатОбработкиРФНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеОбОтзывеЗаявлениеРФНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатОбработкиТСНПНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьРезультатПриемаДокументНПНажатие(Элемент)
	
	СообщениеОснование = КонтекстЭДОКлиент.ПолучитьСообщениеЦиклаОбмена(Объект.Ссылка, ПредопределенноеЗначение("Перечисление.ТипыТранспортныхСообщений.ДокументНО"));
	
	СообщениеОснование = КонтекстЭДОКлиент.ПолучитьСообщениеЦиклаОбмена(Объект.Ссылка, ПредопределенноеЗначение("Перечисление.ТипыТранспортныхСообщений.ДокументНО"));
	
	ТекстВопроса = "Подтвердить прием документов налогового органа?" + Символы.ПС
		+ "При нажатии ""Да"" сформируется подтверждение об успешном приеме," + Символы.ПС
		+ "(после отправки подтверждения приема следует сформировать ответ, содержащий затребованные документы)" + Символы.ПС
		+ "при нажатии ""Нет"" сформируется отказ в приеме," + Символы.ПС
		+ "при нажатии ""Отмена"" формирование результата приема будет отменено.";
	
	ДополнительныеПараметры = Новый Структура("СообщениеОснование", СообщениеОснование);
	ОписаниеОповещения = Новый ОписаниеОповещения("НадписьСформироватьРезультатПриемаДокументНПНажатиеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПротоколФСГСНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГСНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПисьмоВходящееФСГСНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеПодтверждениеНППредставлениеНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатПриемаНППредставлениеНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьОтветНаЗапросКвитанцияПФРНажатие(Элемент)
	
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.ОтветНаЗапросПФР");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьИзвещениеРезультатОбработкиЗаявлениеНПНажатие(Элемент)
	НадписьНажатиеОбработатьНаКлиенте("Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО");
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВывестиВОкно(Команда)
	
	КонтекстЭДОКлиент.ПоказатьДокументыЦикловОбмена(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьОтчетОСостоянии(Команда)
	
	КонтекстЭДОКлиент.ПоказатьОтчетыОСостоянииЦикловОбмена(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыгрузить(Команда)
	
	ВыгрузитьЦиклыОбмена(Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыгрузитьКонтейнеры(Команда)
	
	ВыгрузитьЦиклыОбмена(Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыгрузитьСодержимое(Команда)
	
	ВыгрузитьЦиклыОбмена(Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьВСписке(Команда)
	ПараметрыФормы = Новый Структура("ТекущаяСтрока"  , Объект.Ссылка);
	ОткрытьФорму("Справочник.ЦиклыОбмена.Форма.ФормаСписка", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура КомандаПеречитать(Команда)
	
	ЗаполнитьДанными();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыгрузитьПакет(Команда)
	
	ТекстВопроса = "Выгрузить цикл обмена """ + КонтекстЭДОКлиент.ПредставлениеЦиклаОбмена(Объект.Ссылка) + """?";
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаВыгрузитьПакетЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьСоответствия()
	
	СоответствиеТипаТранспортногоСообщенияКартинке = Новый Соответствие;
	СоответствиеТипаТранспортногоСообщенияНадписи = Новый Соответствие;
	СоответствиеТипаТранспортногоСообщенияТекстуНадписи = Новый Соответствие;
	СоответствиеЭлементовУправленияТипуТранспортногоСообщения = Новый Соответствие;
	СоответствиеТипаСообщенийТипамЦиклаОбмена = Новый Соответствие;
	СоответствиеТипаСообщенияПорядку = Новый Соответствие;
	
	Если Объект.Тип = Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность Тогда
		
		Если Объект.ФорматДокументооборота = Перечисления.ФорматыДокументооборотаСФНС.Приказ534 Тогда
			
			//
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП, Элементы.КартинкаДекларацияНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО, Элементы.КартинкаПодтверждениеДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Элементы.КартинкаИзвещениеПодтверждениеНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО, Элементы.КартинкаИзвещениеДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО, Элементы.КартинкаРезультатПриемаДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Элементы.КартинкаИзвещениеРезультатПриемаНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО, Элементы.КартинкаРезультатОбработкиДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Элементы.КартинкаИзвещениеРезультатОбработкиНП);
			
			//
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП, Элементы.НадписьДекларацияНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО, Элементы.НадписьПодтверждениеДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Элементы.НадписьИзвещениеПодтверждениеНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО, Элементы.НадписьИзвещениеДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО, Элементы.НадписьРезультатПриемаДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Элементы.НадписьИзвещениеРезультатПриемаНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО, Элементы.НадписьРезультатОбработкиДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Элементы.НадписьИзвещениеРезультатОбработкиНП);
			
			//
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП,																		"Первичное сообщение, содержащее файл отчетности, отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО,															"Подтверждение даты отправки отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,															"Извещение о получении подтверждения даты отправки отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО,																"Извещение о получении отчета отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО,														"Результат приема отчета отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,															"Извещение о получении результата приема отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО,														"Результат обработки отчета отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП,														"Извещение о получении результата обработки отчета отсутсвует");
			
			//
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьДекларацияНП, Перечисления.ТипыТранспортныхСообщений.ДекларацияНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаДекларацияНП, Перечисления.ТипыТранспортныхСообщений.ДекларацияНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаДекларацияНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ДекларацияНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеДекларацияНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеДекларацияНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеДекларацияНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПодтверждениеНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеДекларацияНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеДекларацияНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеДекларацияНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатПриемаДекларацияНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаДекларацияНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаДекларацияНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатПриемаНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатОбработкиДекларацияНО, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатОбработкиДекларацияНО, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатОбработкиДекларацияНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатОбработкиНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатОбработкиНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатОбработкиНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
			
			//
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			
			//
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП, 1);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО, 2);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 3);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО, 4);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО, 5);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 6);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО, 7);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, 8);
			
		КонецЕсли;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.Заявление Тогда
			//
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП, 					Элементы.КартинкаЗаявлениеНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО, 		Элементы.КартинкаПодтверждениеЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 		Элементы.КартинкаИзвещениеПодтверждениеЗаявлениеНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО, 			Элементы.КартинкаИзвещениеЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО, 		Элементы.КартинкаРезультатПриемаЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 		Элементы.КартинкаИзвещениеРезультатПриемаЗаявлениеНП);
			
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО, 	Элементы.КартинкаРезультатОбработкиЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП,   Элементы.КартинкаИзвещениеРезультатОбработкиЗаявлениеНП);
			
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО, Элементы.КартинкаРезультатОбработкиЗаявлениеРФНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП, Элементы.КартинкаИзвещениеРезультатОбработкиРФНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО, 	Элементы.КартинкаСообщениеОбОтзывеЗаявлениеРФНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП, 	Элементы.КартинкаИзвещениеОбОтзывеЗаявлениеРФНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО, Элементы.КартинкаРезультатОбработкиЗаявлениеТСНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП, Элементы.КартинкаИзвещениеРезультатОбработкиТСНП);
			
			//
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП, 						Элементы.НадписьЗаявлениеНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО, 		Элементы.НадписьПодтверждениеЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 		Элементы.НадписьИзвещениеПодтверждениеЗаявлениеНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО, 			Элементы.НадписьИзвещениеЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО, 		Элементы.НадписьРезультатПриемаЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 		Элементы.НадписьИзвещениеРезультатПриемаЗаявлениеНП);
			
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО, 	Элементы.НадписьРезультатОбработкиЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, 	Элементы.НадписьИзвещениеРезультатОбработкиЗаявлениеНП);
			
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО, 	Элементы.НадписьРезультатОбработкиЗаявлениеРФНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП, 	Элементы.НадписьИзвещениеРезультатОбработкиРФНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО, 	Элементы.НадписьСообщениеОбОтзывеЗаявлениеРФНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП, 	Элементы.НадписьИзвещениеОбОтзывеЗаявлениеРФНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО, 	Элементы.НадписьРезультатОбработкиЗаявлениеТСНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП, 	Элементы.НадписьИзвещениеРезультатОбработкиТСНП);
			
			//
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП,						"Первичное сообщение, содержащее заявление, отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО,			"Подтверждение даты отправки отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,			"Извещение о получении подтверждения даты отправки отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО,				"Извещение о получении заявления отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО,			"Результат приема заявления отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,			"Извещение о получении результата приема отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО,	"Результат обработки заявления отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП,	"Извещение о получении результата обработки заявления отсутствует");
			
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО,		"Результат обработки заявления отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП,		"Извещение о получении результата обработки заявления отсутствует");
			
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО,		"Сообщение об отзыве заявления в РФ отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП,		"Извещение о получении сообщения об отзыве заявления в РФ отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО,	"Результат обработки заявления в ТС отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП,	"Извещение о получении результата обработки заявления в ТС отсутствует");
			
			//
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьЗаявлениеНП, 							Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаЗаявлениеНП, 							Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаЗаявлениеНПЭмблема, 					Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеЗаявлениеНО, 				Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеЗаявлениеНО, 				Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеЗаявлениеНОЭмблема, 		Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПодтверждениеЗаявлениеНП,		Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеЗаявлениеНП,		Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеЗаявлениеНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеЗаявлениеНО, 					Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеЗаявлениеНО, 					Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеЗаявлениеНОЭмблема, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатПриемаЗаявлениеНО, 			Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаЗаявлениеНО, 			Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаЗаявлениеНОЭмблема, 	Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатПриемаЗаявлениеНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаЗаявлениеНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаЗаявлениеНПЭмблема, 	Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатОбработкиЗаявлениеНО, 			Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатОбработкиЗаявлениеНО, 			Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатОбработкиЗаявлениеНОЭмблема, 	Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатОбработкиЗаявлениеНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатОбработкиЗаявлениеНП, 		Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатОбработкиЗаявлениеНПЭмблема, 	Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатОбработкиЗаявлениеРФНО, 		Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатОбработкиЗаявлениеРФНО, 		Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатОбработкиЗаявлениеРФНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатОбработкиРФНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатОбработкиРФНП, 		Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатОбработкиРФНПЭмблема, 	Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьСообщениеОбОтзывеЗаявлениеРФНО, 			Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаСообщениеОбОтзывеЗаявлениеРФНО, 			Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаСообщениеОбОтзывеЗаявлениеРФНОЭмблема, 	Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеОбОтзывеЗаявлениеРФНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеОбОтзывеЗаявлениеРФНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеОбОтзывеЗаявлениеРФНПЭмблема, 	Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатОбработкиЗаявлениеТСНО, 			Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатОбработкиЗаявлениеТСНО, 			Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатОбработкиЗаявлениеТСНОЭмблема, 	Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатОбработкиТСНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатОбработкиТСНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатОбработкиТСНПЭмблема, 	Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП);
			
			//
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП, 						Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО, 		Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 		Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО, 			Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО, 		Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 		Перечисления.ТипыЦикловОбмена.Заявление);
			
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО, 	Перечисления.ТипыЦикловОбмена.Заявление);
			
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО, 	Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП, 	Перечисления.ТипыЦикловОбмена.Заявление);
			
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО, 	Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП, 	Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО, 	Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП, 	Перечисления.ТипыЦикловОбмена.Заявление);
			
			//
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП, 						1);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО, 			2);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 			3);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО, 				4);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО, 		5);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 		6);
			
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО, 	7);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, 	8);
			
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО, 	7);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП, 	8);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО, 	9);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП, 	10);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО, 	11);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП, 	12);
			
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.Документ Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ДокументНО, Элементы.КартинкаДокументНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП, Элементы.КартинкаИзвещениеДокументНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП, Элементы.КартинкаРезультатПриемаДокументНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО, Элементы.КартинкаИзвещениеРезультатПриемаНО);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ДокументНО, Элементы.НадписьДокументНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП, Элементы.НадписьИзвещениеДокументНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП, Элементы.НадписьРезультатПриемаДокументНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО, Элементы.НадписьИзвещениеРезультатПриемаНО);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ДокументНО,					"Первичное сообщение, содержащее документ налогового органа, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП,		"Подтверждение о приеме документа налогового органа отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП,	"Результат приема документа отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО,	"Извещение о получении результата приема отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьДокументНО, 						Перечисления.ТипыТранспортныхСообщений.ДокументНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаДокументНО, 						Перечисления.ТипыТранспортныхСообщений.ДокументНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаДокументНОЭмблема, 				Перечисления.ТипыТранспортныхСообщений.ДокументНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеДокументНП, 				Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеДокументНП, 				Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеДокументНПЭмблема, 		Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатПриемаДокументНП, 			Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаДокументНП, 		Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаДокументНПЭмблема, 	Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатПриемаНО, 		Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНО, 		Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ДокументНО, 					Перечисления.ТипыЦикловОбмена.Документ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП, 			Перечисления.ТипыЦикловОбмена.Документ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП, 	Перечисления.ТипыЦикловОбмена.Документ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО, 	Перечисления.ТипыЦикловОбмена.Документ);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ДокументНО, 					1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП, 			2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП, 	3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО, 	4);

	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.Форма2НДФЛ Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП, Элементы.КартинкаФорма2НДФЛНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО, Элементы.КартинкаПодтверждениеФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Элементы.КартинкаИзвещениеПодтверждениеНП2НДФЛ);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО, Элементы.КартинкаИзвещениеФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО, Элементы.КартинкаРезультатПриемаФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Элементы.КартинкаИзвещениеРезультатПриемаНП2НДФЛ);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП, Элементы.НадписьФорма2НДФЛНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО, Элементы.НадписьПодтверждениеФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Элементы.НадписьИзвещениеПодтверждениеНП2НДФЛ);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО, Элементы.НадписьИзвещениеФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО, Элементы.НадписьРезультатПриемаФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Элементы.НадписьИзвещениеРезультатПриемаНП2НДФЛ);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП,																		"Первичное сообщение, содержащее данные формы 2-НДФЛ, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО,															"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,															"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО,																"Извещение о получении формы 2-НДФЛ отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО,														"Результат приема формы 2-НДФЛ отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,															"Извещение о получении результата приема отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьФорма2НДФЛНП, Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаФорма2НДФЛНП, Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаФорма2НДФЛНПЭмблема, Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеФорма2НДФЛНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПодтверждениеНП2НДФЛ, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеНП2НДФЛ, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеНП2НДФЛЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеФорма2НДФЛНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатПриемаФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаФорма2НДФЛНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатПриемаНП2НДФЛ, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНП2НДФЛ, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНП2НДФЛЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО, 4);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО, 5);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 6);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалоговогоОргана Тогда
		
		//
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалогоплательщика Тогда
		
		//
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание Тогда
		
		//
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ОтчетностьПФР Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР, Элементы.КартинкаПервичноеСообщениеПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР, Элементы.КартинкаПодтверждениеПолученияПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР, Элементы.КартинкаПротоколПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, Элементы.КартинкаПротоколКвитанцияПФР);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР, Элементы.НадписьПервичноеСообщениеПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР, Элементы.НадписьПодтверждениеПолученияПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР, Элементы.НадписьПротоколПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, Элементы.НадписьПротоколКвитанцияПФР);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР,											"Первичное сообщение, содержащее отчетность, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР,												"Квитанция о доставке отчетности отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР,																		"Протокол контроля отчетности отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР,																"Квитанция о доставке протокола контроля отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПервичноеСообщениеПФР, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПервичноеСообщениеПФР, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПервичноеСообщениеПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеПолученияПФР, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеПолученияПФР, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеПолученияПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПротоколПФР, Перечисления.ТипыТранспортныхСообщений.ПротоколПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПротоколПФР, Перечисления.ТипыТранспортныхСообщений.ПротоколПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПротоколПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПротоколПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПротоколКвитанцияПФР, Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПротоколКвитанцияПФР, Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПротоколКвитанцияПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР, Перечисления.ТипыЦикловОбмена.ОтчетностьПФР);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР, Перечисления.ТипыЦикловОбмена.ОтчетностьПФР);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР, Перечисления.ТипыЦикловОбмена.ОтчетностьПФР);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, Перечисления.ТипыЦикловОбмена.ОтчетностьПФР);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, 4);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР, Элементы.КартинкаНеформализованноеСообщениеПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, Элементы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФР);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР, Элементы.НадписьНеформализованноеСообщениеПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, Элементы.НадписьПодтверждениеПолученияНеформализованногоСообщенияПФР);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР,																	"Первичное сообщение, содержащее письмо от ПФР, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР,															"Квитанция о получении отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьНеформализованноеСообщениеПФР, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаНеформализованноеСообщениеПФР, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаНеформализованноеСообщениеПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеПолученияНеформализованногоСообщенияПФР, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФР, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР, Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, 2);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРИсходящие Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР, Элементы.КартинкаНеформализованноеСообщениеПФРИсходящее);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР, Элементы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФРИсходящее);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР, Элементы.НадписьНеформализованноеСообщениеПФРИсходящее);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР, Элементы.НадписьПодтверждениеПолученияНеформализованногоСообщенияПФРИсходящее);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР,																	"Первичное сообщение, содержащее письмо в ПФР, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР,														"Квитанция о получении отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьНеформализованноеСообщениеПФРИсходящее, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаНеформализованноеСообщениеПФРИсходящее, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаНеформализованноеСообщениеПФРИсходящееЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеПолученияНеформализованногоСообщенияПФРИсходящее, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФРИсходящее, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФРИсходящееЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР, Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРИсходящие);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР, Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРИсходящие);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР, 2);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ИОС Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееЗапросПФР, Элементы.КартинкаПервичноеСообщениеЗапросПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР, Элементы.КартинкаПодтверждениеПолученияЗапросПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросПФР, Элементы.КартинкаОтветНаЗапросПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР, Элементы.КартинкаОтветНаЗапросКвитанцияПФР);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееЗапросПФР, Элементы.НадписьПервичноеСообщениеЗапросПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР, Элементы.НадписьПодтверждениеПолученияЗапросПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросПФР, Элементы.НадписьОтветНаЗапросПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР, Элементы.НадписьОтветНаЗапросКвитанцияПФР);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееЗапросПФР,											"Первичное сообщение, содержащее запрос, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР,												"Квитанция о доставке запроса отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросПФР,																"Ответ на запрос отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР,														"Квитанция о доставке ответа на запрос отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПервичноеСообщениеЗапросПФР, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееЗапросПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПервичноеСообщениеЗапросПФР, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееЗапросПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПервичноеСообщениеЗапросПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееЗапросПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеПолученияЗапросПФР, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеПолученияЗапросПФР, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеПолученияЗапросПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьОтветНаЗапросПФР, Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаОтветНаЗапросПФР, Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаОтветНаЗапросПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьОтветНаЗапросКвитанцияПФР, Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаОтветНаЗапросКвитанцияПФР, Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаОтветНаЗапросКвитанцияПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееЗапросПФР, Перечисления.ТипыЦикловОбмена.ИОС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР, Перечисления.ТипыЦикловОбмена.ИОС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросПФР, Перечисления.ТипыЦикловОбмена.ИОС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР, Перечисления.ТипыЦикловОбмена.ИОС);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееЗапросПФР, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросПФР, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР, 4);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ОбращениеНП Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП, Элементы.КартинкаОбращениеНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО, Элементы.КартинкаПодтверждениеОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Элементы.КартинкаИзвещениеПодтверждениеНПОбращение);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО, Элементы.КартинкаИзвещениеОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО, Элементы.КартинкаРезультатПриемаОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Элементы.КартинкаИзвещениеРезультатПриемаНПОбращение);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП, Элементы.НадписьОбращениеНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО, Элементы.НадписьПодтверждениеОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Элементы.НадписьИзвещениеПодтверждениеНПОбращение);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО, Элементы.НадписьИзвещениеОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО, Элементы.НадписьРезультатПриемаОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Элементы.НадписьИзвещениеРезультатПриемаНПОбращение);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП,					"Обращение налогоплательщика отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО,		"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,		"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО,			"Извещение о получении обращения отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО,		"Результат приема обращения отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,		"Извещение о получении результата приема отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьОбращениеНП, Перечисления.ТипыТранспортныхСообщений.ОбращениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаОбращениеНП, Перечисления.ТипыТранспортныхСообщений.ОбращениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаОбращениеНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ОбращениеНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеОбращениеНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеОбращениеНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеОбращениеНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПодтверждениеНПОбращение, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеНПОбращение, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеНПОбращениеЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеОбращениеНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеОбращениеНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеОбращениеНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатПриемаОбращениеНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаОбращениеНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаОбращениеНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатПриемаНПОбращение, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНПОбращение, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНПОбращениеЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО, 4);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО, 5);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 6);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.Представление Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПредставлениеНП, Элементы.КартинкаПредставлениеНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО, Элементы.КартинкаПодтверждениеПредставлениеНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Элементы.КартинкаИзвещениеПодтверждениеНППредставление);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО, Элементы.КартинкаИзвещениеПредставлениеНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО, Элементы.КартинкаРезультатПриемаПредставлениеНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Элементы.КартинкаИзвещениеРезультатПриемаНППредставление);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПредставлениеНП, Элементы.НадписьПредставлениеНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО, Элементы.НадписьПодтверждениеПредставлениеНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Элементы.НадписьИзвещениеПодтверждениеНППредставление);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО, Элементы.НадписьИзвещениеПредставлениеНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО, Элементы.НадписьРезультатПриемаПредставлениеНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Элементы.НадписьИзвещениеРезультатПриемаНППредставление);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПредставлениеНП,				"Представление документов отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО,	"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,		"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО,		"Извещение о получении представленных документов");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО,	"Результат приема представленных документов");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,		"Извещение о получении результата приема отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПредставлениеНП, Перечисления.ТипыТранспортныхСообщений.ПредставлениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПредставлениеНП, Перечисления.ТипыТранспортныхСообщений.ПредставлениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПредставлениеНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ПредставлениеНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеПредставлениеНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеПредставлениеНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеПредставлениеНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПодтверждениеНППредставление, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеНППредставление, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеНППредставлениеЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПредставлениеНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПредставлениеНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПредставлениеНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатПриемаПредставлениеНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаПредставлениеНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаПредставлениеНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатПриемаНППредставление, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНППредставление, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНППредставлениеЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПредставлениеНП, Перечисления.ТипыЦикловОбмена.Представление);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО, Перечисления.ТипыЦикловОбмена.Представление);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Перечисления.ТипыЦикловОбмена.Представление);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО, Перечисления.ТипыЦикловОбмена.Представление);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО, Перечисления.ТипыЦикловОбмена.Представление);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Перечисления.ТипыЦикловОбмена.Представление);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПредставлениеНП, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО, 4);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО, 5);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 6);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ПисьмоНО Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО, Элементы.КартинкаПисьмоНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, Элементы.КартинкаИзвещениеПисьмоНП);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО, Элементы.НадписьПисьмоНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, Элементы.НадписьИзвещениеПисьмоНП);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО,			"Первичное сообщение, содержащее письмо налогового органа, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП,	"Подтверждение о приеме письма налогового органа отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПисьмоНО, Перечисления.ТипыТранспортныхСообщений.ПисьмоНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПисьмоНО, Перечисления.ТипыТранспортныхСообщений.ПисьмоНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПисьмоНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПисьмоНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПисьмоНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПисьмоНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО, Перечисления.ТипыЦикловОбмена.ПисьмоНО);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, Перечисления.ТипыЦикловОбмена.ПисьмоНО);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, 2);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.Рассылка Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, Элементы.КартинкаРассылка);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, Элементы.НадписьРассылка);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО,	"Первичное сообщение, содержащее рассылку от налогового органа, отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРассылка, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРассылка, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРассылкаЭмблема, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, Перечисления.ТипыЦикловОбмена.Рассылка);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, 1);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.РассылкаГрупповая Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, Элементы.КартинкаРассылкаГрупповая);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, Элементы.КартинкаИзвещениеРассылкаНП);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, Элементы.НадписьРассылкаГрупповая);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, Элементы.НадписьИзвещениеРассылкаНП);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО,				"Первичное сообщение, содержащее групповую рассылку от налогового органа, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП,	"Подтверждение о приеме групповой рассылки от налогового органа отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРассылкаГрупповая, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРассылкаГрупповая, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРассылкаГрупповаяЭмблема, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРассылкаНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРассылкаНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРассылкаНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, Перечисления.ТипыЦикловОбмена.РассылкаГрупповая);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, Перечисления.ТипыЦикловОбмена.РассылкаГрупповая);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, 2);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ИОН Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП, Элементы.КартинкаЗапросНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО, Элементы.КартинкаПодтверждениеЗапросНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Элементы.КартинкаИзвещениеПодтверждениеНПЗапрос);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО, Элементы.КартинкаИзвещениеЗапросНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО, Элементы.КартинкаРезультатПриемаЗапросНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Элементы.КартинкаИзвещениеРезультатПриемаНПЗапрос);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО, Элементы.КартинкаРезультатОбработкиЗапросНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Элементы.КартинкаИзвещениеРезультатОбработкиНПЗапрос);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП, Элементы.НадписьЗапросНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО, Элементы.НадписьПодтверждениеЗапросНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Элементы.НадписьИзвещениеПодтверждениеНПЗапрос);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО, Элементы.НадписьИзвещениеЗапросНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО, Элементы.НадписьРезультатПриемаЗапросНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Элементы.НадписьИзвещениеРезультатПриемаНПЗапрос);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО, Элементы.НадписьРезультатОбработкиЗапросНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Элементы.НадписьИзвещениеРезультатОбработкиНПЗапрос);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП,						"Первичное сообщение, содержащее запрос, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО,			"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,		"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО,				"Извещение о получении запроса отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО,		"Результат приема запроса отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,		"Извещение о получении результата приема отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО,		"Результат обработки запроса отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП,	"Извещение о получении результата обработки отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьЗапросНП, Перечисления.ТипыТранспортныхСообщений.ЗапросНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаЗапросНП, Перечисления.ТипыТранспортныхСообщений.ЗапросНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаЗапросНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ЗапросНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеЗапросНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеЗапросНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеЗапросНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПодтверждениеНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеНПЗапросЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеЗапросНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеЗапросНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеЗапросНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатПриемаЗапросНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаЗапросНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатПриемаЗапросНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатПриемаНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатПриемаНПЗапросЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРезультатОбработкиЗапросНО, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатОбработкиЗапросНО, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРезультатОбработкиЗапросНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеРезультатОбработкиНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатОбработкиНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеРезультатОбработкиНПЗапросЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Перечисления.ТипыЦикловОбмена.ИОН);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО, 4);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО, 5);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 6);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО, 7);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, 8);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС, Элементы.КартинкаПервичноеСообщениеФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, Элементы.КартинкаПодтверждениеДатыОтправкиФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, Элементы.КартинкаИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС, Элементы.КартинкаИзвещениеОтчетностьФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС, Элементы.КартинкаПротоколФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС, Элементы.КартинкаИзвещениеПротоколФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС, Элементы.НадписьПервичноеСообщениеФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, Элементы.НадписьПодтверждениеДатыОтправкиФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, Элементы.НадписьИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС, Элементы.НадписьИзвещениеОтчетностьФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС, Элементы.НадписьПротоколФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС, Элементы.НадписьИзвещениеПротоколФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС,											"Первичное сообщение, содержащее отчетность, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС,														"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС,												"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС,													"Извещение о получении отчетности отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС,												"Протокол входного контроля отчетности отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС,									"Извещение о получении протокола входного контроля отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПервичноеСообщениеФСГС, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПервичноеСообщениеФСГС, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПервичноеСообщениеФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеДатыОтправкиФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеДатыОтправкиФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеОтчетностьФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеОтчетностьФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеОтчетностьФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПротоколФСГС, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПротоколФСГС, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПротоколФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПротоколФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПротоколФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПротоколФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС, 4);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС, 5);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС, 6);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС, Элементы.КартинкаПисьмоИсходящееФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, Элементы.КартинкаПодтверждениеДатыОтправкиПисьмаФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, Элементы.КартинкаИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС, Элементы.КартинкаИзвещениеПисьмоИсходящееФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС, Элементы.НадписьПисьмоИсходящееФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, Элементы.НадписьПодтверждениеДатыОтправкиПисьмаФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, Элементы.НадписьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС, Элементы.НадписьИзвещениеПисьмоИсходящееФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС,											"Первичное сообщение, содержащее письменное обращение респондента, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС,									"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС,							"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС,									"Извещение о получении письма его получателем отсутствует");
		
		// 
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПисьмоИсходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПисьмоИсходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПисьмоИсходящееФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПодтверждениеДатыОтправкиПисьмаФСГС, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеДатыОтправкиПисьмаФСГС, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПодтверждениеДатыОтправкиПисьмаФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПодтверждениеДатыОтправкиПисьмаФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПисьмоИсходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПисьмоИсходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПисьмоИсходящееФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС, Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС, Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС, 4);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС, Элементы.КартинкаПисьмоВходящееФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС, Элементы.КартинкаИзвещениеПисьмоВходящееФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС, Элементы.НадписьПисьмоВходящееФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС, Элементы.НадписьИзвещениеПисьмоВходящееФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС,								"Первичное сообщение, содержащее письмо из Росстата, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС,					"Извещение о получении письма его получателем");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьПисьмоВходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПисьмоВходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаПисьмоВходящееФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьИзвещениеПисьмоВходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПисьмоВходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИзвещениеПисьмоВходящееФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС, Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС, Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС, 2);
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.РассылкаФСГС Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаФСГС, Элементы.КартинкаРассылкаФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаФСГС, Элементы.НадписьРассылкаФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаФСГС,								"Первичное сообщение, содержащее рассылку из Росстата, отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьРассылкаФСГС, Перечисления.ТипыТранспортныхСообщений.РассылкаФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРассылкаФСГС, Перечисления.ТипыТранспортныхСообщений.РассылкаФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаРассылкаФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.РассылкаФСГС);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаФСГС, Перечисления.ТипыЦикловОбмена.РассылкаФСГС);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаФСГС, 1);

	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП Тогда 
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьЗапросЕГР,Перечисления.ТипыТранспортныхСообщений.ЗапросНаВыпискуЕРГЮЛ_ЕГРИП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаИсходящийЗапросЕГР,Перечисления.ТипыТранспортныхСообщений.ЗапросНаВыпискуЕРГЮЛ_ЕГРИП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаЗапросЕГР,Перечисления.ТипыТранспортныхСообщений.ЗапросНаВыпискуЕРГЮЛ_ЕГРИП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.НадписьОтветНаЗапросЕГР,Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросаНаВыпискуЕРГЮЛ_ЕГРИП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаОтветНаЗапросЕГР,Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросаНаВыпискуЕРГЮЛ_ЕГРИП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(Элементы.КартинкаВходящийОтветНаЗапросЕГР,Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросаНаВыпискуЕРГЮЛ_ЕГРИП);
		
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНаВыпискуЕРГЮЛ_ЕГРИП,Элементы.КартинкаЗапросЕГР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросаНаВыпискуЕРГЮЛ_ЕГРИП,Элементы.КартинкаОтветНаЗапросЕГР);
		
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНаВыпискуЕРГЮЛ_ЕГРИП, Элементы.НадписьЗапросЕГР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросаНаВыпискуЕРГЮЛ_ЕГРИП, Элементы.НадписьОтветНаЗапросЕГР);
		
	КонецЕсли;

	ЗеленыйШар					= БиблиотекаКартинок.ЗеленыйШар;
	ЗеленыйШарНерасшифрованное 	= БиблиотекаКартинок.ЗеленыйШарСЗамком;
	СерыйШар					= БиблиотекаКартинок.СерыйШар;
	ЗолотойШар					= БиблиотекаКартинок.ЗолотойШар;
	ЗолотойШарЗашифрованное		= БиблиотекаКартинок.ЗолотойШарСЗамком;

	КрасныйЦвет = Новый Цвет(255, 0, 0);
	ЗеленыйЦвет = Новый Цвет(0, 128, 0);

	СоответствиеКартинкиЦветуНадписи = Новый Соответствие;
	
	СоответствиеКартинкиЦветуНадписи.Вставить(СерыйШар,						Новый Цвет(128, 128, 128));
	СоответствиеКартинкиЦветуНадписи.Вставить(ЗеленыйШар,					ЗеленыйЦвет);
	СоответствиеКартинкиЦветуНадписи.Вставить(ЗеленыйШарНерасшифрованное,	ЗеленыйЦвет);
	СоответствиеКартинкиЦветуНадписи.Вставить(ЗолотойШар,					Новый Цвет(254, 185, 26));
	
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений = Новый Соответствие;
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность, Элементы.СтраницаОтчетностьФНС534);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.Заявление, Элементы.СтраницаЗаявление);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.Документ, Элементы.СтраницаДокумент);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.Форма2НДФЛ, Элементы.СтраницаФорма2НДФЛ);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ОтчетностьПФР, Элементы.СтраницаОтчетностьПФР);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ИОС, Элементы.СтраницаЗапросыПФР);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие, Элементы.СтраницаНеформализованноеВходящиеПФР);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРИсходящие, Элементы.СтраницаНеформализованноеИсходящиеПФР);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ОбращениеНП, Элементы.ОбращениеНП);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.Представление, Элементы.Представление);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ПисьмоНО, Элементы.ПисьмоНО);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.Рассылка, Элементы.Рассылка);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.РассылкаГрупповая, Элементы.РассылкаГрупповая);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ИОН, Элементы.ИОН);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС, Элементы.СтраницаОтчетностьФСГС);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС, Элементы.СтраницаПисьменноеОбращениеВФСГС);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС, Элементы.СтраницаИндивидуальноеИнформированиеФСГС);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.РассылкаФСГС, Элементы.СтраницаРассылкаФСГС);
	СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП, Элементы.СтраницаЗапросНаВыпискуЕГР);
	
КонецПроцедуры

&НаСервере
Процедура ПрорисоватьСтатусыЧтенияСообщений()
	
	ИнициализироватьСоответствия();
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	                      |	ТранспортноеСообщение.Ссылка КАК Сообщение,
	                      |	ТранспортноеСообщение.Тип КАК Тип
	                      |ИЗ
	                      |	Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
	                      |ГДЕ
	                      |	ТранспортноеСообщение.Ссылка В(&Ссылка)
	                      |	И ТранспортноеСообщение.ЦиклОбмена = &ЦиклОбмена");
	Запрос.УстановитьПараметр("ЦиклОбмена", Объект.Ссылка);
	Запрос.УстановитьПараметр("Ссылка", ПолученныеТранспортныеСообщения);
	ТаблицаНепрочитанныхСообщений = Запрос.Выполнить().Выгрузить();
	
	// прорисываем надписи по основным этапам
	Для Каждого Эл Из СоответствиеТипаСообщенийТипамЦиклаОбмена Цикл
		Если Эл.Значение = Объект.Тип Тогда
			ТипСообщения = Эл.Ключ;
			Надпись = СоответствиеТипаТранспортногоСообщенияНадписи[ТипСообщения];
			Если Надпись <> Неопределено Тогда
				Надпись.Шрифт = Новый Шрифт(Надпись.Шрифт, , , (ТаблицаНепрочитанныхСообщений.Найти(ТипСообщения, "Тип") <> Неопределено));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// прорисовываем надпись с критической ошибкой
	Если ТаблицаНепрочитанныхСообщений.Найти(Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка, "Тип") <> Неопределено
	ИЛИ ТаблицаНепрочитанныхСообщений.Найти(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР, "Тип")  <> Неопределено
	ИЛИ ТаблицаНепрочитанныхСообщений.Найти(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС, "Тип")  <> Неопределено
	ИЛИ ТаблицаНепрочитанныхСообщений.Найти(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС, "Тип") <> Неопределено Тогда

		Элементы.НадписьВниманиеОшибки.Шрифт = Новый Шрифт(Элементы.НадписьВниманиеОшибки.Шрифт, , , Истина);
	Иначе
		Элементы.НадписьВниманиеОшибки.Шрифт = Новый Шрифт(Элементы.НадписьВниманиеОшибки.Шрифт, , , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПредметыДокумента()
	
 	ПредметыДокумента = Объект.Ссылка.ДополнительныеПредметы.ВыгрузитьКолонку("Предмет");
	ПредметыДокумента.Вставить(0, Объект.Предмет);
	Возврат ПредметыДокумента;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанными()
	
	Если КонтекстЭДОСервер = Неопределено Тогда 
		// инициализируем контекст ЭДО - модуль обработки
		ТекстСообщения = "";
		КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
		Если КонтекстЭДОСервер = Неопределено Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	ИнициализироватьСоответствия();
	
	ТекДата = ТекущаяДатаСеанса();
	
	Элементы.НадписьПомеченНаУдаление.Видимость = Объект.ПометкаУдаления;
	Если КонтекстЭДОСервер = Неопределено Тогда 
		Элементы.НадписьОткрытьЦиклОбмена.Видимость = Ложь;
	Иначе
		Элементы.НадписьОткрытьЦиклОбмена.Видимость = (Объект.ДатаЗакрытия <> КонтекстЭДОСервер.ПолучитьПустуюДатуЗавершенияЦиклаОбмена());
	КонецЕсли;
	
	// прорисовываем идентификатор
	Если ЗначениеЗаполнено(Объект.Идентификатор) Тогда
		Элементы.ИдентификаторОтсутствует.Видимость = Ложь;
		Элементы.Идентификатор.Видимость 			= Истина;
	Иначе
		Элементы.ИдентификаторОтсутствует.Видимость = Истина;
		Элементы.Идентификатор.Видимость 			= Ложь;
	КонецЕсли;
	
	// прорисовываем ЭУ второго субъекта переписки
	Если Объект.Вид = Перечисления.ВидыЦикловОбмена.ЦиклОбменаСПФР Тогда
		Элементы.ГруппаСтраницыВторойСубъектПереписки.ТекущаяСтраница = Элементы.СтраницаОрганПФР;
	ИначеЕсли Объект.Вид = Перечисления.ВидыЦикловОбмена.ЦиклОбменаСФСГС Тогда
		Элементы.ГруппаСтраницыВторойСубъектПереписки.ТекущаяСтраница = Элементы.СтраницаОрганФСГС;
	ИначеЕсли Объект.Вид = Перечисления.ВидыЦикловОбмена.ЦиклОбменаССОС Тогда
		Элементы.ГруппаСтраницыВторойСубъектПереписки.ТекущаяСтраница = Элементы.СтраницаСпецоператор;
	Иначе
		Элементы.ГруппаСтраницыВторойСубъектПереписки.ТекущаяСтраница = Элементы.СтраницаНалоговыйОрган;
	КонецЕсли;
	
	// прорисовываем секцию "Предмет"
	Если Объект.Тип = Перечисления.ТипыЦикловОбмена.Документ И ЗначениеЗаполнено(Объект.Предмет) Тогда
		Элементы.Предмет.Заголовок = ПредставлениеПредмета(ПолучитьПредметыДокумента());
		Элементы.ДополнительныйПредмет.Видимость = Ложь;
	Иначе
		
		Если ЗначениеЗаполнено(Объект.Предмет) Тогда
			Элементы.Предмет.Заголовок = ПредставлениеПредмета(Объект.Предмет);
		ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалоговогоОргана
		ИЛИ Объект.Тип = Перечисления.ТипыЦикловОбмена.ПисьмоНО
		ИЛИ Объект.Тип = Перечисления.ТипыЦикловОбмена.Документ
		ИЛИ Объект.Тип = Перечисления.ТипыЦикловОбмена.Рассылка
		ИЛИ Объект.Тип = Перечисления.ТипыЦикловОбмена.РассылкаГрупповая
		ИЛИ Объект.Тип = Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие Тогда
			Элементы.Предмет.Заголовок = "<Предмет будет создан в момент расшифровки первичного сообщения, содержащего документ налогового органа>";
		ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС Тогда
			Элементы.Предмет.Заголовок = "<Предмет будет создан в момент расшифровки первичного сообщения, содержащего документ из Росстата>";
		ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.РассылкаФСГС Тогда
			Элементы.Предмет.Заголовок = "<Предмет будет создан в момент расшифровки первичного сообщения, содержащего документ из Росстата>";
		Иначе
			Элементы.Предмет.Заголовок = "<Отсутствует>";
		КонецЕсли;
		
		// прорисовываем панель ДополнительныйПредмет
		Если Объект.ДополнительныеПредметы.Количество() = 0 Тогда
			Элементы.ДополнительныйПредмет.Видимость = Ложь;
		Иначе
			Элементы.ДополнительныйПредмет.Видимость = Истина;
			Элементы.ДополнительныйПредмет.Заголовок = ПредставлениеПредмета(Объект.ДополнительныеПредметы[0].Предмет);
		КонецЕсли;
	КонецЕсли;
	
	// активизируем соответствующую страницу панели сообщений
	Элементы.ГруппаСтраницыСообщения.ТекущаяСтраница = СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений[Объект.Тип];

	Для Каждого Стр Из СоответствиеТипаТранспортногоСообщенияТекстуНадписи Цикл
		Если СоответствиеТипаСообщенийТипамЦиклаОбмена[Стр.Ключ] = Объект.Тип Тогда
			СоответствиеТипаТранспортногоСообщенияНадписи[Стр.Ключ].Заголовок = Стр.Значение;
		КонецЕсли;
	КонецЦикла;
	
	// "сбрасываем" ЭУ по всем сообщениям
	Для Каждого КартинкаСтатуса Из СоответствиеТипаТранспортногоСообщенияКартинке Цикл
		КартинкаСтатуса.Значение.Картинка = СерыйШар;
		Надпись = СоответствиеТипаТранспортногоСообщенияНадписи[КартинкаСтатуса.Ключ];
		Надпись.ЦветТекста = СоответствиеКартинкиЦветуНадписи[СерыйШар];
		Надпись.Шрифт = Новый Шрифт;
	КонецЦикла;
	
	// прорисовывавем секцию "Активность"
	Если КонтекстЭДОСервер = Неопределено Тогда 
		ТекстДатаЗакрытия = "<нет данных>";
	Иначе
		ТекстДатаЗакрытия = ?(Объект.ДатаЗакрытия = КонтекстЭДОСервер.ПолучитьПустуюДатуЗавершенияЦиклаОбмена(), "<не завершен>", Объект.ДатаЗакрытия);
	КонецЕсли;
	
	Элементы.ДатаПоследнегоСообщения.Заголовок = ?(Объект.ДатаПоследнегоСообщения = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата")), "<не определено>", Объект.ДатаПоследнегоСообщения);
	
	Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Ложь;
	
	// выбираем информацию по сообщениям цикла обмена
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ТранспортныеСообщения.Тип КАК Тип,
	                      |	ТранспортныеСообщения.ДатаТранспорта,
	                      |	ТранспортныеСообщения.Статус КАК СтатусСообщения,
	                      |	ТранспортныеСообщения.ПометкаУдаления,
	                      |	ТранспортныеСообщения.ПротоколСОшибкой КАК ПротоколСОшибкой,
	                      |	ТранспортныеСообщения.Ссылка КАК Ссылка,
	                      |	НерасшифрованныеВложения.КоличествоСообщений КАК КоличествоНерасшифрованных,
	                      |	РасшифрованныеВложения.КоличествоСообщений КАК КоличествоРасшифрованных,
	                      |	ТранспортныеСообщения.Дата КАК Дата
	                      |ИЗ
	                      |	Документ.ТранспортноеСообщение КАК ТранспортныеСообщения
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |			ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортноеСообщение,
	                      |			КОЛИЧЕСТВО(ИСТИНА) КАК КоличествоСообщений
	                      |		ИЗ
	                      |			РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
	                      |		ГДЕ
	                      |			ТранспортныеКонтейнеры.ТранспортноеСообщение.ЦиклОбмена = &ЦиклОбмена
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК НерасшифрованныеВложения
	                      |		ПО ТранспортныеСообщения.Ссылка = НерасшифрованныеВложения.ТранспортноеСообщение
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |			СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщение,
	                      |			КОЛИЧЕСТВО(ИСТИНА) КАК КоличествоСообщений
	                      |		ИЗ
	                      |			РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
	                      |		ГДЕ
	                      |			СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.ЦиклОбмена В(&ЦиклОбмена)
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК РасшифрованныеВложения
	                      |		ПО ТранспортныеСообщения.Ссылка = РасшифрованныеВложения.ТранспортноеСообщение
	                      |ГДЕ
	                      |	ТранспортныеСообщения.ЦиклОбмена = &ЦиклОбмена
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ТранспортныеСообщения.ЦиклОбмена,
	                      |	Дата");
	Запрос.УстановитьПараметр("ЦиклОбмена", Объект.Ссылка);
	ТаблицаСообщений = Запрос.Выполнить().Выгрузить();
	ОтсортироватьТаблицуСообщенийПопорядкуТипов(ТаблицаСообщений, СоответствиеТипаСообщенияПорядку);
	
	Если Объект.Тип = Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность Тогда
		
		Если Объект.ФорматДокументооборота = Перечисления.ФорматыДокументооборотаСФНС.Приказ534 Тогда
			
			// сбрасываем видимость гиперссылок для создания подтверждений
			Элементы.НадписьСформироватьИзвещениеПодтверждениеНП.Видимость = Ложь;
			Элементы.НадписьСформироватьИзвещениеРезультатПриемаНП.Видимость = Ложь;
			Элементы.НадписьСформироватьИзвещениеРезультатОбработкиНП.Видимость = Ложь;
			
			// обход по сообщениям
			Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
				СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
				
				Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
				Если Картинка <> Неопределено Тогда
					
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
						
						// если сообщение отправлено или получено, то шарик - зеленый
						Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
							Картинка.Картинка = ЗеленыйШарНерасшифрованное;
						Иначе
							Картинка.Картинка = ЗеленыйШар;
						КонецЕсли;
						
						// цвет надписи сообщения устанавливаем соответствующим цвету шарика
						СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
						
					Иначе
						
						// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
						Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
						СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
						
					КонецЕсли;
					
					Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
						Элементы.НадписьСформироватьИзвещениеПодтверждениеНП.Видимость = Ложь;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
						Элементы.НадписьСформироватьИзвещениеРезультатПриемаНП.Видимость = Ложь;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП Тогда
						Элементы.НадписьСформироватьИзвещениеРезультатОбработкиНП.Видимость = Ложь;
						
					//
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Элементы.НадписьСформироватьИзвещениеПодтверждениеНП.Видимость = Истина;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Элементы.НадписьСформироватьИзвещениеРезультатПриемаНП.Видимость = Истина;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Элементы.НадписьСформироватьИзвещениеРезультатОбработкиНП.Видимость = Истина;
					КонецЕсли;
					
				КонецЕсли;
				
				// прорисовываем надпись, соответствующую сообщению
				НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
				Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
					Если КонтекстЭДОСервер = Неопределено Тогда 
						НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
						НадписьТекущегоТипаСообщения.Доступность = Ложь;
					Иначе
						НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
					КонецЕсли;
					НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
				КонецЕсли;
				
				// прорисовываем ЭУ протокола входного контроля
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО Тогда
					Если СтрСообщение.ПротоколСОшибкой Тогда
						Элементы.НадписьРезультатПриемаДекларацияНО.ЦветТекста = КрасныйЦвет;
						Элементы.КартинкаРезультатПриемаДекларацияНОКритическаяОшибка.Видимость = Истина;
						Элементы.ГруппаРезультатОбработки.Видимость = Ложь;
					Иначе
						Элементы.НадписьРезультатПриемаДекларацияНО.ЦветТекста = ЗеленыйЦвет;
						Элементы.КартинкаРезультатПриемаДекларацияНОКритическаяОшибка.Видимость = Ложь;
						Элементы.ГруппаРезультатОбработки.Видимость = Истина;
					КонецЕсли;
				КонецЕсли;
				
				// прорисовываем ЭУ результата обработки
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО Тогда
					Элементы.ГруппаРезультатОбработки.Видимость = Истина;
					Если СтрСообщение.ПротоколСОшибкой Тогда
						Элементы.НадписьРезультатОбработкиДекларацияНО.ЦветТекста = КрасныйЦвет;
						Элементы.КартинкаРезультатОбработкиДекларацияНОКритическаяОшибка.Видимость = Истина;
					Иначе
						Элементы.НадписьРезультатОбработкиДекларацияНО.ЦветТекста = ЗеленыйЦвет;
						Элементы.КартинкаРезультатОбработкиДекларацияНОКритическаяОшибка.Видимость = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				// регулируем видимость гиперссылки перехода к списку критичных ошибок
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
				ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
					Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
		// ФНС 141
		Иначе
			
			// сбрасвываем видимость гиперссылок для создания подтверждений
			Элементы.НадписьСформироватьПодтверждениеНаПодтверждениеОтправки.Видимость = Ложь;
			Элементы.НадписьСформироватьПодтверждениеНаПротоколПроверки.Видимость = Ложь;
			
			// обход по сообщениям
			Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
				СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
				
				Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
				Если Картинка <> Неопределено Тогда
					
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
						Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
							Картинка.Картинка = ЗеленыйШарНерасшифрованное;
						Иначе
							Картинка.Картинка = ЗеленыйШар;
						КонецЕсли;
						СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					Иначе
						Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
						СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					КонецЕсли;
					
				КонецЕсли;
				
				// прорисовываем надпись, соответствующую сообщению
				НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
				Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
					Если КонтекстЭДОСервер = Неопределено Тогда 
						НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
						НадписьТекущегоТипаСообщения.Доступность = Ложь;
					Иначе
						НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
					КонецЕсли;
					НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
				КонецЕсли;
				
				// регулируем видимость гиперссылки перехода к списку критичных ошибок
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
					Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.Заявление Тогда
		
		// сбрасываем видимость гиперссылок для создания подтверждений
		Элементы.НадписьСформироватьИзвещениеПодтверждениеЗаявлениеНП.Видимость = 		Ложь;
		Элементы.НадписьСформироватьИзвещениеРезультатПриемаЗаявлениеНП.Видимость = 	Ложь;
		Элементы.НадписьСформироватьИзвещениеРезультатОбработкиЗаявлениеНП.Видимость = 	Ложь;
		Элементы.НадписьСформироватьИзвещениеРезультатОбработкиРФНП.Видимость = 		Ложь;
		Элементы.НадписьСформироватьИзвещениеОбОтзывеЗаявлениеРФНП.Видимость = 			Ложь;
		Элементы.НадписьСформироватьИзвещениеРезультатОбработкиТСНП.Видимость = 		Ложь;
		
		//скрываем панели отзыва и несоответствий
		Элементы.ГруппаСообщениеОбОтзывеЗаявление.Видимость	= Ложь;
		Элементы.ГруппаСообщениеОНесоответствииЗаявление.Видимость	= Ложь;
				
		//скрываем панели результатов обработки старого формата
		ЦиклОбменаСтарогоФормата = Ложь;
				
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					// если сообщение отправлено или получено, то шарик - зеленый
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					// цвет надписи сообщения устанавливаем соответствующим цвету шарика
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеЗаявлениеНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатПриемаЗаявлениеНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатОбработкиРФНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП Тогда
					Элементы.НадписьСформироватьИзвещениеОбОтзывеЗаявлениеРФНП.Видимость = Ложь;
                ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатОбработкиТСНП.Видимость = Ложь;
					
					//
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеЗаявлениеНП.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатПриемаЗаявлениеНП.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатОбработкиРФНП.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатОбработкиЗаявлениеНП.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеОбОтзывеЗаявлениеРФНП.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатОбработкиТСНП.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьРезультатПриемаЗаявлениеНО.ЦветТекста = КрасныйЦвет;
					Элементы.ГруппаРезультатОбработкиЗаявление.Видимость = Ложь;
					Элементы.КартинкаРезультатПриемаЗаявлениеНОКритическаяОшибка.Видимость = Истина;
				Иначе
					Элементы.НадписьРезультатПриемаЗаявлениеНО.ЦветТекста = ЗеленыйЦвет;
					Элементы.ГруппаРезультатОбработкиЗаявление.Видимость	= Истина;
					Элементы.КартинкаРезультатПриемаЗаявлениеНОКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
			ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО Тогда
				
				ЦиклОбменаСтарогоФормата = Ложь;
				
				Элементы.ГруппаРезультатОбработкиЗаявление.Видимость = Истина;
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьРезультатОбработкиЗаявлениеНО.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаРезультатОбработкиЗаявлениеНОКритическаяОшибка.Видимость = Истина;
				Иначе
					Элементы.НадписьРезультатОбработкиЗаявлениеНО.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаРезультатОбработкиЗаявлениеНОКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
				
			ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО Тогда
				
				ЦиклОбменаСтарогоФормата = Истина;
				
				Элементы.ГруппаРезультатОбработкиЗаявление.Видимость = Истина;
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьРезультатОбработкиЗаявлениеРФНО.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаРезультатОбработкиЗаявлениеРФНОКритическаяОшибка.Видимость = Истина;
				Иначе
					Элементы.НадписьРезультатОбработкиЗаявлениеРФНО.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаРезультатОбработкиЗаявлениеРФНОКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
				
			ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО Тогда	
				Элементы.ГруппаСообщениеОбОтзывеЗаявление.Видимость = Истина;
				Элементы.НадписьСообщениеОбОтзывеЗаявлениеРФНО.ЦветТекста = КрасныйЦвет;
			ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО Тогда	
				Элементы.ГруппаСообщениеОНесоответствииЗаявление.Видимость = Истина;
				Элементы.НадписьРезультатОбработкиЗаявлениеТСНО.ЦветТекста = КрасныйЦвет;
			КонецЕсли;
			
			//устанвливаем видимость строк панели результатов обработки 
			Элементы.ГруппаРезультатОбработкиЗаявлениеРФНО.Видимость		= ЦиклОбменаСтарогоФормата;
			Элементы.ГруппаИзвещениеРезультатОбработкиРФНП.Видимость		= ЦиклОбменаСтарогоФормата;
			Элементы.ГруппаРезультатОбработкиЗаявлениеНО.Видимость			= НЕ ЦиклОбменаСтарогоФормата;
			Элементы.ГруппаИзвещениеРезультатОбработкиЗаявлениеНП.Видимость	= НЕ ЦиклОбменаСтарогоФормата;

			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
				ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.Документ Тогда
		
		Элементы.НадписьСформироватьИзвещениеДокументНП.Видимость = Ложь;
		Элементы.НадписьСформироватьРезультатПриемаДокументНП.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП Тогда
					Элементы.НадписьСформироватьИзвещениеДокументНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП Тогда
					Элементы.НадписьСформироватьРезультатПриемаДокументНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ДокументНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеДокументНП.Видимость = Истина;
					Элементы.НадписьСформироватьРезультатПриемаДокументНП.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП И СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьРезультатПриемаДокументНП.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаРезультатПриемаДокументНПКритическаяОшибка.Видимость = Истина;
				Иначе
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное Тогда
						Элементы.НадписьРезультатПриемаДокументНП.ЦветТекста = ЗеленыйЦвет;
					КонецЕсли;
					Элементы.КартинкаРезультатПриемаДокументНПКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.Форма2НДФЛ Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		Элементы.НадписьСформироватьИзвещениеПодтверждениеНП2НДФЛ.Видимость = Ложь;
		Элементы.НадписьСформироватьИзвещениеРезультатПриемаНП2НДФЛ.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					// если сообщение отправлено или получено, то шарик - зеленый
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					// цвет надписи сообщения устанавливаем соответствующим цвету шарика
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеНП2НДФЛ.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатПриемаНП2НДФЛ.Видимость = Ложь;
					
				//
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеНП2НДФЛ.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатПриемаНП2НДФЛ.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьРезультатПриемаФорма2НДФЛНО.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаРезультатПриемаФорма2НДФЛНОКритическаяОшибка.Видимость = Истина;
				Иначе
					Элементы.НадписьРезультатПриемаФорма2НДФЛНО.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаРезультатПриемаФорма2НДФЛНОКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалоговогоОргана Тогда
		
		Элементы.НадписьСформироватьПодтверждениеНаНеформализованныйДокумент.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
			КонецЕсли;
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалогоплательщика Тогда
		
		Элементы.НадписьСформироватьПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
			КонецЕсли;
			
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание Тогда
	
		// сбрасвываем видимость гиперссылок для создания подтверждений
		Элементы.НадписьСформироватьПодтверждениеНаПодтверждениеОтправкиЗапроса.Видимость = Ложь;
		Элементы.НадписьСформироватьПодтверждениеНаПротоколПроверкиЗапроса.Видимость = Ложь;
		Элементы.НадписьСформироватьПодтверждениеНаОтветНаЗапрос.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ОтчетностьПФР Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		Элементы.НадписьСформироватьПротоколКвитанцияПФР.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР Тогда
					Элементы.НадписьСформироватьПротоколКвитанцияПФР.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколПФР И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьПротоколКвитанцияПФР.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем ЭУ подтверждения получения
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьПодтверждениеПолученияПФР.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаПодтверждениеПолученияПФРКритическаяОшибка.Видимость = Истина;
					Элементы.ГруппаПротоколПФР.Видимость = Ложь;
					Элементы.ГруппаПротоколКвитанцияПФР.Видимость = Ложь;
				Иначе
					Элементы.НадписьПодтверждениеПолученияПФР.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаПодтверждениеПолученияПФРКритическаяОшибка.Видимость = Ложь;
					Элементы.ГруппаПротоколПФР.Видимость = Истина;
					Элементы.ГруппаПротоколКвитанцияПФР.Видимость = Истина;					
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколПФР Тогда
				Элементы.ГруппаПротоколПФР.Видимость = Истина;
				Элементы.ГруппаПротоколКвитанцияПФР.Видимость = Истина;					
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьПротоколПФР.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаПротоколПФРКритическаяОшибка.Видимость = Истина;
				Иначе
					Элементы.НадписьПротоколПФР.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаПротоколПФРКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие Тогда
		
		// делаем невидимой надпись-гиперссылку формирования подтверждения
		Элементы.НадписьСформироватьПодтверждениеполученияНеформализованногоСообщенияПФР.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			// получаем картинку, соответствующую типу сообщения
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				// прорисовываем картинку-шарик
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				
				// регулируем видимость надписи-гиперссылки формирования подтверждения
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР Тогда
					Элементы.НадписьСформироватьПодтверждениеполученияНеформализованногоСообщенияПФР.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьПодтверждениеполученияНеформализованногоСообщенияПФР.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись-гиперссылку, соответствующую текущему типу сообщения
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРИсходящие Тогда
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			// получаем картинку, соответствующую типу сообщения
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				// прорисовываем картинку-шарик
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись-гиперссылку, соответствующую текущему типу сообщения
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ИОС Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		Элементы.НадписьСформироватьОтветНаЗапросКвитанцияПФР.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР Тогда
					Элементы.НадписьСформироватьОтветНаЗапросКвитанцияПФР.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросПФР И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьОтветНаЗапросКвитанцияПФР.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем ЭУ подтверждения получения
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьПодтверждениеПолученияЗапросПФР.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаПодтверждениеПолученияЗапросаПФРКритическаяОшибка.Видимость = Истина;
					Элементы.ГруппаОтветНаЗапросПФР.Видимость = Ложь;
					Элементы.ГруппаОтветНаЗапросКвитанцияПФР.Видимость = Ложь;
				Иначе
					Элементы.НадписьПодтверждениеПолученияЗапросПФР.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаПодтверждениеПолученияЗапросаПФРКритическаяОшибка.Видимость = Ложь;
					Элементы.ГруппаОтветНаЗапросПФР.Видимость = Истина;
					Элементы.ГруппаОтветНаЗапросКвитанцияПФР.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем ЭУ ответа на запрос
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросПФР Тогда
				
				Элементы.ГруппаОтветНаЗапросПФР.Видимость = Истина;
				Элементы.ГруппаОтветНаЗапросКвитанцияПФР.Видимость = Истина;
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьОтветНаЗапросПФР.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаОтветНаЗапросПФРКритическаяОшибка.Видимость = Истина;
				Иначе
					Элементы.НадписьОтветНаЗапросПФР.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаОтветНаЗапросПФРКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ОбращениеНП Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		Элементы.НадписьСформироватьИзвещениеПодтверждениеНПОбращение.Видимость = Ложь;
		Элементы.НадписьСформироватьИзвещениеРезультатПриемаНПОбращение.Видимость = Ложь;
		
		Элементы.ГруппаИзвещениеРезультатПриемаНПОбращение.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					// если сообщение отправлено или получено, то шарик - зеленый
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					// цвет надписи сообщения устанавливаем соответствующим цвету шарика
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеНПОбращение.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатПриемаНПОбращение.Видимость = Ложь;
					
				//
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеНПОбращение.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатПриемаНПОбращение.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьРезультатПриемаОбращениеНО.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаРезультатПриемаОбращениеНОКритическаяОшибка.Видимость = Истина;
				Иначе
					Элементы.НадписьРезультатПриемаОбращениеНО.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаРезультатПриемаОбращениеНОКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
				Элементы.ГруппаИзвещениеРезультатПриемаНПОбращение.Видимость = Истина;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.Представление Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		Элементы.НадписьСформироватьИзвещениеПодтверждениеНППредставление.Видимость = Ложь;
		Элементы.НадписьСформироватьИзвещениеРезультатПриемаНППредставление.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					// если сообщение отправлено или получено, то шарик - зеленый
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					// цвет надписи сообщения устанавливаем соответствующим цвету шарика
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеНППредставление.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатПриемаНППредставление.Видимость = Ложь;
					
				//
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеНППредставление.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатПриемаНППредставление.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьРезультатПриемаПредставлениеНО.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаРезультатПриемаПредставлениеНОКритическаяОшибка.Видимость = Истина;
				Иначе
					Элементы.НадписьРезультатПриемаПредставлениеНО.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаРезультатПриемаПредставлениеНОКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;

	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ПисьмоНО Тогда
		
		Элементы.НадписьСформироватьИзвещениеПисьмоНП.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП Тогда
					Элементы.НадписьСформироватьИзвещениеПисьмоНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеПисьмоНП.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.Рассылка Тогда
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
			КонецЕсли;
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.РассылкаГрупповая Тогда
		
		Элементы.НадписьСформироватьИзвещениеРассылкаНП.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП Тогда
					Элементы.НадписьСформироватьИзвещениеРассылкаНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РассылкаНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеРассылкаНП.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ИОН Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		Элементы.НадписьСформироватьИзвещениеПодтверждениеНПЗапрос.Видимость = Ложь;
		Элементы.НадписьСформироватьИзвещениеРезультатПриемаНПЗапрос.Видимость = Ложь;
		Элементы.НадписьСформироватьИзвещениеРезультатОбработкиНПЗапрос.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					// если сообщение отправлено или получено, то шарик - зеленый
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					// цвет надписи сообщения устанавливаем соответствующим цвету шарика
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеНПЗапрос.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатПриемаНПЗапрос.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатОбработкиНПЗапрос.Видимость = Ложь;
					
				//
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеНПЗапрос.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатПриемаНПЗапрос.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеРезультатОбработкиНПЗапрос.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьРезультатПриемаЗапросНО.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаРезультатПриемаЗапросНОКритическаяОшибка.Видимость = Истина;
					Элементы.ГруппаРезультатОбработкиЗапрос.Видимость = Ложь;
				Иначе
					Элементы.НадписьРезультатПриемаЗапросНО.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаРезультатПриемаЗапросНОКритическаяОшибка.Видимость = Ложь;
					Элементы.ГруппаРезультатОбработкиЗапрос.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем ЭУ результата обработки
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО Тогда
				Элементы.ГруппаРезультатОбработкиЗапрос.Видимость = Истина;
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьРезультатОбработкиЗапросНО.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаРезультатОбработкиЗапросНОКритическаяОшибка.Видимость = Истина;
				Иначе
					Элементы.НадписьРезультатОбработкиЗапросНО.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаРезультатОбработкиЗапросНОКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		Элементы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиФСГС.Видимость = Ложь;
		Элементы.НадписьСформироватьИзвещениеПротоколФСГС.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиФСГС.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС Тогда
					Элементы.НадписьСформироватьИзвещениеПротоколФСГС.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиФСГС.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеПротоколФСГС.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем ЭУ подтверждения получения
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьИзвещениеОтчетностьФСГС.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаИзвещениеОтчетностьФСГСКритическаяОшибка.Видимость = Истина;
					Элементы.ГруппаПротоколФСГС.Видимость = Ложь;
					Элементы.ГруппаИзвещениеПротоколФСГС.Видимость = Ложь;
				Иначе
					Элементы.НадписьИзвещениеОтчетностьФСГС.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаИзвещениеОтчетностьФСГСКритическаяОшибка.Видимость = Ложь;
					Элементы.ГруппаПротоколФСГС.Видимость = Истина;
					Элементы.ГруппаИзвещениеПротоколФСГС.Видимость = Истина;					
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС Тогда
				Элементы.ГруппаПротоколФСГС.Видимость = Истина;
				Элементы.ГруппаИзвещениеПротоколФСГС.Видимость = Истина;
				Если СтрСообщение.ПротоколСОшибкой Тогда
					Элементы.НадписьПротоколФСГС.ЦветТекста = КрасныйЦвет;
					Элементы.КартинкаПротоколФСГСКритическаяОшибка.Видимость = Истина;
				Иначе
					Элементы.НадписьПротоколФСГС.ЦветТекста = ЗеленыйЦвет;
					Элементы.КартинкаПротоколФСГСКритическаяОшибка.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС Тогда
		
		Элементы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				// прорисовываем картинку-шарик
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
				
			// прорисовываем надпись-гиперссылку, соответствующую текущему типу сообщения
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.РассылкаФСГС Тогда
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				// прорисовываем картинку-шарик
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
			КонецЕсли;
			
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС Тогда
		
		// делаем невидимой надпись-гиперссылку формирования подтверждения
		Элементы.НадписьСформироватьИзвещениеПисьмоВходящееФСГС.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			// получаем картинку, соответствующую типу сообщения
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				// прорисовываем картинку-шарик
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				
				// регулируем видимость надписи-гиперссылки формирования подтверждения
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС Тогда
					Элементы.НадписьСформироватьИзвещениеПисьмоВходящееФСГС.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					Элементы.НадписьСформироватьИзвещениеПисьмоВходящееФСГС.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись-гиперссылку, соответствующую текущему типу сообщения
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				Если КонтекстЭДОСервер = Неопределено Тогда 
					НадписьТекущегоТипаСообщения.Заголовок = "<не удалось получить расширенную информацию о состоянии>";
					НадписьТекущегоТипаСообщения.Доступность = Ложь;
				Иначе
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				КонецЕсли;
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				Элементы.ГруппаВниманиеОшибкиЦО.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Тип = Перечисления.ТипыЦикловОбмена.ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП Тогда
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			// получаем картинку, соответствующую типу сообщения
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			
			Если Картинка <> Неопределено Тогда
				
				// прорисовываем картинку-шарик
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Картинка.Картинка = ЗеленыйШар;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[Картинка.Картинка];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем надпись-гиперссылку, соответствующую текущему типу сообщения
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДОСервер.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПрорисоватьСтатусыЧтенияСообщений();

КонецПроцедуры

&НаКлиенте
Процедура ОтключитьДоступностьЭУ()
	
	Элементы.НадписьОткрытьЦиклОбмена.Доступность = Ложь;
	Элементы.НадписьВниманиеОшибки.Доступность = Ложь;
	Элементы.НадписьСформировать.Доступность = Ложь;
	Элементы.КнопкаПоказатьДокументы.Доступность = Ложь;
	Элементы.КнопкаПоказатьОтчетОСостоянии.Доступность = Ложь;
	Элементы.ДатаЗакрытия.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СообщениеНажатиеЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда 
		ПоказатьЗначение(, РезультатВыбора.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОткрытьЦиклОбменаНажатиеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДатаЗакрытия = КонтекстЭДОКлиент.ПолучитьПустуюДатуЗавершенияЦиклаОбменаКлиент();
	Если НЕ Записать() Тогда
		Прочитать();
	КонецЕсли;
	ЗаполнитьДанными();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	Если КонтекстЭДОКлиент = Неопределено Тогда 
		// Блокируем элементы управления, использующие функционал Контейнера клиентских методов.
		ОтключитьДоступностьЭУ();
	КонецЕсли;
	МассивПолученныхСообщений = Новый Массив;
	Оповестить("Заполнение списка полученных сообщений", МассивПолученныхСообщений);
	Если МассивПолученныхСообщений.Количество() > 0 Тогда 
		ПолученныеТранспортныеСообщения.ЗагрузитьЗначения(МассивПолученныхСообщений);
	КонецЕсли;
	
	ПрорисоватьСтатусыЧтенияСообщений();
	
КонецПроцедуры

&НаСервере
Процедура ОтсортироватьТаблицуСообщенийПопорядкуТипов(ТаблицаСообщений, СоответствиеТипаСообщенияПорядку)
	
	ТаблицаСообщений.Колонки.Добавить("ПорядокТипа");
	Для Каждого Стр Из ТаблицаСообщений Цикл
		ПорядокТипа = СоответствиеТипаСообщенияПорядку[Стр.Тип];
		Стр.ПорядокТипа = ?(ЗначениеЗаполнено(ПорядокТипа), ПорядокТипа, 0);
	КонецЦикла;
	ТаблицаСообщений.Сортировать("ПорядокТипа, Дата");
	ТаблицаСообщений.Колонки.Удалить("ПорядокТипа");
	
КонецПроцедуры

&НаСервере
Функция ПредставлениеПредмета(ссылкаПредмет)
	
	ТипПредмета = ТипЗнч(ссылкаПредмет);
	Если ТипПредмета = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
		Возврат РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(ссылкаПредмет);
	ИначеЕсли ТипПредмета = Тип("Массив") Тогда
		КоличествоПредметов = ссылкаПредмет.Количество();
		Если КоличествоПредметов = 0 Тогда
			Возврат "<предмет отсутствует>";
		ИначеЕсли КоличествоПредметов > 1 Тогда
			ТекстДокументовВсего = СтрЗаменить(ЧислоПрописью(КоличествоПредметов, "НП=Истина, НД=Ложь", "документ, документа, документов, м, , , , ,0"),
									ЧислоПрописью(КоличествоПредметов, "НП=Ложь, НД=Ложь", " , , , , , , , ,0"),
									"");
			Возврат Формат(КоличествоПредметов, "ЧГ=") + " " + ТекстДокументовВсего;
		Иначе
			Возврат Строка(ссылкаПредмет[0]);
		КонецЕсли;
		Возврат Строка(ссылкаПредмет);
	Иначе
		Возврат Строка(ссылкаПредмет);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПредметНажатиеЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		ПоказатьЗначение(, РезультатВыбора.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НадписьНажатиеОбработатьНаСервере(ТипСообщения)
	
	Если КонтекстЭДОСервер = Неопределено Тогда 
		// инициализируем контекст ЭДО - модуль обработки
		ТекстСообщения = "";
		КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
		Если КонтекстЭДОСервер = Неопределено Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ЗапросНаВвод = КонтекстЭДОСервер.ЗапросНаВводПодтверждения(
		Объект.Ссылка, 
		ПредопределенноеЗначение(ТипСообщения));
		
	Если ЗапросНаВвод = Неопределено Тогда 
		Возврат Неопределено;
	ИначеЕсли ТипЗнч(ЗапросНаВвод) = Тип("Структура") Тогда 
		Возврат ЗапросНаВвод;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура НадписьНажатиеОбработатьНаКлиенте(ТипСообщения)
	
	Подтверждение = НадписьНажатиеОбработатьНаСервере(ТипСообщения);
	
	Если Подтверждение <> Неопределено Тогда 
		Если ТипЗнч(Подтверждение) = Тип("Структура") Тогда 
		// Результат обработки структура с предупреждением или текстом вопроса
			ТекстВопроса = "";
			ТекстПредупреждения = "";
			Если Подтверждение.Свойство("ТекстВопроса", ТекстВопроса) Тогда 
				ДополнительныеПараметры = Новый Структура("ТипСообщения", ТипСообщения);
				ОписаниеОповещения = Новый ОписаниеОповещения("НадписьНажатиеОбработатьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
				ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			ИначеЕсли Подтверждение.Свойство("ТекстПредупреждения", ТекстПредупреждения) Тогда 
				ПоказатьПредупреждение(, ТекстПредупреждения);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НадписьНажатиеОбработатьНаКлиентеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ТипСообщения = ДополнительныеПараметры.ТипСообщения;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Если КонтекстЭДОКлиент = Неопределено Тогда
			
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"НадписьНажатиеОбработатьНаКлиентеПослеПолученияКонтекстаЗавершение", 
				ЭтотОбъект, 
				ДополнительныеПараметры);
				
			ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
			
		Иначе
			
			Оповещение = Новый ОписаниеОповещения(
				"ПоказатьПодтверждениеПослеВвода", ЭтотОбъект);
				
			КонтекстЭДОКлиент.ВвестиПодтверждение(
				Оповещение, 
				Объект.Ссылка, 
				ПредопределенноеЗначение(ТипСообщения));
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПодтверждениеПослеВвода(Результат, ВходящийКонтекст) Экспорт
	
	Если Результат <> Неопределено Тогда 
		ПоказатьЗначение(, Результат);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНажатиеОбработатьНаКлиентеПослеПолученияКонтекстаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТипСообщения = ДополнительныеПараметры.ТипСообщения;
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Оповещение = Новый ОписаниеОповещения(
		"ПоказатьПодтверждениеПослеВвода", ЭтотОбъект);
		
	КонтекстЭДОКлиент.ВвестиПодтверждение(
		Оповещение, 
		Объект.Ссылка, 
		ПредопределенноеЗначение(ТипСообщения));
	
КонецПроцедуры

&НаСервере
Функция ПоказатьТранспортноеСообщение(ИмяЭлемента)
	
	Если КонтекстЭДОСервер = Неопределено Тогда 
		// инициализируем контекст ЭДО - модуль обработки
		ТекстСообщения = "";
		КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
		Если КонтекстЭДОСервер = Неопределено Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ИнициализироватьСоответствия();
	
	Возврат КонтекстЭДОСервер.ПоказатьСообщение(Объект.Ссылка, СоответствиеЭлементовУправленияТипуТранспортногоСообщения[Элементы.Найти(ИмяЭлемента)]);

КонецФункции

&НаКлиенте
Процедура ВвестиДатуЗакрытияЗавершение(Дата, ДополнительныеПараметры) Экспорт
	
	НоваяДатаЗакрытия = ?(Дата = Неопределено, ДополнительныеПараметры.НоваяДатаЗакрытия, Дата);
	
	Если (Дата <> Неопределено) Тогда
		Если НоваяДатаЗакрытия = '00010101000000' Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ДатаЗакрытияНажатиеЗавершение", ЭтотОбъект);
			ТекстВопроса = "Завершить цикл обмена текущим временем?";
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			Объект.ДатаЗакрытия = ?(НоваяДатаЗакрытия = '00010101000000',
			КонтекстЭДОКлиент.ПолучитьПустуюДатуЗавершенияЦиклаОбменаКлиент(),
				НоваяДатаЗакрытия);
			Если НЕ Записать() Тогда
				Прочитать();
			КонецЕсли;
			ЗаполнитьДанными();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаЗакрытияНажатиеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		НоваяДатаЗакрытия = КонтекстЭДОКлиент.ТекущаяДатаНаСервере();
		Объект.ДатаЗакрытия = ?(НоваяДатаЗакрытия = '00010101000000',
		КонтекстЭДОКлиент.ПолучитьПустуюДатуЗавершенияЦиклаОбменаКлиент(),
		НоваяДатаЗакрытия);
		Если НЕ Записать() Тогда
			Прочитать();
		КонецЕсли;
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЦиклыОбмена(ВыгружатьКонтейнеры, ВыгружатьСодержимое)
	
	ТекстВопроса = "Выгрузить цикл обмена """ + КонтекстЭДОКлиент.ПредставлениеЦиклаОбмена(Объект.Ссылка) + """?";
	ДополнительныеПараметры = Новый Структура("ВыгружатьКонтейнеры, ВыгружатьСодержимое", ВыгружатьКонтейнеры, ВыгружатьСодержимое);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьЦиклыОбменаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЦиклыОбменаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ВыгружатьКонтейнеры = ДополнительныеПараметры.ВыгружатьКонтейнеры;
	ВыгружатьСодержимое = ДополнительныеПараметры.ВыгружатьСодержимое;
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДОКлиент.ВыгрузитьЦиклыОбмена(Объект.Ссылка, ВыгружатьКонтейнеры, ВыгружатьСодержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьРезультатПриемаДокументНПНажатиеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	СообщениеОснование = ДополнительныеПараметры.СообщениеОснование;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПоложительныйРезультат = Истина;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		ПоложительныйРезультат = Ложь;
	Иначе
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения(
		"НадписьСформироватьРезультатПриемаДокументНПНажатиеЗавершениеПослеСозданияСообщения", ЭтотОбъект, ДополнительныеПараметры);
	КонтекстЭДОКлиент.СоздатьРезультатПриемаНаКлиентеСУчетомВопроса(Оповещение, СообщениеОснование, ПоложительныйРезультат, Истина);		
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСформироватьРезультатПриемаДокументНПНажатиеЗавершениеПослеСозданияСообщения(РезультатПриема, ВходящийКонтекст) Экспорт

	Если РезультатПриема <> Неопределено Тогда
		ПоказатьЗначение(, РезультатПриема);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыгрузитьПакетЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДОКлиент.ВыгрузитьПакетыПоДокументооборотамСдачиОтчетностиВФНС(Объект.Ссылка)
	
КонецПроцедуры

#КонецОбласти
