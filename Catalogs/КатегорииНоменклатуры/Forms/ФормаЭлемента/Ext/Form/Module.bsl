
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьСписокТипов();
	КонецЕсли;
	УстановитьВидимостьЭлементов();
	
	Если Не Константы.ФункциональнаяОпцияИспользоватьТехоперации.Получить() Тогда
		НайденнаяОперация = Элементы.ТипНоменклатурыПоУмолчанию.СписокВыбора.НайтиПоЗначению(Перечисления.ТипыНоменклатуры.Операция);
		Если НайденнаяОперация <> Неопределено Тогда
			Элементы.ТипНоменклатурыПоУмолчанию.СписокВыбора.Удалить(НайденнаяОперация);
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСписокСвойствТекущегоНабора("Номенклатура");
	ЗаполнитьСписокСвойствТекущегоНабора("Характеристики");
	
	ОтчетыУНФ.ПриСозданииНаСервереФормыСвязанногоОбъекта(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокТипов()
	
	Список = Элементы.ТипНоменклатурыПоУмолчанию.СписокВыбора;
	
	ОграничениеТипаНоменклатуры = Неопределено;
	Параметры.ЗначенияЗаполнения.Свойство("ТипНоменклатуры", ОграничениеТипаНоменклатуры);
	
	Если НЕ ОграничениеТипаНоменклатуры = Неопределено Тогда
		Если (ТипЗнч(ОграничениеТипаНоменклатуры) = Тип("Массив") Или ТипЗнч(ОграничениеТипаНоменклатуры) = Тип("ФиксированныйМассив")) 
			И ОграничениеТипаНоменклатуры.Количество() > 0 Тогда
			
			Список.Очистить();
			Для каждого Тип Из ОграничениеТипаНоменклатуры Цикл
				Список.Добавить(Тип);
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ОграничениеТипаНоменклатуры) = Тип("ПеречислениеСсылка.ТипыНоменклатуры") Тогда
			
			Список.Очистить();
			Список.Добавить(ОграничениеТипаНоменклатуры);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Константы.ФункциональнаяОпцияИспользоватьТехоперации.Получить() Тогда
		НайденнаяОперация = Элементы.ТипНоменклатурыПоУмолчанию.СписокВыбора.НайтиПоЗначению(Перечисления.ТипыНоменклатуры.Операция);
		Если НайденнаяОперация <> Неопределено Тогда
			Элементы.ТипНоменклатурыПоУмолчанию.СписокВыбора.Удалить(НайденнаяОперация);
		КонецЕсли;
	КонецЕсли;
	
	Если Элементы.ТипНоменклатурыПоУмолчанию.СписокВыбора.НайтиПоЗначению(Объект.ТипНоменклатурыПоУмолчанию) = Неопределено Тогда
		Объект.ТипНоменклатурыПоУмолчанию = Список.Получить(0).Значение;
	КонецЕсли;
	
	Если Список.Количество() = 1 Тогда
		Элементы.ТипНоменклатурыПоУмолчанию.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбъектНаборСвойств = Объект.НаборСвойств.ПолучитьОбъект();
	ТЧ = ОбъектНаборСвойств.ДополнительныеРеквизиты;
	Индекс = 0;
	Для каждого Свойство Из СвойстваНоменклатуры Цикл
		
		Строка = ТЧ.Найти(Свойство.Ссылка, "Свойство");
		ТЧ.Сдвинуть(Строка, Индекс - ТЧ.Индекс(Строка));
		Индекс = Индекс + 1;
		
	КонецЦикла;
	ОбъектНаборСвойств.Записать();
	
	ОбъектНаборСвойств = Объект.НаборСвойствХарактеристики.ПолучитьОбъект();
	ТЧ = ОбъектНаборСвойств.ДополнительныеРеквизиты;
	Индекс = 0;
	Для каждого Свойство Из СвойстваХарактеристики Цикл
		
		Строка = ТЧ.Найти(Свойство.Ссылка, "Свойство");
		ТЧ.Сдвинуть(Строка, Индекс - ТЧ.Индекс(Строка));
		Индекс = Индекс + 1;
		
	КонецЦикла;
	ОбъектНаборСвойств.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Справочник.КатегорииНоменклатуры.ЗаписьКатегории", Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = НЕ НеПредлагатьСохранять;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПолученияДанных.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
	КатегорииНоменклатурыКлиент.КатегорияНоменклатурыАвтоПодбор(Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ложь);
	
	Если ДанныеВыбора.Количество() <> 0 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	КатегорииНоменклатурыКлиент.КатегорияНоменклатурыОбработкаВыбора(ВыбранноеЗначение);
	НеПредлагатьСохранять = Истина;
	Закрыть();
	ОповеститьОЗаписиНового(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьХарактеристикиПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСвойстваНоменклатуры

&НаКлиенте
Процедура СвойстваНоменклатурыПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборСтрокиТаблицыДопРеквизитов(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ДобавитьДопРеквизит("Номенклатура");
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваНоменклатурыПередНачаломИзменения(Элемент, Отказ)
	
	ВыборСтрокиТаблицыДопРеквизитов(Элемент.ТекущиеДанные.Ссылка);
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваНоменклатурыПередУдалением(Элемент, Отказ)
	
	Для каждого УдаляемаяСтрока Из Элемент.ВыделенныеСтроки Цикл
		УдаляемоеСвойство = СвойстваНоменклатуры.НайтиПоИдентификатору(УдаляемаяСтрока).Ссылка;
		СвойстваНоменклатурыПередУдалениемНаСервере(УдаляемоеСвойство);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СвойстваНоменклатурыПередУдалениемНаСервере(УдаляемоеСвойство)
	
	ОбъектНаборСвойств = Объект.НаборСвойств.ПолучитьОбъект();
	ТЧ = ОбъектНаборСвойств.ДополнительныеРеквизиты;
	Строка = ТЧ.Найти(УдаляемоеСвойство, "Свойство");
	ТЧ.Удалить(Строка);
	ОбъектНаборСвойств.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваНоменклатурыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СвойстваНоменклатурыОбработкаВыбораНаСервере(ВыбранноеЗначение);
	Модифицированность = Истина;
	ЗаполнитьСписокСвойствТекущегоНабора("Номенклатура");
	
КонецПроцедуры

&НаСервере
Процедура СвойстваНоменклатурыОбработкаВыбораНаСервере(МассивВыбранныхЗначений)
	
	Для каждого ВыбранноеЗначение Из МассивВыбранныхЗначений Цикл
		
		Если ВыбранноеЗначение.НаборСвойств <> Объект.НаборСвойств
			И ВыбранноеЗначение.НаборСвойств = Объект.НаборСвойствХарактеристики Тогда
			
			ВыбранноеЗначениеОбъект = ВыбранноеЗначение.ПолучитьОбъект();
			ВыбранноеЗначениеОбъект.НаборСвойств = Объект.НаборСвойствХарактеристики;
			ВыбранноеЗначениеОбъект.Записать();
			
		КонецЕсли;
		
		ОбъектНаборСвойств = Объект.НаборСвойств.ПолучитьОбъект();
		ТЧ = ОбъектНаборСвойств.ДополнительныеРеквизиты;
		Строка = ТЧ.Добавить();
		Строка.Свойство = ВыбранноеЗначение;
		ОбъектНаборСвойств.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСвойстваХарактеристики

&НаКлиенте
Процедура СвойстваХарактеристикиПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваХарактеристикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборСтрокиТаблицыДопРеквизитов(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваХарактеристикиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ДобавитьДопРеквизит("Характеристики");
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваХарактеристикиПередНачаломИзменения(Элемент, Отказ)
	
	ВыборСтрокиТаблицыДопРеквизитов(Элемент.ТекущиеДанные.Ссылка);
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваХарактеристикиПередУдалением(Элемент, Отказ)
	
	УдаляемоеСвойство = Элемент.ТекущиеДанные.Ссылка;
	СвойстваХарактеристикиПередУдалениемНаСервере(УдаляемоеСвойство);
	
КонецПроцедуры

&НаСервере
Процедура СвойстваХарактеристикиПередУдалениемНаСервере(УдаляемоеСвойство)

	ОбъектНаборСвойств = Объект.НаборСвойствХарактеристики.ПолучитьОбъект();
	ТЧ = ОбъектНаборСвойств.ДополнительныеРеквизиты;
	Строка = ТЧ.Найти(УдаляемоеСвойство, "Свойство");
	ТЧ.Удалить(Строка);
	ОбъектНаборСвойств.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваХарактеристикиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СвойстваХарактеристикиОбработкаВыбораНаСервере(ВыбранноеЗначение);
	Модифицированность = Истина;
	ЗаполнитьСписокСвойствТекущегоНабора("Характеристики");
	
КонецПроцедуры

&НаСервере
Процедура СвойстваХарактеристикиОбработкаВыбораНаСервере(МассивВыбранныхЗначений)
	
	Для каждого ВыбранноеЗначение Из МассивВыбранныхЗначений Цикл
		
		Если ВыбранноеЗначение.НаборСвойств = Объект.НаборСвойств
			И ВыбранноеЗначение.НаборСвойств <> Объект.НаборСвойствХарактеристики Тогда
			
			ВыбранноеЗначениеОбъект = ВыбранноеЗначение.ПолучитьОбъект();
			ВыбранноеЗначениеОбъект.НаборСвойств = Объект.НаборСвойствХарактеристики;
			ВыбранноеЗначениеОбъект.Записать();
			
		КонецЕсли;
		
		ОбъектНаборСвойств = Объект.НаборСвойствХарактеристики.ПолучитьОбъект();
		ТЧ = ОбъектНаборСвойств.ДополнительныеРеквизиты;
		Строка = ТЧ.Добавить();
		Строка.Свойство = ВыбранноеЗначение;
		ОбъектНаборСвойств.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.ГруппаХарактеристики.Видимость = Объект.ИспользоватьХарактеристики;
	
КонецПроцедуры

&НаСервере
Функция ЭтоДополнительноеСведение(ТипРеквизита)
	
	Если ТипРеквизита.Типы().Найти(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) <> Неопределено Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокСвойствТекущегоНабора(ВладелецНабораЭлементов)
	
	Если ВладелецНабораЭлементов = "Номенклатура" Тогда
		НаборСвойств = Объект.НаборСвойств;
		Таблица = СвойстваНоменклатуры;
	ИначеЕсли ВладелецНабораЭлементов = "Характеристики" Тогда
		НаборСвойств = Объект.НаборСвойствХарактеристики;
		Таблица = СвойстваХарактеристики;
	КонецЕсли;
	
	Таблица.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборСвойств", НаборСвойств);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДопРеквизиты.Свойство КАК Ссылка,
	|	ДопРеквизиты.НомерСтроки КАК НомерСтрокиДляСортировки
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДопРеквизиты
	|ГДЕ
	|	ДопРеквизиты.Ссылка = &НаборСвойств
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Ссылка = Выборка.Ссылка;
		НоваяСтрока.Заголовок = Выборка.Ссылка.Заголовок;
		
		Если УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(Выборка.Ссылка.ТипЗначения) Тогда
			
			НоваяСтрока.ТипЗначения = Строка(Новый ОписаниеТипов(
				Выборка.Ссылка.ТипЗначения,
				,
				"СправочникСсылка.ЗначенияСвойствОбъектовИерархия,
				|СправочникСсылка.ЗначенияСвойствОбъектов"));
			
			Запрос = Новый Запрос;
			Если ЗначениеЗаполнено(Выборка.Ссылка.ВладелецДополнительныхЗначений) Тогда
				Запрос.УстановитьПараметр("Владелец", Выборка.Ссылка.ВладелецДополнительныхЗначений);
			Иначе
				Запрос.УстановитьПараметр("Владелец", Выборка.Ссылка);
			КонецЕсли;
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 4
			|	ЗначенияСвойствОбъектов.Наименование КАК Наименование
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|ГДЕ
			|	ЗначенияСвойствОбъектов.Владелец = &Владелец
			|	И НЕ ЗначенияСвойствОбъектов.ЭтоГруппа
			|	И НЕ ЗначенияСвойствОбъектов.ПометкаУдаления
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 4
			|	ЗначенияСвойствОбъектовИерархия.Наименование
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектовИерархия КАК ЗначенияСвойствОбъектовИерархия
			|ГДЕ
			|	ЗначенияСвойствОбъектовИерархия.Владелец = &Владелец
			|	И НЕ ЗначенияСвойствОбъектовИерархия.ПометкаУдаления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА КАК ЗначениеИстина
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|ГДЕ
			|	ЗначенияСвойствОбъектов.Владелец = &Владелец
			|	И НЕ ЗначенияСвойствОбъектов.ЭтоГруппа
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектовИерархия КАК ЗначенияСвойствОбъектовИерархия
			|ГДЕ
			|	ЗначенияСвойствОбъектовИерархия.Владелец = &Владелец";
			РезультатыЗапроса = Запрос.ВыполнитьПакет();
			
			ПервыеЗначения = РезультатыЗапроса[0].Выгрузить().ВыгрузитьКолонку("Наименование");
			
			Если ПервыеЗначения.Количество() = 0 Тогда
				Если РезультатыЗапроса[1].Пустой() Тогда
					ПредставлениеЗначений = НСтр("ru = 'Значения еще не введены'");
				Иначе
					ПредставлениеЗначений = НСтр("ru = 'Значения помечены на удаление'");
				КонецЕсли;
			Иначе
				ПредставлениеЗначений = "";
				Номер = 0;
				Для каждого Значение Из ПервыеЗначения Цикл
					Номер = Номер + 1;
					Если Номер = 4 Тогда
						ПредставлениеЗначений = ПредставлениеЗначений + ",...";
						Прервать;
					КонецЕсли;
					ПредставлениеЗначений = ПредставлениеЗначений + ?(Номер > 1, ", ", "") + Значение;
				КонецЦикла;
			КонецЕсли;
			ПредставлениеЗначений = "<" + ПредставлениеЗначений + ">";
			Если ЗначениеЗаполнено(НоваяСтрока.ТипЗначения) Тогда
				ПредставлениеЗначений = ПредставлениеЗначений + ", ";
			КонецЕсли;
			НоваяСтрока.ТипЗначения = ПредставлениеЗначений + НоваяСтрока.ТипЗначения;
			
		Иначе
			
			НоваяСтрока.ТипЗначения = Строка(Выборка.Ссылка.ТипЗначения);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборСтрокиТаблицыДопРеквизитов(Свойство)
	
	ПараметрыФормы = Новый Структура("Ключ", Свойство);
	
	ОткрытьФорму(
		"ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ФормаЭлемента", 
		ПараметрыФормы, 
		ЭтаФорма
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДопРеквизит(ВладелецНабораЭлементов)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru='Перед началом управления свойствами необходимо записать объект. Записать?'");
		Ответ = Неопределено;
		
		ДополнительныеПараметры = Новый Структура("ВладелецНабораЭлементов", ВладелецНабораЭлементов);
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ДобавитьДопРеквизитЗавершение", ЭтотОбъект, ДополнительныеПараметры),
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет
		);
		
	Иначе
		
		ОткрытьФормуВыбораДопРеквизита(ВладелецНабораЭлементов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДопРеквизитЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Ответ = Результат;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать();
	Иначе
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуВыбораДопРеквизита(ДополнительныеПараметры.ВладелецНабораЭлементов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораДопРеквизита(ВладелецНабораЭлементов)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоДополнительноеСведение = Ложь;
	ВыбранныеДопРеквизиты = ВыбранныеДопРеквизитыНабора(ВладелецНабораЭлементов);
	
	Отбор = Новый Структура("ЭтоДополнительноеСведение", ЭтоДополнительноеСведение);
	НаборыСвойств = Новый Массив;
	НаборыСвойств.Добавить(Объект.НаборСвойств);
	НаборыСвойств.Добавить(Объект.НаборСвойствХарактеристики);
	Отбор.Вставить("НаборСвойств", НаборыСвойств);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", ЭтоДополнительноеСведение);
	ПараметрыФормы.Вставить("ВыбранныеЗначения", ВыбранныеДопРеквизиты);
	
	Если ЗначениеЗаполнено(Объект.НаборСвойств) И ВладелецНабораЭлементов="Номенклатура" Тогда
		ПараметрыФормы.Вставить("НаборСвойств", Объект.НаборСвойств);
	ИначеЕсли ЗначениеЗаполнено(Объект.НаборСвойствХарактеристики) И ВладелецНабораЭлементов="Характеристики" Тогда
		ПараметрыФормы.Вставить("НаборСвойств", Объект.НаборСвойствХарактеристики);
	Иначе
		ПараметрыФормы.Вставить("НаборСвойств", ПредопределенноеЗначение("Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_"+ВладелецНабораЭлементов));
	КонецЕсли;
	
	ВладелецФормыВыбора = ТаблицаФормыДопРеквизитов(ВладелецНабораЭлементов);
	
	ОткрытьФорму(
		"Справочник.КатегорииНоменклатуры.Форма.ФормаВыбораДополнительногоРеквизита",
		ПараметрыФормы, 
		ВладелецФормыВыбора,
		УникальныйИдентификатор
	);
	
КонецПроцедуры

// Функция возвращает массив выбранных доп. реквизитов соответсвующего набора.
//
&НаКлиенте
Функция ВыбранныеДопРеквизитыНабора(ВладелецНабораЭлементов)
	
	ДопРеквизитыНабора = Новый Массив;
	КоллекцияДопРеквизитов = КоллекцияДопРеквизитов(ЭтаФорма, ВладелецНабораЭлементов);
	
	Для каждого ЭлементКоллекции Из КоллекцияДопРеквизитов Цикл
		ДопРеквизитыНабора.Добавить(ЭлементКоллекции.Ссылка);
	КонецЦикла;
	
	Возврат ДопРеквизитыНабора;
	
КонецФункции

// Функция возвращает таблицу формы - таблицу доп. реквизитов,
// относящуюся к нужному набору.
//
&НаКлиенте
Функция ТаблицаФормыДопРеквизитов(ВладелецНабораЭлементов)
	
	Если ВладелецНабораЭлементов = "Номенклатура" Тогда
		Возврат Элементы.СвойстваНоменклатуры;
	ИначеЕсли ВладелецНабораЭлементов = "Характеристики" Тогда
		Возврат Элементы.СвойстваХарактеристики;
	КонецЕсли;
	
КонецФункции

// Функция возвращает коллекцию - таблицу доп. ревизитов,
// относящуюся к нужному набору (набору товаров и услуг, характеристик).
//
&НаКлиентеНаСервереБезКонтекста
Функция КоллекцияДопРеквизитов(Форма, ВладелецНабораЭлементов)
	
	Если ВладелецНабораЭлементов = "Номенклатура" Тогда
		Возврат Форма.СвойстваНоменклатуры;
	ИначеЕсли ВладелецНабораЭлементов = "Характеристики" Тогда
		Возврат Форма.СвойстваХарактеристики;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти


