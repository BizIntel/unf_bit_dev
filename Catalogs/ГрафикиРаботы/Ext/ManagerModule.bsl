#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция читает данные графика из регистра
//
// Параметры
//	Календарь		- Ссылка на текущий элемент справочника
//	НомерГода		- Номер года, за который необходимо прочитать календарь
//
// Возвращаемое значение
//	СписокЗначений		- список значений, в котором хранятся даты, входящие в календарь
//
Функция ПрочитатьДанныеГрафикаИзРегистраНаГод(ГрафикРаботы, НомерГода) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикиРаботы.ГрафикРаботы,
	|	ГрафикиРаботы.ВремяНачала,
	|	ГрафикиРаботы.ВремяОкончания
	|ИЗ
	|	РегистрСведений.ГрафикиРаботы КАК ГрафикиРаботы
	|ГДЕ
	|	ГрафикиРаботы.ГрафикРаботы = &ГрафикРаботы
	|	И ГрафикиРаботы.Год = &Год";
	
	Запрос.УстановитьПараметр("ГрафикРаботы", ГрафикРаботы);
	Запрос.УстановитьПараметр("Год", НомерГода);
	
	ВыборкаРезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Возврат ВыборкаРезультатЗапроса;
	
КонецФункции

// Функция читает данные графика из регистра
//
// Параметры
//	Календарь		- Ссылка на текущий элемент справочника
//	НомерГода		- Номер года, за который необходимо прочитать календарь
//
// Возвращаемое значение
//	СписокЗначений		- список значений, в котором хранятся даты, входящие в календарь
//
Функция ПрочитатьДанныеГрафикаИзРегистраНаДень(ГрафикРаботы, День) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикиРаботы.ГрафикРаботы,
	|	ГрафикиРаботы.ВремяНачала,
	|	ГрафикиРаботы.ВремяОкончания
	|ИЗ
	|	РегистрСведений.ГрафикиРаботы КАК ГрафикиРаботы
	|ГДЕ
	|	ГрафикиРаботы.ГрафикРаботы = &ГрафикРаботы
	|	И ГрафикиРаботы.Год = &Год
	|	И ГрафикиРаботы.ВремяНачала >= &ВремяНачала
	|	И ГрафикиРаботы.ВремяОкончания <= &ВремяОкончания";
	
	Запрос.УстановитьПараметр("ГрафикРаботы", ГрафикРаботы);
	Запрос.УстановитьПараметр("Год", Год(День));
	Запрос.УстановитьПараметр("ВремяНачала", НачалоДня(День));
	Запрос.УстановитьПараметр("ВремяОкончания", КонецДня(День));
	
	ВыборкаРезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Возврат ВыборкаРезультатЗапроса;
	
КонецФункции

// Процедура записывает данные графика в регистр
//
// Параметры
//	Календарь	- Ссылка на текущий элемент справочника
//	НомерГода	- Номер года, за который необходимо записать календарь
//	СписокДат	- список значений, в котором указано, какие даты входят в календарь
//
// Возвращаемое значение
//	Нет
//
Процедура ЗаписатьДанныеГрафикаВРегистр(ГрафикРаботы, ДатаЗаполнения) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ГрафикРаботы) Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ГрафикиРаботы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ГрафикРаботы.Установить(ГрафикРаботы);
	НаборЗаписей.Отбор.Год.Установить(Год(ДатаЗаполнения));
	
	ДатаНачалаГода = Дата(Год(ДатаЗаполнения), 1, 1, 0, 0, 0);
	
	ПервыйДень = ?(ГрафикРаботы.ТипГрафика = Перечисления.ТипыГрафикаРаботы.Сменный, ?(ЗначениеЗаполнено(ДатаЗаполнения), ДеньГода(ДатаЗаполнения), 1), 1);
	ПоследнийДень = ДеньГода(КонецГода(ДатаНачалаГода));
	
	ТаблицаПериоды = ГрафикРаботы.Периоды.Выгрузить();
	ТаблицаПериоды.Сортировать("НомерДня Убыв");
	МаксНомерДня = 0;
	Если ТаблицаПериоды.Количество() > 0 Тогда
		МаксНомерДня = ТаблицаПериоды[0].НомерДня;
	КонецЕсли;
	СчДней = 0;
	
	ТекДата = ДатаНачалаГода + (ПервыйДень - 1) * 86400;
	БазовыйКалендарь = ?(ЗначениеЗаполнено(ГрафикРаботы), ГрафикРаботы.Календарь, Неопределено);
	ДанныеКалендаря = УправлениеНебольшойФирмойСервер.ПрочитатьДанныеГрафикаИзРегистра(БазовыйКалендарь, Год(ДатаЗаполнения));
	
	Для Сч = ПервыйДень По ПоследнийДень Цикл
		
		СчДней = СчДней + 1;
		Если СчДней > МаксНомерДня Тогда
			СчДней = 1;
		КонецЕсли;
		
		Для каждого ТекСтрока Из ГрафикРаботы.Периоды Цикл
			Если ГрафикРаботы.ТипГрафика = Перечисления.ТипыГрафикаРаботы.Сменный Тогда
				Если СчДней = ТекСтрока.НомерДня И (ЗначениеЗаполнено(ТекСтрока.ВремяНачала) ИЛИ ЗначениеЗаполнено(ТекСтрока.ВремяОкончания)) Тогда
					НоваяСтрока = НаборЗаписей.Добавить();
					НоваяСтрока.ГрафикРаботы = ГрафикРаботы;
					НоваяСтрока.Год = Год(ДатаЗаполнения);
					НоваяСтрока.ВремяНачала = ТекДата + Час(ТекСтрока.ВремяНачала) * 3600 + Минута(ТекСтрока.ВремяНачала) * 60 + Секунда(ТекСтрока.ВремяНачала);
					НоваяСтрока.ВремяОкончания = ТекДата + Час(ТекСтрока.ВремяОкончания) * 3600 + Минута(ТекСтрока.ВремяОкончания) * 60 + Секунда(ТекСтрока.ВремяОкончания);
				КонецЕсли;
			Иначе
				Если ДеньНедели(ТекДата) = ТекСтрока.НомерДня
				  И (ЗначениеЗаполнено(ТекСтрока.ВремяНачала)
				  ИЛИ ЗначениеЗаполнено(ТекСтрока.ВремяОкончания)) Тогда
					Если ДанныеКалендаря.Количество() = 0
					 ИЛИ ДанныеКалендаря.Найти(НачалоДня(ТекДата)) <> Неопределено
					 ИЛИ ДеньНедели(ТекДата) = 6
					 ИЛИ ДеньНедели(ТекДата) = 7 Тогда
						НоваяСтрока = НаборЗаписей.Добавить();
						НоваяСтрока.ГрафикРаботы = ГрафикРаботы;
						НоваяСтрока.Год = Год(ДатаЗаполнения);
						НоваяСтрока.ВремяНачала = ТекДата + Час(ТекСтрока.ВремяНачала) * 3600 + Минута(ТекСтрока.ВремяНачала) * 60 + Секунда(ТекСтрока.ВремяНачала);
						НоваяСтрока.ВремяОкончания = ТекДата + Час(ТекСтрока.ВремяОкончания) * 3600 + Минута(ТекСтрока.ВремяОкончания) * 60 + Секунда(ТекСтрока.ВремяОкончания);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ТекДата = ДатаНачалаГода + Сч * 86400;
		
	КонецЦикла;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли