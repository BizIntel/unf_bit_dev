
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ДействияФормыВосстановитьПредопределенные(Команда)
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ДействияФормыВосстановитьПредопределенныеЗавершение", ЭтотОбъект), 
		"Будут восстановлены исходные реквизиты всех предопределенных элементов справочника." + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Элементы.Список.ТекущаяСтрока = НовыйОбъект.Ссылка;
		
КонецПроцедуры // ОбработкаЗаписиНового()

&НаКлиенте
Процедура СписокОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Элементы.Список.ТекущаяСтрока = НовыйОбъект;
		
КонецПроцедуры // СписокОбработкаЗаписиНового()

&НаКлиенте
Процедура ДействияФормыВосстановитьПредопределенныеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;
    
    ВосстановитьПредопределенные_НаСервере();
    
    Элементы.Дерево.Обновить();
    Элементы.Список.Обновить();

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВосстановитьПредопределенные_НаСервере()
	
	Справочники.ВидыОтправляемыхДокументов.ЗаполнитьПредопределенныеВидыОтправляемыхДокументов(Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура ВосстановлениеПредопределенныхДанных(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ВосстановлениеПредопределенныхДанныхЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Будут восстановлены стандартные группы видов отправляемых документов. Продолжить?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ВосстановлениеПредопределенныхДанныхЗавершение(РезультатВопроса, ДопПараметры) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьГруппыНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьГруппыНаСервере()
	
	ЗаписьЖурналаРегистрации("ВосстановлениеВидовОтправляемыхДокументов", УровеньЖурналаРегистрации.Информация);
	
	УстановитьПривилегированныйРежим(Истина);
	НачатьТранзакцию();
	
	Выборка = Справочники.ВидыОтправляемыхДокументов.Выбрать();
	Пока Выборка.Следующий() Цикл
		СпрОбъект = Выборка.ПолучитьОбъект();
		СпрОбъект.ОбменДанными.Загрузка = Истина;
		СпрОбъект.Удалить();
	КонецЦикла;
	
	Справочники.ВидыОтправляемыхДокументов.УстановитьИнициализациюПредопределенныхДанных(Ложь);
	
	ИнициализироватьПредопределенныеДанные();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыОтправляемыхДокументов.ИмяПредопределенныхДанных,
	|	ВидыОтправляемыхДокументов.Родитель.ИмяПредопределенныхДанных,
	|	ВидыОтправляемыхДокументов.Родитель.Наименование
	|ИЗ
	|	Справочник.ВидыОтправляемыхДокументов КАК ВидыОтправляемыхДокументов
	|ГДЕ
	|	НЕ ВидыОтправляемыхДокументов.ЭтоГруппа";
	
	ТаблицаЭлементГруппа = Запрос.Выполнить().Выгрузить();
	ОтменитьТранзакцию();
	
		
	НачатьТранзакцию();
	Попытка
		// Восстановление отсутствующих групп
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыОтправляемыхДокументов.Родитель.ИмяПредопределенныхДанных,
		|	ВидыОтправляемыхДокументов.Родитель
		|ИЗ
		|	Справочник.ВидыОтправляемыхДокументов КАК ВидыОтправляемыхДокументов
		|ГДЕ
		|	НЕ ВидыОтправляемыхДокументов.ЭтоГруппа
		|	И НЕ ВидыОтправляемыхДокументов.Родитель.ИмяПредопределенныхДанных ЕСТЬ NULL ";
		Запрос.УстановитьПараметр("ТаблицаИменаПредопределенныхРодителей", ТаблицаЭлементГруппа);
		
		Группы = Новый Соответствие;
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Группы.Вставить(Выборка.РодительИмяПредопределенныхДанных, Выборка.Родитель);
		КонецЦикла;
		
		Для Каждого СтрокаТаблицы Из ТаблицаЭлементГруппа Цикл
			Если Группы.Получить(СтрокаТаблицы.РодительИмяПредопределенныхДанных) = Неопределено Тогда
				НоваяГруппа = Справочники.ВидыОтправляемыхДокументов.СоздатьГруппу();
				НоваяГруппа.Наименование = СтрокаТаблицы.РодительНаименование;
				НоваяГруппа.ИмяПредопределенныхДанных = СтрокаТаблицы.РодительИмяПредопределенныхДанных;
				НоваяГруппа.Записать();
				
				Группы.Вставить(СтрокаТаблицы.РодительИмяПредопределенныхДанных, НоваяГруппа.Ссылка);
			КонецЕсли;
		КонецЦикла;
		
		// Заполнение родителя у элементов
		Для Каждого СтрокаТаблицы Из ТаблицаЭлементГруппа Цикл
			РедактируемыйЭлемент = Справочники.ВидыОтправляемыхДокументов[СтрокаТаблицы.ИмяПредопределенныхДанных].ПолучитьОбъект();
			РедактируемыйЭлемент.Родитель = Группы.Получить(СтрокаТаблицы.РодительИмяПредопределенныхДанных);
			РедактируемыйЭлемент.ОбменДанными.Загрузка = Истина;
			РедактируемыйЭлемент.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти
