#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = &ТипСтруктурнойЕдиницы
		|	И (НЕ СтруктурныеЕдиницы.ПометкаУдаления)";
		
		Запрос.УстановитьПараметр("ТипСтруктурнойЕдиницы", Перечисления.ТипыСтруктурныхЕдиниц.Розница);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Количество() = 1 Тогда
			Выборка.Следующий();
			СтруктурнаяЕдиница = Выборка.СтруктурнаяЕдиница;
		КонецЕсли;
		
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	Организации.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	(НЕ Организации.ПометкаУдаления)";
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Количество() = 1 Тогда
			Выборка.Следующий();
			Владелец = Выборка.Организация;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипКассы = Перечисления.ТипыКассККМ.АвтономнаяККМ
	ИЛИ (ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор И ИспользоватьБезПодключенияОборудования) Тогда
		
		УдаляемыйРеквизит = ПроверяемыеРеквизиты.Найти("ПодключаемоеОборудование");
		Если УдаляемыйРеквизит <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ПодключаемоеОборудование"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипКассы = Перечисления.ТипыКассККМ.АвтономнаяККМ Тогда
		ИспользоватьБезПодключенияОборудования = Ложь;
		ПодключаемоеОборудование = Неопределено;
	КонецЕсли;
	
	Если ИспользоватьБезПодключенияОборудования Тогда
		ПодключаемоеОборудование = Неопределено;
	КонецЕсли;
	
	Если ПодключаемоеОборудование = Неопределено Тогда
		ЭлектронныйЧекSMSПередаютсяПрограммой1С = Ложь;
		ЭлектронныйЧекEmailПередаютсяПрограммой1С = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПодключаемоеОборудование)
		И НЕ ПометкаУдаления Тогда
		Запрос = Новый Запрос();
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КассыККМ.Ссылка
		|ИЗ
		|	Справочник.КассыККМ КАК КассыККМ
		|ГДЕ
		|	КассыККМ.ПодключаемоеОборудование = &ПодключаемоеОборудование
		|	И КассыККМ.Ссылка <> &Ссылка";
		
		Запрос.УстановитьПараметр("ПодключаемоеОборудование", ПодключаемоеОборудование);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru='Указанное оборудование уже используется в другой кассе ККМ.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Узел = ОбменСКассовымСерверомШтрихМПовтИсп.УзелОбменаШтрих();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(Узел, Ссылка);
	
	Отказ = НЕ ТарификацияПереопределяемый.ОтменаРегистрацииКассыНаСервереТарификации(
		ИнтеграцияОбменШтрихМ.ПолучитьРеквизитыКассыШтрихМ(Ссылка).РегистрационныйНомер);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли