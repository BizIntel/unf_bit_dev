
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция формирует наименование банковского счета.
//
&НаКлиенте
Функция СформироватьАвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования = "" + Объект.ТипКассы + " (" + Объект.СтруктурнаяЕдиница + ")";
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Возврат СтрокаНаименования;

КонецФункции // СформироватьАвтоНаименование()

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) Тогда
		Объект.ВалютаДенежныхСредств = Константы.НациональнаяВалюта.Получить();
	КонецЕсли;
	
	ИспользоватьПодключаемоеОборудование = Константы.ФункциональнаяОпцияИспользоватьПодключаемоеОборудование.Получить();
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка)
	   И НЕ Параметры.ЗначенияЗаполнения.Свойство("Владелец")
	   И НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ЗначениеНастройки = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяОрганизация");
		Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
			Объект.Владелец = ЗначениеНастройки;
		Иначе
			Объект.Владелец = Справочники.Организации.ОсновнаяОрганизация;
		КонецЕсли;
		Если НЕ ИспользоватьПодключаемоеОборудование Тогда
			Объект.ИспользоватьБезПодключенияОборудования = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ТипКассыПриИзмененииНаСервере();
	
	Если Объект.ИспользоватьБезПодключенияОборудования
	И НЕ Константы.ФункциональнаяОпцияИспользоватьПодключаемоеОборудование.Получить() Тогда
		Элементы.ИспользоватьБезПодключенияОборудования.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.ПодключаемоеОборудование.Доступность = НЕ Объект.ИспользоватьБезПодключенияОборудования;
	
	ИспользоватьОбменСПодключаемымОборудованием = ПолучитьФункциональнуюОпцию("ИспользоватьОбменСПодключаемымОборудованиемOffline");
	
	Если ИспользоватьОбменСПодключаемымОборудованием Тогда
		Элементы.ТипКассы.СписокВыбора.Добавить(Перечисления.ТипыКассККМ.ККМOffline);
		Элементы.ТипКассы.СписокВыбора.Добавить(Перечисления.ТипыКассККМ.СервисОборудования);
	КонецЕсли;
	
	Элементы.Владелец.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
	ОтчетыУНФ.ПриСозданииНаСервереФормыСвязанногоОбъекта(ЭтотОбъект);
	
	УстановитьВидимостьДопСвойств();
	
	Элементы.РеквизитыККТ.ТолькоПросмотр = ЭтаФорма.ТолькоПросмотр;
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры // ПриСозданииНаСервере()

// Процедура - обработчик события "ПослеЗаписиНаСервере" формы.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры // ПослеЗаписиНаСервере()

&НаСервере
Процедура СброситьОборудованиеИПризнакиККТ()
	
	Объект.ПодключаемоеОборудование = Неопределено;
	Объект.ЭлектронныйЧекSMSПередаютсяПрограммой1С = Ложь;
	Объект.ЭлектронныйЧекEmailПередаютсяПрограммой1С = Ложь;
	Email = "ЧерезОФД";
	SMS = "ЧерезОФД";
	
КонецПроцедуры

&НаСервере
Процедура ТипКассыПриИзмененииНаСервере()
	
	Если Объект.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор Тогда
		
		Элементы.ИспользоватьБезПодключенияОборудования.Видимость = Истина;
		Элементы.ПодключаемоеОборудование.Видимость = Истина;
		
		ПараметрыВыбораПодключаемогоОборудования = Новый Массив;
		
		Значения = Новый Массив;
		Значения.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ФискальныйРегистратор"));
		Значения.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ПринтерЧеков"));
		Значения.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ККТ"));
		ПараметрыВыбораПодключаемогоОборудования.Добавить(Новый ПараметрВыбора("Отбор.ТипОборудования", Значения));
		ПараметрыВыбораПодключаемогоОборудования.Добавить(Новый ПараметрВыбора("Отбор.УстройствоИспользуется", Истина));
		ПараметрыВыбораПодключаемогоОборудования.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь));
		
		Элементы.ПодключаемоеОборудование.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПодключаемогоОборудования);
		
		Если Объект.ПодключаемоеОборудование.ТипОборудования <> Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор
			И Объект.ПодключаемоеОборудование.ТипОборудования <> Перечисления.ТипыПодключаемогоОборудования.ПринтерЧеков
			И Объект.ПодключаемоеОборудование.ТипОборудования <> Перечисления.ТипыПодключаемогоОборудования.ККТ Тогда
			СброситьОборудованиеИПризнакиККТ();
		КонецЕсли;
		
	ИначеЕсли Объект.ТипКассы = Перечисления.ТипыКассККМ.ККМOffline Тогда
		
		Элементы.ИспользоватьБезПодключенияОборудования.Видимость = Ложь;
		Элементы.ПодключаемоеОборудование.Видимость = Истина;
		
		ПараметрыВыбораПодключаемогоОборудования = Новый Массив;
		ПараметрыВыбораПодключаемогоОборудования.Добавить(Новый ПараметрВыбора("Отбор.ТипОборудования", Перечисления.ТипыПодключаемогоОборудования.ККМOffline));
		ПараметрыВыбораПодключаемогоОборудования.Добавить(Новый ПараметрВыбора("Отбор.УстройствоИспользуется", Истина));
		ПараметрыВыбораПодключаемогоОборудования.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь));
		
		Элементы.ПодключаемоеОборудование.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПодключаемогоОборудования);
		
		Если Объект.ПодключаемоеОборудование.ТипОборудования <> Перечисления.ТипыПодключаемогоОборудования.ККМOffline Тогда
			СброситьОборудованиеИПризнакиККТ();
		КонецЕсли;
		
	ИначеЕсли Объект.ТипКассы = Перечисления.ТипыКассККМ.СервисОборудования Тогда
		
		Элементы.ИспользоватьБезПодключенияОборудования.Видимость = Ложь;
		Элементы.ПодключаемоеОборудование.Видимость = Истина;
		
		ПараметрыВыбораПодключаемогоОборудования = Новый Массив;
		ПараметрыВыбораПодключаемогоОборудования.Добавить(Новый ПараметрВыбора("Отбор.ТипОборудования", Перечисления.ТипыПодключаемогоОборудования.WebСервисОборудование));
		ПараметрыВыбораПодключаемогоОборудования.Добавить(Новый ПараметрВыбора("Отбор.УстройствоИспользуется", Истина));
		ПараметрыВыбораПодключаемогоОборудования.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь));
		
		Элементы.ПодключаемоеОборудование.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПодключаемогоОборудования);
		
		Если Объект.ПодключаемоеОборудование.ТипОборудования <> Перечисления.ТипыПодключаемогоОборудования.WebСервисОборудование Тогда
			СброситьОборудованиеИПризнакиККТ();
		КонецЕсли;
		
	Иначе
		
		Элементы.ИспользоватьБезПодключенияОборудования.Видимость = Ложь;
		Элементы.ПодключаемоеОборудование.Видимость = Ложь;
		
	КонецЕсли;
	
	УстановитьВидимостьДопСвойств();
	
КонецПроцедуры // ТипКассыПриИзмененииНаСервере()

&НаКлиенте
Процедура ТипКассыПриИзменении(Элемент)
	
	ТипКассыПриИзмененииНаСервере();
	СформироватьАвтоНаименование();
	
КонецПроцедуры // ТипКассыПриИзменении()

&НаКлиенте
Процедура ПодключаемоеОборудованиеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.ПодключаемоеОборудование.ФормаОбъекта", Новый Структура("Ключ", Объект.ПодключаемоеОборудование));
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьБезПодключенияОборудованияПриИзменении(Элемент)
	
	Элементы.ПодключаемоеОборудование.Доступность = НЕ Объект.ИспользоватьБезПодключенияОборудования;
	УстановитьВидимостьДопСвойств();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьАвтоНаименование();
	ЗаполнитьEmail();
	ЗаполнитьSMS();
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурнаяЕдиницаПриИзменении(Элемент)
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменилисьСчетаКассыККМ" Тогда
		Объект.СчетУчета = Параметр.СчетУчета;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		Оповещение = Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение",ЭтаФорма);
		ОткрытьФорму("Справочник.КассыККМ.Форма.ФормаРаботыСКлючевымиРеквизитами",,,,,,Оповещение);
	КонецЕсли;
	
КонецПроцедуры // Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта()

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат,Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры

&НаСервере
Процедура ПодключаемоеОборудованиеПриИзмененииНаСервере()
	
	Объект.СерийныйНомер = Объект.ПодключаемоеОборудование.СерийныйНомер;
	Объект.ТипОборудования = Объект.ПодключаемоеОборудование.ТипОборудования;
	
	УстановитьВидимостьДопСвойств();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДопСвойств()
	
	Если Объект.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор Тогда
		Если Объект.ПодключаемоеОборудование.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККТ Тогда
			Элементы.РеквизитыККТ.Видимость = Истина;
		Иначе
			Элементы.РеквизитыККТ.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.РеквизитыККТ.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.ИспользоватьБезПодключенияОборудования Тогда
		Элементы.РеквизитыККТ.Видимость = Ложь;
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключаемоеОборудованиеПриИзменении(Элемент)
	ПодключаемоеОборудованиеПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура EmailПриИзменении(Элемент)
	
	Объект.ЭлектронныйЧекEmailПередаютсяПрограммой1С = Email = "ИзПриложения";
	
КонецПроцедуры

&НаКлиенте
Процедура SMSПриИзменении(Элемент)
	
	Объект.ЭлектронныйЧекSMSПередаютсяПрограммой1С = SMS = "ИзПриложения";
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьEmail()
	
	Если Объект.ЭлектронныйЧекEmailПередаютсяПрограммой1С Тогда
		Email = "ИзПриложения";
	Иначе
		Email = "ЧерезОФД";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьSMS()
	
	Если Объект.ЭлектронныйЧекSMSПередаютсяПрограммой1С Тогда
		SMS = "ИзПриложения";
	Иначе
		SMS = "ЧерезОФД";
	КонецЕсли
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

