
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("Объект") Тогда
		ЗаполнитьЗначенияРеквизитовДляРедактированияВФормеИзТабличнойЧасти();
		Возврат;
	КонецЕсли;
		
	Если Не Параметры.Свойство("ОтображаемыеРеквизиты") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияРеквизитовДляРедактированияВФорме(Параметры.Объект, Параметры.ОтображаемыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПроверитьСогласованностьСвязанныхЗначений(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийОбъект.ЗначенияРеквизитов.Очистить();
	
	Для Каждого ТекСтрокаЗначенияРеквизитов Из ЗначенияРеквизитовДляРедактированияВФорме Цикл
		
		Если ТекСтрокаЗначенияРеквизитов.ИмяРеквизита = "ВидОперации" Тогда
			ТекущийОбъект.ВидОперации = ТекСтрокаЗначенияРеквизитов.Значение;
		КонецЕсли;
		
		Если ТекСтрокаЗначенияРеквизитов.ИмяРеквизита = "ТипСобытия" Тогда
			ТекущийОбъект.ТипСобытия = ТекСтрокаЗначенияРеквизитов.Значение;
		КонецЕсли;
		
		НоваяСтрока = ТекущийОбъект.ЗначенияРеквизитов.Добавить();
		НоваяСтрока.Использование = ТекСтрокаЗначенияРеквизитов.Использование;
		НоваяСтрока.Реквизит = ТекСтрокаЗначенияРеквизитов.ИмяРеквизита;
		НоваяСтрока.Значение = ТекСтрокаЗначенияРеквизитов.Значение;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ЗаписанШаблонДокумента", Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЗначенияРеквизитовПередНачаломИзменения(Элемент, Отказ)
	
	Элемент.ПодчиненныеЭлементы.ЗначенияРеквизитовЗначение.ОграничениеТипа = Элемент.ТекущиеДанные.Тип;
	Элемент.ПодчиненныеЭлементы.ЗначенияРеквизитовЗначение.ПараметрыВыбора = СкомпоноватьПараметрыВыбораИСвязиПараметровВыбора(Элемент.ТекущиеДанные.ПараметрыВыбора, Элемент.ТекущиеДанные.СвязиПараметровВыбора);
	Элемент.ПодчиненныеЭлементы.ЗначенияРеквизитовЗначение.ВыборГруппИЭлементов = ГруппыИЭлементы[Элемент.ТекущиеДанные.ВыборГруппИЭлементов];
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияРеквизитовЗначениеПриИзменении(Элемент)
	
	ЗначенияРеквизитовЗначениеПриИзмененииНаСервере(Элементы.ЗначенияРеквизитов.ТекущаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура ЗначенияРеквизитовЗначениеПриИзмененииНаСервере(ИдентификаторСтроки)
	
	ДанныеИзменяемойСтроки = ЗначенияРеквизитовДляРедактированияВФорме.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	ДанныеИзменяемойСтроки.Использование = ЗначениеЗаполнено(ДанныеИзменяемойСтроки.Значение);
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить(ДанныеИзменяемойСтроки.ИмяРеквизита, ДанныеИзменяемойСтроки.Значение);
	
	ЗаглушкаДокументОбъект = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.ИдентификаторОбъектаМетаданных.ЗначениеПустойСсылки).СоздатьДокумент();
	
	ЗаполнениеОбъектовУНФ.ДополнитьВалюты(ДанныеЗаполнения, ЗаглушкаДокументОбъект);
	
	ЗаполнениеОбъектовУНФ.РазыменоватьПоля(ДанныеЗаполнения, ЗаглушкаДокументОбъект);
	
	Для Каждого ТекСтрока Из ЗначенияРеквизитовДляРедактированияВФорме Цикл
		
		Если Не ДанныеЗаполнения.Свойство(ТекСтрока.ИмяРеквизита) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекСтрока.Значение = ДанныеЗаполнения[ТекСтрока.ИмяРеквизита] Тогда
			Продолжить;
		КонецЕсли;
		
		ТекСтрока.Использование = Истина;
		ТекСтрока.Значение = ДанныеЗаполнения[ТекСтрока.ИмяРеквизита];
		
	КонецЦикла;
	
	ОчиститьНесогласованныеЗначения(ДанныеИзменяемойСтроки);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНесогласованныеЗначения(ДанныеИзменяемойСтроки)
	
	Для Каждого ТекСтрока Из ЗначенияРеквизитовДляРедактированияВФорме Цикл
		
		Если Не ЗначениеЗаполнено(ТекСтрока.СвязиПараметровВыбора) Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ТекСвязь Из ТекСтрока.СвязиПараметровВыбора Цикл
			
			Если ТекСвязь.Значение <> ДанныеИзменяемойСтроки.ИмяРеквизита Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ДанныеИзменяемойСтроки.Значение) Тогда
				ТекСтрока.Использование = ДанныеИзменяемойСтроки.Использование;
				ОчиститьЗначение(ТекСтрока.Значение);
				Продолжить;
			КонецЕсли;
			
			Если СвязанныеЗначенияСогласованы(ДанныеИзменяемойСтроки, ТекСтрока, ТекСвязь) Тогда
				Продолжить;
			КонецЕсли;
			
			ТекСтрока.Использование = Ложь;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьЗначение(Значение)
	
	МассивТипов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТипЗнч(Значение));
	
	ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
	
	Значение = ОписаниеТипов.ПривестиЗначение(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияРеквизитовЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не Элементы.ЗначенияРеквизитов.ТекущиеДанные.Тип.СодержитТип(
		Тип("СправочникСсылка.ДисконтныеКарты")) Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = ЗначенияРеквизитовДляРедактированияВФорме.НайтиСтроки(
	Новый Структура("ИмяРеквизита", "Контрагент"));
	
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму(
	"Справочник.ДисконтныеКарты.ФормаВыбора",
	Новый Структура("Контрагент, ОтборПоКонтрагенту", НайденныеСтроки[0].Значение, Истина),
	Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияРеквизитовИспользованиеПриИзменении(Элемент)
	
	ЗначенияРеквизитовИспользованиеПриИзмененииНаСервере(Элементы.ЗначенияРеквизитов.ТекущаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура ЗначенияРеквизитовИспользованиеПриИзмененииНаСервере(ИдентификаторСтроки)
	
	ДанныеИзменяемойСтроки = ЗначенияРеквизитовДляРедактированияВФорме.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если ДанныеИзменяемойСтроки.Использование Тогда
		ОчиститьНесогласованныеЗначения(ДанныеИзменяемойСтроки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьЗначенияРеквизитовДляРедактированияВФорме(Данные, ОтображаемыеРеквизиты)
	
	Объект.ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Данные.Ссылка.Метаданные());
	
	Объект.Наименование = НаименованиеШаблона(Данные, "ВидОперации, Контрагент, Договор, Сотрудник, СтруктурнаяЕдиница, Ячейка");
	
	ЗначенияРеквизитовДляРедактированияВФорме.Очистить();
	
	ЗаполнениеОбъектовУНФПереопределяемый.ПриОпределенииРеквизитовВключаемыхВШаблонДляВсехДокументов(ОтображаемыеРеквизиты);
	
	Для Каждого ТекРеквизит Из Данные.Ссылка.Метаданные().Реквизиты Цикл
		
		Если ТекРеквизит.Имя = "Автор" Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОтображаемыеРеквизиты.Найти(ТекРеквизит.Имя) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не Данные.Свойство(ТекРеквизит.Имя) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = НоваяСтрокаЗначенияРеквизитовДляРедактированияВФорме(ТекРеквизит);
		
		НоваяСтрока.Значение = Данные[ТекРеквизит.Имя];
		НоваяСтрока.Использование = ЗначениеЗаполнено(НоваяСтрока.Значение);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НаименованиеШаблона(Данные, РеквизитыДляВключенияВНаименование)
	
	ЗначенияРеквизитов = Новый Массив;
	
	Для Каждого Элемент Из СтрРазделить(РеквизитыДляВключенияВНаименование, ",", Ложь) Цикл
		
		ИмяРеквизита = СокрЛП(Элемент);
		
		Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта(ИмяРеквизита, Данные.Ссылка.Метаданные()) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Данные[ИмяРеквизита]) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначенияРеквизитов.Добавить(Данные[ИмяРеквизита]);
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ЗначенияРеквизитов) Тогда
		Результат = СтрСоединить(ЗначенияРеквизитов, " / ");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Результат = Данные.Ссылка.Метаданные().Синоним;
	КонецЕсли;
	
	Возврат НаименованиеШаблонаСНумерацией(Результат);
	
КонецФункции

&НаСервере
Функция НаименованиеШаблонаСНумерацией(НаименованиеШаблона)
	
	ВариантыНаименований = Новый ТаблицаЗначений;
	ВариантыНаименований.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(150)));
	ВариантыНаименований.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
	НовыйВариант = ВариантыНаименований.Добавить();
	НовыйВариант.Наименование = НаименованиеШаблона;
	
	Для Порядок = 2 По 999 Цикл
		НовыйВариант = ВариантыНаименований.Добавить();
		НовыйВариант.Наименование = СтрШаблон("%1 (%2)",
		НаименованиеШаблона,
		Порядок);
		НовыйВариант.Порядок = Порядок;
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВариантыНаименований.Наименование,
	|	ВариантыНаименований.Порядок
	|ПОМЕСТИТЬ ВариантыНаименований
	|ИЗ
	|	&ВариантыНаименований КАК ВариантыНаименований
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВариантыНаименований.Наименование КАК Наименование
	|ИЗ
	|	ВариантыНаименований КАК ВариантыНаименований
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШаблоныДокументов КАК ШаблоныДокументов
	|		ПО ВариантыНаименований.Наименование = ШаблоныДокументов.Наименование
	|ГДЕ
	|	ШаблоныДокументов.Наименование ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок");
	Запрос.УстановитьПараметр("ВариантыНаименований", ВариантыНаименований);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат НаименованиеШаблона;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Наименование;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьЗначенияРеквизитовДляРедактированияВФормеИзТабличнойЧасти()
	
	ЗначенияРеквизитовДляРедактированияВФорме.Очистить();
	
	Для Каждого ТекРеквизит Из ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(Объект.ИдентификаторОбъектаМетаданных).Реквизиты Цикл
		
		НайденныеСтроки = Объект.ЗначенияРеквизитов.НайтиСтроки(Новый Структура("Реквизит", ТекРеквизит.Имя));
		
		Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = НоваяСтрокаЗначенияРеквизитовДляРедактированияВФорме(ТекРеквизит);
		НоваяСтрока.Использование = НайденныеСтроки[0].Использование;
		НоваяСтрока.Значение = НайденныеСтроки[0].Значение;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НоваяСтрокаЗначенияРеквизитовДляРедактированияВФорме(ТекРеквизит)
	
	Результат = ЗначенияРеквизитовДляРедактированияВФорме.Добавить();
	Результат.ИмяРеквизита = ТекРеквизит.Имя;
	Если ЗначениеЗаполнено(ТекРеквизит.Синоним) Тогда
		Результат.СинонимРеквизита = ТекРеквизит.Синоним;
	Иначе
		Результат.СинонимРеквизита = ТекРеквизит.Имя;
	КонецЕсли;
	Результат.Тип = ТекРеквизит.Тип;
	Результат.ПараметрыВыбора = ТекРеквизит.ПараметрыВыбора;
	Результат.ВыборГруппИЭлементов = ТекРеквизит.ВыборГруппИЭлементов;
	Результат.СвязиПараметровВыбора = СвязиПараметровВыбораДляРедактированияВФорме(ТекРеквизит.СвязиПараметровВыбора);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СвязиПараметровВыбораДляРедактированияВФорме(СвязиПараметровВыбора)
	
	Если Не ЗначениеЗаполнено(СвязиПараметровВыбора) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Новый Соответствие;
	
	Для Каждого ТекСвязь Из СвязиПараметровВыбора Цикл
		Результат[ТекСвязь.Имя] = ТекСвязь.ПутьКДанным;
	КонецЦикла;
	
	Возврат Новый ФиксированноеСоответствие(Результат);
	
КонецФункции

&НаКлиенте
Функция СкомпоноватьПараметрыВыбораИСвязиПараметровВыбора(ПараметрыВыбора, СвязиПараметровВыбора)
	
	Результат = Новый Массив;
	
	Для Каждого ТекПараметр Из ПараметрыВыбора Цикл
		Результат.Добавить(ТекПараметр);
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(СвязиПараметровВыбора) Тогда
		Возврат Новый ФиксированныйМассив(Результат);
	КонецЕсли;
	
	Для Каждого ТекСвязь Из СвязиПараметровВыбора Цикл
		
		НайденныеСтроки = ЗначенияРеквизитовДляРедактированияВФорме.НайтиСтроки(
		Новый Структура("ИмяРеквизита", ТекСвязь.Значение));
		
		Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
			Продолжить;
		КонецЕсли;
		
		Результат.Добавить(
		Новый ПараметрВыбора(ТекСвязь.Ключ, НайденныеСтроки[0].Значение));
		
	КонецЦикла;
	
	Возврат Новый ФиксированныйМассив(Результат);
	
КонецФункции

&НаСервере
Функция СвязанныеЗначенияСогласованы(ВедущаяСтрока, ПодчиненнаяСтрока, ТекСвязь)
	
	Если Не ПодчиненнаяСтрока.Использование Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Не СтрНачинаетсяС(ТекСвязь.Ключ, "Отбор.") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ПодчиненнаяСтрока.Использование И
		Не ВедущаяСтрока.Использование Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПодчиненнаяСтрока.Значение) Тогда
		Возврат ЗначениеЗаполнено(ВедущаяСтрока.Значение) = ЗначениеЗаполнено(ПодчиненнаяСтрока.Значение)
	КонецЕсли;
	
	ИмяСвязующегоРеквизита = СтрЗаменить(ТекСвязь.Ключ, "Отбор.", "");
	
	Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта(ИмяСвязующегоРеквизита, ПодчиненнаяСтрока.Значение.Метаданные()) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат ВедущаяСтрока.Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
	ПодчиненнаяСтрока.Значение,
	ИмяСвязующегоРеквизита);
	
КонецФункции

&НаСервере
Процедура ПроверитьСогласованностьСвязанныхЗначений(Отказ)
	
	Перем Ошибки;
	
	Для Каждого ВедущаяСтрока Из ЗначенияРеквизитовДляРедактированияВФорме Цикл
		
		Для Каждого ПодчиненнаяСтрока Из ЗначенияРеквизитовДляРедактированияВФорме Цикл
			
			Если Не ЗначениеЗаполнено(ПодчиненнаяСтрока.СвязиПараметровВыбора) Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ТекСвязь Из ПодчиненнаяСтрока.СвязиПараметровВыбора Цикл
				
				Если ТекСвязь.Значение <> ВедущаяСтрока.ИмяРеквизита Тогда
					Продолжить;
				КонецЕсли;
				
				Если СвязанныеЗначенияСогласованы(ВедущаяСтрока, ПодчиненнаяСтрока, ТекСвязь) Тогда
					Продолжить;
				КонецЕсли;
				
				ДобавитьОшибкуНесогласованностиЗначений(Ошибки, ВедущаяСтрока, ПодчиненнаяСтрока);
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	ПроверитьСогласованностьДисконтнойКарты(Ошибки);
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСогласованностьДисконтнойКарты(Ошибки)
	
	СтрокиДисконтнаяКарта = ЗначенияРеквизитовДляРедактированияВФорме.НайтиСтроки(Новый Структура("ИмяРеквизита", "ДисконтнаяКарта"));
	Если Не ЗначениеЗаполнено(СтрокиДисконтнаяКарта) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СтрокиДисконтнаяКарта[0].Использование Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокиДисконтнаяКарта[0].Значение) Тогда
		Возврат;
	КонецЕсли;
	
	ВладелецКарты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокиДисконтнаяКарта[0].Значение, "ВладелецКарты");
	
	Если Не ЗначениеЗаполнено(ВладелецКарты) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиКонтрагент = ЗначенияРеквизитовДляРедактированияВФорме.НайтиСтроки(Новый Структура("ИмяРеквизита", "Контрагент"));
	
	Если Не ЗначениеЗаполнено(СтрокиКонтрагент) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
		Ошибки,
		"ЗначенияРеквизитовДляРедактированияВФорме[%1].Значение",
		НСтр("ru = 'Дисконтная карта не может быть указана в шаблоне без контрагента.'"), "",,,
		ЗначенияРеквизитовДляРедактированияВФорме.Индекс(СтрокиДисконтнаяКарта[0]));
		Возврат;
	КонецЕсли;
	
	Если СтрокиКонтрагент[0].Значение = ВладелецКарты
		И СтрокиКонтрагент[0].Использование Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьОшибкуНесогласованностиЗначений(Ошибки, СтрокиКонтрагент[0], СтрокиДисконтнаяКарта[0]);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОшибкуНесогласованностиЗначений(Ошибки, ТекСтрока1, ТекСтрока2)
	
	ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
	Ошибки,
	"ЗначенияРеквизитовДляРедактированияВФорме[%1].Значение",
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru = 'Значение поля ""%2"" не согласовано со значением поля ""%1"". Возможно, не установлен флажок для поля ""%1""'"),
	ТекСтрока1.СинонимРеквизита,
	ТекСтрока2.СинонимРеквизита), "",,,
	ЗначенияРеквизитовДляРедактированияВФорме.Индекс(ТекСтрока2));
	
КонецПроцедуры

#КонецОбласти