#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	///////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция НовыйКомплектСведений(Организация, ОтчетныйПериод, РСВКомплекта, ФормироватьСедения = Истина)Экспорт
	Комплект = СоздатьЭлемент();
	Комплект.Организация = Организация;
	Комплект.ОтчетныйПериод = ОтчетныйПериод;
	Комплект.СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.КомплектСформированНоНеОтправлен;
	Комплект.РСВ_1 = РСВКомплекта;
	
	Если ФормироватьСедения Тогда
		Комплект.СформироватьСведенияКвартальнойОтчетности(РСВКомплекта, Ложь);
	КонецЕсли;	
	
	Возврат Комплект;
КонецФункции	

Функция ЗаполнитьКомплектСведений(ТекущийКомплект, РСВКомплекта, УчитыватьИсправления)Экспорт			
	Если ТекущийКомплект.СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияКомплектаРазнесеныПоЛицевымСчетам
		И УчитыватьИсправления Тогда
					
		ЗаполняемыйКомплект = ТекущийКомплект.Скопировать();
	ИначеЕсли ТекущийКомплект.СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.КомплектНеБудетПередаваться Или
		ТекущийКомплект.СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияКомплектаРазнесеныПоЛицевымСчетам Тогда 	
		
		Возврат НовыйКомплектСведений(ТекущийКомплект.Организация, ТекущийКомплект.ОтчетныйПериод, РСВКомплекта, Истина);	
	Иначе
		ЗаполняемыйКомплект = ТекущийКомплект;
	КонецЕсли;	

	ЗаполняемыйКомплект.СформироватьСведенияКвартальнойОтчетности(РСВКомплекта, УчитыватьИсправления);
	
	Возврат ЗаполняемыйКомплект;
КонецФункции	

Процедура УстановитьСостояниеПредыдущегоПринятогоКомплекта(Организация, ОтчетныйПериод, ТекущийКомплект)Экспорт 
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТекущийКомплект", ТекущийКомплект);
	Запрос.Текст = "ВЫБРАТЬ
	               |	КомплектыОтчетностиПерсучета.Ссылка
	               |ИЗ
	               |	Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
	               |ГДЕ
	               |	КомплектыОтчетностиПерсучета.СостояниеКомплекта = ЗНАЧЕНИЕ(Перечисление.СостояниеКомплектаОтчетностиПерсучета.СведенияКомплектаРазнесеныПоЛицевымСчетам)
	               |	И КомплектыОтчетностиПерсучета.Организация = &Организация
	               |	И КомплектыОтчетностиПерсучета.ОтчетныйПериод = &ОтчетныйПериод
	               |	И КомплектыОтчетностиПерсучета.Ссылка <> &ТекущийКомплект";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		КомплектОбъект = Выборка.Ссылка.ПолучитьОбъект();
		КомплектОбъект.СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.КомплектСформированИОтправлен;
		КомплектОбъект.Записать();
	КонецЦикла;	
КонецПроцедуры	

Процедура УстановитьСостояниеНеОтправленныхКомплектов(Организация, ОтчетныйПериод)Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КомплектыОтчетностиПерсучета.Ссылка
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
	|ГДЕ
	|	КомплектыОтчетностиПерсучета.Организация = &Организация
	|	И КомплектыОтчетностиПерсучета.ОтчетныйПериод = &ОтчетныйПериод
	|	И КомплектыОтчетностиПерсучета.СостояниеКомплекта = ЗНАЧЕНИЕ(Перечисление.СостояниеКомплектаОтчетностиПерсучета.КомплектСформированНоНеОтправлен)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		КомплектОбъект = Выборка.Ссылка.ПолучитьОбъект();
		КомплектОбъект.СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.КомплектНеБудетПередаваться;
		КомплектОбъект.Записать();
	КонецЦикла;	
КонецПроцедуры

Функция СкопироватьПачкиПрошлогоПериода(Организация, ОтчетныйПериод, МассивФизЛиц = Неопределено)Экспорт
	МассивПачек = Новый Массив;	
	
	НомерПачки = УчетСтраховыхВзносов.ПолучитьСледующийНомерПачки(Организация, ОтчетныйПериод);
	
	ПачкиПрошлогоПериода = МассивПачекПрошлогоПериода(Организация, ОтчетныйПериод, МассивФизЛиц);
	
	Для Каждого ПачкаСсылка Из ПачкиПрошлогоПериода Цикл
		Если ЗначениеЗаполнено(ПачкаСсылка) Тогда
			ПачкаОбъек = ПачкаСсылка.ПолучитьОбъект();
			
			НоваяПачка = ПачкаОбъек.Скопировать();
			НоваяПачка.КорректируемыйПериод = ПачкаОбъек.ОтчетныйПериод;
			НоваяПачка.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
			НоваяПачка.Дата = ТекущаяДатаСеанса();
			НоваяПачка.НомерПачки = НомерПачки;
			МаксимальныйНомерПачки = НомерПачки;
			
			НоваяПачка.Записать(РежимЗаписиДокумента.Запись);
			МассивПачек.Добавить(НоваяПачка.Ссылка);
			
			НомерПачки = НомерПачки + 1;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат МассивПачек;
КонецФункции	

Функция МассивПачекПрошлогоПериода(Организация, ОтчетныйПериод, МассивФизЛиц = Неопределено)Экспорт
	МассивПачек = Новый Массив;	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("МассивФизЛиц", МассивФизЛиц);
	Запрос.УстановитьПараметр("НеОтбиратьПоФизЛицам", МассивФизЛиц = Неопределено);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОписьПачекСЗВ_6.ПачкиДокументов КАК ОписьПачекСЗВ_6ПачкиДокументов
	|		ПО КомплектыОтчетностиПерсучета.ОписьПачекСЗВ = ОписьПачекСЗВ_6ПачкиДокументов.Ссылка
	|			И (КомплектыОтчетностиПерсучета.Организация = &Организация)
	|			И (КомплектыОтчетностиПерсучета.ОтчетныйПериод = &ОтчетныйПериод)
	|			И (КомплектыОтчетностиПерсучета.СостояниеКомплекта = ЗНАЧЕНИЕ(Перечисление.СостояниеКомплектаОтчетностиПерсучета.СведенияКомплектаРазнесеныПоЛицевымСчетам))
	|			И (ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК ПачкаДокументовСЗВ_6_1Сотрудники
	|		ПО (ОписьПачекСЗВ_6ПачкиДокументов.Ссылка = ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка)
	|			И (&НеОтбиратьПоФизЛицам
	|				ИЛИ ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник В (&МассивФизЛиц))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|		ПО (ОписьПачекСЗВ_6ПачкиДокументов.Ссылка = РеестрСЗВ_6_2Сотрудники.Ссылка)
	|			И (&НеОтбиратьПоФизЛицам
	|				ИЛИ РеестрСЗВ_6_2Сотрудники.Сотрудник В (&МассивФизЛиц))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивПачек.Добавить(Выборка.ПачкаДокументов);
	КонецЦикла;
	
	Возврат МассивПачек;
КонецФункции

Функция ОписаниеПоследнегоКомплектаПериода(Организация, ОтчетныйПериод)Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(КомплектыОтчетностиПерсучета.НомерКомплекта) КАК НомерКомплекта,
	|	КомплектыОтчетностиПерсучета.Организация,
	|	КомплектыОтчетностиПерсучета.ОтчетныйПериод
	|ПОМЕСТИТЬ ВТНомерПоследнегоКомплекта
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
	|ГДЕ
	|	КомплектыОтчетностиПерсучета.Организация = &Организация
	|	И КомплектыОтчетностиПерсучета.ОтчетныйПериод = &ОтчетныйПериод
	|
	|СГРУППИРОВАТЬ ПО
	|	КомплектыОтчетностиПерсучета.Организация,
	|	КомплектыОтчетностиПерсучета.ОтчетныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КомплектыОтчетностиПерсучета.НомерКомплекта,
	|	КомплектыОтчетностиПерсучета.СостояниеКомплекта
	|ИЗ
	|	ВТНомерПоследнегоКомплекта КАК НомерПоследнегоКомплекта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
	|		ПО НомерПоследнегоКомплекта.НомерКомплекта = КомплектыОтчетностиПерсучета.НомерКомплекта
	|			И НомерПоследнегоКомплекта.Организация = КомплектыОтчетностиПерсучета.Организация
	|			И НомерПоследнегоКомплекта.ОтчетныйПериод = КомплектыОтчетностиПерсучета.ОтчетныйПериод";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка;		
	Иначе
		Возврат Неопределено;		
	КонецЕсли;	
КонецФункции		

	

Функция ОбъединитьТабличныеДокументы(ПечатуемыеОбъекты) Экспорт
	ДокументРезультат = Новый ТабличныйДокумент;
	
	Для Каждого ПечатуемыйОбъект Из ПечатуемыеОбъекты Цикл
		ДокументРезультат.Вывести(ПечатуемыйОбъект.ТабличныйДокумент);
	КонецЦикла;	
	
	Возврат ДокументРезультат;
КонецФункции	
///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция КомплектСодержащийРСВ_1(РСВ_1, ИсключаемыеИзПоискаКомплекты = Неопределено) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РСВ_1", РСВ_1);
	
	Если ИсключаемыеИзПоискаКомплекты = Неопределено Тогда
		Запрос.УстановитьПараметр("ИсключаемыеКомплекты", Новый Массив);
	Иначе
		Запрос.УстановитьПараметр("ИсключаемыеКомплекты", ИсключаемыеИзПоискаКомплекты);
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КомплектыОтчетностиПерсучета.Ссылка
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
	|ГДЕ
	|	КомплектыОтчетностиПерсучета.РСВ_1 = &РСВ_1
	|	И НЕ КомплектыОтчетностиПерсучета.Ссылка В (&ИсключаемыеКомплекты)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
КонецФункции	

Функция ПараметрыФормированияПечатныхФормКомплекта() Экспорт
	ПараметрыФормирования = Новый Структура;
	ПараметрыФормирования.Вставить("ФормироватьПечатныеФормыРаздел25", Ложь);
	ПараметрыФормирования.Вставить("ФормироватьСтруктуруРаздел25", Ложь);
	ПараметрыФормирования.Вставить("ФормироватьСтруктуруРаздел6", Ложь);
	ПараметрыФормирования.Вставить("ФормироватьПечатныеФормыРаздел6", Ложь);
	ПараметрыФормирования.Вставить("ПечатуемыеДокументы");

	Возврат ПараметрыФормирования;		
КонецФункции

Функция ПечатныеФормыКомплекта2014Года(Ссылка, ПараметрыФормированияПечатныхФорм, НумероватьСтраницы = Истина, НомерПервойстраницыРаздела25 = 0, НомерПоследнейстраницыРаздела25 = 1, НомерПервойстраницыРаздела6 = 0, ОбщееКоличествоСтраницРаздела6 = 0) Экспорт
	ПечатныеФормыКомплекта = Новый Структура("Раздел25, Раздел6");
	
	ДокументыКомплекта = ДокументыСЗВ6Комплекта(Ссылка);
	
	Если ПараметрыФормированияПечатныхФорм.ФормироватьПечатныеФормыРаздел25 Тогда
		ПечатныеФормыКомплекта.Раздел25 = Раздел25РасчетаРСВ1(Ссылка, ТекущаяДатаСеанса(), НумероватьСтраницы, НомерПервойстраницыРаздела25, НомерПоследнейстраницыРаздела25);
	ИначеЕсли ПараметрыФормированияПечатныхФорм.ФормироватьСтруктуруРаздел25 Тогда 
		СтруктураРаздела25 = Новый Массив;
		
		ДобавитьТабличныйДокументВКоллекциюПечатуемыхОбъектов(СтруктураРаздела25, Неопределено, "Раздел 2.5");
		
		ПечатныеФормыКомплекта.Раздел25 = СтруктураРаздела25;
	КонецЕсли;	
		
	Если ПараметрыФормированияПечатныхФорм.ФормироватьСтруктуруРаздел6 Тогда 
		ПечатуемыеДокументы = ДокументыКомплекта;
	Иначе
		ПечатуемыеДокументы = ПараметрыФормированияПечатныхФорм.ПечатуемыеДокументы;	
	КонецЕсли;	
	
	ОписаниеДокументовРаздела6 = ОписаниеДокументовРаздела6(ПечатуемыеДокументы);
	
	Если ПараметрыФормированияПечатныхФорм.ФормироватьПечатныеФормыРаздел6 Тогда
		ДокументыРаздела6 = Новый Соответствие;
		
		ПечатныеФормыСЗВ62 = Документы.РеестрСЗВ_6_2.ТабличныеДокументыФормСЗВ_6_2(ПечатуемыеДокументы);
		
		Для Каждого ПечатнаяФорма Из ПечатныеФормыСЗВ62 Цикл
			ДокументыРаздела6.Вставить(ПечатнаяФорма.Идентификатор, ПечатнаяФорма.ТабличныйДокумент);
		КонецЦикла;	
		
		ПечатныеФормыСЗВ64 = Документы.ПачкаДокументовСЗВ_6_4.ТабличныеДокументыФормыСЗВ_6_4(ПечатуемыеДокументы, , Истина);
		
		Для Каждого ПечатнаяФорма Из ПечатныеФормыСЗВ64 Цикл
			ДокументыРаздела6.Вставить(ПечатнаяФорма.Идентификатор, ПечатнаяФорма.ТабличныйДокумент);
		КонецЦикла;	

		НомерПоследнейСтраницыРаздела6 = 0;
		
		НомерПервойСтраницы = НомерПервойстраницыРаздела6 + (НомерПоследнейстраницыРаздела25 - НомерПервойстраницыРаздела25 + 1);
	 
		ПечатныеФормыРаздела6 = Документы.ПачкаРазделов6РасчетаРСВ_1.ТабличныеДокументыРаздела6РСВ_1(ПечатуемыеДокументы, ДокументыКомплекта, ,НумероватьСтраницы, НомерПервойСтраницы, НомерПоследнейСтраницыРаздела6);
		
		Для Каждого ПечатнаяФорма Из ПечатныеФормыРаздела6 Цикл
			ДокументыРаздела6.Вставить(ПечатнаяФорма.Идентификатор, ПечатнаяФорма.ТабличныйДокумент);
		КонецЦикла;	
		
		Для Каждого ОписаниеДокументаРаздела6 Из ОписаниеДокументовРаздела6 Цикл
			ОписаниеДокументаРаздела6.ТабличныйДокумент = ДокументыРаздела6[ОписаниеДокументаРаздела6.Идентификатор];
		КонецЦикла;	
			
		ОбщееКоличествоСтраницРаздела6 = НомерПоследнейСтраницыРаздела6 - НомерПервойСтраницы + 1 + ОбщееКоличествоСтраницКорректирующихФормСЗВ(ДокументыКомплекта);

	КонецЕсли;	
	
	ПечатныеФормыКомплекта.Раздел6 = ОписаниеДокументовРаздела6;
		
	Возврат ПечатныеФормыКомплекта; 	
КонецФункции	

Функция ОписаниеДокументовРаздела6(ДокументыРаздела6)
	ПорядокСотртировки = ПорядокСортировкиПачекКомплекта(ДокументыРаздела6, Истина);	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументыРаздела6", ДокументыРаздела6);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка В(&ДокументыРаздела6)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1.Ссылка,
	|	ПачкаРазделов6РасчетаРСВ_1.ТипСведенийСЗВ,
	|	ПачкаРазделов6РасчетаРСВ_1.НомерПачки
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаРазделов6РасчетаРСВ_1
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1.Ссылка В(&ДокументыРаздела6)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеестрСЗВ_6_2.Ссылка,
	|	РеестрСЗВ_6_2.ТипСведенийСЗВ,
	|	РеестрСЗВ_6_2.НомерПачки
	|ИЗ
	|	Документ.РеестрСЗВ_6_2 КАК РеестрСЗВ_6_2
	|ГДЕ
	|	РеестрСЗВ_6_2.Ссылка В(&ДокументыРаздела6)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		ОписаниеРаздела6 = Новый Массив;
	Иначе 
		ОписаниеРаздела6 = Новый Массив(ПорядокСотртировки.Количество());
	КонецЕсли;
	Пока Выборка.Следующий() Цикл
		ТекстОписания = ТекстОписанияДокументаРаздела6(Выборка);
		
		ОписаниеДокумента = РегламентированнаяОтчетностьПереопределяемый.ПустаяСтруктураДляРазделовФормыРСВ_1();
		ОписаниеДокумента.Идентификатор = Выборка.Ссылка;
		ОписаниеДокумента.Описание = ТекстОписания;
			
		Индекс = ПорядокСотртировки.Найти(Выборка.Ссылка);
		
		ОписаниеРаздела6[Индекс] = ОписаниеДокумента;
	КонецЦикла;
	
	Возврат ОписаниеРаздела6;
	
КонецФункции	

Функция ДокументыСЗВ6Комплекта(Ссылка, ТипСведенийСЗВ = Неопределено, СписокКорректируемыхПериодов = Неопределено)
	ОписьСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ОписьПачекСЗВ");
	
	Если ЗначениеЗаполнено(ОписьСсылка) Тогда
		Возврат Документы.ОписьПачекСЗВ_6.ДокументыОписи(ОписьСсылка, ТипСведенийСЗВ, СписокКорректируемыхПериодов);	
	Иначе
		СписокПачекСЗВ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "СписокПачекСЗВ").Выгрузить().ВыгрузитьКолонку("ПачкаДокументов");
		
		Возврат ДокументыСЗВ6ПоПараметрам(СписокПачекСЗВ, ТипСведенийСЗВ, СписокКорректируемыхПериодов);
	КонецЕсли;	
КонецФункции

Функция ДокументыСЗВ6ПоПараметрам(СписокДокументов, ТипСведенийСЗВ = Неопределено, СписокКорректируемыхПериодов = Неопределено)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.УстановитьПараметр("ТипСведений", ТипСведенийСЗВ);
	Запрос.УстановитьПараметр("СписокКорректируемыхПериодов", СписокКорректируемыхПериодов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Документ.Ссылка
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&СписокДокументов)
	|	И &Условие
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документ.Ссылка
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&СписокДокументов)
	|	И &Условие
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документ.Ссылка
	|ИЗ
	|	Документ.РеестрСЗВ_6_2 КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&СписокДокументов)
	|	И &Условие";
	
	СтрокаУсловие = "";
	Если ТипСведенийСЗВ <> Неопределено Тогда
		Если ТипЗнч(ТипСведенийСЗВ) = Тип("Массив") Тогда
			СтрокаУсловие = СтрокаУсловие + " И Документ.ТипСведенийСЗВ В (&ТипСведений)";	
		Иначе	
			СтрокаУсловие = СтрокаУсловие + " И Документ.ТипСведенийСЗВ = &ТипСведений";
		КонецЕсли;	
	КонецЕсли;
	
	Если СписокКорректируемыхПериодов <> Неопределено Тогда 
		СтрокаУсловие = СтрокаУсловие + " И Документ.КорректируемыйПериод В (&СписокКорректируемыхПериодов)";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &Условие", СтрокаУсловие);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивСсылок = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		МассивСсылок.Добавить(Выборка.Ссылка);		
	КонецЦикла;	
	
	Возврат МассивСсылок;

КонецФункции	

Функция Раздел25РасчетаРСВ1(Ссылка, ДатаПодписи, НумероватьСтраницы = Истина, НомерПервойСтраницы = 1, НомерПоследнейСтраницы = 0) Экспорт
	
	Результат = Новый Массив;
	
	Макет = ПолучитьМакет("ФормаРаздел25");
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке2014(Ссылка).Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
		
	ОбластьВерхнийКолонтитул	= Макет.ПолучитьОбласть("ВерхнийКолонтитул");
	ОбластьНижнийКолонтитул		= Макет.ПолучитьОбласть("НижнийКолонтитул");
	ОбластьПустаяСтрока	= Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьИсходныеПачкиНачало = Макет.ПолучитьОбласть("ИсходныеПачкиНачало");
	ОбластьИсходныеПачкиИтого = Макет.ПолучитьОбласть("ИсходныеПачкиИтого");
	ОбластьИсходныеПачкиСтрока = Макет.ПолучитьОбласть("ИсходныеПачкиСтрока");
	ОбластьКорректирующиеПачкиНачало = Макет.ПолучитьОбласть("КорректирующиеПачкиНачало");
	ОбластьКорректирующиеПачкиИтого = Макет.ПолучитьОбласть("КорректирующиеПачкиИтого");
	ОбластьКорректирующиеПачкиСтрока = Макет.ПолучитьОбласть("КорректирующиеПачкиСтрока");
	
	ТекущийНомерСтраницы = НомерПервойСтраницы;
	ОтчетныйГод = Год(ВыборкаПоШапкеДокумента.ОтчетныйПериод);

	РегистрационныйНомерПФР = СтрЗаменить(ВыборкаПоШапкеДокумента.ОрганизацияРегистрационныйНомерПФР," ","");
	РегистрационныйНомерПФР = СтрЗаменить(РегистрационныйНомерПФР,"-","");
	ПерсонифицированныйУчет.ВывестиДанныеПоБуквенно(РегистрационныйНомерПФР, ОбластьВерхнийКолонтитул, "НомРег", 12);
	ОбластьНижнийКолонтитул.Параметры.ДатаПодписиПолная = Формат(ДатаПодписи, "ДФ=dd.MM.yyyy; ДП=' '");
	
	ПерсонифицированныйУчет.ПроставитьНомерСтраницыВЯчейках(НумероватьСтраницы, ТекущийНомерСтраницы, ОбластьВерхнийКолонтитул);
		
	ДокументРезультат = НовыйЛистРаздела25(НумероватьСтраницы, ТекущийНомерСтраницы, НомерПервойСтраницы, ОбластьВерхнийКолонтитул);
	
	ДобавитьТабличныйДокументВКоллекциюПечатуемыхОбъектов(Результат, ДокументРезультат, "Раздел 2.5");
		
	ДокументРезультат.Вывести(ОбластьИсходныеПачкиНачало);
	
	Если ВыборкаПоШапкеДокумента.КолЗЛИсходных = 0 Тогда
		Для Сч = 1 По 6 Цикл
			ДокументРезультат.Вывести(ОбластьИсходныеПачкиСтрока);
		КонецЦикла; 
	Иначе
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьИсходныеПачкиСтрока);
		ВыводимыеОбласти.Добавить(ОбластьИсходныеПачкиИтого);
		ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
		
		ОбластьИсходныеПачкиИтого.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
		ВыборкаПоПачкам = СформироватьЗапросПоИсходнымПачкам2014(Ссылка).Выбрать();
		НомерПП = 1;
		Пока ВыборкаПоПачкам.Следующий() Цикл
			ОбластьИсходныеПачкиСтрока.Параметры.Заполнить(ВыборкаПоПачкам);
			ОбластьИсходныеПачкиСтрока.Параметры.НомерПП = НомерПП;
			ОбластьИсходныеПачкиСтрока.Параметры.ИмяФайла = ВыборкаПоПачкам.ИмяФайлаДляПФР;
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Тогда
				ДокументРезультат.Вывести(ОбластьПустаяСтрока);
				ДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
				ДокументРезультат = НовыйЛистРаздела25(НумероватьСтраницы, ТекущийНомерСтраницы, НомерПервойСтраницы, ОбластьВерхнийКолонтитул);
				ДобавитьТабличныйДокументВКоллекциюПечатуемыхОбъектов(Результат, ДокументРезультат, "Раздел 2.5");
				
				ДокументРезультат.Вывести(ОбластьИсходныеПачкиНачало);
			КонецЕсли;
			ДокументРезультат.Вывести(ОбластьИсходныеПачкиСтрока);
			НомерПП = НомерПП + 1;
		КонецЦикла;
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьИсходныеПачкиИтого);
	
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиНачало);
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиИтого);
	ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Тогда
		ДокументРезультат.Вывести(ОбластьПустаяСтрока);
		ДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
		ДокументРезультат = НовыйЛистРаздела25(НумероватьСтраницы, ТекущийНомерСтраницы, НомерПервойСтраницы, ОбластьВерхнийКолонтитул);
		ДобавитьТабличныйДокументВКоллекциюПечатуемыхОбъектов(Результат, ДокументРезультат, "Раздел 2.5");
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиНачало);
	
	Если ВыборкаПоШапкеДокумента.КолЗЛКорректирующих = 0 Тогда
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиСтрока);
		ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиИтого);
		ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
		ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
		
		Для Сч = 1 По 4 Цикл
			ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиСтрока);
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Тогда
				Прервать;	
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиСтрока);
		ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиИтого);
		ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
		
		ОбластьКорректирующиеПачкиИтого.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
		ВыборкаПоПачкам = СформироватьЗапросПоКорректирующимПачкам2014(Ссылка).Выбрать();
		НомерПП = 1;
		Пока ВыборкаПоПачкам.Следующий() Цикл
			ОбластьКорректирующиеПачкиСтрока.Параметры.Заполнить(ВыборкаПоПачкам);   
			ОбластьКорректирующиеПачкиСтрока.Параметры.НомерПП = НомерПП;
			ОбластьКорректирующиеПачкиСтрока.Параметры.КодКорректируемогоПериода = "";
			ОбластьКорректирующиеПачкиСтрока.Параметры.ИмяФайла = ВыборкаПоПачкам.ИмяФайлаДляПФР;
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Тогда
				ДокументРезультат.Вывести(ОбластьПустаяСтрока);
				ДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
				ДокументРезультат = НовыйЛистРаздела25( НумероватьСтраницы, ТекущийНомерСтраницы, НомерПервойСтраницы, ОбластьВерхнийКолонтитул);
				ДобавитьТабличныйДокументВКоллекциюПечатуемыхОбъектов(Результат, ДокументРезультат, "Раздел 2.5");
				ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиНачало);
			КонецЕсли;
			ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиСтрока);
			НомерПП = НомерПП + 1;
		КонецЦикла;
		
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиИтого);
	
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	
	Пока ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Цикл
		ДокументРезультат.Вывести(ОбластьПустаяСтрока);
	КонецЦикла;
	ДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
	
	НомерПоследнейСтраницы = ТекущийНомерСтраницы - 1;
	
	Возврат Результат;
КонецФункции

Функция ПустойРаздел25РасчетаРСВ1(Организация, ДатаПодписи, НумероватьСтраницы = Истина, НомерСтраницы = 1,  ОтчетныйПериод = '20150101') Экспорт

	Макет = ПолучитьМакет(?(ОтчетныйПериод < '20150401', "ФормаРаздел25", "ФормаРаздел25_2015"));
	
	ОбластьВерхнийКолонтитул	= Макет.ПолучитьОбласть("ВерхнийКолонтитул");
	ОбластьНижнийКолонтитул		= Макет.ПолучитьОбласть("НижнийКолонтитул");
	ОбластьПустаяСтрока	= Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьИсходныеПачкиНачало = Макет.ПолучитьОбласть("ИсходныеПачкиНачало");
	ОбластьИсходныеПачкиИтого = Макет.ПолучитьОбласть("ИсходныеПачкиИтого");
	ОбластьИсходныеПачкиСтрока = Макет.ПолучитьОбласть("ИсходныеПачкиСтрока");
	ОбластьКорректирующиеПачкиНачало = Макет.ПолучитьОбласть("КорректирующиеПачкиНачало");
	ОбластьКорректирующиеПачкиИтого = Макет.ПолучитьОбласть("КорректирующиеПачкиИтого");
	ОбластьКорректирующиеПачкиСтрока = Макет.ПолучитьОбласть("КорректирующиеПачкиСтрока");

	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Раздел25РасчетаРСВ_1";
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	РегистрационныйНомерПФР = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "РегистрационныйНомерПФР");
	
	Если Не ЗначениеЗаполнено(РегистрационныйНомерПФР) Тогда
		РегистрационныйНомерПФР = "";
	КонецЕсли;	
	
	РегистрационныйНомерПФР = СтрЗаменить(РегистрационныйНомерПФР," ","");
	РегистрационныйНомерПФР = СтрЗаменить(РегистрационныйНомерПФР,"-","");
	ПерсонифицированныйУчет.ВывестиДанныеПоБуквенно(РегистрационныйНомерПФР, ОбластьВерхнийКолонтитул, "НомРег", 12);
	ПерсонифицированныйУчет.ПроставитьНомерСтраницыВЯчейках(НумероватьСтраницы, НомерСтраницы, ОбластьВерхнийКолонтитул);
	ОбластьНижнийКолонтитул.Параметры.ДатаПодписиПолная = Формат(ДатаПодписи, "ДФ=dd.MM.yyyy; ДП=' '");
	
	ДокументРезультат.Вывести(ОбластьВерхнийКолонтитул);
	ДокументРезультат.Вывести(ОбластьИсходныеПачкиНачало);
	Для Сч = 1 По 6 Цикл
		ДокументРезультат.Вывести(ОбластьИсходныеПачкиСтрока);
	КонецЦикла; 
	ДокументРезультат.Вывести(ОбластьИсходныеПачкиИтого);
	ДокументРезультат.Вывести(ОбластьПустаяСтрока);
	ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиНачало);
	Для Сч = 1 По 4 Цикл
		ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиСтрока);
	КонецЦикла; 
	ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиИтого);
	Пока ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Цикл
		ДокументРезультат.Вывести(ОбластьПустаяСтрока);
	КонецЦикла;
	ДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
	
	Возврат ДокументРезультат
	
КонецФункции 

Функция НовыйЛистРаздела25(НумероватьСтраницы, ТекущийНомерСтраницы, НомерПервойСтраницы, ОбластьВерхнийКолонтитул)

	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Раздел25РасчетаРСВ_1";
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
	ПерсонифицированныйУчет.ПроставитьНомерСтраницыВЯчейках(НумероватьСтраницы, ТекущийНомерСтраницы, ОбластьВерхнийКолонтитул);
	ДокументРезультат.Вывести(ОбластьВерхнийКолонтитул);
	ТекущийНомерСтраницы = ТекущийНомерСтраницы + 1;
	
	Возврат ДокументРезультат

КонецФункции


Процедура ДобавитьТабличныйДокументВКоллекциюПечатуемыхОбъектов(КоллекцияПечатуемыхОбъектов, ТабличныйДокумент, ОписаниеПечатуемогоОбъекта = Неопределено) Экспорт
	ПечатуемыйОбъект = РегламентированнаяОтчетностьПереопределяемый.ПустаяСтруктураДляРазделовФормыРСВ_1();
	
	Если ТипЗнч(ОписаниеПечатуемогоОбъекта) = Тип("Строка") Тогда
		ПечатуемыйОбъект.Описание = ОписаниеПечатуемогоОбъекта;
	Иначе	
		ПечатуемыйОбъект.Описание = ТекстОписанияДокументаРаздела6(ОписаниеПечатуемогоОбъекта);
		
		Если ОписаниеПечатуемогоОбъекта <> Неопределено Тогда
			ПечатуемыйОбъект.Идентификатор = ОписаниеПечатуемогоОбъекта.Ссылка;
		КонецЕсли;	
	КонецЕсли;	

	ПечатуемыйОбъект.ТабличныйДокумент = ТабличныйДокумент;
		
	КоллекцияПечатуемыхОбъектов.Добавить(ПечатуемыйОбъект);	
КонецПроцедуры	

Функция ТекстОписанияДокументаРаздела6(ОписаниеПечатуемогоОбъекта)
		
	ТекстОписания = "";
	
	Если ОписаниеПечатуемогоОбъекта <> Неопределено Тогда 
		Если ТипЗнч(ОписаниеПечатуемогоОбъекта.Ссылка) = Тип("ДокументСсылка.РеестрСЗВ_6_2") Тогда
			ТекстОписания = НСтр("ru = 'Форма СЗВ-6-2'");	
		ИначеЕсли ТипЗнч(ОписаниеПечатуемогоОбъекта.Ссылка) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4") Тогда
			ТекстОписания = НСтр("ru = 'Форма СЗВ-6-4'");	
		ИначеЕсли ТипЗнч(ОписаниеПечатуемогоОбъекта.Ссылка) = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда
			ТекстОписания = НСтр("ru = 'Пачка разделов 6'");	
		КонецЕсли;	
		
		ТекстОписания = ТекстОписания + " №" + Формат(ОписаниеПечатуемогоОбъекта.НомерПачки, "ЧГ=");
		
		Если ОписаниеПечатуемогоОбъекта.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ТекстОписания = ТекстОписания + " (ИСХ.)";
		ИначеЕсли ОписаниеПечатуемогоОбъекта.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
			ТекстОписания = ТекстОписания + " (КОРР.)";
		ИначеЕсли ОписаниеПечатуемогоОбъекта.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
			ТекстОписания = ТекстОписания + " (ОТМ.)";
		КонецЕсли;	
	
	КонецЕсли;	
	
	Возврат ТекстОписания;
КонецФункции	

Функция ПорядокСортировкиПачекКомплекта(СписокПачек, ИсходныеСведенияВНачало = Истина) Экспорт  
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокСЗВ", СписокПачек);
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ДанныеПачки.Ссылка,
	|	ДанныеПачки.НомерПачки КАК НомерПачки,
	|	ДанныеПачки.ТипСведенийСЗВ КАК ТипСведенийСЗВ,
	|	ДанныеПачки.КорректируемыйПериод КАК КорректируемыйПериод,
	|	&ПорядокСортировки КАК ПорядокСортировки
	|ИЗ
	|	Документ.РеестрСЗВ_6_2 КАК ДанныеПачки
	|ГДЕ
	|	ДанныеПачки.Ссылка В(&СписокСЗВ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПачки.Ссылка,
	|	ДанныеПачки.ТипСведенийСЗВ,
	|	ДанныеПачки.КорректируемыйПериод,
	|	ДанныеПачки.НомерПачки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеПачки.Ссылка,
	|	ДанныеПачки.НомерПачки,
	|	ДанныеПачки.ТипСведенийСЗВ,
	|	ДанныеПачки.КорректируемыйПериод,
	|	&ПорядокСортировки
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ДанныеПачки
	|ГДЕ
	|	ДанныеПачки.Ссылка В(&СписокСЗВ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПачки.Ссылка,
	|	ДанныеПачки.ТипСведенийСЗВ,
	|	ДанныеПачки.КорректируемыйПериод,
	|	ДанныеПачки.НомерПачки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеПачки.Ссылка,
	|	ДанныеПачки.НомерПачки,
	|	ДанныеПачки.ТипСведенийСЗВ,
	|	ДанныеПачки.КорректируемыйПериод,
	|	&ПорядокСортировки
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ДанныеПачки
	|ГДЕ
	|	ДанныеПачки.Ссылка В(&СписокСЗВ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПачки.Ссылка,
	|	ДанныеПачки.ТипСведенийСЗВ,
	|	ДанныеПачки.КорректируемыйПериод,
	|	ДанныеПачки.НомерПачки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокСортировки,
	|	КорректируемыйПериод УБЫВ,
	|	ТипСведенийСЗВ,
	|	НомерПачки";
	
	Если ИсходныеСведениявНачало Тогда
		ТекстПоляПорядокСортировки = 
		"	ВЫБОР
		|		КОГДА ДанныеПачки.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ ";	
	Иначе
		ТекстПоляПорядокСортировки = 
		"	ВЫБОР
		|		КОГДА ДанныеПачки.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ ";		
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "КорректируемыйПериод УБЫВ", "КорректируемыйПериод");
	КонецЕсли;	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПорядокСортировки", ТекстПоляПорядокСортировки);
	
	ПорядокСортировки = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ПорядокСортировки.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ПорядокСортировки;
	
КонецФункции

Функция СформироватьЗапросПоШапке2014(Ссылка) Экспорт 
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Организация,ОтчетныйПериод");
	
	РегНомер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначенияРеквизитов.Организация, "РегистрационныйНомерПФР");
	
	Если Не ЗначениеЗаполнено(РегНомер) Тогда
		РегНомер = "";
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РегНомер", РегНомер);
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пачки.ПачкаДокументов КАК ДокументПачка
	|ПОМЕСТИТЬ ВТПачки
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета.СписокПачекСЗВ КАК Пачки
	|ГДЕ
	|	Пачки.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ДанныеПачек.КоличествоИсходных) КАК КоличествоИсходных,
	|	СУММА(ДанныеПачек.КоличествоКорректирующих) КАК КоличествоКорректирующих,
	|	СУММА(ДанныеПачек.НачисленоСтраховаяИсходных) КАК НачисленоСтраховая,
	|	СУММА(ДанныеПачек.ДоначисленоСтраховая) КАК ДоначисленоСтраховая,
	|	СУММА(ДанныеПачек.ДоначисленоНакопительная) КАК ДоначисленоНакопительная,
	|	СУММА(ДанныеПачек.ДоначисленоНаОПС) КАК ДоначисленоНаОПС
	|ПОМЕСТИТЬ ВТКоличествоФизлиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		ФормыСЗВ_6_2.Сотрудник КАК КоличествоФизлиц,
	|		0 КАК КоличествоИсходных,
	|		1 КАК КоличествоКорректирующих,
	|		0 КАК НачисленоСтраховаяИсходных,
	|		ФормыСЗВ_6_2.ДоначисленоСтраховая КАК ДоначисленоСтраховая,
	|		ФормыСЗВ_6_2.ДоначисленоНакопительная КАК ДоначисленоНакопительная,
	|		0 КАК ДоначисленоНаОПС
	|	ИЗ
	|		Документ.РеестрСЗВ_6_2.Сотрудники КАК ФормыСЗВ_6_2
	|	ГДЕ
	|		ФормыСЗВ_6_2.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)
	|		И ФормыСЗВ_6_2.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ФормыСЗВ_6_4.Сотрудник,
	|		0,
	|		1,
	|		0,
	|		ФормыСЗВ_6_4.ДоначисленоСтраховая,
	|		ФормыСЗВ_6_4.ДоначисленоНакопительная,
	|		0
	|	ИЗ
	|		Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ФормыСЗВ_6_4
	|	ГДЕ
	|		ФормыСЗВ_6_4.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)
	|		И ФормыСЗВ_6_4.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Разделы6РасчетаРСВ_1.Сотрудник,
	|		ВЫБОР
	|			КОГДА Разделы6РасчетаРСВ_1.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Разделы6РасчетаРСВ_1.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Разделы6РасчетаРСВ_1.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА Разделы6РасчетаРСВ_1.НачисленоСтраховая
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		0,
	|		0,
	|		ВЫБОР
	|			КОГДА Разделы6РасчетаРСВ_1.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА 0
	|			ИНАЧЕ Разделы6РасчетаРСВ_1.ДоначисленоСтраховая
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК Разделы6РасчетаРСВ_1
	|	ГДЕ
	|		Разделы6РасчетаРСВ_1.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)) КАК ДанныеПачек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|	И ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Док.Организация,
	|	Док.ОтчетныйПериод КАК ОтчетныйПериод,
	|	&РегНомер КАК ОрганизацияРегистрационныйНомерПФР,
	|	ЕСТЬNULL(ДанныеПоФизлицам.КоличествоИсходных, 0) КАК КолЗЛИсходных,
	|	ЕСТЬNULL(ДанныеПоФизлицам.КоличествоКорректирующих, 0) КАК КолЗЛКорректирующих,
	|	ЕСТЬNULL(ДанныеПоФизлицам.ДоначисленоСтраховая, 0) КАК ДоначисленоСтраховая,
	|	ЕСТЬNULL(ДанныеПоФизлицам.ДоначисленоНакопительная, 0) КАК ДоначисленоНакопительная,
	|	ЕСТЬNULL(ДанныеПоФизлицам.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ДанныеПоФизлицам.ДоначисленоНаОПС, 0) КАК ДоначисленоНаОПС,
	|	ЕСТЬNULL(Доходы.ОблагаетсяВзносамиДоПредельнойВеличины, 0) КАК ОблагаетсяВзносамиДоПредельнойВеличины
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоФизлиц КАК ДанныеПоФизлицам
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходы КАК Доходы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции 

Функция СформироватьЗапросПоИсходнымПачкам2014(Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.ПачкаДокументов КАК ДокументПачка,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.ПачкаДокументов.ИмяФайлаДляПФР КАК ИмяФайлаДляПФР,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТПачки
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета.СписокПачекСЗВ КАК ПередачаСЗВ4вПФРПачкиДокументов2014
	|ГДЕ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка = &Ссылка
	|	И ПередачаСЗВ4вПФРПачкиДокументов2014.ПачкаДокументов.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Сотрудник) КАК КоличествоЗЛ,
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка
	|ПОМЕСТИТЬ ВТВзносы
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|	И ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пачки.НомерСтроки КАК НомерСтроки,
	|	Взносы.КоличествоЗЛ,
	|	Взносы.НачисленоСтраховая,
	|	Доходы.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	Пачки.ИмяФайлаДляПФР
	|ИЗ
	|	ВТПачки КАК Пачки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
	|		ПО Пачки.ДокументПачка = Взносы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходы КАК Доходы
	|		ПО Пачки.ДокументПачка = Доходы.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции 

Функция СформироватьЗапросПоКорректирующимПачкам2014(Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка" , Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.ПачкаДокументов КАК ДокументПачка,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.ПачкаДокументов.ИмяФайлаДляПФР,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТПачки
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета.СписокПачекСЗВ КАК ПередачаСЗВ4вПФРПачкиДокументов2014
	|ГДЕ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка = &Ссылка
	|	И ПередачаСЗВ4вПФРПачкиДокументов2014.ПачкаДокументов.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ДанныеПачек.КоличествоКорректирующих) КАК КоличествоЗЛ,
	|	СУММА(ДанныеПачек.ДоначисленоСтраховая) КАК ДоначисленоСтраховая,
	|	СУММА(ДанныеПачек.ДоначисленоНакопительная) КАК ДоначисленоНакопительная,
	|	СУММА(ДанныеПачек.ДоначисленоНаОПС) КАК ДоначисленоНаОПС,
	|	ДанныеПачек.Ссылка,
	|	ДанныеПачек.КорректируемыйПериод,
	|	ДанныеПачек.НомерПачки
	|ПОМЕСТИТЬ ВТСведенияОПачках
	|ИЗ
	|	(ВЫБРАТЬ
	|		1 КАК КоличествоКорректирующих,
	|		ФормыСЗВ_6_1и2.ДоначисленоСтраховая КАК ДоначисленоСтраховая,
	|		ФормыСЗВ_6_1и2.ДоначисленоНакопительная КАК ДоначисленоНакопительная,
	|		0 КАК ДоначисленоНаОПС,
	|		ФормыСЗВ_6_1и2.Ссылка КАК Ссылка,
	|		ФормыСЗВ_6_1и2.Ссылка.КорректируемыйПериод КАК КорректируемыйПериод,
	|		ФормыСЗВ_6_1и2.Ссылка.НомерПачки КАК НомерПачки
	|	ИЗ
	|		Документ.РеестрСЗВ_6_2.Сотрудники КАК ФормыСЗВ_6_1и2
	|	ГДЕ
	|		ФормыСЗВ_6_1и2.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)
	|	
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1,
	|		ФормыСЗВ_6_4.ДоначисленоСтраховая,
	|		ФормыСЗВ_6_4.ДоначисленоНакопительная,
	|		0,
	|		ФормыСЗВ_6_4.Ссылка,
	|		ФормыСЗВ_6_4.Ссылка.КорректируемыйПериод,
	|		ФормыСЗВ_6_4.Ссылка.НомерПачки
	|	ИЗ
	|		Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ФормыСЗВ_6_4
	|	ГДЕ
	|		ФормыСЗВ_6_4.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)
	|		И ФормыСЗВ_6_4.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1,
	|		0,
	|		0,
	|		Разделы6РасчетаРСВ_1.ДоначисленоСтраховая,
	|		Разделы6РасчетаРСВ_1.Ссылка,
	|		Разделы6РасчетаРСВ_1.Ссылка.КорректируемыйПериод,
	|		Разделы6РасчетаРСВ_1.Ссылка.НомерПачки
	|	ИЗ
	|		Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК Разделы6РасчетаРСВ_1
	|	ГДЕ
	|		Разделы6РасчетаРСВ_1.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)) КАК ДанныеПачек
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПачек.Ссылка,
	|	ДанныеПачек.КорректируемыйПериод,
	|	ДанныеПачек.НомерПачки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пачки.НомерСтроки КАК НомерСтроки,
	|	ГОД(СведенияОПачках.КорректируемыйПериод) КАК КорректируемыйГод,
	|	СведенияОПачках.КорректируемыйПериод,
	|	СведенияОПачках.КоличествоЗЛ,
	|	СведенияОПачках.ДоначисленоСтраховая,
	|	СведенияОПачках.ДоначисленоНакопительная,
	|	СведенияОПачках.ДоначисленоНаОПС,
	|	Пачки.ПачкаДокументовИмяФайлаДляПФР КАК ИмяФайлаДляПФР
	|ИЗ
	|	ВТПачки КАК Пачки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОПачках КАК СведенияОПачках
	|		ПО Пачки.ДокументПачка = СведенияОПачках.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции 

Функция ОбщееКоличествоСтраницКорректирующихФормСЗВ(ДокументыКомплекта)
	ОбщееКоличествоСтраниц = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументов", ДокументыКомплекта);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник) КАК КоличествоЗЛ
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка В(&СписокДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		ОбщееКоличествоСтраниц = ОбщееКоличествоСтраниц + Выборка.КоличествоЗЛ + 1;
	КонецЦикла;	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(РеестрСЗВ_6_2Сотрудники.Сотрудник, 0)) КАК КоличествоЗЛ,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка В(&СписокДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	РеестрСЗВ_6_2Сотрудники.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Если Выборка.КоличествоЗЛ <> 0 Тогда
			ОбщееКоличествоСтраниц = ОбщееКоличествоСтраниц + ?(Выборка.КоличествоЗЛ < 15, 1, Окр((Выборка.КоличествоЗЛ - 14) / 14, 0));
		КонецЕсли;		
	КонецЦикла;	
	
	Возврат  ОбщееКоличествоСтраниц;
КонецФункции	

// Процедура заполняет данные для выгрузки раздела 2.5 формы РСВ-1
//
// Параметры:
//  СсылкаНаСохрРеглОтчет – ссылка на регламентированный отчет;
//  ДанныеРаздела25       – структура с ключами "Таблица_2_5_1" и "Таблица_2_5_2":
//    "Таблица_2_5_1"     - таблица значений - заполняется данными многострочной
//                          части подраздела 2.5.1 по колонкам 2 - 5:
//      "П000251000102"   - Число (15, 2);
//      "П000251000103"   - Число (15, 2);
//      "П000251000104"   - Число ( 3, 0);
//      "П000251000105"   - Строка  (100);
//    "Таблица_2_5_2"     - таблица значений - заполняется данными многострочной
//                          части подраздела 2.5.2 по колонкам 2 - 8:
//      "П000252000102"   - Число ( 1, 0);
//      "П000252000103"   - Число ( 4, 0);
//      "П000252000104"   - Число (15, 2);
//      "П000252000105"   - Число (15, 2);
//      "П000252000106"   - Число (15, 2);
//      "П000252000107"   - Число ( 3, 0);
//      "П000252000108"   - Строка  (100).
//
Процедура ЗаполнитьДанныеДляВыгрузкиРаздела25РСВ_1(СсылкаНаСохрРеглОтчет, ДанныеРаздела25) Экспорт
	КомплектСодержащийРСВ_1 = КомплектСодержащийРСВ_1(СсылкаНаСохрРеглОтчет);
	
	Если КомплектСодержащийРСВ_1 = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ВыборкаПоИсходнымПачкам = СформироватьЗапросПоИсходнымПачкам2014(КомплектСодержащийРСВ_1).Выбрать();
	
	ВыборкаПоКорректирующимПачкам = СформироватьЗапросПоКорректирующимПачкам2014(КомплектСодержащийРСВ_1).Выбрать();
		
	Пока ВыборкаПоИсходнымПачкам.Следующий() Цикл
		СтрокаРаздела_2_5_1 = ДанныеРаздела25.Таблица_2_5_1.Добавить();
		
		СтрокаРаздела_2_5_1.П000251000102 = ВыборкаПоИсходнымПачкам.ОблагаетсяВзносамиДоПредельнойВеличины;
		СтрокаРаздела_2_5_1.П000251000103 = ВыборкаПоИсходнымПачкам.НачисленоСтраховая;
		СтрокаРаздела_2_5_1.П000251000104 = ВыборкаПоИсходнымПачкам.КоличествоЗЛ;
		СтрокаРаздела_2_5_1.П000251000105 = ВыборкаПоИсходнымПачкам.ИмяФайлаДляПФР;
	КонецЦикла;	
	
	Пока ВыборкаПоКорректирующимПачкам.Следующий() Цикл
		СтрокаРаздела_2_5_2 = ДанныеРаздела25.Таблица_2_5_2.Добавить();
		
		СтрокаРаздела_2_5_2.П000252000102 = УчетСтраховыхВзносов.ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоКорректирующимПачкам.КорректируемыйПериод).Квартал;
		СтрокаРаздела_2_5_2.П000252000103 =  ВыборкаПоКорректирующимПачкам.КорректируемыйГод;
		СтрокаРаздела_2_5_2.П000252000104 = ВыборкаПоКорректирующимПачкам.ДоначисленоНаОПС;
		СтрокаРаздела_2_5_2.П000252000105 = ВыборкаПоКорректирующимПачкам.ДоначисленоСтраховая;
		СтрокаРаздела_2_5_2.П000252000106 = ВыборкаПоКорректирующимПачкам.ДоначисленоНакопительная;
		СтрокаРаздела_2_5_2.П000252000107 = ВыборкаПоКорректирующимПачкам.КоличествоЗЛ;
		СтрокаРаздела_2_5_2.П000252000108 = ВыборкаПоКорректирующимПачкам.ИмяФайлаДляПФР;
	КонецЦикла;	
	
КонецПроцедуры

#КонецЕсли