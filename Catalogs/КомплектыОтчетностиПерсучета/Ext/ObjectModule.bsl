#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем ПредыдущееСостояниеКомплекта;

///////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура СформироватьСведенияКвартальнойОтчетности(РСВКомплекта, УчитыватьИсправления = Истина)Экспорт
	
	Если ОтчетныйПериод >= '20140101' Тогда
		ОписьПачекСЗВОбъект = Неопределено;
		ОписьПачекСЗВ = Документы.ОписьПачекСЗВ_6.ПустаяСсылка();
		
		Если СписокПачекСЗВ.Количество() > 0 И ТипЗнч(СписокПачекСЗВ[0].ПачкаДокументов) = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда
			ПачкаРазделов6 = СписокПачекСЗВ[0].ПачкаДокументов;
		Иначе
			ПачкаРазделов6 = НовыйПачкаРазделов6(Организация, ОтчетныйПериод);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПачкаРазделов6, СправкиПоНДФЛ.ДанныеПодписывающихЛиц(Организация, ОтчетныйПериод,,Истина));
	ИначеЕсли ОписьПачекСЗВ.Пустая() Тогда
		ОписьПачекСЗВОбъект = НовыйОписьАДВ(Организация, ОтчетныйПериод);
	Иначе
		ОписьПачекСЗВОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
	КонецЕсли;
	
	Если ОписьПачекСЗВОбъект <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ОписьПачекСЗВОбъект, СправкиПоНДФЛ.ДанныеПодписывающихЛиц(Организация, ОтчетныйПериод,,Истина));
	КонецЕсли;
	
	ТаблицаСЗВ = СформироватьСведенияКорректирующихПериодов(ОписьПачекСЗВОбъект, УчитыватьИсправления);
	МассивДокументовКомплекта = ТаблицаСЗВ.ВыгрузитьКолонку("ПачкаДокументов");
	
	СписокИсходныхПачек = МассивСсылокСЗВ(Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);
	
	Для Каждого ИсходнаяПачкаСЗВ Из СписокИсходныхПачек Цикл
		МассивДокументовКомплекта.Добавить(ИсходнаяПачкаСЗВ);
	КонецЦикла;
	
	ТаблицаИсходныхСЗВ = УчетСтраховыхВзносов.СформироватьПачкиДокументовСЗВ(?(ОписьПачекСЗВОбъект = Неопределено, ПачкаРазделов6, ОписьПачекСЗВОбъект), '00010101', УчитыватьИсправления, Истина, МассивДокументовКомплекта,, ОтчетныйПериод); 
	
	Для Каждого ИсходнаяСЗВ Из ТаблицаИсходныхСЗВ Цикл
		ОписаниеПачки = ТаблицаСЗВ.Добавить();
		ЗаполнитьЗначенияСвойств(ОписаниеПачки, ИсходнаяСЗВ);
	КонецЦикла;
	
	Если ОписьПачекСЗВОбъект <> Неопределено Тогда
		
		ОписьПачекСЗВОбъект.ПачкиДокументов.Загрузить(ТаблицаСЗВ);
		
		
		ОписьПачекСЗВОбъект.Записать(РежимЗаписиДокумента.Запись);		
		
		ОписьПачекСЗВ = ОписьПачекСЗВОбъект.Ссылка;
	КонецЕсли;
	
	Если Месяц(ОтчетныйПериод) = 10 
		И Год(ОтчетныйПериод)< 2014 Тогда
		МассивПачекСЗВ63 = СписокПачекСЗВ6_3.ВыгрузитьКолонку("ПачкаДокументов");
		
		Если Год(ОтчетныйПериод) < 2013 Тогда
			
			МассивСформированныхПачекСЗВ63 = Документы.ПачкаДокументовСЗВ_6_3.СформироватьПачкиСЗВ_6_3(Организация, 
				Год(ОтчетныйПериод),
				Ложь,
				УчитыватьИсправления,
				,
				МассивПачекСЗВ63);
			
			СписокПачекСЗВ6_3.Очистить();
			Для Каждого ПачкаСЗВ6_3 Из МассивСформированныхПачекСЗВ63 Цикл
				ПачкаКомплекта = СписокПачекСЗВ6_3.Добавить();
				ПачкаКомплекта.ПачкаДокументов = ПачкаСЗВ6_3;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	РСВ_1 = РСВКомплекта;
	
	СписокПачекСЗВ.Очистить();
	Для Каждого ОписаниеПачкиСЗВ Из ТаблицаСЗВ Цикл
		ПачкаКомплекта = СписокПачекСЗВ.Добавить();
		ПачкаКомплекта.ПачкаДокументов = ОписаниеПачкиСЗВ.ПачкаДокументов;
	КонецЦикла;	
	
	СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.КомплектСформированНоНеОтправлен;
	
	Записать();
	
КонецПроцедуры

Функция СформироватьКорректирующиеСведения(КорректируемыйПериод, МассивФизЛиц = Неопределено)Экспорт
	
	ОписьОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
	
	Если МассивФизЛиц = Неопределено Тогда
		СписокПачек = Справочники.КомплектыОтчетностиПерсучета.СкопироватьПачкиПрошлогоПериода(Организация, КорректируемыйПериод, МассивФизЛиц);
		ЗаменятьСуществующиеПачки = Истина;
	Иначе
		СписокПачек = Справочники.КомплектыОтчетностиПерсучета.МассивПачекПрошлогоПериода(Организация, КорректируемыйПериод, МассивФизЛиц);
		ЗаменятьСуществующиеПачки = Ложь;
	КонецЕсли;	
	
	МассивПериодов = СписокКорректируемыхПериодов();
	
	МассивУчитываемыхПериодов = Новый Массив;
	
	Для Каждого ОбрабатывемыйПериод Из МассивПериодов Цикл	
		Если ОбрабатывемыйПериод <= КорректируемыйПериод Тогда
			МассивУчитываемыхПериодов.Добавить(ОбрабатывемыйПериод);				
		КонецЕсли;
	КонецЦикла;	
				
	МассивКорректирующихПачекПериода = МассивСсылокСЗВ(Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ, МассивУчитываемыхПериодов);

	Для Каждого КорректирующаяПачкаСЗВ Из МассивКорректирующихПачекПериода Цикл
		СписокПачек.Добавить(КорректирующаяПачкаСЗВ);
	КонецЦикла;	
				
	УчитыватьИсправления = (СписокПачек.Количество() > 0);
	
	ТаблицаСЗВ = СформироватьКорректирующиеПачки(ОписьОбъект, КорректируемыйПериод, СписокПачек, МассивФизЛиц, УчитыватьИсправления, ЗаменятьСуществующиеПачки);		
	
	Для Каждого СтрокаПачкиСЗВ Из ТаблицаСЗВ Цикл
		СЗВКомплекта = СписокПачекСЗВ.Добавить();
		СЗВКомплекта.ПачкаДокументов = СтрокаПачкиСЗВ.ПачкаДокументов;
		
		СЗВОписи = ОписьОбъект.ПачкиДокументов.Добавить();
		СЗВОписи.ПачкаДокументов = СтрокаПачкиСЗВ.ПачкаДокументов; 
	КонецЦикла;	
	
	ОписьОбъект.Записать();
		
	Возврат ТаблицаСЗВ;
КонецФункции	

Функция СформироватьСведенияКорректирующихПериодов(ОписьПачекСЗВОбъект, УчитыватьИсправления)
	ТаблицаСЗВ = Новый ТаблицаЗначений;
	ТаблицаСЗВ.Колонки.Добавить("ПачкаДокументов");
	ТаблицаСЗВ.Колонки.Добавить("НомерПачки");
	
	МассивПериодов = СписокКорректируемыхПериодов();

	Для Каждого КорректируемыйПериод Из МассивПериодов Цикл	
			
		МассивКорректирующихПачекКомплекта = ТаблицаСЗВ.ВыгрузитьКолонку("ПачкаДокументов");
		
		МассивУчитываемыхПериодов = Новый Массив;
		МассивУчитываемыхПериодов.Добавить(КорректируемыйПериод);
		
		МассивКорректирующихПачекПериода = МассивСсылокСЗВ(Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ, МассивУчитываемыхПериодов);
		
		МассивФизЛиц = МассивФизЛицИзПачек(МассивКорректирующихПачекПериода);

		Для Каждого КорректирующаяПачкаСЗВ Из МассивКорректирующихПачекПериода Цикл
			МассивКорректирующихПачекКомплекта.Добавить(КорректирующаяПачкаСЗВ);			
		КонецЦикла;	
		
		ТаблицаКорректирующихСЗВ = СформироватьКорректирующиеПачки(ОписьПачекСЗВОбъект, КорректируемыйПериод, МассивКорректирующихПачекКомплекта, МассивФизЛиц, УчитыватьИсправления);
		
		Для Каждого КорректирующаяСЗВ Из ТаблицаКорректирующихСЗВ Цикл
			ОписаниеПачки = ТаблицаСЗВ.Добавить();
			ЗаполнитьЗначенияСвойств(ОписаниеПачки, КорректирующаяСЗВ);
		КонецЦикла;	
	КонецЦикла;
	
	Возврат ТаблицаСЗВ;
КонецФункции

Процедура ПерераспределитьВзносыВКомплекте(РасчетныйПериод)Экспорт		
	
	МассивПериодов = СписокКорректируемыхПериодов();	
	Для Каждого Период Из МассивПериодов Цикл
		Если Период >= РасчетныйПериод Тогда
			ПерераспределитьВзносыЗаПериод(Истина, Период);	
		КонецЕсли;	
	КонецЦикла;	
	ПерераспределитьВзносыЗаПериод(Ложь, ОтчетныйПериод);
	
КонецПроцедуры

Функция НовыйПачкаСЗВ6(ТипПачки, ТипСведенийСЗВ, КатегорияЗЛ, КорректируемыйПериод, ЗаписыватьПачку = Истина)Экспорт
	ОписьОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
	
	Если ТипПачки = "СЗВ-6-2" Тогда
		ДокументОбъект = Документы.РеестрСЗВ_6_2.СоздатьДокумент();
	КонецЕсли;	
	                                                 
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.ОтчетныйПериод = ОтчетныйПериод;
	ДокументОбъект.Дата = ТекущаяДатаСеанса();       
		
	
	СтрокаОписи = ОписьОбъект.ПачкиДокументов.Добавить();

	ДокументОбъект.ТипСведенийСЗВ = ТипСведенийСЗВ;
	ДокументОбъект.КатегорияЗастрахованныхЛиц = КатегорияЗЛ;
	ДокументОбъект.КорректируемыйПериод = КорректируемыйПериод;

	ДокументОбъект.НомерПачки = УчетСтраховыхВзносов.ПолучитьСледующийНомерПачки(Организация, ОтчетныйПериод);
	
	ЗаполнитьОтветственныхЛицДокумента(ДокументОбъект, ОписьОбъект);

	Если ЗаписыватьПачку Тогда 
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
		СтрокаОписи.ПачкаДокументов = ДокументОбъект.Ссылка;
		
		СтрокаКомплекта = СписокПачекСЗВ.Добавить();
		СтрокаКомплекта.ПачкаДокументов = ДокументОбъект.Ссылка;
		
		ОписьОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;	
	
	Возврат ДокументОбъект;
	
КонецФункции	

Функция ОписаниеПачекСЗВ63()Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокПачек", СписокПачекСЗВ6_3.ВыгрузитьКолонку("ПачкаДокументов"));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_3.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_3.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_3.НомерПачки,
	|	ПачкаДокументовСЗВ_6_3.ТипДоговора,
	|	ПачкаДокументовСЗВ_6_3.Ссылка
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3 КАК ПачкаДокументовСЗВ_6_3
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_3.Ссылка В (&СписокПачек)
	|	И НЕ ПачкаДокументовСЗВ_6_3.ПометкаУдаления";
	
	Возврат Запрос.Выполнить().Выбрать();	
КонецФункции	

Процедура УдалитьДокументыКомплекта(СписокУдаляемыхДокументов)Экспорт
	Если Не ОписьПачекСЗВ.Пустая() Тогда
		ОписьОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
	Иначе
		ОписьОбъект = Неопределено;
	КонецЕсли;
	
	Для Каждого УдаляемыйДокумент Из СписокУдаляемыхДокументов Цикл
		Если ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			РСВ_1 = Документы.РегламентированныйОтчет.ПустаяСсылка();
			РСВ_1Объект = УдаляемыйДокумент.ПолучитьОбъект();
			РСВ_1Объект.УстановитьПометкуУдаления(Истина);
			РСВ_1Объект.Записать(РежимЗаписиДокумента.Запись);
		ИначеЕсли ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.ОписьПачекСЗВ_6") Тогда
			Если ОписьОбъект = Неопределено Тогда
				ОписьОбъект = УдаляемыйДокумент.ПолучитьОбъект();
			КонецЕсли;		
			ОписьОбъект.УстановитьПометкуУдаления(Истина);
			ОписьОбъект.ПачкиДокументов.Очистить();
			ОписьОбъект.Записать(РежимЗаписиДокумента.Запись);
			
			ОписьПачекСЗВ = Документы.ОписьПачекСЗВ_6.ПустаяСсылка();
		ИначеЕсли ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_3") Тогда
			СтрокаСЗВ63 = СписокПачекСЗВ6_3.Найти(УдаляемыйДокумент, "ПачкаДокументов");
			Если СтрокаСЗВ63 <> Неопределено Тогда
				СписокПачекСЗВ6_3.Удалить(СписокПачекСЗВ6_3.Индекс(СтрокаСЗВ63));
			КонецЕсли;	
		
			СЗВ63Объект = УдаляемыйДокумент.ПолучитьОбъект();
			СЗВ63Объект.УстановитьПометкуУдаления(Истина);
			СЗВ63Объект.Записать(РежимЗаписиДокумента.Запись);	
		ИначеЕсли ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.РеестрСЗВ_6_2") Тогда 
			
			СтрокаСЗВ = СписокПачекСЗВ.Найти(УдаляемыйДокумент, "ПачкаДокументов");
			Если СтрокаСЗВ <> Неопределено Тогда
				СписокПачекСЗВ.Удалить(СписокПачекСЗВ.Индекс(СтрокаСЗВ));
			КонецЕсли;	
			
			СтрокаСЗВОписи = ОписьОбъект.ПачкиДокументов.Найти(УдаляемыйДокумент, "ПачкаДокументов");
			Если СтрокаСЗВОписи <> Неопределено Тогда
				ОписьОбъект.ПачкиДокументов.Удалить(ОписьОбъект.ПачкиДокументов.Индекс(СтрокаСЗВОписи));
			КонецЕсли;
		
			СЗВ6Объект = УдаляемыйДокумент.ПолучитьОбъект();
			СЗВ6Объект.УстановитьПометкуУдаления(Истина);
			СЗВ6Объект.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ОписьОбъект <> Неопределено Тогда
		ОписьОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьВТССотрудникамиКомплектаПоКатегориям(МенеджерВременныхТаблиц, СписокПачек, МассивФизЛиц = Неопределено)Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	СформироватьВТСДаннымиДокументовКомплекта(МенеджерВременныхТаблиц, СписокПачек, МассивФизЛиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.КатегорияЗастрахованныхЛиц,
	|	МАКСИМУМ(ДанныеДокументов.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТДокументыПоКатегориямСотрудников
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.КатегорияЗастрахованныхЛиц,
	|	МИНИМУМ(ДанныеДокументов.НомерСтроки) КАК НомерСтроки,
	|	СУММА(ДанныеДокументов.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(ДанныеДокументов.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(ДанныеДокументов.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(ДанныеДокументов.УплаченоНакопительная) КАК УплаченоНакопительная
	|ПОМЕСТИТЬ ВТСтрокиСотрудниковПоКатегориям
	|ИЗ
	|	ВТДокументыПоКатегориямСотрудников КАК ДокументыПоКатегориямСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО ДокументыПоКатегориямСотрудников.Сотрудник = ДанныеДокументов.Сотрудник
	|			И ДокументыПоКатегориямСотрудников.КатегорияЗастрахованныхЛиц = ДанныеДокументов.КатегорияЗастрахованныхЛиц
	|			И ДокументыПоКатегориямСотрудников.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.НомерСтроки,
	|	ДанныеДокументов.КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТДублиСотрудниковПоКатегориям
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтрокиСотрудниковПоКатегориям КАК СтрокиСотрудниковПоКатегориям
	|		ПО ДанныеДокументов.Сотрудник = СтрокиСотрудниковПоКатегориям.Сотрудник
	|			И ДанныеДокументов.КатегорияЗастрахованныхЛиц = СтрокиСотрудниковПоКатегориям.КатегорияЗастрахованныхЛиц
	|			И (ВЫБОР
	|				КОГДА ДанныеДокументов.Ссылка = СтрокиСотрудниковПоКатегориям.Ссылка
	|					ТОГДА ДанныеДокументов.НомерСтроки <> СтрокиСотрудниковПоКатегориям.НомерСтроки
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)";
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СформироватьВТСДаннымиДокументовКомплекта(МенеджерВременныхТаблиц, СписокПачек, МассивФизЛиц = Неопределено)Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокПачек", СписокПачек);
	Запрос.УстановитьПараметр("МассивФизЛиц", МассивФизЛиц);
	Запрос.УстановитьПараметр("НеОтбратьПоСотрудникам", МассивФизЛиц = Неопределено);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.НомерСтроки,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ФиксСтаж,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ФиксНачисления,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ФиксУплата,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоУплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоУплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоначисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.АдресДляИнформирования,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.АдресДляИнформированияПредставление
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК ПачкаДокументовСЗВ_6_1Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка В(&СписокПачек)
	|	И (ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник В (&МассивФизЛиц)
	|			ИЛИ &НеОтбратьПоСотрудникам)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка,
	|	РеестрСЗВ_6_2Сотрудники.НомерСтроки,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ФиксСтаж,
	|	РеестрСЗВ_6_2Сотрудники.ФиксНачисления,
	|	РеестрСЗВ_6_2Сотрудники.ФиксУплата,
	|	РеестрСЗВ_6_2Сотрудники.ДоУплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ДоУплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформированияПредставление
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка В(&СписокПачек)
	|	И (РеестрСЗВ_6_2Сотрудники.Сотрудник В (&МассивФизЛиц)
	|			ИЛИ &НеОтбратьПоСотрудникам)";
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура ЗафиксироватьСтрокиСтажаПоСотруднику(Сотрудник, ТипСведенийСЗВ, ПериодРасчета)Экспорт
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
		
	МассивФизЛиц =  Новый Массив;
	МассивФизЛиц.Добавить(Сотрудник);
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		СписокПачек = МассивСсылокСЗВ(ТипСведенийСЗВ);
	Иначе	
		МассивПериодов = Новый Массив;
		МассивПериодов.Добавить(ПериодРасчета);
		СписокПачек = МассивСсылокСЗВ(ТипСведенийСЗВ, МассивПериодов);
	КонецЕсли;	

	СформироватьВТСДаннымиДокументовКомплекта(МенеджерВТ, СписокПачек, МассивФизЛиц);	

    Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.НомерСтроки
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Пока Выборка.Следующий() Цикл
			СтрокаСотрудник = ДокументОбъект.Сотрудники.Найти(Выборка.НомерСтроки, "НомерСтроки");
			СтрокаСотрудник.ФиксСтаж = Истина;
		КонецЦикла;
		ДокументОбъект.Записать();
	КонецЦикла;	
	
КонецПроцедуры	


Процедура ПоместитьОписанияФайловКомплектаВМассив(МассивОписанийФайловВыгрузки, УникальныйИдентификатор)Экспорт
	СоответсвиеТиповСсылокТипамФайловВыгрузки = ПерсонифицированныйУчет.СоответсвиеТиповСсылокТипамФайловВыгрузки();
	
	Если Не ОписьПачекСЗВ.Пустая() Тогда
		СсылкаНаДвоичныеДанныеФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиАДВ62(ОписьПачекСЗВ);
		
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка",  ОписьПачекСЗВ);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки",  СсылкаНаДвоичныеДанныеФайла);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОписьПачекСЗВ, "ИмяФайлаДляПФР"));
		ТипФайлаВыгрузки = СоответсвиеТиповСсылокТипамФайловВыгрузки.Получить(ТипЗнч(ОписьПачекСЗВ));
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  ?(ТипФайлаВыгрузки = Неопределено, "", ТипФайлаВыгрузки));
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки",  КодировкаТекста.ANSI);
		
		МассивОписанийФайловВыгрузки.Добавить(ОписаниеФайла);
	КонецЕсли;	
	
	Для Каждого ОписаниеПачки Из СписокПачекСЗВ Цикл
		Если ТипЗнч(ОписаниеПачки.ПачкаДокументов) = Тип("ДокументСсылка.РеестрСЗВ_6_2") Тогда
			СсылкаНаДвоичныеДанныеФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВ62(ОписаниеПачки.ПачкаДокументов);
		ИначеЕсли ТипЗнч(ОписаниеПачки.ПачкаДокументов) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4") Тогда
			СсылкаНаДвоичныеДанныеФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВ64(ОписаниеПачки.ПачкаДокументов);
		ИначеЕсли ТипЗнч(ОписаниеПачки.ПачкаДокументов) = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда
			СсылкаНаДвоичныеДанныеФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиРаздела6РСВ1(ОписаниеПачки.ПачкаДокументов);
		Иначе
			Продолжить;
		КонецЕсли;
			
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка", ОписаниеПачки.ПачкаДокументов);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки", СсылкаНаДвоичныеДанныеФайла);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОписаниеПачки.ПачкаДокументов, "ИмяФайлаДляПФР"));
		ТипФайлаВыгрузки = СоответсвиеТиповСсылокТипамФайловВыгрузки.Получить(ТипЗнч(ОписаниеПачки.ПачкаДокументов));
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  ?(ТипФайлаВыгрузки = Неопределено, "", ТипФайлаВыгрузки));
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки",  КодировкаТекста.ANSI);

		МассивОписанийФайловВыгрузки.Добавить(ОписаниеФайла);	
	КонецЦикла;
	
	Для Каждого ОписаниеПачки Из СписокПачекСЗВ6_3 Цикл
		СсылкаНаДвоичныеДанныеФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВ63(ОписаниеПачки.ПачкаДокументов);
			
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка",  ОписаниеПачки.ПачкаДокументов);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки", СсылкаНаДвоичныеДанныеФайла);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОписаниеПачки.ПачкаДокументов, "ИмяФайлаДляПФР"));
		ТипФайлаВыгрузки = СоответсвиеТиповСсылокТипамФайловВыгрузки.Получить(ТипЗнч(ОписаниеПачки.ПачкаДокументов));
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  ?(ТипФайлаВыгрузки = Неопределено, "", ТипФайлаВыгрузки));
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки",  КодировкаТекста.ANSI);

		МассивОписанийФайловВыгрузки.Добавить(ОписаниеФайла);	
	КонецЦикла;
	
	Если (Не РСВ_1.Пустая()) И (Не ПустаяСтрока(АдресФайлаВыгрузкиРСВ)) Тогда
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка", РСВ_1);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки",  АдресФайлаВыгрузкиРСВ);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки",  ИмяФайлаВыгрузкиРСВ);
		
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  "ПачкаРСВ");
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки",  "windows-1251");

		МассивОписанийФайловВыгрузки.Добавить(ОписаниеФайла);	
		
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьДокументыВКомплект(ДобавляемыеДокументы)Экспорт
	ИзменилсяСоставОписи = Ложь;
	Для Каждого ДобавляемыйДокумент Из ДобавляемыеДокументы Цикл
		Если ТипЗнч(ДобавляемыйДокумент) = Тип("ДокументСсылка.ОписьПачекСЗВ_6") И ОписьПачекСЗВ.Пустая() Тогда
			ОписьПачекСЗВ = ДобавляемыйДокумент;
		ИначеЕсли ТипЗнч(ДобавляемыйДокумент) = Тип("ДокументСсылка.РеестрСЗВ_6_2")
			И СписокПачекСЗВ.Найти(ДобавляемыйДокумент, "ПачкаДокументов") = Неопределено Тогда
			
			СтрокаСпискаДокументов = СписокПачекСЗВ.Добавить();
			СтрокаСпискаДокументов.ПачкаДокументов = ДобавляемыйДокумент;
			ИзменилсяСоставОписи = Истина;
		ИначеЕсли ТипЗнч(ДобавляемыйДокумент) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_3")
			И СписокПачекСЗВ6_3.Найти(ДобавляемыйДокумент, "ПачкаДокументов") = Неопределено Тогда
			
			СтрокаСпискаДокументов = СписокПачекСЗВ6_3.Добавить();
			СтрокаСпискаДокументов.ПачкаДокументов = ДобавляемыйДокумент;			
		КонецЕсли;	
	КонецЦикла;	
	
	Если ИзменилсяСоставОписи Тогда
		ОписьОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
		
		ОписьОбъект.ПачкиДокументов.Очистить();
		
		Для Каждого ПачкаСЗВ Из СписокПачекСЗВ Цикл
			СтрокаОписи = ОписьОбъект.ПачкиДокументов.Добавить();
			СтрокаОписи.ПачкаДокументов = ПачкаСЗВ.ПачкаДокументов;
		КонецЦикла;
		
		ОписьОбъект.Записать();
		
	КонецЕсли;
	
	Записать();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция СформироватьКорректирующиеПачки(ОписьПачекСЗВОбъект, КорректируемыйПериод, МассивПачек, МассивФизЛиц, УчитыватьИсправления = Ложь, ЗаменятьСуществующиеПачки = Истина)
	Возврат  УчетСтраховыхВзносов.СформироватьПачкиДокументовСЗВ(ОписьПачекСЗВОбъект, КорректируемыйПериод, УчитыватьИсправления, ЗаменятьСуществующиеПачки, МассивПачек, МассивФизЛиц);																	 																	  
КонецФункции

Процедура ЗаписатьДокументыКомплекта(РежимЗаписи, ДокументПринятВПФР = Ложь)	
	Для Каждого ОписаниеПачкиСЗВ6 Из СписокПачекСЗВ Цикл
		Если ЗначениеЗаполнено(ОписаниеПачкиСЗВ6.ПачкаДокументов) Тогда
			ДокументОбъект = ОписаниеПачкиСЗВ6.ПачкаДокументов.ПолучитьОбъект();
			ДокументОбъект.ДокументПринятВПФР = ДокументПринятВПФР;
			ДокументОбъект.Записать(РежимЗаписи);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого ОписаниеПачкиСЗВ6_3 Из СписокПачекСЗВ6_3 Цикл
		Если ЗначениеЗаполнено(ОписаниеПачкиСЗВ6_3.ПачкаДокументов) Тогда
			ДокументОбъект = ОписаниеПачкиСЗВ6_3.ПачкаДокументов.ПолучитьОбъект();
			ДокументОбъект.ДокументПринятВПФР = ДокументПринятВПФР;
			ДокументОбъект.Записать(РежимЗаписи);
		КонецЕсли;	
	КонецЦикла;	
	
	
	Если ЗначениеЗаполнено(ОписьПачекСЗВ) Тогда
		ДокументОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
		ДокументОбъект.ДокументПринятВПФР = ДокументПринятВПФР;
		ДокументОбъект.Записать(РежимЗаписи);
	КонецЕсли;
	
КонецПроцедуры	

Функция СписокКорректируемыхПериодов()
	МассивСсылок = Новый Массив;
	Для Каждого ОписаниеДокумента Из СписокПачекСЗВ Цикл
		МассивСсылок.Добавить(ОписаниеДокумента.ПачкаДокументов);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрСЗВ_6_2.КорректируемыйПериод
	|ИЗ
	|	Документ.РеестрСЗВ_6_2 КАК РеестрСЗВ_6_2
	|ГДЕ
	|	РеестрСЗВ_6_2.Ссылка В(&МассивСсылок)
	|	И РеестрСЗВ_6_2.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассвиПериодов = Новый Массив;
	
	Пока Выборка.Следующий() Цикл 
		МассвиПериодов.Добавить(Выборка.КорректируемыйПериод);		
	КонецЦикла;	
	
	Возврат МассвиПериодов;
	
КонецФункции

Функция МассивФизЛицИзПачек(СписокДокументов)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК ПачкаДокументовСЗВ_6_1Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка В (&СписокДокументов)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка В(&СписокДокументов)";
	
	МассивФизЛиц = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивФизЛиц.Добавить(Выборка.Сотрудник);
	КонецЦикла;
	
	Возврат МассивФизЛиц;
КонецФункции

Функция НовыйОписьАДВ(Организация, ОтчетныйПериод)
	ОписьОбъект = Документы.ОписьПачекСЗВ_6.СоздатьДокумент();
	ОписьОбъект.УстановитьСсылкуНового(Документы.ОписьПачекСЗВ_6.ПолучитьСсылку());
	ОписьОбъект.ОтчетныйПериод = ОтчетныйПериод;
	ОписьОбъект.Организация = Организация;
	ОписьОбъект.Дата = ТекущаяДатаСеанса();
	УчетСтраховыхВзносов.ПроставитьНомерПачки(ОписьОбъект);
	ОписьОбъект.УстановитьНовыйНомер();
	
	Возврат ОписьОбъект;
КонецФункции	

Функция НовыйПачкаРазделов6(Организация, ОтчетныйПериод)
	ОписьОбъект = Документы.ПачкаРазделов6РасчетаРСВ_1.СоздатьДокумент();
	ОписьОбъект.УстановитьСсылкуНового(Документы.ПачкаРазделов6РасчетаРСВ_1.ПолучитьСсылку());
	ОписьОбъект.ОтчетныйПериод = ОтчетныйПериод;
	ОписьОбъект.Организация = Организация;
	ОписьОбъект.Дата = ТекущаяДатаСеанса();
	ОписьОбъект.УстановитьНовыйНомер();
	
	Возврат ОписьОбъект;
КонецФункции

Процедура ЗаполнитьОтветственныхЛицДокумента(ДокументОбъект, ДанныеОписи = Неопределено)
	Если ДанныеОписи = Неопределено Тогда
		ДанныеОписи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОписьПачекСЗВ, "Ответственный,Руководитель,ДолжностьРуководителя");
	КонецЕсли;
	
	ДокументОбъект.Ответственный = ДанныеОписи.Ответственный;
	ДокументОбъект.Руководитель = ДанныеОписи.Руководитель;
	ДокументОбъект.ДолжностьРуководителя = ДанныеОписи.ДолжностьРуководителя;	
КонецПроцедуры	

Процедура ПерераспределитьВзносыЗаПериод(КорректирующиеСведения, ПериодРасчета, СравниватьСТекущимиДанными = Ложь, ДанныеИзменены = Ложь)	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	МассивПачек = МассивСсылокСЗВ();
		
	ДатаАктуальности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОписьПачекСЗВ, "Дата");
		
	УчетСтраховыхВзносов.СформироватьВТСДаннымиОВзносахПоКатегориям(МенеджерВТ, Организация, ПериодРасчета, ДатаАктуальности, КорректирующиеСведения, МассивПачек, Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Если КорректирующиеСведения Тогда
		МассивПериодов = Новый Массив;
		МассивПериодов.Добавить(ПериодРасчета);
		МассивПачекПериода = МассивСсылокСЗВ(Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ, МассивПериодов);
	Иначе
		МассивПачекПериода = МассивСсылокСЗВ(Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);	
	КонецЕсли;	
	
	СформироватьВТССотрудникамиКомплектаПоКатегориям(МенеджерВТ, МассивПачекПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтрокиСотрудниковПоКатегориям.Сотрудник КАК ФизическоеЛицо,
	|	ЕСТЬNULL(ДанныеОВзносахВПФР.УплаченоНакопительная, 0) КАК УплаченоНакопительная,
	|	ЕСТЬNULL(ДанныеОВзносахВПФР.УплаченоСтраховая, 0) КАК УплаченоСтраховая,
	|	ЕСТЬNULL(ДанныеОВзносахВПФР.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ДанныеОВзносахВПФР.НачисленоНакопительная, 0) КАК НачисленоНакопительная,
	|	ЕСТЬNULL(ДанныеОВзносахВПФР.ДоначисленоСтраховая, 0) КАК ДоначисленоСтраховая,
	|	ЕСТЬNULL(ДанныеОВзносахВПФР.ДоначисленоНакопительная, 0) КАК ДоначисленоНакопительная,
	|	ЕСТЬNULL(ДанныеОВзносахВПФР.ДоуплаченоСтраховая, 0) КАК ДоуплаченоСтраховая,
	|	ЕСТЬNULL(ДанныеОВзносахВПФР.ДоуплаченоНакопительная, 0) КАК ДоуплаченоНакопительная,
	|	СтрокиСотрудниковПоКатегориям.Ссылка КАК Ссылка,
	|	СтрокиСотрудниковПоКатегориям.НомерСтроки,
	|	ЕСТЬNULL(ДанныеОВзносахВПФР.ФиксУплата, ЛОЖЬ) КАК ФиксУплата,
	|	ЕСТЬNULL(ДанныеОВзносахВПФР.ФиксНачисления, ЛОЖЬ) КАК ФиксНачисления 
	|ИЗ
	|	ВТСтрокиСотрудниковПоКатегориям КАК СтрокиСотрудниковПоКатегориям
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТДанныеОВзносахВПФР КАК ДанныеОВзносахВПФР 
	|		ПО ДанныеОВзносахВПФР.ФизическоеЛицо = СтрокиСотрудниковПоКатегориям.Сотрудник
	|			И ДанныеОВзносахВПФР.КатегорияЗастрахованныхЛиц = СтрокиСотрудниковПоКатегориям.КатегорияЗастрахованныхЛиц
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДублиСотрудниковПоКатегориям.Сотрудник,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ДублиСотрудниковПоКатегориям.Ссылка,
	|	ДублиСотрудниковПоКатегориям.НомерСтроки,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	ВТДублиСотрудниковПоКатегориям КАК ДублиСотрудниковПоКатегориям
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Пока Выборка.Следующий() Цикл
			СтрокаСотрудник = ДокументОбъект.Сотрудники.Найти(Выборка.НомерСтроки, "НомерСтроки");
			ЗаполнитьЗначенияСвойств(СтрокаСотрудник, Выборка);
		КонецЦикла;
		
		ДокументОбъект.Записать();
	КонецЦикла;	
КонецПроцедуры

Функция МассивСсылокСЗВ(ТипСвденийСЗВ = Неопределено, СписокКорректируемыхПериодов = Неопределено)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ОписьПачекСЗВ);
	Запрос.УстановитьПараметр("ТипСведений", ТипСвденийСЗВ);
	Запрос.УстановитьПараметр("СписокКорректируемыхПериодов", СписокКорректируемыхПериодов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов КАК Ссылка
	|ИЗ
	|	Документ.ОписьПачекСЗВ_6.ПачкиДокументов КАК КомплектыОтчетностиПерсучетаСписокПачекСЗВ
	|ГДЕ
	|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.Ссылка = &Ссылка
	|	И &Условие";
	
	СтрокаУсловие = "";
	Если ТипСвденийСЗВ <> Неопределено Тогда
		СтрокаУсловие = СтрокаУсловие + " И КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов.ТипСведенийСЗВ = &ТипСведений";
	КонецЕсли;
	
	Если СписокКорректируемыхПериодов <> Неопределено Тогда 
		СтрокаУсловие = СтрокаУсловие + " И КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов.КорректируемыйПериод В (&СписокКорректируемыхПериодов)";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &Условие", СтрокаУсловие);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивСсылок = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		МассивСсылок.Добавить(Выборка.Ссылка);		
	КонецЦикла;	
	
	Возврат МассивСсылок;
	
КонецФункции	

Функция СвойствоСуществует(Дерево, Знач ИмяСвойства)

	ПозицияРазделителя = Найти(ИмяСвойства, "/");
	
	Если ПозицияРазделителя = 0 Тогда
	
		ТекущееИмяСвойство = ИмяСвойства;
		
		ИмяСвойства = "";
	
	Иначе
	
		ТекущееИмяСвойство = Лев(ИмяСвойства, ПозицияРазделителя - 1);
		
		ИмяСвойства = Сред(ИмяСвойства, ПозицияРазделителя + 1);
	
	КонецЕсли; 
	
	ТекущееСвойство = Дерево.Свойства().Получить(ТекущееИмяСвойство);
	
	Если ТекущееСвойство = Неопределено Тогда
	
		Возврат Ложь;
		
	ИначеЕсли СтрДлина(ИмяСвойства) = 0 Тогда
		
		Возврат Истина;
		
	КонецЕсли; 
	
	Возврат СвойствоСуществует(Дерево.ПолучитьXDTO(ТекущееСвойство), ИмяСвойства);

КонецФункции 


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	НомерКомплекта = 0;
	
	ОписьОбъект = ОбъектКопирования.ОписьПачекСЗВ.ПолучитьОбъект().СкопироватьОписьСВходящимиДокументами();
	
	СписокПачекСЗВ.Очистить();
	
	Для Каждого ПачкаОписи Из ОписьОбъект.ПачкиДокументов Цикл
		ПачкаКомплекта = СписокПачекСЗВ.Добавить();
		ПачкаКомплекта.ПачкаДокументов = ПачкаОписи.ПачкаДокументов;
	КонецЦикла;
	
	ОписьПачекСЗВ = ОписьОбъект.Ссылка;
	
	СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.КомплектСформированНоНеОтправлен;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияКомплектаРазнесеныПоЛицевымСчетам Тогда
		Справочники.КомплектыОтчетностиПерсучета.УстановитьСостояниеПредыдущегоПринятогоКомплекта(Организация, ОтчетныйПериод, Ссылка);
	КонецЕсли;	
	Если ЭтоНовый() Тогда
		ПредыдущееСостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.КомплектНеСформирован;
	Иначе
		ПредыдущееСостояниеКомплекта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "СостояниеКомплекта");
	КонецЕсли;	
	
	Если НомерКомплекта = 0 Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МАКСИМУМ(КомплектыОтчетностиПерсучета.НомерКомплекта) КАК НомерКомплекта
		|ИЗ
		|	Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
		|ГДЕ
		|	КомплектыОтчетностиПерсучета.Организация = &Организация
		|	И КомплектыОтчетностиПерсучета.ОтчетныйПериод = &ОтчетныйПериод";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			НомерКомплекта = ?(Выборка.НомерКомплекта = Null, 0, Выборка.НомерКомплекта) + 1;
		Иначе 	
			НомерКомплекта = 1;
		КонецЕсли;
	КонецЕсли;
	
	Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Комплект №%1 за %2'"),
																			НомерКомплекта,
																			УчетСтраховыхВзносов.ПредставлениеОтчетногоПериода(ОтчетныйПериод, Истина));
																				

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДокументПринятВПРФ = Ложь;
	ЗаписыватьДокументыОписи = Ложь;
	Если ПредыдущееСостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияКомплектаРазнесеныПоЛицевымСчетам
		И СостояниеКомплекта <>  Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияКомплектаРазнесеныПоЛицевымСчетам Тогда
		
		РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;
		ЗаписыватьДокументыОписи = Истина;
		
	ИначеЕсли ПредыдущееСостояниеКомплекта <> Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияКомплектаРазнесеныПоЛицевымСчетам	
		И СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияКомплектаРазнесеныПоЛицевымСчетам Тогда
		
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	    ДокументПринятВПРФ = Истина;
		ЗаписыватьДокументыОписи = Истина;
		
		Справочники.КомплектыОтчетностиПерсучета.УстановитьСостояниеНеОтправленныхКомплектов(Организация, ОтчетныйПериод);		
	КонецЕсли;	

	Если ЗаписыватьДокументыОписи Тогда
		ЗаписатьДокументыКомплекта(РежимЗаписи, ДокументПринятВПРФ);
	КонецЕсли;	
КонецПроцедуры

#КонецЕсли
