
#Область ПеременныеФормы

&НаКлиенте
Перем УстановкаОсновногоДоговораВыполнена; // Признак успешной установки основного договора из формы контрагента

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат; // Возврат при получении формы для анализа.
	КонецЕсли;
	
	Параметры.Отбор.Свойство("Владелец", КонтрагентВладелец);
	
	Если ЗначениеЗаполнено(КонтрагентВладелец) Тогда
		// Контекстное открытие формы с отбором по контрагенту
	
		АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru='Договоры с'") + " """ + КонтрагентВладелец + """";
		
		РеквизитыКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КонтрагентВладелец,
			"Покупатель, Поставщик, ПрочиеОтношения, ДоговорПоУмолчанию");
		
		Элементы.ВидЦен.Видимость				= РеквизитыКонтрагента.Покупатель Или РеквизитыКонтрагента.ПрочиеОтношения;
		Элементы.ВидСкидкиНаценки.Видимость		= РеквизитыКонтрагента.Покупатель Или РеквизитыКонтрагента.ПрочиеОтношения;
		Элементы.ВидЦенКонтрагента.Видимость	= РеквизитыКонтрагента.Поставщик Или РеквизитыКонтрагента.ПрочиеОтношения;
		Элементы.СрокОплатыПокупателя.Видимость	= РеквизитыКонтрагента.Покупатель Или РеквизитыКонтрагента.ПрочиеОтношения;
		Элементы.СрокОплатыПоставщику.Видимость	= РеквизитыКонтрагента.Поставщик Или РеквизитыКонтрагента.ПрочиеОтношения;
		
		Список.Параметры.УстановитьЗначениеПараметра("Контрагент", КонтрагентВладелец);
		Список.Параметры.УстановитьЗначениеПараметра("ОсновнойДоговорКонтрагента", РеквизитыКонтрагента.ДоговорПоУмолчанию);
		
	Иначе
		// Открытие в общем режиме
	
		Список.ТекстЗапроса = ТекстЗапросаОбщегоСписка();
		Элементы.Владелец.Видимость = Истина;
		Элементы.Взаиморасчеты.Видимость = Ложь;
		
	КонецЕсли;
	
	Элементы.ИспользоватьКакОсновной.Видимость = ПравоДоступа("Редактирование", Метаданные.Справочники.Контрагенты);
	ТребуетсяКонтроль = УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов();
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Организация", "Видимость", ТребуетсяКонтроль);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВидДоговора", "Видимость", ТребуетсяКонтроль);
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ГруппаПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	УправлениеНебольшойФирмойСервер.УстановитьОтображаниеПодменюПечати(Элементы.ГруппаПодменюПечать);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УстановкаОсновногоДоговораВыполнена" Тогда
		УстановкаОсновногоДоговораВыполнена = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СтрокаГруппировкиДинамическогоСписка")
		И Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		
		Элементы.ИспользоватьКакОсновной.Доступность = Не Элементы.Список.ТекущиеДанные.ЭтоОсновнойДоговор;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользоватьКакОсновной(Команда)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
		Или Элементы.Список.ТекущиеДанные = Неопределено
		Или Элементы.Список.ТекущиеДанные.ЭтоОсновнойДоговор Тогда
		
		Возврат;
	КонецЕсли;
	
	НовыйОсновнойДоговор = Элементы.Список.ТекущиеДанные.Ссылка;
	
	// Если открыта форма контрагента, то изменение основного договора выполняем в ней
	УстановкаОсновногоДоговораВыполнена = Ложь;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Контрагент", Элементы.Список.ТекущиеДанные.Владелец);
	СтруктураПараметров.Вставить("НовыйОсновнойДоговор", НовыйОсновнойДоговор);
	
	Оповестить("УстановкаОсновногоДоговора", СтруктураПараметров, ЭтотОбъект);
	
	// Если форма контрагента закрыта, то запишем основной договор контрагента самостоятельно
	Если Не УстановкаОсновногоДоговораВыполнена Тогда
		ЗаписатьОсновнойДоговорКонтрагента(СтруктураПараметров);
	КонецЕсли;
	
	// Обновим динамический список
	Если ЗначениеЗаполнено(КонтрагентВладелец) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОсновнойДоговорКонтрагента", НовыйОсновнойДоговор);
	Иначе
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаОбщегоСписка()
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	СправочникДоговорыКонтрагентов.Ссылка,
		|	СправочникДоговорыКонтрагентов.ПометкаУдаления,
		|	СправочникДоговорыКонтрагентов.Владелец,
		|	СправочникДоговорыКонтрагентов.Родитель,
		|	СправочникДоговорыКонтрагентов.Код,
		|	СправочникДоговорыКонтрагентов.Наименование,
		|	СправочникДоговорыКонтрагентов.ВалютаРасчетов,
		|	СправочникДоговорыКонтрагентов.ДатаДоговора,
		|	СправочникДоговорыКонтрагентов.Организация,
		|	СправочникДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах,
		|	СправочникДоговорыКонтрагентов.НомерДоговора,
		|	СправочникДоговорыКонтрагентов.СрокОплатыПокупателя,
		|	СправочникДоговорыКонтрагентов.СрокОплатыПоставщику,
		|	СправочникДоговорыКонтрагентов.ВидДоговора,
		|	СправочникДоговорыКонтрагентов.ВидЦен,
		|	СправочникДоговорыКонтрагентов.ВидЦенКонтрагента,
		|	СправочникДоговорыКонтрагентов.ВидСкидкиНаценки,
		|	СправочникДоговорыКонтрагентов.БланкДоговора,
		|	СправочникДоговорыКонтрагентов.Ссылка = СправочникДоговорыКонтрагентов.Владелец.ДоговорПоУмолчанию КАК ЭтоОсновнойДоговор,
		|	СправочникДоговорыКонтрагентов.ДополнительныеРеквизиты.(
		|		Ссылка,
		|		НомерСтроки,
		|		Свойство,
		|		Значение,
		|		ТекстоваяСтрока
		|	),
		|	СправочникДоговорыКонтрагентов.РедактируемыеПараметры.(
		|		Ссылка,
		|		НомерСтроки,
		|		СсылкаБланка,
		|		Представление,
		|		Значение,
		|		Идентификатор
		|	),
		|	СправочникДоговорыКонтрагентов.ПараметрыИнфобазы.(
		|		Ссылка,
		|		НомерСтроки,
		|		СсылкаБланка,
		|		Представление,
		|		Значение,
		|		Идентификатор,
		|		Параметр
		|	)
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК СправочникДоговорыКонтрагентов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьОсновнойДоговорКонтрагента(СтруктураПараметров)
	
	КонтрагентОбъект = СтруктураПараметров.Контрагент.ПолучитьОбъект();
	КонтрагентУспешноЗаблокирован = Истина;
	
	Попытка
		КонтрагентОбъект.Заблокировать();
	Исключение
		
		КонтрагентУспешноЗаблокирован = Ложь;
		
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Не удалось заблокировать контрагента: %1, для изменения основного договора, по причине:
				|%2'", Метаданные.ОсновнойЯзык.КодЯзыка), 
				СтруктураПараметров.Контрагент, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Предупреждение,, КонтрагентОбъект, ОписаниеОшибки());
		
	КонецПопытки;
	
	// Если удалось заблокировать, изменим договор по умолчанию у контрагента
	Если КонтрагентУспешноЗаблокирован Тогда
		КонтрагентОбъект.ДоговорПоУмолчанию = СтруктураПараметров.НовыйОсновнойДоговор;
		КонтрагентОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗамерыПроизводительности

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "СозданиеФормы" + РаботаСФормойДокументаКлиентСервер.ПолучитьИмяФормыСтрокой(ЭтотОбъект.ИмяФормы));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "ОткрытиеФормы" + РаботаСФормойДокументаКлиентСервер.ПолучитьИмяФормыСтрокой(ЭтотОбъект.ИмяФормы));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти