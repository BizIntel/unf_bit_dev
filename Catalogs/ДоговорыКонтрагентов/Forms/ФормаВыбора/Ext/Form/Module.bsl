
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("КонтролироватьВыборДоговора", КонтролироватьВыборДоговора);
	Параметры.Свойство("Организация"  , Организация);
	Параметры.Свойство("Контрагент"   , Контрагент);
	Параметры.Свойство("ВидыДоговоров", ВидыДоговоров);
	
	Если Не УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов() Тогда
		Элементы.СписокОрганизация.Видимость = Ложь;
		КонтролироватьСоответствиеДокументу = Ложь;
	Иначе
		КонтролироватьСоответствиеДокументу = КонтролироватьВыборДоговора;
	КонецЕсли;
	
	УстановитьОтборИУсловноеОформление();
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	УправлениеНебольшойФирмойСервер.УстановитьОтображаниеПодменюПечати(Элементы.ГруппаПодменюПечать);
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ТекстВопроса = "";
	Если Не ПроверитьСоответствиеДоговораУсловиямДокумента(КонтролироватьСоответствиеДокументу, ТекстВопроса, Значение, Организация, Контрагент, ВидыДоговоров) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыВопроса = Новый Структура;
		ПараметрыВопроса.Вставить("Значение", Значение);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("СписокВыборЗначенияЗавершение", ЭтотОбъект, ПараметрыВопроса);
		ТекстВопроса = ТекстВопроса + НСтр("ru = '
			|
			|Выбрать другой договор?'");
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		ОповеститьОВыборе(ДополнительныеПараметры.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если КонтролироватьВыборДоговора
		И ЗначениеЗаполнено(Контрагент)
		И ЗначениеЗаполнено(Организация)
		И ВидыДоговоров.Количество() > 0 Тогда
		
		Отказ = Истина;
		
		ДанныеЗаполненияДоговора = Новый Структура;
		ДанныеЗаполненияДоговора.Вставить("Владелец", Контрагент);
		ДанныеЗаполненияДоговора.Вставить("Организация", Организация);
		ДанныеЗаполненияДоговора.Вставить("ВидДоговора", ВидыДоговоров[0].Значение);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ДанныеЗаполненияДоговора);
		
		ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", ПараметрыФормы, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Устанавливает отбор и условное оформление списка, если у контрагента установлен признак ведения расчетов по договорам.
//
&НаСервере
Процедура УстановитьОтборИУсловноеОформление()
	
	СписокУдаляемыхЭлементов = Новый СписокЗначений;
	Для каждого ЭлементУсловногоОформления Из Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы Цикл
		Если ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Предустановленный"
			И ЭлементУсловногоОформления.Представление = "Не соответствуют условиям документа" Тогда
			СписокУдаляемыхЭлементов.Добавить(ЭлементУсловногоОформления);
		КонецЕсли;
	КонецЦикла;
	Для каждого Элемент Из СписокУдаляемыхЭлементов Цикл
		Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Удалить(Элемент.Значение);
	КонецЦикла;
	
	Если Не КонтролироватьВыборДоговора Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(Список,"Владелец",Параметры.Контрагент);
	
	Если Не КонтролироватьСоответствиеДокументу Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементУсловногоОформления = Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Добавить();
	
	ГруппаИЛИ = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	ГруппаИЛИ.Использование = Истина;
	
	ЭлементОтбора = ГруппаИЛИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ЭлементОтбора.ПравоеЗначение = Организация;
	
	ЭлементОтбора = ГруппаИЛИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидДоговора");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.ПравоеЗначение = ВидыДоговоров;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ТемноСерый);
	ЭлементУсловногоОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Предустановленный";
	ЭлементУсловногоОформления.Представление = "Не соответствуют условиям документа";
	
КонецПроцедуры

// Проверяет соответствие реквизитов договора "Организация" и "ВидДоговора" переданным параметрам.
//
&НаСервереБезКонтекста
Функция ПроверитьСоответствиеДоговораУсловиямДокумента(КонтролироватьСоответствиеДокументу, ТекстСообщения, Договор, Организация, Контрагент, СписокВидовДоговора)
	
	Если Не КонтролироватьСоответствиеДокументу Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Справочники.ДоговорыКонтрагентов.ДоговорСоответствуетУсловиямДокумента(ТекстСообщения, Договор, Организация, Контрагент, СписокВидовДоговора);
	
КонецФункции

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Элементы.Список.ТекущиеДанные);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти
