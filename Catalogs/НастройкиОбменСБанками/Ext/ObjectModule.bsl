#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Только для внутреннего использования. Проверяет что настройка уникальна.
//
// Возвращаемое значение:
//  Булево - если настройка уникальна, то истина.
//
Функция НастройкаОбменаУникальна() Экспорт
	
	Если ПометкаУдаления ИЛИ Недействительна Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) ИЛИ НЕ ЗначениеЗаполнено(Банк) Тогда
		Возврат Истина
	КонецЕсли;
	
	ТекущаяНастройкаУникальна = Истина;
	
	// Проверка на уникальное использование настройки по реквизитам: Организация, Банк
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяНастройка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Банк", Банк);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НастройкиОбмена.Банк,
	|	НастройкиОбмена.Организация
	|ИЗ
	|	Справочник.НастройкиОбменСБанками КАК НастройкиОбмена
	|ГДЕ
	|	НЕ НастройкиОбмена.ПометкаУдаления
	|	И НастройкиОбмена.Организация = &Организация
	|	И НастройкиОбмена.Банк = &Банк
	|	И НастройкиОбмена.Ссылка <> &ТекущаяНастройка
	|	И НЕ НастройкиОбмена.Недействительна";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ТекущаяНастройкаУникальна = Ложь;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ШаблонСообщения = НСтр("ru = 'В информационной базе уже существует действующая настройка обмена
									|между банком %1 и организацией %2'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.Банк, Выборка.Организация);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекущаяНастройкаУникальна;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ПометкаУдаления Тогда
		ПроверяемыеРеквизиты.Очистить();
		Возврат;
	КонецЕсли;
	
	ПроверяемыеРеквизиты.Очистить();
	
	Если НЕ ОбменСБанкамиКлиентСервер.ЗаполненыРеквизитыНастройкиОбмена(ЭтотОбъект) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не НастройкаОбменаУникальна() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если ПрограммаБанка = Перечисления.ПрограммыБанка.АсинхронныйОбмен
		И НЕ ЗначениеЗаполнено(ВерсияФормата) Тогда
		ВерсияФормата = ОбменСБанкамиКлиентСервер.БазоваяВерсияФорматаАсинхронногоОбмена();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

