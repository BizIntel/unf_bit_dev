
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	ИнициализироватьТаблицыОбъекта();
	
	Если НЕ Константы.БиллингВестиУчетРасходовПоДоговорамОбслуживания.Получить() Тогда
		
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.СтраницаЗатраты.Видимость = Ложь;
		
	КонецЕсли;
	
	НезапланированныеЗатратыУстановитьВидимостьДоступностьЭлементов();
	НезапланированныеПозицииУстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ИнициализироватьТаблицыОбъекта();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыУчетНоменклатуры

&НаКлиенте
Процедура УчетНоменклатурыНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетНоменклатуры.ТекущиеДанные;
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("Номенклатура", ТекущаяСтрока.Номенклатура);
	ПолучитьДанныеСтрокиНоменклатураПриИзменении(СтруктураДанные);
	
	ТекущаяСтрока.Характеристика    = Неопределено;
	ТекущаяСтрока.ВключатьВСчет     = Истина;
	ТекущаяСтрока.ЕдиницаИзмерения  = СтруктураДанные.ЕдиницаИзмерения;
	ТекущаяСтрока.Количество        = 0;
	ТекущаяСтрока.Цена              = 0;
	ТекущаяСтрока.ПредставлениеЦены = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ПоВидуЦенДоговора");
	ТекущаяСтрока.ФормированиеЦены  = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ПоВидуЦенДоговора");
	
КонецПроцедуры

&НаКлиенте
Процедура УчетНоменклатурыВключатьВСчетПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетНоменклатуры.ТекущиеДанные;
	
	ТекущаяСтрока.Количество        = 0;
	ТекущаяСтрока.Цена              = 0;
	
	Если ТекущаяСтрока.ВключатьВСчет Тогда
		ТекущаяСтрока.ПредставлениеЦены = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ПоВидуЦенДоговора");
		ТекущаяСтрока.ФормированиеЦены  = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ПоВидуЦенДоговора");
	Иначе
		ТекущаяСтрока.ПредставлениеЦены   = Неопределено;
		ТекущаяСтрока.ФормированиеЦены    = Неопределено;
		ТекущаяСтрока.ПредставлениеВСчете = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчетНоменклатурыКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетНоменклатуры.ТекущиеДанные;
	
	Если ТекущаяСтрока.Количество = 0 Тогда
		
		ТекущаяСтрока.Цена              = 0;
		ТекущаяСтрока.ПредставлениеЦены = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ПоВидуЦенДоговора");
		ТекущаяСтрока.ФормированиеЦены  = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ПоВидуЦенДоговора");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчетНоменклатурыПредставлениеЦеныПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетНоменклатуры.ТекущиеДанные;
	
	Если ТипЗнч(ТекущаяСтрока.ПредставлениеЦены) = Тип("ПеречислениеСсылка.БиллингФормированиеЦеныНоменклатуры") Тогда
		ТекущаяСтрока.Цена = 0;
		ТекущаяСтрока.ФормированиеЦены = ТекущаяСтрока.ПредставлениеЦены;
	Иначе
		ТекущаяСтрока.Цена = ТекущаяСтрока.ПредставлениеЦены;
		ТекущаяСтрока.ФормированиеЦены = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ФиксированноеЗначение");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчетНоменклатурыПредставлениеЦеныНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"УчетНоменклатурыПредставлениеЦеныЗавершениеВыбора",
		ЭтотОбъект
	);
	
	Значения = Новый СписокЗначений;
	Значения.Добавить(ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ПоВидуЦенДоговора"));
	Значения.Добавить(ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ФиксированноеЗначение"));
	
	ПоказатьВыборИзМеню(ОписаниеОповещения, Значения, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура УчетНоменклатурыПредставлениеЦеныЗавершениеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.УчетНоменклатуры.ТекущиеДанные;
	
	Если Результат.Значение = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ФиксированноеЗначение") Тогда
		ТекущаяСтрока.ПредставлениеЦены = 0;
	Иначе
		ТекущаяСтрока.ПредставлениеЦены = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныНоменклатуры.ПоВидуЦенДоговора");
	КонецЕсли;
	
	ТекущаяСтрока.Цена = 0;
	ТекущаяСтрока.ФормированиеЦены = Результат.Значение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыУчетЗатрат

&НаКлиенте
Процедура УчетЗатратСтатьяЗатратПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетЗатрат.ТекущиеДанные;
	ТекущаяСтрока.ВключатьВСчет     = Истина;
	ТекущаяСтрока.ПредставлениеЦены = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныЗатрат.ПоСебестоимости");
	ТекущаяСтрока.ФормированиеЦены  = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныЗатрат.ПоСебестоимости");
	
КонецПроцедуры

&НаКлиенте
Процедура УчетЗатратВключатьВСчетПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетЗатрат.ТекущиеДанные;
	
	ТекущаяСтрока.Количество = 0;
	ТекущаяСтрока.Цена       = 0;
	ТекущаяСтрока.Наценка    = 0;
	
	Если ТекущаяСтрока.ВключатьВСчет Тогда
		ТекущаяСтрока.ФормированиеЦены  = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныЗатрат.ПоСебестоимости");
		ТекущаяСтрока.ПредставлениеЦены = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныЗатрат.ПоСебестоимости");
	Иначе
		ТекущаяСтрока.ФормированиеЦены    = Неопределено;
		ТекущаяСтрока.ПредставлениеВСчете = Неопределено;
		ТекущаяСтрока.ПредставлениеЦены   = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчетЗатратПредставлениеЦеныПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетЗатрат.ТекущиеДанные;
	
	Если ТипЗнч(ТекущаяСтрока.ПредставлениеЦены) = Тип("ПеречислениеСсылка.БиллингФормированиеЦеныЗатрат") Тогда
		ТекущаяСтрока.Цена = 0;
		ТекущаяСтрока.ФормированиеЦены = ТекущаяСтрока.ПредставлениеЦены;
	Иначе
		ТекущаяСтрока.Цена = ТекущаяСтрока.ПредставлениеЦены;
		ТекущаяСтрока.Наценка = 0;
		ТекущаяСтрока.ФормированиеЦены = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныЗатрат.ФиксированноеЗначение");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчетЗатратПредставлениеЦеныНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"УчетЗатратПредставлениеЦеныЗавершениеВыбора",
		ЭтотОбъект
	);
	
	Значения = Новый СписокЗначений;
	Значения.Добавить(ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныЗатрат.ПоСебестоимости"));
	Значения.Добавить(ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныЗатрат.ПоСебестоимостиСНаценкой"));
	Значения.Добавить(ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныЗатрат.ФиксированноеЗначение"));
	
	ПоказатьВыборИзМеню(ОписаниеОповещения, Значения, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура УчетЗатратПредставлениеЦеныЗавершениеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.УчетЗатрат.ТекущиеДанные;
	
	Если Результат.Значение = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныЗатрат.ПоСебестоимости")
		ИЛИ Результат.Значение = ПредопределенноеЗначение("Перечисление.БиллингФормированиеЦеныЗатрат.ПоСебестоимостиСНаценкой") Тогда
		ТекущаяСтрока.ПредставлениеЦены = Результат.Значение;
	Иначе
		ТекущаяСтрока.ПредставлениеЦены = 0;
	КонецЕсли;
	
	ТекущаяСтрока.Цена = 0;
	ТекущаяСтрока.Наценка = 0;
	ТекущаяСтрока.ФормированиеЦены = Результат.Значение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НезапланированныеПозицииЗапрещатьПриИзменении(Элемент)
	
	НезапланированныеПозицииУстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура НезапланированныеПозицииВключатьВСчетПриИзменении(Элемент)
	
	НезапланированныеПозицииУстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура НезапланированныеЗатратыЗапрещатьПриИзменении(Элемент)
	
	НезапланированныеЗатратыУстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура НезапланированныеЗатратыВключатьВСчетПриИзменении(Элемент)
	
	НезапланированныеЗатратыУстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура НезапланированныеЗатратыФормированиеЦеныПриИзменении(Элемент)
	
	НезапланированныеЗатратыУстановитьВидимостьДоступностьЭлементов();
	
	Объект.НезапланированныеЗатратыНаценка = 0;
	Объект.НезапланированныеЗатратыФиксированнаяЦена = 0;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Учет номенклатуры.
	
	// 1. не включать в счет.
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование  = Истина;
	Отбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыВключатьВСчет.ПутьКДанным);
	Отбор.ПравоеЗначение = Ложь;
	
	ОформляемоеПоле                = НовоеУсловноеОформление.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле           = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыЕдиницаИзмерения.Имя);
	ОформляемоеПоле.Использование  = Истина;
	
	ОформляемоеПоле                = НовоеУсловноеОформление.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле           = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыПредставлениеЦены.Имя);
	ОформляемоеПоле.Использование  = Истина;
	
	ОформляемоеПоле                = НовоеУсловноеОформление.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле           = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыКоличество.Имя);
	ОформляемоеПоле.Использование  = Истина;
	
	ОформляемоеПоле                = НовоеУсловноеОформление.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле           = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыПредставлениеВСчете.Имя);
	ОформляемоеПоле.Использование  = Истина;
	
	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("ТолькоПросмотр");
	Оформление.Значение      = Истина;
	Оформление.Использование = Истина;
	
	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("Текст");
	Оформление.Значение      = НСтр("ru='<..>'");
	Оформление.Использование = Истина;
	
	// 2. включать в счет.
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование  = Истина;
	Отбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыКоличество.ПутьКДанным);
	Отбор.ПравоеЗначение = 0;
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование  = Истина;
	Отбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыВключатьВСчет.ПутьКДанным);
	Отбор.ПравоеЗначение = Истина;
	
	ОформляемоеПоле                = НовоеУсловноеОформление.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле           = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыЕдиницаИзмерения.Имя);
	ОформляемоеПоле.Использование  = Истина;
	
	ОформляемоеПоле                = НовоеУсловноеОформление.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле           = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыПредставлениеЦены.Имя);
	ОформляемоеПоле.Использование  = Истина;
	
	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("ТолькоПросмотр");
	Оформление.Значение      = Истина;
	Оформление.Использование = Истина;
	
	// 3. если выбрана фиксированная цена, то включаем отметку незаполненного.
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование  = Истина;
	Отбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыФормированиеЦены.ПутьКДанным);
	Отбор.ПравоеЗначение = Перечисления.БиллингФормированиеЦеныНоменклатуры.ФиксированноеЗначение;
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Отбор.Использование  = Истина;
	Отбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыПредставлениеЦены.ПутьКДанным);
	
	ОформляемоеПоле                = НовоеУсловноеОформление.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле           = Новый ПолеКомпоновкиДанных(Элементы.УчетНоменклатурыПредставлениеЦены.Имя);
	ОформляемоеПоле.Использование  = Истина;
	
	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("ОтметкаНезаполненного");
	Оформление.Значение      = Истина;
	Оформление.Использование = Истина;
	
	// Учет затрат.
	
	//1. если формирование цены затрат выполняется без наценки — колонка недостуна для редактирования.
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	
	ЗначенияПеречислений = Новый СписокЗначений;
	ЗначенияПеречислений.Добавить(Перечисления.БиллингФормированиеЦеныЗатрат.ПоСебестоимости);
	ЗначенияПеречислений.Добавить(Перечисления.БиллингФормированиеЦеныЗатрат.ФиксированноеЗначение);
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	Отбор.Использование  = Истина;
	Отбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.УчетЗатратФормированиеЦены.ПутьКДанным);
	Отбор.ПравоеЗначение = ЗначенияПеречислений;
	
	ОформляемоеПоле                = НовоеУсловноеОформление.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле           = Новый ПолеКомпоновкиДанных(Элементы.УчетЗатратНаценка.Имя);
	ОформляемоеПоле.Использование  = Истина;
	
	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("ТолькоПросмотр");
	Оформление.Значение      = Истина;
	Оформление.Использование = Истина;
	
	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("Текст");
	Оформление.Значение      = НСтр("ru='<..>'");
	Оформление.Использование = Истина;
	
	// 2. если выбрана фиксированная цена, то включаем отметку незаполненного.
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование  = Истина;
	Отбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.УчетЗатратФормированиеЦены.ПутьКДанным);
	Отбор.ПравоеЗначение = Перечисления.БиллингФормированиеЦеныЗатрат.ФиксированноеЗначение;
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Отбор.Использование  = Истина;
	Отбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.УчетЗатратПредставлениеЦены.ПутьКДанным);
	
	ОформляемоеПоле                = НовоеУсловноеОформление.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле           = Новый ПолеКомпоновкиДанных(Элементы.УчетЗатратПредставлениеЦены.Имя);
	ОформляемоеПоле.Использование  = Истина;
	
	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("ОтметкаНезаполненного");
	Оформление.Значение      = Истина;
	Оформление.Использование = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьТаблицыОбъекта()
	
	Для каждого Стр Из Объект.УчетНоменклатуры Цикл
		Если Стр.ФормированиеЦены = Перечисления.БиллингФормированиеЦеныНоменклатуры.ФиксированноеЗначение Тогда
			Стр.ПредставлениеЦены = Стр.Цена;
		Иначе
			Стр.ПредставлениеЦены = Стр.ФормированиеЦены;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Стр Из Объект.УчетЗатрат Цикл
		Если Стр.ФормированиеЦены = Перечисления.БиллингФормированиеЦеныЗатрат.ФиксированноеЗначение Тогда
			Стр.ПредставлениеЦены = Стр.Цена;
		Иначе
			Стр.ПредставлениеЦены = Стр.ФормированиеЦены;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеСтрокиНоменклатураПриИзменении(СтруктураДанные)
	
	Если СтруктураДанные.Свойство("Номенклатура") Тогда
		СтруктураДанные.Вставить("ЕдиницаИзмерения", СтруктураДанные.Номенклатура.ЕдиницаИзмерения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НезапланированныеПозицииУстановитьДоступностьЭлементов()
	
	Если Объект.НезапланированныеПозицииЗапрещать Тогда
		
		Объект.НезапланированныеПозицииВключатьВСчет = Ложь;
		Объект.НезапланированныеПозицииПредставлениеВСчете = Неопределено;
		
		Элементы.НезапланированныеПозицииВключатьВСчет.Доступность = Ложь;
		Элементы.НезапланированныеПозицииПредставлениеВСчете.Доступность = Ложь;
		
	Иначе
		
		Элементы.НезапланированныеПозицииВключатьВСчет.Доступность = Истина;
		Элементы.НезапланированныеПозицииПредставлениеВСчете.Доступность = Истина;
		
	КонецЕсли;
	
	Если НЕ Объект.НезапланированныеПозицииВключатьВСчет Тогда
		
		Объект.НезапланированныеПозицииПредставлениеВСчете = Неопределено;
		Элементы.НезапланированныеПозицииПредставлениеВСчете.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НезапланированныеЗатратыУстановитьВидимостьДоступностьЭлементов()
	
	Если Объект.НезапланированныеЗатратыЗапрещать Тогда
		
		Объект.НезапланированныеЗатратыВключатьВСчет = Ложь;
		Объект.НезапланированныеЗатратыПредставлениеВСчете = Неопределено;
		Объект.НезапланированныеЗатратыФормированиеЦены = Неопределено;
		
		Элементы.НезапланированныеЗатратыВключатьВСчет.Доступность = Ложь;
		Элементы.НезапланированныеЗатратыПредставлениеВСчете.Доступность = Ложь;
		Элементы.НезапланированныеЗатратыФормированиеЦены.Доступность = Ложь;
		
	Иначе
		
		Элементы.НезапланированныеЗатратыВключатьВСчет.Доступность = Истина;
		Элементы.НезапланированныеЗатратыПредставлениеВСчете.Доступность = Истина;
		Элементы.НезапланированныеЗатратыФормированиеЦены.Доступность = Истина;
		
	КонецЕсли;
	
	Если НЕ Объект.НезапланированныеЗатратыВключатьВСчет Тогда
		
		Объект.НезапланированныеЗатратыПредставлениеВСчете = Неопределено;
		Объект.НезапланированныеЗатратыФормированиеЦены = Неопределено;
		
		Элементы.НезапланированныеЗатратыПредставлениеВСчете.Доступность = Ложь;
		Элементы.НезапланированныеЗатратыФормированиеЦены.Доступность = Ложь;
		
	Иначе
		
		Элементы.НезапланированныеЗатратыПредставлениеВСчете.Доступность = Истина;
		Элементы.НезапланированныеЗатратыФормированиеЦены.Доступность = Истина;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НезапланированныеЗатратыФормированиеЦены) Тогда
		Если Объект.НезапланированныеЗатратыФормированиеЦены = Перечисления.БиллингФормированиеЦеныЗатрат.ПоСебестоимости Тогда
			Элементы.НезапланированныеЗатратыНаценка.Видимость = Ложь;
			Элементы.НезапланированныеЗатратыФиксированнаяЦена.Видимость = Ложь;
		ИначеЕсли Объект.НезапланированныеЗатратыФормированиеЦены = Перечисления.БиллингФормированиеЦеныЗатрат.ПоСебестоимостиСНаценкой Тогда
			Элементы.НезапланированныеЗатратыНаценка.Видимость = Истина;
			Элементы.НезапланированныеЗатратыФиксированнаяЦена.Видимость = Ложь;
		ИначеЕсли Объект.НезапланированныеЗатратыФормированиеЦены = Перечисления.БиллингФормированиеЦеныЗатрат.ФиксированноеЗначение Тогда
			Элементы.НезапланированныеЗатратыНаценка.Видимость = Ложь;
			Элементы.НезапланированныеЗатратыФиксированнаяЦена.Видимость = Истина;
		КонецЕсли;
	Иначе
		Элементы.НезапланированныеЗатратыНаценка.Видимость = Ложь;
		Элементы.НезапланированныеЗатратыФиксированнаяЦена.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
