#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьЗаписьКалендаря(Организация, СобытиеКалендаря) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаписиКалендаряПодготовкиОтчетности.Ссылка
	|ИЗ
	|	Справочник.ЗаписиКалендаряПодготовкиОтчетности КАК ЗаписиКалендаряПодготовкиОтчетности
	|ГДЕ
	|	ЗаписиКалендаряПодготовкиОтчетности.Организация = &Организация
	|	И ЗаписиКалендаряПодготовкиОтчетности.СобытиеКалендаря = &СобытиеКалендаря
	|	И НЕ ЗаписиКалендаряПодготовкиОтчетности.ПометкаУдаления");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СобытиеКалендаря", СобытиеКалендаря);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьИмяФормыПоЗадачеИСостоянию(Задача, Состояние) Экспорт
	
	Если Состояние = Перечисления.СостоянияСобытийКалендаря.НеНачато
		ИЛИ Состояние = Перечисления.СостоянияСобытийКалендаря.Заполнить
		ИЛИ Состояние = Перечисления.СостоянияСобытийКалендаря.Проверить
		ИЛИ Состояние = Перечисления.СостоянияСобытийКалендаря.Рассчитать
		ИЛИ Состояние = Перечисления.СостоянияСобытийКалендаря.Сформировать Тогда
		Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.ОписанияЗадачИСтартВыполнения";
	Иначе
		
		Если Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.АвансовыйПлатежПоУСН Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.АвансовыйПлатежПоУСН";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.ЕдиныйНалогЕНВД Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.ЕдиныйНалогЕНВД";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.НалогиСотрудников Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.НалогиСотрудников";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.ЕдиныйНалог Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.ЕдиныйНалог";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.СтраховыеВзносыИП Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.СтраховыеВзносыИП";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.СтраховыеВзносыПриДоходахСвыше300тр Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.СтраховыеВзносыПриДоходахСвыше300тр";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.ДекларацияПоУСН Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.ДекларацияПоУСН";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.ДекларацияПоЕНВД Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.ДекларацияПоЕНВД";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.ОтчетностьВПФР Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.ОтчетностьВПФР";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.Справки2НДФЛ Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.Справки2НДФЛ";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.СреднесписочнаяЧисленность Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.СведенияОСреднесписочнойЧисленности";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.Форма4ФСС Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.Форма4ФСС";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.НалогПатент Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.НалогПатент";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.ТорговыйСбор Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.ТорговыйСбор";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.Форма1Предприниматель Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.Форма1Предприниматель";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.Форма6НДФЛ Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.Форма6НДФЛ";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.СведенияОЗастрахованныхЛицах Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.СведенияОЗастрахованныхЛицах";
		ИначеЕсли Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.Декларация12 Тогда
			Возврат "Обработка.ОбработкиНалоговИОтчетности.Форма.Декларация12";
		Иначе
			Возврат "";
		КонецЕсли;
	КонецЕсли;
	
КонецФункции


#КонецОбласти

#Область ИнтерфейсКалендаряСотрудника

// Функция определяет пиктограмму для элемента записи календаря
//
// Параметры:
//  ЗаписьКалендаряПодготовкиОтчетности	 - СправочникСсылка.ЗаписьКалендаряПодготовкиОтчетности
// 
// Возвращаемое значение:
//  Картинка - пиктограмма записи календаря
//
Функция КартинкаЗаписиКалендаря(ЗаписьКалендаряПодготовкиОтчетности) Экспорт
	
	Возврат Новый Картинка;
	
КонецФункции

// Функция определяет цвет текста для элемента записи календаря
//
// Параметры:
//  ЗаписьКалендаряПодготовкиОтчетности	 - СправочникСсылка.ЗаписьКалендаряПодготовкиОтчетности
// 
// Возвращаемое значение:
//  Цвет - цвет текста записи календаря
//
Функция ЦветТекстаЗаписиКалендаря(ЗаписьКалендаряПодготовкиОтчетности) Экспорт
	
	Возврат Новый Цвет;
	
КонецФункции

// Процедура заполняет таблицу описаний расширенного ввода записи календаря
//
// Параметры:
//  ТаблицаОписаний	 - ТаблицаЗначений	 - описание колонок см. Справочник.ЗаписиКалендаряСотрудника.ПриЗаполненииРасширенногоВводаЗаписиКалендаря()
//
Процедура ПриЗаполненииРасширенногоВводаЗаписиКалендаря(ТаблицаОписаний) Экспорт
	
	// Запись календаря подготовки отчетности не редактируется пользователем
	
КонецПроцедуры

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ГруппаДел	= НСтр("ru = 'Налоги и отчетность'");
	ИмяФормы	= "Справочник.ЗаписиКалендаряПодготовкиОтчетности.Форма.КалендарьНалоговИОтчетности";
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтчетность")
		Или Не ПравоДоступа("Редактирование", Метаданные.Справочники.ЗаписиКалендаряПодготовкиОтчетности)
		Или ТекущиеДелаСервер.ДелоОтключено(ГруппаДел) Тогда
		
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ЗаписиКалендаряПодготовкиОтчетности.Завершено
	|					ИЛИ ЕСТЬNULL(КалендарьПодготовкиОтчетности.ДатаОкончанияСобытия, КалендарьПерсональныхЗадачОтчетности.ДатаОкончанияСобытия) < ДатаПервогоВходаВСистему.Значение
	|						И ЗаписиКалендаряПодготовкиОтчетности.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСобытийКалендаря.НеНачато)
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ЗаписиКалендаряПодготовкиОтчетности.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСобытийКалендаря.Завершить)
	|							ИЛИ ЗаписиКалендаряПодготовкиОтчетности.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСобытийКалендаря.Завершено)
	|							ИЛИ ЗаписиКалендаряПодготовкиОтчетности.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСобытийКалендаря.ОтчетНеСдан)
	|						ТОГДА 0
	|					КОГДА РАЗНОСТЬДАТ(&ТекущаяДата, ЕСТЬNULL(КалендарьПодготовкиОтчетности.ДатаОкончанияСобытия, КалендарьПерсональныхЗадачОтчетности.ДатаОкончанияСобытия), ДЕНЬ) <= 0
	|						ТОГДА 1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОНЕЦ) КАК ПодготовкаОтчетностиПросроченные,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаписиКалендаряПодготовкиОтчетности.Завершено
	|					ИЛИ ЕСТЬNULL(КалендарьПодготовкиОтчетности.ДатаОкончанияСобытия, КалендарьПерсональныхЗадачОтчетности.ДатаОкончанияСобытия) < ДатаПервогоВходаВСистему.Значение
	|						И ЗаписиКалендаряПодготовкиОтчетности.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСобытийКалендаря.НеНачато)
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ЕСТЬNULL(КалендарьПодготовкиОтчетности.ДатаНачалаИнформирования, КалендарьПерсональныхЗадачОтчетности.ДатаНачалаИнформирования) > &ТекущаяДата
	|							И ЗаписиКалендаряПодготовкиОтчетности.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСобытийКалендаря.НеНачато)
	|						ТОГДА 0
	|					ИНАЧЕ ВЫБОР
	|							КОГДА РАЗНОСТЬДАТ(&ТекущаяДата, ЕСТЬNULL(КалендарьПодготовкиОтчетности.ДатаОкончанияСобытия, КалендарьПерсональныхЗадачОтчетности.ДатаОкончанияСобытия), ДЕНЬ) > 0
	|								ТОГДА 1
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОНЕЦ) КАК ПодготовкаОтчетностиОжидаютВыполнения
	|ИЗ
	|	Справочник.ЗаписиКалендаряПодготовкиОтчетности КАК ЗаписиКалендаряПодготовкиОтчетности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО (Организации.Ссылка = ЗаписиКалендаряПодготовкиОтчетности.Организация)
	|			И (НЕ Организации.ПометкаУдаления)
	|			И (Организации.ИспользуетсяОтчетность)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КалендарьПодготовкиОтчетности КАК КалендарьПодготовкиОтчетности
	|		ПО ЗаписиКалендаряПодготовкиОтчетности.СобытиеКалендаря = КалендарьПодготовкиОтчетности.Ссылка
	|			И (НЕ КалендарьПодготовкиОтчетности.ПометкаУдаления)
	|			И (НЕ ЗаписиКалендаряПодготовкиОтчетности.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КалендарьПерсональныхЗадачОтчетности КАК КалендарьПерсональныхЗадачОтчетности
	|		ПО ЗаписиКалендаряПодготовкиОтчетности.СобытиеКалендаря = КалендарьПерсональныхЗадачОтчетности.Ссылка
	|			И (НЕ КалендарьПерсональныхЗадачОтчетности.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ДатаПервогоВходаВСистему КАК ДатаПервогоВходаВСистему
	|		ПО (ИСТИНА)";
	
	
	МассивРасчетныхЗадач = Справочники.ЗадачиКалендаряПодготовкиОтчетности.ПолучитьМассивРасчетныхЗадач();
	Запрос.УстановитьПараметр("МассивРасчетныхЗадач", МассивРасчетныхЗадач);
	
	ДанныеДел = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор	 = "ПодготовкаОтчетностиПросроченные";
	Дело.ЕстьДела		= ДанныеДел.ПодготовкаОтчетностиПросроченные > 0;
	Дело.Важное			= Истина;
	Дело.Представление	= НСтр("ru = 'Просроченные'");
	Дело.Количество		= ДанныеДел.ПодготовкаОтчетностиПросроченные;
	Дело.Форма			= ИмяФормы;
	Дело.ПараметрыФормы	= Новый Структура("КлючНазначенияИспользования,ТекущиеДела,Просроченные", "Просроченные");
	Дело.Владелец		= ГруппаДел;
	Дело.Подсказка		= "";
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор	= "ПодготовкаОтчетностиОжидаютВыполнения";
	Дело.ЕстьДела		= ДанныеДел.ПодготовкаОтчетностиОжидаютВыполнения > 0;
	Дело.Важное			= Ложь;
	Дело.Представление	= НСтр("ru = 'Ожидают выполнения'");
	Дело.Количество		= ДанныеДел.ПодготовкаОтчетностиОжидаютВыполнения;
	Дело.Форма			= ИмяФормы;
	Дело.ПараметрыФормы	= Новый Структура("КлючНазначенияИспользования,ТекущиеДела,ОжидаютВыполнения", "ОжидаютВыполнения");
	Дело.Владелец		= ГруппаДел;
	Дело.Подсказка		= "";
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли