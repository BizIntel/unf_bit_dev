#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура обработчик события ОбработкаПолученияДанныхВыбора.
//
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Владелец")
		И ЗначениеЗаполнено(Параметры.Отбор.Владелец)
		И НЕ Параметры.Отбор.Владелец.ИспользоватьСерийныеНомера Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Для номенклатуры не ведется учет серийных номеров!'");
		Сообщение.Сообщить();
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПолученияДанныхВыбора()

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область ПрограммныйИнтерфейс

// Расчитывает максимальный номер серии который уже используется для вида номенклатуры
// или уже указан в ТаблицеЗначений "ТаблицаСерий"
//
// Параметры
//	ВидНоменклатуры - СправочникСсылка.ВидыНоменклатуры - вид номенклатуры, для которого ищется номер серии    
//  ТаблицаСерий  - ТаблицаЗначений - таблица значений содержащая номера серий использованных на форме
//
// Возвращаемое значение:
//   ЗначениеКодаЧислом - Число - номер серии 
//
Функция ВычислитьМаксимальныйНомерСерии(Владелец, ШаблонСерийногоНомера=Неопределено)  Экспорт 
	
	СтрокаШаблона = "";
	Если ШаблонСерийногоНомера=Неопределено ИЛИ НЕ ЗначениеЗаполнено(ШаблонСерийногоНомера) Тогда
		//8 цифр
		СтрокаШаблона = "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]";
		ШаблонСерийногоНомераСтрокой = "########";
	Иначе	
		Для н=1 По СтрДлина(ШаблонСерийногоНомера) Цикл
			симв = Сред(ШаблонСерийногоНомера, н, 1);
			Если симв=РаботаССерийнымиНомерамиКлиентСервер.СимволЧисла() Тогда
				СтрокаШаблона = СтрокаШаблона + "[0-9]";
			Иначе
				СтрокаШаблона = СтрокаШаблона + "_";
			КонецЕсли;
		КонецЦикла;
		ШаблонСерийногоНомераСтрокой = Строка(ШаблонСерийногоНомера);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =	
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СерийныеНомера.Наименование
	|ИЗ
	|	Справочник.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Владелец = &Владелец И
	|	СерийныеНомера.ПометкаУдаления = ЛОЖЬ
	|	И СерийныеНомера.Наименование ПОДОБНО """+СтрокаШаблона+"""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование УБЫВ";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если Выборка.Количество()=0 Тогда
		ОписаниеТипаЧисла = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(8, 0, ДопустимыйЗнак.Неотрицательный));
		ЗначениеКодаЧислом = ОписаниеТипаЧисла.ПривестиЗначение(Выборка.Наименование);
	Иначе
		ЗначениеКодаЧислом = СерийныйНомерЧислоПоШаблону(Выборка.Наименование, ШаблонСерийногоНомераСтрокой);
	КонецЕсли; 
	
	Возврат ЗначениеКодаЧислом;
	
КонецФункции

Функция СерийныйНомерИзЧислаПоШаблону(СерийныйНомерЧисло, ШаблонСерийногоНомераСтрокой, ДлинаЧисловойЧасти) Экспорт
	
	СерийныйНомерДополнитьНулями = Строка(СерийныйНомерЧисло);
	Для н=1 по ДлинаЧисловойЧасти - СтрДлина(СерийныйНомерЧисло) Цикл
		СерийныйНомерДополнитьНулями = "0"+СерийныйНомерДополнитьНулями;
	КонецЦикла;
	
	СерийныйНомерПоШаблону = "";
	НомерСимволаЧисла = 1;
	Для н=1 По СтрДлина(ШаблонСерийногоНомераСтрокой) Цикл
		симв = Сред(ШаблонСерийногоНомераСтрокой, н, 1);
		Если симв=РаботаССерийнымиНомерамиКлиентСервер.СимволЧисла() Тогда
			СерийныйНомерПоШаблону = СерийныйНомерПоШаблону + Сред(СерийныйНомерДополнитьНулями,НомерСимволаЧисла,1);
			НомерСимволаЧисла = НомерСимволаЧисла+1;
		Иначе
			СерийныйНомерПоШаблону = СерийныйНомерПоШаблону + Сред(ШаблонСерийногоНомераСтрокой,н,1);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СерийныйНомерПоШаблону;
	
КонецФункции

Функция СерийныйНомерЧислоПоШаблону(СерийныйНомер, ШаблонСерийногоНомераСтрокой) Экспорт
	
	СерийныйНомерИзЦифр = "";
	Для н=1 По СтрДлина(ШаблонСерийногоНомераСтрокой) Цикл
		симв = Сред(ШаблонСерийногоНомераСтрокой,н,1);
		Если симв=РаботаССерийнымиНомерамиКлиентСервер.СимволЧисла() Тогда
			СерийныйНомерИзЦифр = СерийныйНомерИзЦифр+Сред(СерийныйНомер,н,1);
		КонецЕсли;
	КонецЦикла;
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	Возврат ОписаниеТипаЧисла.ПривестиЗначение(СерийныйНомерИзЦифр);
	
КонецФункции

//Возвращает имена реквизитов, которые не должны отображаться в списке реквизитов обработки ГрупповоеИзменениеОбъектов
//
//	Возвращаемое значение:
//		Массив - массив имен реквизитов
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	НеРедактируемыеРеквизиты.Добавить("Номер");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

Функция СрокДействияГарантии(СерийныйНомер, ДатаПроверки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СерийныеНомераГарантии.Регистратор,
	|	СерийныеНомераГарантии.Регистратор.Номер КАК НомерДокументаПродажи,
	|	СерийныеНомераГарантии.Номенклатура.ГарантийныйСрок КАК ГарантийныйСрокМесяцев,
	|	СерийныеНомераГарантии.ДатаСобытия КАК ДатаПродажи,
	|	РАЗНОСТЬДАТ(СерийныеНомераГарантии.ДатаСобытия, &ДатаПроверки, МЕСЯЦ) КАК ПрошлоМесяцев,
	|	ДОБАВИТЬКДАТЕ(СерийныеНомераГарантии.ДатаСобытия, МЕСЯЦ, СерийныеНомераГарантии.Номенклатура.ГарантийныйСрок) КАК ГарантияДо,
	|	СерийныеНомераГарантии.СерийныйНомер.Владелец.ВыписыватьГарантийныйТалон КАК ВыписыватьГарантийныйТалон
	|ИЗ
	|	РегистрСведений.СерийныеНомераГарантии КАК СерийныеНомераГарантии
	|ГДЕ
	|	СерийныеНомераГарантии.СерийныйНомер = &СерийныйНомер
	|	И СерийныеНомераГарантии.Операция = &Операция
	|	И НЕ ТИПЗНАЧЕНИЯ(СерийныеНомераГарантии.Регистратор) = ТИП(Документ.ПриемИПередачаВРемонт)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СерийныеНомераГарантии.ДатаСобытия УБЫВ";
	
	Запрос.УстановитьПараметр("СерийныйНомер", СерийныйНомер);
	Запрос.УстановитьПараметр("Операция", Перечисления.ОперацииСерийныхНомеров.Расход);
	Запрос.УстановитьПараметр("ДатаПроверки", ДатаПроверки);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруктураВозврата = Новый Структура;
	Если Выборка.Следующий() Тогда
		Если Выборка.ГарантийныйСрокМесяцев > Выборка.ПрошлоМесяцев Тогда
			СтруктураВозврата.Вставить("Гарантия", Истина);
		Иначе
			СтруктураВозврата.Вставить("Гарантия", Ложь);
		КонецЕсли;
		СтруктураВозврата.Вставить("СрокДействияГарантии",Выборка.ГарантияДо);
		СтруктураВозврата.Вставить("НомерГарантии",Выборка.НомерДокументаПродажи);
		СтруктураВозврата.Вставить("ДокументПродажи",Выборка.Регистратор);
	КонецЕсли;
	
	возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти
