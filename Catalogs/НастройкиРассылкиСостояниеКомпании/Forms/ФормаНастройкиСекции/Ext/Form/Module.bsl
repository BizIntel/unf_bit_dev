
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ИдентификаторСекции", ИдентификаторСекции);
	Параметры.Свойство("ЗаголовокСекции", ЗаголовокСекции);
	Параметры.Свойство("ТипСекции", ТипСекции);
	Параметры.Свойство("ВидЦенПродажи", ВидЦенПродажи);
	
	Если Не ЗначениеЗаполнено(ИдентификаторСекции) Тогда
		ИдентификаторСекции = Новый УникальныйИдентификатор;
	КонецЕсли;

	КлючСохраненияПоложенияОкна = ИдентификаторСекции;
	
	Если ЗначениеЗаполнено(ТипСекции) Тогда
		Элементы.ВыборТипаСекции.Видимость = Ложь;
		Заголовок = СостояниеКомпанииКлиентСервер.ОписанияВсехСекций()[ТипСекции].ЗаголовокСекции;
	Иначе
		ЗаполнитьСписокВыбораТипаСекции();
	КонецЕсли;
	
	Элементы.ВидЦенПродажи.Видимость = ТипСекции = "Товары";
	
	НастроитьТаблицуФильтры();
	Если Параметры.Свойство("НастройкиФильтров") Тогда
		ЗаполнитьТаблицуФильтры(Параметры.НастройкиФильтров)
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВыборТипаСекцииПриИзменении(Элемент)
	
	ЗаголовокСекции = СостояниеКомпанииКлиентСервер.ОписанияВсехСекций()[ТипСекции].ЗаголовокСекции;
	
	Если ТипСекции = "Товары" Тогда
		Элементы.ВидЦенПродажи.Видимость = Истина;
	Иначе
		ВидЦенПродажи = ПредопределенноеЗначение("Справочник.ВидыЦен.ПустаяСсылка");
		Элементы.ВидЦенПродажи.Видимость = Ложь;
	КонецЕсли;
	
	НастроитьТаблицуФильтры();
	
КонецПроцедуры
	
&НаКлиенте
Процедура ФильтрыПриАктивизацииЯчейки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент <> Элементы.ФильтрыЗначение Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии
		Или Элемент.ТекущиеДанные.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии Тогда
		Элемент.ТекущийЭлемент.ВыборГруппИЭлементов = ГруппыИЭлементы.Группы;
	Иначе
		Элемент.ТекущийЭлемент.ВыборГруппИЭлементов = ГруппыИЭлементы.Элементы;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ЗначениеЗаполнено(ТипСекции) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрыПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(ПоляФильтров) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоляФильтров", ПоляФильтров);
	ПараметрыФормы.Вставить("ТекущееЗначение", Элемент.Родитель.ТекущиеДанные.Путь);
	
	ОткрытьФорму(
	"Справочник.НастройкиРассылкиСостояниеКомпании.Форма.ВыборПоляФильтра",
	ПараметрыФормы,
	Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрыПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(Элемент.Родитель.ТекущиеДанные, ВыбранноеЗначение);
		Элемент.Родитель.ТекущиеДанные.Значение = Элемент.Родитель.ТекущиеДанные.ТипПоля.ПривестиЗначение(Элемент.Родитель.ТекущиеДанные.Значение);
		ЗаполнитьСписокВыбораПоляВидСравнения();
		ПривестиВидСравнения();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрыВидСравненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗаполнитьСписокВыбораПоляВидСравнения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если Не ЗначениеЗаполнено(ЗаголовокСекции) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите заголовок секции.'"),,, "ЗаголовокСекции");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипСекции) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите тип секции.'"),,, "ТипСекции");
		Возврат;
	КонецЕсли;
	
	НастройкиСекции = Новый Структура;
	НастройкиСекции.Вставить("ЗаголовокСекции", ЗаголовокСекции);
	НастройкиСекции.Вставить("ИдентификаторСекции", ИдентификаторСекции);
	НастройкиСекции.Вставить("ТипСекции", ТипСекции);
	НастройкиСекции.Вставить("ВидЦенПродажи", ВидЦенПродажи);
	НастройкиСекции.Вставить("НастройкиФильтров", Новый Массив);
	
	Для Каждого ТекСтрокаФильтры Из Фильтры Цикл
		
		Если Не ЗначениеЗаполнено(ТекСтрокаФильтры.ИмяПоля) Тогда
			Продолжить;
		КонецЕсли;
		
		НастройкаФильтра = Новый Структура;
		НастройкаФильтра.Вставить("ИмяОбласти", ТекСтрокаФильтры.ИмяОбласти);
		НастройкаФильтра.Вставить("ИмяПоля", ТекСтрокаФильтры.ИмяПоля);
		НастройкаФильтра.Вставить("Путь", ТекСтрокаФильтры.Путь);
		НастройкаФильтра.Вставить("ПредставлениеПоля", ТекСтрокаФильтры.ПредставлениеПоля);
		НастройкаФильтра.Вставить("ВидСравнения", СостояниеКомпанииКлиентСервер.ВидСравненияСтрока(ТекСтрокаФильтры.ВидСравнения));
		НастройкаФильтра.Вставить("Значение", ТекСтрокаФильтры.Значение);
		НастройкиСекции.НастройкиФильтров.Добавить(НастройкаФильтра);
		
	КонецЦикла;
	
	Оповестить("СохранениеНастройкиСекции", НастройкиСекции);
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораТипаСекции()
	
	Для Каждого ТекОписаниеСекций Из СостояниеКомпанииКлиентСервер.ОписанияВсехСекций() Цикл
		
		Элементы.ВыборТипаСекции.СписокВыбора.Добавить(ТекОписаниеСекций.Ключ, ТекОписаниеСекций.Значение.ЗаголовокСекции);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьТаблицуФильтры()
	
	Если Не ЗначениеЗаполнено(ТипСекции) Тогда
		ОчиститьТаблицуФильтры();
		Возврат;
	КонецЕсли;
	
	ПоляФильтров = СостояниеКомпанииКлиентСервер.ОписанияВсехСекций()[ТипСекции].ПоляФильтров;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицуФильтры()
	
	Элементы.ФильтрыПредставление.СписокВыбора.Очистить();
	Элементы.ФильтрыВидСравнения.СписокВыбора.Очистить();
	Фильтры.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуФильтры(НастройкиФильтров)
	
	Для Каждого ТекНастройка Из НастройкиФильтров Цикл
		Если Не ЗначениеЗаполнено(ТекНастройка.ИмяПоля) Тогда
			Продолжить;
		КонецЕсли;
		ТекСтрока = Фильтры.Добавить();
		ТекСтрока.ИмяОбласти = ТекНастройка.ИмяОбласти;
		ТекСтрока.ИмяПоля = ТекНастройка.ИмяПоля;
		ТекСтрока.Путь = ТекНастройка.Путь;
		ТекСтрока.ПредставлениеПоля = ТекНастройка.ПредставлениеПоля;
		ТекСтрока.ВидСравнения = ВидСравненияКомпоновкиДанных[ТекНастройка.ВидСравнения];
		ТекСтрока.Значение = ТекНастройка.Значение;
		Если ПоляФильтров.Свойство(ТекСтрока.ИмяПоля) Тогда
			ТекСтрока.ТипПоля = ПоляФильтров[ТекСтрока.ИмяПоля].ТипПоля;
		Иначе
			ТекСТрока.ТипПоля = Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТипЗнч(ТекНастройка.Значение)));
		КонецЕсли;
		ТекСтрока.Иерархический = СостояниеКомпании.ПризнакИерархическийПоТипуПоля(ТекСтрока.ТипПоля);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораПоляВидСравнения()
	
	Элементы.ФильтрыВидСравнения.СписокВыбора.Очистить();
	
	Если Элементы.Фильтры.ТекущиеДанные.ТипПоля.СодержитТип(Тип("Строка")) Тогда
		Элементы.ФильтрыВидСравнения.СписокВыбора.Добавить(ВидСравненияКомпоновкиДанных.Содержит);
		Элементы.ФильтрыВидСравнения.СписокВыбора.Добавить(ВидСравненияКомпоновкиДанных.НеСодержит);
	Иначе
		Элементы.ФильтрыВидСравнения.СписокВыбора.Добавить(ВидСравненияКомпоновкиДанных.Равно);
		Элементы.ФильтрыВидСравнения.СписокВыбора.Добавить(ВидСравненияКомпоновкиДанных.НеРавно);
		Если Элементы.Фильтры.ТекущиеДанные.Иерархический Тогда
			Элементы.ФильтрыВидСравнения.СписокВыбора.Добавить(ВидСравненияКомпоновкиДанных.ВИерархии);
			Элементы.ФильтрыВидСравнения.СписокВыбора.Добавить(ВидСравненияКомпоновкиДанных.НеВИерархии);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПривестиВидСравнения()
	
	Если Элементы.ФильтрыВидСравнения.СписокВыбора.НайтиПоЗначению(Элементы.Фильтры.ТекущиеДанные.ВидСравнения) = Неопределено Тогда
		Элементы.Фильтры.ТекущиеДанные.ВидСравнения = Элементы.ФильтрыВидСравнения.СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти