
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗакрыватьПриВыборе = Истина;
	ЗаполнитьДерево(Параметры.ПоляФильтров, Параметры.ТекущееЗначение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоВыборЗначения(Элемент, Значение, СтандартнаяОбработка)

	Результат = Новый Структура;
	Результат.Вставить("ИмяПоля");
	Результат.Вставить("ИмяОбласти");
	Результат.Вставить("ПредставлениеПоля");
	Результат.Вставить("Путь");
	Результат.Вставить("ТипПоля");
	Результат.Вставить("Иерархический");
	
	ЭлементДерева = Дерево.НайтиПоИдентификатору(Значение);
	ЗаполнитьЗначенияСвойств(Результат, ЭлементДерева);
	
	Родитель = ЭлементДерева.ПолучитьРодителя();
	Если Родитель <> Неопределено Тогда
		Результат.ПредставлениеПоля = СтрШаблон("%1.%2", Родитель.ПредставлениеПоля, ЭлементДерева.ПредставлениеПоля);
	КонецЕсли;
	
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДерево(ПоляФильтров, ТекущееЗначение)
	
	Для Каждого ТекПоле Из ПоляФильтров Цикл
		
		СтрокаОбъект = Дерево.ПолучитьЭлементы().Добавить();
		СтрокаОбъект.ИмяПоля = ТекПоле.Ключ;
		ЗаполнитьЗначенияСвойств(СтрокаОбъект, ТекПоле.Значение);
		
		Если СтрокаОбъект.Путь = ТекущееЗначение Тогда
			Элементы.Дерево.ТекущаяСтрока = СтрокаОбъект.ПолучитьИдентификатор();
		КонецЕсли;
		
		СтрокаОбъект.Иерархический = СостояниеКомпании.ПризнакИерархическийПоТипуПоля(ТекПоле.Значение.ТипПоля);
		
		Для Каждого ТекТип Из ТекПоле.Значение.ТипПоля.Типы() Цикл
			
			ОбъектМетаданных = Метаданные.НайтиПоТипу(ТекТип);
			Если ОбъектМетаданных = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не ОбщегоНазначения.ЭтоОбъектСсылочногоТипа(ОбъектМетаданных) Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ТекРеквизит Из ОбъектМетаданных.Реквизиты Цикл
				СтрокаРеквизит = СтрокаОбъект.ПолучитьЭлементы().Добавить();
				СтрокаРеквизит.ИмяПоля = СтрШаблон("%1%2", СтрокаОбъект.ИмяПоля, ТекРеквизит.Имя);
				СтрокаРеквизит.ИмяОбласти = СтрокаОбъект.ИмяОбласти;
				СтрокаРеквизит.ПредставлениеПоля = ТекРеквизит.Синоним;
				СтрокаРеквизит.Путь = СтрШаблон("%1.%2", СтрокаОбъект.Путь, ТекРеквизит.Имя);
				СтрокаРеквизит.ТипПоля = ТекРеквизит.Тип;
				СтрокаРеквизит.Иерархический = СостояниеКомпании.ПризнакИерархическийПоТипуПоля(ТекРеквизит.Тип);
				Если СтрокаРеквизит.Путь = ТекущееЗначение Тогда
					Элементы.Дерево.ТекущаяСтрока = СтрокаРеквизит.ПолучитьИдентификатор();
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти