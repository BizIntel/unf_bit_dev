#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	ТипМассив          = Тип("Массив");
	ТипСписокЗначений  = Тип("СписокЗначений");
	ТипТаблицаЗначений = Тип("ТаблицаЗначений");
	ТипЛентаНовостей   = Тип("СправочникСсылка.ЛентыНовостей");

	// В конфигурации есть общие реквизиты с разделением и включена ФО РаботаВМоделиСервиса.
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		// Если включено разделение данных, то в разделенном сеансе редактировать новостные ленты нельзя.
		// Можно редактировать только в неразделенном сеансе, если есть право на редактирование.
		// Зашли в конфигурацию под пользователем без разделения (и не вошли в область данных).
		Если ОбщегоНазначенияПовтИсп.СеансЗапущенБезРазделителей() Тогда
			Если (ПравоДоступа("Изменение", Метаданные.Справочники.ЛентыНовостей) = Истина) Тогда
				ЭтаФорма.ТолькоПросмотр = Ложь;
			Иначе
				ЭтаФорма.ТолькоПросмотр = Истина;
			КонецЕсли;
			// Некоторые настройки недоступны в модели сервиса, например настройка видимости по пользователям.
			// Исключить ситуацию, когда по умолчанию лента невидима - сделать ее видимой всем.
			Если Объект.ВидимостьПоУмолчанию <> Истина Тогда
				Объект.ВидимостьПоУмолчанию = Истина;
			КонецЕсли;
			Если Объект.ИсключенияВидимости.Количество() > 0 Тогда
				Объект.ИсключенияВидимости.Очистить();
			КонецЕсли;
		Иначе
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецЕсли;
		Элементы.ЗаголовокДоступныеКатегорииНовостей.Заголовок = НСтр("ru='Настройки отборов по этой ленте новостей (действуют на все области данных):'");
	Иначе
		Если (ПравоДоступа("Изменение", Метаданные.Справочники.ЛентыНовостей) = Истина) Тогда
			ЭтаФорма.ТолькоПросмотр = Ложь;
		Иначе
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецЕсли;
		Элементы.ЗаголовокДоступныеКатегорииНовостей.Заголовок = НСтр("ru='Настройки отборов по этой ленте новостей:'");
	КонецЕсли;

	ЭтаФорма.РольДоступнаАдминистратор = ОбработкаНовостейПовтИсп.ЭтоАдминистратор();

	// Пытаемся создать новую ленту новостей, но нет прав на редактирование - не давать открыть форму.
	Если Параметры.Ключ.Пустая()
			И ЭтаФорма.ТолькоПросмотр = Истина Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;

	Если Параметры.Ключ.Пустая() Тогда
		// Вручную создается новая лента новостей, надо сбросить признак "ЗагруженоССервера".
		Объект.ЗагруженоССервера = Ложь;

		// При копировании ленты новостей, скопировать также настроенные отборы.
		Если (ТипЗнч(Параметры.ЗначениеКопирования) = ТипЛентаНовостей)
				И (НЕ Параметры.ЗначениеКопирования.Пустая()) Тогда
			ТаблицаНастроек = ХранилищаНастроек.НастройкиНовостей.Загрузить(
				"ОтборыПоЛентамНовостейНастроенныеАдминистратором", // КлючОбъекта
				Параметры.ЗначениеКопирования, // Прочитать настройки из ленты-источника копирования.
				, // ОписаниеНастроек.
				""); // ИмяПользователя = Для всех.
			// Колонки таблицы ТаблицаНастроек:
			//  .Колонки.Добавить("ЛентаНовостей", Новый ОписаниеТипов("СправочникСсылка.ЛентыНовостей"));
			//  .Колонки.Добавить("КатегорияНовостей", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.КатегорииНовостей"));
			//  .Колонки.Добавить("ЗначениеКатегорииНовостей"); // Произвольный тип.
			Если ТипЗнч(ТаблицаНастроек) = ТипТаблицаЗначений Тогда
				Для каждого ТекущаяКатегорияНовостей Из Объект.ДоступныеКатегорииНовостей Цикл
					Если НЕ ТекущаяКатегорияНовостей.КатегорияНовостейЗаполняетсяАвтоматически Тогда
						// Получить все сохраненные настройки для ленты новостей (источника копирования) + категории.
						МассивОтборов = ТаблицаНастроек.НайтиСтроки(
							Новый Структура("КатегорияНовостей",
								ТекущаяКатегорияНовостей.КатегорияНовостей));
						Если (ТипЗнч(МассивОтборов) = ТипМассив)
								И (МассивОтборов.Количество() > 0) Тогда
							Для Каждого ТекущееЗначениеОтбора Из МассивОтборов Цикл
								ТекущаяКатегорияНовостей.СписокЗначенийОтборов.Добавить(ТекущееЗначениеОтбора.ЗначениеКатегорииНовостей);
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;

	// Только для локальной ленты новостей можно отключить автообновление.
	Элементы.ГруппаЛокальнаяЛентаНовостей.Видимость = НЕ Объект.ЗагруженоССервера;

	// В конфигурации есть общие реквизиты с разделением и включена ФО РаботаВМоделиСервиса.
	Если (ОбщегоНазначенияПовтИсп.РазделениеВключено()) Тогда
		// Запрещено редактировать список пользователей, потому что:
		// - В области данных вообще запрещено редактирование справочника Ленты новостей;
		// - В неразделенном режиме нет возможности выбрать пользователей.
	Иначе
		// Только для локальной ленты новостей можно настраивать список "редакторов новостей".
		// Если эта лента новостей НЕ загружена с сервера, то можно показать страницу, но в зависимости
		//  от флага ЛокальнаяЛентаНовостей управлять ее доступностью (в УправлениеФормой).
		Если Объект.ЗагруженоССервера = Ложь Тогда
			Элементы.ГруппаРедактированиеЛокальныхНовостей.Видимость = Истина;
			// Заполнить список пользователей-редакторов
			ЭтаФорма.РедакторыНовостей.Очистить();
			МассивРедакторовЛентыНовостей = ОбработкаНовостей.ПолучитьСписокРедакторовЛентыНовостей(
				Новый Структура("Ссылка, ЗагруженоССервера, ЛокальнаяЛентаНовостей",
					Объект.Ссылка,
					Объект.ЗагруженоССервера,
					Объект.ЛокальнаяЛентаНовостей),
				Истина);
			Для Каждого ТекущийРедактор Из МассивРедакторовЛентыНовостей Цикл
				НоваяСтрока = ЭтаФорма.РедакторыНовостей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущийРедактор);
				НоваяСтрока.ПользовательПредставление = СтрЗаменить(НоваяСтрока.ПользовательПредставление, НСтр("ru='(полные права)'"), НСтр("ru='(полные права, может редактировать новости во всех лентах новостей)'"));
			КонецЦикла;
			// Если нет редакторов (все - с полными правами), то кнопки включения / отключения флажков - скрыть,
			//  также не имеет смысла выводить колонку РедакторыНовостейПометка.
			// Также флажки надо скрыть, если нет права редактировать Справочник.ЛентыНовостей.
			ТолькоРедакторы = ЭтаФорма.РедакторыНовостей.НайтиСтроки(Новый Структура("ПолныеПрава", Ложь));
			Если (ТолькоРедакторы.Количество() > 0)
					И (ПравоДоступа("Изменение", Метаданные.Справочники.ЛентыНовостей) = Истина) Тогда
				Элементы.РедакторыНовостейУстановитьФлажки.Видимость = Истина;
				Элементы.РедакторыНовостейСнятьФлажки.Видимость      = Истина;
				Элементы.РедакторыНовостейПометка.Видимость          = Истина;
			Иначе
				Элементы.РедакторыНовостейУстановитьФлажки.Видимость = Ложь;
				Элементы.РедакторыНовостейСнятьФлажки.Видимость      = Ложь;
				Если (ТолькоРедакторы.Количество() = 0) Тогда // Скрывать только если нет пользователей с ролью РедакторНовостей.
					Элементы.РедакторыНовостейПометка.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	// Заполнить вспомогательную таблицу "ТаблицаАвтоматическихЗначенийКатегорийНовостей".
	// Список автозаполняемых категорий.
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ПВХ.Ссылка КАК КатегорияНовостей
		|ИЗ
		|	ПланВидовХарактеристик.КатегорииНовостей КАК ПВХ
		|ГДЕ
		|	ПВХ.ЗаполняетсяАвтоматически = ИСТИНА
		|";
	Результат = Запрос.Выполнить(); // ПриСозданииНаСервере()
	Если НЕ Результат.Пустой() Тогда
		ЭтаФорма.ТаблицаАвтоматическихЗначенийКатегорийНовостей.Загрузить(Результат.Выгрузить(ОбходРезультатаЗапроса.Прямой));
	КонецЕсли;
	// Значения отборов автозаполняемых категорий.
	Для каждого ТекущаяКатегория Из ЭтаФорма.ТаблицаАвтоматическихЗначенийКатегорийНовостей Цикл
		Результат = ОбработкаНовостейПовтИсп.ПолучитьЗначениеПредопределеннойКатегории(ТекущаяКатегория.КатегорияНовостей);
		Если ТипЗнч(Результат) = ТипСписокЗначений Тогда
			ТекущаяКатегория.СписокЗначенийОтборов = Результат;
		Иначе
			ТекущаяКатегория.СписокЗначенийОтборов.Добавить(Результат);
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьДобавленныеКолонкиТаблиц();

	ОбновитьИнформационныеСтроки();

	ДоступноУправлениеСоставомКатегорийНовостей = Ложь;
	Если (Объект.ЗагруженоССервера = Истина) Тогда
		Если ЭтаФорма.РольДоступнаАдминистратор = Ложь Тогда
			Элементы.Протокол.Доступность = Ложь;
			Элементы.Сайт.Доступность     = Ложь;
			Элементы.ИмяФайла.Доступность = Ложь;
		Иначе
			Элементы.ГруппаФайлНовостей.Заголовок = НСтр("ru='Получение файла новостей (эти поля перезаполняются автоматически при изменениях на сервере 1С)'");
		КонецЕсли;
		Элементы.ЗагруженоССервера.Видимость = Истина; // Вывести надпись, что редактирование невозможно
	Иначе
		Если РольДоступна(Метаданные.Роли.АдминистраторСистемы)
				И РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
			ДоступноУправлениеСоставомКатегорийНовостей = Истина;
		КонецЕсли;
	КонецЕсли;

	Если ДоступноУправлениеСоставомКатегорийНовостей = Истина Тогда
		Элементы.ДоступныеКатегорииНовостейДобавить.Видимость               = Истина;
		Элементы.ДоступныеКатегорииНовостейУдалить.Видимость                = Истина;
		Элементы.ДоступныеКатегорииНовостей.ИзменятьСоставСтрок             = Истина;
		Элементы.ДоступныеКатегорииНовостей.ИзменятьПорядокСтрок            = Истина;
		Элементы.ДоступныеКатегорииНовостейКомандаПодборКатегорий.Видимость = Истина;
		Элементы.ДоступныеКатегорииНовостейКатегорияНовостей.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.ДоступныеКатегорииНовостейДобавить.Видимость               = Ложь;
		Элементы.ДоступныеКатегорииНовостейУдалить.Видимость                = Ложь;
		Элементы.ДоступныеКатегорииНовостей.ИзменятьСоставСтрок             = Ложь;
		Элементы.ДоступныеКатегорииНовостей.ИзменятьПорядокСтрок            = Ложь;
		Элементы.ДоступныеКатегорииНовостейКомандаПодборКатегорий.Видимость = Ложь;
		Элементы.ДоступныеКатегорииНовостейКатегорияНовостей.ТолькоПросмотр = Истина;
	КонецЕсли;

	Если Элементы.ДоступныеКатегорииНовостейРазрешеноНастраиватьПользователям.ТолькоПросмотр = Ложь Тогда
		Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Пометка = Истина;
	Иначе
		Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Пометка = Ложь;
	КонецЕсли;

	// Категорию можно настроить пользователю, если она не настраивается автоматически.
	// Если есть хотя бы одна категория, которой нет в таблице ТаблицаАвтоматическихЗначенийКатегорийНовостей,
	//  то можно показать кнопку КомандаНастроитьОтборПользователей.
	ЭтаФорма.ПользователиМогутНастроитьОтборы = Ложь;
	Для каждого ТекущаяДоступнаяКатегория Из Объект.ДоступныеКатегорииНовостей Цикл
		НайденныеАвтоматическиеКатегории =
			ЭтаФорма.ТаблицаАвтоматическихЗначенийКатегорийНовостей.НайтиСтроки(
				Новый Структура("КатегорияНовостей", ТекущаяДоступнаяКатегория.КатегорияНовостей));
		Если НайденныеАвтоматическиеКатегории.Количество() = 0 Тогда
			ЭтаФорма.ПользователиМогутНастроитьОтборы = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЭтаФорма.ПользователиМогутНастроитьОтборы = Ложь Тогда
		Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Доступность = Ложь;
	Иначе
		Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Доступность = Истина;
	КонецЕсли;

	// Если Лента новостей передана с сервера и там нет ни одной категории, то не выводить кнопку "НастроитьОтборПользователей".
	Если (Объект.ЗагруженоССервера = Истина) Тогда
		Если Объект.ДоступныеКатегорииНовостей.Количество() = 0 Тогда
			Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Видимость = Ложь;
			Элементы.ЗаголовокНевозможноРедактироватьДоступныеКатегорииНовостей.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;

	УправлениеФормой(ЭтаФорма);

	УстановитьУсловноеОформление();

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	// Также сохранять в настройках глобальные отборы.
	// Видимость ленты по пользователям как-то отдельно сохранять не надо - она хранится в табличной части ИсключенияВидимости.
	Настройки = Новый ТаблицаЗначений;
	Настройки.Колонки.Добавить("ЛентаНовостей", Новый ОписаниеТипов("СправочникСсылка.ЛентыНовостей"));
	Настройки.Колонки.Добавить("КатегорияНовостей", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.КатегорииНовостей"));
	Настройки.Колонки.Добавить("ЗначениеКатегорииНовостей"); // Произвольный тип

	Для каждого ТекущаяКатегорияНовостей Из Объект.ДоступныеКатегорииНовостей Цикл
		Если НЕ ТекущаяКатегорияНовостей.КатегорияНовостейЗаполняетсяАвтоматически Тогда
			Для каждого ТекущийОтбор Из ТекущаяКатегорияНовостей.СписокЗначенийОтборов Цикл
				НоваяСтрока = Настройки.Добавить();
				НоваяСтрока.ЛентаНовостей             = ТекущийОбъект.Ссылка; // Объект.Ссылка пока еще содержит пустую ссылку.
				НоваяСтрока.КатегорияНовостей         = ТекущаяКатегорияНовостей.КатегорияНовостей;
				НоваяСтрока.ЗначениеКатегорииНовостей = ТекущийОтбор.Значение;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	ХранилищаНастроек.НастройкиНовостей.Сохранить(
		"ОтборыПоЛентамНовостейНастроенныеАдминистратором", // КлючОбъекта
		ТекущийОбъект.Ссылка, // КлючНастроек // Объект.Ссылка содержит пустую ссылку.
		Настройки, // Настройки
		, // ОписаниеНастроек
		""); // ИмяПользователя // Для всех

	// Сохранять список редакторов новостей.
	Если (Объект.ЗагруженоССервера = Ложь)
			И (Объект.ЛокальнаяЛентаНовостей = Истина) Тогда
		// Записать набор записей.
		НаборЗаписей = РегистрыСведений.РазрешенныеДляРедактированияЛентыНовостей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ЛентаНовостей.Установить(ТекущийОбъект.Ссылка);
			Для Каждого ТекущийРедактор Из ЭтаФорма.РедакторыНовостей Цикл
				Если (ТекущийРедактор.ПолныеПрава = Ложь)
						И (ТекущийРедактор.Пометка = Истина) Тогда
					НоваяЗапись = НаборЗаписей.Добавить();
					НоваяЗапись.ЛентаНовостей = ТекущийОбъект.Ссылка;
					НоваяЗапись.Пользователь  = ТекущийРедактор.Пользователь;
				КонецЕсли;
			КонецЦикла;
		НаборЗаписей.Записать(Истина);
	Иначе
		// Не трогать набор записей - вдруг поставят галочку "ЛокальнаяЛентаНовостей" обратно
		//  и тогда список разрешенных редакторов сразу восстановится.
		// В RLS стоит явная проверка, что ЛентаНовостей - локальная и не загружена с сервера.
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	ТипТаблицаЗначений = Тип("ТаблицаЗначений");

	ОтборыПоЭтойЛентеНовостейОбщие = ХранилищаНастроек.НастройкиНовостей.Загрузить(
		"ОтборыПоЛентамНовостейНастроенныеАдминистратором", // КлючОбъекта
		Объект.Ссылка); // КлючНастроек

	Если (ТипЗнч(ОтборыПоЭтойЛентеНовостейОбщие) = ТипТаблицаЗначений) Тогда
		Для каждого ТекущееЗначениеОтбора Из ОтборыПоЭтойЛентеНовостейОбщие Цикл
			НайденныеСтроки = Объект.ДоступныеКатегорииНовостей.НайтиСтроки(
				Новый Структура("КатегорияНовостей", ТекущееЗначениеОтбора.КатегорияНовостей));
			Если НайденныеСтроки.Количество() > 0 Тогда
				НайденныеСтроки[0].СписокЗначенийОтборов.Добавить(ТекущееЗначениеОтбора.ЗначениеКатегорииНовостей, , Истина); // Пометка = ЭтоГлобальныйОтбор
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ЗаполнитьДобавленныеКолонкиТаблиц();

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("Новости: после записи ленты новостей", , Объект.Ссылка);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	ПриЧтенииНаСервере(ТекущийОбъект);

	// Удалить неправильные отборы, которые могут помешать проверке общих и пользовательских отборов.
	ОбработкаНовостей.ОптимизироватьОтборыПоНовостям();

	// Рассчитать заново регистр "РассчитанныеОтборыПоНовостям_Общие" для отборов
	//  по новостям, настроенных администратором.
	// Здесь же пересчитаются отборы по всем пользователям - регистр "РассчитанныеОтборыПоНовостям_Пользовательские" для отборов
	//  по новостям, настроенных пользователем.
	ОбработкаНовостей.ПересчитатьОтборыПоНовостям_Общие();

	УправлениеФормой(ЭтаФорма);

	ОбновитьИнформационныеСтроки(); // Обновить закладку "Статистика".

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантЛогинаПароляПриИзменении(Элемент)

	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВидимостьПоУмолчаниюНажатие(Элемент)

	// Открыть форму настройки исключений.
	ПараметрыФормы = ПолучитьПараметрыДляОткрытияФормыНастройкиИсключенийВидимости();

	ОписаниеОповещенияНастройкиИсключенийВидимости = Новый ОписаниеОповещения(
		"ПослеНастройкиИсключенийВидимости",
		ЭтаФорма,
		Неопределено);

	Результат = ОткрытьФорму(
		"Справочник.ЛентыНовостей.Форма.ФормаНастройкиИсключенийВидимости", // ИмяФормы.
		ПараметрыФормы, // Параметры
		ЭтаФорма, // Владелец.
		"", // Уникальность.
		, // Окно.
		, // НавигационнаяСсылка.
		ОписаниеОповещенияНастройкиИсключенийВидимости, // ОписаниеОповещенияОЗакрытии.
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); // РежимОткрытияОкна.

КонецПроцедуры

&НаКлиенте
Процедура ВидимостьПоУмолчаниюПриИзменении(Элемент)

	ОбновитьИнформационныеСтроки();

КонецПроцедуры

&НаКлиенте
Процедура ПротоколПриИзменении(Элемент)

	УправлениеФормой(ЭтаФорма);
	ЭтаФорма.ПолныйАдресЛентыНовостей = СформироватьПолныйАдресЛентыНовостей(Объект.Ссылка, Объект.Протокол, Объект.Сайт, Объект.ИмяФайла);

КонецПроцедуры

&НаКлиенте
Процедура СайтПриИзменении(Элемент)

	ЭтаФорма.ПолныйАдресЛентыНовостей = СформироватьПолныйАдресЛентыНовостей(Объект.Ссылка, Объект.Протокол, Объект.Сайт, Объект.ИмяФайла);

КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПриИзменении(Элемент)

	ЭтаФорма.ПолныйАдресЛентыНовостей = СформироватьПолныйАдресЛентыНовостей(Объект.Ссылка, Объект.Протокол, Объект.Сайт, Объект.ИмяФайла);

КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Если ВРег(Объект.Протокол) = ВРег("file") Тогда
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Диалог.Заголовок = НСтр("ru='Выберите файл новостей в формате Atom или RSS'");
		Диалог.ПолноеИмяФайла = "";
		Диалог.ПредварительныйПросмотр = Истина;
		Диалог.Фильтр = 
			"Файл новостей Atom (*.xml;*.atom)|*.xml;*.atom|"
			+ "Файл новостей RSS (*.xml;*.rss)|*.xml;*.rss|";

		ОписаниеОповещенияОВыборе = Новый ОписаниеОповещения("ИмяФайлаПослеВыбора", ЭтотОбъект, Неопределено);
		Диалог.Показать(ОписаниеОповещенияОВыборе);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЛокальнаяЛентаНовостейПриИзменении(Элемент)

	ОбновитьИнформационныеСтроки();

	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСтатистикаПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если ВРег(НавигационнаяСсылка) = ВРег("1C:ResetLastDownloadDate") Тогда
		ОбработкаНовостейВызовСервера.СбросДатыПоследнейУспешнойЗагрузкиНовостей(Объект.Ссылка, Ложь);
		ОбновитьИнформационныеСтроки();
		Оповестить(
			"Новости. Очищена дата последней загрузки новостей",
			,
			Объект.Ссылка);
	ИначеЕсли ВРег(НавигационнаяСсылка) = ВРег("1C:ResetLastDownloadDateAndMarkNewsDeleted") Тогда
		ОбработкаНовостейВызовСервера.СбросДатыПоследнейУспешнойЗагрузкиНовостей(Объект.Ссылка, Истина);
		ОбновитьИнформационныеСтроки();
		Оповестить(
			"Новости. Очищена дата последней загрузки новостей",
			,
			Объект.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПолныйАдресЛентыНовостейОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если НЕ ПустаяСтрока(ЭтаФорма.ПолныйАдресЛентыНовостей) Тогда
		Если Найти(ВРег(ЭтаФорма.ПолныйАдресЛентыНовостей),ВРег("http")) = 1 Тогда
			ПерейтиПоНавигационнойСсылке(ЭтаФорма.ПолныйАдресЛентыНовостей);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПарольОткрытие(Элемент, СтандартнаяОбработка)

	Если Элемент.РежимПароля = Ложь Тогда
		Элемент.РежимПароля = Истина;
	Иначе
		Элемент.РежимПароля = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоступныеКатегорииНовостейПриИзменении(Элемент)

	// Категорию можно настроить пользователю, если она не настраивается автоматически.
	// Если есть хотя бы одна категория, которой нет в таблице ТаблицаАвтоматическихЗначенийКатегорийНовостей,
	//  то можно показать кнопку КомандаНастроитьОтборПользователей.
	ЭтаФорма.ПользователиМогутНастроитьОтборы = Ложь;
	Для каждого ТекущаяДоступнаяКатегория Из Объект.ДоступныеКатегорииНовостей Цикл
		НайденныеАвтоматическиеКатегории =
			ЭтаФорма.ТаблицаАвтоматическихЗначенийКатегорийНовостей.НайтиСтроки(
				Новый Структура("КатегорияНовостей", ТекущаяДоступнаяКатегория.КатегорияНовостей));
		Если НайденныеАвтоматическиеКатегории.Количество() = 0 Тогда
			ЭтаФорма.ПользователиМогутНастроитьОтборы = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЭтаФорма.ПользователиМогутНастроитьОтборы = Ложь Тогда
		Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Доступность = Ложь;
	Иначе
		Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ДоступныеКатегорииНовостей

&НаКлиенте
Процедура ДоступныеКатегорииНовостейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)

	// Добавление строк разрешено только для лент новостей, созданных на этом клиенте.
	Если Объект.ЗагруженоССервера = Истина Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Нельзя добавлять категории для ленты новостей, загруженной с сервера.'");
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоступныеКатегорииНовостейПередУдалением(Элемент, Отказ)

	// Удаление строк разрешено только для лент новостей, созданных на этом клиенте.
	Если Объект.ЗагруженоССервера = Истина Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Нельзя удалять категории для ленты новостей, загруженной с сервера.'");
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоступныеКатегорииНовостейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	// Категорию можно настроить пользователю, если она не настраивается автоматически.
	// Если есть хотя бы одна категория, которой нет в таблице ТаблицаАвтоматическихЗначенийКатегорийНовостей,
	//  то можно показать кнопку КомандаНастроитьОтборПользователей.
	ЭтаФорма.ПользователиМогутНастроитьОтборы = Ложь;
	Для каждого ТекущаяДоступнаяКатегория Из Объект.ДоступныеКатегорииНовостей Цикл
		НайденныеАвтоматическиеКатегории =
			ЭтаФорма.ТаблицаАвтоматическихЗначенийКатегорийНовостей.НайтиСтроки(
				Новый Структура("КатегорияНовостей", ТекущаяДоступнаяКатегория.КатегорияНовостей));
		Если НайденныеАвтоматическиеКатегории.Количество() = 0 Тогда
			ЭтаФорма.ПользователиМогутНастроитьОтборы = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЭтаФорма.ПользователиМогутНастроитьОтборы = Ложь Тогда
		Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Доступность = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоступныеКатегорииНовостейСписокЗначенийОтборовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ПараметрыФормы = Новый Структура("КатегорияНовостей, СписокЗначенийОтборов",
		Элементы.ДоступныеКатегорииНовостей.ТекущиеДанные.КатегорияНовостей,
		Элементы.ДоступныеКатегорииНовостей.ТекущиеДанные.СписокЗначенийОтборов);

	Результат = ОткрытьФорму(
		"Справочник.ЛентыНовостей.Форма.ФормаНастройкиОтборовПоКатегории",
		// "ХранилищеНастроек.НастройкиНовостей.Форма.ФормаНастройкиОтборовПоКатегории", // Здесь настраивается также по ленте новостей.
		ПараметрыФормы, // Параметры
		Элемент, // Владелец
		"", // Уникальность
		, // Окно
		, // НавигационнаяСсылка
		, // ОписаниеОповещенияНастройкаОтборовКатегорий, // ОписаниеОповещенияОЗакрытии.
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); // РежимОткрытияОкна

	// ////? Определить период дозагрузки новостей.
	// Если отбор настраивается на сервере и включили еще какое-то значение отбора, то новости придется дозагрузить (т.к. их нет в базе).
	// Спросить, за какой период надо дозагрузить новости по этой ленте новостей.
	// После ответа заполнить значение в регистре сведений ДатыЗагрузкиПоследнихНовостей.

КонецПроцедуры

&НаКлиенте
Процедура ДоступныеКатегорииНовостейКатегорияНовостейПриИзменении(Элемент)

	Если Элементы.ДоступныеКатегорииНовостей.ТекущиеДанные <> Неопределено Тогда
		ЗаполнитьДанныеСтрокиДоступныхКатегорий(Элементы.ДоступныеКатегорииНовостей.ТекущиеДанные);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПодборКатегорий(Команда)

	Если Объект.ЗагруженоССервера = Истина Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Нельзя изменять категории для ленты новостей, загруженной с сервера.'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;

	СписокКатегорийНовостей = Новый СписокЗначений;
	Для каждого ТекущаяКатегория Из Объект.ДоступныеКатегорииНовостей Цикл
		СписокКатегорийНовостей.Добавить(ТекущаяКатегория.КатегорияНовостей);
	КонецЦикла;

	ПараметрыФормы = Новый Структура("СписокКатегорийНовостей", СписокКатегорийНовостей);

	ОписаниеОповещенияПодборКатегорий = Новый ОписаниеОповещения(
		"ПослеПодбораКатегорий",
		ЭтаФорма,
		Неопределено);

	Результат = ОткрытьФорму(
		"ПланВидовХарактеристик.КатегорииНовостей.Форма.ФормаПодбора", // ИмяФормы
		ПараметрыФормы, // Параметры
		ЭтаФорма, // Владелец
		"", // Уникальность
		, // Окно
		, // НавигационнаяСсылка
		ОписаниеОповещенияПодборКатегорий, // ОписаниеОповещенияОЗакрытии
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); // РежимОткрытияОкна

КонецПроцедуры

&НаКлиенте
Процедура КомандаНастроитьОтборПользователей(Команда)

	Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Пометка = НЕ Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Пометка;
	Элементы.ДоступныеКатегорииНовостейРазрешеноНастраиватьПользователям.ТолькоПросмотр = НЕ Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Пометка;

	Если Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Пометка = Ложь Тогда
		Для каждого ТекущаяДоступнаяКатегорияНовостей Из Объект.ДоступныеКатегорииНовостей Цикл
			ТекущаяДоступнаяКатегорияНовостей.РазрешеноНастраиватьПользователям = Ложь;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаРедакторыНовостейФлажки(Команда)

	Для Каждого ТекущийРедактор Из ЭтаФорма.РедакторыНовостей Цикл
		Если ТекущийРедактор.ПолныеПрава = Ложь Тогда
			Если ВРег(Команда.Имя) = ВРег("КомандаРедакторыНовостейУстановитьФлажки") Тогда // Установить флажки
				ТекущийРедактор.Пометка = Истина;
			Иначе // Снять флажки
				ТекущийРедактор.Пометка = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Подготовить структуру параметров для открытия формы настройки исключений видимости.
//
&НаСервере
Функция ПолучитьПараметрыДляОткрытияФормыНастройкиИсключенийВидимости()

	СписокИсключений = Новый СписокЗначений;
	СписокИсключений.ЗагрузитьЗначения(Объект.ИсключенияВидимости.Выгрузить(, "Пользователь").ВыгрузитьКолонку("Пользователь"));

	Результат = Новый Структура("ВидимостьПоУмолчанию, СписокИсключений, ВладелецТолькоПросмотр",
		Объект.ВидимостьПоУмолчанию,
		СписокИсключений,
		ЭтаФорма.ТолькоПросмотр);

	Возврат Результат;

КонецФункции

// Загрузить параметры из формы настройки исключений видимости, если там нажали ОК.
//
&НаСервере
Функция ЗагрузитьПараметрыИзФормыНастройкиИсключенийВидимости(Знач СтруктураНастроек)

	ТипСписокЗначений = Тип("СписокЗначений");

	СтруктураНастроек.Свойство("ВидимостьПоУмолчанию", Объект.ВидимостьПоУмолчанию);
	СписокИсключений = Неопределено;
	СтруктураНастроек.Свойство("СписокИсключений", СписокИсключений);
	Объект.ИсключенияВидимости.Очистить();
	Если ТипЗнч(СписокИсключений) = ТипСписокЗначений Тогда
		Для каждого ТекущееИсключение Из СписокИсключений Цикл
			НоваяСтрока = Объект.ИсключенияВидимости.Добавить();
			НоваяСтрока.Пользователь = ТекущееИсключение.Значение;
		КонецЦикла;
	КонецЕсли;

	ОбновитьИнформационныеСтроки();

КонецФункции

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()

	Для каждого ТекущаяКатегория Из Объект.ДоступныеКатегорииНовостей Цикл
		НайденныеСтроки = ЭтаФорма.ТаблицаАвтоматическихЗначенийКатегорийНовостей.НайтиСтроки(
			Новый Структура("КатегорияНовостей", ТекущаяКатегория.КатегорияНовостей));
		Если НайденныеСтроки.Количество() > 0 Тогда
			// Заполнить признак "ЗаполняетсяАвтоматически".
			ТекущаяКатегория.КатегорияНовостейЗаполняетсяАвтоматически = Истина;
			// Заполнить значения отборов, если эта категория заполняется автоматически, или очистить список.
			ТекущаяКатегория.СписокЗначенийОтборов = НайденныеСтроки[0].СписокЗначенийОтборов;
		Иначе
			ТекущаяКатегория.КатегорияНовостейЗаполняетсяАвтоматически = Ложь;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
// Процедура обновляет все информационные надписи.
//
// Параметры:
//  Нет.
//
Процедура ОбновитьИнформационныеСтроки()

	ЭтаФорма.ПолныйАдресЛентыНовостей = СформироватьПолныйАдресЛентыНовостей(Объект.Ссылка, Объект.Протокол, Объект.Сайт, Объект.ИмяФайла);

	Элементы.ДекорацияВидимостьПоУмолчанию.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;

	// В конфигурации есть общие реквизиты с разделением и включена ФО РаботаВМоделиСервиса.
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		// Если включено разделение данных, то нельзя настроить отбор по-пользователям.
		Элементы.ГруппаВидимость.Доступность = Ложь;
		Элементы.ДекорацияВидимостьПоУмолчанию.Заголовок   = НСтр("ru='без исключений. В модели сервиса нельзя настроить видимость ленты новостей по пользователям.'");
		Элементы.ДекорацияВидимостьПоУмолчанию.Гиперссылка = Ложь;
	Иначе
		Элементы.ДекорацияВидимостьПоУмолчанию.Гиперссылка = Истина;
		Если Объект.ИсключенияВидимости.Количество() = 0 Тогда
			Если Объект.ВидимостьПоУмолчанию = Истина Тогда
				Элементы.ДекорацияВидимостьПоУмолчанию.Заголовок = НСтр("ru='без исключений'");
			Иначе
				Элементы.ДекорацияВидимостьПоУмолчанию.Заголовок = НСтр("ru='без исключений. Никто не сможет выбрать эту ленту новостей для получения новостей.'");
				Элементы.ДекорацияВидимостьПоУмолчанию.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
			КонецЕсли;
		ИначеЕсли Объект.ИсключенияВидимости.Количество() <= 3 Тогда
			СписокИсключений = "кроме: ";
			Для каждого ТекущийПользователь Из Объект.ИсключенияВидимости Цикл
				СписокИсключений = СписокИсключений + "#" + СокрЛП(ТекущийПользователь.Пользователь) + "#";
			КонецЦикла;
			СписокИсключений = СтрЗаменить(СписокИсключений, "##", ", ");
			СписокИсключений = СтрЗаменить(СписокИсключений, "#", "");
			Элементы.ДекорацияВидимостьПоУмолчанию.Заголовок = СписокИсключений;
		Иначе // > 3
			СписокИсключений = "кроме: ";
			С = 2;
			Для каждого ТекущийПользователь Из Объект.ИсключенияВидимости Цикл
				СписокИсключений = СписокИсключений + "#" + СокрЛП(ТекущийПользователь.Пользователь) + "#";
				С = С - 1;
				Если С<=0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			СписокИсключений = СтрЗаменить(СписокИсключений, "##", ", ");
			СписокИсключений = СтрЗаменить(СписокИсключений, "#", "");
			ТекстСообщения = НСтр("ru='%СписокИсключений% и еще %Объект.ИсключенияВидимости.Количество()-2% пользователей'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СписокИсключений%", СписокИсключений);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Объект.ИсключенияВидимости.Количество()-2%", (Объект.ИсключенияВидимости.Количество()-2));
			Элементы.ДекорацияВидимостьПоУмолчанию.Заголовок = ТекстСообщения;
		КонецЕсли;
	КонецЕсли;

	Если Объект.Ссылка.Пустая() Тогда
		Элементы.ДекорацияСтатистика.Заголовок = НСтр("ru='Необходимо вначале записать ленту новостей, чтобы получить по ней статистику.'");
	Иначе
		КоличествоНовостейВсего                = 0;
		КоличествоНовостейПомеченныхНаУдаление = 0;
		ДатаПоследнейУспешнойЗагрузки          = '00010101';
		КоличествоНеудачПриЗагрузкеНовостей    = 0;

		Запрос = Новый Запрос;
		Запрос.Текст = "
			|// Запрос 0
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(Спр.Ссылка) КАК КоличествоНовостейВсего
			|ИЗ
			|	Справочник.Новости КАК Спр
			|ГДЕ
			|	Спр.ЛентаНовостей = &ЛентаНовостей
			|;
			|
			|// Запрос 1
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(Спр.Ссылка) КАК КоличествоНовостейПомеченныхНаУдаление
			|ИЗ
			|	Справочник.Новости КАК Спр
			|ГДЕ
			|	Спр.ЛентаНовостей = &ЛентаНовостей
			|	И Спр.ПометкаУдаления = ИСТИНА
			|;
			|
			|// Запрос 2
			|ВЫБРАТЬ
			|	Рег.ДатаЗагрузкиПоследнихНовостей       КАК ДатаПоследнейУспешнойЗагрузки,
			|	Рег.КоличествоНеудачПриЗагрузкеНовостей КАК КоличествоНеудачПриЗагрузкеНовостей
			|ИЗ
			|	РегистрСведений.ДатыЗагрузкиПоследнихНовостей КАК Рег
			|ГДЕ
			|	Рег.ЛентаНовостей = &ЛентаНовостей
			|";
		Запрос.УстановитьПараметр("ЛентаНовостей", Объект.Ссылка);

		РезультатыЗапроса = Запрос.ВыполнитьПакет();

		Если НЕ РезультатыЗапроса[0].Пустой() Тогда
			Выборка = РезультатыЗапроса[0].Выбрать(ОбходРезультатаЗапроса.Прямой);
			Если Выборка.Следующий() Тогда
				КоличествоНовостейВсего = Выборка.КоличествоНовостейВсего;
			КонецЕсли;
		КонецЕсли;
		Если НЕ РезультатыЗапроса[1].Пустой() Тогда
			Выборка = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.Прямой);
			Если Выборка.Следующий() Тогда
				КоличествоНовостейПомеченныхНаУдаление = Выборка.КоличествоНовостейПомеченныхНаУдаление;
			КонецЕсли;
		КонецЕсли;
		Если НЕ РезультатыЗапроса[2].Пустой() Тогда
			Выборка = РезультатыЗапроса[2].Выбрать(ОбходРезультатаЗапроса.Прямой);
			Если Выборка.Следующий() Тогда
				ДатаПоследнейУспешнойЗагрузки       = Выборка.ДатаПоследнейУспешнойЗагрузки;
				КоличествоНеудачПриЗагрузкеНовостей = Выборка.КоличествоНеудачПриЗагрузкеНовостей;
			КонецЕсли;
		КонецЕсли;
		ТекстСтатистики = "";
		Если Объект.ЛокальнаяЛентаНовостей = Истина Тогда
			Если КоличествоНовостейВсего = 0 Тогда
				ТекстСтатистики = НСтр("ru='Нет ни одной новости
					|'");
			Иначе
				ТекстСтатистики = СтрШаблон(
					НСтр("ru='Всего новостей в этой ленте новостей: %1
						|'"),
					КоличествоНовостейВсего);
				Если КоличествоНовостейПомеченныхНаУдаление = 0 Тогда
					ТекстСтатистики = ТекстСтатистики + " " + НСтр("ru='и среди них нет ни одной помеченной на удаление
						|'");
				ИначеЕсли КоличествоНовостейПомеченныхНаУдаление = КоличествоНовостейВсего Тогда // Все помечены на удаление
					ТекстСтатистики = ТекстСтатистики + ", " + НСтр("ru='все они помечены на удаление (а значит не видны в списке новостей)
						|'");
				Иначе
					ТекстСтатистики = СтрШаблон(
						НСтр("ru=', из них помечено на удаление %1
							|'"),
						КоличествоНовостейПомеченныхНаУдаление);
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если КоличествоНовостейВсего = 0 Тогда
				ТекстСтатистики = НСтр("ru='Нет ни одной загруженной новости
					|'");
			Иначе
				ТекстСтатистики = СтрШаблон(
					НСтр("ru='Всего новостей в этой ленте новостей: %1'"),
					КоличествоНовостейВсего);
				Если КоличествоНовостейПомеченныхНаУдаление = 0 Тогда
					ТекстСтатистики = ТекстСтатистики + " " + НСтр("ru='и среди них нет ни одной помеченной на удаление
						|'");
				ИначеЕсли КоличествоНовостейПомеченныхНаУдаление = КоличествоНовостейВсего Тогда // Все помечены на удаление
					ТекстСтатистики = ТекстСтатистики + ", " + НСтр("ru='все они помечены на удаление (а значит не видны в списке новостей)
						|'");
				Иначе
					ТекстСтатистики = ТекстСтатистики + ", "
						+ СтрШаблон(
							НСтр("ru='из них помечено на удаление %1
								|'"),
							КоличествоНовостейПомеченныхНаУдаление);
				КонецЕсли;
			КонецЕсли;
			Если ДатаПоследнейУспешнойЗагрузки = '00010101' Тогда
				Если КоличествоНеудачПриЗагрузкеНовостей = 0 Тогда
					ТекстСтатистики = ТекстСтатистики + НСтр("ru='Новости по этой ленте новостей еще не загружались'");
				Иначе
					ТекстСтатистики = ТекстСтатистики
						+ СтрШаблон(
							НСтр("ru='Новости по этой ленте новостей еще ни разу не были успешно загружены (было %1 неудачных попыток загрузки новостей)'"),
							КоличествоНеудачПриЗагрузкеНовостей);
				КонецЕсли;
			Иначе
				Если КоличествоНеудачПриЗагрузкеНовостей = 0 Тогда
					ТекстСтатистики = ТекстСтатистики
						+ СтрШаблон(
							НСтр("ru='Новости по этой ленте новостей последний раз были успешно загружены %1 (по местному времени)'"),
							Формат(МестноеВремя(ДатаПоследнейУспешнойЗагрузки), "ДЛФ=DT"));
				Иначе
					ТекстСтатистики = ТекстСтатистики
						+ СтрШаблон(
							НСтр("ru='Новости по этой ленте новостей последний раз были успешно загружены %1 (по местному времени), после этого было %2 неудачных попыток загрузки новостей.'"),
							Формат(МестноеВремя(ДатаПоследнейУспешнойЗагрузки), "ДЛФ=DT"),
							КоличествоНеудачПриЗагрузкеНовостей);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Элементы.ДекорацияСтатистика.Заголовок = ТекстСтатистики;
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;

	Элементы.Логин.Доступность  = (Объект.ВариантЛогинаПароля = ПредопределенноеЗначение("Перечисление.ВариантЛогинаПароляДляЛентыНовостей.ВручнуюОдинаковыйДляВсех"));
	Элементы.Пароль.Доступность = (Объект.ВариантЛогинаПароля = ПредопределенноеЗначение("Перечисление.ВариантЛогинаПароляДляЛентыНовостей.ВручнуюОдинаковыйДляВсех"));

	// Если это локальная лента новостей (новости создаются напрямую в справочнике, а не загружаются из файла или интернета),
	// то можно отключить все поля для обновления.
	лкПараметрыОбновленияДоступны = Истина;
	Если Объект.ЗагруженоССервера = Ложь Тогда
		Если Объект.ЛокальнаяЛентаНовостей = Истина Тогда
			лкПараметрыОбновленияДоступны = Ложь;
		КонецЕсли;
	КонецЕсли;

	Элементы.ГруппаФайлНовостей.Доступность                               = лкПараметрыОбновленияДоступны;
	Элементы.ГруппаДоступПоЛогинуПаролю.Доступность                       = лкПараметрыОбновленияДоступны;
	Элементы.ГруппаЗагрузкаБинарныхДанных.Доступность                     = лкПараметрыОбновленияДоступны;
	Элементы.ГруппаСтраницаНастройкиЧастотыОбновленияНовостей.Доступность = лкПараметрыОбновленияДоступны;
	Элементы.ГруппаРедактированиеЛокальныхНовостей.Доступность            = НЕ лкПараметрыОбновленияДоступны;

	Если ВРег(Объект.Протокол) = ВРег("file") Тогда
		Элементы.Сайт.Доступность = Ложь;
		Элементы.ИмяФайла.КнопкаВыбора = Истина;
	Иначе
		Элементы.Сайт.Доступность = лкПараметрыОбновленияДоступны;
		Элементы.ИмяФайла.КнопкаВыбора = Ложь;
	КонецЕсли;

	Если (Форма.РольДоступнаАдминистратор)
			И (НЕ Объект.Ссылка.Пустая()) 
			И (НЕ Объект.ЛокальнаяЛентаНовостей) Тогда
		Элементы.ДекорацияСтатистикаПодсказка.Видимость = Истина;
	Иначе
		Элементы.ДекорацияСтатистикаПодсказка.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
// Процедура заполняет переданный параметр остальными данными.
//
// Параметры:
//  лкТекущиеДанные - Структура, данные строки и т.п. - данные, которые необходимо заполнить.
//                    Должен содержать колонки (ключи):
//                     - КатегорияНовостей (нужно для расчета),
//                     - КатегорияНовостейЗаполняетсяАвтоматически (будет заполняться),
//                     - СписокЗначенийОтборов (будет заполняться).
//
Процедура ЗаполнитьДанныеСтрокиДоступныхКатегорий(лкТекущиеДанные)

	// Если новостей > 20, то это может привести к неявному вызову сервера.
	НайденныеСтроки = ЭтаФорма.ТаблицаАвтоматическихЗначенийКатегорийНовостей.НайтиСтроки(
		Новый Структура("КатегорияНовостей", лкТекущиеДанные.КатегорияНовостей));
	Если НайденныеСтроки.Количество() > 0 Тогда
		// Заполнить признак "ЗаполняетсяАвтоматически".
		лкТекущиеДанные.КатегорияНовостейЗаполняетсяАвтоматически = Истина;
		// Заполнить значения отборов, если эта категория заполняется автоматически, или очистить список.
		лкТекущиеДанные.СписокЗначенийОтборов = НайденныеСтроки[0].СписокЗначенийОтборов;
	Иначе
		лкТекущиеДанные.КатегорияНовостейЗаполняетсяАвтоматически = Ложь;
		лкТекущиеДанные.СписокЗначенийОтборов.Очистить(); ////? Загрузить данные из глобальных отборов.
	КонецЕсли;

КонецПроцедуры

// Процедура устанавливает условное оформление в форме.
//
// Параметры:
//  Нет.
//
&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	// 1. Заполняется автоматически: колонка РазрешеноНастраиватьПользователям.
		Элемент = УсловноеОформление.Элементы.Добавить();

		// Оформляемые поля.
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДоступныеКатегорииНовостейРазрешеноНастраиватьПользователям.Имя);

		// Отбор.
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.ДоступныеКатегорииНовостей.КатегорияНовостейЗаполняетсяАвтоматически");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;

		// Оформление.
		Элемент.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);

		// Использование.
		Элемент.Использование = Истина;

	// 2. Заполняется автоматически: колонка СписокЗначенийОтборов.
		Элемент = УсловноеОформление.Элементы.Добавить();

		// Оформляемые поля.
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДоступныеКатегорииНовостейСписокЗначенийОтборов.Имя);

		// Отбор.
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.ДоступныеКатегорииНовостей.КатегорияНовостейЗаполняетсяАвтоматически");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;

		// Оформление.
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);

		// Использование.
		Элемент.Использование = Истина;

	// 3. Заполняется автоматически: колонка КатегорияНовостей.
		Элемент = УсловноеОформление.Элементы.Добавить();

		// Оформляемые поля.
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДоступныеКатегорииНовостейКатегорияНовостей.Имя);

		// Отбор.
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.ДоступныеКатегорииНовостей.КатегорияНовостейЗаполняетсяАвтоматически");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;

		// Оформление.
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);

		// Использование.
		Элемент.Использование = Истина;

	// 4. Заполняется автоматически: колонка ЗаполняетсяАвтоматически.
		Элемент = УсловноеОформление.Элементы.Добавить();

		// Оформляемые поля.
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДоступныеКатегорииНовостейКатегорияНовостейЗаполняетсяАвтоматически.Имя);

		// Отбор.
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.ДоступныеКатегорииНовостей.КатегорияНовостейЗаполняетсяАвтоматически");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;

		// Оформление.
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Истина);
		Элемент.Оформление.УстановитьЗначениеПараметра("Отображать", Истина);
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);

		// Использование.
		Элемент.Использование = Истина;

	// 5. Заполняется автоматически: колонка ЗаполняетсяАвтоматически.
		Элемент = УсловноеОформление.Элементы.Добавить();

		// Оформляемые поля.
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДоступныеКатегорииНовостейКатегорияНовостейЗаполняетсяАвтоматически.Имя);

		// Отбор.
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.ДоступныеКатегорииНовостей.КатегорияНовостейЗаполняетсяАвтоматически");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Ложь;

		// Оформление.
		Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
		Элемент.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);

		// Использование.
		Элемент.Использование = Истина;

	// 6. Загруженные с сервера - выделить цветом колонку Категория и запретить ее менять.
		Элемент = УсловноеОформление.Элементы.Добавить();

		// Оформляемые поля.
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДоступныеКатегорииНовостейКатегорияНовостей.Имя);

		// Отбор.
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.ЗагруженоССервера");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;

		// Оформление.
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);

		// Использование.
		Элемент.Использование = Истина;

	// 7. Кнопка КомандаНастроитьОтборПользователей доступна только если ЭтаФорма.ПользователиМогутНастроитьОтборы = Истина.
		Элемент = УсловноеОформление.Элементы.Добавить();

		// Оформляемые поля.
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДоступныеКатегорииНовостейКомандаНастроитьОтборПользователей.Имя);

		// Отбор.
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ЭтаФорма.ПользователиМогутНастроитьОтборы");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Ложь;

		// Оформление.
		Элемент.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);

		// Использование.
		Элемент.Использование = Истина;

	// 8. Таблица РедакторыНовостей, для ПолныеПрава запрещать редактирование строки и выделять ее серым цветом.
		Элемент = УсловноеОформление.Элементы.Добавить();

		// Оформляемые поля.
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РедакторыНовостейПометка.Имя);
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РедакторыНовостейПользовательПредставление.Имя);

		// Отбор.
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("РедакторыНовостей.ПолныеПрава");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;

		// Оформление.
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);

		// Использование.
		Элемент.Использование = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПослеПодбораКатегорий(Результат, ДополнительныеПараметры) Экспорт

	ТипМассив = Тип("Массив");

	Если ТипЗнч(Результат) = ТипМассив Тогда
		// 1. Удалить строки, которых нет в массиве.
		БылиУдаления = Истина;
		Пока БылиУдаления = Истина Цикл
			БылиУдаления = Ложь;
			Для каждого ТекущаяСтрока Из Объект.ДоступныеКатегорииНовостей Цикл
				Если Результат.Найти(ТекущаяСтрока.КатегорияНовостей) = Неопределено Тогда
					Объект.ДоступныеКатегорииНовостей.Удалить(ТекущаяСтрока);
					БылиУдаления = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		// 2. Добавить строки, которых нет в табличной части,но которые добавили.
		Для каждого ТекущаяСтрока Из Результат Цикл
			МассивНайденныхСтрок = Объект.ДоступныеКатегорииНовостей.НайтиСтроки(Новый Структура("КатегорияНовостей", ТекущаяСтрока));
			Если МассивНайденныхСтрок.Количество() = 0 Тогда
				НоваяСтрока = Объект.ДоступныеКатегорииНовостей.Добавить();
				НоваяСтрока.КатегорияНовостей                         = ТекущаяСтрока;
				НоваяСтрока.РазрешеноНастраиватьПользователям         = Ложь;
				НоваяСтрока.ОтборНастраиваетсяНаСервере               = Ложь;
				// КатегорияНовостейЗаполняетсяАвтоматически и СписокЗначенийОтборов заполнятся на основании КатегорияНовостей.
				ЗаполнитьДанныеСтрокиДоступныхКатегорий(НоваяСтрока);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеНастройкиИсключенийВидимости(Результат, ДополнительныеПараметры) Экспорт

	ТипСтруктура = Тип("Структура");

	Если ТипЗнч(Результат) = ТипСтруктура Тогда // Нажали ОК, в противном случае вернется или Неопределено (нажали Esc), или КодВозвратаДиалога.Отмена.
		ИнтерактивныеДействия = ЗагрузитьПараметрыИзФормыНастройкиИсключенийВидимости(Результат);
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

// Функция возвращает URL для получения новостей.
// Все параметры (в поле ИмяФайла они заключены в квадратные скобки) будут заменены на конкретные значения.
// Возвращаемый результат можно вставить в браузер и он отобразит новости.
// Процедура формирует текстовое представление для URL.
//
// Параметры:
//  лкСсылка;
//  лкПротокол;
//  лкСайт;
//  лкИмяФайла.
//
// Возвращаемое значение:
//   Строка - URL получения новостей, готовый для вставки в браузер.
//
&НаКлиентеНаСервереБезКонтекста
Функция СформироватьПолныйАдресЛентыНовостей(лкСсылка, лкПротокол, лкСайт, лкИмяФайла)

	Если Найти(ВРег(лкПротокол), ВРег("http")) = 1 Тогда // http, https
		Если ПустаяСтрока(лкСайт) Тогда
			Результат = НСтр("ru='Не заполнено поле Сайт'");
		ИначеЕсли ПустаяСтрока(лкИмяФайла) Тогда
			Результат = НСтр("ru='Не заполнено поле Имя файла'");
		Иначе // Все поля заполнены
			Результат = ОбработкаНовостейВызовСервера.ПолучитьАдресДляПолученияНовостей(
				Новый Структура("Ссылка, Протокол, Сайт, ИмяФайла",
					лкСсылка,
					лкПротокол,
					лкСайт,
					лкИмяФайла),
				Неопределено,
				Неопределено);
		КонецЕсли;
	Иначе
		Результат = НСтр("ru='Адрес ленты новостей можно получить только для протоколов http и https'");
	КонецЕсли;

	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ИмяФайлаПослеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт

	ТипМассив = Тип("Массив");

	Если ТипЗнч(ВыбранныеФайлы) = ТипМассив Тогда
		Если ВыбранныеФайлы.Количество() >= 1 Тогда
			Объект.ИмяФайла = ВыбранныеФайлы[0];
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
