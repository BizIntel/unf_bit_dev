
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СтрокаПоиска") Тогда
		СтрокаПоиска = СокрЛП(Параметры.СтрокаПоиска);
	КонецЕсли;
	
	Макет = Справочники.КлассификаторЕдиницИзмерения.ПолучитьМакет("КлассификаторЕдиницИзмерения");
	Классификатор.Вывести(Макет);
	Классификатор.ФиксацияСверху = 1;
	
	ОбластьКодЧисловойЛево = Макет.Области.КодЧисловой.Лево;
	ОбластьКодЧисловойПраво = Макет.Области.КодЧисловой.Право;
	ОбластьНаименованиеКраткоеЛево = Макет.Области.НаименованиеКраткое.Лево;
	ОбластьНаименованиеКраткоеПраво = Макет.Области.НаименованиеКраткое.Право;
	ОбластьНаименованиеПолноеЛево = Макет.Области.НаименованиеПолное.Лево;
	ОбластьНаименованиеПолноеПраво = Макет.Области.НаименованиеПолное.Право;
	ОбластьКодБуквенныйМеждународныйЛево = Макет.Области.КодБуквенныйМеждународный.Лево;
	ОбластьКодБуквенныйМеждународныйПраво = Макет.Области.КодБуквенныйМеждународный.Право;
	
	Если НЕ ПустаяСтрока(СтрокаПоиска) Тогда
		
		НайденнаяОбласть = Классификатор.НайтиТекст(СтрокаПоиска,, Классификатор.Области.КодЧисловой,,,, Истина);
		Элементы.Классификатор.ТекущаяОбласть = НайденнаяОбласть;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ИскатьСтрокуВТаблице(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ЗакрытьФорму	= Истина;
	Область			= Элементы.Классификатор.ТекущаяОбласть;
	
	ВыполнитьВыбор(Область, ЗакрытьФорму);
	Если ЗакрытьФорму Тогда
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Выбрать(Команда)
	
	Область = Элементы.Классификатор.ТекущаяОбласть;
	ВыполнитьВыбор(Область);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИЗакрыть(Команда)
	
	ЗакрытьФорму	= Истина;
	Область 		= Элементы.Классификатор.ТекущаяОбласть;
	
	ВыполнитьВыбор(Область, ЗакрытьФорму);
	Если ЗакрытьФорму Тогда
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИскатьНазад(Команда)
	
	ИскатьСтрокуВТаблице(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИскатьВперед(Команда)
	
	ИскатьСтрокуВТаблице(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИскатьСтрокуВТаблице(ИскатьВперед)
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Не задана строка поиска'"));
		ТекущийЭлемент = Элементы.СтрокаПоиска;
		Возврат;
		
	КонецЕсли;
	
	НайденнаяОбласть = Классификатор.НайтиТекст(СокрЛП(СтрокаПоиска), Элементы.Классификатор.ТекущаяОбласть, , , , ИскатьВперед, Истина);
	Если НайденнаяОбласть = Неопределено Тогда
		
		НайденнаяОбласть = Классификатор.НайтиТекст(СокрЛП(СтрокаПоиска), , , , , , Истина);
		Если НайденнаяОбласть = Неопределено Тогда
			
			ТекстСообщения = НСтр("ru = 'Единица измерения не найдена'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "СтрокаПоиска");
			ТекущийЭлемент = Элементы.СтрокаПоиска;
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущийЭлемент = Элементы.Классификатор;
	
	МассивОбластей = Новый Массив;
	МассивОбластей.Добавить(НайденнаяОбласть);
	Элементы.Классификатор.УстановитьВыделенныеОбласти(МассивОбластей);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыбор(ТекущаяОбласть, ЗакрытьФорму = Истина)
	
	КодЧисловой				= Классификатор.Область(ТекущаяОбласть.Верх, ОбластьКодЧисловойЛево, ТекущаяОбласть.Низ, ОбластьКодЧисловойПраво).Текст;
	НаименованиеКраткое		= Классификатор.Область(ТекущаяОбласть.Верх, ОбластьНаименованиеКраткоеЛево, ТекущаяОбласть.Низ, ОбластьНаименованиеКраткоеПраво).Текст;
	НаименованиеПолное		= Классификатор.Область(ТекущаяОбласть.Верх, ОбластьНаименованиеПолноеЛево, ТекущаяОбласть.Низ, ОбластьНаименованиеПолноеПраво).Текст;
	МеждународноеСокращение = Классификатор.Область(ТекущаяОбласть.Верх, ОбластьКодБуквенныйМеждународныйЛево, ТекущаяОбласть.Низ, ОбластьКодБуквенныйМеждународныйПраво).Текст;
	
	ТекстСообщения = "";
	Если ПустаяСтрока(КодЧисловой) Тогда
		
		ТекстСообщения = НСтр("ru = 'числовой код'");
		
	КонецЕсли;
	
	Если ПустаяСтрока(НаименованиеКраткое) Тогда
		
		ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", ", ") + НСтр("ru = 'краткое наименование'");
		
	КонецЕсли;
	
	Если ПустаяСтрока(НаименованиеПолное) Тогда
		
		ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", ", ") + НСтр("ru = 'полное наименование'");
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
		
		ТекстСообщения = НСтр("ru = 'Указана не результирующая ячейка (не заполнены показатели: '") + ТекстСообщения + НСтр("ru = ')'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Классификатор");
		ЗакрытьФорму = Ложь;
		Возврат;
		
	КонецЕсли;

	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Код", КодЧисловой);
	ЗначенияЗаполнения.Вставить("Наименование", СтрПолучитьСтроку(НаименованиеКраткое, 1));
	ЗначенияЗаполнения.Вставить("НаименованиеПолное", СтрПолучитьСтроку(НаименованиеПолное, 1));
	ЗначенияЗаполнения.Вставить("МеждународноеСокращение", СтрПолучитьСтроку(МеждународноеСокращение, 1));
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ЕдИзм = ПоискСуществующейЕдиницы(ПараметрыФормы);
	Если ЕдИзм <> Неопределено Тогда
		
		ПараметрыФормы.Вставить("Ключ", ЕдИзм);
		ОткрытьФорму("Справочник.КлассификаторЕдиницИзмерения.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
		ТекстПредупреждения = НСтр("ru = 'Единица измерения была добавлена раннее.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПоказатьПредупреждение(, ТекстПредупреждения, , );
		ЗакрытьФорму = Ложь;
		
	Иначе
		
		ДобавленныйЭлемент = Неопределено;
		СоздатьЕдиницуИзмеренияПоКлассификатору(ЗначенияЗаполнения);
		Оповестить("ВыборЕдиницыИзмеренияИзКлассификатора", ДобавленныйЭлемент, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоискСуществующейЕдиницы(Знач ПараметрыФормы)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КлассификаторЕдиницИзмерения.Ссылка
	|ИЗ
	|	Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
	|ГДЕ
	|	КлассификаторЕдиницИзмерения.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", ПараметрыФормы.ЗначенияЗаполнения.Код);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура СоздатьЕдиницуИзмеренияПоКлассификатору(ЗначенияЗаполнения)
	
	Попытка
		
		ЕдиницаИзмеренияПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(ЕдиницаИзмеренияПоКлассификатору, ЗначенияЗаполнения);
		ЕдиницаИзмеренияПоКлассификатору.Записать();
		ДобавленныйЭлемент = ЕдиницаИзмеренияПоКлассификатору.Ссылка;
		
	Исключение
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Добавление единиц измерения из ОКЕИ'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти
