#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция возвращает количество направлений деятельности
//
// Параметры:
//  ВключаяОсновное			 - булево	 - учитывать основное направление деятельности
//  ВключаяПрочее			 - булево	 - учитывать прочее направление деятельности
// 
// Возвращаемое значение:
//  число - количество направлений деятельности
//
Функция КоличествоНаправленийДеятельности(ВключаяОсновное = Истина, ВключаяПрочее = Истина) Экспорт
	
	Исключаемые = Новый Массив;
	Если Не ВключаяОсновное Тогда
		Исключаемые.Добавить(Справочники.НаправленияДеятельности.ОсновноеНаправление);
	КонецЕсли;
	Если Не ВключаяПрочее Тогда
		Исключаемые.Добавить(Справочники.НаправленияДеятельности.Прочее);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(НаправленияДеятельности.Ссылка) КАК Количество
		|ИЗ
		|	Справочник.НаправленияДеятельности КАК НаправленияДеятельности
		|ГДЕ
		|	НЕ НаправленияДеятельности.Ссылка В (&Исключаемые)";
		
	Запрос.УстановитьПараметр("Исключаемые", Исключаемые);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат ?(Выборка.Количество = Null, 0, Выборка.Количество);
	
КонецФункции

// Перенесет все направления деятельности для договоров обслуживания в иерархию выбранного в настройках объекта.
//
Процедура СгруппироватьНаправленияДеятельностиДоговоровОбслуживания() Экспорт
	
	Родитель = Константы.БиллингГоловноеНаправлениеДеятельности.Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДоговорыКонтрагентов.ДоговорОбслуживанияНаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ЭтоДоговорОбслуживания
	|	И ДоговорыКонтрагентов.ДоговорОбслуживанияНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НачатьТранзакцию();
	Пока Выборка.Следующий() Цикл
		
		НаправлениеДеятельностиОбъект = Выборка.НаправлениеДеятельности.ПолучитьОбъект();
		НаправлениеДеятельностиОбъект.Родитель = Родитель;
		НаправлениеДеятельностиОбъект.Записать();
		
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Номенклатура") Тогда
		
		Если НЕ Параметры.Номенклатура.СчетУчетаЗатрат.ТипСчета = Перечисления.ТипыСчетов.Расходы Тогда
			
			ТекстСообщения = НСтр("ru = 'Для этого расхода нельзя выбрать направление деятельности!'");
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(, ТекстСообщения);
			
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;	
		
	КонецЕсли;	
		
	Если Параметры.Свойство("СчетЗатрат") Тогда
		
		Если ЗначениеЗаполнено(Параметры.СчетЗатрат) Тогда
			
			Если Параметры.СчетЗатрат.ТипСчета = Перечисления.ТипыСчетов.ПрочиеРасходы Тогда
				
				ТекстСообщения = НСтр("ru = 'Для счета типа ""Прочие расходы"" направление деятельности не указывается!'");
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(, ТекстСообщения);
				
				СтандартнаяОбработка = Ложь;
				
			ИначеЕсли Параметры.СчетЗатрат.ТипСчета = Перечисления.ТипыСчетов.НезавершенноеПроизводство
				  ИЛИ Параметры.СчетЗатрат.ТипСчета = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
				  
				ТекстСообщения = НСтр("ru = 'Для счета типа ""Незавершенное производство"" или ""Косвенные затраты"" направление деятельности не указывается!'");
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(, ТекстСообщения);
				
				СтандартнаяОбработка = Ложь;
				
			КонецЕсли;
			
		Иначе
			
			ТекстСообщения = НСтр("ru = 'Не выбран счет!'");
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(, ТекстСообщения);
			
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПолученияДанныхВыбора()

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
