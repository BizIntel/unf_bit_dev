
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СчетУчетаВыручкиОтПродаж = Параметры.СчетУчетаВыручкиОтПродаж;
	СчетУчетаСебестоимостиПродаж = Параметры.СчетУчетаСебестоимостиПродаж;
	СчетУчетаПрибыли = Параметры.СчетУчетаПрибыли;
	НаправлениеДеятельности = Параметры.Ссылка;
	
	Если ОтказИзменитьСчетаУчета(НаправлениеДеятельности) Тогда
		Элементы.ГруппаСчетовУчета.Подсказка = НСтр("ru = 'В базе есть доходы или расходы по этому направлению деятельности! Изменение счета учета выручки от продаж запрещено!'");
		Элементы.ГруппаСчетовУчета.Доступность = Ложь;
		Элементы.ПоУмолчанию.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Ссылка = Справочники.НаправленияДеятельности.Прочее Тогда
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипСчета", Перечисления.ТипыСчетов.ПрочиеДоходы);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.СчетУчетаВыручкиОтПродаж.ПараметрыВыбора = НовыеПараметры;
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипСчета", Перечисления.ТипыСчетов.ПрочиеРасходы);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.СчетУчетаСебестоимостиПродаж.ПараметрыВыбора = НовыеПараметры;
		
	Иначе
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипСчета", Перечисления.ТипыСчетов.Доходы);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.СчетУчетаВыручкиОтПродаж.ПараметрыВыбора = НовыеПараметры;
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипСчета", Перечисления.ТипыСчетов.СебестоимостьПродаж);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.СчетУчетаСебестоимостиПродаж.ПараметрыВыбора = НовыеПараметры;
		
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СчетУчетаВыручкиОтПродажПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СчетУчетаВыручкиОтПродаж) Тогда
		СчетУчетаВыручкиОтПродаж = ПредопределенноеЗначение("ПланСчетов.Управленческий.ВыручкаОтПродаж");
	КонецЕсли;
	ОповеститьОбИзмененииСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаСебестоимостиПродажПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СчетУчетаСебестоимостиПродаж) Тогда
		СчетУчетаСебестоимостиПродаж = ПредопределенноеЗначение("ПланСчетов.Управленческий.СебестоимостьПродаж");
	КонецЕсли;
	ОповеститьОбИзмененииСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаПрибылиПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СчетУчетаПрибыли) Тогда
		СчетУчетаПрибыли = ПредопределенноеЗначение("ПланСчетов.Управленческий.ПрибылиИУбыткиБезНалогаНаПрибыль");
	КонецЕсли;
	ОповеститьОбИзмененииСчетов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

&НаКлиенте
Процедура ПоУмолчанию(Команда)
	
	СчетУчетаВыручкиОтПродаж = ПредопределенноеЗначение("ПланСчетов.Управленческий.ВыручкаОтПродаж");
	СчетУчетаСебестоимостиПродаж = ПредопределенноеЗначение("ПланСчетов.Управленческий.СебестоимостьПродаж");
	СчетУчетаПрибыли = ПредопределенноеЗначение("ПланСчетов.Управленческий.ПрибылиИУбыткиБезНалогаНаПрибыль");
	ОповеститьОбИзмененииСчетов();
	
КонецПроцедуры // ПоУмолчанию()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция проверяет возможность изменения счета.
//
&НаСервере
Функция ОтказИзменитьСчетаУчета(НаправлениеДеятельности)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоходыИРасходы.Период,
	|	ДоходыИРасходы.Регистратор,
	|	ДоходыИРасходы.НомерСтроки,
	|	ДоходыИРасходы.Активность,
	|	ДоходыИРасходы.Организация,
	|	ДоходыИРасходы.СтруктурнаяЕдиница,
	|	ДоходыИРасходы.НаправлениеДеятельности,
	|	ДоходыИРасходы.ЗаказПокупателя,
	|	ДоходыИРасходы.СчетУчета,
	|	ДоходыИРасходы.СуммаДоходов,
	|	ДоходыИРасходы.СуммаРасходов,
	|	ДоходыИРасходы.СодержаниеПроводки
	|ИЗ
	|	РегистрНакопления.ДоходыИРасходы КАК ДоходыИРасходы
	|ГДЕ
	|	ДоходыИРасходы.НаправлениеДеятельности = &НаправлениеДеятельности");
	
	Запрос.УстановитьПараметр("НаправлениеДеятельности", НаправлениеДеятельности);
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции // ОтказИзменитьСчетУчетаВыручкиОтПродаж()

&НаКлиенте
Процедура ОповеститьОбИзмененииСчетов()
	
	СтруктураПараметры = Новый Структура(
		"СчетУчетаВыручкиОтПродаж, СчетУчетаСебестоимостиПродаж, СчетУчетаПрибыли",
		СчетУчетаВыручкиОтПродаж, СчетУчетаСебестоимостиПродаж, СчетУчетаПрибыли
	);
	
	Оповестить("ИзменилисьСчетаНаправленияДеятельности", СтруктураПараметры);
	
КонецПроцедуры

#КонецОбласти
