
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Заполнение списка валют из ОКВ
	ЗакрыватьПриВыборе = Ложь;
	ЗаполнитьТаблицуВалют();
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_Валюта" Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметр) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Параметр));
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлментовФормы

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	Элементы.СписокВалют.ОтборСтрок = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Элементы.СписокВалют.ОтборСтрок = Неопределено;
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Индекс", Текст);
	Элементы.СписокВалют.ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокВалют

&НаКлиенте
Процедура СписокВалютВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборВСпискеВалют(СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВыполнить()
	
	ОбработатьВыборВСпискеВалют();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизвольнаяВалюта(Команда)
	
	ОткрытьФорму("Справочник.Валюты.ФормаОбъекта");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Инструкция = СтандартныеПодсистемыСервер.ИнструкцияУсловногоОформления();
	Инструкция.Поля = "Представление";
	Инструкция.Отборы.Вставить("Валюты.Распространенная", Ложь);
	Инструкция.Оформление.Вставить("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);
	СтандартныеПодсистемыСервер.ДобавитьЭлементУсловногоОформления(ЭтаФорма, Инструкция);
	
КонецПроцедуры

// Заполнение списка валют из макета ОКВ
&НаСервере
Процедура ЗаполнитьТаблицуВалют()
	
	КлассификаторXML = Справочники.Валюты.ПолучитьМакет("ОбщероссийскийКлассификаторВалют").ПолучитьТекст();
	
	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	КлассификаторТаблица.Колонки.Добавить(
	"Ranked", 
	Новый ОписаниеТипов("Булево"));
	
	Для Каждого ТекСтрока Из КлассификаторТаблица Цикл
		ТекСтрока.Ranked = ЗначениеЗаполнено(ТекСтрока.Rank);
	КонецЦикла;
	
	КлассификаторТаблица.Сортировать("Ranked УБЫВ, Rank, Name");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Валюты.Код
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	НЕ Валюты.ПометкаУдаления");
	СозданныеВалюты = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	
	Для Каждого ЗаписьОКВ Из КлассификаторТаблица Цикл
		
		Если НЕ СозданныеВалюты.Найти(ЗаписьОКВ.Code)=Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		НоваяСтрока = Валюты.Добавить();
		НоваяСтрока.КодВалютыЦифровой = ЗаписьОКВ.Code;
		НоваяСтрока.КодВалютыБуквенный = ЗаписьОКВ.CodeSymbol;
		НоваяСтрока.Наименование = ЗаписьОКВ.Name;
		НоваяСтрока.СтраныИТерритории = ЗаписьОКВ.Description;
		НоваяСтрока.Загружается = ЗаписьОКВ.RBCLoading;
		НоваяСтрока.ПараметрыПрописиНаРусском = ЗаписьОКВ.NumerationItemOptions;
		НоваяСтрока.Ранг = ЗаписьОКВ.Rank;
		НоваяСтрока.Распространенная = ЗаписьОКВ.Ranked;
		НоваяСтрока.СимвольноеПредставление = ЗаписьОКВ.CurrencySymbol;
		НоваяСтрока.Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"%1, %2",
		ЗаписьОКВ.Name,
		ЗаписьОКВ.CodeSymbol);
		
		НоваяСтрока.Индекс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"%1 %2 %3",
		ЗаписьОКВ.Name,
		ЗаписьОКВ.Description,
		ЗаписьОКВ.CodeSymbol);
		
		НоваяСтрока.Флаг = ФлагДляВалюты(НоваяСтрока.КодВалютыБуквенный);
		
		Если ЗаписьОКВ.RBCLoading Тогда
			НоваяСтрока.СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.ЗагрузкаИзИнтернета
		Иначе
			НоваяСтрока.СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.РучнойВвод;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьВыбранныеСтроки(Знач ВыбранныеСтроки)
	
	Результат = Новый Массив;
	
	Для каждого НомерСтроки Из ВыбранныеСтроки Цикл
		
		ТекущиеДанные = Валюты[НомерСтроки];
		
		ВалютаСсылка = Справочники.Валюты.НайтиПоКоду(ТекущиеДанные.КодВалютыЦифровой);
		
		Если ЗначениеЗаполнено(ВалютаСсылка) Тогда
			
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВалютаСсылка, "ПометкаУдаления") Тогда
				ВалютаОбъект = ВалютаСсылка.ПолучитьОбъект();
				ВалютаОбъект.ПометкаУдаления = Ложь;
			КонецЕсли;
			
		Иначе
			
			ВалютаОбъект = Справочники.Валюты.СоздатьЭлемент();
			
		КонецЕсли;
		
		ВалютаОбъект.Код = ТекущиеДанные.КодВалютыЦифровой;
		ВалютаОбъект.Наименование = ТекущиеДанные.КодВалютыБуквенный;
		ВалютаОбъект.НаименованиеПолное = ТекущиеДанные.Наименование;
		ВалютаОбъект.ЗагружаетсяИзИнтернета = ТекущиеДанные.Загружается;
		ВалютаОбъект.ПараметрыПрописиНаРусском = ТекущиеДанные.ПараметрыПрописиНаРусском;
		ВалютаОбъект.СпособУстановкиКурса = ТекущиеДанные.СпособУстановкиКурса;
		Если ЗначениеЗаполнено(ТекущиеДанные.СимвольноеПредставление) Тогда
			ВалютаОбъект.СимвольноеПредставление = ТекущиеДанные.СимвольноеПредставление;
		Иначе
			ВалютаОбъект.СимвольноеПредставление = ТекущиеДанные.КодВалютыБуквенный;
		КонецЕсли;
		ВалютаОбъект.Записать();
		
		ДанныеВалюты = Новый Структура;
		ДанныеВалюты.Вставить("Валюта", ВалютаОбъект.Ссылка);
		ДанныеВалюты.Вставить("КодВалюты", ВалютаОбъект.Код);
		ДанныеВалюты.Вставить("ЗагружаетсяИзИнтернета", ВалютаОбъект.ЗагружаетсяИзИнтернета);
		
		Результат.Добавить(ДанныеВалюты);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборВСпискеВалют(СтандартнаяОбработка = Неопределено)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеЗаписанныхВалют = ЗаписатьВыбранныеСтроки(Элементы.СписокВалют.ВыделенныеСтроки);
	
	ОповеститьОВыборе(ДанныеЗаписанныхВалют);
	
	ПоказатьОповещениеПользователя(
	НСтр("ru = 'Валюты добавлены.'"),,,
	БиблиотекаКартинок.Информация32);
	Закрыть();
	
КонецПроцедуры

// Функция возвращает порядковый номер для определения
// индекса пиктограммы по буквенному коду валюты
//
// Параметры:
//  КодВалютыБуквенный	 - Строка - буквенный код валюты из классификатора
// 
// Возвращаемое значение:
//  Число - индекс пиктограммы флага валюты в ОбщиеКартинки.Флаги
//
&НаКлиентеНаСервереБезКонтекста
Функция ФлагДляВалюты(КодВалютыБуквенный)
	
	КодыВалют = Новый Массив;
	КодыВалют.Добавить("USD");
	КодыВалют.Добавить("EUR");
	КодыВалют.Добавить("GBP");
	КодыВалют.Добавить("CHF");
	КодыВалют.Добавить("JPY");
	КодыВалют.Добавить("CNY");
	КодыВалют.Добавить("BYR");
	КодыВалют.Добавить("KZT");
	КодыВалют.Добавить("UAH");
	КодыВалют.Добавить("TRY");
	КодыВалют.Добавить("PLN");
	
	Результат = КодыВалют.Найти(КодВалютыБуквенный);
	Если Результат = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат Результат + 1;
	
КонецФункции

#КонецОбласти
