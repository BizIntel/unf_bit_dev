
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьСтраницыСессийОбмена();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавлениеРеквизитов(Сообщение, ДобавляемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Сообщение) Тогда
		Возврат;
	КонецЕсли;
	
	Идентификатор = СтрЗаменить(Сообщение.УникальныйИдентификатор(), "-", "");
	
	Реквизит = Новый РеквизитФормы("Сообщение" + Идентификатор, Новый ОписаниеТипов("СправочникСсылка.ГИСМПрисоединенныеФайлы"), "", НСтр("ru = 'Сообщение'"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	Реквизит = Новый РеквизитФормы("Подпись" + Идентификатор, Новый ОписаниеТипов("ФорматированнаяСтрока"), "", НСтр("ru = 'Подпись'"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	Реквизит = Новый РеквизитФормы("ДатаСоздания" + Идентификатор, Новый ОписаниеТипов("Дата"), "", НСтр("ru = 'Дата запроса'"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	Реквизит = Новый РеквизитФормы("ТекстSOAP" + Идентификатор, Новый ОписаниеТипов("Строка"), "", НСтр("ru = 'Текст SOAP'"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	Реквизит = Новый РеквизитФормы("ТекстXML" + Идентификатор, Новый ОписаниеТипов("Строка"), "", НСтр("ru = 'Текст XML'"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
КонецПроцедуры

&НаСервере
Функция ДобавитьСтраницу(ИмяСтраницы, Заголовок, Родитель, Идентификатор)
	
	ИмяЭлемента = ИмяСтраницы + Идентификатор;
	Элемент = Элементы.Найти(ИмяЭлемента);
	Если Элемент = Неопределено Тогда
		Элемент = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Родитель);
		Элемент.Вид       = ВидГруппыФормы.Страница;
		Элемент.Заголовок = Заголовок;
	КонецЕсли;
	
	Возврат Элемент;
	
КонецФункции

&НаСервере
Функция ДобавитьПолеТекстовогоДокумента(ИмяРеквизита, Значение, Страница, Идентификатор)
	
	ИмяРеквизита = ИмяРеквизита + Идентификатор;
	ЭтотОбъект[ИмяРеквизита] = Значение;
	
	Элемент = Элементы.Найти(ИмяРеквизита);
	Если Элемент = Неопределено Тогда
		Элемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Страница);
		Элемент.ПутьКДанным        = ИмяРеквизита;
		Элемент.Вид                = ВидПоляФормы.ПолеТекстовогоДокумента;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КонецЕсли;
	
	Возврат Элемент;
	
КонецФункции

&НаСервере
Функция ДобавитьПолеВвода(ИмяРеквизита, Заголовок, Значение, Страница, Идентификатор)
	
	ИмяРеквизита = ИмяРеквизита + Идентификатор;
	ЭтотОбъект[ИмяРеквизита] = Значение;
	
	Элемент = Элементы.Найти(ИмяРеквизита);
	Если Элемент = Неопределено Тогда
		Элемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Страница);
		Элемент.ПутьКДанным        = ИмяРеквизита;
		Элемент.Заголовок          = Заголовок;
		Элемент.Вид                = ВидПоляФормы.ПолеВвода;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	КонецЕсли;
	
	Возврат Элемент;
	
КонецФункции

&НаСервере
Функция ДобавитьНадпись(ИмяРеквизита, Заголовок, Значение, Страница, Идентификатор)
	
	ИмяРеквизита = ИмяРеквизита + Идентификатор;
	ЭтотОбъект[ИмяРеквизита] = Значение;
	
	Элемент = Элементы.Найти(ИмяРеквизита);
	Если Элемент = Неопределено Тогда
		Элемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Страница);
		Элемент.ПутьКДанным        = ИмяРеквизита;
		Элемент.Заголовок          = Заголовок;
		Элемент.Вид                = ВидПоляФормы.ПолеНадписи;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элемент.АвтоМаксимальнаяШирина = Ложь;
	КонецЕсли;
	
	Возврат Элемент;
	
КонецФункции

&НаСервере
Процедура ДобавлениеЭлементов(СтрокаТЧ, РеквизитыСообщений)
	
	Если Не ЗначениеЗаполнено(СтрокаТЧ.Сообщение) Тогда
		Возврат;
	КонецЕсли;
	
	Идентификатор = СтрЗаменить(СтрокаТЧ.Сообщение.УникальныйИдентификатор(), "-", "");
	
	ИмяЭлемента = "Страница" + Идентификатор;
	Страница = Элементы.Найти(ИмяЭлемента);
	Если Страница = Неопределено Тогда
		Страница = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Элементы.Страницы);
		Страница.Вид = ВидГруппыФормы.Страница;
	КонецЕсли;
	
	Страница.Заголовок = СтрокаТЧ.Заголовок;
	Страница.Подсказка = СтрокаТЧ.Подсказка;
	
	Если СтрокаТЧ.ТипСообщения = Перечисления.ТипыСообщенийГИСМ.Входящее Тогда
		Страница.Картинка = БиблиотекаКартинок.ВходящийЗапросГИСМ
	ИначеЕсли СтрокаТЧ.ТипСообщения = Перечисления.ТипыСообщенийГИСМ.Исходящее Тогда
		Страница.Картинка = БиблиотекаКартинок.ИсходящийЗапросГИСМ;
	КонецЕсли;
	
	ИмяЭлемента = "Страницы" + Идентификатор;
	ВложенныеСтраницы = Элементы.Найти(ИмяЭлемента);
	Если ВложенныеСтраницы = Неопределено Тогда
		ВложенныеСтраницы = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Страница);
		ВложенныеСтраницы.Вид = ВидГруппыФормы.Страницы;
		ВложенныеСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСнизу;
	КонецЕсли;

	СтраницаТекстXML  = ДобавитьСтраницу("СтраницаТекстXML",  НСтр("ru = 'Текст XML'"),  ВложенныеСтраницы, Идентификатор);
	СтраницаТекстSOAP = ДобавитьСтраницу("СтраницаТекстSOAP", НСтр("ru = 'Текст SOAP'"), ВложенныеСтраницы, Идентификатор);
	СтраницаПрочее    = ДобавитьСтраницу("СтраницаПрочее",    НСтр("ru = 'Прочее'"),     ВложенныеСтраницы, Идентификатор);
	
	Тексты = ТекстыСообщения(СтрокаТЧ.Сообщение);
	
	ДобавитьПолеТекстовогоДокумента("ТекстXML",  Тексты.XML,  СтраницаТекстXML,  Идентификатор);
	ДобавитьПолеТекстовогоДокумента("ТекстSOAP", Тексты.SOAP, СтраницаТекстSOAP, Идентификатор);
	
	РеквизитыСообщения = РеквизитыСообщений.Найти(СтрокаТЧ.Сообщение, "Ссылка");
	
	СертификатКриптографии = ИнтеграцияГИСМКлиентСервер.СертификатКриптографииИзКонвертаSOAP(Тексты.SOAP);
	Подпись = ИнтеграцияГИСМКлиентСервер.ПредставлениеПодписи(СертификатКриптографии, РеквизитыСообщения, Ложь, ЦветаСтиля);
	
	ДобавитьПолеВвода("Сообщение", НСтр("ru = 'Сообщение'"), РеквизитыСообщения.Ссылка, СтраницаПрочее, Идентификатор);
	ДобавитьПолеВвода("ДатаСоздания", НСтр("ru = 'Дата создания'"), РеквизитыСообщения.ДатаСоздания, СтраницаПрочее, Идентификатор);
	ДобавитьНадпись("Подпись", НСтр("ru = 'Подпись'"), Подпись, Страница, Идентификатор);
	
КонецПроцедуры

&НаСервере
Функция АнализСообщенийПередачиДанных(Сообщение, Операция = Неопределено) Экспорт
	
	ОперацииПередачиДанных = Новый Массив;
	ОперацииПолученияКвитанций = Новый Массив;
	Если Операция <> Неопределено Тогда
		Если ТипЗнч(Операция) = Тип("Массив") Тогда
			ОперацииПередачиДанных = Операция;
		Иначе
			ОперацииПередачиДанных.Добавить(Операция);
		КонецЕсли;
	Иначе
		ОперацииПередачиДанных.Добавить(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сообщение, "Операция"));
	КонецЕсли;
	
	Для Каждого Значение Из ИнтеграцияГИСМ.ОперацииПередачиДанных() Цикл
		ОперацииПолученияКвитанций.Добавить(ИнтеграцияГИСМВызовСервера.ОперацияЗапросаКвитанции(Значение));
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла                     КАК Документ,
	|	ГИСМПрисоединенныеФайлы.Ссылка                            КАК Ссылка,
	|	ГИСМПрисоединенныеФайлы.ТипСообщения                      КАК ТипСообщения,
	|	ГИСМПрисоединенныеФайлы.Операция                          КАК Операция,
	|	ГИСМПрисоединенныеФайлы.СообщениеОснование                КАК СообщениеОснование,
	|	ГИСМПрисоединенныеФайлы.СообщениеОснованиеСтатусОбработки КАК СообщениеОснованиеСтатусОбработки,
	|	ГИСМПрисоединенныеФайлы.ДатаПроверкиПодписи               КАК ДатаПроверкиПодписи,
	|	ГИСМПрисоединенныеФайлы.ПодписьВерна                      КАК ПодписьВерна,
	|	ГИСМПрисоединенныеФайлы.ДатаСоздания                      КАК ДатаСоздания
	|ПОМЕСТИТЬ Сообщения
	|ИЗ
	|	Справочник.ГИСМПрисоединенныеФайлы КАК ГИСМПрисоединенныеФайлы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГИСМПрисоединенныеФайлы КАК ФайлОснование
	|		ПО ФайлОснование.ВладелецФайла = ГИСМПрисоединенныеФайлы.ВладелецФайла
	|ГДЕ
	|	ФайлОснование.Ссылка = &ФайлОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаДанных.Документ                                                     КАК Документ,
	|
	|	ПередачаДанных.Ссылка                                                       КАК Запрос,
	|	ПередачаДанных.Операция                                                     КАК ЗапросОперация,
	|	ПередачаДанных.ДатаСоздания                                                 КАК ЗапросДатаСоздания,
	|
	|	ЕСТЬNULL(ОтветНаПередачуДанных.Ссылка, &ПустаяСсылка)                           КАК ОтветНаЗапрос,
	|	ЕСТЬNULL(ОтветНаПередачуДанных.Операция, &ПустаяОперация)                       КАК ОтветНаЗапросОперация,
	|	ЕСТЬNULL(ОтветНаПередачуДанных.ДатаСоздания, ДатаВремя(1,1,1))                  КАК ОтветНаЗапросДатаСоздания,
	|	ЕСТЬNULL(ОтветНаПередачуДанных.СообщениеОснованиеСтатусОбработки, Неопределено) КАК ОтветНаЗапросСтатусОбработки,
	|
	|	ЕСТЬNULL(ЗапросКвитанция.Ссылка, &ПустаяСсылка)                          КАК ЗапросКвитанции,
	|	ЕСТЬNULL(ЗапросКвитанция.Операция, &ПустаяОперация)                      КАК ЗапросКвитанцииОперация,
	|	ЕСТЬNULL(ЗапросКвитанция.ДатаСоздания, &ПустаяСсылка)                    КАК ЗапросКвитанцииДатаСоздания,
	|
	|	ЕСТЬNULL(ОтветКвитанция.Ссылка, &ПустаяСсылка)                           КАК ОтветНаЗапросКвитанции,
	|	ЕСТЬNULL(ОтветКвитанция.Операция, &ПустаяОперация)                       КАК ОтветНаЗапросКвитанцииОперация,
	|	ЕСТЬNULL(ОтветКвитанция.ДатаСоздания, &ПустаяСсылка)                     КАК ОтветНаЗапросКвитанцииДатаСоздания,
	|	ЕСТЬNULL(ОтветКвитанция.СообщениеОснованиеСтатусОбработки, Неопределено) КАК ОтветНаЗапросКвитанцииСтатусОбработки
	|ИЗ
	|	Сообщения КАК ПередачаДанных
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Сообщения КАК ОтветНаПередачуДанных
	|		ПО ПередачаДанных.Ссылка = ОтветНаПередачуДанных.СообщениеОснование
	|			И (ОтветНаПередачуДанных.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийГИСМ.Входящее))
	|			И (ОтветНаПередачуДанных.Операция В (&Операция))
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Сообщения КАК ЗапросКвитанция
	|		ПО ОтветНаПередачуДанных.Ссылка = ЗапросКвитанция.СообщениеОснование
	|			И (ЗапросКвитанция.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийГИСМ.Исходящее))
	|			И (ЗапросКвитанция.Операция В (&ОперацияПолученияКвитанции))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Сообщения КАК ОтветКвитанция
	|		ПО ЗапросКвитанция.Ссылка = ОтветКвитанция.СообщениеОснование
	|			И (ОтветКвитанция.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийГИСМ.Входящее))
	|			И (ОтветКвитанция.Операция В (&ОперацияПолученияКвитанции))
	|ГДЕ
	|	ПередачаДанных.Операция В (&Операция)
	|	И ПередачаДанных.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийГИСМ.Исходящее)
	|	И ( ЕСТЬNULL(ПередачаДанных.Ссылка, &ПустаяСсылка)        = &ФайлОснование
	|	ИЛИ ЕСТЬNULL(ОтветНаПередачуДанных.Ссылка, &ПустаяСсылка) = &ФайлОснование
	|	ИЛИ ЕСТЬNULL(ЗапросКвитанция.Ссылка, &ПустаяСсылка)       = &ФайлОснование
	|	ИЛИ ЕСТЬNULL(ОтветКвитанция.Ссылка, &ПустаяСсылка)        = &ФайлОснование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|Из
	|	Сообщения
	|");
	
	Запрос.УстановитьПараметр("ФайлОснование",              Сообщение);
	Запрос.УстановитьПараметр("ПустаяОперация",             Перечисления.ОперацииОбменаГИСМ.ПустаяСсылка());
	Запрос.УстановитьПараметр("Операция",                   ОперацииПередачиДанных);
	Запрос.УстановитьПараметр("ОперацияПолученияКвитанции", ОперацииПолученияКвитанций);
	Запрос.УстановитьПараметр("ПустаяСсылка",               Справочники.ГИСМПрисоединенныеФайлы.ПустаяСсылка());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ПоследовательностьСообщений", ПоследовательностьСообщенийПередачиДанных(Результат[1].Выгрузить()));
	ВозвращаемоеЗначение.Вставить("РеквизитыСообщений", Результат[2].Выгрузить());
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаСервере
Функция ПоследовательностьСообщенийПередачиДанных(Данные) Экспорт
	
	Колонки = Новый Массив;
	
	Колонка = Новый Структура;
	Колонка.Вставить("Приоритет",    1);
	Колонка.Вставить("Имя",          "Запрос");
	Колонка.Вставить("ТипСообщения", Перечисления.ТипыСообщенийГИСМ.Исходящее);
	Колонки.Добавить(Колонка);
	
	Колонка = Новый Структура;
	Колонка.Вставить("Приоритет",    2);
	Колонка.Вставить("Имя",          "ОтветНаЗапрос");
	Колонка.Вставить("ТипСообщения", Перечисления.ТипыСообщенийГИСМ.Входящее);
	Колонки.Добавить(Колонка);
	
	Колонка = Новый Структура;
	Колонка.Вставить("Приоритет",    3);
	Колонка.Вставить("Имя",          "ЗапросКвитанции");
	Колонка.Вставить("ТипСообщения", Перечисления.ТипыСообщенийГИСМ.Исходящее);
	Колонки.Добавить(Колонка);
	
	Колонка = Новый Структура;
	Колонка.Вставить("Приоритет",    4);
	Колонка.Вставить("Имя",          "ОтветНаЗапросКвитанции");
	Колонка.Вставить("ТипСообщения", Перечисления.ТипыСообщенийГИСМ.Входящее);
	Колонки.Добавить(Колонка);
	
	ПоследовательностьСообщений = Новый ТаблицаЗначений;
	ПоследовательностьСообщений.Колонки.Добавить("Сообщение");
	ПоследовательностьСообщений.Колонки.Добавить("ДатаСоздания");
	ПоследовательностьСообщений.Колонки.Добавить("Приоритет");
	ПоследовательностьСообщений.Колонки.Добавить("Заголовок");
	ПоследовательностьСообщений.Колонки.Добавить("Подсказка");
	ПоследовательностьСообщений.Колонки.Добавить("ТипСообщения");
	
	ОперацииПолученияКвитанций = Новый Массив;
	Для Каждого КлючИЗначение Из ИнтеграцияГИСМ.КатегорииОпераций().ПолучениеКвитанции Цикл
		ОперацииПолученияКвитанций.Добавить(КлючИЗначение.Ключ);
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из Данные Цикл
		Для Каждого Колонка Из Колонки Цикл
			Если ПоследовательностьСообщений.Найти(СтрокаТЧ[Колонка.Имя]) = Неопределено Тогда
				
				Если Не ЗначениеЗаполнено(СтрокаТЧ[Колонка.Имя]) Тогда
					Продолжить;
				КонецЕсли;
				
				Операция = СтрокаТЧ[Колонка.Имя + "Операция"];
				
				НоваяСтрока = ПоследовательностьСообщений.Добавить();
				НоваяСтрока.Сообщение    = СтрокаТЧ[Колонка.Имя];
				НоваяСтрока.ДатаСоздания = СтрокаТЧ[Колонка.Имя + "ДатаСоздания"];
				НоваяСтрока.Приоритет    = Колонка.Приоритет;
				
				Если ОперацииПолученияКвитанций.Найти(Операция) = Неопределено Тогда
					НоваяСтрока.Заголовок = Операция;
					НоваяСтрока.Подсказка = Операция;
				Иначе
					НоваяСтрока.Заголовок = НСтр("ru = 'Получение квитанции'");
					НоваяСтрока.Подсказка = Операция;
				КонецЕсли;
				
				НоваяСтрока.ТипСообщения = Колонка.ТипСообщения;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ПоследовательностьСообщений.Сортировать("ДатаСоздания Возр,Приоритет Возр");
	
	Возврат ПоследовательностьСообщений;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтраницыСессийОбмена()
	
	Результат = АнализСообщенийПередачиДанных(Объект.Ссылка);

	ДобавляемыеРеквизиты = Новый Массив;
	УдаляемыеРеквизиты = Новый Массив;
	
	РеквизитыФормы = ПолучитьРеквизиты();
	Для Каждого Реквизит Из РеквизитыФормы Цикл
		Если Реквизит.Имя <> "Объект" Тогда
			УдаляемыеРеквизиты.Добавить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Если УдаляемыеРеквизиты.Количество() > 0 Тогда
		ИзменитьРеквизиты(, УдаляемыеРеквизиты);
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из Результат.ПоследовательностьСообщений Цикл
		ДобавлениеРеквизитов(СтрокаТЧ.Сообщение, ДобавляемыеРеквизиты);
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для Каждого СтрокаТЧ Из Результат.ПоследовательностьСообщений Цикл
		ДобавлениеЭлементов(СтрокаТЧ, Результат.РеквизитыСообщений);
	КонецЦикла;
	
	ИдентификаторПоследнейСтраницы = СтрЗаменить(Результат.ПоследовательностьСообщений[Результат.ПоследовательностьСообщений.Количество() - 1].Сообщение.УникальныйИдентификатор(), "-", "");
	ПоследняяСтраница = Элементы.Найти("Страница" + ИдентификаторПоследнейСтраницы);
	Элементы.Страницы.ТекущаяСтраница = ПоследняяСтраница;
	
КонецПроцедуры

&НаСервере
Функция ТекстыСообщения(Сообщение)
	
	Если Не ЗначениеЗаполнено(Сообщение) Тогда
		Возврат "";
	КонецЕсли;
	
	КонвертSOAP = ИнтеграцияГИСМВызовСервера.КонвертSOAPИзПротокола(Сообщение);
	ТекстСообщенияXML = ИнтеграцияГИСМВызовСервера.ТекстВходящегоСообщенияXML(КонвертSOAP);
	
	Попытка
		ФорматированныйТекстСообщенияXML = ИнтеграцияГИСМВызовСервера.ФорматироватьXMLСПараметрами(ТекстСообщенияXML, ИнтеграцияГИСМ.ПараметрыФорматированияXML(Истина, "  "));
	Исключение
		ФорматированныйТекстСообщенияXML = ТекстСообщенияXML;
	КонецПопытки;
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("XML", ФорматированныйТекстСообщенияXML);
	ВозвращаемоеЗначение.Вставить("SOAP", КонвертSOAP);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти