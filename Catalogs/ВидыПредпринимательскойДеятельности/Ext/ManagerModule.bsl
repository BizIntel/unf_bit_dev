#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗаполнитьВидыПредпринимательскойДеятельности() Экспорт
	
	// Получим список уже загруженных стран
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыПредпринимательскойДеятельности.Код КАК Код,
	|	ВидыПредпринимательскойДеятельности.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыПредпринимательскойДеятельности КАК ВидыПредпринимательскойДеятельности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	
	ТабКоды = Запрос.Выполнить().Выгрузить();
	ТабКоды.Индексы.Добавить("Код");
	
	Макет = Справочники.ВидыПредпринимательскойДеятельности.ПолучитьМакет("Классификатор");
	ТабЗн = ОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;
	
	Для Каждого Стр Из ТабЗн Цикл
		
		СтрокаКода = ТабКоды.Найти(Стр.Code, "Код");
		
		Если  СтрокаКода = Неопределено Тогда
			Элемент = Справочники.ВидыПредпринимательскойДеятельности.СоздатьЭлемент();
		Иначе
			Элемент = СтрокаКода.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		
		Элемент.Код					= Стр.Code;
		Элемент.Наименование		= Стр.ShortName;
		Элемент.ВидДеятельности		= Стр.FullName;
		Элемент.ФизическийПоказатель= Стр.PhisEntity;
		Элемент.БазоваяДоходность	= Стр.BaseProfit;
		Элемент.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает реквизиты справочника, которые образуют естественный ключ
//  для элементов справочника.
//
// Возвращаемое значение: Массив(Строка) - массив имен реквизитов, образующих
//  естественный ключ.
//
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив();
	
	Результат.Добавить("Код");
	Результат.Добавить("ПометкаУдаления");
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли