
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораУсловийСтарта(Элементы.УсловиеСтарта.СписокВыбора);
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПриСозданииПриЧтенииНаСервере();
		
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			Если Параметры.ЗначениеКопирования.НастройкиОтбора.Получить() <> Неопределено Тогда
				КомпоновщикНастроек.ЗагрузитьНастройки(Параметры.ЗначениеКопирования.НастройкиОтбора.Получить());
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииПриЧтенииНаСервере();
	
	Если ТекущийОбъект.НастройкиОтбора.Получить() <> Неопределено Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(ТекущийОбъект.НастройкиОтбора.Получить());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.НастройкиОтбора		= Новый ХранилищеЗначения(КомпоновщикНастроек.Настройки);
	ТекущийОбъект.ПредставлениеОтбора	= ОтчетыУНФКлиентСервер.ПредставлениеОтбора(КомпоновщикНастроек.Настройки.Отбор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УсловиеСтартаПриИзменении(Элемент)
	
	ИнициализироватьКомпоновщикНастроек();
	Объект.ПредставлениеОтбора = ОтчетыУНФКлиентСервер.ПредставлениеОтбора(КомпоновщикНастроек.Настройки.Отбор);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиОтборПриИзменении(Элемент)
	
	Объект.ПредставлениеОтбора = ОтчетыУНФКлиентСервер.ПредставлениеОтбора(КомпоновщикНастроек.Настройки.Отбор);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДействия

&НаКлиенте
Процедура ДействияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора",	Истина);
		ПараметрыФормы.Вставить("УсловиеСтарта",Объект.УсловиеСтарта);
		
		ОткрытьФорму("Справочник.ДействияРабочегоПроцесса.ФормаВыбора", ПараметрыФормы, Элементы.Действия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		НоваяСтрока = Объект.Действия.Добавить();
		НоваяСтрока.Действие = ВыбранноеЗначение;
		
		Элементы.Действия.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		УправлениеФормой(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияПослеУдаления(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияДействиеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияДействиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДействияДействиеТипДействия");
	
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение	= Новый ПолеКомпоновкиДанных("Объект.Действия.Действие");
	ОтборЭлемента.ВидСравнения	= ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='<Авто>'"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы	= Форма.Элементы;
	Объект		= Форма.Объект;
	
	Элементы.КритерииПравила.ЗаголовокСвернутогоОтображения = Элементы.КритерииПравила.Заголовок
		+ ?(ПустаяСтрока(Объект.ПредставлениеОтбора), "", ": " + Объект.ПредставлениеОтбора);
	
	ПредставлениеДействий = "";
	Для Каждого СтрокаДействий Из Объект.Действия Цикл
		ПредставлениеДействий = ПредставлениеДействий + Строка(СтрокаДействий.Действие) + ", ";
	КонецЦикла;
	Если Не ПустаяСтрока(ПредставлениеДействий) Тогда
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ПредставлениеДействий, 2);
	КонецЕсли;
	
	Элементы.ВыполняемыеДействия.ЗаголовокСвернутогоОтображения = Элементы.ВыполняемыеДействия.Заголовок
		+ ?(ПустаяСтрока(ПредставлениеДействий), "", ": " + ПредставлениеДействий);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииПриЧтенииНаСервере()
	
	ИнициализироватьКомпоновщикНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьКомпоновщикНастроек()
	
	Если ЗначениеЗаполнено(Объект.УсловиеСтарта) Тогда
		
		СКД = Справочники.ПравилаРабочегоПроцесса.ПолучитьСхемуКритериевОтбораПоСобытию(Объект.УсловиеСтарта);
		
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор)));
		КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
		КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораУсловийСтарта(СписокВыбора)
	
	СписокВыбора.Очистить();
	Для Каждого ЗначениеУсловия Из Метаданные.Перечисления.СобытияРабочегоПроцесса.ЗначенияПеречисления Цикл
		СписокВыбора.Добавить(Перечисления.СобытияРабочегоПроцесса[ЗначениеУсловия.Имя], ЗначениеУсловия.Синоним);
	КонецЦикла;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодсистемуПроизводство") Тогда
		СписокВыбора.Удалить(
			СписокВыбора.НайтиПоЗначению(Перечисления.СобытияРабочегоПроцесса.ИзменениеСостоянияЗаказаНаПроизводство));
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодсистемуРаботы") Тогда
		СписокВыбора.Удалить(
			СписокВыбора.НайтиПоЗначению(Перечисления.СобытияРабочегоПроцесса.ИзменениеСостоянияЗаказНаряда));
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРемонты") Тогда
		СписокВыбора.Удалить(
			СписокВыбора.НайтиПоЗначению(Перечисления.СобытияРабочегоПроцесса.ИзменениеСостоянияРемонта));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
