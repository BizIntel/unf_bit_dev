
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Владелец") И ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		Номенклатура = Параметры.Отбор.Владелец;
		КатегорияНоменклатуры = Номенклатура.КатегорияНоменклатуры;
		
		ТекстСообщения = "";
		Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнена номенклатура!'");
		ИначеЕсли Параметры.Свойство("ЭтоПриходныйДокумент") И Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
			ТекстСообщения = НСтр("ru = 'Для услуг сторонних контрагентов не ведется учет по характеристикам!'");
		ИначеЕсли НЕ Номенклатура.ИспользоватьХарактеристики Тогда
			ТекстСообщения = НСтр("ru = 'Для номенклатуры не ведется учет по характеристикам!'");
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			Возврат;
		КонецЕсли;
		
		Если Параметры.Свойство("ТекущаяСтрока") И ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
			Элементы.Список.ТекущаяСтрока = Параметры.ТекущаяСтрока;
		КонецЕсли;
		
		// Очистим переданный отбор и установим свой
		Параметры.Отбор.Удалить("Владелец");
		УстановитьОтборПоВладельцуНаСервере();
		
		// УНФ СтандартныеПодсистемы.Свойства
		ПустаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		УправлениеСвойствамиПереопределяемый.ТаблицаСвойствПриСозданииНаСервере(ЭтотОбъект, ПустаяХарактеристика, КатегорияНоменклатуры, Ложь);
		
	Иначе
		
		Если Элементы.Найти("СписокСоздать") <> Неопределено Тогда
			Элементы.СписокСоздать.Доступность = Ложь;
		КонецЕсли;
		Элементы.СписокКонтекстноеМенюСоздать.Доступность = Ложь;
		
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Элементы.Характеристики.Отображение = ОтображениеОбычнойГруппы.Нет;
		Элементы.Характеристики.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

// Обновляем отбор списка Характеристик по значениям доп. реквизитов.
//
&НаКлиенте
Процедура Свойства_ТаблицаСвойстваИЗначенияЗначениеПриИзменении(Элемент)
	
	Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	
	УстановитьОтборПоВладельцуНаКлиенте();
	УстановитьОтборПоСвойствамИЗначениям();
	
КонецПроцедуры

// При клике на Характеристику из списка выводим в подвале формы ее наименование для печати.
//
&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ТекущаяХарактеристикаНаименованиеДляПечати = Элемент.ТекущиеДанные.НаименованиеДляПечати;
		Возврат;
	КонецЕсли;
	
	ТекущаяХарактеристикаНаименованиеДляПечати = "";
	
КонецПроцедуры

// Открываем карточку создания новой Характеристики и передаем значения отборов по доп. реквизитам.
//
&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Владелец", Номенклатура);
	ЗначенияЗаполнения.Вставить("ЗначенияДополнительныхРеквизитов", ЗначенияОтбора());
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры // СписокПередНачаломДобавления()

#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

&НаКлиенте
Процедура ОчиститьВсеОтборы(Команда)
	
	Для каждого Стр Из Свойства_ТаблицаСвойстваИЗначения Цикл
		
		Стр.Значение = Неопределено;
		
	КонецЦикла;
	
	Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	УстановитьОтборПоВладельцуНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиПодобныеХарактеристики(Команда)
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьОтборПоЗначениямХарактеристики(ТекущаяСтрока.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Устанавливает отбор для формы выбора характеристик номенклатуры.
//
&НаСервере
Процедура УстановитьОтборПоВладельцуНаСервере()
	
	СписокОтбора = Новый СписокЗначений;
	СписокОтбора.Добавить(Номенклатура);
	СписокОтбора.Добавить(КатегорияНоменклатуры);
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(Список,"Владелец",СписокОтбора,Истина,ВидСравненияКомпоновкиДанных.ВСписке);
	
КонецПроцедуры // УстановитьОтборПоВладельцуНаСервере()

// Устанавливает отбор для формы выбора характеристик номенклатуры.
//
&НаКлиенте
Процедура УстановитьОтборПоВладельцуНаКлиенте()
	
	СписокОтбора = Новый СписокЗначений();
	СписокОтбора.Добавить(Номенклатура);
	СписокОтбора.Добавить(КатегорияНоменклатуры);
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(Список,"Владелец",СписокОтбора,Истина,ВидСравненияКомпоновкиДанных.ВСписке);
	
КонецПроцедуры // УстановитьОтборПоВладельцуНаКлиенте()

// Обходит таблицу свойств и устанавливает отбор списка по введенным значениям.
//
&НаКлиенте
Процедура УстановитьОтборПоСвойствамИЗначениям()
	
	Для каждого Строка Из Свойства_ТаблицаСвойстваИЗначения Цикл
		
		Если ЗначениеЗаполнено(Строка.Значение) Тогда
			
			УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(Список,"Ссылка.[" + Строка(Строка.Свойство) + "]", Строка.Значение);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет таблицу отборов значениями выбранной характеристики.
//
&НаСервере
Процедура УстановитьОтборПоЗначениямХарактеристики(Характеристика)
	
	Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	
	УстановитьОтборПоВладельцуНаСервере();
	
	Для каждого Эл Из Свойства_ТаблицаСвойстваИЗначения Цикл
		
		ЗначениеХарактеристики = Характеристика.ДополнительныеРеквизиты.Найти(Эл.Свойство, "Свойство");
		Если ЗначениеХарактеристики = Неопределено Тогда
			Эл.Значение = ЗначениеХарактеристики;
		Иначе
			Эл.Значение = ЗначениеХарактеристики.Значение;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Эл.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(Список, "Ссылка.[" + Строка(Эл.Свойство) + "]", Эл.Значение);
		
	КонецЦикла;
	
КонецПроцедуры

// Подготавливает значения отборов по доп. реквизитам для создания нового объекта.
//
&НаКлиенте
Функция ЗначенияОтбора()
	
	ЗначенияОтбора = Новый Соответствие;
	Для каждого Элемент Из Свойства_ТаблицаСвойстваИЗначения Цикл
		
		ЗначенияОтбора.Вставить(Элемент.Свойство, Элемент.Значение);
		
	КонецЦикла;
	
	Возврат ЗначенияОтбора;
	
КонецФункции // ЗначенияОтбора()

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.Свойства УНФ
&НаКлиенте
Процедура Свойства_ТаблицаСвойстваИЗначенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	УправлениеСвойствамиКлиентПереопределяемыйУНФ.ТаблицаСвойствПередНачаломДобавления(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура Свойства_ТаблицаСвойстваИЗначенияПередУдалением(Элемент, Отказ)
	
	Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	УправлениеСвойствамиКлиентПереопределяемыйУНФ.ТаблицаСвойствПередУдалением(Элемент, Отказ, Модифицированность);
	УстановитьОтборПоВладельцуНаКлиенте();
	УстановитьОтборПоСвойствамИЗначениям();
	
КонецПроцедуры
// Конец УНФ СтандартныеПодсистемы.Свойства

#КонецОбласти