#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	Результат = Новый Массив;
	Возврат Результат;
КонецФункции

// Функция определяет организацию, кассу и валюту выбранного эквайрингового терминала.
//
// Параметры:
//  ЭквайринговыйТерминал - СправочникСсылка.ЭквайринговыеТерминалы - Ссылка на эквайринговый терминал
//
// Возвращаемое значение:
//	Структура - Организация, Касса и Валюта эквайрингового терминала
//
Функция ПолучитьРеквизитыЭквайринговогоТерминала(ЭквайринговыйТерминал) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ЭквайринговыеТерминалы.Организация КАК Организация,
	|	ЭквайринговыеТерминалы.Касса КАК Касса
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|ГДЕ
	|	ЭквайринговыеТерминалы.Ссылка = &ЭквайринговыйТерминал
	|");
	
	Запрос.УстановитьПараметр("ЭквайринговыйТерминал", ЭквайринговыйТерминал);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Организация = Выборка.Организация;
		Касса = Выборка.Касса;
	Иначе
		Организация = Неопределено;
		Касса = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Организация, Касса",
		Организация,
		Касса
	);
	
	Возврат СтруктураРеквизитов;
	
КонецФункции // ПолучитьРеквизитыЭквайринговогоТерминала()

// Функция определяет эквайринговый терминал по выбранной кассе.
//
// Возвращает эквайринговый терминал, если найден один эквайринговый терминал.
// Возвращает Неопределено, если эквайринговый терминал не найден или эквайринговых терминалов больше одного.
//
// Параметры:
//  Организация - СправочникСсылка.Кассы (СправочникСсылка.КассыККМ) - Ссылка на кассу
//
// Возвращаемое значение:
//	СправочникСсылка.ЭквайринговыеТерминалы - Найденный эквайринговый терминал
//
Функция ПолучитьЭквайринговыйТерминалПоУмолчанию(Касса) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	ЭквайринговыеТерминалы.Ссылка КАК ЭквайринговыйТерминал
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|ГДЕ
	|	ЭквайринговыеТерминалы.Касса = &Касса");
	
	Запрос.УстановитьПараметр("Касса", Касса);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		ЭквайринговыйТерминал = Выборка.ЭквайринговыйТерминал;
	Иначе
		ЭквайринговыйТерминал = Неопределено;
	КонецЕсли;
	
	Возврат ЭквайринговыйТерминал;

КонецФункции // ПолучитьЭквайринговыйТерминалПоУмолчанию()

// Функция определяет эквайринговый терминал по выбранной кассе.
//
// Возвращает эквайринговый терминал, если найден один эквайринговый терминал.
// Возвращает Неопределено, если эквайринговый терминал не найден или эквайринговых терминалов больше одного.
//
// Параметры:
//  Организация - СправочникСсылка.Кассы (СправочникСсылка.КассыККМ) - Ссылка на кассу
//
// Возвращаемое значение:
//	СправочникСсылка.ЭквайринговыеТерминалы - Найденный эквайринговый терминал
//
Функция ПолучитьЭквайринговыйТерминалПоУмолчаниюДляОперацииЭквайринга(БанковскийСчет, Организация, Эквайрер = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	ЭквайринговыеТерминалы.Ссылка КАК ЭквайринговыйТерминал
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|ГДЕ
	|	НЕ ЭквайринговыеТерминалы.ПометкаУдаления
	|	И (&БанковскийСчетЭквайринг = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|			ИЛИ ЭквайринговыеТерминалы.БанковскийСчетЭквайринг = &БанковскийСчетЭквайринг)
	|	И (&Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ИЛИ ЭквайринговыеТерминалы.Организация = &Организация)
	|	И (&Эквайрер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ИЛИ &Эквайрер = НЕОПРЕДЕЛЕНО
	|			ИЛИ ЭквайринговыеТерминалы.Эквайрер = &Эквайрер)");
	
	Запрос.УстановитьПараметр("БанковскийСчетЭквайринг", БанковскийСчет);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Эквайрер", Эквайрер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		ЭквайринговыйТерминал = Выборка.ЭквайринговыйТерминал;
	Иначе
		ЭквайринговыйТерминал = Неопределено;
	КонецЕсли;
	
	Возврат ЭквайринговыйТерминал;

КонецФункции // ПолучитьЭквайринговыйТерминалПоУмолчанию()

// Процедура получения списка видов платежных карт, обслуживаемых по договору эквайринга
//
// Параметры:
//  ЭквайринговыйТерминал - СправочникСсылка.ЭквайринговыеТерминалы - Ссылка на эквайринговый терминал
//
// Возвращое значение:
//	Массив - Массив видов платежных карт
//
Функция ВидыПлатежныхКарт(ЭквайринговыйТерминал) Экспорт
	
	МассивВидовПлатежныхКарт = Новый Массив;
	
	Если ЗначениеЗаполнено(ЭквайринговыйТерминал) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВидыПлатежныхКарт.ВидПлатежнойКарты КАК ВидПлатежнойКарты
		|ИЗ
		|	Справочник.ЭквайринговыеТерминалы.ВидыПлатежныхКарт КАК ВидыПлатежныхКарт
		|ГДЕ
		|	ВидыПлатежныхКарт.Ссылка = &Ссылка");
		
		Запрос.УстановитьПараметр("Ссылка", ЭквайринговыйТерминал);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивВидовПлатежныхКарт.Добавить(Выборка.ВидПлатежнойКарты);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивВидовПлатежныхКарт;
	
КонецФункции // ВидыПлатежныхКарт()

// Процедура получения списка видов платежных карт, обслуживаемых по договору эквайринга
//
// Параметры:
//  ЭквайринговыйТерминал - СправочникСсылка.ЭквайринговыеТерминалы - Ссылка на эквайринговый терминал
//
// Возвращое значение:
//	Массив - Массив видов платежных карт
//
Функция ВидыПлатежныхКартИПроцентыКомиссии(ЭквайринговыйТерминал) Экспорт
	
	ТаблицаВидовПлатежныхКартИПроцентовКомиссии = Новый ТаблицаЗначений;
	
	Если ЗначениеЗаполнено(ЭквайринговыйТерминал) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВидыПлатежныхКарт.ВидПлатежнойКарты КАК ВидПлатежнойКарты,
		|	ВидыПлатежныхКарт.ПроцентКомиссии
		|ИЗ
		|	Справочник.ЭквайринговыеТерминалы.ВидыПлатежныхКарт КАК ВидыПлатежныхКарт
		|ГДЕ
		|	ВидыПлатежныхКарт.Ссылка = &Ссылка");
		
		Запрос.УстановитьПараметр("Ссылка", ЭквайринговыйТерминал);
		
		ТаблицаВидовПлатежныхКартИПроцентовКомиссии = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Возврат ТаблицаВидовПлатежныхКартИПроцентовКомиссии;
	
КонецФункции // ВидыПлатежныхКарт()

#КонецОбласти

#КонецЕсли
