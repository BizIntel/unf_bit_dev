#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события "ОбработкаПроверкиЗаполнения".
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверитьКассу(Отказ);
	
	Если ИспользоватьБезПодключенияОборудования Тогда
		
		УдаляемыйРеквизит = ПроверяемыеРеквизиты.Найти("ПодключаемоеОборудование");
		Если УдаляемыйРеквизит <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ПодключаемоеОборудование"));
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Эквайрер.ВестиРасчетыПоДоговорам Тогда
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Договор");
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ИспользоватьБезПодключенияОборудования Тогда
		ПодключаемоеОборудование = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ПриЗаписи объекта.
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Обновим информацию в служебном справочнике.
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЭквайринговыеТерминалыВидыПлатежныхКарт.ВидПлатежнойКарты
		|ИЗ
		|	Справочник.ЭквайринговыеТерминалы.ВидыПлатежныхКарт КАК ЭквайринговыеТерминалыВидыПлатежныхКарт
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПлатежныхКарт КАК ВидыПлатежныхКарт
		|		ПО ЭквайринговыеТерминалыВидыПлатежныхКарт.ВидПлатежнойКарты = ВидыПлатежныхКарт.Наименование
		|ГДЕ
		|	ЭквайринговыеТерминалыВидыПлатежныхКарт.Ссылка = &Ссылка
		|	И ВидыПлатежныхКарт.Ссылка ЕСТЬ NULL ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СправочникОбъект = Справочники.ВидыПлатежныхКарт.СоздатьЭлемент();
		СправочникОбъект.Наименование = Выборка.ВидПлатежнойКарты;
		Попытка
			СправочникОбъект.Записать();
		Исключение
			ТекстСообщения = НСтр("ru='Не удалось записать информацию о виде платежной карты (%1) в справочнке ""Виды платежных карт""'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.ВидПлатежнойКарты);

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

			ОписаниеОшибки = ИнформацияОбОшибке();
			ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);
		КонецПопытки;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	// Конец Обновим информацию в служебном справочнике.
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения,, "Код, Наименование");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура проверяет кассу, указанную в эквайринговом терминале.
//
Процедура ПроверитьКассу(Отказ)
	
	Если ТипЗнч(Касса) = Тип("СправочникСсылка.КассыККМ") Тогда
		Реквизиты = Справочники.КассыККМ.ПолучитьРеквизитыКассыККМ(Касса);
		
		Если ЗначениеЗаполнено(Организация)
		   И ЗначениеЗаполнено(Реквизиты.Организация)
		   И Организация <> Реквизиты.Организация Тогда
		
			Текст = НСтр("ru = 'Организация кассы не соответствует организации договора эквайринга'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ЭтотОбъект,
				"Касса",
				,
				Отказ
			);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьКассу()

#КонецОбласти


#КонецЕсли
