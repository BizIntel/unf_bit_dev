
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Изменение", Объект.Ссылка.Метаданные()) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("ИмяМенеджераПечати,ИменаМакетов,ПараметрКоманды,ПараметрыПечати");
	ЗаполнитьЗначенияСвойств(ПараметрыОткрытия, Параметры);
	
	УстановитьКлючСохраненияПоложенияОкна();
	
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаКонтактнаяИнформация");
	
	ДобавитьПоляЮрАдрес();
	
	ИменаРеквизитовДляЗаполнения = РеквизитыОрганизацииДляЗаполнения(Параметры.ИменаРеквизитовДляЗаполнения);
	
	Если ВсеТребуемыеРеквизитыЗаполнены(ИменаРеквизитовДляЗаполнения) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если РегистрыСведений.СчетчикиПодсказок.ПревышеноЗначение(
		Перечисления.ВидыПодсказок.РеквизитыОрганизацииДляПечати,
		5,,
		Параметры.Ключ) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НастроитьЭлементыФормы(ИменаРеквизитовДляЗаполнения);
	
	Если ЗначениеЗаполнено(Объект.ФайлЛоготип) Тогда
		АдресЛоготипа = НавигационнаяСсылкаКартинки(
		Объект.ФайлЛоготип,
		УникальныйИдентификатор);
	Конецесли;
	
	Если ЗначениеЗаполнено(Объект.ФайлФаксимильнаяПечать) Тогда
		АдресФаксимильнойПечати = НавигационнаяСсылкаКартинки(
		Объект.ФайлФаксимильнаяПечать,
		УникальныйИдентификатор);
	Конецесли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКлючСохраненияПоложенияОкна()
	
	Если ТипЗнч(ПараметрыОткрытия.ПараметрыПечати) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПараметрыОткрытия.ПараметрыПечати.Свойство("Идентификатор") Тогда
		Возврат;
	КонецЕсли;
	
	КлючСохраненияПоложенияОкна = СтрШаблон("%1/%2", Параметры.Ключ, ПараметрыОткрытия.ПараметрыПечати.Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_ПрисоединенныйФайл" Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИмяРеквизитаДляПомещаемогоИзображения) Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	Объект[ИмяРеквизитаДляПомещаемогоИзображения] = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
	
	ЭтаФорма[ФайлыСКартинками()[ИмяРеквизитаДляПомещаемогоИзображения]] = НавигационнаяСсылкаКартинки(
	Объект[ИмяРеквизитаДляПомещаемогоИзображения],
	УникальныйИдентификатор);
	
	ИмяРеквизитаДляПомещаемогоИзображения = "";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область КонтактнаяИнформация

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
		УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_ЮрАдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтаФорма, Элементы[ПредставлениеЮрАдреса], , СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура АдресЛоготипаНажатие(Элемент, СтандартнаяОбработка)
	
	ОбработатьНажатиеКартинки("ФайлЛоготип", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресФаксимильнойПечатиНажатие(Элемент, СтандартнаяОбработка)
	
	ОбработатьНажатиеКартинки("ФайлФаксимильнаяПечать", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура БанкНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Банки.ФормаВыбора",, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура БанкОчистка(Элемент, СтандартнаяОбработка)
	
	Элементы.Банк.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Банки");
	
КонецПроцедуры

&НаКлиенте
Процедура БанкСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Банки.ФормаОбъекта",,Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура БанкОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение = "ЗагрузитьКлассификатор" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Справочник.КлассификаторБанковРФ.Форма.ЗагрузкаКлассификатора");
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.КлассификаторБанковРФ") Тогда
		Возврат;
	КонецЕсли;
	
	НайденныйБанк = РаботаСБанкамиВызовСервера.СсылкаНаБанкИзКлассификатора(ВыбранноеЗначение);
	Если ЗначениеЗаполнено(НайденныйБанк) Тогда
		ВыбранноеЗначение = НайденныйБанк;
	Иначе
		Элементы.Банк.ОграничениеТипа = Новый ОписаниеТипов;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БанкАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = РаботаСБанкамиВызовСервера.БанкАвтоПодборДанныеВыбора(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьКарточкуЛоготипа(Команда)
	
	ОткрытьКарточкуФайла("ФайлЛоготип");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуФаксимильнойПечати(Команда)
	
	ОткрытьКарточкуФайла("ФайлФаксимильнаяПечать");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЛоготип(Команда)
	
	ДобавитьИзображение("ФайлЛоготип");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФаксимильнуюПечать(Команда)
	
	ДобавитьИзображение("ФайлФаксимильнаяПечать");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛоготип(Команда)
	
	УдалитьФайлКартинки("ФайлЛоготип");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФаксимильнуюПечать(Команда)
	
	УдалитьФайлКартинки("ФайлФаксимильнаяПечать");
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	Если НомерСчетаУказанНекорректно() Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		ЗаписатьДанныеОбъекта();
		Модифицированность = Ложь;
	КонецЕсли;
	
	ОткрытьФорму(
	"ОбщаяФорма.ПечатьДокументов",
	ПараметрыОткрытия,
	ВладелецФормы,
	Строка(Новый УникальныйИдентификатор));
	
	Если БольшеНеПредлагатьЗаполнятьНедостающиеПоляПриПечати Тогда
		ОтключитьСчетчикПодсказок(Объект.Ссылка);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция РеквизитыОрганизацииДляЗаполнения(ИменаРеквизитовДляЗаполнения)
	
	Возврат СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
	ИменаРеквизитовДляЗаполнения,,
	Истина,
	Истина);
	
КонецФункции

&НаСервере
Функция ВсеТребуемыеРеквизитыЗаполнены(ИменаРеквизитовДляЗаполнения)
	
	Для Каждого ТекРеквизит Из ИменаРеквизитовДляЗаполнения Цикл
		
		Если ТекРеквизит = "ЮрАдрес" Тогда
			Если НеЗаполненЮрАдрес() Тогда
				Возврат Ложь;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект[ТекРеквизит]) Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ВидимостьГруппыЮрАдрес(ИменаРеквизитовДляЗаполнения)
	
	Если ИменаРеквизитовДляЗаполнения.Найти("ЮрАдрес") = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат НеЗаполненЮрАдрес();
	
КонецФункции

&НаСервере
Функция НеЗаполненЮрАдрес()
	
	Для Каждого Элемент Из ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов Цикл
		
		Если Элемент.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации Тогда
			
			Если Не ЗначениеЗаполнено(ЭтотОбъект[Элемент.ИмяРеквизита]) Тогда
				Возврат Истина;
			КонецЕсли;
			
			Возврат ЭтотОбъект[Элемент.ИмяРеквизита] = НСтр("ru = 'Заполнить'");
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ВидимостьГруппыРеквизитыОрганизации(ИменаРеквизитовДляЗаполнения)
	
	Если ИменаРеквизитовДляЗаполнения.Найти("ИНН") = Неопределено
		И ИменаРеквизитовДляЗаполнения.Найти("КПП") = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ИНН) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.КПП) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ВидимостьГруппыБанковскийСчет(ИменаРеквизитовДляЗаполнения)
	
	Если ИменаРеквизитовДляЗаполнения.Найти("БанковскийСчетПоУмолчанию") = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.БанковскийСчетПоУмолчанию) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ВидимостьГруппыЛоготип(ИменаРеквизитовДляЗаполнения)
	
	Возврат ИменаРеквизитовДляЗаполнения.Найти("ФайлЛоготип") <> Неопределено;
	
КонецФункции

&НаСервере
Функция ВидимостьГруппыФаксимильнаяПечать(ИменаРеквизитовДляЗаполнения)
	
	Возврат ИменаРеквизитовДляЗаполнения.Найти("ФайлФаксимильнаяПечать") <> Неопределено;
	
КонецФункции

&НаСервере
Функция ВидимостьГруппыЛоготипИПечать(ИменаРеквизитовДляЗаполнения)
	
	Если ВидимостьГруппыЛоготип(ИменаРеквизитовДляЗаполнения)
		И Не ЗначениеЗаполнено(Объект.ФайлЛоготип) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ВидимостьГруппыФаксимильнаяПечать(ИменаРеквизитовДляЗаполнения)
		И Не ЗначениеЗаполнено(Объект.ФайлФаксимильнаяПечать) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ДобавитьПоляЮрАдрес()
	
	КИДопРеквизиты = ЭтаФорма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов;
	
	КИСтруктураПоиска = Новый Структура;
	КИСтруктураПоиска.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	КИЮрАдрес = КИДопРеквизиты.НайтиСтроки(КИСтруктураПоиска);
	
	Если Не ЗначениеЗаполнено(КИЮрАдрес) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = КИЮрАДрес[0];
	Элемент = Элементы.Добавить(ДанныеЗаполнения.ИмяРеквизита + "_СоответствиеКИ", Тип("ПолеФормы"), Элементы.ГруппаЮрАдрес);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Элемент.ПутьКДанным = ДанныеЗаполнения.ИмяРеквизита;
	Элемент.КнопкаВыбора = Истина;
	Если ДанныеЗаполнения.Вид.РедактированиеТолькоВДиалоге Тогда
		Элемент.РедактированиеТекста = Ложь;
		Элемент.ЦветФона = ЦветаСтиля.КонтактнаяИнформацияСРедактированиемВДиалогеЦвет;
	КонецЕсли;
	
	ПредставлениеЮрАдреса = ДанныеЗаполнения.ИмяРеквизита;
	Элемент.УстановитьДействие("НачалоВыбора", "Подключаемый_ЮрАдресНачалоВыбора");
	Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_КонтактнаяИнформацияПриИзменении");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормы(ИменаРеквизитовДляЗаполнения)
	
	Элементы.Банк.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Банки");
	
	Элементы.ГруппаРеквизиты.Видимость = ВидимостьГруппыРеквизитыОрганизации(ИменаРеквизитовДляЗаполнения);
	Элементы.КПП.Видимость = Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	Элементы.ГруппаБанковскийСчет.Видимость = ВидимостьГруппыБанковскийСчет(ИменаРеквизитовДляЗаполнения);
	Элементы.ГруппаЮрАдрес.Видимость = ВидимостьГруппыЮрАдрес(ИменаРеквизитовДляЗаполнения);
	
	Элементы.ЛеваяКолонка.Видимость = Элементы.ГруппаРеквизиты.Видимость
	Или Элементы.ГруппаБанковскийСчет.Видимость
	Или Элементы.ГруппаЮрАдрес.Видимость;
	
	Элементы.ГруппаЛоготип.Видимость = ВидимостьГруппыЛоготип(ИменаРеквизитовДляЗаполнения);
	Элементы.ГруппаФаксимильнаяПечать.Видимость = ВидимостьГруппыФаксимильнаяПечать(ИменаРеквизитовДляЗаполнения);
	
	Элементы.СправочникОрганизацииНапечататьПомощникРаботыФаксимильнойПечати.Видимость = Элементы.ГруппаФаксимильнаяПечать.Видимость;
	
	Элементы.ГруппаЛоготипИПечать.Видимость = ВидимостьГруппыЛоготипИПечать(ИменаРеквизитовДляЗаполнения);
	
	Если Элементы.ГруппаЛоготип.Видимость И Элементы.ГруппаФаксимильнаяПечать.Видимость Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаЛоготипИПечать.ОтображатьЗаголовок = Ложь;
	Элементы.ГруппаЛоготип.ОтображатьЗаголовок = Истина;
	Элементы.ГруппаФаксимильнаяПечать.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтключитьСчетчикПодсказок(Организация)
	
	РегистрыСведений.СчетчикиПодсказок.ОтключитьСчетчик(
	Перечисления.ВидыПодсказок.РеквизитыОрганизацииДляПечати,
	10,,
	Организация);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеОбъекта()
	
	Отказ = Ложь;
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Объект, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	УстановитьБанковскийСчетПоУмолчанию();
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, Объект);
	Записать();
	ОбработатьУдалениеПрисоединяемыхФайловПриЗаписи();
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьБанковскийСчетПоУмолчанию()
	
	Если Не ЗначениеЗаполнено(Банк) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НомерСчета) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Банк) = Тип("СправочникСсылка.КлассификаторБанковРФ") Тогда
		Банк = РаботаСБанкамиПереопределяемый.БанкИзКлассификатора(Банк);
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	БанковскиеСчета.Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Банк = &Банк
	|	И БанковскиеСчета.Владелец = &Владелец
	|	И БанковскиеСчета.НомерСчета = &НомерСчета");
	Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
	Запрос.УстановитьПараметр("Банк", Банк);
	Запрос.УстановитьПараметр("НомерСчета", НомерСчета);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Объект.БанковскийСчетПоУмолчанию = Выборка.Ссылка;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.БанковскийСчетПоУмолчанию) Тогда
		БанковскийСчет = Объект.БанковскийСчетПоУмолчанию.ПолучитьОбъект();
	Иначе
		БанковскийСчет = Справочники.БанковскиеСчета.СоздатьЭлемент();
		БанковскийСчет.Заполнить(Объект.Ссылка);
	КонецЕсли;
	
	БанковскийСчет.Банк = Банк;
	БанковскийСчет.ВалютаДенежныхСредств = Константы.НациональнаяВалюта.Получить();
	БанковскийСчет.НомерСчета = НомерСчета;
	БанковскийСчет.СформироватьНаименование();
	БанковскийСчет.Записать();
	
	Объект.БанковскийСчетПоУмолчанию = БанковскийСчет.Ссылка;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ФайлыСКартинкамиБезКонтекста()
	
	Результат = Новый Соответствие;
	Результат["ФайлЛоготип"] = "АдресЛоготипа";
	Результат["ФайлФаксимильнаяПечать"] = "АдресФаксимильнойПечати";
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	Если Не ЗначениеЗаполнено(ФайлКартинки) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат "";
	КонецПопытки;
	
	Возврат "";
	
КонецФункции

&НаКлиенте
Процедура ОбработатьНажатиеКартинки(ИмяРеквизитаСКартинкой, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект[ИмяРеквизитаСКартинкой]) Тогда
		ДанныеФайла = ПрисоединенныеФайлыКлиент.ПолучитьДанныеФайла(Объект[ИмяРеквизитаСКартинкой], УникальныйИдентификатор);
		ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
	КонецЕсли;
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект[ИмяРеквизитаСКартинкой]) Тогда
		ДобавитьИзображение(ИмяРеквизитаСКартинкой);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(ИмяРеквизитаСКартинкой)
	
	ЗаблокироватьДанныеФормыДляРедактирования();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НачатьПомещениеИзображения(ИмяРеквизитаСКартинкой);
		Возврат;
	КонецЕсли;
	
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ДобавитьИзображениеПродолжение", 
	ЭтотОбъект, Параметры);
	
	ПоказатьВопрос(
	ОбработчикОповещенияОЗакрытии,
	НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'"),
	РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеПродолжение(Ответ, Параметры)
	
	Если Ответ<>КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Форма.Записать() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьПомещениеИзображения(Параметры);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьПомещениеИзображения(ИмяРеквизитаСКартинкой)
	
	ИмяРеквизитаДляПомещаемогоИзображения = ИмяРеквизитаСКартинкой;
	
	ПрисоединенныеФайлыКлиент.ДобавитьФайлы(Объект.Ссылка, УникальныйИдентификатор, ФильтрФайловИзображений());
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайлКартинки(ИмяРеквизита)
	
	Если КэшЗначений=Неопределено Тогда
		КэшЗначений = НоваяСтруктураКэшЗначений();
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ДобавитьВСписокУдаляемых(ИмяРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВСписокУдаляемых(ИмяРеквизита)
	
	Если НЕ ЗначениеЗаполнено(Объект[ИмяРеквизита]) Тогда
		Возврат;
	КонецЕсли;
	
	КэшЗначений.УдаляемыеФайлы[Объект[ИмяРеквизита]] = Истина;
	Объект[ИмяРеквизита] = ПустаяСсылкаПрисоединенныйФайл();
	ЭтаФорма[ФайлыСКартинками()[ИмяРеквизита]] = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуФайла(ИмяРеквизитаСКартинкой) Экспорт
	
	ПоказатьЗначение(, Объект[ИмяРеквизитаСКартинкой]);
	
КонецПроцедуры

Функция НоваяСтруктураКэшЗначений() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("УдаляемыеФайлы", Новый Соответствие);
	Результат.Вставить("ИменаФайлов", Новый Соответствие);
	
	Возврат Результат;
	
КонецФункции

Функция ФильтрФайловИзображений()
	
	Возврат НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf"
	+ "|Все файлы(*.*)|*.*"
	+ "|Формат bmp(*.bmp*;*.dib;*.rle)|*.bmp;*.dib;*.rle"
	+ "|Формат GIF(*.gif*)|*.gif"
	+ "|Формат JPEG(*.jpeg;*.jpg)|*.jpeg;*.jpg"
	+ "|Формат PNG(*.png*)|*.png"
	+ "|Формат TIFF(*.tif)|*.tif"
	+ "|Формат icon(*.ico)|*.ico"
	+ "|Формат метафайл(*.wmf;*.emf)|*.wmf;*.emf'");
	
КонецФункции

&НаСервере
Процедура ОбработатьУдалениеПрисоединяемыхФайловПриЗаписи()
	
	Если Не ЗначениеЗаполнено(КэшЗначений) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КлючиИЗначение Из КэшЗначений.УдаляемыеФайлы Цикл
		ОбъектФайл = КлючиИЗначение.Ключ.ПолучитьОбъект();
		Если ОбъектФайл<>Неопределено Тогда
			ОбъектФайл.Удалить();
		КонецЕсли;
	КонецЦикла;
	
	КэшЗначений.УдаляемыеФайлы.Очистить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйИнтерфейс

&НаКлиенте 
Функция ПустаяСсылкаПрисоединенныйФайл() Экспорт
	
	Возврат ПредопределенноеЗначение("Справочник.ОрганизацииПрисоединенныеФайлы.ПустаяСсылка");
	
КонецФункции

&НаКлиенте
Функция ФайлыСКартинками() Экспорт
	
	Возврат ФайлыСКартинкамиБезКонтекста();
	
КонецФункции

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	НомерСчета = УправлениеНебольшойФирмойКлиентСервер.ТолькоЦифрыИзСтроки(НомерСчета);
	
КонецПроцедуры

&НаКлиенте
Функция НомерСчетаУказанНекорректно()
	
	Если Не ЗначениеЗаполнено(НомерСчета) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрДлина(НомерСчета) = 20 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	НСтр("ru = 'Требуется указать строго 20 цифр.'"),,
	"НомерСчета");
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти
