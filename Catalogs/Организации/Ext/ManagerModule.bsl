#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Групповое изменение объектов.

// Возвращает список реквизитов, которые не нужно редактировать
// с помощью обработки группового изменения объектов.
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("Префикс");
	Результат.Добавить("КонтактнаяИнформация.*");
	
	Возврат Результат
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Использование нескольких организаций.

// Возвращает организацию по умолчанию.
// Если в ИБ есть только одна организация, которая не помечена на удаление и не является предопределенной,
// то будет возвращена ссылка на нее, иначе будет возвращена пустая ссылка.
//
// Возвращаемое значение:
//     СправочникСсылка.Организации - ссылка на организацию.
//
Функция ОрганизацияПоУмолчанию() Экспорт
	
	Организация = Справочники.Организации.ПустаяСсылка();
	
	ОрганизацияКомпании = Константы.Компания.Получить();
	ПользовательскаяНастройкаОсновнойОрганизации = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.АвторизованныйПользователь(), "ОсновнаяОрганизация");
	Если ЗначениеЗаполнено(ОрганизацияКомпании) Тогда
		
		Организация = ОрганизацияКомпании;
		
	ИначеЕсли ЗначениеЗаполнено(ПользовательскаяНастройкаОсновнойОрганизации) Тогда
		
		Организация = ПользовательскаяНастройкаОсновнойОрганизации;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
		|	Организации.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	НЕ Организации.ПометкаУдаления";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда
			Организация = Выборка.Организация;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Организация;

КонецФункции

// Возвращает количество элементов справочника Организации.
// Не учитывает предопределенные и помеченные на удаление элементы.
//
// Возвращаемое значение:
//     Число - количество организаций.
//
Функция КоличествоОрганизаций() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Количество = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.Предопределенный";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Количество;
	
КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеквизитыОрганизации";
	КомандаПечати.Представление = НСтр("ru = 'Реквизиты'");
	КомандаПечати.СписокФорм = "ФормаЭлемента,ФормаСписка";
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Печать реквизитов организации'");
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#Область УНФ

// Процедура формирования макета печати
//
Функция СформироватьПомощникРаботыФаксимильнойПечати(МасиивОрганизаций, ОбъектыПечати, ИмяМакета)
	
	ТабличныйДокумент	= Новый ТабличныйДокумент;
	Макет				= УправлениеПечатью.МакетПечатнойФормы("Справочник.Организации." + ИмяМакета);
	
	Для каждого Организация Из МасиивОрганизаций Цикл 
	
		ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("ПоляКЗаполнению"));
		ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Линия"));
		ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Схема"));
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 1, ОбъектыПечати, Организация);
	
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;

КонецФункции // СформироватьПомощникРаботыФаксимильнойПечати()

// Процедура формирования предварительной печатной формы документа (образец)
//
// Вызывается из карточки "Организации" для просмотра размещения логотипов
//
Функция ПечатьПредварительныйПросмотрСчетаНаОплату(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	Перем Ошибки;
	
	Организация = МассивОбъектов[0];
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ЗначениеДаты = ТекущаяДатаСеанса();
	
	Шапка = Новый Структура;
	Шапка.Вставить("СуммаВключаетНДС",	Истина);
	Шапка.Вставить("ВалютаДокумента",	Константы.НациональнаяВалюта.Получить());
	Шапка.Вставить("ДатаДокумента",		ЗначениеДаты);
	Шапка.Вставить("Номер", 			"00000000001");
	Шапка.Вставить("Организация", 		Организация);
	Шапка.Вставить("БанковскийСчет",	Организация.БанковскийСчетПоУмолчанию);
	Шапка.Вставить("Префикс", 			Организация.Префикс);
	Шапка.Вставить("ПредставлениеПолучателя", "Поле содержит информацию покупателя: полное наименование, ИНН, КПП, юридический адрес, телефоны.");
	
	Запасы = Новый Структура;
	Запасы.Вставить("НомерСтроки",			1);
	Запасы.Вставить("Запас",				"Запас для предварительного просмотра");
	Запасы.Вставить("Артикул",				"АРТ-0000001");
	Запасы.Вставить("ЕдиницаИзмерения",		Справочники.КлассификаторЕдиницИзмерения.шт);
	Запасы.Вставить("Количество",			1);
	Запасы.Вставить("Цена",					118);
	Запасы.Вставить("Сумма",				118);
	Запасы.Вставить("СуммаНДС",				18);
	Запасы.Вставить("ВсегоНДС",				18);
	Запасы.Вставить("НДС", 					"В том числе НДС:");
	Запасы.Вставить("Характеристика",		Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запасы.Вставить("ПроцентСкидкиНаценки",	0);
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ИмяМакета + "_" + ИмяМакета;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СчетНаОплату.ПФ_MXL_" + ИмяМакета);
	
	СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, , ?(ЗначениеЗаполнено(Шапка.БанковскийСчет), Шапка.БанковскийСчет, Неопределено));
	
	//Для совместимости со старыми макетами
	Если Макет.Области.Найти("ЗаглавиеСЛоготипом") <> Неопределено
		И Макет.Области.Найти("ЗаглавиеБезЛоготипа") <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(Шапка.Организация.ФайлЛоготип) Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаглавиеСЛоготипом");
			
			ДанныеКартинки = ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(Шапка.Организация.ФайлЛоготип);
			Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
				
				ОбластьМакета.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
				
			КонецЕсли;
			
		Иначе // Если картинки не выбраны печатаем обычный заголовок
			
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаглавиеБезЛоготипа");
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ТекстСообщения = НСтр("ru ='ВНИМАНИЕ! Возможно используется пользовательский макет. Штатный механизм печати счетов может работать некоректно.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстСообщения, Неопределено);
		
	КонецЕсли;
	
	//Новый вариант макета содержит логотип в области ЗаголовокСчетаСЛоготипом
	Если Макет.Области.Найти("ЗаголовокСчетаСЛоготипом") <> Неопределено
		И ЗначениеЗаполнено(Шапка.Организация.ФайлЛоготип) Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчетаСЛоготипом");
		
		ДанныеКартинки = ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(Шапка.Организация.ФайлЛоготип);
		Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
			
			ОбластьМакета.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
			
		КонецЕсли;
		
	ИначеЕсли Макет.Области.Найти("ЗаголовокСчета") <> Неопределено Тогда
		
		// Если картинки не выбраны печатаем обычный заголовок	
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчета");
		
	Иначе
		
		ТекстСообщения = НСтр("ru ='ВНИМАНИЕ! Возможно используется пользовательский макет. Штатный механизм печати счетов может работать некоректно.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстСообщения, Неопределено);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОбОрганизации.Банк) Тогда
		ОбластьМакета.Параметры.БанкПолучателяПредставление = СведенияОбОрганизации.Банк.Наименование + " " + СведенияОбОрганизации.Банк.Город;
	КонецЕсли; 
	
	ОбластьМакета.Параметры.ИНН = СведенияОбОрганизации.ИНН;
	ОбластьМакета.Параметры.КПП = СведенияОбОрганизации.КПП;
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ?(ПустаяСтрока(СведенияОбОрганизации.ТекстКорреспондента), СведенияОбОрганизации.ПолноеНаименование, СведенияОбОрганизации.ТекстКорреспондента);;
	ОбластьМакета.Параметры.БИКБанкаПолучателя = СведенияОбОрганизации.БИК;
	ОбластьМакета.Параметры.СчетБанкаПолучателяПредставление = СведенияОбОрганизации.КоррСчет;
	ОбластьМакета.Параметры.СчетПолучателяПредставление = СведенияОбОрганизации.НомерСчета;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если Шапка.ДатаДокумента < Дата('20110101') Тогда
		НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
	Иначе
		НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
	КонецЕсли;		
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = "Счет на оплату № "
											+ НомерДокумента
											+ " от "
											+ Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
											
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.ПредставлениеПоставщика = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	ОбластьМакета.Параметры.Заполнить(Запасы);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Всего = УправлениеНебольшойФирмойСервер.ФорматСумм(Запасы.Сумма);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьМакета.Параметры.Заполнить(Запасы);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований "
											+ Строка(Запасы.Количество)
											+ ", на сумму "
											+ УправлениеНебольшойФирмойСервер.ФорматСумм(Запасы.Сумма, Шапка.ВалютаДокумента);
																				
	ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Запасы.Сумма, Шапка.ВалютаДокумента);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если Макет.Области.Найти("ПодвалСчетаСФаксимильнойПечатью") <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(Организация.ФайлФаксимильнаяПечать) Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчетаСФаксимильнойПечатью");
			
			ДанныеКартинки = ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(Организация.ФайлФаксимильнаяПечать);
			Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
				
				ОбластьМакета.Рисунки.ФаксимильнаяПечать.Картинка = Новый Картинка(ДанныеКартинки);
				
			КонецЕсли;
			
		Иначе
			
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	Иначе
		
		// Добавлять второе предупреждение не нужно, так как предупреждение добавлено при попытке вывести заголовок.
		
	КонецЕсли;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Организация);
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции //ПечатьПредварительныйПросмотрСчетаНаОплату()

// Процедура формирования табличного документа с реквизитами организаций
//
Функция ПечатьКарточкиОрганизации(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.Организации.РеквизитыОрганизации");
	Разделитель = Макет.ПолучитьОбласть("Разделитель");
	
	ТекДата = ТекущаяДатаСеанса();
	ПервыйДокумент = Истина;
	
	Для каждого Организация Из МассивОбъектов Цикл
	
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.Вывести(Разделитель);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ЭтоЮрЛицо = Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		
		СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Организация, ТекДата);
		
		Область = Макет.ПолучитьОбласть("Наименование");
		Область.Параметры.ПолноеНаименование = СведенияОбОрганизации.ПолноеНаименование;
		ТабличныйДокумент.Вывести(Область);
		
		Если ЗначениеЗаполнено(СведенияОбОрганизации.ИНН) Тогда
			Область = Макет.ПолучитьОбласть("ИНН");
			Область.Параметры.ИНН = СведенияОбОрганизации.ИНН;
			ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
		
		Если ЭтоЮрЛицо И ЗначениеЗаполнено(СведенияОбОрганизации.КПП) Тогда
			Область = Макет.ПолучитьОбласть("КПП");
			Область.Параметры.КПП = СведенияОбОрганизации.КПП;
			ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СведенияОбОрганизации.КодПоОКПО) Тогда
			Область = Макет.ПолучитьОбласть("ОКПО");
			Область.Параметры.КодПоОКПО = СведенияОбОрганизации.КодПоОКПО;
			ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СведенияОбОрганизации.НомерСчета) 
			И ЗначениеЗаполнено(СведенияОбОрганизации.БИК) 
			И ЗначениеЗаполнено(СведенияОбОрганизации.КоррСчет) 
			И ЗначениеЗаполнено(СведенияОбОрганизации.Банк) Тогда
			
			Область = Макет.ПолучитьОбласть("РасчетныйСчет");
			Область.Параметры.НомерСчета = СведенияОбОрганизации.НомерСчета;
			Область.Параметры.БИК = СведенияОбОрганизации.БИК;
			Область.Параметры.КоррСчет = СведенияОбОрганизации.КоррСчет;
			Область.Параметры.Банк = СведенияОбОрганизации.Банк;
			ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СведенияОбОрганизации.ЮридическийАдрес) 
			ИЛИ ЗначениеЗаполнено(СведенияОбОрганизации.Телефоны) Тогда
			ТабличныйДокумент.Вывести(Разделитель);
		КонецЕсли;
		
		Если ЭтоЮрЛицо И ЗначениеЗаполнено(СведенияОбОрганизации.ЮридическийАдрес) Тогда
			Область = Макет.ПолучитьОбласть("ЮридическийАдрес");
			Область.Параметры.ЮридическийАдрес = СведенияОбОрганизации.ЮридическийАдрес;
			ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
			
		Если Не ЭтоЮрЛицо И ЗначениеЗаполнено(СведенияОбОрганизации.ЮридическийАдрес) Тогда
			Область = Макет.ПолучитьОбласть("АдресИП");
			Область.Параметры.АдресИП = СведенияОбОрганизации.ЮридическийАдрес;
			ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(СведенияОбОрганизации.Телефоны) Тогда
			Область = Макет.ПолучитьОбласть("Телефон");
			Область.Параметры.Телефон = СведенияОбОрганизации.Телефоны;
			ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
		
		Если Не ЭтоЮрЛицо
			И СведенияОбОрганизации.Свойство("СвидетельствоСерияНомер") И ЗначениеЗаполнено(СведенияОбОрганизации.СвидетельствоСерияНомер)
			И СведенияОбОрганизации.Свойство("СвидетельствоДатаВыдачи") И ЗначениеЗаполнено(СведенияОбОрганизации.СвидетельствоДатаВыдачи) Тогда
			
			Область = Макет.ПолучитьОбласть("Свидетельство");
			Область.Параметры.СвидетельствоСерияНомер = СведенияОбОрганизации.СвидетельствоСерияНомер;
			Область.Параметры.СвидетельствоДатаВыдачи = Формат(СведенияОбОрганизации.СвидетельствоДатаВыдачи, "ДЛФ=D");
			ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
		
		Если ЭтоЮрЛицо Тогда
			
			ОтветственныеЛица = УправлениеНебольшойФирмойСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Организация, ТекДата);
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.РуководительДолжность) И ЗначениеЗаполнено(ОтветственныеЛица.ФИОРуководителя) Тогда
				Область = Макет.ПолучитьОбласть("Руководитель");
				Область.Параметры.ДолжностьРуководителя = ОтветственныеЛица.РуководительДолжность;
				Область.Параметры.ФИОРуководителя = ОтветственныеЛица.ФИОРуководителя;
				ТабличныйДокумент.Вывести(Область);
			КонецЕсли;
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Организация);
		
	КонецЦикла;
	
	ТабличныйДокумент.ПолеСверху = 20;
	ТабличныйДокумент.ПолеСнизу = 20;
	ТабличныйДокумент.ПолеСлева = 20;
	ТабличныйДокумент.ПолеСправа = 20;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Организация_КарточкаОрганизации";
	
	Возврат ТабличныйДокумент;

КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОбъектыПечати         – СписокЗначений   – значение – ссылка на объект
//                                            - представление – имя области в которой был выведен объект
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов,
				 ПараметрыПечати,
				 КоллекцияПечатныхФорм,
				 ОбъектыПечати,
				 ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеквизитыОрганизации") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РеквизитыОрганизации",
			НСтр("ru='Реквизиты организации'"),
			ПечатьКарточкиОрганизации(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НапечататьПомощникРаботыФаксимильнойПечати") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"НапечататьПомощникРаботыФаксимильнойПечати",
			НСтр("ru='Как быстро и просто создать факсимильную подпись и печать?'"),
			СформироватьПомощникРаботыФаксимильнойПечати(МассивОбъектов, ОбъектыПечати, "ПомощникРаботыФаксимильнойПечати"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПредварительныйПросмотрПечатнойФормыСчетНаОплату") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПредварительныйПросмотрПечатнойФормыСчетНаОплату",
			НСтр("ru='Счет на оплату'"),
			ПечатьПредварительныйПросмотрСчетаНаОплату(МассивОбъектов, ОбъектыПечати, "СчетНаОплату"));
		
	КонецЕсли;
	
КонецПроцедуры


// Возвращает систему налогообложения организации.
// Параметры: 
// Дата - Дата
// Организация - СправочникСсылка.Организации
// Возвращаемое значение:
// Структура с ключами:
// Дата - дата применения системы налогообложения.
// СистемаНалогообложения - ПеречислениеСсылка.СистемыНалогообложения
Функция ПолучитьСистемуНалогообложения(Дата, Организация) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СистемыНалогообложения.СистемаНалогообложения,
	|	СистемыНалогообложения.Период КАК Дата
	|ИЗ
	|	РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(&Дата, Организация = &Организация) КАК СистемыНалогообложения");
	
	Запрос.УстановитьПараметр("Дата",  Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Новый Структура("Дата, СистемаНалогообложения", Выборка.Дата, Выборка.СистемаНалогообложения);
		
	Иначе
		
		Возврат Новый Структура("Дата, СистемаНалогообложения", "00010101", Перечисления.СистемыНалогообложения.ПустаяСсылка()); 
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ГруппаДел = НСтр("ru = 'ЭДО'");
	
	// Сервис 1С-ЭДО в режиме сервиса не работает
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено()
		Или ТекущиеДелаСервер.ДелоОтключено(ГруппаДел) Тогда
		
		Возврат;
	КонецЕсли;
	
	СпособыОЭД = Новый Массив;
	СпособыОЭД.Добавить(Перечисления.СпособыОбменаЭД.ЧерезСервис1СЭДО);
	ВключенОбменЭД = ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД");
	ЕстьПравоНастройкиЭДО = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЕстьПравоНастройкиЭДО(Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Ссылка КАК Организация,
		|	Организации.Наименование КАК Наименование
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	НомерПоПорядку = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если ОбменСКонтрагентами.ОрганизацияПодключена(Выборка.Организация) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерПоПорядку = НомерПоПорядку + 1;
		
		Дело = ТекущиеДела.Добавить();
		Дело.Идентификатор	 = "ПодключениеЭДО_" + НомерПоПорядку;
		Дело.ЕстьДела		= Истина;
		Дело.Важное			= Ложь;
		Дело.Представление	= НСтр("ru='Подключиться к 1С-ЭДО'") + ", " + Выборка.Наименование;
		Дело.Количество		= 0;
		Дело.Владелец		= ГруппаДел;
		
		Если ВключенОбменЭД Тогда
			
			Если ЕстьПравоНастройкиЭДО Тогда
				Дело.Форма			= "Справочник.ПрофилиНастроекЭДО.Форма.ПомощникПодключенияЭДО";
				Дело.ПараметрыФормы = Новый Структура("Организация,СпособыОбменаЭД", Выборка.Организация, СпособыОЭД);
				Дело.Подсказка	= НСтр("ru='Подключиться к 1С-ЭДО (обмену электронными документами)'") + ", " + Выборка.Наименование;
			Иначе
				Дело.Форма			= "";
				Дело.ПараметрыФормы = Новый Структура;
				Дело.Подсказка	= НСтр("ru='Недостаточно прав для настройки обмена электронными документами. Обратитесь к администратору.'");
			КонецЕсли;
			
		ИначеЕсли Пользователи.ЭтоПолноправныйПользователь() Тогда
			
			Дело.Форма			= "Обработка.ПанельАдминистрированияЭДО.Форма.ОбменЭлектроннымиДокументами";
			Дело.ПараметрыФормы = Новый Структура;
			Дело.Подсказка	= НСтр("ru='Необходимо включить обмен электронными документами с контрагентами.'");
			
		Иначе
			
			Дело.Форма			= "";
			Дело.ПараметрыФормы = Новый Структура;
			Дело.Подсказка	= НСтр("ru='Для включения возможности обмена электронными документами с контрагентами обратитесь к администратору.'");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
