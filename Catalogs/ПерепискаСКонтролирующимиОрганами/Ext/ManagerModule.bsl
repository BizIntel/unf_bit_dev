#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ПрограммныйИнтерфейс

// Функция - Получить текстовое вложение
Функция ПолучитьТекстовоеВложение(Ссылка, ИмяФайла) Экспорт
	
	// получаем вложение
	СтрВложения = КонтекстЭДО().ПолучитьВложения(Ссылка, ИмяФайла);
	Если СтрВложения.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	СтрВложение = СтрВложения[0];
	
	// сохраняем вложение на диск
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	СтрВложение.Данные.Получить().Записать(ИмяВременногоФайла);
	
	// считываем при помощи ЧтениеТекста, чтобы автоматически распозналась кодировка UTF? или ANSI
	ОбъектЧтение = Новый ЧтениеТекста(ИмяВременногоФайла);
	СтрТекст = ОбъектЧтение.Прочитать();
	ОбъектЧтение.Закрыть();
	
	// удаляем временный файл
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат СтрТекст;
	
КонецФункции

// Функция - Получить вложение на сервере
Функция ПолучитьВложениеНаСервере(Ссылка, ИмяФайла, Идентификатор) Экспорт
	
	СтрВложения = КонтекстЭДО().ПолучитьВложения(Ссылка, ИмяФайла);
	Если СтрВложения.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Вложение = СтрВложения[0];
	
	Возврат ПоместитьВоВременноеХранилище(Вложение.Данные.Получить(), Идентификатор);

КонецФункции

// Функция - Печатная форма
Функция ПечатнаяФорма(Письмо) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем бланк отчета из макета
	Бланк = КонтекстЭДО().ПолучитьМакетОбработки("Письмо");
	
	ЗаполнитьГерб(Письмо, ТабДокумент, Бланк);
	ЗаполнитьНаименования(Письмо, ТабДокумент, Бланк);
	ЗаполнитьКонтактыОрганизации(Письмо, ТабДокумент, Бланк);
	ЗаполнитьЗаголовокИТекст(Письмо, ТабДокумент, Бланк);
	ЗаполнитьПодписи(Письмо, ТабДокумент, Бланк);
	ЗаполнитьПриложения(Письмо, ТабДокумент, Бланк);
	ЗаполнитьШтамп(Письмо, ТабДокумент, Бланк);
	
	ТабДокумент.МасштабПечати = 100;
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Функция КонтекстЭДО()
	
	Возврат ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	
КонецФункции

Процедура ЗаполнитьНаименования(Письмо, ТабДокумент, Бланк)

	ОбластьНаименований = Бланк.ПолучитьОбласть("Наименования");
	ЗаполнитьНаименованиеОрганизации(Письмо, Бланк, ОбластьНаименований);
	ЗаполнитьНаименованиеИКодКонтролирующегоОргана(Письмо, Бланк, ОбластьНаименований);
	
	ТабДокумент.Вывести(ОбластьНаименований);

КонецПроцедуры

Процедура ЗаполнитьНаименованиеИКодКонтролирующегоОргана(Письмо, Бланк, ОбластьНаименований)
	
	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		Постфикс 	= "Отправителя";
		Орган 		= Письмо.Отправитель;
	Иначе
		Постфикс	= "Получателя";
		Орган 		= Письмо.Получатель;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Орган) Тогда
		Возврат;
	КонецЕсли;

	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	СвойстваПереписки = КонтекстЭДОСервер.СвойстваПерепискиСКонтролирующими(Письмо);
	
	НаименованиеОргана 	= Орган.Наименование;
	Если НЕ ЗначениеЗаполнено(НаименованиеОргана) Тогда
		НаименованиеОргана = РегламентированнаяОтчетностьВызовСервера.ПредставлениеКонтролирующегоОргана(СвойстваПереписки);
	КонецЕсли;
	
	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		ОбластьНаименований.Параметры["Наименование" + Постфикс] = НаименованиеОргана;
	Иначе
		ОбластьНаименований.Параметры["Наименование" + Постфикс] = НСтр("ru = 'в '")  + НаименованиеОргана;
	КонецЕсли;
	
	Если ТипЗнч(Орган) = Тип("СправочникСсылка.НалоговыеОрганы")
		ИЛИ ТипЗнч(Орган) = Тип("СправочникСсылка.ОрганыПФР")
		ИЛИ ТипЗнч(Орган) = Тип("СправочникСсылка.ОрганыФСГС") Тогда
		ОбластьНаименований.Параметры["Код" + Постфикс] = "(код " + СвойстваПереписки.КодКонтролирующегоОргана + ")";
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьНаименованиеОрганизации(Письмо, Бланк, ОбластьНаименований)
	
	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		Постфикс = "Получателя";
		Организация = Письмо.Получатель;
	Иначе
		Постфикс = "Отправителя";
		Организация = Письмо.Отправитель;
	КонецЕсли;
	
	ОбластьНаименований.Параметры["Наименование" + Постфикс] = Организация;

КонецПроцедуры

Процедура ЗаполнитьКонтактыОрганизации(Письмо, ТабДокумент, Бланк)
	
	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		Постфикс = "Получателя";
		Организация = Письмо.Получатель;
	Иначе
		Постфикс = "Отправителя";
		Организация = Письмо.Отправитель;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ТребуемыеСведения = "ИННЮЛ, КППЮЛ, АдрЮР, АдрМЖ, ТелОрганизации";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация,
		,
		ТребуемыеСведения);
		
	// ИНН и КПП.
	Если ЗначениеЗаполнено(СведенияОбОрганизации.ИННЮЛ) Тогда
		
		ОбластьИННиКПП 	= Бланк.ПолучитьОбласть("ИННиКПП");
		
		НадписьИННиКПП = НСтр("ru = 'ИНН '") + СведенияОбОрганизации.ИННЮЛ;
		Если ЗначениеЗаполнено(СведенияОбОрганизации.КППЮЛ) Тогда 
			 НадписьИННиКПП = НадписьИННиКПП + НСтр("ru = ' КПП '") + СведенияОбОрганизации.КППЮЛ;
		КонецЕсли;
		
		ОбластьИННиКПП.Параметры["ИННиКПП" + Постфикс] = НадписьИННиКПП;
		ТабДокумент.Вывести(ОбластьИННиКПП);
		
	КонецЕсли;
	
	// Адрес.
	ОбластьАдрес = Бланк.ПолучитьОбласть("Адрес");
	Если ЗначениеЗаполнено(СведенияОбОрганизации.АдрЮР)
		ИЛИ ЗначениеЗаполнено(СведенияОбОрганизации.АдрЮР) Тогда
		
		ПредставлениеАдреса = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеАдресаВФормате9Запятых(СведенияОбОрганизации.АдрЮР);
		ОбластьАдрес.Параметры["Адрес" + Постфикс] = ПредставлениеАдреса;
		ТабДокумент.Вывести(ОбластьАдрес);
		
	КонецЕсли;

	// Телефон.
	ОбластьТелефон 	= Бланк.ПолучитьОбласть("Телефон");
	Если ЗначениеЗаполнено(СведенияОбОрганизации.ТелОрганизации)
		ИЛИ ЗначениеЗаполнено(СведенияОбОрганизации.ТелОрганизации) Тогда
		
		ОбластьТелефон.Параметры["Телефон" + Постфикс] = НСтр("ru = 'тел: '") + СведенияОбОрганизации.ТелОрганизации;
		ТабДокумент.Вывести(ОбластьТелефон);
		
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьЗаголовокИТекст(Письмо, ТабДокумент, Бланк)

	ОбластьПисьмо = Бланк.ПолучитьОбласть("Письмо");
	
	ОбластьПисьмо.Параметры.Заголовок 	= Письмо.Наименование;
	ОбластьПисьмо.Параметры.ТекстПисьма = Письмо.Содержание;
	
	ТабДокумент.Вывести(ОбластьПисьмо);

КонецПроцедуры

Процедура ЗаполнитьГерб(Письмо, ТабДокумент, Бланк)

	ОбластьГербов 	= Бланк.ПолучитьОбласть("Гербы");
	
	ЗаполнитьГербОрганизации(Письмо, Бланк, ОбластьГербов);
	ЗаполнитьГербКонтролирующегоОргана(Письмо, Бланк, ОбластьГербов);
	
	ТабДокумент.Вывести(ОбластьГербов);

КонецПроцедуры

Процедура ЗаполнитьГербОрганизации(Письмо, Бланк, ОбластьГербов)

	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		Постфикс = "Получателя";
		Организация = Письмо.Получатель;
	Иначе
		Постфикс = "Отправителя";
		Организация = Письмо.Отправитель;
	КонецЕсли;
	
	ДвДанныеЛоготипа = Неопределено;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиПереопределяемый.ЛоготипОрганизации(Организация, ДвДанныеЛоготипа);
		
	Если ЗначениеЗаполнено(ДвДанныеЛоготипа) Тогда
		ОбластьГербов.Рисунки["Герб" + Постфикс].Картинка = Новый Картинка(ДвДанныеЛоготипа);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьГербКонтролирующегоОргана(Письмо, Бланк, ОбластьГербов)

	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		Постфикс 	= "Отправителя";
		Орган 		= Письмо.Отправитель;
	Иначе
		Постфикс	= "Получателя";
		Орган 		= Письмо.Получатель;
	КонецЕсли;

	// Логотип получателя
	Если ТипЗнч(Орган) = Тип("СправочникСсылка.НалоговыеОрганы") Тогда
		Герб = КонтекстЭДО().ПолучитьМакетОбработки("ГербФНС");
	ИначеЕсли ТипЗнч(Орган) = Тип("СправочникСсылка.ОрганыПФР") Тогда
		Герб = КонтекстЭДО().ПолучитьМакетОбработки("ГербПФР");
	ИначеЕсли ТипЗнч(Орган) = Тип("СправочникСсылка.ОрганыФСГС") Тогда
		Герб = КонтекстЭДО().ПолучитьМакетОбработки("ГербРосстат");
	Иначе
		Возврат;
	КонецЕсли;
	
	ОбластьГербов.Рисунки["Герб" + Постфикс].Картинка = Новый Картинка(Герб);

КонецПроцедуры

Процедура ЗаполнитьПодписи(Письмо, ТабДокумент, Бланк)
	
	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		ЗаполнитьПодписиКонтролирующегоОргана(Письмо, ТабДокумент, Бланк);
	Иначе
		ЗаполнитьПодписиОрганизации(Письмо, ТабДокумент, Бланк);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПодписиКонтролирующегоОргана(Письмо, ТабДокумент, Бланк)
	
	// Пока в регистр сведений СодержимоеТранспортныхКонтейнеров не записывается отпечаток сертификата 
	// контролирующего органа. 
	// Но когда он будет туда писаться, алгоритм получения подписи (данных подвала) будет таким:
	// 1. Берем наше письмо.
	// 2. Для письма определяем первичное транспортное сообщение. Оно будет иметь один из следующих типов:
	//	Объект.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоНО
	//	Объект.Тип = Перечисления.ТипыТранспортныхСообщений.РассылкаНО
	//	Объект.Тип = Перечисления.ТипыТранспортныхСообщений.ДокументНО
	//	Объект.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР
	//	Объект.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС
	//	Объект.Тип = Перечисления.ТипыТранспортныхСообщений.РассылкаФСГС
	// 3. По полученному транспортному сообщению ищем запись в регистре сведений СодержимоеТранспортныхКонтейнеров
	// с типом ТипыСодержимогоТранспортногоКонтейнера = ЭлектронноЦифроваяПодпись.
	// 4. В найденной строке берем значения в колонках ЭЦПСертификат и ИмяФайла.
	// ЭЦПСертификат - это отпечаток сертификата контролирующего органа.
	// 5. По отпечатку сертификата получаем его свойства методом КриптографияЭДКОКлиент.НайтиСертификаты
	// Этот метод вернет нам свойства сертификата, если сертификат найден. 
	// Если сертификат не найдет, то вместо подписи будем возвращать ИмяФайла подписи с расширением bin.
	// 6. Если сертификат найден, то из свойств сертификата достаем должность и ФИО сотрудника
	// контролирующего органа и выводим их.
	
КонецПроцедуры

Процедура ЗаполнитьПодписиОрганизации(Письмо, ТабДокумент, Бланк)
	
	Организация 	= Письмо.Отправитель;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ОбластьПодписей = Бланк.ПолучитьОбласть("Подписи");
	
	ТребуемыеСведения = "ФамилияРук, ИмяРук, ОтчествоРук, ДолжнРук";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация,
		,
		ТребуемыеСведения);
		
	ФИО = Новый Структура();
	ФИО.Вставить("Фамилия", 	СведенияОбОрганизации.ФамилияРук);
	ФИО.Вставить("Имя", 		СведенияОбОрганизации.ИмяРук);
	ФИО.Вставить("Отчество", 	СведенияОбОрганизации.ОтчествоРук);
		
	Руководитель = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИО);
	
	ОбластьПодписей.Параметры.Должность 	= СведенияОбОрганизации.ДолжнРук;
	ОбластьПодписей.Параметры.Руководитель 	= Руководитель;
	
	ДвДанныеПодписи = Неопределено;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиПереопределяемый.ПодписьРуководителя(Организация, ДвДанныеПодписи);
		
	Если ЗначениеЗаполнено(ДвДанныеПодписи) Тогда
		ОбластьПодписей.Рисунки.Роспись.Картинка = Новый Картинка(ДвДанныеПодписи);
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьПодписей);
	
КонецПроцедуры

Процедура ЗаполнитьПриложения(Письмо, ТабДокумент, Бланк)
	
	Вложения = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ПолучитьСписокВложений(Письмо);
	Если Вложения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Заголовок.
	ОбластьЗаголовкаПриложения = Бланк.ПолучитьОбласть("ЗаголовокПриложения");
	ТабДокумент.Вывести(ОбластьЗаголовкаПриложения);
	
	// Список приложений.
	ОбластьПриложений = Бланк.ПолучитьОбласть("Приложения");
	НомерПриложения = 0;
	Для каждого Вложение Из Вложения Цикл
		
		НомерПриложения = НомерПриложения + 1;
		ИмяПриложения 	= ИмяФайлаБезРасширения(Вложение.ИмяФайла);
		
		ОбластьПриложений.Параметры.Приложение = Строка(НомерПриложения) + ". " + ИмяПриложения;
		ТабДокумент.Вывести(ОбластьПриложений);
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗаполнитьШтамп(Письмо, ТабДокумент, Бланк)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПолучатьДаты", 			Ложь);
	ДополнительныеПараметры.Вставить("ПолучатьОшибкиОтправки", 	Ложь);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЖурналОтправокВКонтролирующиеОрганы.СостояниеСдачиОтчетности
		|ИЗ
		|	РегистрСведений.ЖурналОтправокВКонтролирующиеОрганы КАК ЖурналОтправокВКонтролирующиеОрганы
		|ГДЕ
		|	ЖурналОтправокВКонтролирующиеОрганы.Ссылка = &Ссылка
		|	И (ЖурналОтправокВКонтролирующиеОрганы.СтраницаЖурнала = ЗНАЧЕНИЕ(Перечисление.СтраницыЖурналаОтчетность.Письма)
		|			ИЛИ ЖурналОтправокВКонтролирующиеОрганы.СтраницаЖурнала = ЗНАЧЕНИЕ(Перечисление.СтраницыЖурналаОтчетность.Входящие))";
		
	Запрос.УстановитьПараметр("Ссылка", Письмо);
	Выборка = Запрос.Выполнить().Выбрать();
	
	СостояниеСдачиОтчетности = Неопределено;
	Пока Выборка.Следующий() Цикл
		СостояниеСдачиОтчетности = Выборка.СостояниеСдачиОтчетности;
	КонецЦикла;
	
	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда
		// Входящее письмо.
		Штамп = КонтекстЭДО().ПолучитьМакетОбработки("Принято");
	ИначеЕсли СостояниеСдачиОтчетности = Перечисления.СостояниеСдачиОтчетности.ПоложительныйРезультатДокументооборота Тогда
		// Исходящее принятое письмо.
		Штамп = КонтекстЭДО().ПолучитьМакетОбработки("Доставлено");
	ИначеЕсли СостояниеСдачиОтчетности = Перечисления.СостояниеСдачиОтчетности.ОтрицательныйРезультатДокументооборота Тогда
		// Исходящее непринятое письмо.
		Штамп = КонтекстЭДО().ПолучитьМакетОбработки("НеПринято");
	Иначе
		Возврат;
	КонецЕсли;
	
	ОбластьШтампа = Бланк.ПолучитьОбласть("ШтампПринято");
	ОбластьШтампа.Рисунки.Штамп.Картинка = Новый Картинка(Штамп);
	
	ТабДокумент.Вывести(ОбластьШтампа);
	
КонецПроцедуры

Функция ИмяФайлаБезРасширения(ИмяФайлаСРасширением)
	
	ДлинаИмениФайла = СтрДлина(ИмяФайлаСРасширением);
	Для Инд = 1 По ДлинаИмениФайла Цикл
		Если Сред(ИмяФайлаСРасширением, ДлинаИмениФайла - Инд + 1, 1) = "." Тогда
			Возврат Лев(ИмяФайлаСРасширением, ДлинаИмениФайла - Инд);
		КонецЕсли;
	КонецЦикла;
	Возврат ИмяФайлаСРасширением;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	// инициализируем контекст ЭДО - модуль обработки
	ТекстСообщения = "";
	КонтекстЭДО = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
	Если КонтекстЭДО = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Если ВидФормы = "ФормаСписка" ИЛИ ВидФормы = "ФормаВыбора" Тогда
		ВыбраннаяФорма = "ФормаСписка";
	ИначеЕсли Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ)
		И Параметры.Ключ.Статус = Перечисления.СтатусыПисем.Полученное Тогда
		ВыбраннаяФорма = "ФормаВходящееПисьмо";
	Иначе
		ВыбраннаяФорма = "ФормаИсходящееПисьмо";
	КонецЕсли;
	
	КонтекстЭДО.ОбработкаПолученияФормы("Справочник", "ПерепискаСКонтролирующимиОрганами", ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти
