#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("Рекурсия") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		// Признак повторного входа.
		Параметры.Вставить("Рекурсия");
		
		// Получим стандартный список выбора.
		СтандартныйСписок = ПолучитьДанныеВыбора(Параметры);
		
		// Удалим предопределенный сценарий "Фактический" - он не доступен для выбора
		НайденныйЭлемент = СтандартныйСписок.НайтиПоЗначению(Справочники.СценарииПланирования.Фактический);
		Если НайденныйЭлемент <> Неопределено Тогда
			СтандартныйСписок.Удалить(НайденныйЭлемент);
		КонецЕсли;
		
		ДанныеВыбора = СтандартныйСписок;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура заполняет реквизиты предопределенного сценария "Фактический"
//
Процедура ЗаполнитьФактическийСценарий() Экспорт
	
	ФактическийСценарий = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СценарииПланирования.Фактический");
	Если ФактическийСценарий = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СценарийОбъект = ФактическийСценарий.ПолучитьОбъект();
	СценарийОбъект.Наименование		= НСтр("ru='Фактический'");
	СценарийОбъект.Периодичность	= Перечисления.Периодичность.Месяц;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(СценарийОбъект);
	
КонецПроцедуры

// Процедура создает начальные сценарии для быстрого старта работы в программе
//
Процедура ЗаполнитьПоставляемыеСценарии() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СценарииПланирования.Ссылка КАК Сценарий
		|ИЗ
		|	Справочник.СценарииПланирования КАК СценарииПланирования
		|ГДЕ
		|	СценарииПланирования.Предопределенный = ЛОЖЬ";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	// 1. Помесячно в разрезе категорий номенклатуры
	Сценарий = Справочники.СценарииПланирования.СоздатьЭлемент();
	Сценарий.УстановитьНовыйКод();
	Сценарий.Наименование			= НСтр("ru='Продажи категорий номенклатуры (помесячно)'");
	Сценарий.ИзмерениеПланирования	= Перечисления.ИзмеренияПланирования.КатегорияНоменклатуры;
	Сценарий.Периодичность			= Перечисления.Периодичность.Месяц;
	Сценарий.Комментарий			= НСтр("ru='#Создан автоматически для быстрого старта'");
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Сценарий);
	
	// 2. Помесячно в разрезе менеджеров
	Сценарий = Справочники.СценарииПланирования.СоздатьЭлемент();
	Сценарий.УстановитьНовыйКод();
	Сценарий.Наименование			= НСтр("ru='План продаж менеджеров (помесячно)'");
	Сценарий.ИзмерениеПланирования	= Перечисления.ИзмеренияПланирования.Менеджер;
	Сценарий.Периодичность			= Перечисления.Периодичность.Месяц;
	Сценарий.Комментарий			= НСтр("ru='#Создан автоматически для быстрого старта'");
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Сценарий);
	
КонецПроцедуры

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область ИнтерфейсЗапретаРедактированияРеквизитов

Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ДетализироватьДоЗаказа");
	Результат.Добавить("ИзмерениеПланирования");
	Результат.Добавить("Периодичность");
	Результат.Добавить("ПланироватьКоличество");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли