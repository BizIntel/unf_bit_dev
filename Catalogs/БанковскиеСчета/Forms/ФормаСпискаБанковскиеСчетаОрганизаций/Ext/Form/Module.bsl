
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Пользователь = Пользователи.ТекущийПользователь();
	ЗначениеНастройки = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "ОсновнаяОрганизация");
	Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
		ОсновнаяОрганизация = ЗначениеНастройки;
	Иначе
		ОсновнаяОрганизация = УправлениеНебольшойФирмойСервер.ПолучитьПредопределеннуюОрганизацию();
	КонецЕсли;
	
	Элементы.ПрямойОбмен.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьОбменСБанками");
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Организация = Настройки.Получить("Организация");
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(Список, "Владелец", Организация, ЗначениеЗаполнено(Организация));
	
КонецПроцедуры // ПередЗагрузкойДанныхИзНастроекНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(Список, "Владелец", Организация, ЗначениеЗаполнено(Организация));
	
КонецПроцедуры // ОрганизацияПриИзменении()

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	СтруктураПараметров = Новый Структура();
	Если ЗначениеЗаполнено(Организация) Тогда
		СтруктураПараметров.Вставить("Владелец", Организация);
	Иначе
		СтруктураПараметров.Вставить("Владелец", ОсновнаяОрганизация);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.БанковскиеСчета.Форма.ФормаЭлемента", Новый Структура("ЗначенияЗаполнения", СтруктураПараметров));
	
КонецПроцедуры // СписокПередНачаломДобавления()

#КонецОбласти
