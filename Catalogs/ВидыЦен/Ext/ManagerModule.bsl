#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйИнтерфейс

Процедура ПодготовитьТаблицуРегистраЗависимыеВидыЦен(ТаблицаЗависимыхЦен, ЭтотОбъект)
	
	Если ТаблицаЗависимыхЦен = Неопределено Тогда
		
		ТаблицаЗависимыхЦен = Новый ТаблицаЗначений;
		ТаблицаЗависимыхЦен.Колонки.Добавить("ВидЦенРасчетный");
		ТаблицаЗависимыхЦен.Колонки.Добавить("ВидЦенБазовый");
		
	КонецЕсли;
	
	Если ЭтотОбъект.ТипВидаЦен = Перечисления.ТипыВидовЦен.ДинамическийФормула Тогда
		
		Операнды		= ЦенообразованиеФормулыСервер.ПолучитьТаблицуОперандовФормулы(ЭтотОбъект.Формула);
		Для каждого Операнд Из Операнды Цикл
			
			НоваяСтрока					= ТаблицаЗависимыхЦен.Добавить();
			НоваяСтрока.ВидЦенРасчетный = ЭтотОбъект.Ссылка;
			НоваяСтрока.ВидЦенБазовый	= Операнд.ВидЦен;
			
		КонецЦикла;
		
	ИначеЕсли ЭтотОбъект.ТипВидаЦен = Перечисления.ТипыВидовЦен.ДинамическийПроцент Тогда
		
		НоваяСтрока					= ТаблицаЗависимыхЦен.Добавить();
		НоваяСтрока.ВидЦенРасчетный = ЭтотОбъект.Ссылка;
		НоваяСтрока.ВидЦенБазовый	= ЭтотОбъект.БазовыйВидЦен;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьТаблицуРегистраОчередьРасчетаЦен(ОчередьРасчетаЦен, СвязиВидовЦен, ЭтотОбъект)
	
	Запрос 			= Новый Запрос;
	Запрос.Текст	= 
	"Выбрать различные &ВидЦенРасчетный КАК ВидЦенРасчетный, ЗаписиЦен.Номенклатура, ЗаписиЦен.Характеристика, Ложь КАК ПересчетВыполнен, &Период КАК ПериодЗаписи
	|Из РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,Актуальность И ВидЦен В(&МассивВидовЦен)) КАК ЗаписиЦен
	|Объединить
	|Выбрать различные &ВидЦенРасчетный КАК ВидЦенРасчетный, ЗаписиЦенКонтрагентов.Номенклатура, ЗаписиЦенКонтрагентов.Характеристика, Ложь КАК ПересчетВыполнен, &Период КАК ПериодЗаписи
	|Из РегистрСведений.ЦеныНоменклатурыКонтрагентов.СрезПоследних(,Актуальность И ВидЦенКонтрагента В(&МассивВидовЦен)) КАК ЗаписиЦенКонтрагентов
	|Упорядочить по ВидЦенРасчетный, Номенклатура, Характеристика";
	
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ВидЦенРасчетный", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("МассивВидовЦен", СвязиВидовЦен.ВыгрузитьКолонку("ВидЦенБазовый"));
	
	ОчередьРасчетаЦен = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

Процедура ИнициализироватьДанные(Ссылка, ДополнительныеСвойства, ЭтотОбъект) Экспорт
	Перем СвязиВидовЦен, ОчередьРасчетаЦен;
	
	ПодготовитьТаблицуРегистраЗависимыеВидыЦен(СвязиВидовЦен, ЭтотОбъект);
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("СвязиВидовЦенСлужебный", СвязиВидовЦен);
	
	ПодготовитьТаблицуРегистраОчередьРасчетаЦен(ОчередьРасчетаЦен, СвязиВидовЦен, ЭтотОбъект);
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ОчередьРасчетаЦен", ОчередьРасчетаЦен);
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура получает основной вид цен продажи из пользовательский настроек.
//
Функция ПолучитьОсновнойВидЦенПродажи() Экспорт
	
	ВидЦенПродажи = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойВидЦенПродажи");
	
	Возврат ?(ЗначениеЗаполнено(ВидЦенПродажи), ВидЦенПродажи, Справочники.ВидыЦен.Оптовая);
	
КонецФункции// ЗаполнитьВидЦен()

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли