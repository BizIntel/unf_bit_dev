
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьЗначенияПараметровФормы();
	
	УстановитьВидимостьИДоступность();
	
	// ФО Использовать подсистему Производство.
	УстановитьВидимостьОтФОИспользоватьПодсистемуПроизводство();
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода ИсточникПеремещения.
//
Процедура ИсточникПеремещенияПриИзменении(Элемент)
	
	СтруктураДанные = ПолучитьДанныеСтруктурнаяЕдиницаПриИзменении(ИсточникПеремещения);
	Элементы.ЯчейкаИсточникаПеремещения.Доступность = СтруктураДанные.ОрдерныйСклад;

КонецПроцедуры // ИсточникПеремещенияПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода ИсточникПеремещения.
//
Процедура ПолучательПеремещенияПриИзменении(Элемент)
	
	СтруктураДанные = ПолучитьДанныеСтруктурнаяЕдиницаПриИзменении(ПолучательПеремещения);
	Элементы.ЯчейкаПолучателяПеремещения.Доступность = СтруктураДанные.ОрдерныйСклад;
	
КонецПроцедуры // ПолучательПеремещенияПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода ПолучательОтходов.
//
Процедура ПолучательОтходовПриИзменении(Элемент)
	
	СтруктураДанные = ПолучитьДанныеСтруктурнаяЕдиницаПриИзменении(ПолучательОтходов);
	Элементы.ЯчейкаПолучателяОтходов.Доступность = СтруктураДанные.ОрдерныйСклад;
	
КонецПроцедуры // ПолучательОтходовПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода ИсточникСписания.
//
Процедура ИсточникСписанияНаРасходыПриИзменении(Элемент)
	
	СтруктураДанные = ПолучитьДанныеСтруктурнаяЕдиницаПриИзменении(ИсточникСписанияНаРасходы);
	Элементы.ЯчейкаИсточникаСписанияНаРасходы.Доступность = СтруктураДанные.ОрдерныйСклад;
	
КонецПроцедуры // ИсточникСписанияНаРасходыПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода ПолучательСписанияНаРасходы.
//
Процедура ПолучательСписанияНаРасходыПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПолучательСписанияНаРасходы) Тогда
		Элементы.ЯчейкаПолучателяСписанияНаРасходы.Доступность = Истина;
	Иначе
		Элементы.ЯчейкаПолучателяСписанияНаРасходы.Доступность = Ложь;
	КонецЕсли;	
	
КонецПроцедуры // ПолучательСписанияНаРасходыПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода ИсточникПередачиВЭксплуатацию.
//
Процедура ИсточникПередачиВЭксплуатациюПриИзменении(Элемент)
	
	СтруктураДанные = ПолучитьДанныеСтруктурнаяЕдиницаПриИзменении(ИсточникПередачиВЭксплуатацию);
	Элементы.ЯчейкаИсточникаПередачиВЭксплуатацию.Доступность = СтруктураДанные.ОрдерныйСклад;
	
КонецПроцедуры // ИсточникПередачиВЭксплуатациюПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода ПолучательПередачиВЭксплуатацию.
//
Процедура ПолучательПередачиВЭксплуатациюПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПолучательПередачиВЭксплуатацию) Тогда
		Элементы.ЯчейкаПолучателяПередачиВЭксплуатацию.Доступность = Истина;
	Иначе
		Элементы.ЯчейкаПолучателяПередачиВЭксплуатацию.Доступность = Ложь;
	КонецЕсли;	
	
КонецПроцедуры // ПолучательПередачиВЭксплуатациюПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода ИсточникВозвратаИзЭксплуатации.
//
Процедура ИсточникВозвратаИзЭксплуатацииПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ИсточникВозвратаИзЭксплуатации) Тогда
		Элементы.ЯчейкаИсточникаВозвратаИзЭксплуатации.Доступность = Истина;
	Иначе
		Элементы.ЯчейкаИсточникаВозвратаИзЭксплуатации.Доступность = Ложь;
	КонецЕсли;	
	
КонецПроцедуры // ИсточникВозвратаИзЭксплуатацииПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода ПолучательВозвратаИзЭксплуатации.
//
Процедура ПолучательВозвратаИзЭксплуатацииПриИзменении(Элемент)
	
	СтруктураДанные = ПолучитьДанныеСтруктурнаяЕдиницаПриИзменении(ПолучательВозвратаИзЭксплуатации);
	Элементы.ЯчейкаПолучателяВозвратаИзЭксплуатации.Доступность = СтруктураДанные.ОрдерныйСклад;
	
КонецПроцедуры // ПолучательВозвратаИзЭксплуатацииПриИзменении()

&НаКлиенте
// Процедура - обработчик события Открытие поля ИсточникПеремещения.
//
Процедура ИсточникПеремещенияОткрытие(Элемент, СтандартнаяОбработка)
	
	Если Элементы.ИсточникПеремещения.РежимВыбораИзСписка
		И НЕ ЗначениеЗаполнено(ИсточникПеремещения) Тогда
		
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ИсточникПеремещенияОткрытие()

&НаКлиенте
// Процедура - обработчик события Открытие поля ПолучательПеремещения.
//
Процедура ПолучательПеремещенияОткрытие(Элемент, СтандартнаяОбработка)
	
	Если Элементы.ПолучательПеремещения.РежимВыбораИзСписка
		И НЕ ЗначениеЗаполнено(ПолучательПеремещения) Тогда
		
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ПолучательПеремещенияОткрытие()

&НаКлиенте
// Процедура - обработчик события Открытие поля ПолучательОтходов.
//
Процедура ПолучательОтходовОткрытие(Элемент, СтандартнаяОбработка)
	
	Если Элементы.ПолучательОтходов.РежимВыбораИзСписка
		И НЕ ЗначениеЗаполнено(ПолучательОтходов) Тогда
		
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ПолучательОтходовОткрытие()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Закрыть(ЗаписатьПараметрыАвтоперемещенияВОбъект());
	
КонецПроцедуры // КомандаОК()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
// Процедура заполняет параметры формы.
//
Процедура ПолучитьЗначенияПараметровФормы()
	
	ИсточникПеремещения = Параметры.ИсточникПеремещения;
	ПолучательПеремещения = Параметры.ПолучательПеремещения;
	ПолучательОтходов = Параметры.ПолучательОтходов;
	ИсточникСписанияНаРасходы = Параметры.ИсточникСписанияНаРасходы;
	ПолучательСписанияНаРасходы	= Параметры.ПолучательСписанияНаРасходы;
	ИсточникПередачиВЭксплуатацию = Параметры.ИсточникПередачиВЭксплуатацию;
	ПолучательПередачиВЭксплуатацию = Параметры.ПолучательПередачиВЭксплуатацию;
	ИсточникВозвратаИзЭксплуатации = Параметры.ИсточникВозвратаИзЭксплуатации;
	ПолучательВозвратаИзЭксплуатации = Параметры.ПолучательВозвратаИзЭксплуатации;
	
	ЯчейкаИсточникаПеремещения = Параметры.ЯчейкаИсточникаПеремещения;
	ЯчейкаПолучателяПеремещения = Параметры.ЯчейкаПолучателяПеремещения;
	ЯчейкаПолучателяОтходов = Параметры.ЯчейкаПолучателяОтходов;
	ЯчейкаИсточникаСписанияНаРасходы = Параметры.ЯчейкаИсточникаСписанияНаРасходы;
	ЯчейкаПолучателяСписанияНаРасходы = Параметры.ЯчейкаПолучателяСписанияНаРасходы;
	ЯчейкаИсточникаПередачиВЭксплуатацию = Параметры.ЯчейкаИсточникаПередачиВЭксплуатацию;
	ЯчейкаПолучателяПередачиВЭксплуатацию = Параметры.ЯчейкаПолучателяПередачиВЭксплуатацию;
	ЯчейкаИсточникаВозвратаИзЭксплуатации = Параметры.ЯчейкаИсточникаВозвратаИзЭксплуатации;
	ЯчейкаПолучателяВозвратаИзЭксплуатации = Параметры.ЯчейкаПолучателяВозвратаИзЭксплуатации;
	
КонецПроцедуры // ПолучитьЗначенияПараметровФормы()	

&НаКлиенте
// Функция помещает параметры автоперемещения в объект.
//
Функция ЗаписатьПараметрыАвтоперемещенияВОбъект()
	
	ПараметрыАвтоперемещения = Новый Структура;
	ПараметрыАвтоперемещения.Вставить("ИсточникПеремещения", ИсточникПеремещения);
	ПараметрыАвтоперемещения.Вставить("ПолучательПеремещения", ПолучательПеремещения);
	ПараметрыАвтоперемещения.Вставить("ПолучательОтходов", ПолучательОтходов);
	ПараметрыАвтоперемещения.Вставить("ИсточникСписанияНаРасходы", ИсточникСписанияНаРасходы);
	ПараметрыАвтоперемещения.Вставить("ПолучательСписанияНаРасходы", ПолучательСписанияНаРасходы);
	ПараметрыАвтоперемещения.Вставить("ИсточникПередачиВЭксплуатацию", ИсточникПередачиВЭксплуатацию);
	ПараметрыАвтоперемещения.Вставить("ПолучательПередачиВЭксплуатацию", ПолучательПередачиВЭксплуатацию);
	ПараметрыАвтоперемещения.Вставить("ИсточникВозвратаИзЭксплуатации", ИсточникВозвратаИзЭксплуатации);
	ПараметрыАвтоперемещения.Вставить("ПолучательВозвратаИзЭксплуатации", ПолучательВозвратаИзЭксплуатации);
	
	ПараметрыАвтоперемещения.Вставить("ЯчейкаИсточникаПеремещения", ЯчейкаИсточникаПеремещения);
	ПараметрыАвтоперемещения.Вставить("ЯчейкаПолучателяПеремещения", ЯчейкаПолучателяПеремещения);
	ПараметрыАвтоперемещения.Вставить("ЯчейкаПолучателяОтходов", ЯчейкаПолучателяОтходов);
	ПараметрыАвтоперемещения.Вставить("ЯчейкаИсточникаСписанияНаРасходы", ЯчейкаИсточникаСписанияНаРасходы);
	ПараметрыАвтоперемещения.Вставить("ЯчейкаПолучателяСписанияНаРасходы", ЯчейкаПолучателяСписанияНаРасходы);
	ПараметрыАвтоперемещения.Вставить("ЯчейкаИсточникаПередачиВЭксплуатацию", ЯчейкаИсточникаПередачиВЭксплуатацию);
	ПараметрыАвтоперемещения.Вставить("ЯчейкаПолучателяПередачиВЭксплуатацию", ЯчейкаПолучателяПередачиВЭксплуатацию);
	ПараметрыАвтоперемещения.Вставить("ЯчейкаИсточникаВозвратаИзЭксплуатации", ЯчейкаИсточникаВозвратаИзЭксплуатации);
	ПараметрыАвтоперемещения.Вставить("ЯчейкаПолучателяВозвратаИзЭксплуатации", ЯчейкаПолучателяВозвратаИзЭксплуатации);
	
	ПараметрыАвтоперемещения.Вставить("Модифицированность", Модифицированность);
	
	Возврат ПараметрыАвтоперемещения;
	
КонецФункции // ЗаписатьПараметрыАвтоперемещенияВОбъект()	

&НаСервереБезКонтекста
// Получает набор данных с сервера для процедуры СтруктурнаяЕдиницаПриИзменении.
//
Функция ПолучитьДанныеСтруктурнаяЕдиницаПриИзменении(Склад)
	
	СтруктураДанные = Новый Структура();
	
	Если НЕ ЗначениеЗаполнено(Склад)
		ИЛИ Склад.ОрдерныйСклад
		ИЛИ Склад.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
		ИЛИ Склад.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
		
		СтруктураДанные.Вставить("ОрдерныйСклад", Ложь);
		
	Иначе
		
		СтруктураДанные.Вставить("ОрдерныйСклад", Истина);
		
	КонецЕсли;	
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеСтруктурнаяЕдиницаПриИзменении()

&НаСервере
// Процедура устанавливает доступность элементов формы.
//
// Параметры:
//  Нет.
//
Процедура УстановитьВидимостьИДоступность()

	Если Параметры.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		
		Элементы.ИсточникСписанияНаРасходы.Видимость = Ложь;
		Элементы.ЯчейкаИсточникаСписанияНаРасходы.Видимость = Ложь;
		ИсточникСписанияНаРасходы = Неопределено;
		ЯчейкаИсточникаСписанияНаРасходы = Неопределено;
		
		Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить() Тогда
		
			Элементы.ПолучательСписанияНаРасходы.Видимость = Ложь;
			Элементы.ЯчейкаПолучателяСписанияНаРасходы.Видимость = Ложь;
			ПолучательСписанияНаРасходы = Неопределено;
			ЯчейкаПолучателяСписанияНаРасходы = Неопределено;
			
		КонецЕсли;
			
		Элементы.ИсточникПередачиВЭксплуатацию.Видимость = Ложь;
		Элементы.ЯчейкаИсточникаПередачиВЭксплуатацию.Видимость = Ложь;
		ИсточникПередачиВЭксплуатацию = Неопределено;
		ЯчейкаИсточникаПередачиВЭксплуатацию = Неопределено;
		
		Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить() Тогда
		
			Элементы.ПолучательПередачиВЭксплуатацию.Видимость = Ложь;
			Элементы.ЯчейкаПолучателяПередачиВЭксплуатацию.Видимость = Ложь;
			ПолучательПередачиВЭксплуатацию = Неопределено;
			ЯчейкаПолучателяПередачиВЭксплуатацию = Неопределено;
			
		КонецЕсли;
		
		Элементы.ПолучательВозвратаИзЭксплуатации.Видимость = Ложь;
		Элементы.ЯчейкаПолучателяВозвратаИзЭксплуатации.Видимость = Ложь;
		ПолучательВозвратаИзЭксплуатации = Неопределено;
		ЯчейкаПолучателяВозвратаИзЭксплуатации = Неопределено;
		
		Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить() Тогда
		
			Элементы.ИсточникВозвратаИзЭксплуатации.Видимость = Ложь;
			Элементы.ЯчейкаИсточникаВозвратаИзЭксплуатации.Видимость = Ложь;
			ИсточникВозвратаИзЭксплуатации = Неопределено;
			ЯчейкаИсточникаВозвратаИзЭксплуатации = Неопределено;
			
		КонецЕсли;
		
	ИначеЕсли Параметры.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда	
		
		Элементы.ПолучательСписанияНаРасходы.Видимость = Ложь;
		Элементы.ЯчейкаПолучателяСписанияНаРасходы.Видимость = Ложь;
		ПолучательСписанияНаРасходы = Неопределено;
		ЯчейкаПолучателяСписанияНаРасходы = Неопределено;
		
		Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить() Тогда
			
			Элементы.ИсточникСписанияНаРасходы.Видимость = Ложь;
			Элементы.ЯчейкаИсточникаСписанияНаРасходы.Видимость = Ложь;
			ИсточникСписанияНаРасходы = Неопределено;
			ЯчейкаИсточникаСписанияНаРасходы = Неопределено;
			
		КонецЕсли;
		
		Элементы.ПолучательПередачиВЭксплуатацию.Видимость = Ложь;
		Элементы.ЯчейкаПолучателяПередачиВЭксплуатацию.Видимость = Ложь;
		ПолучательПередачиВЭксплуатацию = Неопределено;
		ЯчейкаПолучателяПередачиВЭксплуатацию = Неопределено;
		
		Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить() Тогда
			
			Элементы.ИсточникПередачиВЭксплуатацию.Видимость = Ложь;
			Элементы.ЯчейкаИсточникаПередачиВЭксплуатацию.Видимость = Ложь;
			ИсточникПередачиВЭксплуатацию = Неопределено;
			ЯчейкаИсточникаПередачиВЭксплуатацию = Неопределено;
			
		КонецЕсли;
		
		Элементы.ИсточникВозвратаИзЭксплуатации.Видимость = Ложь;
		Элементы.ЯчейкаИсточникаВозвратаИзЭксплуатации.Видимость = Ложь;
		ИсточникВозвратаИзЭксплуатации = Неопределено;
		ЯчейкаИсточникаВозвратаИзЭксплуатации = Неопределено;
		
		Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить() Тогда
			
			Элементы.ПолучательВозвратаИзЭксплуатации.Видимость = Ложь;
			Элементы.ЯчейкаПолучателяВозвратаИзЭксплуатации.Видимость = Ложь;
			ПолучательВозвратаИзЭксплуатации = Неопределено;
			ЯчейкаПолучателяВозвратаИзЭксплуатации = Неопределено;
			
		КонецЕсли;
		
	ИначеЕсли Параметры.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
		ИЛИ Параметры.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
		
		Элементы.ПолучательОтходов.Видимость = Ложь;
		Элементы.ЯчейкаПолучателяОтходов.Видимость = Ложь;		
		ПолучательОтходов = Неопределено;
		ЯчейкаПолучателяОтходов = Неопределено;
		
		Элементы.ИсточникСписанияНаРасходы.Видимость = Ложь;
		Элементы.ЯчейкаИсточникаСписанияНаРасходы.Видимость = Ложь;
		ИсточникСписанияНаРасходы = Неопределено;
		ЯчейкаИсточникаСписанияНаРасходы = Неопределено;
		
		Элементы.ПолучательСписанияНаРасходы.Видимость = Ложь;
		Элементы.ЯчейкаПолучателяСписанияНаРасходы.Видимость = Ложь;
		ПолучательСписанияНаРасходы = Неопределено;
		ЯчейкаПолучателяСписанияНаРасходы = Неопределено;
		
		Элементы.ИсточникПередачиВЭксплуатацию.Видимость = Ложь;
		Элементы.ЯчейкаИсточникаПередачиВЭксплуатацию.Видимость = Ложь;
		ИсточникПередачиВЭксплуатацию = Неопределено;
		ЯчейкаИсточникаПередачиВЭксплуатацию = Неопределено;
						
		Элементы.ПолучательПередачиВЭксплуатацию.Видимость = Ложь;
		Элементы.ЯчейкаПолучателяПередачиВЭксплуатацию.Видимость = Ложь;
		ПолучательПередачиВЭксплуатацию = Неопределено;
		ЯчейкаПолучателяПередачиВЭксплуатацию = Неопределено;
		
		Элементы.ИсточникВозвратаИзЭксплуатации.Видимость = Ложь;
		Элементы.ЯчейкаИсточникаВозвратаИзЭксплуатации.Видимость = Ложь;
		ИсточникВозвратаИзЭксплуатации = Неопределено;
		ЯчейкаИсточникаВозвратаИзЭксплуатации = Неопределено;	
		
		Элементы.ПолучательВозвратаИзЭксплуатации.Видимость = Ложь;
		Элементы.ЯчейкаПолучателяВозвратаИзЭксплуатации.Видимость = Ложь;
		ПолучательВозвратаИзЭксплуатации = Неопределено;
		ЯчейкаПолучателяВозвратаИзЭксплуатации = Неопределено;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ИсточникПеремещения)
		ИЛИ ИсточникПеремещения.ОрдерныйСклад
		ИЛИ ИсточникПеремещения.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
		ИЛИ ИсточникПеремещения.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
		
		Элементы.ЯчейкаИсточникаПеремещения.Доступность = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПолучательПеремещения)
		ИЛИ ПолучательПеремещения.ОрдерныйСклад
		ИЛИ ПолучательПеремещения.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
		ИЛИ ПолучательПеремещения.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
		
		Элементы.ЯчейкаПолучателяПеремещения.Доступность = Ложь;
		
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(ПолучательОтходов)
		ИЛИ ПолучательОтходов.ОрдерныйСклад Тогда
		
		Элементы.ЯчейкаПолучателяОтходов.Доступность = Ложь;
		
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(ИсточникСписанияНаРасходы)
		ИЛИ ИсточникСписанияНаРасходы.ОрдерныйСклад Тогда
		
		Элементы.ЯчейкаИсточникаСписанияНаРасходы.Доступность = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПолучательСписанияНаРасходы) Тогда
		
		Элементы.ЯчейкаПолучателяСписанияНаРасходы.Доступность = Ложь;
		
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(ИсточникПередачиВЭксплуатацию)
		ИЛИ ИсточникПередачиВЭксплуатацию.ОрдерныйСклад Тогда
		
		Элементы.ЯчейкаИсточникаПередачиВЭксплуатацию.Доступность = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПолучательПередачиВЭксплуатацию) Тогда
		
		Элементы.ЯчейкаПолучателяПередачиВЭксплуатацию.Доступность = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ИсточникВозвратаИзЭксплуатации) Тогда
		
		Элементы.ЯчейкаИсточникаВозвратаИзЭксплуатации.Доступность = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПолучательВозвратаИзЭксплуатации)
		ИЛИ ПолучательВозвратаИзЭксплуатации.ОрдерныйСклад Тогда
		
		Элементы.ЯчейкаПолучателяВозвратаИзЭксплуатации.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьВидимостьИДоступность()	

&НаСервере
// Процедура устанавливает видимость реквизитов формы от опции
// Использовать подсистему Производство.
//
// Параметры:
// Нет.
//
Процедура УстановитьВидимостьОтФОИспользоватьПодсистемуПроизводство()
	
	// Производство.
	Если Константы.ФункциональнаяОпцияИспользоватьПодсистемуПроизводство.Получить() Тогда
		
		// Склад. Установка способа выбора структурной единицы в зависимости от ФО.
		Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить()
			И НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить() Тогда
			
			Элементы.ИсточникПеремещения.РежимВыбораИзСписка = Истина;
			Элементы.ИсточникПеремещения.СписокВыбора.Добавить(Справочники.СтруктурныеЕдиницы.ОсновноеПодразделение);
			Элементы.ИсточникПеремещения.СписокВыбора.Добавить(Справочники.СтруктурныеЕдиницы.ОсновнойСклад);
			
			Элементы.ПолучательПеремещения.РежимВыбораИзСписка = Истина;
			Элементы.ПолучательПеремещения.СписокВыбора.Добавить(Справочники.СтруктурныеЕдиницы.ОсновноеПодразделение);
			Элементы.ПолучательПеремещения.СписокВыбора.Добавить(Справочники.СтруктурныеЕдиницы.ОсновнойСклад);
			
			Элементы.ПолучательОтходов.РежимВыбораИзСписка = Истина;
			Элементы.ПолучательОтходов.СписокВыбора.Добавить(Справочники.СтруктурныеЕдиницы.ОсновноеПодразделение);
			Элементы.ПолучательОтходов.СписокВыбора.Добавить(Справочники.СтруктурныеЕдиницы.ОсновнойСклад);
		
		КонецЕсли;
		
	Иначе
		
		Если Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить() Тогда
			
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(Перечисления.ТипыСтруктурныхЕдиниц.Склад);
			НовыйМассив.Добавить(Перечисления.ТипыСтруктурныхЕдиниц.Розница);
			НовыйМассив.Добавить(Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет);
			МассивТипыСтруктурныхЕдиниц = Новый ФиксированныйМассив(НовыйМассив);
			НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипСтруктурнойЕдиницы", МассивТипыСтруктурныхЕдиниц);
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НовыйПараметр);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			
			Элементы.ИсточникПеремещения.ПараметрыВыбора = НовыеПараметры;
			Элементы.ПолучательПеремещения.ПараметрыВыбора = НовыеПараметры;
			Элементы.ПолучательОтходов.ПараметрыВыбора = НовыеПараметры;
			
		Иначе
			
			Элементы.ИсточникПеремещения.Видимость = Ложь;
			Элементы.ПолучательПеремещения.Видимость = Ложь;
			Элементы.ПолучательОтходов.Видимость = Ложь;
			
		КонецЕсли;
		
		Если Параметры.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
			
			Элементы.ПеремещениеСборкаРазборка.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьВидимостьОтФОИспользоватьПодсистемуПроизводство()

#КонецОбласти
