#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений;
	Запрос = Новый Запрос;
	КоличествоЭлементовБыстрогоВыбора = 15;
	
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 15
		|	СостоянияЗаказовПоставщикам.Ссылка КАК Состояние,
		|	СостоянияЗаказовПоставщикам.Наименование КАК Наименование,
		|	СостоянияЗаказовПоставщикам.Цвет КАК Цвет,
		|	ВЫБОР
		|		КОГДА СостоянияЗаказовПоставщикам.Ссылка = ЗНАЧЕНИЕ(Справочник.СостоянияЗаказовПоставщикам.Завершен)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЗавершенПоследним
		|ИЗ
		|	Справочник.СостоянияЗаказовПоставщикам КАК СостоянияЗаказовПоставщикам
		|ГДЕ
		|	СостоянияЗаказовПоставщикам.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗавершенПоследним,
		|	СостоянияЗаказовПоставщикам.РеквизитДопУпорядочивания";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "15", КоличествоЭлементовБыстрогоВыбора);
	Выборка = Запрос.Выполнить().Выбрать();
	НомерПоПорядку = 0;
	ЖирныйШрифт = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , Истина);
	
	Пока Выборка.Следующий() Цикл
		
		НомерПоПорядку = НомерПоПорядку + 1;
		Цвет = Выборка.Цвет.Получить();
		Если Цвет = Неопределено Тогда
			Цвет = ЦветаСтиля.ЦветТекстаПоля;
		КонецЕсли;
		
		КомпонентыФС = Новый Массив;
		КомпонентыФС.Добавить(Строка(НомерПоПорядку) + ". ");
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(
			Выборка.Наименование,
			?(Выборка.Состояние = Справочники.СостоянияЗаказовПоставщикам.Завершен, ЖирныйШрифт, Неопределено),
			Цвет
		));
		
		ДанныеВыбора.Добавить(Выборка.Состояние, Новый ФорматированнаяСтрока(КомпонентыФС));
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Процедура заполняет справочник по умолчанию
//
Процедура ЗаполнитьПоставляемыеСостояния() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СостоянияЗаказовПоставщикам.Ссылка
		|ИЗ
		|	Справочник.СостоянияЗаказовПоставщикам КАК СостоянияЗаказовПоставщикам
		|ГДЕ
		|	СостоянияЗаказовПоставщикам.Предопределенный = ЛОЖЬ";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		// 1. Состояние "В работе"
		Состояние = Справочники.СостоянияЗаказовПоставщикам.СоздатьЭлемент();
		Состояние.Наименование	= НСтр("ru='В работе'");
		Состояние.РеквизитДопУпорядочивания = 1;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Состояние);
		
		// 2. Состояние "Завершен"
		Состояние = Справочники.СостоянияЗаказовПоставщикам.Завершен.ПолучитьОбъект();
		Состояние.РеквизитДопУпорядочивания = 99999;
		Состояние.Цвет = Новый ХранилищеЗначения(ЦветаСтиля.ПрошедшееСобытие);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Состояние);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось заполнить справочник ""Состояния заказов поставщикам"" по умолчанию по причине:
				|%1'"), 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.СостоянияЗаказовПоставщикам, , ТекстСообщения);
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли