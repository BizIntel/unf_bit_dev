
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АдресКорзиныВХранилище") И ЗначениеЗаполнено(Параметры.АдресКорзиныВХранилище) Тогда
		ТаблицаДляЗагрузки = ПолучитьИзВременногоХранилища(Параметры.АдресКорзиныВХранилище);
		Корзина.Загрузить(ТаблицаДляЗагрузки);
	КонецЕсли;
	Если Параметры.Свойство("НалогообложениеНДС") Тогда
		НалогообложениеНДС = Параметры.НалогообложениеНДС;
	КонецЕсли;
	Если Параметры.Свойство("ИспользуетсяНДС") Тогда
		ИспользуетсяНДС = Параметры.ИспользуетсяНДС;
	КонецЕсли;
	Если Параметры.Свойство("ОтборВидЦен") Тогда
		ОтборВидЦен = Параметры.ОтборВидЦен;
		ВалютаПредставление = УправлениеНебольшойФирмойПовтИсп.ПолучитьСимвольноеПредставлениеВалюты(Параметры.ОтборВидЦен.ВалютаЦены);
	КонецЕсли;
	Если Параметры.Свойство("ОтборСклад") Тогда
		ОтборСклад = Параметры.ОтборСклад;
	КонецЕсли;
	Если Параметры.Свойство("ИспользуютсяХарактеристики") Тогда
		ИспользуютсяХарактеристики = Параметры.ИспользуютсяХарактеристики;
		Элементы.КорзинаХарактеристика.Видимость = ИспользуютсяХарактеристики;
	КонецЕсли;
	Если Параметры.Свойство("ЕстьДоступКЦенам") Тогда
		ЕстьДоступКЦенам = Параметры.ЕстьДоступКЦенам;
		Элементы.КорзинаЦена.Видимость	= ЕстьДоступКЦенам;
		Элементы.КорзинаСумма.Видимость = ЕстьДоступКЦенам;
	Иначе
		ЕстьДоступКЦенам = Истина;
	КонецЕсли;
	
	// Установим видимость подменю в зависимости от наличия прав
	Если Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		Элементы.ПодменюКупитьКорзина.Видимость	= РольДоступна("ДобавлениеИзменениеПодсистемыЗакупки");
		Элементы.ПодменюПродатьКорзина.Видимость= РольДоступна("ДобавлениеИзменениеПодсистемыПродажи");
	КонецЕсли;
	
	Элементы.КорзинаЦена.Доступность = УправлениеНебольшойФирмойУправлениеДоступомПовтИсп.РазрешеноРедактированиеЦенДокументов();
	Элементы.Отложить.Доступность = (Корзина.Количество()>0);
	
	РаботаСНоменклатуройКлиентСервер.ОбновитьИтогиПодобранныхТоваров(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ РазрешитьЗакрытие Тогда
		Отказ=Истина;
		ПодключитьОбработчикОжидания("ЗакрытьФормуПеренестиКорзину", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КорзинаЦенаКоличествоПриИзменении(Элемент)
	
	СтрокаКорзины = Элементы.Корзина.ТекущиеДанные;
	
	РаботаСНоменклатуройКлиентСервер.РассчитатьСуммуВСтрокеТабличнойЧасти(ЭтотОбъект, СтрокаКорзины, "Корзина");
	РаботаСНоменклатуройКлиентСервер.ОбновитьИтогиПодобранныхТоваров(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КорзинаПриИзменении(Элемент)
	
	Элементы.Отложить.Доступность = (Корзина.Количество()>0);
	РаботаСНоменклатуройКлиентСервер.ОбновитьИтогиПодобранныхТоваров(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

&НаКлиенте
Процедура Отложить(Команда)
	
	ОтложитьНаСервере();
	РазрешитьЗакрытие = Истина;
	Закрыть("КорзинаОтложена");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКорзину(Команда)
	
	Корзина.Очистить();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСКорзиной

&НаСервере
Процедура ОтложитьНаСервере()
	
	ИмяКлючаОбъекта = "КорзинаНоменклатура";
	
	СтрокаНастроек = ЗначениеВСтрокуВнутр(Корзина.Выгрузить());
	ТекстОтложено = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Отложено: %1 на сумму %2 %3'"),
		Корзина.Итог("Количество"),
		Формат(Корзина.Итог("Сумма"),"ЧДЦ=2; ЧН=0"),
		?(ЗначениеЗаполнено(ВалютаПредставление),ВалютаПредставление,"")
		);
	
	ОписаниеНастройки = ТекстОтложено + Символы.ПС + Новый УникальныйИдентификатор;
	
	ХранилищеНастроекДанныхФорм.Сохранить(ИмяКлючаОбъекта, ОписаниеНастройки, СтрокаНастроек);
	Корзина.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьПодбор()
	
	СтруктураЗакрытия = Новый Структура("Корзина, ПеренестиВДокумент", Корзина, ПеренестиВДокумент);
	Закрыть(СтруктураЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуПеренестиКорзину() Экспорт
	
	РазрешитьЗакрытие = Истина;
	Если ПеренестиВДокумент Тогда
		Закрыть("ПеренестиВДокумент");
	Иначе
		СтруктураЗакрытия = Новый Структура("Корзина", Корзина);
		Закрыть(СтруктураЗакрытия);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти
