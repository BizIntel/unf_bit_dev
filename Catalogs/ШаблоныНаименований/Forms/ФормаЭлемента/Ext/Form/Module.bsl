
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Настройки = Новый Структура;
	Настройки.Вставить("БулевскиеПараметры", Новый Массив);
	
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		Параметры.Свойство("Владелец", Объект.Владелец);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		Объект.Наименование = ШаблоныНаименований.НаименованиеНезаполненногоШаблона();
	КонецЕсли;
	
	Если Параметры.Свойство("ДляХарактеристики") Тогда
		Объект.ДляХарактеристики = Параметры.ДляХарактеристики;
	КонецЕсли;
	
	Если Объект.ДляХарактеристики Тогда
		НаборСвойств = Объект.Владелец.НаборСвойствХарактеристики;
	Иначе
		НаборСвойств = Объект.Владелец.НаборСвойств;
	КонецЕсли;
	
	СоздатьКомандыДобавленияСвойств();
	ОбновитьПримерНаСервере();
	
	ПозицияКурсора = Новый Структура("НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки", 0, 0, 0, 0);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ЭтоПредопределенный Тогда
		ТекущийОбъект.ЭтоПредопределенный = (ТекущийОбъект.ШаблонДляПредставления = ШаблонПриОткрытии);
	КонецЕсли;
	
	ШаблоныНаименований.СформироватьНаименованиеШаблона(ТекущийОбъект);
	ОбновитьШаблонДляФормирования(Реквизиты, ТекущийОбъект.ШаблонДляПредставления, ТекущийОбъект.ШаблонДляФормирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ШаблоныНаименований");
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ШаблонДляПредставленияИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ПодключитьОбработчикОжидания("ОбновитьОтображениеФормы", 1.5, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

&НаКлиенте
Процедура Подключаемый_КомандаВставитьПараметр(Команда)
	
	ПараметрИдентификатор = ПараметрИдентификатор(Команда.Имя);
	
	ДобавитьБлокВШаблон(, ПараметрИдентификатор);
	ПодключитьОбработчикОжидания("ОбновитьОтображениеФормы", 0.1, Истина);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СоздатьКомандыДобавленияСвойств()
	
	// ИдентификаторПолный        - Внутреннее представление идентификатора для определения доп. реквизита.
	// ИдентификаторПредставление - Внешнее представление идентификатора для подстановки в шаблон (при записи заменяется на внутренний).
	// Представление              - Представление добавляемого параметра (используется в кнопках командной панели).
	// Заголовок                  - Заголовок сопутствующий параметру (добавляется в виде свободного текста перед значением параметра).
	
	НоваяСтрока = Реквизиты.Добавить();
	НоваяСтрока.ИдентификаторПолный = "Наименование";
	НоваяСтрока.ИдентификаторПредставление = "Наименование";
	НоваяСтрока.Представление = "Наименование";
	НоваяСтрока.Заголовок     = "";
	
	ШаблоныНаименованийСписокСвойств.Добавить("Наименование", "Наименование");
	
	Если НЕ Объект.ДляХарактеристики Тогда
		
		НоваяСтрока = Реквизиты.Добавить();
		НоваяСтрока.ИдентификаторПолный = "Артикул";
		НоваяСтрока.ИдентификаторПредставление = "Артикул";
		НоваяСтрока.Представление = "Артикул";
		НоваяСтрока.Заголовок     = "";
		
		НоваяСтрока = Реквизиты.Добавить();
		НоваяСтрока.ИдентификаторПолный = "Код";
		НоваяСтрока.ИдентификаторПредставление = "Код";
		НоваяСтрока.Представление = "Код";
		НоваяСтрока.Заголовок     = "";
		
		НоваяСтрока = Реквизиты.Добавить();
		НоваяСтрока.ИдентификаторПолный = "СтранаПроисхождения";
		НоваяСтрока.ИдентификаторПредставление = "СтранаПроисхождения";
		НоваяСтрока.Представление = "Страна происхождения";
		НоваяСтрока.Заголовок     = "Страна происхождения";
		
		НоваяСтрока = Реквизиты.Добавить();
		НоваяСтрока.ИдентификаторПолный = "Поставщик";
		НоваяСтрока.ИдентификаторПредставление = "Поставщик";
		НоваяСтрока.Представление = "Поставщик";
		НоваяСтрока.Заголовок     = "Поставщик";
		
		ШаблоныНаименованийСписокСвойств.Добавить("Артикул", "1234");
		ШаблоныНаименованийСписокСвойств.Добавить("Код", "ФР-01");
		ШаблоныНаименованийСписокСвойств.Добавить("СтранаПроисхождения", "Россия");
		ШаблоныНаименованийСписокСвойств.Добавить("Поставщик", "ООО ""Наталья""");
		
	КонецЕсли;
	
	Для каждого ДопРеквизит Из НаборСвойств.ДополнительныеРеквизиты Цикл
		
		ЭтоБулевскийРеквизит = ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(ДопРеквизит.Свойство.ТипЗначения, Тип("Булево"));
		
		НоваяСтрока = Реквизиты.Добавить();
		НоваяСтрока.ИдентификаторПолный = ДопРеквизит.Свойство;
		НоваяСтрока.ИдентификаторПредставление = ДопРеквизит.Свойство.Заголовок;
		НоваяСтрока.Представление = ДопРеквизит.Свойство.Заголовок;
		НоваяСтрока.Заголовок     = ?(ЭтоБулевскийРеквизит, "", ДопРеквизит.Свойство.Заголовок);
		
		Если ЭтоБулевскийРеквизит Тогда
			Настройки.БулевскиеПараметры.Добавить("[" + НоваяСтрока.ИдентификаторПолный + "]");
		КонецЕсли;
		
		Если ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(ДопРеквизит.Свойство.ТипЗначения, Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
			Значения = Справочники.ЗначенияСвойствОбъектов.Выбрать(, ДопРеквизит.Свойство);
			Значения.Следующий();
			Значение = Значения;
		ИначеЕсли ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(ДопРеквизит.Свойство.ТипЗначения, Тип("Число")) Тогда
			ГСЧ = Новый ГенераторСлучайныхЧисел;
			Значение = ГСЧ.СлучайноеЧисло(1, 30);
		ИначеЕсли ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(ДопРеквизит.Свойство.ТипЗначения, Тип("Строка")) Тогда
			Значение = "<значение>";
		ИначеЕсли ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(ДопРеквизит.Свойство.ТипЗначения, Тип("Булево")) Тогда
			Значение = ДопРеквизит.Свойство.Заголовок;
		ИначеЕсли ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(ДопРеквизит.Свойство.ТипЗначения, Тип("Дата")) Тогда
			Значение = ТекущаяДатаСеанса();
		Иначе
			Значение = ДопРеквизит.Свойство.Заголовок;
		КонецЕсли;
		ШаблоныНаименованийСписокСвойств.Добавить(Строка(ДопРеквизит.Свойство), Значение);
		
	КонецЦикла;
	
	Реквизиты.Сортировать("Представление");
	
	СоздатьКомандыДобавленияПараметров();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКомандыДобавленияПараметров()
	
	Для Итератор = 0 По Реквизиты.Количество() - 1 Цикл
		
		Реквизит = Реквизиты[Итератор];
		
		НоваяКоманда = Команды.Добавить("КомандаВставитьПараметр" + Итератор);
		НоваяКоманда.Действие = "Подключаемый_КомандаВставитьПараметр";
		НоваяКоманда.Заголовок = Реквизиты[Итератор].Представление;
		
		НоваяКнопка = Элементы.Добавить("КомандаВставитьПараметр" + Итератор, Тип("КнопкаФормы"), Элементы.ГруппаДобавитьПараметр);
		НоваяКнопка.ИмяКоманды = "КомандаВставитьПараметр" + Итератор;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрИдентификатор(КомандаИмя)
	
	Возврат Число(СтрЗаменить(КомандаИмя, "КомандаВставитьПараметр", ""));
	
КонецФункции

&НаКлиенте
Процедура ДобавитьБлокВШаблон(БлокТекст = Неопределено, ПараметрИдентификатор = Неопределено)
	
	Если ПараметрИдентификатор <> Неопределено Тогда
		Параметр = "[" + Реквизиты[ПараметрИдентификатор].ИдентификаторПредставление + "]";
	Иначе
		Параметр = "";
	КонецЕсли;
	
	Если БлокТекст <> Неопределено Тогда
		Текст = "" + БлокТекст + " ";
		ПредопределенныйРазделитель = "";
	ИначеЕсли ПараметрИдентификатор <> Неопределено Тогда
		Текст = "" + Реквизиты[ПараметрИдентификатор].Заголовок;
		Если ЗначениеЗаполнено(Текст) Тогда
			Текст = Текст + " ";
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.ШаблонДляПредставления) Тогда
			ПредопределенныйРазделитель = ", ";
		Иначе
			ПредопределенныйРазделитель = "";
		КонецЕсли;
	Иначе
		Текст = "";
		ПредопределенныйРазделитель = ", ";
	КонецЕсли;
	
	ТекстДляВставки = "{%1%2%3}";
	ТекстДляВставки = СтрШаблон(ТекстДляВставки, ПредопределенныйРазделитель, Текст, Параметр);
	
	СтрокаНач = 0;
	СтрокаКон = 0;
	КолонкаНач = 0;
	КолонкаКон = 0;
	Элементы.ШаблонДляПредставления.ПолучитьГраницыВыделения(СтрокаНач, КолонкаНач, СтрокаКон, КолонкаКон);
	
	ПозицияНачалаВставки = ОпределитьПозициюВставкиТекста(СтрокаНач, КолонкаНач, СтрокаКон, КолонкаКон);
	ПозицияКонцаВставки = ПозицияНачалаВставки + СтрДлина(ТекстДляВставки);
	
	ПозицияКурсора.НачалоСтроки = СтрокаНач;
	ПозицияКурсора.НачалоКолонки = ПозицияКонцаВставки;
	ПозицияКурсора.КонецСтроки = СтрокаКон;
	ПозицияКурсора.КонецКолонки = ПозицияКонцаВставки;
	
	Текст = Объект.ШаблонДляПредставления;
	
	Если НЕ ЗначениеЗаполнено(Текст) Тогда
		Объект.ШаблонДляПредставления = ТекстДляВставки;
	Иначе
		Объект.ШаблонДляПредставления = Лев(Текст, ПозицияНачалаВставки - 1) + ТекстДляВставки + Прав(Текст, СтрДлина(Текст) - ПозицияНачалаВставки + 1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьПозициюВставкиТекста(СтрокаНач, КолонкаНач, СтрокаКон, КолонкаКон)
	
	ТекущаяПозицияВСтроке = КолонкаНач;
	
	Если (ТекущаяПозицияВСтроке = СтрДлина(Объект.ШаблонДляПредставления) + 1) Тогда
		Возврат ТекущаяПозицияВСтроке;
	КонецЕсли;
	
	НачалоБлокаСлева = 0;
	КонецБлокаСлева = 0;
	Если ТекущаяПозицияВСтроке > 1 Тогда
		НачалоБлокаСлева = СтрНайти(Объект.ШаблонДляПредставления, "{", НаправлениеПоиска.СКонца, ТекущаяПозицияВСтроке - 1);
		КонецБлокаСлева = СтрНайти(Объект.ШаблонДляПредставления, "}", НаправлениеПоиска.СКонца, ТекущаяПозицияВСтроке - 1);
	КонецЕсли;
	
	НачалоБлокаСправа = СтрНайти(Объект.ШаблонДляПредставления, "{", НаправлениеПоиска.СНачала, ТекущаяПозицияВСтроке);
	КонецБлокаСправа = СтрНайти(Объект.ШаблонДляПредставления, "}", НаправлениеПоиска.СНачала, ТекущаяПозицияВСтроке);
	
	КурсорВБлоке = 
		ТекущаяПозицияВСтроке = НачалоБлокаСлева
		ИЛИ ТекущаяПозицияВСтроке = КонецБлокаСправа
		ИЛИ (
			НачалоБлокаСлева > КонецБлокаСлева 
			И ( 
				(НачалоБлокаСправа = 0 И КонецБлокаСправа <> 0) 
				ИЛИ КонецБлокаСправа < НачалоБлокаСправа
			)
		)
	;
	
	Если НЕ КурсорВБлоке Тогда
		Возврат ТекущаяПозицияВСтроке;
	КонецЕсли;
	
	ТекущаяПозицияВСтроке = КонецБлокаСправа + 1;
	Возврат ТекущаяПозицияВСтроке;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьШаблонДляФормирования(Реквизиты, ШаблонДляПредставления, ШаблонДляФормирования)
	
	ШаблонДляФормирования = ШаблонДляПредставления;
	
	Для каждого Реквизит Из Реквизиты Цикл
		
		ШаблонДляФормирования = СтрЗаменить(ШаблонДляФормирования, "[" + Реквизит.ИдентификаторПредставление + "]", "[" + Реквизит.ИдентификаторПолный + "]");
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеФормы() Экспорт
	
	ОбновитьПример(Истина);
	УстановитьКурсорВПолеШаблона();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПример(ПолучитьПозициюКурсора = Ложь)
	
	Если ПолучитьПозициюКурсора Тогда
		Элементы.ШаблонДляПредставления.ПолучитьГраницыВыделения(
			ПозицияКурсора.НачалоСтроки,
			ПозицияКурсора.НачалоКолонки,
			ПозицияКурсора.КонецСтроки,
			ПозицияКурсора.КонецКолонки
		);
	Иначе
		ПозицияКурсора.НачалоСтроки = 0;
		ПозицияКурсора.НачалоКолонки = 0;
		ПозицияКурсора.КонецСтроки = 0;
		ПозицияКурсора.КонецКолонки = 0;
	КонецЕсли;
	
	Объект.ШаблонДляПредставления = Элементы.ШаблонДляПредставления.ТекстРедактирования;
	ОбновитьШаблонДляФормирования(Реквизиты, Элементы.ШаблонДляПредставления.ТекстРедактирования, Объект.ШаблонДляФормирования);
	НаименованиеПример = ШаблоныНаименованийКлиентСервер.СформироватьНаименованиеПоШаблону(ШаблоныНаименованийСписокСвойств, Объект.ШаблонДляФормирования);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПримерНаСервере() Экспорт
	
	НаименованиеПример = ШаблоныНаименованийКлиентСервер.СформироватьНаименованиеПоШаблону(ШаблоныНаименованийСписокСвойств, Объект.ШаблонДляФормирования);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКурсорВПолеШаблона()
	
	ЭтаФорма.ТекущийЭлемент = Элементы.НаименованиеПример;
	ЭтаФорма.ТекущийЭлемент = Элементы.ШаблонДляПредставления;
	
	Если ПозицияКурсора.НачалоСтроки <> 0
		И ПозицияКурсора.НачалоКолонки  <> 0
		И ПозицияКурсора.КонецСтроки <> 0
		И ПозицияКурсора.КонецКолонки <> 0 Тогда
		
		Элементы.ШаблонДляПредставления.УстановитьГраницыВыделения(
			ПозицияКурсора.НачалоСтроки,
			ПозицияКурсора.НачалоКолонки,
			ПозицияКурсора.КонецСтроки,
			ПозицияКурсора.КонецКолонки
		);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
