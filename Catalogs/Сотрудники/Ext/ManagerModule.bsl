#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Создает новый элемент справочника Сотрудники и возвращает его ссылку
//
// ДанныеНовогоСотрудника - (Структура) данных нового элемента, где
//
//		Ключ 		- имя реквизита справочника Сотрудники;
//		Значение	= значение, которое должно записаться в реквизит;
//
// ОбновлениеИнформационнойБазы.ЗаписатьОбъект() - неиспользуем потому, что идет перехват Исключения
//
Функция СоздатьНовогоСотрудника(Знач ДанныеНовогоСотрудника, Знач РегистрироватьНаУзлахПлановОбмена = Истина, Знач ОтключитьБизнесЛогику = Ложь) Экспорт
	
	СправочникОбъект = Справочники.Сотрудники.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(СправочникОбъект, ДанныеНовогоСотрудника);
	
	Если НЕ (ДанныеНовогоСотрудника.Свойство("Код") 
		И ЗначениеЗаполнено(ДанныеНовогоСотрудника.Код)) Тогда
		
		СправочникОбъект.УстановитьНовыйКод();
		
	КонецЕсли;
	
	СправочникОбъект.ОбменДанными.Загрузка = ОтключитьБизнесЛогику;
	Если Не РегистрироватьНаУзлахПлановОбмена Тогда
		
		СправочникОбъект.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
		СправочникОбъект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		
	КонецЕсли;
	
	СправочникОбъект.Записать(); 
	
	Возврат СправочникОбъект.Ссылка;
	
КонецФункции // СоздатьНовогоСотрудника()

Процедура УстановитьОсновногоОтветственногоДляПользователя(НовыйОсновнойОтветственный, Пользователь, ОбновитьЗначениеНастройки = Ложь) Экспорт
	
	// Установим настройку, если пользователю не назначен ответственный
	ОсновнойОтветственный = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "ОсновнойОтветственный");
	Если (ЗначениеЗаполнено(ОсновнойОтветственный)
		И ОбновитьЗначениеНастройки)
			ИЛИ НЕ ЗначениеЗаполнено(ОсновнойОтветственный) Тогда
		
		УправлениеНебольшойФирмойСервер.УстановитьНастройкуПользователя(НовыйОсновнойОтветственный, "ОсновнойОтветственный", Пользователь);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
