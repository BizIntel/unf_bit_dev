#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДоверенностьНалогоплательщика";
	КомандаПечати.Представление = НСтр("ru = 'Печать'");

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Для каждого СтрокаМассиваОбъектов Из МассивОбъектов Цикл
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ДоверенностьНалогоплательщика", НСтр("ru='Доверенность налогоплательщика'"), СформироватьДоверенность(СтрокаМассиваОбъектов));
	КонецЦикла; 	
	
КонецПроцедуры

// Процедура формирует и выводит печатную форму справочника по указанному макету.
//
Функция СформироватьДоверенность(Знач Доверенность) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ДоверенностиНалогоплательщика.ПФ_MXL_Доверенность");
	
	Организация = Доверенность.Владелец;
	
	Город = "";
	Если РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация) Тогда 
		СведенияОргЮЛ = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, , "НаимЮЛПол, ИННЮЛ, КППЮЛ, ОГРН, ОргИндекс, ОргКодСубъект, ОргРайон, ОргГород, ОргНПункт, ОргУлица, ОргДом, ОргКорпус, ОргКвартира, ФИОРук, ИННРук,ЮрАдресОрганизации");
		ШапкаШапки = Макет.ПолучитьОбласть("Шапка_ООО");
		ШапкаШапки.Параметры.Организация = СведенияОргЮЛ.НаимЮЛПол;
		ШапкаШапки.Параметры.ИНН = СведенияОргЮЛ.ИННЮл;
		ШапкаШапки.Параметры.КПП = СведенияОргЮЛ.КППЮл;
		ШапкаШапки.Параметры.ОГРН = СведенияОргЮЛ.ОГРН;
		АдресООО = ?(ЗначениеЗаполнено(СведенияОргЮЛ.ОргИндекс),СведенияОргЮЛ.ОргИндекс + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргЮЛ.ОргКодСубъект), РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(СведенияОргЮЛ.ОргКодСубъект) + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргЮЛ.ОргРайон), СведенияОргЮЛ.ОргРайон + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргЮЛ.ОргГород), СведенияОргЮЛ.ОргГород + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргЮЛ.ОргНПункт), СведенияОргЮЛ.ОргНПункт + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргЮЛ.ОргУлица), СведенияОргЮЛ.ОргУлица + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргЮЛ.ОргДом), СведенияОргЮЛ.ОргДом + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргЮЛ.ОргКорпус), СведенияОргЮЛ.ОргКорпус + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргЮЛ.ОргКвартира), СведенияОргЮЛ.ОргКвартира, "");
		
		
		ШапкаШапки.Параметры.Юридически_Адрес_Организации = АдресООО;
		Город = ?(ПустаяСтрока(СведенияОргЮЛ.ОргГород), РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(СведенияОргЮЛ.ОргКодСубъект), СведенияОргЮЛ.ОргГород);
	Иначе
		СведенияОргФЛ = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, , "ИННФЛ, ОГРН, Гражд, ДатаРожд, ФИО, ИндексМЖ, КодСубъектМЖ, РайонМЖ, ГородМЖ, НПунктМЖ, УлицаМЖ, ДомМЖ, КорпусМЖ, КвартираМЖ, КодУдЛичн, СерияУдЛичн, НомерУдЛичн, ДатаУдЛичн, ОрганВыданУдЛичн, ЮрАдресОрганизации");
		ШапкаШапки = Макет.ПолучитьОбласть("Шапка_ИП");
		ШапкаШапки.Параметры.Организация_Руководитель = СведенияОргФЛ.ФИО;
		ШапкаШапки.Параметры.ИНН = СведенияОргФЛ.ИННФЛ;
		ШапкаШапки.Параметры.ОГРНИП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ОГРН");
		
		АдресИП = ?(ЗначениеЗаполнено(СведенияОргФЛ.ИндексМЖ),СведенияОргФЛ.ИндексМЖ + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргФЛ.КодСубъектМЖ), РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(СведенияОргФЛ.КодСубъектМЖ) + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргФЛ.РайонМЖ), СведенияОргФЛ.РайонМЖ + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргФЛ.ГородМЖ), СведенияОргФЛ.ГородМЖ + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргФЛ.НПунктМЖ), СведенияОргФЛ.НПунктМЖ + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргФЛ.УлицаМЖ), СведенияОргФЛ.УлицаМЖ + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргФЛ.ДомМЖ), СведенияОргФЛ.ДомМЖ + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргФЛ.КорпусМЖ), СведенияОргФЛ.КорпусМЖ + ", ", "")
			+ ?(ЗначениеЗаполнено(СведенияОргФЛ.КвартираМЖ), СведенияОргФЛ.КвартираМЖ, "");
		
		ШапкаШапки.Параметры.Юридически_Адрес_Организации = АдресИП;
		Город = ?(ПустаяСтрока(СведенияОргФЛ.ГородМЖ), РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(СведенияОргФЛ.КодСубъектМЖ), СведенияОргФЛ.ГородМЖ);
	КонецЕсли;
	
	
	ТабличныйДокумент.Вывести(ШапкаШапки);
	
	
	// Заполняем шапку
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.ДатаВыдачи = Формат(Доверенность.ДатаВыдачи, "ДФ='«dd» MMMM yyyy'")+НСтр("ru=' года.'");
	Шапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Доверенность.НомерДовер, Ложь, Истина);
	Шапка.Параметры.ГородВыдачи = Город;
	ТабличныйДокумент.Вывести(Шапка);
	
	
	
	// Заполняем основную часть доверенность
	Если НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация) Тогда
		ОсновнаяИнформация = Макет.ПолучитьОбласть("ОсновнаяИнформация_ИП");
		//ФЛ 
		ОсновнаяИнформация.Параметры.Организация_Руководитель = СведенияОргФЛ.ФИО ;
		ОсновнаяИнформация.Параметры.ИНН_ИП = СведенияОргФЛ.ИННФЛ;
		РуководительОрганизации = СведенияОргФЛ.ФИО;
	Иначе
		// Организация
		ОсновнаяИнформация = Макет.ПолучитьОбласть("ОсновнаяИнформация_ООО");
		// получаем сведения о ЮЛ
		
		ОсновнаяИнформация.Параметры.Организация = СведенияОргЮЛ.НаимЮЛПол;
		ОсновнаяИнформация.Параметры.Организация_Руководитель = СведенияОргЮЛ.ФИОРук;
		РуководительОрганизации = СведенияОргЮЛ.ФИОРук;;
		
	КонецЕсли;
	
	// Заполняем представителя
	// ФИО
	ФИО = Доверенность.ФИО.Найти(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ, "Владелец");
	Если ЗначениеЗаполнено(ФИО) Тогда
		ОсновнаяИнформация.Параметры.ФИО_Представитель = ФИО.Фамилия+" "+ФИО.Имя+" "+ФИО.Отчество;
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОсновнаяИнформация);
	
	Если Доверенность.ПолномочияПредставителя.Количество()>0 Тогда
		
		Полномочие = Доверенность.ПолномочияПредставителя[0];
		Если Полномочие.ПризнакПолныеПолномочия Тогда
			Область_ПолныеПолномочия = Макет.ПолучитьОбласть("Область_ПолныеПолномочия");
			ТабличныйДокумент.Вывести(Область_ПолныеПолномочия);
		Иначе
			СписокПолномочий = ПолучитьСписокПолномочий();
			СтрокаПолномочие =Неопределено;
			Для Каждого Стр Из СписокПолномочий Цикл
				Если Полномочие["Признак"+Стр.Значение] Тогда
					Если СтрокаПолномочие<> Неопределено Тогда
						СтрокаПолномочие.Параметры.ТекстПолномочия =СтрокаПолномочие.Параметры.ТекстПолномочия +",";
						ТабличныйДокумент.Вывести(СтрокаПолномочие);
					КонецЕсли;
					СтрокаПолномочие = Макет.ПолучитьОбласть("СтрокаПолномочие");
					СтрокаПолномочие.Параметры.ТекстПолномочия = "• "+Стр.Представление;
				КонецЕсли;
			КонецЦикла;
			Если СтрокаПолномочие<> Неопределено Тогда
				СтрокаПолномочие.Параметры.ТекстПолномочия =СтрокаПолномочие.Параметры.ТекстПолномочия +".";
				ТабличныйДокумент.Вывести(СтрокаПолномочие);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	// Заполняем срок выдачи
	СрокВыдачи = Макет.ПолучитьОбласть("СрокВыдачи");
	Если Доверенность.ДатаОкончания = ДобавитьМесяц(Доверенность.ДатаВыдачи, 36) Тогда
		СрокВыдачи.Параметры.СрокВыдачи = НСтр("ru='сроком на три года.'");
	ИначеЕсли Доверенность.ДатаОкончания = ДобавитьМесяц(Доверенность.ДатаВыдачи, 24) Тогда
		СрокВыдачи.Параметры.СрокВыдачи = НСтр("ru='сроком на два года.'");
	ИначеЕсли Доверенность.ДатаОкончания = ДобавитьМесяц(Доверенность.ДатаВыдачи, 12) Тогда
		СрокВыдачи.Параметры.СрокВыдачи = НСтр("ru='сроком на год.'");
	ИначеЕсли Не ЗначениеЗаполнено(Доверенность.ДатаОкончания) Тогда 
		СрокВыдачи.Параметры.СрокВыдачи = НСтр("ru='.'");
	Иначе
		СрокВыдачи.Параметры.СрокВыдачи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='сроком на период с %1 г. по %2 г.'"),
				Формат(Доверенность.ДатаВыдачи, "ДФ=dd.MM.yyyy"),
				Формат(Доверенность.ДатаОкончания, "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	ТабличныйДокумент.Вывести(СрокВыдачи);
	
	// Заполняем подвал
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	Подвал.Параметры.Организация_Руководитель = РуководительОрганизации;
	Если Не РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация) Тогда
		
		Подвал.Параметры.РуководительТипСтрочные = "Индивидуальный предприниматель";
	Иначе
		
		Подвал.Параметры.РуководительТипСтрочные = "Директор";
	КонецЕсли;
	// удостоверение личности
	УдЛичнПредстФЛ = Доверенность.УдЛичности.Найти(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ, "Владелец");
	Если ЗначениеЗаполнено(УдЛичнПредстФЛ) Тогда
		Подвал.Параметры.ДанныеУдостоверения_Представитель = "серия "+УдЛичнПредстФЛ.СерДок+", № " +УдЛичнПредстФЛ.НомДок+", выдан "+ УдЛичнПредстФЛ.ВыдДок + " "+Формат(УдЛичнПредстФЛ.ДатаДок, "ДФ='«dd» MMMM yyyy'")+НСтр("ru=' года.'");
	КонецЕсли;
	
	// удостоверение личности
	Прописка = Доверенность.Адреса.Найти(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ, "Владелец");
	Если ЗначениеЗаполнено(Прописка) Тогда
		
		ПредставительЮЛ_Адрес = ?(ЗначениеЗаполнено(Прописка.Индекс),Прописка.Индекс + ", ", "")
			+ ?(ЗначениеЗаполнено(Прописка.КодРегион), РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(Прописка.КодРегион) + ", ", "")
			+ ?(ЗначениеЗаполнено(Прописка.Район), Прописка.Район + ", ", "")
			+ ?(ЗначениеЗаполнено(Прописка.Город), Прописка.Город + ", ", "")
			+ ?(ЗначениеЗаполнено(Прописка.НаселПункт), Прописка.НаселПункт + ", ", "")
			+ ?(ЗначениеЗаполнено(Прописка.Улица), Прописка.Улица + ", ", "")
			+ ?(ЗначениеЗаполнено(Прописка.Дом), Прописка.Дом + ", ", "")
			+ ?(ЗначениеЗаполнено(Прописка.Корпус), Прописка.Корпус + ", ", "")
			+ ?(ЗначениеЗаполнено(Прописка.Кварт), Прописка.Кварт, "");
		Подвал.Параметры.ДанныеУдостоверения_Прописка = ПредставительЮЛ_Адрес;
	КонецЕсли;

	ТабличныйДокумент.Вывести(Подвал);
	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

//Процедура проверяет заполнение реквизитов перед печатью
//
Функция ПроверитьЗаполнениеРеквизитовПередПечатью(Доверенность)Экспорт
	
	ВсеЗаполнено = Истина;
	МассивРевизитов = Новый Массив;
	Возврат Новый Структура("НеЗаполнено, МассивРеквизитов", НЕ ВсеЗаполнено, МассивРевизитов);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСписокПолномочий()
	
	Список = Новый СписокЗначений;
	Список.Добавить("01", "подписывать налоговую декларацию, др. отчетность");
	Список.Добавить("02", "представлять налоговую декларацию, др. отчетность");
	Список.Добавить("03", "получать документы в инспекции ФНС России");
	Список.Добавить("04", "вносить изменения в документы налоговой отчетности");
	Список.Добавить("05", "подписывать документы по постановке и снятию с учета");
	Список.Добавить("06", "представлять документы по постановке и снятию с учета");
	Список.Добавить("07", "получать в инспекции ФНС России документы по постановке и снятию с учета, кроме свидетельства");
	Список.Добавить("08", "подписывать документы по учету банковских счетов");
	Список.Добавить("09", "представлять документы по учету банковских счетов");
	Список.Добавить("10", "представлять документы по применению специальных налоговых режимов и консолидации учета по обособленным подразделениям");
	Список.Добавить("11", "получать в инспекции ФНС России документы по применению специальных налоговых режимов и консолидации учета по обособленным подразделениям");
	Список.Добавить("12", "подписывать документы по консолидации учета по обособленным подразделениям");
	Список.Добавить("13", "представлять заявления и запросы на проведение сверки расчетов с бюджетом, получение справок о состоянии расчетов с бюджетом");
	Список.Добавить("14", "получать в инспекции ФНС России акты сверок и справки о состоянии расчетов с бюджетом");
	Список.Добавить("15", "подписывать акт сверки расчетов с бюджетом");
	Список.Добавить("16", "подписывать акт и решение налоговой проверки");
	Список.Добавить("17", "подписывать заявление на зачет/возврат налога");
	Список.Добавить("18", "подписывать заявления о ввозе товаров и уплате косвенных налогов");
	Список.Добавить("19", "получать заявления о ввозе товаров и уплате");
	
	Возврат Список;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	// упрощенная форма доверенности пока используется только для ОП
	ИмяУпрощеннойФормы = "ФормаЭлементаУпрощенная";
	
	Если ВидФормы = "ФормаОбъекта"
	И Метаданные.Справочники.ДоверенностиНалогоплательщика.Формы.Найти(ИмяУпрощеннойФормы) <> Неопределено Тогда
		ВыбраннаяФорма = ИмяУпрощеннойФормы;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
