
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыполнитьПроверкуПравДоступа("СохранениеДанныхПользователя", Метаданные);
	
	СтруктураРеквизитовИВидовКИ = Новый Структура;
	
	ДобавитьРеквизитыКонтактнойИнформации();
	ЗагрузитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		Если ЗавершениеРаботы Тогда
			ТекстПредупреждения = НСтр("ru = 'Изменения состава печати не сохранены.'");
			Возврат;
		КонецЕсли;
		
		ТекстВопроса = НСтр("ru = 'Состав контактной информации был изменен.
			|Сохранить изменения?'");
		
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемСохранениеПредложено", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Отмена, НСтр("ru = 'Редактирование состава контактной информации'"));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)
	
	Если Модифицированность Тогда
		СохранитьНастройки();
	КонецЕсли;
	
	Закрыть(СоставПечатиИзменен);
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	Модифицированность = Ложь;
	Закрыть(СоставПечатиИзменен);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Подключаемый_ДобавленныйВидКИ_ПриИзменении(Элемент)
	
	Если Элемент.Родитель = Элементы.КонтактнаяИнформацияКонтактныеЛица Тогда
		Если ЭтотОбъект[Элемент.Имя] = Истина И ОсновноеКонтактноеЛицо = Ложь И ПрочиеКонтактныеЛица = Ложь Тогда
			ОсновноеКонтактноеЛицо = Истина;
		КонецЕсли;
	ИначеЕсли Элемент.Родитель = Элементы.КонтактнаяИнформацияОтветственныйМенеджер Тогда
		Если ЭтотОбъект[Элемент.Имя] = Истина И ОтветственныйМенеджер = Ложь Тогда
			ОтветственныйМенеджер = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьНастройки()
	
	ИспользуемыеВидыКИ = Новый Соответствие;
	
	Для Каждого КлючИЗначение Из СтруктураРеквизитовИВидовКИ Цикл
		
		ИспользуемыеВидыКИ.Вставить(КлючИЗначение.Значение, ЭтотОбъект[КлючИЗначение.Ключ]);
		
	КонецЦикла;
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("УправлениеСоставомКонтактнойИнформацииКонтрагента",
		"ИспользуемыеВидыКИ", ИспользуемыеВидыКИ);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("УправлениеСоставомКонтактнойИнформацииКонтрагента",
		"КонтрагентИНН", КонтрагентИНН);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("УправлениеСоставомКонтактнойИнформацииКонтрагента",
		"ОсновноеКонтактноеЛицо", ОсновноеКонтактноеЛицо);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("УправлениеСоставомКонтактнойИнформацииКонтрагента",
		"ПрочиеКонтактныеЛица", ПрочиеКонтактныеЛица);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("УправлениеСоставомКонтактнойИнформацииКонтрагента",
		"ОтветственныйМенеджер", ОтветственныйМенеджер);
	
	Модифицированность = Ложь;
	СоставПечатиИзменен = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	
	ИспользуемыеВидыКИ = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("УправлениеСоставомКонтактнойИнформацииКонтрагента",
		"ИспользуемыеВидыКИ", Новый Соответствие);
		
	КонтрагентИНН = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("УправлениеСоставомКонтактнойИнформацииКонтрагента",
		"КонтрагентИНН", Истина);
		
	ОсновноеКонтактноеЛицо = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("УправлениеСоставомКонтактнойИнформацииКонтрагента",
		"ОсновноеКонтактноеЛицо", Истина);
		
	ПрочиеКонтактныеЛица = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("УправлениеСоставомКонтактнойИнформацииКонтрагента",
		"ПрочиеКонтактныеЛица", Истина);
		
	ОтветственныйМенеджер = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("УправлениеСоставомКонтактнойИнформацииКонтрагента",
		"ОтветственныйМенеджер", Истина);
		
		
	Для Каждого КлючИЗначение Из СтруктураРеквизитовИВидовКИ Цикл
			
		ИспользованиеКИ = ИспользуемыеВидыКИ.Получить(КлючИЗначение.Значение);

		// Если доступного вида контактной информации нет в сохраненных настройках пользователя то установим использование по умолчанию
		Если ИспользованиеКИ = Неопределено Тогда
			ЭтотОбъект[КлючИЗначение.Ключ] = УправлениеНебольшойФирмойСервер.УстановитьПечатьВидаКИПоУмолчанию(КлючИЗначение.Значение);
		Иначе
			ЭтотОбъект[КлючИЗначение.Ключ] = ИспользованиеКИ;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемСохранениеПредложено(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьНастройки();
		Закрыть(СоставПечатиИзменен);
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть(СоставПечатиИзменен);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыКонтактнойИнформации()
	
	ОписаниеТипаБулево = Новый ОписаниеТипов("Булево");
	ДобавляемыеРеквизиты = Новый Массив;
	
	Выборка = УправлениеНебольшойФирмойСервер.ПолучитьДоступныеДляПечатиВидыКИ().Выбрать();
	
	НомерЗаписи = 0;
	Пока Выборка.Следующий() Цикл
		
		НомерЗаписи = НомерЗаписи + 1;
		
		ИмяРеквизита = "ДобавленныйВидКИ_" + НомерЗаписи;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, ОписаниеТипаБулево, , Выборка.Наименование, Истина));
		СтруктураРеквизитовИВидовКИ.Вставить(ИмяРеквизита, Выборка.ВидКИ);
		
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	НомерЗаписи = 0;
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		
		НомерЗаписи = НомерЗаписи + 1;
		
		Если Выборка.ИндексВладельцаКИ = 1 Тогда
			
			НомерГруппы = ?(НомерЗаписи % 3 = 0, 3, НомерЗаписи % 3);
			Родитель = Элементы["КонтактнаяИнформацияКонтрагент" + НомерГруппы];
			
		ИначеЕсли Выборка.ИндексВладельцаКИ = 2 Тогда
			
			Родитель = Элементы.КонтактнаяИнформацияКонтактныеЛица;
			
		ИначеЕсли Выборка.ИндексВладельцаКИ = 3 Тогда
			
			Родитель = Элементы.КонтактнаяИнформацияОтветственныйМенеджер;
			
		КонецЕсли;
		
		ИмяЭлемента = "ДобавленныйВидКИ_" + НомерЗаписи;
		ДобавитьЭлементФормыФлажок(ИмяЭлемента, Родитель);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьЭлементФормыФлажок(ИмяЭлемента, Родитель = Неопределено, ПутьКДанным = "")
	
	Если ПустаяСтрока(ПутьКДанным) Тогда 
		ПутьКДанным = ИмяЭлемента;
	КонецЕсли;
	
	ЭлементФормы = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Родитель);
	ЭлементФормы.ПутьКДанным = ПутьКДанным;
	ЭлементФормы.Вид = ВидПоляФормы.ПолеФлажка;
	ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	ЭлементФормы.УстановитьДействие("ПриИзменении", "Подключаемый_ДобавленныйВидКИ_ПриИзменении");
	
	Возврат ЭлементФормы;
	
КонецФункции

#КонецОбласти