
#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("КодГосударственногоОргана")
		И Параметры.Свойство("ВидГосударственногоОргана") Тогда
		КодГосударственногоОргана = Параметры.КодГосударственногоОргана;
		ВидГосударственногоОргана = Параметры.ВидГосударственногоОргана;
	ИначеЕсли Параметры.Свойство("РегистрацияВНалоговомОргане")
		И ЗначениеЗаполнено(Параметры.РегистрацияВНалоговомОргане) Тогда
		КодГосударственногоОргана = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.РегистрацияВНалоговомОргане, "Код");
		ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Элементы.КодГосударственногоОргана.ТолькоПросмотр = Параметры.ЗапретРедактированияКода;
	
	Если ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган Тогда
		ЭтаФорма.Заголовок = НСтр("ru = 'Платежные реквизиты налоговой инспекции'");
	ИначеЕсли ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ОрганПФР Тогда
		ЭтаФорма.Заголовок = НСтр("ru = 'Платежные реквизиты отделения ПФР'");
	ИначеЕсли ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ОрганФСС Тогда
		ЭтаФорма.Заголовок = НСтр("ru = 'Платежные реквизиты отделения ФСС'");
	Иначе
		ЭтаФорма.Заголовок = НСтр("ru = 'Платежные реквизиты'");
	КонецЕсли;
	
	Данные = ДанныеГосударственныхОрганов.ГосударственныйОрган(ВидГосударственногоОргана, КодГосударственногоОргана);
	
	ГосударственныйОрганБанк = Данные.ПлатежныеРеквизиты.Банк;
	ГосударственныйОрганБИК  = Данные.ПлатежныеРеквизиты.БИК;
	ГосударственныйОрганИНН  = Данные.ИНН;
	ГосударственныйОрганКПП  = Данные.КПП;
	ГосударственныйОрганНаименованиеКраткое = Данные.Наименование;
	ГосударственныйОрганНаименование    = Данные.ПолноеНаименование;
	ГосударственныйОрганРасчетныйСчет   = Данные.ПлатежныеРеквизиты.РасчетныйСчет;
	ГосударственныйОрганТекстПолучателя = Данные.ПлатежныеРеквизиты.ПолучательПлатежа;
	ТекущийКодГосударственногоОргана = КодГосударственногоОргана;
	
	Если Параметры.Свойство("НаименованиеГосударственногоОргана")
		И НЕ ЗначениеЗаполнено(ГосударственныйОрганНаименование) Тогда
		ГосударственныйОрганНаименование = Параметры.НаименованиеГосударственногоОргана;
	КонецЕсли;
	
	Если НЕ ПравоДоступа("Изменение", Метаданные.Справочники.Контрагенты) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы
&НаКлиенте
Процедура БИКБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОткрытьФормуВыбораБанка(Истина);
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ГосударственныйОрганБанк = ВыбранноеЗначение;
	ЗаполнитьДанныеБанка(ГосударственныйОрганБИК, ГосударственныйОрганБанк);
	
	Если ПустаяСтрока(ГосударственныйОрганБИК) Тогда
		
		ЭтаФорма.ТекущийЭлемент = Элементы.БИКБанка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка     = Ложь;
	ГосударственныйОрганБанк = Неопределено;
	ГосударственныйОрганБИК = "";
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	#Если ВебКлиент Тогда
		
		Если СтрДлина(Текст) > 9 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Введенное значение превышает допустимую длину БИК 9 символов!'");
			Сообщение.Сообщить();
			
			СтандартнаяОбработка = Ложь;
			
			Возврат;
			
		КонецЕсли;
		
	#КонецЕсли
	
	СписокНайденныхБанков = НайтиБанки(Текст, Элемент.Имя);
	Если ТипЗнч(СписокНайденныхБанков) = Тип("СписокЗначений") Тогда
		
		Если СписокНайденныхБанков.Количество() = 1 Тогда
			
			ОповеститьОбИзменении(Тип("СправочникСсылка.Банки"));
			
			ГосударственныйОрганБанк = СписокНайденныхБанков[0].Значение;
			ЗаполнитьДанныеБанка(ГосударственныйОрганБИК, ГосударственныйОрганБанк);
			
		ИначеЕсли СписокНайденныхБанков.Количество() > 1 Тогда
			
			ОповеститьОбИзменении(Тип("СправочникСсылка.Банки"));
			
			ОткрытьФормуВыбораБанка(Истина, СписокНайденныхБанков);
			
		Иначе
			
			ОткрытьФормуВыбораБанка(Истина);
			
		КонецЕсли;
		
	Иначе
		
		ЭтаФорма.ТекущийЭлемент = Элемент;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ЗаписатьДанныеОПлатежныхРеквизитах();
	
	Закрыть(Новый Структура("Код, Наименование, НаименованиеПолное", КодГосударственногоОргана, ГосударственныйОрганНаименованиеКраткое, ГосударственныйОрганНаименование));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет значения полей БИК.
//
&НаСервереБезКонтекста
Процедура ЗаполнитьДанныеБанка(Бик, Банк)
	
	Если НЕ ЗначениеЗаполнено(Банк) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Бик = Банк.Код;
	
КонецПроцедуры 

// Функция возвращает список значений с банком/банками подходящих условию поиска
// 
// В случае неудачи возвращает Неопределено или пустой список значений.
//
&НаКлиенте
Функция НайтиБанки(ТекстДляПоиска, Поле, Валютный = Ложь)
	
	Перем ТекстОшибки;
	
	ЭтоБанк = Истина;
	ГосударственныйОрганБанк = Неопределено;
	ГосударственныйОрганБИК = "";
	
	Если ПустаяСтрока(ТекстДляПоиска) Тогда
		
		ОчиститьСообщения();
		
		ТекстСообщения = НСтр("ru = 'Поле БИК заполнено не корректно.'"); 
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, Поле);
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	ОбластьПоиска = "Код";
	
	
	СписокНайденныхБанков = ПолучитьСписокБанковПоРеквизитам(ОбластьПоиска, ТекстДляПоиска);
	Если СписокНайденныхБанков.Количество() = 0 Тогда
		
		Если ОбластьПоиска = "Код" Тогда
			
			Если НЕ ПроверитьКорректностьБИК(ТекстДляПоиска, ТекстОшибки) Тогда
				
				ОчиститьСообщения();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, Поле);
				Возврат Неопределено;
				
			КонецЕсли;
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Банк с БИК ""%1"" не найден в справочнике банков'"), ТекстДляПоиска);
			
		ИначеЕсли ОбластьПоиска = "КоррСчет" Тогда
			
			Если НЕ ПроверитьКорректностьНомераСчета(ТекстДляПоиска, Валютный, ТекстОшибки) Тогда
				ОчиститьСообщения();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, Поле);
				Возврат Неопределено;
			КонецЕсли;
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Банк с корр. счетом ""%1"" не найден в справочнике банков'"), ТекстДляПоиска);
			
		КонецЕсли;
		
		// Сформируем варианты
		Кнопки	= Новый СписокЗначений;
		Кнопки.Добавить("Выбрать",     НСтр("ru = 'Выбрать из справочника'"));
		Кнопки.Добавить("Отменить",   НСтр("ru = 'Отменить ввод'"));
		
		// Обработка выбора
		ОписаниеОповещения = Новый ОписаниеОповещения("ОпределитьНеобходимостьВыбораБанкаИзСправочника", ЭтотОбъект, Новый Структура("ЭтоБанк", ЭтоБанк));
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки,, "Выбрать", НСтр("ru = 'Банк не найден'"));
		Возврат Неопределено;
		
		
	КонецЕсли;
	
	Возврат СписокНайденныхБанков;
	
КонецФункции // НайтиБанки()

&НаСервереБезКонтекста
Функция ПолучитьСписокБанковПоРеквизитам(Знач Поле, Знач Значение) Экспорт

	СписокБанков = Новый СписокЗначений;
	
	Если ПустаяСтрока(Значение) Тогда
	
		Возврат СписокБанков;
		
	КонецЕсли;
	
	ТаблицаБанков = Справочники.Банки.ПолучитьТаблицуБанковПоРеквизитам(Поле, Значение);
	
	СписокБанков.ЗагрузитьЗначения(ТаблицаБанков.ВыгрузитьКолонку("Ссылка"));
	
	Возврат СписокБанков;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПроверитьКорректностьНомераСчета(Номер, ВалютныйСчет = Ложь, ТекстОшибки = "")

	Результат = Истина;
	
	Если ПустаяСтрока(Номер) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ТекстОшибки = "";
	Если НЕ ВалютныйСчет И СтрДлина(Номер) <> 20 Тогда
		
		ТекстОшибки = НСтр("ru = 'Возможно номер счета указан не полностью'");
		Результат = Ложь;
		
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Номер) Тогда
		
		ТекстОшибки = ТекстОшибки + ?(ПустаяСтрока(ТекстОшибки), "", " ") +
			НСтр("ru = 'В номере банковского счета присутствуют не только цифры.
				|Возможно, номер указан неверно'");
		Результат = Ложь;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПроверитьКорректностьБИК(БИК, ТекстОшибки = "")
	
	Если ПустаяСтрока(БИК) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ТекстОшибки = "";
	Если СтрДлина(БИК) <> 9 Тогда
		
		ТекстОшибки = НСтр("ru = 'По указанному БИК банк не найден. Возможно БИК указан не полностью.'");
		
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(БИК) Тогда
		
		ТекстОшибки = ТекстОшибки + ?(ПустаяСтрока(ТекстОшибки), "", " ") +
			НСтр("ru = 'В составе БИК банка должны быть только цифры'");
		
	ИначеЕсли НЕ Лев(БИК, 2) = "04" Тогда
		
		ТекстОшибки = ТекстОшибки + ?(ПустаяСтрока(ТекстОшибки), "", " ") +
			НСтр("ru = 'Первые 2 цифры БИК банка должны быть ""04""'");
		
	КонецЕсли;
	
	Возврат ПустаяСтрока(ТекстОшибки);
	
КонецФункции

// Процедура открывает форму списка банков для ручного выбора
//
&НаКлиенте
Процедура ОткрытьФормуВыбораБанка(ЭтоБанк, СписокНайденныхБанков = Неопределено)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтрока", ГосударственныйОрганБанк);
	ПараметрыФормы.Вставить("ПараметрВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("МножественныхВыбор", Ложь);
	
	Если СписокНайденныхБанков <> Неопределено Тогда
		
		ПараметрыФормы.Вставить("СписокНайденныхБанков", СписокНайденныхБанков);
		
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Банки.ФормаВыбора", ПараметрыФормы, Элементы.БИКБанка);
	
КонецПроцедуры // ОткрытьФормуВыбораБанка()

&НаСервере
Процедура ЗаписатьДанныеОПлатежныхРеквизитах();
	
	ГосударственныйОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(ВидГосударственногоОргана, ?(ПустаяСтрока(ТекущийКодГосударственногоОргана), КодГосударственногоОргана, ТекущийКодГосударственногоОргана));
	ГосударственныйОрган.Вид = ВидГосударственногоОргана;
	ГосударственныйОрган.Код = КодГосударственногоОргана;
	ГосударственныйОрган.ПолноеНаименование = ГосударственныйОрганНаименование;
	ГосударственныйОрган.ИНН = ГосударственныйОрганИНН;
	ГосударственныйОрган.КПП = ГосударственныйОрганКПП;
	ГосударственныйОрган.Наименование = ?(ПустаяСтрока(ГосударственныйОрганНаименованиеКраткое), ГосударственныйОрганНаименование, ГосударственныйОрганНаименованиеКраткое);
	ГосударственныйОрган.ПлатежныеРеквизиты.ПолучательПлатежа = ГосударственныйОрганТекстПолучателя;
	ГосударственныйОрган.ПлатежныеРеквизиты.РасчетныйСчет = ГосударственныйОрганРасчетныйСчет;
	ГосударственныйОрган.ПлатежныеРеквизиты.КоррСчет = "";
	ГосударственныйОрган.ПлатежныеРеквизиты.БИК = ГосударственныйОрганБИК;
	
	ДанныеГосударственныхОрганов.ОбновитьДанныеГосударственногоОргана(ГосударственныйОрган);
	
КонецПроцедуры


#КонецОбласти

