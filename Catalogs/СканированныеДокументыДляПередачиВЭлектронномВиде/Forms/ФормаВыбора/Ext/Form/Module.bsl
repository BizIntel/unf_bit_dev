
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
		
	ОтборВидДокумента = Параметры.ВидДокумента;
	ОтборОрганизация = Параметры.Организация;
	
	ЗаполнитьСпискиВыбора();
	ПодготовитьФормуНаСервере();
	
	// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		
		ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
		
		МодульОбработкаНовостей = ОбщегоНазначения.ОбщийМодуль("ОбработкаНовостей");
		
		МодульОбработкаНовостей.КонтекстныеНовости_ПриСозданииНаСервере(
			ЭтаФорма,
			"БП.Справочник.СканированныеДокумДляПередачиВЭлВиде",
			"ФормаВыбора",
			,
			НСтр("ru='Новости: Сканированные документы для передачи в электронном виде'"),
			Ложь,
			Новый Структура("ПолучатьНовостиНаСервере, ХранитьМассивНовостейТолькоНаСервере", Истина, Ложь),
			ИдентификаторыСобытийПриОткрытии);
		
	КонецЕсли;
	// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтаФорма);
		
	КонецЕсли;
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись сканированного документа" Тогда
		ОбновитьТаблицуДокументов();	
	КонецЕсли;
	
	// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
		
	КонецЕсли;
	// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока = Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПоказатьЗначение(, ТекущаяСтрока.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидДокументаПриИзменении(Элемент)
	
	ЗаполнитьТаблицуДокументов();
	
КонецПроцедуры                   

&НаКлиенте
Процедура ТаблицаДокументовПередНачаломИзменения(Элемент, Отказ)
	
	
	ТекущаяСтрока = Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		Если Элемент.ТекущийЭлемент.Имя <> "ТаблицаДокументовВыбрать" Тогда
			Отказ = Истина;
			ПоказатьЗначение(, ТекущаяСтрока.Ссылка);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	МассивВозврата = Новый Массив;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Выбрать", Истина);
	
	СтрокиТаблицы = ТаблицаДокументов.НайтиСтроки(СтруктураОтбора);
	
	Если СтрокиТаблицы.Количество() = 0 Тогда
		ПоказатьПредупреждение(, "Действие отменено. Не выбрано ни одного документа");
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из СтрокиТаблицы Цикл
		СтруктураРезультат = Новый Структура("СсылкаДокументИБ, ВидДокумента", Строка.Ссылка, Строка.ВидДокумента);
		МассивВозврата.Добавить(СтруктураРезультат)
	КонецЦикла;
	
	ОповеститьОВыборе(МассивВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсеСтроки(Команда)
	
	Для каждого СтрокаКоллекции Из ТаблицаДокументов Цикл
		Если НЕ СтрокаКоллекции.Выбрать Тогда
			СтрокаКоллекции.Выбрать = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкуСоВсехСтрок(Команда)
	
	Для Каждого Строка Из ТаблицаДокументов Цикл
		Если Строка.Выбрать Тогда
			Строка.Выбрать = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериода(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = Период;
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборПериодаЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	ТекущаяСтрока = Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПоказатьЗначение(, ТекущаяСтрока.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьТаблицуДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ЗагрузитьИзВнешнегоИсточника();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьЭлемент(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация", ОтборОрганизация);
	СтруктураПараметров.Вставить("ВидДокумента", ОтборВидДокумента);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", СтруктураПараметров);
	ОткрытьФорму("Справочник.СканированныеДокументыДляПередачиВЭлектронномВиде.ФормаОбъекта", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдаление(Команда)
	ТекущаяСтрока = Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПометитьНаУдалениеНаСервере(ТекущаяСтрока.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КопироватьЭлемент(Команда)
	
	ТекущаяСтрока = Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ЗначениеКопирования", ТекущаяСтрока.Ссылка);
		ОткрытьФорму("Справочник.СканированныеДокументыДляПередачиВЭлектронномВиде.ФормаОбъекта", СтруктураПараметров);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыборПериодаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт

	Если РезультатВыбора <> Неопределено Тогда
		Период = РезультатВыбора;
		ОбновитьТаблицуДокументов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиВыбора()
	
	МассивВидыДокументовСкан = Новый Массив;
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.СчетФактура);
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.КорректировочныйСчетФактура);
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.ТоварноТранспортнаяНакладная);
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.ГрузоваяТаможеннаяДекларация);
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.ДобавочныйЛистГрузовойТаможеннойДекларации);
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.СпецификацияЦены);
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.ТоварнаяНакладнаяТОРГ12);
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.ДополнениеКДоговору);
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.Договор);        
	МассивВидыДокументовСкан.Добавить(Перечисления.ВидыПредставляемыхДокументов.ОтчетНИОКР);        
	
	Элементы.ОтборВидДокумента.СписокВыбора.ЗагрузитьЗначения(МассивВидыДокументовСкан);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ЗаполнитьТаблицуДокументов();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДокументов()
	
	НуженОтборПОВидуДокумента = ЗначениеЗаполнено(ОтборВидДокумента);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	СканированныеДокументыДляПередачиВЭлектронномВиде.Ссылка,
	|	СканированныеДокументыДляПередачиВЭлектронномВиде.ПометкаУдаления,
	|	СканированныеДокументыДляПередачиВЭлектронномВиде.Организация,
	|	СканированныеДокументыДляПередачиВЭлектронномВиде.ВидДокумента,
	|	СканированныеДокументыДляПередачиВЭлектронномВиде.ДатаДокумента,
	|	СканированныеДокументыДляПередачиВЭлектронномВиде.НомерДокумента,
	|	СканированныеДокументыДляПередачиВЭлектронномВиде.СуммаВсего
	|ИЗ
	|	Справочник.СканированныеДокументыДляПередачиВЭлектронномВиде КАК СканированныеДокументыДляПередачиВЭлектронномВиде
	|ГДЕ
	|	СканированныеДокументыДляПередачиВЭлектронномВиде.Организация = &Организация
	|	" + ?(НуженОтборПОВидуДокумента, "И СканированныеДокументыДляПередачиВЭлектронномВиде.ВидДокумента = &ВидДокумента", "") + "
	|	И СканированныеДокументыДляПередачиВЭлектронномВиде.ДатаДокумента МЕЖДУ &НачПериода И &КонПериода";
	Если НуженОтборПОВидуДокумента Тогда
		Запрос.УстановитьПараметр("ВидДокумента", ОтборВидДокумента);
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация",  ОтборОрганизация);
	Запрос.УстановитьПараметр("НачПериода",   Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонПериода",   ?(ЗначениеЗаполнено(Период.ДатаОкончания), Период.ДатаОкончания, ТекущаяДатаСеанса()));
	
	Результат = Запрос.Выполнить().Выбрать();
	
	ТаблицаДокументов.Очистить();
	
	Пока Результат.Следующий() Цикл
		
		СтрокаТаблицы = ТаблицаДокументов.Добавить();
		СтрокаТаблицы.Ссылка      			= Результат.Ссылка;
		СтрокаТаблицы.НомерДокумента      	= Результат.НомерДокумента;
		СтрокаТаблицы.ДатаДокумента       	= Результат.ДатаДокумента;
		СтрокаТаблицы.Организация         	= Результат.Организация;
		СтрокаТаблицы.ВидДокумента 			= Результат.ВидДокумента;
		СтрокаТаблицы.СуммаВсего 			= Результат.СуммаВсего;
		СтрокаТаблицы.ПометкаНаУдаление		= ?(Результат.ПометкаУдаления, 4, 3);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция  ПолучитьТекущиеРеквизитыВыбора()
	
	Результат = Новый Структура("ТекущаяСсылка, МассивОтмеченныхСсылок");
	ТекущаяСтрока = Элементы.ТаблицаДокументов.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекущаяСсылка = ТаблицаДокументов.НайтиПоИдентификатору(ТекущаяСтрока).Ссылка;
	Иначе
		ТекущаяСсылка = Неопределено;
	КонецЕсли;
	
	МассивОтмеченныхСсылок = Новый Массив;
	
	МассивОтмеченныхСсылок = Новый Массив;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Выбрать", Истина);
	
	СтрокиТаблицы = ТаблицаДокументов.НайтиСтроки(СтруктураОтбора);
	Для Каждого Строка Из СтрокиТаблицы Цикл
		МассивОтмеченныхСсылок.Добавить(Строка.Ссылка)
	КонецЦикла;
	
	Результат.Вставить("ТекущаяСсылка", ТекущаяСсылка);
	Результат.Вставить("МассивОтмеченныхСсылок", МассивОтмеченныхСсылок);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьРеквизитыВыбора(РеквизитыВыбора)
	
	//установим текущую строку
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Ссылка", РеквизитыВыбора.ТекущаяСсылка);

	МассивСтрок = ТаблицаДокументов.НайтиСтроки(СтруктураОтбора);
	Если МассивСтрок.Количество() > 0 Тогда
		ДанныеТекущейСтроки = МассивСтрок[0];
	    Элементы.ТаблицаДокументов.ТекущаяСтрока = ДанныеТекущейСтроки.ПолучитьИдентификатор();
	КонецЕсли;
	
	//восстановим отмеченные строки по ссылкам
	МассивОтмеченныхСсылок = РеквизитыВыбора.МассивОтмеченныхСсылок;
	Для каждого СтрокаКоллекции Из ТаблицаДокументов Цикл
		Если МассивОтмеченныхСсылок.Найти(СтрокаКоллекции.Ссылка) <> Неопределено Тогда
			СтрокаКоллекции.Выбрать = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуДокументов()
	
	ТекущиеРеквизитыВыбора = ПолучитьТекущиеРеквизитыВыбора();
	ЗаполнитьТаблицуДокументов();
	УстановитьРеквизитыВыбора(ТекущиеРеквизитыВыбора);
	
КонецПроцедуры

&НаСервере
Функция ОтработатьРезультатНаСервере(СтруктураРезультата)
	
	МассивСсылокДобавленныхФайлов = Справочники.СканированныеДокументыДляПередачиВЭлектронномВиде.ЗагрузитьИзВнешнегоИсточникаПоСтруктуреРезультатаВыбора(СтруктураРезультата);
	
	Если МассивСсылокДобавленныхФайлов <> Неопределено Тогда
		ОбновитьТаблицуДокументов();
		Для каждого СтрокаКоллекции Из ТаблицаДокументов Цикл
			ИндексНайденнойСсылки = МассивСсылокДобавленныхФайлов.Найти(СтрокаКоллекции.Ссылка);
			Если ИндексНайденнойСсылки <> Неопределено Тогда
				МассивСсылокДобавленныхФайлов.Удалить(ИндексНайденнойСсылки);
				СтрокаКоллекции.Выбрать = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если МассивСсылокДобавленныхФайлов.Количество() <> 0 Тогда
			РегламентированнаяОтчетностьКлиентСервер.СообщитьПользователю("Некоторые из добавленных документов не попали в список из-за текущих фильтров");
		КонецЕсли;
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ЗагрузитьИзВнешнегоИсточника()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИдентификаторФормыВладельца", УникальныйИдентификатор);
	
	//Описание оповещения
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзВнешнегоИсточникаЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.СканированныеДокументыДляПередачиВЭлектронномВиде.Форма.ФормаЗагрузкаДокументовИзФайлаОбмена", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзВнешнегоИсточникаЗавершение(СтуктураРезультат, ДополнительныеПараметры) Экспорт
	
	Если СтуктураРезультат <> Неопределено Тогда
		Если ОтработатьРезультатНаСервере(СтуктураРезультат) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Выбранные документы успешно загружены.'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеНаСервере(СканСсылка)
	
	СканОбъект = СканСсылка.ПолучитьОбъект();
	СканОбъект.УстановитьПометкуУдаления(НЕ СканСсылка.ПометкаУдаления);
	ОбновитьТаблицуДокументов();
	
КонецПроцедуры

#КонецОбласти


#Область Новости

&НаКлиенте
// Процедура показывает новости, требующие прочтения (важные и очень важные)
//
// Параметры:
//  Нет
//
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтаФорма, ИдентификаторыСобытийПриОткрытии);
		
	КонецЕсли;
	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыНовости(Команда)

	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(ЭтаФорма, Команда);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
