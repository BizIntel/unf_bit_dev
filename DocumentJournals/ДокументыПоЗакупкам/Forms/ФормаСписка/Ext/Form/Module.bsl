
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установим формат для текущей даты: ДФ=Ч:мм
	УправлениеНебольшойФирмойСервер.УстановитьОформлениеКолонкиДата(Список);
	
	//УНФ.ОтборыСписка
	ЗаполнитьВидыОпераций();
	Если Параметры.Свойство("ЭтоНачальнаяСтраница") Тогда
		РаботаСОтборами.ВосстановитьНастройкиОтборов(ЭтотОбъект, Список);
		ЭтоНачальнаяСтраница = Ложь;
	Иначе
		ЭтоНачальнаяСтраница = Истина;
		РаботаСОтборами.СвернутьРазвернутьОтборыНаСервере(ЭтотОбъект, Ложь);
		ПредставлениеПериода = РаботаСОтборамиКлиентСервер.ОбновитьПредставлениеПериода(Неопределено);
	КонецЕсли;
	//Конец УНФ.ОтборыСписка
	
	// УНФ.ПанельКонтактнойИнформации
	КонтактнаяИнформацияПанельУНФ.ПриСозданииНаСервере(ЭтотОбъект, "КонтактнаяИнформация");
	// Конец УНФ.ПанельКонтактнойИнформации
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если НЕ ЗавершениеРаботы Тогда
		//УНФ.ОтборыСписка
		СохранитьНастройкиОтборов();
		//Конец УНФ.ОтборыСписка
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// УНФ.ПанельКонтактнойИнформации
	Если КонтактнаяИнформацияПанельУНФКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьПанельКонтактнойИнформацииСервер();
	КонецЕсли;
	// Конец УНФ.ПанельКонтактнойИнформации
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОтборТипЗаказСчет = Настройки.Получить("ОтборТипЗаказСчет");
	ОтборТипНакладные = Настройки.Получить("ОтборТипНакладные");
	ОтборТипДопРасходы	 = Настройки.Получить("ОтборТипДопРасходы");
	ОтборТипСчетаФактуры = Настройки.Получить("ОтборТипСчетаФактуры");
	
	УстановитьОтборПоТипуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ТипЗнч(Элемент.ТекущаяСтрока) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		
		КонтрагентАктивнойСтроки = ?(Элемент.ТекущиеДанные = Неопределено, Неопределено, Элемент.ТекущиеДанные.Контрагент);
		Если КонтрагентАктивнойСтроки <> ТекущийКонтрагент Тогда
		
			ТекущийКонтрагент = КонтрагентАктивнойСтроки;
			ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиСписка", 0.2, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДокументаПриИзменении(Элемент)
	
	УстановитьОтборПоТипуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Контрагент", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("ВидОперации", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОтветственныйОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Ответственный", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Организация", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметр) Тогда
		возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	СтруктураПараметров = Новый Структура();
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Контрагент");
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "ВидОперации");
	РаботаСФормойДокументаКлиент.ДобавитьПоследнееЗначениеОтбораПоля(ДанныеМеток, СтруктураПараметров, "Организация");
		
	ИмяФормыСтрока = РаботаСФормойДокументаКлиент.ПолучитьИмяДокументаПоТипу(Параметр);
	ОткрытьФорму("Документ."+ИмяФормыСтрока+".ФормаОбъекта", Новый Структура("ЗначенияЗаполнения",СтруктураПараметров));

КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыВыбора = Новый Структура("ДеревоВидовОпераций", ДеревоВидовОпераций);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбораВидаОперацииЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборВидаОперации", ПараметрыВыбора, ЭтотОбъект,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбораВидаОперацииЗавершение(Результат, ДополнительныеПараметры) Экспорт

	ОтборОперацияОбработкаВыбора(Элементы.ОтборОперация, Результат, Ложь);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПоШаблону(Команда)
	
	ИсключитьТипы = Новый Массив;
	ИсключитьТипы.Добавить(Тип("ДокументСсылка.СчетФактураПолученный"));
	ИсключитьТипы.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
	
	ЗаполнениеОбъектовУНФКлиент.ПоказатьВыборШаблонаДляСозданияДокументаИзСписка(Список, Элементы.Список.ТекущаяСтрока, ИсключитьТипы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьВидыОпераций()
	
	СписокОпераций = ДеревоВидовОпераций.ПолучитьЭлементы().Добавить();
	СписокОпераций.ВидОперации = "Заказ поставщику";
	Для каждого ВидОперации Из Метаданные.Перечисления.ВидыОперацийЗаказПоставщику.ЗначенияПеречисления Цикл
		НоваяОперация = СписокОпераций.ПолучитьЭлементы().Добавить();
		НоваяОперация.ВидОперации = Перечисления.ВидыОперацийЗаказПоставщику[ВидОперации.Имя];
	КонецЦикла;
	
	СписокОпераций = ДеревоВидовОпераций.ПолучитьЭлементы().Добавить();
	СписокОпераций.ВидОперации = "Приходная накладная";
	Для каждого ВидОперации Из Метаданные.Перечисления.ВидыОперацийПриходнаяНакладная.ЗначенияПеречисления Цикл
		НоваяОперация = СписокОпераций.ПолучитьЭлементы().Добавить();
		НоваяОперация.ВидОперации = Перечисления.ВидыОперацийПриходнаяНакладная[ВидОперации.Имя];
	КонецЦикла;
	
	СписокОпераций = ДеревоВидовОпераций.ПолучитьЭлементы().Добавить();
	СписокОпераций.ВидОперации = "Счет-фактура (полученный)";
	Для каждого ВидОперации Из Метаданные.Перечисления.ВидыОперацийСчетФактураПолученный.ЗначенияПеречисления Цикл
		НоваяОперация = СписокОпераций.ПолучитьЭлементы().Добавить();
		НоваяОперация.ВидОперации = Перечисления.ВидыОперацийСчетФактураПолученный[ВидОперации.Имя];
	КонецЦикла;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКорректировкиПоступлений") Тогда
		СписокОпераций = ДеревоВидовОпераций.ПолучитьЭлементы().Добавить();
		СписокОпераций.ВидОперации = "Корректировка поступления / реализации";
		Для каждого ВидОперации Из Метаданные.Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ЗначенияПеречисления Цикл
			НоваяОперация = СписокОпераций.ПолучитьЭлементы().Добавить();
			НоваяОперация.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации[ВидОперации.Имя];
		КонецЦикла;
	КонецЕсли; 
	
	ДеревоОпераций = РеквизитФормыВЗначение("ДеревоВидовОпераций");
	РаботаСФормойДокумента.УдалитьНедоступныеВидыОперацийДокументов(ДеревоОпераций);
	ЗначениеВРеквизитФормы(ДеревоОпераций, "ДеревоВидовОпераций");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоТипуДокумента()
	
	МассивОтбора = Новый Массив;
	Если ОтборТипЗаказСчет Тогда
		МассивОтбора.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
		МассивОтбора.Добавить(Тип("ДокументСсылка.СчетНаОплатуПоставщика"));
	КонецЕсли;
	Если ОтборТипНакладные Тогда
		МассивОтбора.Добавить(Тип("ДокументСсылка.ПриходнаяНакладная"));
		МассивОтбора.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
	КонецЕсли;
	Если ОтборТипДопРасходы Тогда
		МассивОтбора.Добавить(Тип("ДокументСсылка.ДополнительныеРасходы"));
	КонецЕсли;
	Если ОтборТипСчетаФактуры Тогда
		МассивОтбора.Добавить(Тип("ДокументСсылка.СчетФактураПолученный"));
	КонецЕсли;
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(Список, "Тип", МассивОтбора, ЗначениеЗаполнено(МассивОтбора));
	
КонецПроцедуры

// Обрабатывает событие активизации строки списка документов.
//
&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиСписка()
	
	ОбновитьПанельКонтактнойИнформацииСервер();
	
КонецПроцедуры

#КонецОбласти

#Область МеткиОтборов

&НаСервере
Процедура УстановитьМеткуИОтборСписка(ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения="")
	
	Если ПредставлениеЗначения="" Тогда
		ПредставлениеЗначения=Строка(ВыбранноеЗначение);
	КонецЕсли; 
	
	РаботаСОтборами.ПрикрепитьМеткуОтбора(ЭтотОбъект, ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения);
	РаботаСОтборами.УстановитьОтборСписка(ЭтотОбъект, Список, ИмяПоляОтбораСписка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_МеткаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МеткаИД = Сред(Элемент.Имя, СтрДлина("Метка_")+1);
	УдалитьМеткуОтбора(МеткаИД);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьМеткуОтбора(МеткаИД)
	
	РаботаСОтборами.УдалитьМеткуОтбораСервер(ЭтотОбъект, Список, МеткаИД);

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСОтборамиКлиент.ПредставлениеПериодаВыбратьПериод(ЭтотОбъект, "Список", "Дата");
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОтборов()
	
	Если НЕ ЭтоНачальнаяСтраница Тогда
		РаботаСОтборами.СохранитьНастройкиОтборов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьПанельОтборов(Элемент)
	
	НовоеЗначениеВидимость = НЕ Элементы.ФильтрыНастройкиИДопИнфо.Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость);
		
КонецПроцедуры

#КонецОбласти

#Область ПанельКонтактнойИнформации

// УНФ.ПанельКонтактнойИнформации
&НаСервере
Процедура ОбновитьПанельКонтактнойИнформацииСервер()
	
	КонтактнаяИнформацияПанельУНФ.ОбновитьДанныеПанели(ЭтотОбъект, ТекущийКонтрагент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ДанныеПанелиКонтактнойИнформацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	КонтактнаяИнформацияПанельУНФКлиент.ДанныеПанелиКонтактнойИнформацииВыбор(ЭтотОбъект, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ДанныеПанелиКонтактнойИнформацииПриАктивизацииСтроки(Элемент)
	
	КонтактнаяИнформацияПанельУНФКлиент.ДанныеПанелиКонтактнойИнформацииПриАктивизацииСтроки(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ДанныеПанелиКонтактнойИнформацииВыполнитьКоманду(Команда)
	
	КонтактнаяИнформацияПанельУНФКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры
// Конец УНФ.ПанельКонтактнойИнформации

#КонецОбласти
