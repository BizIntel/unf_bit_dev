
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Показатель", Показатель);
	Параметры.Свойство("Ресурс", Ресурс);
	Параметры.Свойство("Представление", Представление);
	Параметры.Свойство("Фильтры", Фильтры);
	Если Фильтры=Неопределено Тогда
		Фильтры = Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли; 
	Параметры.Свойство("Настройки", Настройки);
	Если Настройки=Неопределено Тогда
		Настройки = Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли; 
	
	Если Параметры.Свойство("ИдентификаторСтроки") Тогда
		ИдентификаторСтроки = Параметры.ИдентификаторСтроки;
		Заголовок = НСтр("ru = 'Настройка показателя'");
	Иначе
		ИдентификаторСтроки = -1;
		Заголовок = НСтр("ru = 'Добавление показателя'");
	КонецЕсли; 
	
	Если Параметры.Свойство("АдресНастроекПоказателей") И ЭтоАдресВременногоХранилища(Параметры.АдресНастроекПоказателей) Тогда
		НастройкиПоказателей.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресНастроекПоказателей));
	КонецЕсли; 
	
	Таб = НастройкиПоказателей.Выгрузить(, "Показатель, Представление");
	Таб.Свернуть("Показатель, Представление");
	Элементы.Показатель.СписокВыбора.Очистить();
	Для каждого Стр Из Таб Цикл
		Элементы.Показатель.СписокВыбора.Добавить(Стр.Показатель, Стр.Представление);
	КонецЦикла;
	
	УстановитьВидимостьПолейНастроек();
	Если ЗначениеЗаполнено(Показатель) И ЗначениеЗаполнено(Ресурс) Тогда
		ОбновитьПараметрыКомпоновщика();
	КонецЕсли; 
	
	Если НЕ ИдентификаторСтроки=-1 Тогда
		ОбновитьОтображениеОтметокФильтров();
		ОбновитьОтображениеНастроек();
		ТекущийЭлемент = Элементы.Ресурс;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьСписокВыбораРесурсы();
	// Обновление значений после заполнения списка выбора;
	Ресурс = Ресурс;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если НЕ ТипЗнч(ВыбранноеЗначение)=Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	Значение = ВыбранноеЗначение.Значение;
	
	Если ВыбранноеЗначение.Событие="ДобавлениеОтбора" Тогда
		ОбъединитьФильтрыСервер(ВыбранноеЗначение);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПоказательПриИзменении(Элемент)
	
	ЗаполнитьСписокВыбораРесурсы();
	Если НЕ ЗначениеЗаполнено(Ресурс) И Элементы.Ресурс.СписокВыбора.Количество()>0 Тогда
		Ресурс = Элементы.Ресурс.СписокВыбора[0].Значение;
	КонецЕсли;
	ПриИзмененииПоказателяРесурсаСервер();
	СформироватьПредставление();
	
КонецПроцедуры

&НаКлиенте
Процедура РесурсПриИзменении(Элемент)
	
	ПриИзмененииПоказателяРесурсаСервер();
	СформироватьПредставление();
	
КонецПроцедуры

#Область ОтметкиФильтров

&НаКлиенте
Процедура Подключаемый_УдалитьФильтрНажатие(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИмяКнопки = Элемент.Имя;
	Стр = СтрокаНаложенногоФильтра(ИмяКнопки);
	Если Стр=Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	УдалитьФильтр(Стр);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФильтр(СтрНаложенногоФильтра)
	
	МассивКУдалению = Новый Массив;
	МассивФильтров = Новый Массив(Фильтры);
	Для каждого Фильтр Из МассивФильтров Цикл
		Если НЕ СтрНаложенногоФильтра.Поле=Фильтр.Поле Тогда
			Продолжить;
		КонецЕсли;
		Если ТипЗнч(Фильтр.Значение)=Тип("СписокЗначений") Тогда
			Элемент = Фильтр.Значение.НайтиПоЗначению(СтрНаложенногоФильтра.Значение);
			Если НЕ Элемент=Неопределено Тогда
				Фильтр.Значение.Удалить(Элемент);
			КонецЕсли; 
			Если Фильтр.Значение.Количество()=0 Тогда
				МассивКУдалению.Добавить(Фильтр);
			КонецЕсли;
		ИначеЕсли ТипЗнч(Фильтр.Значение)=Тип("Дата") Тогда
			МассивКУдалению.Добавить(Фильтр);
		ИначеЕсли ТипЗнч(Фильтр.Значение)=Тип("Число") Тогда
			МассивКУдалению.Добавить(Фильтр);
		ИначеЕсли Фильтр.Значение=СтрНаложенногоФильтра.Значение Тогда 
			МассивКУдалению.Добавить(Фильтр);
		КонецЕсли; 
	КонецЦикла; 
	
	Для каждого Фильтр Из МассивКУдалению Цикл
		МассивФильтров.Удалить(МассивФильтров.Найти(Фильтр));
	КонецЦикла; 
	
	Фильтры = Новый ФиксированныйМассив(МассивФильтров);
	
	ОбновитьОтображениеОтметокФильтров();
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьНастройку(Команда)
	
	Если ПустаяСтрока(СокрЛП(Представление)) 
		ИЛИ (НЕ ЗначениеЗаполнено(Показатель) 
		ИЛИ НЕ ЗначениеЗаполнено(Ресурс)) 
		И Элементы.ГруппаНастройки.Видимость Тогда
		Возврат;
	КонецЕсли; 
	
	Результат = Новый Структура;
	Результат.Вставить("Событие", "НастройкаПоказателя");
	Если ИдентификаторСтроки>=0 Тогда
		Результат.Вставить("ИдентификаторСтроки", ИдентификаторСтроки);
	КонецЕсли;
	Результат.Вставить("Показатель", Показатель);
	Результат.Вставить("Ресурс", Ресурс);
	Результат.Вставить("Представление", Представление);
	Результат.Вставить("Фильтры", Фильтры);
	Если ТипЗнч(Настройки)=Тип("ФиксированныйМассив") Тогда
		Для каждого Элемент Из Настройки Цикл
			Элемент.Значение = ЭтаФорма[Элемент.Имя];
		КонецЦикла; 
	КонецЕсли; 
	Результат.Вставить("Настройки", Настройки);
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьНастройку(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФильтр(Команда)
	
	СтруктураОткрытия = Новый Структура;
	СтруктураОткрытия.Вставить("АдресСхемы", АдресСхемы);
	СтруктураОткрытия.Вставить("Фильтры", Фильтры);
	ОткрытьФорму("Обработка.ПульсБизнеса.Форма.ФормаДобавленияФильтра", СтруктураОткрытия, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСписокВыбораРесурсы()
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Показатель", Показатель);
	Строки = НастройкиПоказателей.НайтиСтроки(СтруктураОтбора);
	Элементы.Ресурс.СписокВыбора.Очистить();
	Для каждого Стр Из Строки Цикл
		Элементы.Ресурс.СписокВыбора.Добавить(Стр.Ресурс, Стр.ПредставлениеРесурса);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПоказателяРесурсаСервер()
	
	Фильтры = Новый ФиксированныйМассив(Новый Массив);
	Настройки = Новый ФиксированныйМассив(Новый Массив);
	ОбновитьПараметрыКомпоновщика();
	ОбновитьОтображениеОтметокФильтров();
	ОбновитьОтображениеНастроек();
	УстановитьВидимостьПолейНастроек();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПолейНастроек()
	
	Элементы.Показатель.Доступность = ИдентификаторСтроки<0;
	Элементы.Ресурс.Видимость = ЗначениеЗаполнено(Показатель);
	Элементы.ДобавитьФильтр.Видимость = ЗначениеЗаполнено(Показатель) И ЗначениеЗаполнено(Ресурс);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыКомпоновщика()
	
	Если ПустаяСтрока(Показатель) ИЛИ ПустаяСтрока(Ресурс) Тогда
		Возврат;
	КонецЕсли;
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Показатель", Показатель);
	СтруктураОтбора.Вставить("Ресурс", Ресурс);
	СтрокиПоказателей = НастройкиПоказателей.НайтиСтроки(СтруктураОтбора);
	Если СтрокиПоказателей.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	ИмяМакета = СтрокиПоказателей[0].ИмяМакета;
	РежимОстатка = СтрокиПоказателей[0].Остаток;
	
	Если Метаданные.Обработки.ПульсБизнеса.Макеты.Найти(ИмяМакета)=Неопределено Тогда
		Возврат;
	КонецЕсли; 
	СхемаКомпоновкиДанных = Обработки.ПульсБизнеса.ПолучитьМакет(ИмяМакета);
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	Компоновщик.Инициализировать(ИсточникНастроек);
	Компоновщик.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	МассивНастроек = Новый Массив(Настройки);
	МассивНастроек.Очистить();
	Настройки = Новый ФиксированныйМассив(МассивНастроек);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПредставление()
	
	Представление = "";
	ЭлементРесурс = Элементы.Ресурс.СписокВыбора.НайтиПоЗначению(Ресурс);
	Если НЕ ЭлементРесурс=Неопределено Тогда
		Представление = Представление+ЭлементРесурс.Представление;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ОбъединитьФильтрыСервер(ВыбранноеЗначение)
	
	МассивФильтров = Новый Массив(Фильтры);
	ДоступноеПоле = Компоновщик.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных(ВыбранноеЗначение.Поле));
	
	Обработки.ПульсБизнеса.ОбъединитьФильтры(МассивФильтров, 
	ВыбранноеЗначение.Поле, 
	ВыбранноеЗначение.ВидСравнения, 
	ВыбранноеЗначение.Значение, 
	?(ДоступноеПоле=Неопределено, "", ДоступноеПоле.Заголовок));
	
	Фильтры = Новый ФиксированныйМассив(МассивФильтров);
	ОбновитьОтображениеОтметокФильтров();
	
КонецПроцедуры 

#Область НаложеныеФильтры

&НаСервере
Процедура ЗаполнитьТаблицуНаложенныхФильтров()
	
	НаложенныеФильтры.Очистить();
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Показатель", Показатель);
	СтруктураОтбора.Вставить("Ресурс", Ресурс);
	Строки = НастройкиПоказателей.НайтиСтроки(СтруктураОтбора);
	
	Если Строки.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	ИмяМакета = Строки[0].ИмяМакета;
	Если Метаданные.Обработки.ПульсБизнеса.Макеты.Найти(ИмяМакета)=Неопределено Тогда
		Возврат;
	КонецЕсли; 
	СхемаКД = Обработки.ПульсБизнеса.ПолучитьМакет(ИмяМакета);
	
	Для каждого ЭлементОтбор Из Фильтры Цикл
		
		Если НЕ ЭлементОтбор.Свойство("Представление") Тогда
			ЭлементОтбор.Вставить("Представление", "");
		КонецЕсли; 
		Если НЕ ЭлементОтбор.Свойство("ВидСравнения") Тогда
			ЭлементОтбор.Вставить("ВидСравнения", Неопределено);
		КонецЕсли; 
		
		ИмяПоля = ЭлементОтбор.Поле;
		ДоступноеПоле = Компоновщик.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных(ИмяПоля));
		
		Если ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.БольшеИлиРавно 
				ИЛИ ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.Больше
				ИЛИ ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.МеньшеИлиРавно
				ИЛИ ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.Меньше Тогда
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Поле", ИмяПоля);
			СтрокиФильтров = НаложенныеФильтры.НайтиСтроки(СтруктураОтбора);
			Если СтрокиФильтров.Количество()=0 Тогда
				Стр = НаложенныеФильтры.Добавить();
				Если ДоступноеПоле.ТипЗначения.СодержитТип(Тип("Дата")) Тогда
					Стр.Значение = Новый СтандартныйПериод;
				Иначе
					Стр.Значение = Новый Структура("ЗначениеОт,ЗначениеДо",0,0);
				КонецЕсли; 
			Иначе
				Стр = СтрокиФильтров[0];
			КонецЕсли;
		Иначе
			Стр = НаложенныеФильтры.Добавить();
		КонецЕсли; 
		
		Стр.Поле = ИмяПоля;
		Стр.Заголовок = ?(ПустаяСтрока(ЭлементОтбор.Представление), ДоступноеПоле.Заголовок, ЭлементОтбор.Представление);
		Если ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.НеРавно ИЛИ 
			ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВСписке ИЛИ 
			ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВИерархии ИЛИ 
			ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
			Стр.ПризнакИсключения = Истина;
		КонецЕсли; 
		
		Если ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.БольшеИлиРавно 
				ИЛИ ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.Больше Тогда
			Если ТипЗнч(Стр.Значение)=Тип("СтандартныйПериод") Тогда
				Стр.Значение.ДатаНачала = НачалоДня(ЭлементОтбор.Значение);
			Иначе
				Стр.Значение.ЗначениеОт = Макс(ЭлементОтбор.Значение, Стр.Значение.ЗначениеОт);
			КонецЕсли; 
		ИначеЕсли ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.МеньшеИлиРавно 
				ИЛИ ЭлементОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.Меньше Тогда
			Если ТипЗнч(Стр.Значение)=Тип("СтандартныйПериод") Тогда
				Стр.Значение.ДатаОкончания = ?(НЕ ЗначениеЗаполнено(ЭлементОтбор.Значение), ЭлементОтбор.Значение, КонецДня(ЭлементОтбор.Значение));
			Иначе
				Стр.Значение.ЗначениеДо = ?(Стр.Значение.ЗначениеДо=0, ЭлементОтбор.Значение, Мин(ЭлементОтбор.Значение, Стр.Значение.ЗначениеДо));
			КонецЕсли; 
		ИначеЕсли ТипЗнч(ЭлементОтбор.Значение)=Тип("СписокЗначений") Тогда
		    Для каждого ЭлементСписка Из ЭлементОтбор.Значение Цикл
				Если ЗначениеЗаполнено(Стр.Значение) Тогда
					НоваяСтрока = НаложенныеФильтры.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
					НоваяСтрока.Значение = ЭлементСписка.Значение;
					Стр = НоваяСтрока;
				Иначе
					Стр.Значение = ЭлементСписка.Значение;
				КонецЕсли; 
			КонецЦикла; 
		Иначе
		    Стр.Значение = ЭлементОтбор.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого Стр Из НаложенныеФильтры Цикл
		
		Если ПустаяСтрока(Стр.ИмяКнопки) Тогда
			Стр.ИмяКнопки = "ОтметкаФильтра"+СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.Значение) ИЛИ ПустаяСтрока(Стр.Поле) Тогда
			Продолжить;
		КонецЕсли; 
		ЗаголовокФильтра = Стр.Заголовок;
		Префикс = "";
		Если ТипЗнч(Стр.Значение)=Тип("СтандартныйПериод") Тогда
			ПредставлениеЗначения = ПредставлениеПериода(Стр.Значение.ДатаНачала, Стр.Значение.ДатаОкончания);
			Префикс = ПоследняяЧастьЗаголовка(ЗаголовокФильтра);
		ИначеЕсли ТипЗнч(Стр.Значение)=Тип("Структура") Тогда
			ПредставлениеЗначения = Формат(Стр.Значение.ЗначениеОт, "ЧН='0'")+" - "+Формат(Стр.Значение.ЗначениеДо, "ЧН='...'");
			Префикс = ПоследняяЧастьЗаголовка(ЗаголовокФильтра);
		ИначеЕсли ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Стр.Значение)) Тогда
			ПредставлениеЗначения = Строка(Стр.Значение);
		ИначеЕсли ТипЗнч(Стр.Значение)=Тип("Булево") Тогда
			ПолеСхемы = ПолеСхемы(СхемаКД, Стр.Поле);
			Если ПолеСхемы<>Неопределено Тогда
				Параметр = ПолеСхемы.ПараметрыРедактирования.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ФорматРедактирования"));
				Если НЕ Параметр=Неопределено И Параметр.Использование И ЗначениеЗаполнено(Параметр.Значение) Тогда
					ПредставлениеЗначения = Формат(Стр.Значение, Параметр.Значение);
					Префикс = "";
				Иначе
					ПредставлениеЗначения = Строка(Стр.Значение);
					Префикс = ПоследняяЧастьЗаголовка(ЗаголовокФильтра);
				КонецЕсли; 
			Иначе
				ПредставлениеЗначения = Строка(Стр.Значение);
				Префикс = ПоследняяЧастьЗаголовка(ЗаголовокФильтра);
			КонецЕсли; 
		Иначе
			ПредставлениеЗначения = Строка(Стр.Значение);
			Префикс = ПоследняяЧастьЗаголовка(ЗаголовокФильтра);
		КонецЕсли;
		Стр.Заголовок = ?(ПустаяСтрока(Префикс), "", Префикс+": ")+ПредставлениеЗначения;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция СтрокаНаложенногоФильтра(ИмяКнопки)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ИмяКнопки", ИмяКнопки);
	Строки = НаложенныеФильтры.НайтиСтроки(СтруктураПоиска);
	Если Строки.Количество()=0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат Строки[0];
	КонецЕсли; 
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолеСхемы(Схема, Поле)
	
	ИмяПоля = Строка(Поле);
	Для каждого Набор Из Схема.НаборыДанных Цикл
		ПолеСхемы = Набор.Поля.Найти(ИмяПоля);
		Если НЕ ПолеСхемы=Неопределено Тогда
			Возврат ПолеСхемы;
		КонецЕсли;  
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура ОбновитьОтображениеОтметокФильтров()
	
	ЗаполнитьТаблицуНаложенныхФильтров();
	
	МассивКУдалению = Новый Массив;
	Группа = Элементы.ГруппаОтметокФильтров;
	Для каждого Элемент Из Группа.ПодчиненныеЭлементы Цикл
		МассивКУдалению.Добавить(Элемент);
	КонецЦикла; 
	
	Для каждого Элемент Из МассивКУдалению Цикл
		Элементы.Удалить(Элемент);
	КонецЦикла;
	
	Для каждого Стр Из НаложенныеФильтры Цикл
		
		ЭлементОтметка = Элементы.Добавить(Стр.ИмяКнопки, Тип("ДекорацияФормы"), Группа);
		
		ЭлементыЗаголовка = Новый Массив;
		Если СтрДлина(Стр.Заголовок)>60 Тогда
			ЭлементыЗаголовка.Добавить(Лев(Стр.Заголовок, 58)+"...");
			ЭлементОтметка.Подсказка = Стр.Заголовок;
		Иначе
			ЭлементыЗаголовка.Добавить(Стр.Заголовок);
		КонецЕсли; 
		ЭлементыЗаголовка.Добавить(Новый ФорматированнаяСтрока(БиблиотекаКартинок.Очистить,,,, Стр.ИмяКнопки));
		
		ЭлементОтметка.Вид = ВидДекорацииФормы.Надпись;
		ЭлементОтметка.Заголовок = Новый ФорматированнаяСтрока(ЭлементыЗаголовка);
		ЭлементОтметка.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная, 1);
		Если Стр.ПризнакИсключения Тогда
			ЭлементОтметка.ЦветРамки = WebЦвета.Красный;
		КонецЕсли; 
		ЭлементОтметка.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
		ЭлементОтметка.ЦветФона = ЦветаСтиля.ЦветФонаФормы;
		ЭлементОтметка.Высота = 1;
		ЭлементОтметка.РастягиватьПоГоризонтали = Истина;
		ЭлементОтметка.АвтоМаксимальнаяШирина = Ложь;
		ЭлементОтметка.МаксимальнаяШирина = 50;
		ЭлементОтметка.УстановитьДействие("ОбработкаНавигационнойСсылки", "Подключаемый_УдалитьФильтрНажатие");
		
	КонецЦикла;  
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеНастроек()
	
	МассивРеквизитов = Новый Массив;
	МассивКУдалению = Новый Массив;
	Для каждого Элемент Из Элементы.ГруппаНастройки.ПодчиненныеЭлементы Цикл
		МассивКУдалению.Добавить(Элемент);
		МассивРеквизитов.Добавить(Элемент.ПутьКДанным);
	КонецЦикла;
	Для каждого Элемент Из МассивКУдалению Цикл
		Элементы.Удалить(Элемент);
	КонецЦикла; 
	ИзменитьРеквизиты(, МассивРеквизитов);
	
	МассивРеквизитов = Новый Массив;
	Для каждого Элемент Из Настройки Цикл
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Элемент.Имя, Новый ОписаниеТипов("Булево"),, Элемент.Заголовок));
	КонецЦикла; 
	ИзменитьРеквизиты(МассивРеквизитов);
	
	Для каждого Элемент Из Настройки Цикл
		Группа = Элементы.ГруппаНастройки;
		ЭлементФормы = Элементы.Добавить(Элемент.Имя, Тип("ПолеФормы"), Группа);
		ЭлементФормы.ПутьКДанным = Элемент.Имя;
		ЭлементФормы.Вид = ВидПоляФормы.ПолеФлажка;
		ЭтаФорма[Элемент.Имя] = Элемент.Значение;
	КонецЦикла; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоследняяЧастьЗаголовка(Заголовок)
	
	Результат = Заголовок;
	Позиция = Найти(Результат, ".");
	Пока Позиция>0 Цикл
		Результат = Сред(Результат, Позиция+1);
		Позиция = Найти(Результат, ".");
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#КонецОбласти
 