
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("АдресСхемы", АдресСхемы) ИЛИ НЕ ЭтоАдресВременногоХранилища(АдресСхемы) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	ТекущиеФильтры = Неопределено;
	Параметры.Свойство("Фильтры", ТекущиеФильтры);
	Если Не ТипЗнч(ТекущиеФильтры)=Тип("ФиксированныйМассив") Тогда
		Фильтры = Новый ФиксированныйМассив(Новый Массив);
	Иначе
		Фильтры = ТекущиеФильтры;
	КонецЕсли; 
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	Компоновщик.Инициализировать(ИсточникНастроек);
	СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСхемы);
	Компоновщик.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	АдресНастроек = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных.НастройкиПоУмолчанию, УникальныйИдентификатор);
	
	Элементы.Поле.СписокВыбора.Очистить();
	Для каждого ЭлементОтбора Из Компоновщик.Настройки.Отбор.Элементы Цикл
		Если НЕ ТипЗнч(ЭлементОтбора)=Тип("ЭлементОтбораКомпоновкиДанных") ИЛИ НЕ ТипЗнч(ЭлементОтбора.ЛевоеЗначение)=Тип("ПолеКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ПустаяСтрока(ЭлементОтбора.Представление) Тогда
			Представление = ЭлементОтбора.Представление;
		Иначе
			ДоступноеПоле = Компоновщик.Настройки.ДоступныеПоляОтбора.НайтиПоле(ЭлементОтбора.ЛевоеЗначение);
			Представление = ДоступноеПоле.Заголовок;
		КонецЕсли; 
		Элементы.Поле.СписокВыбора.Добавить(Строка(ЭлементОтбора.ЛевоеЗначение), Представление);
	КонецЦикла; 
	Элементы.Поле.СписокВыбора.Добавить("...", НСтр("ru = 'Прочие поля'"),, БиблиотекаКартинок.Выбрать);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВыбранноеЗначение=Неопределено Тогда
		Возврат;
	КонецЕсли;
	ДоступноеПоле = Компоновщик.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных(ВыбранноеЗначение));
	Элементы.Поле.СписокВыбора.Вставить(Элементы.Поле.СписокВыбора.Количество()-1, ВыбранноеЗначение, ДоступноеПоле.Заголовок); 
	Поле = ВыбранноеЗначение;
	ПолеПриИзменении(Элементы.Поле);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПолеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение="..." Тогда
		СтандартнаяОбработка = Ложь;
		СтруктураОткрытия = Новый Структура;
		СтруктураОткрытия.Вставить("Режим", "ПоляОтбора");
		СтруктураОткрытия.Вставить("АдресСхемы", АдресСхемы);
		СтруктураОткрытия.Вставить("АдресНастроек", АдресНастроек);
		ОткрытьФорму("ОбщаяФорма.ФормаСпискаПолей", СтруктураОткрытия, ЭтаФорма);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПриИзменении(Элемент)
	
	ПолеПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПолеПриИзмененииСервер()
	
	Элементы.ВидСравнения.СписокВыбора.Очистить();
	Если ПустаяСтрока(Поле) Тогда
		Возврат;
	КонецЕсли;
	
	ДоступноеПоле = Компоновщик.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных(Поле));
	ОписаниеТипов = ДоступноеПоле.ТипЗначения;
	НедоступныеВидыСравнения = ОпределитьНедоступныеВидыСравнения(Поле, ОписаниеТипов);
	Для каждого Тип Из ОписаниеТипов.Типы() Цикл
		Если Тип=Тип("Число") Тогда
			// Числа
			ДобавитьВидСравнения("Больше", НСтр("ru = 'Больше'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("БольшеИлиРавно", НСтр("ru = 'Больше или равно'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("Меньше", НСтр("ru = 'Меньше'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("МеньшеИлиРавно", НСтр("ru = 'Меньше или равно'"), НедоступныеВидыСравнения);
		ИначеЕсли Тип=Тип("Дата") Тогда
			// Даты
			ДобавитьВидСравнения("Больше", НСтр("ru = 'Больше'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("БольшеИлиРавно", НСтр("ru = 'Больше или равно'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("Меньше", НСтр("ru = 'Меньше'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("МеньшеИлиРавно", НСтр("ru = 'Меньше или равно'"), НедоступныеВидыСравнения);
		ИначеЕсли Тип=Тип("Строка") Тогда
			// Строки
			ДобавитьВидСравнения("Содержит", НСтр("ru = 'Содержит'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("НеСодержит", НСтр("ru = 'Не содержит'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("НачинаетсяС", НСтр("ru = 'Начинается с'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("НеНачинаетсяС", НСтр("ru = 'Не начинается с'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("Подобно", НСтр("ru = 'Подобно'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("НеПодобно", НСтр("ru = 'Не подобно'"), НедоступныеВидыСравнения);
		ИначеЕсли Тип=Тип("Булево") Тогда
			ДобавитьВидСравнения("Равно", НСтр("ru = 'Равно'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("НеРавно",НСтр("ru = 'Не равно'"), НедоступныеВидыСравнения);
		ИначеЕсли ОбщегоНазначения.ЭтоСсылка(Тип) Тогда
			ПустаяСсылка = Новый(Тип);
			КоличествоЗначений = ОтчетыУНФ.ОпределитьКоличествоЭлементов(Тип);
			МетаданныеОбъекта = ПустаяСсылка.Метаданные();
			Если (ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъекта) 
				ИЛИ ОбщегоНазначения.ЭтоПланВидовХарактеристик(МетаданныеОбъекта)) 
				И МетаданныеОбъекта.Иерархический Тогда
				ДобавитьВидСравнения("ВСпискеПоИерархии", НСтр("ru = 'В группах'"), НедоступныеВидыСравнения);
				ДобавитьВидСравнения("НеВСпискеПоИерархии", НСтр("ru = 'Не в группах'"), НедоступныеВидыСравнения);
			КонецЕсли;
			Если КоличествоЗначений>2 Тогда
				ДобавитьВидСравнения("ВСписке", НСтр("ru = 'В списке'"), НедоступныеВидыСравнения);
				ДобавитьВидСравнения("НеВСписке", НСтр("ru = 'Не в списке'"), НедоступныеВидыСравнения);
			КонецЕсли; 
			ДобавитьВидСравнения("Равно", НСтр("ru = 'Равно'"), НедоступныеВидыСравнения);
			ДобавитьВидСравнения("НеРавно",НСтр("ru = 'Не равно'"), НедоступныеВидыСравнения);
		КонецЕсли;	
	КонецЦикла;
	
	Если ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(ОписаниеТипов, Тип("Число")) Тогда
		Элементы.Значение.АвтоОтметкаНезаполненного = Ложь;
	Иначе
		Элементы.Значение.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли; 
	
	ВидСравнения = "";
	Для каждого ОписаниеФильтра Из Фильтры Цикл
		Если НЕ ОписаниеФильтра.Поле=Поле Тогда
			Продолжить;
		КонецЕсли;
		ИмяВидаСравнения = ПолучитьПолноеИмяПредопределенногоЗначения(ОписаниеФильтра.ВидСравнения);
		ИмяВидаСравнения = Сред(ИмяВидаСравнения, Найти(ИмяВидаСравнения, ".")+1);
		Если НЕ Элементы.ВидСравнения.СписокВыбора.НайтиПоЗначению(ИмяВидаСравнения)=Неопределено Тогда
			ВидСравнения = ИмяВидаСравнения;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	Если ПустаяСтрока(ВидСравнения) И Элементы.ВидСравнения.СписокВыбора.Количество()>0 Тогда
		ВидСравнения = Элементы.ВидСравнения.СписокВыбора[0].Значение;
	КонецЕсли;
	ВидСравненияПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Функция ОпределитьНедоступныеВидыСравнения(Поле, Тип)
	
	Результат = Новый Массив;
	Для каждого ОписаниеФильтра Из Фильтры Цикл
		Если НЕ ОписаниеФильтра.Поле=Поле Тогда
			Продолжить;
		КонецЕсли;
		Если ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно Тогда
			Результат.Добавить("НеРавно");
			Результат.Добавить("НеВСписке");
			Результат.Добавить("ВСпискеПоИерархии");
			Результат.Добавить("НеВСпискеПоИерархии");
			Результат.Добавить("Больше");
			Результат.Добавить("БольшеИлиРавно");
			Результат.Добавить("Меньше");
			Результат.Добавить("МеньшеИлиРавно");
			Результат.Добавить("Содержит");
			Результат.Добавить("НеСодержит");
			Результат.Добавить("НачинаетсяС");
			Результат.Добавить("НеНачинаетсяС");
			Результат.Добавить("Подобно");
			Результат.Добавить("НеПодобно");
		ИначеЕсли ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.НеРавно Тогда
			Результат.Добавить("Равно");
		ИначеЕсли ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке Тогда

		ИначеЕсли ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВСписке Тогда
			Результат.Добавить("Равно");
		ИначеЕсли ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии Тогда
			Результат.Добавить("Равно");
		ИначеЕсли ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
			Результат.Добавить("Равно");
		ИначеЕсли ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.Больше 
			ИЛИ ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.БольшеИлиРавно Тогда
			Результат.Добавить("Больше");
			Результат.Добавить("БольшеИлиРавно");
		ИначеЕсли ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.Меньше 
			ИЛИ ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.МеньшеИлиРавно Тогда
			Результат.Добавить("Меньше");
			Результат.Добавить("МеньшеИлиРавно");
		ИначеЕсли ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.Содержит
			ИЛИ ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.НеСодержит
			ИЛИ ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.НачинаетсяС
			ИЛИ ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.НеНачинаетсяС
			ИЛИ ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.Подобно
			ИЛИ ОписаниеФильтра.ВидСравнения=ВидСравненияКомпоновкиДанных.НеПодобно Тогда
			Результат.Добавить("Равно");
		КонецЕсли; 
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ДобавитьВидСравнения(ВидСравнения, Представление, НедоступныеВидыСравнения)
	
	Если НЕ НедоступныеВидыСравнения.Найти(ВидСравнения)=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если НЕ Элементы.ВидСравнения.СписокВыбора.НайтиПоЗначению(ВидСравнения)=Неопределено Тогда
		Возврат;
	КонецЕсли; 
	Элементы.ВидСравнения.СписокВыбора.Добавить(ВидСравнения, Представление);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСравненияПриИзменении(Элемент)
	
	ВидСравненияПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВидСравненияПриИзмененииСервер()
	
	Если НЕ ЗначениеЗаполнено(ВидСравнения) Тогда
		Значение = Неопределено;
		Возврат;
	КонецЕсли; 
	НовыйВидСравнения = ВидСравненияКомпоновкиДанных[ВидСравнения];
	ОбновитьТипЗначения();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьОтбор(Команда)
	
	Если ПустаяСтрока(Поле) ИЛИ ПустаяСтрока(ВидСравнения) ИЛИ (НЕ ЗначениеЗаполнено(Значение) И Элементы.Значение.АвтоОтметкаНезаполненного=Истина) Тогда
		Возврат;
	КонецЕсли; 
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Событие", "ДобавлениеОтбора");
	СтруктураВозврата.Вставить("Поле", Поле);
	СтруктураВозврата.Вставить("ВидСравнения", ВидСравненияКомпоновкиДанных[ВидСравнения]);
	СтруктураВозврата.Вставить("Значение", Значение);
	ОповеститьОВыборе(СтруктураВозврата);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьТипЗначения()
	
	ДоступноеПоле = Компоновщик.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных(Поле));
	Тип = ДоступноеПоле.ТипЗначения;
	ЭтоСсылка = Ложь;
	Для каждого ДоступныйТип Из Тип.Типы() Цикл
		Если ОбщегоНазначения.ЭтоСсылка(ДоступныйТип) Тогда
			ЭтоСсылка = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Если ЭтоСсылка И (ВидСравнения="ВИерархиии" ИЛИ ВидСравнения="НеВИерархиии" ИЛИ ВидСравнения="ВСпискеПоИерархии" ИЛИ ВидСравнения="НеВСпискеПоИерархии") Тогда
		Элементы.Значение.ВыборГруппИЭлементов = ГруппыИЭлементы.Группы;
	Иначе
		Элементы.Значение.ВыборГруппИЭлементов = ГруппыИЭлементы.Авто;
	КонецЕсли; 
	
	СтароеЗначение = Значение;
	Если ЭтоСсылка И НЕ ВидСравнения="Равно" И НЕ ВидСравнения="НеРавно" Тогда
		Элементы.Значение.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
		Значение = Новый СписокЗначений;
		Значение.ТипЗначения = Тип;
		Если ТипЗнч(СтароеЗначение)=Тип("СписокЗначений") Тогда
			Для каждого СтарыйЭлемент Из СтароеЗначение Цикл
				ЗначениеЭлемента = Тип.ПривестиЗначение(СтарыйЭлемент.Значение);
				Если ЗначениеЗаполнено(ЗначениеЭлемента) Тогда
					Значение.Добавить(ЗначениеЭлемента);
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 
		Для каждого ДоступныйТип Из Тип.Типы() Цикл
			Если ЗначениеЗаполнено(СтароеЗначение) И ТипЗнч(СтароеЗначение)=ДоступныйТип Тогда
				Значение.Добавить(СтароеЗначение);
			КонецЕсли; 
		КонецЦикла; 
	Иначе
		Элементы.Значение.ОграничениеТипа = Тип;
		Значение = Тип.ПривестиЗначение(Значение);
		Если ТипЗнч(СтароеЗначение)=Тип("СписокЗначений") И СтароеЗначение.Количество()>0 Тогда
			ПервыйЭлемент = СтароеЗначение[0].Значение;
			Для каждого ДоступныйТип Из Тип.Типы() Цикл
				Если ТипЗнч(ПервыйЭлемент)=ДоступныйТип Тогда
					Значение = ПервыйЭлемент;
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 
	КонецЕсли;
	
	//Частные случаи
	
	Если Поле="БанковскийСчетКасса" Тогда
		// Банковские счета с отбором по организации
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации";
		МассивОрганизаций = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		ПараметрВыбора = Новый ПараметрВыбора("Отбор.Владелец", Новый ФиксированныйМассив(МассивОрганизаций));
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(ПараметрВыбора);
		Элементы.Значение.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	ИначеЕсли Найти(Поле, "[")>0 Тогда
		// Это доп. реквизит
		Позиция = Найти(Поле, "[");
		ПозицияКонца = Найти(Поле, "]");
		Наименование = Сред(Поле, Позиция+1, ПозицияКонца-Позиция-1);
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Наименование", Наименование);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДополнительныеРеквизитыИСведения.Ссылка КАК Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
		|ГДЕ
		|	ДополнительныеРеквизитыИСведения.Наименование = &Наименование
		|	И ДополнительныеРеквизитыИСведения.ВладелецДополнительныхЗначений = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДополнительныеРеквизитыИСведения.ВладелецДополнительныхЗначений
		|ИЗ
		|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
		|ГДЕ
		|	ДополнительныеРеквизитыИСведения.Наименование = &Наименование
		|	И ДополнительныеРеквизитыИСведения.ВладелецДополнительныхЗначений <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка)";
		МассивСвойств = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		Если МассивСвойств.Количество()>0 Тогда
			ПараметрВыбора = Новый ПараметрВыбора("Отбор.Владелец", МассивСвойств[0]);
			МассивПараметров = Новый Массив;
			МассивПараметров.Добавить(ПараметрВыбора);
			Элементы.Значение.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
		Иначе
			Элементы.Значение.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
		КонецЕсли; 
	Иначе
		Элементы.Значение.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

