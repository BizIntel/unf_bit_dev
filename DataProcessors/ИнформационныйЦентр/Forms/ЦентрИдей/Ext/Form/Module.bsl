#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийФильтрИдей = Параметры.ТекущийФильтрИдей;
	ТекущаяСортировка = Параметры.ТекущаяСортировка;
	ТекущаяСтраница = Параметры.ТекущаяСтраница;
	
	Если Параметры.Свойство("ТекстПоиска") Тогда 
		ТекстПоиска = Параметры.ТекстПоиска;
	КонецЕсли;
	Если Параметры.Свойство("ТекущийФильтрПоПредметам") Тогда 
		ТекущийФильтрПоПредметам.Загрузить(Параметры.ТекущийФильтрПоПредметам.Выгрузить());
	КонецЕсли;
	
	ИдентификаторПользователя = Пользователи.ТекущийПользователь().ИдентификаторПользователяСервиса;
	КоличествоИдейНаСтранице = ИнформационныйЦентрСервер.КоличествоИдейНаСтранице();
	
	ЗаполнитьСписокИдей();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "НоваяИдея" Или ИмяСобытия = "ПроголосовалиЗаИдею"
		Или ИмяСобытия = "ДобавленКомментарийКИдее" Или ИмяСобытия = "УдаленКомментарийКИдее" Тогда 
			ПереоткрытьДаннуюФормуСПараметрами();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаГолосованииНажатие(Элемент)
	
	ТекущийФильтрИдей = "voiting";
	ТекущаяСортировка = "CreateDate";
	ТекущаяСтраница = 1;
	
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапланированныеНажатие(Элемент)
	
	ТекущийФильтрИдей = "plan";
	ТекущаяСортировка = "PlanMadeDate";
	ТекущаяСтраница = 1;
	ТекущийФильтрПоПредметам.Очистить();
	
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура РеализованныеНажатие(Элемент)
	
	ТекущийФильтрИдей = "realization";
	ТекущаяСортировка = "ClosingDate";
	ТекущаяСтраница = 1;
	
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклоненныеНажатие(Элемент)
	
	ТекущийФильтрИдей = "deviation";
	ТекущаяСортировка = "ClosingDate";
	ТекущаяСтраница = 1;
	
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура МоиИдеиНажатие(Элемент)
	
	ТекущийФильтрИдей = "favorites";
	ТекущаяСортировка = "ChangingDate";
	ТекущаяСтраница = 1;
	
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура СортировкаНаГолосованииПриИзменении(Элемент)
	
	Если СортировкаНаГолосовании = "ПоДатеСоздания" Тогда 
		ТекущаяСортировка = "CreateDate";
	ИначеЕсли СортировкаНаГолосовании = "ПоСуммеГолосов" Тогда 
		ТекущаяСортировка = "Rating";
	ИначеЕсли СортировкаНаГолосовании = "ПоКоличествуКомментариев" Тогда 
		ТекущаяСортировка = "CommentsCount";
	КонецЕсли;
	ТекущаяСтраница = 1;
	ТекущийФильтрПоПредметам.Очистить();
	
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаВлевоНажатие(Элемент)
	
	ТекущаяСтраница = ТекущаяСтраница - 1;
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаВправоНажатие(Элемент)
	
	ТекущаяСтраница = ТекущаяСтраница + 1;
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеПриИзменении(Элемент)
	
	Для Каждого ФильтрПоПредмету Из ТекущийФильтрПоПредметам Цикл 
		ФильтрПоПредмету.Использовать = ВыбратьВсе;
	КонецЦикла;
	
	Если ВыбратьВсе Тогда 
		ТекущаяСтраница = 1;
		ПереоткрытьДаннуюФормуСПараметрами();
	Иначе
		ОбнулитьСтраницу();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоПредметамИспользоватьПриИзменении(Элемент)
	
	ОтборОтрицательных = Новый Структура;
	ОтборОтрицательных.Вставить("Использовать", Истина);
	НайденныйМассив = ТекущийФильтрПоПредметам.НайтиСтроки(ОтборОтрицательных);
	Если НайденныйМассив.Количество() <> 0 Тогда 
		ТекущаяСтраница = 1;
		ПереоткрытьДаннуюФормуСПараметрами();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент)
	
	ИмяПредмета = Элемент.Заголовок;
	Для Каждого Предмет Из ТекущийФильтрПоПредметам Цикл 
		Предмет.Использовать = (Предмет.Предмет = ИмяПредмета);
	КонецЦикла;
	ТекущаяСтраница = 1;
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеНаИдею(Элемент)
	
	НомерИдеи = ПолучитьНомерИдеиПоНазванию(Элемент.Имя);
	ИдентификаторИдеи = Идеи.Получить(НомерИдеи - 1).Идентификатор;
	ИнформационныйЦентрКлиент.ПоказатьИдею(ИдентификаторИдеи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоискНажатие(Элемент)
	
	Закрыть();
	ИнформационныйЦентрКлиент.ОткрытьЦентрИдей();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПоискаПриИзменении(Элемент)
	
	ПроизвестиПоиск();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Плюс(Команда)
	
	НомерИдеи = ПолучитьНомерИдеиПоНазванию(ТекущийЭлемент.Имя);
	ИдентификаторИдеи = Идеи.Получить(НомерИдеи - 1).Идентификатор;
	ПроголосоватьЗаИдею(1, ИдентификаторИдеи);
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура Минус(Команда)
	
	НомерИдеи = ПолучитьНомерИдеиПоНазванию(ТекущийЭлемент.Имя);
	ИдентификаторИдеи = Идеи.Получить(НомерИдеи - 1).Идентификатор;
	ПроголосоватьЗаИдею(-1, ИдентификаторИдеи);
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИдею(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДоступныеПредметы", ТекущийФильтрПоПредметам);
	ОткрытьФорму("Обработка.ИнформационныйЦентр.Форма.НоваяИдея", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиИдеи(Команда)
	
	ПроизвестиПоиск();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроизвестиПоиск()
	
	Если ПустаяСтрока(ТекстПоиска) Тогда 
		НСтр("ru = 'Текстовый запрос поиска не должен быть пустым'");
	КонецЕсли;
	
	ТекущийФильтрИдей = "search";
	ТекущаяСтраница = 1;
	ПереоткрытьДаннуюФормуСПараметрами();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереоткрытьДаннуюФормуСПараметрами()
	
	Закрыть();
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущийФильтрИдей", ТекущийФильтрИдей);
	ПараметрыФормы.Вставить("ТекущаяСортировка", ТекущаяСортировка);
	ПараметрыФормы.Вставить("ТекущаяСтраница", ТекущаяСтраница);
	ПараметрыФормы.Вставить("ТекущийФильтрПоПредметам", ТекущийФильтрПоПредметам);
	ПараметрыФормы.Вставить("ТекстПоиска", ТекстПоиска);
	ОткрытьФорму("Обработка.ИнформационныйЦентр.Форма.ЦентрИдей", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокИдей()
	
	Попытка
		ПредставлениеСпискаИдей = ПолучитьПредставлениеСпискаИдей();
		СформироватьСтраницу(ПредставлениеСпискаИдей);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИнформационныйЦентрСервер.ПолучитьИмяСобытияДляЖурналаРегистрации(), 
		                         УровеньЖурналаРегистрации.Ошибка,
		                         ,
		                         ,
		                         ТекстОшибки);
		ТекстВывода = ИнформационныйЦентрСервер.ТекстВыводаИнформацииОбОшибкеВЦентреИдей();
		ВызватьИсключение ТекстВывода;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПредставлениеСпискаИдей()
	
	WSПрокси = ИнформационныйЦентрСервер.ПолучитьПроксиЦентраИдей();
	
	СписокПредметов = ПолучитьСписокПредметовИдей(WSПрокси.ФабрикаXDTO);
	
	Если ТекущийФильтрИдей <> "search" Тогда 
		ТекстПоиска = "";
		Результат = WSПрокси.getIdeas(ТекущийФильтрИдей, СписокПредметов, ТекущаяСортировка, ТекущаяСтраница, Строка(ИдентификаторПользователя), КоличествоИдейНаСтранице);
	Иначе 
		Результат = WSПрокси.searchIdeas(ТекстПоиска, ТекущийФильтрИдей, СписокПредметов, ТекущаяСортировка, ТекущаяСтраница, Строка(ИдентификаторПользователя), КоличествоИдейНаСтранице);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьСписокПредметовИдей(Знач ФабрикаXDTOВебСервиса)
	
	ТипСпискаПредметов = ФабрикаXDTOВебСервиса.Тип("http://www.1c.ru/1cFresh/InformationCenter/UsersIdeas/1.0.0.1", "SubjectFilterArray");
	СписокПредметов = ФабрикаXDTOВебСервиса.Создать(ТипСпискаПредметов);
	
	Для Каждого ДоступныйПредмет Из ТекущийФильтрПоПредметам Цикл 
		Если ДоступныйПредмет.Использовать Тогда
			СписокПредметов.SubjectFilterElement.Добавить(ДоступныйПредмет.Предмет);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокПредметов;
	
КонецФункции

&НаСервере
Процедура ПроголосоватьЗаИдею(Знач Голос, Знач ИдентификаторИдеи)
	
	Попытка
		WSПрокси = ИнформационныйЦентрСервер.ПолучитьПроксиЦентраИдей();
		ИнформационныйЦентрСервер.ПроголосоватьЗаИдею(WSПрокси, Строка(ИдентификаторПользователя), ИдентификаторИдеи, Голос);
	Исключение
		ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИнформационныйЦентрСервер.ПолучитьИмяСобытияДляЖурналаРегистрации(), 
		                         УровеньЖурналаРегистрации.Ошибка,
		                         ,
		                         ,ТекстОшибки);
		ТекстВывода = ИнформационныйЦентрСервер.ТекстВыводаИнформацииОбОшибкеВЦентреИдей();
		ВызватьИсключение ТекстВывода;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНомерИдеиПоНазванию(Знач ИмяЭлемента)
	
	МассивЭлементов = СтрРазделить(ИмяЭлемента, "_");
	КоличествоЭлементов = МассивЭлементов.Количество();
	Если КоличествоЭлементов = 0 Тогда 
		Возврат 0;
	КонецЕсли;
	
	Попытка
		НомерИдеи = Число(МассивЭлементов.Получить(КоличествоЭлементов - 1));
	Исключение
		НомерИдеи = 0;
	КонецПопытки;
	
	Возврат НомерИдеи;
	
КонецФункции


&НаСервере
Процедура ОбнулитьСтраницу()
	
	Для Итерация = 1 По ИнформационныйЦентрСервер.КоличествоИдейНаСтранице() Цикл 
		Элементы["Идея_" + Итерация].ТекущаяСтраница = Элементы["ПустаяИдея_" + Итерация];
	КонецЦикла;
	
	Элементы.КнопкаВлево.Картинка = БиблиотекаКартинок.ПереходВлевоНеАктивный;
	Элементы.КнопкаВправо.Картинка = БиблиотекаКартинок.ПереходВправоНеАктивный;
	
	Элементы.КнопкаВлево.Гиперссылка = Ложь;
	Элементы.НомерСтраницы.Заголовок = 1;
	Элементы.КнопкаВправо.Гиперссылка = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтраницу(Знач ПредставлениеСпискаИдей)
	
	// Отображение фильтра идей
	ОтобразитьФильтрИдей();
	
	// Отображение сортировки идей
	ОтобразитьСортировкуИдей();
	
	// Отображение списка идей
	Идеи.Очистить();
	СписокИдей = ПредставлениеСпискаИдей.IdeasList;
	Для Итерация = 1 По ИнформационныйЦентрСервер.КоличествоИдейНаСтранице() Цикл 
		
		Если СписокИдей.Количество() >= Итерация Тогда 
			ПредставлениеИдеи = СписокИдей.Получить(Итерация - 1);
			НоваяИдея = Идеи.Добавить();
			НоваяИдея.Идентификатор = ПредставлениеИдеи.Id;
		Иначе
			Элементы["Идея_" + Итерация].ТекущаяСтраница = Элементы["ПустаяИдея_" + Итерация];
			Продолжить;
		КонецЕсли;
		
		Элементы["Предзаголовок_" + Итерация].Заголовок = ИнформационныйЦентрСервер.СформироватьПредзаголовокИдеи(ПредставлениеИдеи);
		Элементы["Заголовок_" + Итерация].Заголовок = ПредставлениеИдеи.Name;
		Элементы["Текст_" + Итерация].Заголовок = ПредставлениеИдеи.Text;
		Элементы["Комментарии_" + Итерация].Заголовок = ИнформационныйЦентрСервер.СформироватьЗаголовокКомментариев(ПредставлениеИдеи);
		Элементы["Предмет_" + Итерация].Заголовок = ПредставлениеИдеи.Subject;
		
		Если ПредставлениеИдеи.Status = "plan" Тогда 
			ОтобразитьЗапланированнуюИдею(ПредставлениеИдеи, Итерация);
		ИначеЕсли ПредставлениеИдеи.Status = "voiting" Тогда
			ОтобразитьИдеюНаГолосовании(ПредставлениеИдеи, Итерация);
		ИначеЕсли ПредставлениеИдеи.Status = "deviation" Тогда 
			ОтобразитьОтклоненнуюИдею(ПредставлениеИдеи, Итерация);
		ИначеЕсли ПредставлениеИдеи.Status = "realization" Тогда 
			ОтобразитьРеализованнуюИдею(ПредставлениеИдеи, Итерация);
		ИначеЕсли ПредставлениеИдеи.Status = "consideration" Тогда 
			ОтобразитьДобавленнуюИдею(ПредставлениеИдеи, Итерация);
		КонецЕсли;
		
	КонецЦикла;
	
	// Отображение подвала
	ОтобразитьПодвал(СписокИдей.Количество());
	
	// Отображение фильтра по предметам идей
	ОтобразитьФильтрПоПредметамИдей(ПредставлениеСпискаИдей.SubjectsList);
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьФильтрИдей()
	
	Если ТекущийФильтрИдей = "voiting" Тогда 
		Элементы.ФильтрыПоСтатусу.ТекущаяСтраница = Элементы.ФильтрСтатус_НаГолосовании;
	ИначеЕсли ТекущийФильтрИдей = "plan" Тогда 
		Элементы.ФильтрыПоСтатусу.ТекущаяСтраница = Элементы.ФильтрСтатус_Запланированные;
	ИначеЕсли ТекущийФильтрИдей = "deviation" Тогда 
		Элементы.ФильтрыПоСтатусу.ТекущаяСтраница = Элементы.ФильтрСтатус_Отклоненные;
	ИначеЕсли ТекущийФильтрИдей = "realization" Тогда 
		Элементы.ФильтрыПоСтатусу.ТекущаяСтраница = Элементы.ФильтрСтатус_Реализованные;
	ИначеЕсли ТекущийФильтрИдей = "favorites" Тогда 
		Элементы.ФильтрыПоСтатусу.ТекущаяСтраница = Элементы.ФильтрСтатус_МоиИдеи;
	ИначеЕсли ТекущийФильтрИдей = "search" Тогда 
		Элементы.ФильтрыПоСтатусу.ТекущаяСтраница = Элементы.ФильтрСтатус_Поиск;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьСортировкуИдей()
	
	ФильтрИдейНаГолосовании = (ТекущийФильтрИдей = "voiting");
	Элементы.СортировкаНаГолосовании.Видимость = ФильтрИдейНаГолосовании;
	Если Не ФильтрИдейНаГолосовании Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСортировка = "CreateDate" Тогда 
		СортировкаНаГолосовании = Элементы.СортировкаНаГолосовании.СписокВыбора.НайтиПоЗначению("ПоДатеСоздания").Значение
	ИначеЕсли ТекущаяСортировка = "Rating" Тогда 
		СортировкаНаГолосовании = Элементы.СортировкаНаГолосовании.СписокВыбора.НайтиПоЗначению("ПоСуммеГолосов").Значение
	ИначеЕсли ТекущаяСортировка = "CommentsCount" Тогда
		СортировкаНаГолосовании = Элементы.СортировкаНаГолосовании.СписокВыбора.НайтиПоЗначению("ПоКоличествуКомментариев").Значение
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьПодвал(Знач КоличествоИдей)
	
	ЕстьСтраницыДо = ?(ТекущаяСтраница > 1, Истина, Ложь);
	ЕстьСтраницыПосле = ?(КоличествоИдей > ИнформационныйЦентрСервер.КоличествоИдейНаСтранице(), Истина, Ложь);
	
	Элементы.КнопкаВлево.Гиперссылка = ЕстьСтраницыДо;
	Элементы.КнопкаВлево.Картинка = ?(ЕстьСтраницыДо, БиблиотекаКартинок.ПереходВлевоАктивный, БиблиотекаКартинок.ПереходВлевоНеАктивный);
	Элементы.КнопкаВправо.Картинка = ?(ЕстьСтраницыПосле, БиблиотекаКартинок.ПереходВправоАктивный, БиблиотекаКартинок.ПереходВправоНеАктивный);
	Элементы.НомерСтраницы.Заголовок = ТекущаяСтраница;
	Элементы.КнопкаВправо.Гиперссылка = ЕстьСтраницыПосле;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьФильтрПоПредметамИдей(Знач СписокДоступныхПредметов)
	
	ФильтрыСброшены = Ложь;
	
	Если ТекущийФильтрПоПредметам.Количество() = 0 Тогда 
		ФильтрыСброшены = Истина;
		ТекущийФильтрПоПредметам.Очистить();
	КонецЕсли;
	
	Для Каждого ДоступныйПредмет Из СписокДоступныхПредметов Цикл
		Фильтр = Новый Структура("Предмет", ДоступныйПредмет );
		ЭлементНайден = (ТекущийФильтрПоПредметам.НайтиСтроки(Фильтр).Количество() <> 0);
		Если Не ЭлементНайден Тогда 
			НовыйЭлемент = ТекущийФильтрПоПредметам.Добавить();
			НовыйЭлемент.Предмет = ДоступныйПредмет;
			НовыйЭлемент.Использовать = ФильтрыСброшены;
		КонецЕсли;
	КонецЦикла;
	
	ОтборОтрицательных = Новый Структура;
	ОтборОтрицательных.Вставить("Использовать", Ложь);
	НайденныйМассив = ТекущийФильтрПоПредметам.НайтиСтроки(ОтборОтрицательных);
	ВыбратьВсе = (НайденныйМассив.Количество() = 0);
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьЗапланированнуюИдею(Знач ПредставлениеИдеи, Знач Итерация)
	
	Элементы["Отображение_" + Итерация].ТекущаяСтраница = Элементы["Запланированная_" + Итерация];
	Элементы["ДополнительныйПараметр_" + Итерация].Заголовок = ИнформационныйЦентрСервер.СформироватьЗаголовокДатыРеализации(ПредставлениеИдеи);
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьИдеюНаГолосовании(Знач ПредставлениеИдеи, Знач Итерация)
	
	Если ПредставлениеИдеи.Vote > 0 Тогда
		Элементы["Отображение_" + Итерация].ТекущаяСтраница = Элементы["СтраницаГолосМинус_" + Итерация];
		Элементы["НаМинусе_Рейтинг_" + Итерация].Заголовок = ПредставлениеИдеи.Rating;
	ИначеЕсли ПредставлениеИдеи.Vote < 0 Тогда
		Элементы["Отображение_" + Итерация].ТекущаяСтраница = Элементы["СтраницаГолосПлюс_" + Итерация];
		Элементы["НаПлюсе_Рейтинг_" + Итерация].Заголовок = ПредставлениеИдеи.Rating;
	Иначе
		Элементы["Отображение_" + Итерация].ТекущаяСтраница =  Элементы["СтраницаГолосБезГолоса_" + Итерация];
		Элементы["БезГолоса_Рейтинг_" + Итерация].Заголовок = ПредставлениеИдеи.Rating;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьОтклоненнуюИдею(Знач ПредставлениеИдеи, Знач Итерация)
	
	Элементы["Отображение_" + Итерация].ТекущаяСтраница = Элементы["Отклоненная_" + Итерация];
	Элементы["ДополнительныйПараметр_" + Итерация].Заголовок = ИнформационныйЦентрСервер.СформироватьДатуОтклонения(ПредставлениеИдеи);

КонецПроцедуры

&НаСервере
Процедура ОтобразитьРеализованнуюИдею(Знач ПредставлениеИдеи, Знач Итерация)
	
	Элементы["Отображение_" + Итерация].ТекущаяСтраница = Элементы["Реализованная_" + Итерация];
	Элементы["ДополнительныйПараметр_" + Итерация].Заголовок = ИнформационныйЦентрСервер.СформироватьДатуРеализации(ПредставлениеИдеи);
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьДобавленнуюИдею(Знач ПредставлениеИдеи, Знач Итерация)
	
	Элементы["Отображение_" + Итерация].ТекущаяСтраница = Элементы["Добавленная_" + Итерация];
	Элементы["ДополнительныйПараметр_" + Итерация].Заголовок = "";
	
КонецПроцедуры

#КонецОбласти


