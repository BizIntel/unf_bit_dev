
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не Пользователи.РолиДоступны("АдминистрированиеАбонентаБизнесСеть") Тогда
		ТекстОшибки = НСтр("ru = 'Недостаточно прав для выполнения операции в сервисе 1С:Бизнес-сеть.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		Возврат;
	КонецЕсли;
		
	ОбновитьДанныеАутентификации();
	
	ОдиночноеПодключение = ЗначениеЗаполнено(Параметры.Ссылка);
	ИспользуетсяНесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизацийЭД");
	
	Если Не ОдиночноеПодключение И Не ИспользуетсяНесколькоОрганизаций Тогда 
		ОдиночноеПодключение = Истина;
		Параметры.Ссылка = ЭлектронноеВзаимодействиеСлужебный.ОрганизацияПоУмолчанию();
		Если Не ЗначениеЗаполнено(Параметры.Ссылка) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось определить организацию.'"),,,, Отказ);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ОдиночноеПодключение Тогда
		ЗаполнитьРеквизитыПоСсылке(Параметры.Ссылка);
	КонецЕсли;
	
	ИнициализацияДинамическогоСписка();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодключитьУчастников(Команда)
	
	ОчиститьСообщения();
	ВыполнитьПодключениеОрганизаций();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьУчастниковИБ(Команда)
	
	ТекстВопроса = 
		НСтр("ru = 'Организации будут отключены от сервиса 1С:БизнесСеть в программе (информационной базе).
				   |При этом, для других участников сервиса организации будут отображаться как подключенные.'");
	ПоказатьВопрос(Новый ОписаниеОповещения("ОтключитьЗавершение", ЭтаФорма), ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОрганизацииВСервисе(Команда)
	
	ТекстВопроса = НСтр("ru = 'Выбранные организации будут удалены в сервисе 1С:БизнесСеть.
							  |Обмен электронными документами и другие функции сервиса будут недоступны.'");
	ПоказатьВопрос(Новый ОписаниеОповещения("ОтключитьОрганизацииВСервисЗавершение", ЭтаФорма), ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОрганизациюВСервисе(Команда)
	
	ТекстВопроса = НСтр("ru = 'Организация будет удалена в сервисе 1С:БизнесСеть.
							  |Обмен электронными документами и другие функции сервиса будут недоступны.'");
	ПоказатьВопрос(Новый ОписаниеОповещения("УдалитьОрганизациюЗавершение", ЭтаФорма), ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройки(Команда)
	
	ОчиститьСообщения();
	ОткрытьФорму("Обработка.БизнесСеть.Форма.НастройкаПодключения");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьУчастниковОдиночноеИБ(Команда)
	
	ТекстВопроса = НСтр("ru = 'Будет произведено отключение организации от сервиса 1С:БизнесСеть в программе (информационной базе).
				   |При этом, для других участников сервиса организация будет отображаться как подключенная.'");
	ПоказатьВопрос(Новый ОписаниеОповещения("ОтключитьЗавершениеОдиночное", ЭтаФорма), ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанныеАутентификации(СохраненПарольИнтернетПоддержки = Неопределено)
	
	ПараметрыАутентификации = ИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
	
	Если ТипЗнч(ПараметрыАутентификации) = Тип("Структура") Тогда
		Логин = ПараметрыАутентификации.Логин;
		СохраненПарольИнтернетПоддержки = (ПараметрыАутентификации.Свойство("Пароль")
			И ЗначениеЗаполнено(ПараметрыАутентификации.Пароль));
			
	Иначе
		Логин = "";
		СохраненПарольИнтернетПоддержки = Ложь;
	КонецЕсли;
	
	ОтобразитьСостояниеПодключенияИПП();
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьСостояниеПодключенияИПП()
	
	Если ЗначениеЗаполнено(Логин) Тогда
		МассивСтрок = Новый Массив;
		ШаблонЛогина    = НСтр("ru = 'Интернет-поддержка: подключена для пользователя <b>%1</b>'");
		ШаблонПодсказки = НСтр("ru = 'Подключение организаций производится с присоединением к учетной записи Интернет-поддержки <b>%1</b>.'");
		ШаблонЛогина = СтрШаблон(ШаблонЛогина, Логин);
		ШаблонПодсказки = СтрШаблон(ШаблонПодсказки, Логин);
	Иначе
		ШаблонЛогина    = НСтр("ru = 'Интернет-поддержка: требуется подключение.'");
		ШаблонПодсказки = НСтр("ru = 'Требуется подключение Интернет-поддержки в программе.
									 |Подключение организаций производится с присоединением к учетной записи Интернет-поддержки.'");
	КонецЕсли;
	Элементы.ДекорацияЛогинИПП.Заголовок = СтроковыеФункцииКлиентСервер.ФорматированнаяСтрока(ШаблонЛогина);
	Элементы.ДекорацияЛогинИПП.РасширеннаяПодсказка.Заголовок = СтроковыеФункцииКлиентСервер.ФорматированнаяСтрока(ШаблонПодсказки);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПодключениеОрганизаций()
	
	СохраненПарольИнтернетПоддержки = Неопределено;
	ОбновитьДанныеАутентификации(СохраненПарольИнтернетПоддержки);
	
	Если Не СохраненПарольИнтернетПоддержки Тогда
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
			Новый ОписаниеОповещения("ПодключитьПослеПроверкиАутентификации", ЭтотОбъект), ЭтотОбъект);
	Иначе
		ПодключитьПослеПроверкиАутентификации(Неопределено, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьПослеПроверкиАутентификации(Знач ПараметрыАутентификации, Контекст) Экспорт
	
	ПараметрыКоманды = Неопределено;
	Если ТипЗнч(ПараметрыАутентификации)= Тип("Структура") Тогда
		Логин = ПараметрыАутентификации.Логин;
		Если ЗначениеЗаполнено(ПараметрыАутентификации.Пароль) Тогда
			ПараметрыКоманды = Новый Структура("ПараметрыАутентификации", ПараметрыАутентификации);
		Иначе
			Возврат;
		КонецЕсли;
	ИначеЕсли ПараметрыАутентификации <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ТребуетсяОбновитьИнтерфейс = Ложь;
	
	ПодключитьОрганизации(ПараметрыКоманды, ТребуетсяОбновитьИнтерфейс, Отказ);
	
	Если ТребуетсяОбновитьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ОбновитьИнтерфейс();
		#КонецЕсли
		ОбновитьПовторноИспользуемыеЗначения();
		Оповестить("Запись_НаборКонстант",, "ИспользоватьОбменБизнесСеть");
	КонецЕсли;
	
	Если Не Отказ Тогда
		Если ОдиночноеПодключение Тогда
			ТекстОповещения = НСтр("ru = 'Подключение организации успешно выполнено.'");
			СсылкаОповещения = ПолучитьНавигационнуюСсылку(Параметры.Ссылка);
			ОповеститьОбИзменении(Параметры.Ссылка);
		Иначе
			ТекстОповещения = НСтр("ru = 'Подключение организаций успешно выполнено.'");
			СсылкаОповещения = Неопределено;
		КонецЕсли;
		ПоказатьОповещениеПользователя(НСтр("ru = '1С:Бизнес-сеть'"), СсылкаОповещения, ТекстОповещения, 
			БиблиотекаКартинок.БизнесСеть);
	КонецЕсли;
	
	Если Не Отказ И ОдиночноеПодключение Тогда
		Закрыть();
	Иначе
		Элементы.Список.Обновить();
	КонецЕсли;
	
	ОбновитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСсылкиПодключения(МассивСсылок, Отказ)
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка,
	|	Организации.ИНН КАК ИНН
	|ИЗ
	|	&Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Организации1СБизнесСеть КАК Организации1СБизнесСеть
	|		ПО (Организации1СБизнесСеть.Организация = Организации.Ссылка)
	|ГДЕ
	|	Организации.Ссылка В(&МассивСсылок)
	|	И Организации1СБизнесСеть.Организация ЕСТЬ NULL";
	
	ИмяСправочникаОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяПрикладногоСправочника("Организации");
	ИННОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ИННОрганизации");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Организации.ИНН", "Организации."+ ИННОрганизации);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Организации", "Справочник." + ИмяСправочникаОрганизации);	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ТекстОшибки = НСтр("ru = 'Команда не может быть выполнена для выделенных строк.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	МассивСсылок.Очистить();
	Пока Выборка.Следующий() Цикл
		Если ПустаяСтрока(Выборка.ИНН) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнено свойство ""ИНН"" %1 ""%2"".'");
			ТекстОшибки = СтрШаблон(ТекстОшибки, 
				НРег(ИмяСправочникаОрганизации), Выборка.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Выборка.Ссылка);
		Иначе
			МассивСсылок.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивСсылок.Количество() = 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОтключениеОрганизаций(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОрганизацииВСервисЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОтключениеОрганизаций(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОрганизациюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОтключениеОрганизацииОдиночное(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьЗавершениеОдиночное(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОтключениеОрганизацииОдиночное(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПоСсылке(Ссылка)
	
	СокращенноеНаименованиеОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("СокращенноеНаименованиеОрганизации");
	ИННОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ИННОрганизации");
	КППОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("КППОрганизации");
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Наименование КАК Наименование,
	|	Организации.ИНН КАК ИНН,
	|	Организации.КПП КАК КПП,
	|	ВЫБОР
	|		КОГДА Организации1СБизнесСеть.Организация ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УчастникПодключен
	|ИЗ
	|	&Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Организации1СБизнесСеть КАК Организации1СБизнесСеть
	|		ПО Организации.Ссылка = Организации1СБизнесСеть.Организация
	|ГДЕ
	|	Организации.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Параметры.Ссылка);
	ИмяСправочникаОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяПрикладногоСправочника("Организации");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Организации", "Справочник."+ ИмяСправочникаОрганизации);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Организации.Наименование", "Организации."+ СокращенноеНаименованиеОрганизации);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Организации.ИНН", "Организации."+ ИННОрганизации);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Организации.КПП", "Организации."+ КППОрганизации);
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	УчастникПодключен = Ложь;
	
	УчастникНаименование = "";
	УчастникИНН = "";
	УчастникКПП = "";
	
	Если Выборка.Следующий() Тогда
		УчастникНаименование = Выборка.Наименование;
		УчастникИНН = Выборка.ИНН;
		УчастникКПП = Выборка.КПП;
		УчастникПодключен = Выборка.УчастникПодключен;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьДоступностьЭлементов()
	
	Элементы.ПодсказкаУсловияОдиночное.Видимость = ОдиночноеПодключение;
	Элементы.ГруппаОдиночное.Видимость = ОдиночноеПодключение;
	Элементы.ГруппаСписок.Видимость = Не ОдиночноеПодключение;
	Элементы.ПодсказкаУсловияСписок.Видимость = Не ОдиночноеПодключение;
	Элементы.ГруппаОтключенияОдиночное.Видимость = ОдиночноеПодключение;
	Элементы.ГруппаУчастникПодключен.Видимость = УчастникПодключен;
	Элементы.Подключить.Доступность = Не УчастникПодключен;
	Элементы.ГруппаОтключенияОдиночное.Доступность = УчастникПодключен;
	Элементы.ГруппаКПП.Видимость = ЗначениеЗаполнено(УчастникКПП);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьВидимостьДоступностьЭлементов();

КонецПроцедуры

&НаСервере
Процедура ИнициализацияДинамическогоСписка()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Организации1СБизнесСеть.Организация ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Подключено,
	|	Организации.ИНН КАК ИНН,
	|	Организации.КПП КАК КПП
	|ИЗ
	|	&Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Организации1СБизнесСеть КАК Организации1СБизнесСеть
	|		ПО Организации.Ссылка = Организации1СБизнесСеть.Организация";
	
	ИмяСправочникаОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяПрикладногоСправочника("Организации");
	ИННОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ИННОрганизации");
	КППОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("КППОрганизации");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Организации", "Справочник." + ИмяСправочникаОрганизации);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".ИНН", "." + ИННОрганизации);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".КПП", "." + КППОрганизации);
	
	Список.ТекстЗапроса = ТекстЗапроса;
	Список.ОсновнаяТаблица = "Справочник." + ИмяСправочникаОрганизации;
	Список.ДинамическоеСчитываниеДанных = Истина;
	
КонецПроцедуры
 
&НаСервере
Процедура ПодключитьОрганизации(ПараметрыКоманды, ТребуетсяОбновитьИнтерфейс, Отказ)
	
	ОтобразитьСостояниеПодключенияИПП();
	
	Если ОдиночноеПодключение Тогда
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Параметры.Ссылка);
	Иначе
		МассивСсылок = Элементы.Список.ВыделенныеСтроки;
		ПроверитьСсылкиПодключения(МассивСсылок, Отказ);
	КонецЕсли;
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	БизнесСеть.ПодключитьОрганизации(МассивСсылок, Отказ, ПараметрыКоманды, ТребуетсяОбновитьИнтерфейс)
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОтключениеОрганизаций(РежимУдаленияВСервисе)
	
	Отказ = Ложь;
	МассивСсылок = Элементы.Список.ВыделенныеСтроки;
	
	ТребуетсяОбновитьИнтерфейс = Ложь;
	БизнесСетьВызовСервера.ОтключитьОрганизации(МассивСсылок, РежимУдаленияВСервисе, Отказ, ТребуетсяОбновитьИнтерфейс);

	Если ТребуетсяОбновитьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ОбновитьИнтерфейс();
		#КонецЕсли
	 	ОбновитьПовторноИспользуемыеЗначения();
		Оповестить("Запись_НаборКонстант",, "ИспользоватьОбменБизнесСеть");
	КонецЕсли;
	
	Если Не Отказ Тогда
		Если РежимУдаленияВСервисе Тогда
			ТекстОповещения = НСтр("ru = 'Удаление организаций в сервисе успешно выполнено.'");
		Иначе
			ТекстОповещения = НСтр("ru = 'Отключение организаций в программе успешно выполнено.'");
		КонецЕсли;
		ПоказатьОповещениеПользователя(НСтр("ru = '1С:Бизнес-сеть'"),, ТекстОповещения, БиблиотекаКартинок.БизнесСеть);
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОтключениеОрганизацииОдиночное(РежимУдаленияВСервисе)
	
	Отказ = Ложь;
	Массив = Новый Массив;
	Массив.Добавить(Параметры.Ссылка);
	ТребуетсяОбновитьИнтерфейс = Ложь;
	БизнесСетьВызовСервера.ОтключитьОрганизации(Массив, РежимУдаленияВСервисе, Отказ, ТребуетсяОбновитьИнтерфейс);

	Если ТребуетсяОбновитьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ОбновитьИнтерфейс();
		#КонецЕсли
	 	ОбновитьПовторноИспользуемыеЗначения();
		Оповестить("Запись_НаборКонстант",, "ИспользоватьОбменБизнесСеть");
	КонецЕсли;
	
	Если Не Отказ Тогда
		Если РежимУдаленияВСервисе Тогда
			ТекстОповещения = НСтр("ru = 'Удаление организации в сервисе успешно выполнено.'");
		Иначе
			ТекстОповещения = НСтр("ru = 'Отключение организации в программе успешно выполнено.'");
		КонецЕсли;
		ПоказатьОповещениеПользователя(НСтр("ru = '1С:Бизнес-сеть'"),, ТекстОповещения, БиблиотекаКартинок.БизнесСеть);
		УчастникПодключен = Истина;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти
