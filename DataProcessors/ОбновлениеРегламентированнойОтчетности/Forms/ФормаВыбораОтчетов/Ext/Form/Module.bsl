
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоОбновляемыхОтчетов = Параметры.ДеревоОтчетов;

	// Если список одноуровневый, то показывать иерархию не будем
	Элементы.Дерево.Отображение = ОтображениеТаблицы.Список;

	Для Каждого Строка Из ДеревоОбновляемыхОтчетов.ПолучитьЭлементы() Цикл
		Если Строка.ПолучитьЭлементы().Количество() > 0 Тогда
			Элементы.Дерево.Отображение = ОтображениеТаблицы.Дерево;

			Прервать;
		КонецЕсли;
	КонецЦикла;

	КопироватьДанныеФормы(ДеревоОбновляемыхОтчетов, Дерево);
			
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМеткаВыбораПриИзменении(Элемент)
	
	Если Элементы.Дерево.ТекущиеДанные.МеткаВыбора = 2 Тогда
		Элементы.Дерево.ТекущиеДанные.МеткаВыбора = 0;
	КонецЕсли;
		
	НоваяПометка       = Элементы.Дерево.ТекущиеДанные.МеткаВыбора;
	ВерхняяГруппировка = Элементы.Дерево.ТекущиеДанные.ПолучитьРодителя();

	Если ВерхняяГруппировка <> Неопределено Тогда
		// Проверяем все вложенные строки на предмет
		// того, установлены или сняты ли везде метки.
		// Если нет, то устанавливаем третье состояние
		// метки строки-родителя 
		НеВсеОтмечены = 0;

		Для каждого СтрокаУровня Из ВерхняяГруппировка.ПолучитьЭлементы() Цикл

			Если СтрокаУровня.МеткаВыбора <> НоваяПометка Тогда
				НеВсеОтмечены = 1;

				Прервать;
			КонецЕсли; 

		КонецЦикла; 

		Если НеВсеОтмечены = 1 Тогда
			ВерхняяГруппировка.МеткаВыбора = 2;
		Иначе
			ВерхняяГруппировка.МеткаВыбора = НоваяПометка;
		КонецЕсли;

	КонецЕсли;

	Для Каждого Строка Из Элементы.Дерево.ТекущиеДанные.ПолучитьЭлементы() Цикл
		Строка.МеткаВыбора = НоваяПометка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсе(Команда)
	
	УстановитьПометкуСтрокДерева(1);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	УстановитьПометкуСтрокДерева(0);
	
КонецПроцедуры

// Процедура устанавливает (снимает) метки у всех строк дерева.
//
// Параметры:
//  Пометка - число, состояние метки.
//
&НаКлиенте
Процедура УстановитьПометкуСтрокДерева(Пометка)

	Для Каждого СтрокаУровня1 Из Дерево.ПолучитьЭлементы() Цикл

		СтрокаУровня1.МеткаВыбора = Пометка;

		// для вложенных в группу элементов устанавливаем метку
		// выбора в соответствии со состоянием метки группы
		Если СтрокаУровня1.ПолучитьЭлементы().Количество() > 0 Тогда
			Для Каждого СтрокаУровня2 Из СтрокаУровня1.ПолучитьЭлементы() Цикл
				СтрокаУровня2.МеткаВыбора = Пометка;
			КонецЦикла;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если ПроверкаВыбораОтчетов() = 0 Тогда
		Возврат;
	КонецЕсли;

	// в качестве возвращаемого значения принимает
	// дерево значений с помеченными для обновления
	// отчетами
	//
	Закрыть(Дерево);
	
КонецПроцедуры

// Проверяет наличие в списке отмеченных для обновления отчетов.
//
// Возвращаемое значение:
//   число   - 0,       если не выбран ни один отчет;
//             1 или 2, если имеются помеченные.
//
&НаКлиенте
Функция ПроверкаВыбораОтчетов()

	мЕстьВыбранные = 0;
	ДеревоОтчетов  = Дерево;

	Для Каждого СтрокаУровня1 Из ДеревоОтчетов.ПолучитьЭлементы() Цикл
		мЕстьВыбранные = СтрокаУровня1.МеткаВыбора;

		Если СтрокаУровня1.ПолучитьЭлементы().Количество() > 0 Тогда

			Для Каждого СтрокаУровня2 Из СтрокаУровня1.ПолучитьЭлементы() Цикл
				мЕстьВыбранные = СтрокаУровня2.МеткаВыбора;

				Если мЕстьВыбранные <> 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;

		КонецЕсли;

		Если мЕстьВыбранные <> 0 Тогда
			Прервать;
		КонецЕсли;

	КонецЦикла;

	Если мЕстьВыбранные = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = НСтр("ru='Не выбраны отчеты для обновления!'");

		Сообщение.Сообщить();
		
	КонецЕсли;

	Возврат мЕстьВыбранные;

КонецФункции

#КонецОбласти