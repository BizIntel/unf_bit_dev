
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Параметр ПараметрПечати создан как обход ошибки платформы 8.3.5. при создании реквизита формы.
	
	ЗагрузитьНастройкиОтбораПоУмолчанию();
	
	Если ЗначениеЗаполнено(Параметры.АдресВХранилище) Тогда
		
		СтруктураДанных = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
		
		Объект.ИсходныеДанные.Загрузить(СтруктураДанных.Запасы);
		
		Если ЗначениеЗаполнено(СтруктураДанных.СтруктураДействий) Тогда
			
			ПараметрДействия = Неопределено;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьОрганизацию", ПараметрДействия) Тогда
				Объект.Организация = ПараметрДействия;
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьСклад", ПараметрДействия) Тогда
				УстановитьЭлементОтбораСКД(КомпоновщикНастроек, "СтруктурнаяЕдиница", ПараметрДействия, Истина);
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьВидЦен", ПараметрДействия) Тогда
				Объект.ВидЦен = ПараметрДействия;
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ПоказыватьКолонкуКоличествоВДокументе", ПараметрДействия) Тогда
				Элементы.ЗапасыКоличествоВДокументе.Видимость = ПараметрДействия;
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("УстановитьРежимПечатиИзДокумента", ПараметрДействия) Тогда
				ПечатьИзДокумента = Истина;
				Элементы.Настройки.Видимость = Ложь;
			КонецЕсли;
			
			ЗаполнитьКоличествоЭтикетокПоДокументу        = СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьКоличествоЭтикетокПоДокументу", ПараметрДействия);
			ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе = СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе", ПараметрДействия);
			ЗаполнитьКоличествоЦенниковПоДокументу        = СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьКоличествоЦенниковПоДокументу", ПараметрДействия);
			ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе = СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе", ПараметрДействия);
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьТаблицуТоваров", ПараметрДействия) Тогда
				ЗаполнитьТаблицуТоваровНаСервере(Ложь);
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("УстановитьРежим", ПараметрДействия) Тогда
				УстановитьРежим(ПараметрДействия);
			Иначе
				ВызватьИсключение НСтр("ru = 'Режим печати не установлен'");;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		// Вызов обработки из интерфейса
		ЗаполнитьКоличествоЭтикетокПоДокументу        = Ложь;
		ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе = Истина;
		ЗаполнитьКоличествоЦенниковПоДокументу        = Ложь;
		ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе = Истина;
		ЗначениеНастройки = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяОрганизация");
		Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
			Объект.Организация = ЗначениеНастройки;
		Иначе
			Объект.Организация = Справочники.Организации.ОсновнаяОрганизация;
		КонецЕсли;
		
		Если Константы.УчетПоКомпании.Получить() Тогда
			Объект.Организация = Константы.Компания.Получить();
		КонецЕсли;
		
		УстановитьРежимПечатьЦенниковИЭтикетокНаСервере();
		
	КонецЕсли;
	
	Если ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе
	И НЕ ЗаполнитьКоличествоЦенниковПоДокументу Тогда
		РежимЗаполненияЦенниковПереключатель = "Заполнять по остаткам";
	КонецЕсли;
	
	Если НЕ ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе
	И ЗаполнитьКоличествоЦенниковПоДокументу Тогда
		РежимЗаполненияЦенниковПереключатель = "Заполнять по документу";
	КонецЕсли;
	
	Если НЕ ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе
	И НЕ ЗаполнитьКоличествоЦенниковПоДокументу Тогда
		РежимЗаполненияЦенниковПереключатель = "Не заполнять";
	КонецЕсли;
	
	Если ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе
	И НЕ ЗаполнитьКоличествоЭтикетокПоДокументу Тогда
		РежимЗаполненияЭтикетокПереключатель = "Заполнять по остаткам";
	КонецЕсли;
	
	Если НЕ ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе
	И ЗаполнитьКоличествоЭтикетокПоДокументу Тогда
		РежимЗаполненияЭтикетокПереключатель = "Заполнять по документу";
	КонецЕсли;
	
	Если НЕ ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе
	И НЕ ЗаполнитьКоличествоЭтикетокПоДокументу Тогда
		РежимЗаполненияЭтикетокПереключатель = "Не заполнять";
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Если СохраненныеНастройки <> Неопределено Тогда
		
		Для Каждого КлючИЗначение Из СохраненныеНастройки Цикл
			// Обратное преобразование имени для хранения ключа соответствия для хранения в структуре
			ИмяКлюча = СтрЗаменить(КлючИЗначение.Ключ,"_QTQ_",".");
			ИмяКлюча = СтрЗаменить(ИмяКлюча,"_QPQ_"," ");
			Если ИмяКлюча = "_QQQ_" Тогда
				ИмяКлюча = "";
			КонецЕсли;
			Настройки.Вставить(ИмяКлюча, КлючИЗначение.Значение);
		КонецЦикла;
		
	Иначе
		
		// Сохранение отбора выполняется только если это не печать из документа
		Настройки.Вставить("НастройкиОтбора",Новый ХранилищеЗначения(КомпоновщикНастроек.Настройки));
		
	КонецЕсли;
	
КонецПроцедуры // ПриСохраненииДанныхВНастройкахНаСервере()

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Параметры.Свойство("АдресВХранилище") И ЗначениеЗаполнено(Параметры.АдресВХранилище) Тогда
		
		СохраненныеНастройки = Новый Структура;
		Для Каждого КлючИЗначение Из Настройки Цикл
			// Преобразование имени для хранения ключа соответствия для хранения в структуре
			ИмяКлюча = СтрЗаменить(КлючИЗначение.Ключ,".","_QTQ_");
			ИмяКлюча = СтрЗаменить(ИмяКлюча," ","_QPQ_");
			Если ИмяКлюча = "" Тогда
				ИмяКлюча = "_QQQ_";
			КонецЕсли;
			СохраненныеНастройки.Вставить(ИмяКлюча, КлючИЗначение.Значение);
		КонецЦикла;
		
		Настройки.Очистить();
		
	Иначе
		
		
		НастройкиОтбора = Настройки.Получить("НастройкиОтбора");
		Если НастройкиОтбора <> Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтбора.Получить());
		Иначе
			ЗагрузитьНастройкиОтбораПоУмолчанию();
		КонецЕсли;
		
		Объект.Режим = Настройки.Получить("Режим");
		Если ЗначениеЗаполнено(Объект.Режим) Тогда
			УстановитьРежим(Объект.Режим);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриЗагрузкеДанныхИзНастроекНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РежимЗаполненияЦенниковПереключательПриИзменении(Элемент)
	
	Если РежимЗаполненияЦенниковПереключатель = "Заполнять по остаткам" Тогда
		ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе = Истина;
		ЗаполнитьКоличествоЦенниковПоДокументу = Ложь;
	ИначеЕсли РежимЗаполненияЦенниковПереключатель = "Заполнять по документу" Тогда
		ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе = Ложь;
		ЗаполнитьКоличествоЦенниковПоДокументу = Истина;
	Иначе
		ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе = Ложь;
		ЗаполнитьКоличествоЦенниковПоДокументу = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимЗаполненияЭтикетокПереключательПриИзменении(Элемент)
	
	Если РежимЗаполненияЭтикетокПереключатель = "Заполнять по остаткам" Тогда
		ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе = Истина;
		ЗаполнитьКоличествоЭтикетокПоДокументу = Ложь;
	ИначеЕсли РежимЗаполненияЭтикетокПереключатель = "Заполнять по документу" Тогда
		ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе = Ложь;
		ЗаполнитьКоличествоЭтикетокПоДокументу = Истина;
	Иначе
		ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе = Ложь;
		ЗаполнитьКоличествоЭтикетокПоДокументу = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗапасы

&НаКлиенте
Процедура ЗапасыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ИмяЯчейки = Элемент.ТекущийЭлемент.Имя;
	Если ИмяЯчейки = "ЗапасыНоменклатура" или ИмяЯчейки = "ЗапасыХарактеристика" 
		или ИмяЯчейки = "ЗапасыПартия" Тогда
	
		ПоказатьЗначение(,Элементы.Запасы.ТекущиеДанные.Номенклатура);
	
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "КоличествоЦенников" табличной части "Запасы".
//
&НаКлиенте
Процедура ЗапасыКоличествоЦенниковПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Запасы.ТекущиеДанные;
	ТекущиеДанные.Выбран = ПроверитьВозможностьВыбораТовара(ТекущиеДанные, Объект.Режим);
	
КонецПроцедуры // ЗапасыКоличествоЦенниковПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "КоличествоЭтикеток" табличной части "Запасы".
//
&НаКлиенте
Процедура ЗапасыКоличествоЭтикетокПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Запасы.ТекущиеДанные;
	ТекущиеДанные.Выбран = ПроверитьВозможностьВыбораТовара(ТекущиеДанные, Объект.Режим);
	
КонецПроцедуры // ЗапасыКоличествоЭтикетокПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "ШаблонЦенника" табличной части "Запасы".
//
&НаКлиенте
Процедура ЗапасыШаблонЦенникаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Запасы.ТекущиеДанные;
	ТекущиеДанные.Выбран = ПроверитьВозможностьВыбораТовара(ТекущиеДанные, Объект.Режим);
	
КонецПроцедуры // ЗапасыШаблонЦенникаПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "ШаблонЭтикетки" табличной части "Запасы".
//
&НаКлиенте
Процедура ЗапасыШаблонЭтикеткиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Запасы.ТекущиеДанные;
	ТекущиеДанные.Выбран = ПроверитьВозможностьВыбораТовара(ТекущиеДанные, Объект.Режим);
	
КонецПроцедуры // ЗапасыШаблонЭтикеткиПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "Выбран" табличной части "Запасы".
//
&НаКлиенте
Процедура ЗапасыВыбранПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Запасы.ТекущиеДанные;
	ТекущаяСтрока = ТекущиеДанные.НомерСтроки - 1;
	
	Если ТекущиеДанные.Выбран Тогда
		
		ОчиститьСообщения();
		
		ТекущиеДанные.Выбран = Истина;
		
		Если Объект.Режим = "ПечатьЦенниковИЭтикеток" Тогда
			
			Если (ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
					
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество ценников'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЦенников";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И    ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
					
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не выбран шаблон ценника'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].ШаблонЦенника";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И    ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
					
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество этикеток'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЭтикеток";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И    ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
					
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не выбран шаблон этикетки'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].ШаблонЭтикетки";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (   ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И    ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество ценников и(или) этикеток'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЦенников";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И    ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И    ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не выбраны шаблоны ценников и(или) этикеток'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].ШаблонЦенника";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество ценников и(или) этикеток'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЦенников";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (   ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И    ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество ценников и(или) шаблон этикетки'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЦенников";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И    ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И    ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество этикеток и(или) шаблон ценника'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЭтикеток";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			КонецЕсли;
			
		ИначеЕсли Объект.Режим = "ПечатьЭтикеток" Тогда
			
			Если ТекущиеДанные.КоличествоЭтикеток = 0 Тогда
			
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество этикеток'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЭтикеток";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не выбран шаблон этикетки'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].ШаблонЭтикетки";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			КонецЕсли;
			
		ИначеЕсли Объект.Режим = "ПечатьЦенников" Тогда
			
			Если ТекущиеДанные.КоличествоЦенников = 0 Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество ценников'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЦенников";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не выбран шаблон ценника'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].ШаблонЦенника";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ЗапасыВыбранПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВыделенныеСтроки(Команда)
	
	Количество = 0;
	
	МассивСтрок = Элементы.Запасы.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		
		СтрокаТЧ = Объект.Запасы.НайтиПоИдентификатору(НомерСтроки);
		СтрокаТЧ.Выбран = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
		
		Если СтрокаТЧ.Выбран Тогда
			Количество = Количество + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	КоличествоВсего = МассивСтрок.Количество();
	
	ПоказатьОповещениеПользователюОВозможнойОшибке("", Количество, КоличествоВсего);
	
КонецПроцедуры // ВыбратьВыделенныеСтроки()

&НаКлиенте
Процедура ИсключитьВыделенныеСтроки(Команда)
	
	МассивСтрок = Элементы.Запасы.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		СтрокаТЧ = Объект.Запасы.НайтиПоИдентификатору(НомерСтроки);
		СтрокаТЧ.Выбран = Ложь;
	КонецЦикла;
	
КонецПроцедуры // ИсключитьВыделенныеСтроки()

&НаКлиенте
Процедура ЗаполнитьТаблицуЗапасов(Команда)
	
	ТекстВопроса = НСтр("ru = 'При перезаполнении все введенные вручную данные будут потеряны, продолжить?'");
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьТаблицуЗапасовЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуЗапасовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Объект.Запасы.Количество() = 0 ИЛИ КодВозвратаДиалога.Да = Результат Тогда
		ЗаполнитьТаблицуТоваровНаСервере();
	КонецЕсли;

КонецПроцедуры // ЗаполнитьТаблицуТоваров()

&НаКлиенте
Процедура ВыбратьСтроки()
	
	Количество = 0;
	
	Для Каждого СтрокаТЧ Из Объект.Запасы Цикл
		
		СтрокаТЧ.Выбран = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
		
		Если СтрокаТЧ.Выбран Тогда
			Количество = Количество + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	КоличествоВсего = Объект.Запасы.Количество();
	
	ПоказатьОповещениеПользователюОВозможнойОшибке("", Количество, КоличествоВсего);
	
КонецПроцедуры // ВыбратьСтроки()

&НаКлиенте
Процедура ИсключитьСтроки()
	
	Для Каждого СтрокаТЧ Из Объект.Запасы Цикл
		СтрокаТЧ.Выбран = Ложь
	КонецЦикла;
	
КонецПроцедуры // ИсключитьСтроки()

&НаКлиенте
Процедура Печать(Команда)
	
	НеобходимостьПечати = ПолучитьНеобходимостьПечатиМакетов();
	
	Если НЕ НеобходимостьПечати.ЕстьВыбранныеСтроки Тогда
		
		ПоказатьПредупреждение(Неопределено,НСтр("ru = 'Не выбрано ни одного товара'"));
		Возврат;
		
	КонецЕсли;
	
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		
		ДанныеПечати = Новый Массив;   // Добавим объект обработки печати этикеток и ценников в массив параметров печати.
		ДанныеПечати.Добавить(Объект); // В дальнейшем будем обращаться к объекту через ПараметрКоманды[0]
		
		ИменаМакетов = "";
		
		Если Объект.Режим = "ПечатьЦенниковИЭтикеток" Тогда
			Если НеобходимостьПечати.ЕстьЭтикеткиДляПечати
			   И НеобходимостьПечати.ЕстьЦенникиДляПечати Тогда
				ИменаМакетов = "Ценники,Этикетки";
			ИначеЕсли НеобходимостьПечати.ЕстьЭтикеткиДляПечати Тогда
				ИменаМакетов = "Этикетки";
			ИначеЕсли НеобходимостьПечати.ЕстьЦенникиДляПечати Тогда
				ИменаМакетов = "Ценники";
			КонецЕсли;
		ИначеЕсли Объект.Режим = "ПечатьЦенников"
			И НеобходимостьПечати.ЕстьЦенникиДляПечати Тогда
			ИменаМакетов = "Ценники";
		ИначеЕсли Объект.Режим = "ПечатьЭтикеток"
			И НеобходимостьПечати.ЕстьЭтикеткиДляПечати Тогда
			ИменаМакетов = "Этикетки";
		КонецЕсли;
		
		ПараметрыПечати =Новый Структура;
		ПараметрыПечати.Вставить("ЗаголовокФормы", НСтр("ru = 'Печать этикеток и ценников'"));
		ПараметрыПечати.Вставить("ДанныеПечати", ДанныеПечати);
		
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.ШаблоныЭтикетокИЦенников.ПустаяСсылка"));
		
		Если НеобходимостьПечати.НужноПечатать 
			И ЗначениеЗаполнено(ИменаМакетов) Тогда
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
				"Обработка.ПечатьЭтикетокИЦенников", 
				ИменаМакетов,
				ПараметрКоманды,
				ЭтаФорма, 
				ПараметрыПечати
			);
		КонецЕсли;
		
		ПараметрыОткрытия = Новый Структура();
		
		РежимПечати = "Ценники,Этикетки";
		Если Объект.Режим = "ПечатьЦенников" Тогда
			РежимПечати = "Ценники";
		ИначеЕсли Объект.Режим = "ПечатьЭтикеток" Тогда
			РежимПечати = "Этикетки";
		КонецЕсли;

		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("РежимПечати", РежимПечати);
		
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(Объект);
		
		ПараметрыПечати.Вставить("ПараметрКоманды", ПараметрКоманды);
		ПараметрыПечати.Вставить("Форма", Объект);
		ПараметрыПечати.Вставить("ПараметрыПечати", Новый Структура("Режим, РежимПечати", Объект.Режим, РежимПечати));
		ПараметрыОткрытия.Вставить("ПараметрыПечати", ПараметрыПечати);
		
		ПараметрыПечатиДляПринтераЭтикеток = Новый Структура;
		
		ОбъектыПечати = Новый Массив;
		ОбъектыПечати.Добавить(Объект);
		
		ПараметрыПечатиДляПринтераЭтикеток.Вставить("ОбъектыПечати", ОбъектыПечати);
		ПараметрыПечатиДляПринтераЭтикеток.Вставить("МенеджерПечати", "Обработка.ПечатьЭтикетокИЦенников");
		ПараметрыПечатиДляПринтераЭтикеток.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
		ПараметрыОткрытия.Вставить("ПараметрыПечатиДляПринтераЭтикеток", ПараметрыПечатиДляПринтераЭтикеток);
		
		ОткрытьФорму("Обработка.ПечатьЭтикетокИЦенников.Форма.ФормаПечать", ПараметрыОткрытия, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры // Печать()

&НаКлиенте
Процедура УстановитьКоличествоЦенников(Команда)
	
	ВыбранноеЗначение = Неопределено;
	ПоказатьВводЧисла(Новый ОписаниеОповещения("УстановитьКоличествоЦенниковЗавершение", ЭтотОбъект, Новый Структура("ВыбранноеЗначение", ВыбранноеЗначение)), ВыбранноеЗначение, НСтр("ru = 'Введите количество ценников'"), 10, 2);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКоличествоЦенниковЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ?(Результат = Неопределено, ДополнительныеПараметры.ВыбранноеЗначение, Результат);
	
	
	Если (Результат <> Неопределено) Тогда
		
		Количество = 0;
		
		МассивСтрок = Элементы.Запасы.ВыделенныеСтроки;
		Для Каждого НомерСтроки Из МассивСтрок Цикл
			СтрокаТЧ = Объект.Запасы.НайтиПоИдентификатору(НомерСтроки);
			СтрокаТЧ.КоличествоЦенников  = ВыбранноеЗначение;
			СтрокаТЧ.Выбран              = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
			
			Если СтрокаТЧ.Выбран Тогда
				Количество = Количество + 1;
			КонецЕсли;
			
		КонецЦикла;
		
		КоличествоВсего = МассивСтрок.Количество();
		
		Текст = НСтр("ru = 'Установлено количество ценников %Количество%.'");
		Текст = СтрЗаменить(Текст, "%Количество%", ВыбранноеЗначение);
		
		ПоказатьОповещениеПользователюОВозможнойОшибке(Текст, Количество, КоличествоВсего);
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьКоличествоЦенников()

&НаКлиенте
Процедура УстановитьКоличествоЭтикеток(Команда)
	
	ВыбранноеЗначение = Неопределено;
	ПоказатьВводЧисла(Новый ОписаниеОповещения("УстановитьКоличествоЭтикетокЗавершение", ЭтотОбъект, Новый Структура("ВыбранноеЗначение", ВыбранноеЗначение)), ВыбранноеЗначение, "Введите количество", 10, 2);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКоличествоЭтикетокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ?(Результат = Неопределено, ДополнительныеПараметры.ВыбранноеЗначение, Результат);
	
	
	Если (Результат <> Неопределено) Тогда
		
		Количество = 0;
		
		МассивСтрок = Элементы.Запасы.ВыделенныеСтроки;
		Для Каждого НомерСтроки Из МассивСтрок Цикл
			СтрокаТЧ = Объект.Запасы.НайтиПоИдентификатору(НомерСтроки);
			СтрокаТЧ.КоличествоЭтикеток  = ВыбранноеЗначение;
			СтрокаТЧ.Выбран              = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
			
			Если СтрокаТЧ.Выбран Тогда
				Количество = Количество + 1;
			КонецЕсли;
			
		КонецЦикла;
		
		КоличествоВсего = МассивСтрок.Количество();
		
		Текст = НСтр("ru = 'Установлено количество этикеток %Количество%.'");
		Текст = СтрЗаменить(Текст, "%Количество%", ВыбранноеЗначение);
		
		ПоказатьОповещениеПользователюОВозможнойОшибке(Текст, Количество, КоличествоВсего);
		
	КонецЕсли;

КонецПроцедуры // УстановитьКоличествоЭтикеток()

&НаКлиенте
Процедура УстановитьШаблонЦенников(Команда)
	
	ВыбранноеЗначение = Неопределено;
	ПоказатьВводЗначения(Новый ОписаниеОповещения("УстановитьШаблонЦенниковЗавершение", ЭтотОбъект, Новый Структура("ВыбранноеЗначение", ВыбранноеЗначение)), ВыбранноеЗначение, "Выбор шаблона ценника", Тип("СправочникСсылка.ШаблоныЭтикетокИЦенников"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьШаблонЦенниковЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ?(Результат = Неопределено, ДополнительныеПараметры.ВыбранноеЗначение, Результат);
	
	
	Если (Результат <> Неопределено) Тогда
		
		Количество = 0;
		
		МассивСтрок = Элементы.Запасы.ВыделенныеСтроки;
		Для Каждого НомерСтроки Из МассивСтрок Цикл
			СтрокаТЧ = Объект.Запасы.НайтиПоИдентификатору(НомерСтроки);
			СтрокаТЧ.ШаблонЦенника  = ВыбранноеЗначение;
			СтрокаТЧ.Выбран         = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
			
			Если СтрокаТЧ.Выбран Тогда
				Количество = Количество + 1;
			КонецЕсли;
			
		КонецЦикла;
		
		КоличествоВсего = МассивСтрок.Количество();
		
		Текст = НСтр("ru = 'Установлен шаблон ""%Шаблон%"".'");
		Текст = СтрЗаменить(Текст, "%Шаблон%", ВыбранноеЗначение);
		
		ПоказатьОповещениеПользователюОВозможнойОшибке(Текст, Количество, КоличествоВсего);
		
	КонецЕсли;

КонецПроцедуры // УстановитьШаблонЦенников()

&НаКлиенте
Процедура УстановитьШаблонЭтикеток(Команда)
	
	ВыбранноеЗначение = Неопределено;
	ПоказатьВводЗначения(Новый ОписаниеОповещения("УстановитьШаблонЭтикетокЗавершение", ЭтотОбъект, Новый Структура("ВыбранноеЗначение", ВыбранноеЗначение)), ВыбранноеЗначение, "Выбор шаблона этикетки", Тип("СправочникСсылка.ШаблоныЭтикетокИЦенников"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьШаблонЭтикетокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ?(Результат = Неопределено, ДополнительныеПараметры.ВыбранноеЗначение, Результат);
	
	
	Если (Результат <> Неопределено) Тогда
		
		Количество = 0;
		
		МассивСтрок = Элементы.Запасы.ВыделенныеСтроки;
		Для Каждого НомерСтроки Из МассивСтрок Цикл
			СтрокаТЧ = Объект.Запасы.НайтиПоИдентификатору(НомерСтроки);
			СтрокаТЧ.ШаблонЭтикетки = ВыбранноеЗначение;
			СтрокаТЧ.Выбран         = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
			
			Если СтрокаТЧ.Выбран Тогда
				Количество = Количество + 1;
			КонецЕсли;
			
		КонецЦикла;
		
		КоличествоВсего = МассивСтрок.Количество();
		
		Текст = НСтр("ru = 'Установлен шаблон ""%Шаблон%"".'");
		Текст = СтрЗаменить(Текст, "%Шаблон%", ВыбранноеЗначение);
		
		ПоказатьОповещениеПользователюОВозможнойОшибке(Текст, Количество, КоличествоВсего);
		
	КонецЕсли;

КонецПроцедуры // УстановитьШаблонЭтикеток()

#КонецОбласти

#Область УправлениеРежимомПечати

// Процедура устанавливает видимость элементов в зависимости от настройки параметров формы
//
&НаСервере
Процедура ОбновитьВидимостьЭлементов()
	
	ВидимостьЭтикетки = Ложь;
	ВидимостьЦенники  = Ложь;
		
	Если Объект.Режим = "ПечатьЦенниковИЭтикеток" Тогда
		ВидимостьЭтикетки = Истина;
		ВидимостьЦенники  = Истина;
	ИначеЕсли Объект.Режим = "ПечатьЦенников" Тогда
		ВидимостьЭтикетки = Ложь;
		ВидимостьЦенники  = Истина;
	ИначеЕсли Объект.Режим = "ПечатьЭтикеток" Тогда
		ВидимостьЭтикетки = Истина;
		ВидимостьЦенники  = Ложь;
	КонецЕсли;
	
	Если ПечатьИзДокумента Тогда
		Элементы.ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе.Видимость = Ложь;
		Элементы.РежимЗаполненияЭтикетокПереключатель.Видимость = ВидимостьЭтикетки;
	Иначе
		Элементы.ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе.Видимость = ВидимостьЭтикетки;
		Элементы.РежимЗаполненияЭтикетокПереключатель.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ЗапасыКоличествоЭтикеток.Видимость               = ВидимостьЭтикетки;
	Элементы.ЗапасыШаблонЭтикетки.Видимость                   = ВидимостьЭтикетки;
	Элементы.ЗапасыУстановитьШаблонЭтикеток.Видимость         = ВидимостьЭтикетки;
	Элементы.ЗапасыУстановитьКоличествоЭтикеток.Видимость     = ВидимостьЭтикетки;
	
	Если ПечатьИзДокумента Тогда
		Элементы.ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе.Видимость = Ложь;
		Элементы.РежимЗаполненияЦенниковПереключатель.Видимость = ВидимостьЦенники;
	Иначе
		Элементы.ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе.Видимость = ВидимостьЦенники;
		Элементы.РежимЗаполненияЦенниковПереключатель.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ЗапасыКоличествоЦенников.Видимость               = ВидимостьЦенники;
	Элементы.ЗапасыШаблонЦенника.Видимость                    = ВидимостьЦенники;
	Элементы.ЗапасыУстановитьШаблонЦенников.Видимость         = ВидимостьЦенники;
	Элементы.ЗапасыУстановитьКоличествоЦенников.Видимость     = ВидимостьЦенники;
	
	Для каждого ТекСтрока Из Объект.Запасы Цикл
		ТекСтрока.Выбран = ПроверитьВозможностьВыбораТовара(ТекСтрока, Объект.Режим);
	КонецЦикла;
	
КонецПроцедуры // ОбновитьВидимостьЭлементов()

// Процедура устанавливает режим "ПечатьЦенников" на сервере.
//
&НаСервере
Процедура УстановитьРежимПечатьЦенниковНаСервере()
	
	АвтоЗаголовок = Ложь;
	Объект.Режим = "ПечатьЦенников";
	
	Если ПечатьИзДокумента Тогда
		Заголовок = "Печать ценников из документа";
	Иначе
		Заголовок = "Печать ценников";
	КонецЕсли;
	
	ОбновитьВидимостьЭлементов();
	
КонецПроцедуры // УстановитьРежимПечатьЦенниковНаСервере()

// Процедура - обработчик команды "УстановитьРежимПечатьЦенников".
//
&НаКлиенте
Процедура УстановитьРежимПечатьЦенников(Команда)
	
	УстановитьРежимПечатьЦенниковНаСервере();
	
КонецПроцедуры // УстановитьРежимПечатьЦенников()

// Процедура устанавливает режим "ПечатьЦенниковИЭтикеток" на сервере.
//
&НаСервере
Процедура УстановитьРежимПечатьЦенниковИЭтикетокНаСервере()
	
	АвтоЗаголовок = Ложь;
	Объект.Режим = "ПечатьЦенниковИЭтикеток";
	
	Если ПечатьИзДокумента Тогда
		Заголовок = "Печать этикеток и ценников из документа";
	Иначе
		Заголовок = "Печать этикеток и ценников";
	КонецЕсли;
	
	ОбновитьВидимостьЭлементов();
	
КонецПроцедуры // УстановитьРежимПечатьЦенниковИЭтикетокНаСервере()

// Процедура - обработчик команды "УстановитьРежимПечатьЦенниковИЭтикеток".
//
&НаКлиенте
Процедура УстановитьРежимПечатьЦенниковИЭтикеток(Команда)
	
	УстановитьРежимПечатьЦенниковИЭтикетокНаСервере();
	
КонецПроцедуры // УстановитьРежимПечатьЦенниковИЭтикеток()

// Процедура устанавливает режим "ПечатьЭтикеток" на сервере.
//
&НаСервере
Процедура УстановитьРежимПечатьЭтикетокНаСервере()
	
	АвтоЗаголовок = Ложь;
	Объект.Режим = "ПечатьЭтикеток";
	
	Если ПечатьИзДокумента Тогда
		Заголовок = "Печать этикеток из документа";
	Иначе
		Заголовок = "Печать этикеток";
	КонецЕсли;
	
	ОбновитьВидимостьЭлементов();
	
КонецПроцедуры // УстановитьРежимПечатьЭтикетокНаСервере()

// Процедура - обработчик команды "УстановитьРежимПечатьЭтикеток".
//
&НаКлиенте
Процедура УстановитьРежимПечатьЭтикеток(Команда)
	
	УстановитьРежимПечатьЭтикетокНаСервере();
	
КонецПроцедуры // УстановитьРежимПечатьЭтикеток()

// Процедура выполняет установку выбранного режима печати
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура УстановитьРежим(ПараметрРежим)
	
	Если ПараметрРежим = "ПечатьЦенниковИЭтикеток" Тогда
		УстановитьРежимПечатьЦенниковИЭтикетокНаСервере();
	ИначеЕсли ПараметрРежим = "ПечатьЦенников" Тогда
		УстановитьРежимПечатьЦенниковНаСервере();
	ИначеЕсли ПараметрРежим = "ПечатьЭтикеток" Тогда
		УстановитьРежимПечатьЭтикетокНаСервере();
	Иначе
		ВызватьИсключение НСтр("ru = 'Установленный режим печати не поддерживается'");
	КонецЕсли;
	
КонецПроцедуры // УстановитьРежим()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция УстановитьЭлементОтбораСКД(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра, Использование = Истина)

	НайденныйЭлемент = Неопределено;
	
	Поле = Новый ПолеКомпоновкиДанных(ИмяПараметра);
	
	Отбор = КомпоновщикНастроек.Настройки.Отбор;
	Для каждого ЭлементОтбора Из Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Поле Тогда
			НайденныйЭлемент = ЭлементОтбора;
		КонецЕсли;
	КонецЦикла;
	
	Если НайденныйЭлемент = Неопределено Тогда
		НайденныйЭлемент = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеПараметра) = Тип("Массив") Тогда
		НайденныйЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		СписокЗначений = Новый СписокЗначений;
		СписокЗначений.ЗагрузитьЗначения(ЗначениеПараметра);
		ПравоеЗначение = СписокЗначений;
	Иначе
		НайденныйЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ПравоеЗначение = ЗначениеПараметра;
	КонецЕсли;
	
	НайденныйЭлемент.Использование  = Использование;
	НайденныйЭлемент.ЛевоеЗначение  = Поле;
	НайденныйЭлемент.ПравоеЗначение = ПравоеЗначение;
	
	Возврат НайденныйЭлемент;

КонецФункции // НайтиЭлементОтбораСКД()

// Процедура выполняет загрузку настроек отбора из настроек по умолчанию.
//
&НаСервере
Процедура ЗагрузитьНастройкиОтбораПоУмолчанию()
	
	СхемаКомпоновкиДанных = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет("ПоляШаблона");
	КомпоновщикНастроек.Инициализировать(
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор))
	);
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
КонецПроцедуры // ЗагрузитьНастройкиОтбораПоУмолчанию()

&НаСервере
Функция ПолучитьНеобходимостьПечатиМакетов()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("НужноПечатать", Ложь);
	СтруктураВозврата.Вставить("ЕстьЭтикеткиДляПечати", Ложь);
	СтруктураВозврата.Вставить("ЕстьЦенникиДляПечати", Ложь);
	
	ИсходныеДанные = Объект.Запасы.Выгрузить(Новый Структура("Выбран", Истина), "Номенклатура, Характеристика, Партия, Штрихкод, КоличествоЦенников, ШаблонЦенника, КоличествоЭтикеток, ШаблонЭтикетки");
	СтруктураВозврата.Вставить("ЕстьВыбранныеСтроки", ИсходныеДанные.Количество() > 0);
	
	Для каждого СтрокаТЧ Из ИсходныеДанные Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.ШаблонЭтикетки) И СтрокаТЧ.КоличествоЭтикеток > 0 И СтрокаТЧ.ШаблонЭтикетки.ТипШаблона <> Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
			СтруктураВозврата.НужноПечатать = Истина;
			СтруктураВозврата.ЕстьЭтикеткиДляПечати = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТЧ.ШаблонЦенника) И СтрокаТЧ.КоличествоЦенников > 0 И СтрокаТЧ.ШаблонЦенника.ТипШаблона <> Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
			СтруктураВозврата.НужноПечатать = Истина;
			СтруктураВозврата.ЕстьЦенникиДляПечати = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Функция ПоказатьОповещениеПользователюОВозможнойОшибке(Текст, Количество, КоличествоВсего)
	
	Если Количество < КоличествоВсего Тогда
		
		Текст = Текст
		        + ?(Текст <> "", Символы.ПС, "")
		        + НСтр("ru = 'Отметка выбора установлена для %КоличествоВыбранных% строк из %КоличествоВсего%.'");
	
		Текст = Текст
		        + Символы.ПС
		        + НСтр("ru = 'Проверьте: не заполнены либо количество, либо не задан шаблон ценника (этикетки). В этом случае отметка выбора для строк не может быть установлена.'");
	
		Текст = СтрЗаменить(Текст, "%КоличествоВыбранных%", Количество);
		Текст = СтрЗаменить(Текст, "%КоличествоВсего%", КоличествоВсего);
		
		ПоказатьОповещениеПользователя("Операция выполнена", ,Текст);
	
	КонецЕсли;
	
КонецФункции // ПолучитьТекстПроверки()

&НаСервере
Процедура ЗаполнитьТаблицуТоваровНаСервере(ПроверятьЗаполнение = Истина)
	
	Если ПроверятьЗаполнение И ЭтаФорма.ПроверитьЗаполнение() = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	// Поля необходимые для вывода в таблицу товаров на форме.
	СтруктураНастроек = Обработки.ПечатьЭтикетокИЦенников.ПолучитьПустуюСтруктуруНастроек();
	
	СтруктураНастроек.ОбязательныеПоля.Добавить("Цена");
	СтруктураНастроек.ОбязательныеПоля.Добавить("Штрихкод");
	СтруктураНастроек.ОбязательныеПоля.Добавить("Количество");
	СтруктураНастроек.ОбязательныеПоля.Добавить("Номенклатура");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
		СтруктураНастроек.ОбязательныеПоля.Добавить("Характеристика");
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартии") Тогда
		СтруктураНастроек.ОбязательныеПоля.Добавить("Партия");
	КонецЕсли;
	СтруктураНастроек.ОбязательныеПоля.Добавить("ОстатокНаСкладе");
	
	// Шаблоны этикеток и ценников.
	СтруктураНастроек.ОбязательныеПоля.Добавить("Номенклатура.ВидНоменклатуры.ШаблонЭтикетки");
	СтруктураНастроек.ОбязательныеПоля.Добавить("Номенклатура.ВидНоменклатуры.ШаблонЦенника");
	
	СтруктураНастроек.ПараметрыДанных.Вставить("ВидЦен"    , Объект.ВидЦен);
	СтруктураНастроек.ПараметрыДанных.Вставить("СтруктурнаяЕдиница", Объект.СтруктурнаяЕдиница);
	СтруктураНастроек.ПараметрыДанных.Вставить("Организация", УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Объект.Организация));
	СтруктураНастроек.КомпоновщикНастроек = КомпоновщикНастроек;
	
	Если Объект.ИсходныеДанные.Количество() > 0 ИЛИ ПечатьИзДокумента Тогда
		СтруктураНастроек.ИмяМакетаСхемыКомпоновкиДанных = "ПоляШаблонаДокумент";
		СтруктураНастроек.ИсходныеДанные = Объект.ИсходныеДанные.Выгрузить();
	Иначе
		СтруктураНастроек.ИмяМакетаСхемыКомпоновкиДанных = "ПоляШаблонаБД";
	КонецЕсли;
	
	Объект.Запасы.Очистить();
	
	// Загрузка сформированного списка товаров.
	СтруктураРезультата = Обработки.ПечатьЭтикетокИЦенников.ПодготовитьСтруктуруДанных(СтруктураНастроек);
	Для Каждого СтрокаТЧ Из СтруктураРезультата.ТаблицаТоваров Цикл
		
		НоваяСтрока = Объект.Запасы.Добавить();
		НоваяСтрока.Номенклатура         = СтрокаТЧ.Номенклатура;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
			НоваяСтрока.Характеристика       = СтрокаТЧ.Характеристика;
		КонецЕсли;
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартии") Тогда
			НоваяСтрока.Партия             = СтрокаТЧ.Партия;
		КонецЕсли;
		
		НоваяСтрока.Цена                 = СтрокаТЧ.Цена;
		НоваяСтрока.Штрихкод             = СтрокаТЧ.Штрихкод;
		НоваяСтрока.ОстатокНаСкладе      = СтрокаТЧ.ОстатокНаСкладе;
		НоваяСтрока.КоличествоВДокументе = СтрокаТЧ.Количество;
		
		// Расчет количества Этикеток.
		Если ЗаполнитьКоличествоЭтикетокПоДокументу И НЕ ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе Тогда
			НоваяСтрока.КоличествоЭтикеток = НоваяСтрока.КоличествоВДокументе;
		ИначеЕсли ЗаполнитьКоличествоЭтикетокПоДокументу И ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе Тогда
			НоваяСтрока.КоличествоЭтикеток = ?(НоваяСтрока.КоличествоВДокументе > НоваяСтрока.ОстатокНаСкладе,НоваяСтрока.ОстатокНаСкладе,НоваяСтрока.КоличествоВДокументе);
		ИначеЕсли НЕ ЗаполнитьКоличествоЭтикетокПоДокументу И ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе Тогда
			НоваяСтрока.КоличествоЭтикеток = ?(НоваяСтрока.ОстатокНаСкладе > 0, НоваяСтрока.ОстатокНаСкладе, 0);
		КонецЕсли;
		
		// Расчет количества Ценников.
		Если ЗаполнитьКоличествоЦенниковПоДокументу И НЕ ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе Тогда
			НоваяСтрока.КоличествоЦенников = 1;
		ИначеЕсли ЗаполнитьКоличествоЦенниковПоДокументу И ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе Тогда
			НоваяСтрока.КоличествоЦенников = ?(НоваяСтрока.ОстатокНаСкладе > 0, 1, 0);
		ИначеЕсли НЕ ЗаполнитьКоличествоЦенниковПоДокументу И ЗаполнитьКоличествоЦенниковПоОстаткамНаСкладе Тогда
			НоваяСтрока.КоличествоЦенников = ?(НоваяСтрока.ОстатокНаСкладе > 0, 1, 0);
		КонецЕсли;
		
		НоваяСтрока.Выбран = ПроверитьВозможностьВыбораТовара(НоваяСтрока, Объект.Режим);
		
	КонецЦикла;
	
	Элементы.Запасы.Обновить();
	
КонецПроцедуры // ЗаполнитьТаблицуТоваровНаСервере()

&НаКлиентеНаСервереБезКонтекста
Функция ПроверитьВозможностьВыбораТовара(ТекущиеДанные, Режим)
	
	Если Режим = "ПечатьЦенниковИЭтикеток" Тогда
	
		Если (ТекущиеДанные.КоличествоЦенников = 0)
			И ТекущиеДанные.КоличествоЭтикеток = 0 Тогда
			
			Возврат Ложь;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
			И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки) Тогда
			
			Возврат Ложь;
			
		ИначеЕсли (ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
			      И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
			      И ТекущиеДанные.КоличествоЭтикеток <> 0
			      И ТекущиеДанные.КоличествоЦенников = 0) Тогда

			Возврат Ложь;
			
		ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
			      И ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
			      И ТекущиеДанные.КоличествоЭтикеток = 0
			      И ТекущиеДанные.КоличествоЦенников <> 0) Тогда
			
			Возврат Ложь;
			
		Иначе
			
			Возврат Истина;
			
		КонецЕсли;
	
	ИначеЕсли Режим = "ПечатьЭтикеток" Тогда
		
		Если ТекущиеДанные.КоличествоЭтикеток = 0 ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки) Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
		
	ИначеЕсли Режим = "ПечатьЦенников" Тогда
		
		Если ТекущиеДанные.КоличествоЦенников = 0 ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника) Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции // ПроверитьВозможностьВыбораТовара()

#КонецОбласти
