#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ПЕЧАТНЫХ ФОРМ

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УКДСтатус1") Тогда
			
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "УКДСтатус1", "УКД (статус 1)",
			ПечатьУниверсальныхКорректировочныхДокументов(МассивОбъектов, ОбъектыПечати, 
			Документы.СчетФактура.ТекстЗапросаПечатьКорректировочныхСчетовФактур(Истина)),,
			"Обработка.ПечатьУКД.ПФ_MXL_УниверсальныйКорректировочныйДокумент");
			
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УКДСтатус2") Тогда
		ТекстЗапросаПечатьУниверсальныхКорректировочныхДокументов = "";
		Для каждого Объект Из МассивОбъектов Цикл
			Если ТипЗнч(Объект) <> Тип("ДокументСсылка.СчетФактура") Тогда
				ТекстЗапросаПечатьУниверсальныхКорректировочныхДокументов = 
					Документы[Объект.Метаданные().Имя].ТекстЗапросаПечатьУниверсальныхКорректировочныхДокументов();
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ПустаяСтрока(ТекстЗапросаПечатьУниверсальныхКорректировочныхДокументов) Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "УКДСтатус2", "УКД (статус 2)",
				ПечатьУниверсальныхКорректировочныхДокументов(МассивОбъектов, ОбъектыПечати, 
				ТекстЗапросаПечатьУниверсальныхКорректировочныхДокументов, Истина),,
				"Обработка.ПечатьУПД.ПФ_MXL_УниверсальныйКорректировочныйДокумент");
		КонецЕсли;
	КонецЕсли;
		
	// параметры отправки печатных форм по электронной почте
	УправлениеНебольшойФирмойСервер.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция ПечатьУниверсальныхКорректировочныхДокументов(МассивОбъектов, ОбъектыПечати, ТекстЗапросаДокументам, ТолькоПередаточныйДокумент = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб        = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ЭкземпляровНаСтранице = 1;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УниверсальныйКорректировочныйДокумент";
		
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьУКД.ПФ_MXL_УниверсальныйКорректировочныйДокумент");
	
	Если ТолькоПередаточныйДокумент Тогда
		ДанныеУниверсальныхКорректировочныхДокументов = ПолучитьДанныеДляПечатиУниверсальногоКорректировочногоДокумента(
			МассивОбъектов, ТекстЗапросаДокументам);
	Иначе
		ДанныеУниверсальныхКорректировочныхДокументов = Документы.СчетФактура.ПолучитьДанныеДляПечатиКорректировочныхСчетовФактур(
			МассивОбъектов, ТекстЗапросаДокументам, Истина);
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	
	Для Каждого ВыборкаУКД ИЗ ДанныеУниверсальныхКорректировочныхДокументов Цикл
		
		ТаблицаДокумента = ВыборкаУКД.ТаблицаДокумента;
		Если ТаблицаДокумента = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Документы.СчетФактура.ВывестиКорректировочныйСчетФактуруВТабличныйДокумент(ТабДокумент, Макет, ВыборкаУКД, Истина);
		
		// Вывод подвала накладной
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалНакладной");
		ОбластьМакета.Параметры.Заполнить(ВыборкаУКД.ДанныеШапки);
		ТабДокумент.Вывести(ОбластьМакета);
		
		// В табличном документе зададим имя области, в которую был выведен объект.
		// Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент,
			НомерСтрокиНачало, ОбъектыПечати, ВыборкаУКД.Ссылка);
		
	КонецЦикла;
	
	Если МассивОбъектов.Количество() = 1 И ПервыйДокумент Тогда
		СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для %1 универсальный корректировочный документ не применяется'"), Строка(МассивОбъектов[0]));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
	КонецЕсли;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПолучитьДанныеДляПечатиУниверсальногоКорректировочногоДокумента(МассивОбъектов, ТекстЗапросаДокументам)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = ТекстЗапросаДокументам;
	
	ТаблицаСчетовФактур = Новый ТаблицаЗначений();
	ТаблицаСчетовФактур.Колонки.Добавить("ДанныеШапки");
	ТаблицаСчетовФактур.Колонки.Добавить("ТаблицаДокумента");
	ТаблицаСчетовФактур.Колонки.Добавить("ДокументыОснования");
	ТаблицаСчетовФактур.Колонки.Добавить("ВидСчетаФактуры");
	ТаблицаСчетовФактур.Колонки.Добавить("СчетФактура");
	ТаблицаСчетовФактур.Колонки.Добавить("СчетФактураБезНДС");
	ТаблицаСчетовФактур.Колонки.Добавить("Дата");
	ТаблицаСчетовФактур.Колонки.Добавить("Ссылка");
	
	ДанныеСчетаФактуры = Новый Структура("СчетФактура, ВидСчетаФактуры, Контрагент, ДоговорКонтрагента, ИспользуетсяПостановлениеНДС1137");
	ДанныеСчетаФактуры.ИспользуетсяПостановлениеНДС1137 = Истина;
	
	ВыборкаПоОснованиям = Запрос.Выполнить().Выбрать();
	Пока ВыборкаПоОснованиям.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоОснованиям.ДокументОснование) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументыОснования = Новый Массив;
		ДокументыОснования.Добавить(ВыборкаПоОснованиям.ДокументОснование);
		
		ЗаполнитьЗначенияСвойств(ДанныеСчетаФактуры, ВыборкаПоОснованиям);
		ПараметрыОснования = ПодготовитьДанныеДляПечатиУниверсальныхКорректировочныхДокументов(ВыборкаПоОснованиям.ДокументОснование, ДанныеСчетаФактуры);
		
		Если ПараметрыОснования.Реквизиты = Неопределено ИЛИ ПараметрыОснования.ТаблицаДокумента = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		ТаблицаДокумента = ПараметрыОснования.ТаблицаДокумента;
		
		ДанныеШапки = ПодготовитьДанныеШапкиУниверсальногоКорректировочногоДокумента(ВыборкаПоОснованиям, ПараметрыОснования.Реквизиты[0]);
		
		СчетФактура = ТаблицаСчетовФактур.Добавить();
		СчетФактура.Дата               = ВыборкаПоОснованиям.Дата;
		СчетФактура.СчетФактура        = ВыборкаПоОснованиям.СчетФактура;
		СчетФактура.ВидСчетаФактуры    = ВыборкаПоОснованиям.ВидСчетаФактуры;
		СчетФактура.СчетФактураБезНДС  = ВыборкаПоОснованиям.СчетФактураБезНДС;
		СчетФактура.ДанныеШапки        = ДанныеШапки;
		СчетФактура.ТаблицаДокумента   = ТаблицаДокумента;
		СчетФактура.ДокументыОснования = ДокументыОснования;
		СчетФактура.Ссылка             = ВыборкаПоОснованиям.ДокументОснование;
		
		ПервичныйДокумент = ВыборкаПоОснованиям.ДокументОснование.ИсправляемыйДокументРеализации;
		НомерНаПечать	= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ПервичныйДокумент.Номер, Истина, Ложь);
		ДатаНаПечать	= Формат(ПервичныйДокумент.Дата, "ДЛФ=D");
		РеквизитыПервичногоДокумента	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '№ %1 от %2'"),
			НомерНаПечать, ДатаНаПечать);
		
		СчетФактура.ДанныеШапки.Вставить("РеквизитыПередаточныхДокументов", "Универсальный передаточный документ " + РеквизитыПервичногоДокумента);
		
	КонецЦикла;
	
	Возврат ТаблицаСчетовФактур;
	
КонецФункции

Функция ПодготовитьДанныеДляПечатиУниверсальныхКорректировочныхДокументов(ДокументОснование, ДанныеСчетаФактуры)
	
	ТекстПустойПоказатель = "--";
	
	ДанныеДляПечати = Документы.СчетФактура.ПодготовитьДанныеДляПечатиКорректировочныхСчетовФактур(ДокументОснование, ДанныеСчетаФактуры.СчетФактура, ДанныеСчетаФактуры.ВидСчетаФактуры, Истина);
		
	// Поля, которые в УПД со статусом 2 должны быть пустыми
	ПустыеПоляУКД = Новый Структура;
	ПустыеПоляУКД.Вставить("Акциз",                  ТекстПустойПоказатель);
	ПустыеПоляУКД.Вставить("СтавкаНДС",              Справочники.СтавкиНДС.ПустаяСсылка());
	
	Если ДанныеДляПечати.ТаблицаДокумента <> Неопределено Тогда
		Для Каждого СтрокаДокумента Из ДанныеДляПечати.ТаблицаДокумента Цикл
			ЗаполнитьЗначенияСвойств(СтрокаДокумента, ПустыеПоляУКД);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ПодготовитьДанныеШапкиУниверсальногоКорректировочногоДокумента(ВыборкаСФ, Реквизиты) 

	Возврат Документы.СчетФактура.ПодготовитьДанныеШапкиКорректировочногоСчетаФактуры(ВыборкаСФ, Реквизиты, Истина);

КонецФункции

#КонецЕсли