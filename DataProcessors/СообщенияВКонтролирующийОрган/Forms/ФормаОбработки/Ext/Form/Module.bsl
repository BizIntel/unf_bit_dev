&НаСервере
Процедура ЗаполнитьДерево()
	КорневойУровень = ВидыСообщений.ПолучитьЭлементы();
	СоответствиеУИД = Новый Соответствие;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "Все";
	Папка.ИндексКартинки = 1;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "УСН";
	Папка.ИндексКартинки = 0;
	Папка.UID = Новый УникальныйИдентификатор;
	МассивУСН = Новый Массив;
	МассивУСН.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбИзмененииОбъектаНалогообложенияПоУСН);
	МассивУСН.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбОтказеОтУСН);
	МассивУСН.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбУтратеПраваНаУСН);
	МассивУСН.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОПереходеНаУСН);
	МассивУСН.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОПрекращенииДеятельностиПоУСН);
	СоответствиеУИД[Папка.UID] = МассивУСН;
	ЭлементыПапки = Папка.ПолучитьЭлементы();
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Изменение параметров УСН";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбИзмененииОбъектаНалогообложенияПоУСН;
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Отказ от применения УСН";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбОтказеОтУСН;
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Утрата права на УСН";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбУтратеПраваНаУСН;
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Переход на УСН";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОПереходеНаУСН;
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Прекращение деятельности по УСН";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОПрекращенииДеятельностиПоУСН;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "Патентная система";
	Папка.ИндексКартинки = 0;
	Папка.UID = Новый УникальныйИдентификатор;
	МассивПатент = Новый Массив;
	МассивПатент.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПолучениеПатентаРекомендованнаяФорма);
	МассивПатент.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОбУтратеПраваНаПатент);
	МассивПатент.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОПрекращенииДеятельностиПоПатентнойСистеме);
	СоответствиеУИД[Папка.UID] = МассивПатент;
	ЭлементыПапки = Папка.ПолучитьЭлементы();
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Получение патента";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПолучениеПатентаРекомендованнаяФорма;
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Утрата права на патентную систему";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОбУтратеПраваНаПатент;
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Прекращение деятельности";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОПрекращенииДеятельностиПоПатентнойСистеме;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "ЕНВД";
	Папка.ИндексКартинки = 0;
	Папка.UID = Новый УникальныйИдентификатор;
	МассивЕНВД = Новый Массив;
	МассивЕНВД.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД1);
	МассивЕНВД.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД2);
	МассивЕНВД.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД3);
	МассивЕНВД.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД4);
	СоответствиеУИД[Папка.UID] = МассивЕНВД;
	ЭлементыПапки = Папка.ПолучитьЭлементы();
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Постановка на учет организации";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД1;
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Постановка на учет ИП";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД2;
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Снятие с учета организации";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД3;
	
	Сообщение = ЭлементыПапки.Добавить();
	Сообщение.Наименование = "Снятие с учета ИП";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД4;
	
	Сообщение = КорневойУровень.Добавить();
	Сообщение.Наименование = "Выбор налогового органа для постановки на учет";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.Форма_1_6_Учет;
	
	Сообщение = КорневойУровень.Добавить();
	Сообщение.Наименование = "Открытие (закрытие) счета";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_1;
	
	Сообщение = КорневойУровень.Добавить();
	Сообщение.Наименование = "Участие в российскихорганизациях";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_6;
	
	Сообщение = КорневойУровень.Добавить();
	Сообщение.Наименование = "Создание обособленных подразделений";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_3_1;
	
	Сообщение = КорневойУровень.Добавить();
	Сообщение.Наименование = "Закрытие обособленных подразделений";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_3_2;

	Сообщение = КорневойУровень.Добавить();
	Сообщение.Наименование = "Реорганизация или ликвидация организации";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_4;
	
	Сообщение = КорневойУровень.Добавить();
	Сообщение.Наименование = "Уведомление об участии в иностранных организациях";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаУ_ИО;
	
	Сообщение = КорневойУровень.Добавить();
	Сообщение.Наименование = "Форма ТС-1";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаТС1;
	
	Сообщение = КорневойУровень.Добавить();
	Сообщение.Наименование = "Форма ТС-2";
	Сообщение.ИндексКартинки = 1;
	Сообщение.UID = Новый УникальныйИдентификатор;
	СоответствиеУИД[Сообщение.UID] = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаТС2;
	
	СоответствиеАдрес = ПоместитьВоВременноеХранилище(СоответствиеУИД, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ИзменитьЭлементОтбораСпискаНаСервере(Список, ИмяПоля, ПравоеЗначение = Неопределено, Установить = Ложь, ВидСравнения = Неопределено)
	
	ЭлементыДляУдаления = Новый Массив;
	
	ЭлементыОтбора = Список.Отбор.Элементы;
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных")
			И ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки Тогда
			ЭлементыДляУдаления.Добавить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементОтбораДляУдаления Из ЭлементыДляУдаления Цикл
		ЭлементыОтбора.Удалить(ЭлементОтбораДляУдаления);
	КонецЦикла;
	
	Если Установить Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяПоля);
		ЭлементОтбора.ВидСравнения   = ?(ВидСравнения = Неопределено, ВидСравненияКомпоновкиДанных.Равно, ВидСравнения);
		ЭлементОтбора.Использование  = Истина;
		ЭлементОтбора.ПравоеЗначение = ПравоеЗначение;
		ЭлементОтбора.Представление  = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЭлементОтбораСпискаНаКлиенте(Список, ИмяПоля, ПравоеЗначение = Неопределено, Установить = Ложь, ВидСравнения = Неопределено)
	
	ЭлементыДляУдаления = Новый Массив;
	
	ЭлементыОтбора = Список.Отбор.Элементы;
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных")
			И ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки Тогда
			ЭлементыДляУдаления.Добавить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементОтбораДляУдаления Из ЭлементыДляУдаления Цикл
		ЭлементыОтбора.Удалить(ЭлементОтбораДляУдаления);
	КонецЦикла;
	
	Если Установить Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяПоля);
		ЭлементОтбора.ВидСравнения   = ?(ВидСравнения = Неопределено, ВидСравненияКомпоновкиДанных.Равно, ВидСравнения);
		ЭлементОтбора.Использование  = Истина;
		ЭлементОтбора.ПравоеЗначение = ПравоеЗначение;
		ЭлементОтбора.Представление  = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = РегламентированнаяОтчетность.ПолучитьОрганизациюПоУмолчанию();
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		ОргПоУмолчанию = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации").ОрганизацияПоУмолчанию();
		Организация = ОргПоУмолчанию;
	КонецЕсли;
	
	ИзменитьЭлементОтбораСпискаНаСервере(Уведомления, "Организация", Организация, ЗначениеЗаполнено(Организация));
	ЗаполнитьДерево();
	
	Если Параметры.Свойство("Тип") Тогда 
		Если Параметры.Тип = "УСН" Тогда
			Элементы.ВидыСообщений.ТекущаяСтрока = 1;
		ИначеЕсли Параметры.Тип = "Патент" Тогда 
			Элементы.ВидыСообщений.ТекущаяСтрока = 7;
		КонецЕсли;
	КонецЕсли;
	
	РегламентированнаяОтчетность.ДобавитьКнопкуПрисоединенныеФайлы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ИзменитьЭлементОтбораСпискаНаКлиенте(Уведомления, "Организация", Организация, ЗначениеЗаполнено(Организация));
КонецПроцедуры

&НаКлиенте
Процедура УведомленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ИмяФормыУведомления = ПолучитьИмяФормыПоСсылке(ВыбраннаяСтрока);
	Если ЗначениеЗаполнено(ИмяФормыУведомления) Тогда
		ПараметрыОткрытия = Новый Структура("Ключ", ВыбраннаяСтрока);
		Форма = ПолучитьФорму(ИмяФормыУведомления, ПараметрыОткрытия, ЭтаФорма, ВыбраннаяСтрока);
		Если Форма <> Неопределено Тогда 
			Форма.Открыть();
		КонецЕсли;
	Иначе
		ПоказатьЗначение(,ВыбраннаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяФормы(Вид)
	
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПолноеИмяФормыПоВиду(Вид);
	
КонецФункции

&НаСервере
Функция ПолучитьИмяФормыПоСсылке(Ссылка)
	
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПолноеИмяФормыПоВиду(Ссылка.ВидУведомления);
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_УведомлениеОСпецрежимахНалогообложения" Тогда
		Элементы.Уведомления.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПечатьСразуНаСервере(Знач УведомлениеДляПечати)
	ДокОбъект = УведомлениеДляПечати.ПолучитьОбъект();
	Возврат ДокОбъект.ПечатьСразу();
КонецФункции

&НаКлиенте
Процедура ПечатьСразу(Команда)
	УведомлениеДляПечати = Элементы.Уведомления.ТекущаяСтрока;
	Если Не ЗначениеЗаполнено(УведомлениеДляПечати) Тогда 
		Возврат;
	КонецЕсли;
	
	ПФ = ПечатьСразуНаСервере(УведомлениеДляПечати);
	Если ПФ <> Неопределено Тогда 
		ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотр(Команда)
	
	УведомлениеДляПечати = Элементы.Уведомления.ТекущаяСтрока;
	Если Не ЗначениеЗаполнено(УведомлениеДляПечати) Тогда 
		Возврат;
	КонецЕсли;
	
	МассивПечати = Новый Массив;
	МассивПечати.Добавить(УведомлениеДляПечати);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.УведомлениеОСпецрежимахНалогообложения",
		"Уведомление", МассивПечати, Неопределено);
		
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	Элементы.Уведомления.Обновить();
КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор, Объект)
	ДокОбъект = Объект.ПолучитьОбъект();
	Возврат ДокОбъект.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура Выгрузить()
	УведомлениеДляПечати = Элементы.Уведомления.ТекущаяСтрока;
	Если Не ЗначениеЗаполнено(УведомлениеДляПечати) Тогда 
		Возврат;
	КонецЕсли;
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор, УведомлениеДляПечати);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВыбор(Команда)
	
	Если ЗначениеЗаполнено(ВидСоздаваемогоДокумента) Тогда
		ИмяФормыСообщения = ПолучитьИмяФормы(ВидСоздаваемогоДокумента);
		Если ЗначениеЗаполнено(ИмяФормыСообщения) Тогда
			Если ЗначениеЗаполнено(Организация) Тогда 
				ПараметрыОткрытия = Новый Структура("Организация", Организация);
				Форма = ПолучитьФорму(ИмяФормыСообщения, ПараметрыОткрытия, ЭтаФорма.ВладелецФормы);
				Если Форма <> Неопределено Тогда 
					Форма.Открыть();
				КонецЕсли;
			Иначе
				ПараметрыОткрытия = Новый Структура("Тип", ВидСоздаваемогоДокумента);
				ФормаОрганизации = ПолучитьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбораУведомления", ПараметрыОткрытия, ЭтаФорма);
				ФормаОрганизации.Открыть();
			КонецЕсли;
		КонецЕсли;
	Иначе 
		ФормаВыбор = ОткрытьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбораВидаСообщения", Новый Структура("Организация,Создание_УведомлениеОСпецрежимахНалогообложения", Организация), ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ВидыСообщений.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
КонецПроцедуры

&НаКлиенте
Процедура ВидыСообщенийПриАктивизацииСтроки(Элемент)
	РезультатВыбора(Элемент.ТекущиеДанные.UID);
КонецПроцедуры

&НаСервере
Функция РезультатВыбора(Данные)
	
	СоответствиеУИД = ПолучитьИзВременногоХранилища(СоответствиеАдрес);
	ДанныеОтбора = СоответствиеУИД[Данные];
	Если ЗначениеЗаполнено(ДанныеОтбора) Тогда
		Если ТипЗнч(ДанныеОтбора) = Тип("Массив") Тогда 
			ИзменитьЭлементОтбораСпискаНаСервере(Уведомления, "ВидУведомления", ДанныеОтбора, Истина, ВидСравненияКомпоновкиДанных.ВСписке);
					
			ВидСоздаваемогоДокумента = Неопределено;
		Иначе
			ИзменитьЭлементОтбораСпискаНаСервере(Уведомления, "ВидУведомления", ДанныеОтбора, Истина, ВидСравненияКомпоновкиДанных.Равно);
					
			ВидСоздаваемогоДокумента = ДанныеОтбора;
		КонецЕсли;
	Иначе
		ИзменитьЭлементОтбораСпискаНаСервере(Уведомления, "ВидУведомления", ДанныеОтбора, Ложь, ВидСравненияКомпоновкиДанных.Равно);
		
		ВидСоздаваемогоДокумента = Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВидыСообщенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ВидСоздаваемогоДокумента) Тогда
		ИмяФормыСообщения = ПолучитьИмяФормы(ВидСоздаваемогоДокумента);
		Если ЗначениеЗаполнено(ИмяФормыСообщения) Тогда
			Если ЗначениеЗаполнено(Организация) Тогда 
				ПараметрыОткрытия = Новый Структура("Организация", Организация);
				Форма = ПолучитьФорму(ИмяФормыСообщения, ПараметрыОткрытия, ЭтаФорма.ВладелецФормы);
				Если Форма <> Неопределено Тогда 
					Форма.Открыть();
				КонецЕсли;
			Иначе
				ПараметрыОткрытия = Новый Структура("Тип", ВидСоздаваемогоДокумента);
				ФормаОрганизации = ПолучитьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбораУведомления", ПараметрыОткрытия, ЭтаФорма);
				ФормаОрганизации.Открыть();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПереходаВНовыйИнтерфейсНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура("Раздел", ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Уведомления"));
	ОткрытьФорму("ОбщаяФорма.РегламентированнаяОтчетность", ПараметрыФормы, , "1С-Отчетность");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрисоединенныеФайлыУведомления(Команда)
	Если ТипЗнч(Элементы.Уведомления.ВыделенныеСтроки) = Тип("Массив")
		И Элементы.Уведомления.ВыделенныеСтроки.Количество() = 1 Тогда 
		
		ТекущиеДанные = Элементы.Уведомления.ВыделенныеСтроки[0];
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ВладелецФайла",  ТекущиеДанные);
		ДопПараметры.Вставить("Организация",    Элементы.Уведомления.ТекущиеДанные.Организация);
		ДопПараметры.Вставить("ТолькоПросмотр", Ложь);
		ДопПараметры.Вставить("ЗаголовокФормы", "Присоединенные файлы: " + Элементы.Уведомления.ТекущиеДанные.ВидУведомления);
		
		РегламентированнаяОтчетностьКлиент.ОткрытьФормуПрисоединенныеФайлы(, ДопПараметры);
	КонецЕсли;
КонецПроцедуры
