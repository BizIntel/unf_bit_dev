#Область СлужебныеПроцедурыФункции

&НаСервере
Процедура СформироватьПредварительныйОтчетПоВидамЦенСЦеной(ИмяСхемыКД)
	
	// 1. Получим СКД
	СхемаКомпоновкиДанных = Обработки.Ценообразование.ПолучитьМакет(ИмяСхемыКД);
	
	// 2. создаем настройки для схемы 
	НастройкиКомпоновкиДанных = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	// 2.1 установим значения параметров
	ПараметрКД = СхемаКомпоновкиДанных.Параметры.Найти("МассивВидовЦен");
	ПараметрКД.Значение = Параметры.МассивВидовЦен;
	
	Если ЗначениеЗаполнено(Параметры.ОтборПоПериоду) Тогда
		
		ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоПериоду", "Период < &ОтборПоПериоду");
		СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос = ТекстЗапроса;
		
		ПараметрКД = СхемаКомпоновкиДанных.Параметры.Найти("ОтборПоПериоду");
		ПараметрКД.Значение = Параметры.ОтборПоПериоду;
		
	Иначе
		
		ПараметрКД = СхемаКомпоновкиДанных.Параметры.Найти("ОтборПоПериоду");
		ПараметрКД.Значение = Истина;
		
	КонецЕсли;
	
	Если Параметры.ИспользоватьХарактеристики = 0 Тогда
		
		ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоХарактеристикам", "Характеристика = Значение(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)");
		СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос = ТекстЗапроса;
		
	Иначе
		
		ПараметрКД = СхемаКомпоновкиДанных.Параметры.Найти("ОтборПоХарактеристикам");
		ПараметрКД.Значение = Истина;
		
	КонецЕсли;
	
	// 3. готовим макет 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
	
	// 4. исполняем макет 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет, , ДанныеРасшифровки, Истина);
	ПроцессорКомпоновки.Сбросить();
	
	// 5. выводим результат 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	// 6. Запишем СКД и данные расшифровки
	АдресХранилищаСКД 				= ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	АдресХранилищаДанныеРасшифровки	= ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредварительныйОтчетПоВидамЦенБезЦен(ИмяСхемыКД)
	
	// 1. Получим СКД
	СхемаКомпоновкиДанных = Обработки.Ценообразование.ПолучитьМакет(ИмяСхемыКД);
	
	// 2. создаем настройки для схемы 
	НастройкиКомпоновкиДанных = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	// 2.1 установим значения параметров
	ПараметрКД = СхемаКомпоновкиДанных.Параметры.Найти("МассивВидовЦен");
	ПараметрКД.Значение = Параметры.МассивВидовЦен;
	
	Если Параметры.ИспользоватьХарактеристики = 0 Тогда
		
		ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоХарактеристикам", "Характеристика = Значение(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)");
		СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос = ТекстЗапроса;
		
		НастройкиКомпоновкиДанных.Структура[0].Структура[0].Использование = Ложь;
		
	Иначе
		
		ПараметрКД = СхемаКомпоновкиДанных.Параметры.Найти("ОтборПоХарактеристикам");
		ПараметрКД.Значение = Истина;
		
	КонецЕсли;
	
	// 3. готовим макет 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
	
	// 4. исполняем макет 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет, , ДанныеРасшифровки, Истина);
	ПроцессорКомпоновки.Сбросить();
	
	// 5. выводим результат 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	// 6. Запишем СКД и данные расшифровки
	АдресХранилищаСКД 				= ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	АдресХранилищаДанныеРасшифровки	= ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредварительныйОтчетПоПриходнымНакладным(ИмяСхемыКД)
	
	// 1. Получим СКД
	СхемаКомпоновкиДанных = Обработки.Ценообразование.ПолучитьМакет(ИмяСхемыКД);
	
	// 2. создаем настройки для схемы 
	НастройкиКомпоновкиДанных = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	// 2.1 установим значения параметров
	ПараметрКД = СхемаКомпоновкиДанных.Параметры.Найти("МассивПриходныхНакладных");
	ПараметрКД.Значение = Параметры.МассивПриходныхНакладных;
	
	Если Параметры.ИспользоватьХарактеристики = 0 Тогда
		
		НастройкиКомпоновкиДанных.Структура[0].Структура[0].Использование = Ложь;
		
	КонецЕсли;
	
	// 3. готовим макет 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
	
	// 4. исполняем макет 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет, , ДанныеРасшифровки, Истина);
	ПроцессорКомпоновки.Сбросить();
	
	// 5. выводим результат 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	// 6. Запишем СКД и данные расшифровки
	АдресХранилищаСКД 				= ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	АдресХранилищаДанныеРасшифровки	= ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредварительныйОтчетПоКатегориямНоменклатуры(ИмяСхемыКД)
	
	// 1. Получим СКД
	СхемаКомпоновкиДанных = Обработки.Ценообразование.ПолучитьМакет(ИмяСхемыКД);
	
	// 2. создаем настройки для схемы 
	НастройкиКомпоновкиДанных = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	// 2.1 установим значения параметров
	ПараметрКД = СхемаКомпоновкиДанных.Параметры.Найти("МассивКатегорийНоменклатуры");
	ПараметрКД.Значение = Параметры.МассивКатегорийНоменклатуры;
	
	Если Параметры.ИспользоватьХарактеристики = 0 Тогда
		
		НастройкиКомпоновкиДанных.Структура[0].Структура[0].Использование = Ложь;
		
	КонецЕсли;
	
	// 3. готовим макет 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
	
	// 4. исполняем макет 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет, , ДанныеРасшифровки, Истина);
	ПроцессорКомпоновки.Сбросить();
	
	// 5. выводим результат 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	// 6. Запишем СКД и данные расшифровки
	АдресХранилищаСКД 				= ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	АдресХранилищаДанныеРасшифровки	= ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредварительныйОтчетПоЦеновымГруппам(ИмяСхемыКД)
	
	// 1. Получим СКД
	СхемаКомпоновкиДанных = Обработки.Ценообразование.ПолучитьМакет(ИмяСхемыКД);
	
	// 2. создаем настройки для схемы 
	НастройкиКомпоновкиДанных = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	// 2.1 установим значения параметров
	ПараметрКД = СхемаКомпоновкиДанных.Параметры.Найти("МассивЦеновыхГрупп");
	ПараметрКД.Значение = Параметры.МассивЦеновыхГрупп;
	
	Если Параметры.ИспользоватьХарактеристики = 0 Тогда
		
		НастройкиКомпоновкиДанных.Структура[0].Структура[0].Использование = Ложь;
		
	КонецЕсли;
	
	// 3. готовим макет 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
	
	// 4. исполняем макет 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет, , ДанныеРасшифровки, Истина);
	ПроцессорКомпоновки.Сбросить();
	
	// 5. выводим результат 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	// 6. Запишем СКД и данные расшифровки
	АдресХранилищаСКД 				= ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	АдресХранилищаДанныеРасшифровки	= ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
	
КонецПроцедуры

#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяСхемыКД = Параметры.ИмяСКД;
	
	Если ИмяСхемыКД = "ПоВидамЦенСЦеной" Тогда
		
		СформироватьПредварительныйОтчетПоВидамЦенСЦеной(ИмяСхемыКД);
		
	ИначеЕсли ИмяСхемыКД = "ПоВидамЦенБезЦен" Тогда
		
		СформироватьПредварительныйОтчетПоВидамЦенБезЦен(ИмяСхемыКД);
		
	ИначеЕсли ИмяСхемыКД = "ПоПриходнымНакладным" Тогда
		
		СформироватьПредварительныйОтчетПоПриходнымНакладным(ИмяСхемыКД);
		
	ИначеЕсли ИмяСхемыКД = "ПоКатегориямНоменклатуры" Тогда
		
		СформироватьПредварительныйОтчетПоКатегориямНоменклатуры(ИмяСхемыКД);
		
	ИначеЕсли ИмяСхемыКД = "ПоЦеновымГруппам" Тогда
		
		СформироватьПредварительныйОтчетПоЦеновымГруппам(ИмяСхемыКД);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияРеквизитовФормы

&НаКлиенте
Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДоступныеДействия = Новый Массив;
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьЗначениеРасшифровки", ЭтотОбъект);
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(АдресХранилищаДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресХранилищаСКД));
	ОбработкаРасшифровки.ПоказатьВыборДействия(ОписаниеОповещения, Расшифровка, ДоступныеДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗначениеРасшифровки(ВыполненноеДействие, ПараметрВыполненногоДействия, ДополнительныеПараметры) Экспорт
	
	Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
		
		Если ЗначениеЗаполнено(ПараметрВыполненногоДействия) Тогда
			
			ПоказатьЗначение(, ПараметрВыполненногоДействия);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
