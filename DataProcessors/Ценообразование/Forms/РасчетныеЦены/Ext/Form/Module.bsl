
#Область Служебные

&НаСервере
Процедура ПоказатьСтрокиПользователю()
	
	РекомендуемоеКоличество = 500;
	
	КоличествоВидимыхСтрок = ?(КэшЗначений.Первые500Строк, МИН(РекомендуемоеКоличество, ЦеныНоменклатуры.Количество()), ЦеныНоменклатуры.Количество());
	
	РасчетныеДанные.Очистить();
	Для Счетчик = 0 По КоличествоВидимыхСтрок - 1 Цикл
		
		СтрокаДанных = ЦеныНоменклатуры.Получить(Счетчик);
		
		СтрокаФормы = РасчетныеДанные.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаФормы, СтрокаДанных);
		
		СтрокаДанных.Автор = КэшЗначений.Ответственный;
		СтрокаДанных.УИДСтроки = СтрокаФормы.ПолучитьИдентификатор();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НовыеЦеныЗаПериод(Ошибки)
	
	ЦеныНоменклатуры.Очистить();
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ПериодЗаписи", ПериодЗаписи);
	ПараметрыРасчета.Вставить("ВидЦенРасчетный", ВидЦенРасчетный);
	ПараметрыРасчета.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	ПараметрыРасчета.Вставить("АдресВХранилище", Неопределено);
	
	ЦеныРасчитаны	= Ложь;
	ОписаниеОшибки	= "";
	Если ВидЦенРасчетный.ТипВидаЦен = Перечисления.ТипыВидовЦен.ДинамическийПроцент Тогда
		
		ЦенообразованиеСервер.РасчетДинамическихЦенНаПроцент(ПараметрыРасчета, ЦеныРасчитаны, ОписаниеОшибки, Ложь);
		
	ИначеЕсли ВидЦенРасчетный.ТипВидаЦен = Перечисления.ТипыВидовЦен.ДинамическийФормула Тогда
		
		ЦенообразованиеСервер.РасчетДинамическихЦенПоФормуле(ПараметрыРасчета, ЦеныРасчитаны, ОписаниеОшибки, Ложь);
		
	КонецЕсли;
	
	Если ЦеныРасчитаны Тогда
		
		КэшЗначений.ЗаписиРегистраЗаПериода = ПараметрыРасчета.АдресВХранилище;
		
		ЗаписиРегистраЗаПериода = ПолучитьИзВременногоХранилища(КэшЗначений.ЗаписиРегистраЗаПериода);
		ЦеныНоменклатуры.Загрузить(ЗаписиРегистраЗаПериода);
		
		Элементы.ФормаУтвердитьЦены.Заголовок = НСтр("ru ='Утвердить новые цены ('") + Строка(ЦеныНоменклатуры.Количество()) + НСтр("ru =')'");
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ОписаниеОшибки, "");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФормуНаСервере()
	
	ПоказатьСтрокиПользователю();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличныеЧасти(Ошибки)
	
	НовыеЦеныЗаПериод(Ошибки);
	
	ОбновитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму()
	
	ОбновитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНовыеЦены()
	
	ЗаписиРегистраЗаПериода = ЦеныНоменклатуры.Выгрузить(, "Актуальность, Период, ВидЦен, Номенклатура, Характеристика, Цена, ЕдиницаИзмерения, ВключаяХарактеристики, Автор");
	ЦенообразованиеСервер.ЗаписатьЦеныИОчиститьОчередьЦен(ПериодЗаписи, ВидЦенРасчетный, ЗаписиРегистраЗаПериода);
	
	ВидЦенРасчетныйОбъект = ВидЦенРасчетный.ПолучитьОбъект();
	ВидЦенРасчетныйОбъект.ЦеныАктуальны = ОчередьЦенПустая();
	ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ВидЦенРасчетныйОбъект, Ложь, Ложь);
	
	ШаблонТекста1 = НСтр("ru ='Новые цены записаны на дату '");
	ШаблонТекста2 = НСтр("ru ='по виду цен '");
	ШаблонДаты = "[" + Формат(ПериодЗаписи, "ДЛФ=DD") + "] ";
	ШаблонВидаЦен = "[" + Строка(ВидЦенРасчетный) + "].";
	
	МассивФорматированногоТекста = Новый Массив;
	МассивФорматированногоТекста.Добавить(Новый ФорматированнаяСтрока(ШаблонТекста1, , ЦветаСтиля.ИзмененноеЗначениеРеквизитаЦвет));
	МассивФорматированногоТекста.Добавить(Новый ФорматированнаяСтрока(ШаблонДаты, Новый Шрифт(,,Истина), ЦветаСтиля.ИзмененноеЗначениеРеквизитаЦвет));
	МассивФорматированногоТекста.Добавить(Новый ФорматированнаяСтрока(ШаблонТекста2, , ЦветаСтиля.ИзмененноеЗначениеРеквизитаЦвет));
	МассивФорматированногоТекста.Добавить(Новый ФорматированнаяСтрока(ШаблонВидаЦен, Новый Шрифт(,,Истина), ЦветаСтиля.ИзмененноеЗначениеРеквизитаЦвет));
	
	Элементы.НадписьУведомление.Заголовок = Новый ФорматированнаяСтрока(МассивФорматированногоТекста);
	
	ЭтотОбъект.Доступность = Ложь;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НадписьУведомление", "Видимость", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаОтборы", "Видимость", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПериодыИзОчередиЦен()
	
	Запрос = Новый Запрос("Выбрать Различные РС.ПериодЗаписи Из РегистрСведений.ОчередьРасчетаЦен КАК РС 
							|Где РС.ВидЦенРасчетный = &ВидЦенРасчетный И РС.ВидЦенРасчетный.КоличествоПопытокСлужебный < 2 И НЕ РС.ВидЦенРасчетный.РассчитыватьАвтоматически
							|Упорядочить ПО РС.ПериодЗаписи Убыв");
	
	Запрос.УстановитьПараметр("ВидЦенРасчетный", ВидЦенРасчетный);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Элементы.ПериодЗаписи.СписокВыбора.Добавить(Выборка.ПериодЗаписи, Формат(Выборка.ПериодЗаписи, "ДЛФ=DD"));
		Если НЕ ЗначениеЗаполнено(ПериодЗаписи) Тогда
			
			ПериодЗаписи = Выборка.ПериодЗаписи;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОчередьЦенПустая()
	
	Запрос = Новый Запрос("Выбрать Различные РС.ПериодЗаписи Из РегистрСведений.ОчередьРасчетаЦен КАК РС 
							|Где РС.ВидЦенРасчетный = &ВидЦенРасчетный И РС.ВидЦенРасчетный.КоличествоПопытокСлужебный < 2 И НЕ РС.ВидЦенРасчетный.РассчитыватьАвтоматически
							|Упорядочить ПО РС.ПериодЗаписи Убыв");
	
	Запрос.УстановитьПараметр("ВидЦенРасчетный", ВидЦенРасчетный);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ВидЦен", ВидЦенРасчетный);
	
	Если НЕ ЗначениеЗаполнено(ВидЦенРасчетный) Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	КэшЗначений = Новый Структура;
	КэшЗначений.Вставить("Ответственный", Пользователи.АвторизованныйПользователь()); // для передачи таблицы значений
	КэшЗначений.Вставить("ЗаписиРегистраЗаПериода", Неопределено); // адрес в хранилище
	КэшЗначений.Вставить("Первые500Строк", Ложь);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаПоказатьВсе", "Пометка", КэшЗначений.Первые500Строк);
	
	Ошибки = Неопределено;
	
	ЗаполнитьПериодыИзОчередиЦен();
	ЗаполнитьТабличныеЧасти(Ошибки);
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ПериодЗаписиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПериодЗаписи) Тогда
		
		Ошибки = Неопределено;
		ЗаполнитьТабличныеЧасти(Ошибки);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияКоманд

&НаКлиенте
Процедура УтвердитьЦены(Команда)
	
	ЗаписатьНовыеЦены();
	
	Оповестить("ЗаписьРасчетныхЦен");
	
КонецПроцедуры

&НаКлиенте
Процедура Первые500Строк(Команда)
	
	КэшЗначений.Первые500Строк			= НЕ КэшЗначений.Первые500Строк;
	Элементы.ФормаПоказатьВсе.Пометка	= КэшЗначений.Первые500Строк;
	
	ОбновитьФорму();
	
КонецПроцедуры

#КонецОбласти