&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Элементы.Организация.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
	Элементы.ПодробныеРезультатыЗагрузки.Видимость = Ложь;
	Элементы.ЛогЗагрузкиССайта.Видимость = Ложь;
	ЗагружатьКартинки = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура.Ссылка) КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		СоздатьКаталогТоваров = Истина;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если НЕ ЗначениеЗаполнено(ОсновнаяОрганизация) Тогда
		ОсновнаяОрганизация = Справочники.Организации.ОсновнаяОрганизация;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВидЦен) Тогда
		ЗагрузитьВидЦенССайта = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОсновнаяЕдиницаИзмерения) Тогда
		ОсновнаяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.шт;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(АдресСайта) Тогда
		АдресСайта = УправлениеНебольшойФирмойСервер.ПолучитьКонтактнуюИнформацию(ПараметрыСеанса.ТекущийПользователь, Справочники.ВидыКонтактнойИнформации.СайтПользователя);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(ОсновнаяОрганизация) Тогда
		ОсновнаяОрганизация = ПредопределенноеЗначение("Справочник.Организации.ОсновнаяОрганизация");
	КонецЕсли;
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимость()
	
	Элементы.ВидЦен.ТолькоПросмотр = ЗагрузитьВидЦенССайта;
	Если ЗагрузитьВидЦенССайта Тогда
		ВидЦен = Неопределено;
	Иначе
		ВидЦен = ПредопределенноеЗначение("Справочник.ВидыЦен.Оптовая");
	КонецЕсли;
	
	Если СоздатьКаталогТоваров Тогда
		КаталогЗагруженныхТоваров = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		ИмяКаталогаИзСайта = СтрЗаменить(АдресСайта, "http://","");
		ИмяКаталогаИзСайта = СтрЗаменить(ИмяКаталогаИзСайта, "https://","");
		Элементы.КаталогЗагруженныхТоваров.ПодсказкаВвода = ИмяКаталогаИзСайта;
	Иначе
		Элементы.КаталогЗагруженныхТоваров.ПодсказкаВвода = "";
	КонецЕсли;
	Элементы.КаталогЗагруженныхТоваров.ТолькоПросмотр = СоздатьКаталогТоваров;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПрочитатьДанные(Команда)

	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗапуститьЗагрузкуВФоне("ПредварительнаяЗагрузка");

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидЦен) И НЕ ЗагрузитьВидЦенССайта Тогда
		ТекстОшибки = НСтр("ru = 'Не выбран вид цен товаров'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		возврат;
	КонецЕсли;
	
	ЗапуститьЗагрузкуВФоне("ЗагрузитьДанные");	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЦеныССайтаПриИзменении(Элемент)
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогТоваровПриИзменении(Элемент)
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСоединение(Команда)

	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	АдресСайтаДляПодключения = АдресСайта;
	
	Если СтрНайти(АдресСайтаДляПодключения, "http")=0 Тогда
		АдресСайтаДляПодключения = "http://"+АдресСайтаДляПодключения;
	КонецЕсли;
	
	АдресСайтаДляПодключения = АдресСайтаДляПодключения+"/admin/exchange/autoimport/";
	
	ТекстСообщения = "";
	СтруктураПодключения = Новый Структура;
	СтруктураПодключения.Вставить("АдресСайта", АдресСайтаДляПодключения);
	СтруктураПодключения.Вставить("ИмяПользователя", ИмяПользователя);
	СтруктураПодключения.Вставить("Пароль", Пароль);
	
	ОбменССайтом.ВыполнитьТестовоеПодключениеКСайту(СтруктураПодключения, ТекстСообщения);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

КонецПроцедуры

&НаКлиенте
Процедура ПодробныеРезультатыЗагрузкиНажатие(Элемент)
	
	Текст = Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(СтрокаЛогЗагрузкиССайтаПодробно);
	Текст.Показать(НСтр("ru = 'Данные, полученные с сайта'"));
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСайтаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ИмяПользователя) Тогда
		ИмяПользователяИзСайта = СтрЗаменить(АдресСайта, "http://","");
		ИмяПользователяИзСайта = СтрЗаменить(ИмяПользователяИзСайта, "https://","");
		ЧастиСайта = СтрРазделить(ИмяПользователяИзСайта, ".", Ложь);
		Если ЧастиСайта.Количество()>0 Тогда
			ИмяПользователя = ЧастиСайта[0];
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаВФоне

&НаКлиенте
Функция ЗапуститьЗагрузкуВФоне(ИмяКоманды)
	
	Элементы.ЛогЗагрузкиССайта.Видимость = Истина;
	
	Результат = ЗапуститьЗагрузкуВФонеСервер(ИмяКоманды);
	
	Если Результат.ЗаданиеВыполнено Тогда
		ОбработатьРезультатВыполненияЗадания();
	Иначе
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПараметрыОбработчикаОжидания.Вставить("КоэффициентУвеличенияИнтервала", 1);
		
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтотОбъект, ИдентификаторЗадания);
	КонецЕсли;
	
КонецФункции

Функция ЗапуститьЗагрузкуВФонеСервер(ИмяКоманды)
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("АдресСайта", АдресСайта);
	ПараметрыЗадания.Вставить("ИмяПользователя", ИмяПользователя);
	ПараметрыЗадания.Вставить("Пароль", Пароль);
	ПараметрыЗадания.Вставить("ОсновнаяОрганизация", ОсновнаяОрганизация);
	ПараметрыЗадания.Вставить("ЗагружатьКартинки", ЗагружатьКартинки);
	ПараметрыЗадания.Вставить("ЕстьКартинки", ЕстьКартинки);
	ПараметрыЗадания.Вставить("КаталогЗагруженныхТоваров", КаталогЗагруженныхТоваров);
	ПараметрыЗадания.Вставить("СоздатьКаталогТоваров", СоздатьКаталогТоваров);
	ПараметрыЗадания.Вставить("ВидЦен", ВидЦен);
	ПараметрыЗадания.Вставить("ЗагрузитьВидЦенССайта", ЗагрузитьВидЦенССайта);
	ПараметрыЗадания.Вставить("НачалоЗагрузки", ТекущаяДата());
	
	Если ИмяКоманды = "ПредварительнаяЗагрузка" Тогда
		
		
		СтрокаЛогЗагрузкиССайта = НСтр("ru = 'Подключение к сайту ...'");
		ИдентификаторКоманды = "Обработки.ЗагрузитьДанныеСайта.ПрочитатьДанныеСайта";
		
	ИначеЕсли ИмяКоманды = "ЗагрузитьДанные" И ПредварительнаяЗагрузкаВыполнена Тогда
		
		ИдентификаторКоманды = "Обработки.ЗагрузитьДанныеСайта.ЗагрузитьДанные";
		СтруктураКаталогов = Новый Структура;
		Для каждого стр Из ПакетыДанных Цикл
			СтруктураКаталогов.Вставить(стр.Представление, стр.Значение);
		КонецЦикла;
		ПараметрыЗадания.Вставить("СтруктураКаталогов", СтруктураКаталогов);
		
	Иначе
		//Прочитать и загрузить сразу
		ИдентификаторКоманды = "Обработки.ЗагрузитьДанныеСайта.ПрочитатьИЗагрузитьДанные";
		
	КонецЕсли;
	
	Попытка
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор,
			ИдентификаторКоманды,
			ПараметрыЗадания, 
			НаименованиеФоновойЗагрузкиССайта());
		
	Исключение
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписатьИсключениеНаСервере(ПредставлениеОшибки);
		ВызватьИсключение;
	КонецПопытки;
	
	АдресХранилища = Результат.АдресХранилища;
	ИдентификаторЗадания = Результат.ИдентификаторЗадания;
	
	Возврат Результат;	
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			
			Если ЗаданиеВыполнено(ИдентификаторЗадания, СтрокаЛогЗагрузкиССайта) Тогда 
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
				ОбработатьРезультатВыполненияЗадания();
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания", 
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ЗаписатьИсключениеНаСервере(ПредставлениеОшибки);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания, СтрокаЛогЗагрузкиССайта)
	
	Если ТипЗнч(ИдентификаторЗадания) = Тип("Строка") Тогда
		ИдентификаторЗадания = Новый УникальныйИдентификатор(ИдентификаторЗадания);
	КонецЕсли;
	
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	
	МассивСообщений = Задание.ПолучитьСообщенияПользователю();
	
	Количество = МассивСообщений.Количество();
	
	Для Номер = 1 По Количество Цикл
		ОбратныйИндекс = Количество - Номер;
		Сообщение = МассивСообщений[ОбратныйИндекс];
		
		Если СтрНачинаетсяС(Сообщение.Текст, "{") Тогда
			Позиция = СтрНайти(Сообщение.Текст, "}");
			Если Позиция > 2 Тогда
				ИдентификаторМеханизма = Сред(Сообщение.Текст, 2, Позиция - 2);
				ПолученныйТекстXML = Сред(Сообщение.Текст, Позиция + 1);
				ПолученныеДанныеСтруктура = ОбщегоНазначения.ЗначениеИзСтрокиXML(ПолученныйТекстXML);
				Если ТипЗнч(ПолученныеДанныеСтруктура) = тип("Структура") И ПолученныеДанныеСтруктура.Свойство("Текст") Тогда
					СтрокаЛогЗагрузкиССайта = ПолученныеДанныеСтруктура.Текст;
				КонецЕсли; 
				
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьРезультатВыполненияЗадания()
	
	Если Не ПустаяСтрока(АдресХранилища) Тогда
		
		ДанныеРезультат = ПолучитьИзВременногоХранилища(АдресХранилища);
		
		Если ТипЗнч(ДанныеРезультат) = Тип("Структура") И ДанныеРезультат.Свойство("ДанныеУспешноЗагружены") Тогда
			
			//Данные загружены в 1С
			ОткрытьФорму("Справочник.Номенклатура.ФормаСписка");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Данные успешно загружены'"));
			ОбновитьИнтерфейс();
			Закрыть();
			
		ИначеЕсли ТипЗнч(ДанныеРезультат) = Тип("Структура") И ДанныеРезультат.Свойство("СтруктураКаталогов")
			И ДанныеРезультат.СтруктураКаталогов.Количество()>0 Тогда
			//предварительная загрузка выполнена
			
			Для каждого стр Из ДанныеРезультат.СтруктураКаталогов Цикл
				ПакетыДанных.Добавить(стр.Значение, стр.Ключ);
			КонецЦикла;
			ЕстьКартинки = ДанныеРезультат.ЕстьКартинки;
			Элементы.ПодробныеРезультатыЗагрузки.Видимость = Истина;
			СтрокаЛогЗагрузкиССайта = ДанныеРезультат.СтрокаЛогЗагрузкиССайта;
			СтрокаЛогЗагрузкиССайтаПодробно = ДанныеРезультат.СтрокаЛогЗагрузкиССайтаПодробно;
			
			ПредварительнаяЗагрузкаВыполнена = Истина;
		КонецЕсли;
			
		Если ТипЗнч(ДанныеРезультат) = Тип("Структура") И ДанныеРезультат.Свойство("ОписаниеОшибки") Тогда
			ОписаниеОшибки = ДанныеРезультат.ОписаниеОшибки;
			Если ТипЗнч(ОписаниеОшибки)=Тип("Массив") Тогда
				Для каждого стр Из ОписаниеОшибки Цикл
					СтрокаЛогЗагрузкиССайта = СтрокаЛогЗагрузкиССайта + ?(СтрокаЛогЗагрузкиССайта="","",Символы.ПС) + стр;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(стр);
				КонецЦикла;
			ИначеЕсли ДанныеРезультат.ОписаниеОшибки<>"" Тогда
				СтрокаЛогЗагрузкиССайта = СтрокаЛогЗагрузкиССайта + ?(СтрокаЛогЗагрузкиССайта="","",Символы.ПС) + ОписаниеОшибки;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки);
			КонецЕсли;
			
		КонецЕсли;
		
		УдалитьИзВременногоХранилища(АдресХранилища);
		АдресХранилища = "";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьИсключениеНаСервере(Знач ПредставлениеОшибки)
	
	ЗаписьЖурналаРегистрации(НаименованиеФоновойЗагрузкиССайта(), УровеньЖурналаРегистрации.Ошибка, , , ПредставлениеОшибки);
	
КонецПроцедуры

Функция НаименованиеФоновойЗагрузкиССайта() Экспорт
	
	Возврат НСтр("ru = 'Загрузка данных сайта'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
КонецФункции

#КонецОбласти
