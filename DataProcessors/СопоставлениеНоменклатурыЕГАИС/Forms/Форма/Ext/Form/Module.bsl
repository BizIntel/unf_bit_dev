
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьПолнотекстовыйПоиск = ПолучитьФункциональнуюОпцию("ИспользоватьПолнотекстовыйПоиск");
	
	ИнформационнаяБазаФайловая = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
	Если ИспользоватьПолнотекстовыйПоиск Тогда
		
		Если ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() = РежимПолнотекстовогоПоиска.Разрешить Тогда
			
			ИндексПолнотекстовогоПоискаАктуален = ПолнотекстовыйПоиск.ИндексАктуален();
			
			ИсторияПоиска = ХранилищеОбщихНастроек.Загрузить("ИсторияПоискаНоменклатуры");
			Если ИсторияПоиска <> Неопределено Тогда
				Элементы.СтрокаПоискаНоменклатура.СписокВыбора.ЗагрузитьЗначения(ИсторияПоиска);
			КонецЕсли;
			
			ИсторияПоиска = ХранилищеОбщихНастроек.Загрузить("ИсторияПоискаАлкогольнойПродукции");
			Если ИсторияПоиска <> Неопределено Тогда
				Элементы.СтрокаПоискаАлкогольнаяПродукция.СписокВыбора.ЗагрузитьЗначения(ИсторияПоиска);
			КонецЕсли;
			
		Иначе
			
			Элементы.СтрокаПоискаНоменклатура.Видимость = Ложь;
			Элементы.СтрокаПоискаАлкогольнаяПродукция.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИспользоватьПодключаемоеОборудование = УправлениеНебольшойФирмойПовтИсп.ИспользоватьПодключаемоеОборудование();
	
	Если Параметры.Свойство("ТТН") Тогда
		ТТН = Параметры.ТТН;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокАлкогольнойПродукцииЕГАИС, "ТТН", ТТН);
	
	ВосстановитьНастройкиНаСервере();
	
	Если Параметры.Свойство("АдресВХранилище") И ЗначениеЗаполнено(Параметры.АдресВХранилище) Тогда
		
		СтруктураДанных = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
		
		Если СтруктураДанных.Свойство("АлкогольнаяПродукция") Тогда
			УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(СписокАлкогольнойПродукцииЕГАИС, "Ссылка", СтруктураДанных.АлкогольнаяПродукция, Истина, ВидСравненияКомпоновкиДанных.ВСписке);
		КонецЕсли;
		
		Если СтруктураДанных.Свойство("ВариантОтбораСоответствийАлкогольнаяПродукция") Тогда
			ВариантОтбораСоответствийАлкогольнаяПродукция = СтруктураДанных.ВариантОтбораСоответствийАлкогольнаяПродукция;
			УстановитьОтборПоСоответствиюАлкогольнаяПродукцияНаСервере();
		КонецЕсли;
		
		Если Параметры.Свойство("РежимВыбора") Тогда
			РежимВыбора = Параметры.РежимВыбора;
			Элементы.ФормаВыбратьНоменклатуру.Видимость         = РежимВыбора;
			Элементы.ФормаВыбратьНоменклатуру.КнопкаПоУмолчанию = РежимВыбора;
			Элементы.ФормаУстановитьСоответствие.Видимость      = НЕ РежимВыбора;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(, ЭтаФорма, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование
	
	Если ИспользоватьОтборПоСвойствам Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(, ЭтаФорма);
	// Конец ПодключаемоеОборудование
	
	Если НЕ ЗавершениеРаботы Тогда
		СохранитьНастройкиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
	   И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			//Преобразуем предварительно к ожидаемому формату
			//Данные = Новый Структура();
			Если Параметр[1] = Неопределено Тогда
				Данные = Новый Структура("Штрихкод, Количество", Параметр[0],1); // Достаем штрихкод из основных данных
			Иначе
				Данные = Новый Структура("Штрихкод, Количество", Параметр[1][1],1); // Достаем штрихкод из дополнительных данных
			КонецЕсли;
			
			ПолученШтрихкод(Данные);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		
		ОписаниеСобытия = Новый Структура();
		ОписаниеОшибки  = "";
		ОписаниеСобытия.Вставить("Источник", Источник);
		ОписаниеСобытия.Вставить("Событие",  Событие);
		ОписаниеСобытия.Вставить("Данные",   Данные);
		
		Результат = МенеджерОборудованияКлиент.ПолучитьСобытиеОтУстройства(ОписаниеСобытия, ОписаниеОшибки);
		Если Результат = Неопределено Тогда 
			ТекстСообщения = НСтр("ru = 'При обработке внешнего события от устройства произошла ошибка:'")
								+ Символы.ПС + ОписаниеОшибки;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Иначе
			ОбработкаОповещения(Результат.ИмяСобытия, Результат.Параметр, Результат.Источник);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаНоменклатураОчистка(Элемент, СтандартнаяОбработка)
	
	ПрименитьПоиск("Номенклатура", СписокНоменклатуры, СтрокаПоискаНоменклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаНоменклатураПриИзменении(Элемент)
	
	ПрименитьПоиск("Номенклатура", СписокНоменклатуры, СтрокаПоискаНоменклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаНоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
		
	СпискиВыбораКлиент.АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаАлкогольнаяПродукцияОчистка(Элемент, СтандартнаяОбработка)
	
	ПрименитьПоиск("АлкогольнаяПродукция", СписокАлкогольнойПродукцииЕГАИС, СтрокаПоискаАлкогольнаяПродукция);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаАлкогольнаяПродукцияПриИзменении(Элемент)
	
	ПрименитьПоиск("АлкогольнаяПродукция", СписокАлкогольнойПродукцииЕГАИС, СтрокаПоискаАлкогольнаяПродукция);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаАлкогольнаяПродукцияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
		
	СпискиВыбораКлиент.АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоОбъемуПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоКрепостиПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоВидуПродукцииПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоПроизводителюПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоИмпортеруПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТТНПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокАлкогольнойПродукцииЕГАИС, "ТТН", ТТН);
	
	Элементы.СписокАлкогольнойПродукцииЕГАИС.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтбораСоответствийАлкогольнаяПродукцияПриИзменении(Элемент)
	
	УстановитьОтборПоСоответствиюАлкогольнаяПродукция();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтбораСоответствийНоменклатураПриИзменении(Элемент)
	
	УстановитьОтборПоСоответствиюНоменклатура();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоАлкогольнойПродукцииПриИзменении(Элемент)
	
	УстановитьОтборПоАлкогольнойПродукции();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоСвойствамПриИзменении(Элемент)
	
	УстановитьВидимостьСвойствОтбора();
	
	УстановитьОтборНоменклатурыПоСвойствамАлкогольнойПродукции();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицФормы

&НаКлиенте
Процедура СписокАлкогольнойПродукцииЕГАИСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элемент.ТекущиеДанные <> Неопределено И НЕ Элемент.ТекущиеДанные.Номенклатура.Пустая() Тогда
		Элементы.СписокНоменклатуры.ТекущаяСтрока = Элемент.ТекущиеДанные.Номенклатура;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если РежимВыбора Тогда
		ВыбратьНоменклатуруКлиент();
	ИначеЕсли Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ЕстьСоответствие Тогда
		СвязаннаяАлкогольнаяПродукция = ПолучитьСписокСвязаннойАлкогольнойПродукции(Элемент.ТекущиеДанные.Ссылка);
		
		Если СвязаннаяАлкогольнаяПродукция.Количество() > 0 Тогда
			Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки.Очистить();
			Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущаяСтрока = СвязаннаяАлкогольнаяПродукция[0];
			
			Для каждого АлкогольнаяПродукция Из СвязаннаяАлкогольнаяПродукция Цикл
				Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки.Добавить(АлкогольнаяПродукция);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокАлкогольнойПродукцииЕГАИСПриАктивизацииСтроки(Элемент)
	
	Если ИспользоватьОтборПоСвойствам Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборНоменклатуры", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьСоответствие(Команда)
	
	Если Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные = Неопределено 
		ИЛИ Элементы.СписокНоменклатуры.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = "";
	Если НЕ ПроверитьВозможностьУстановкиСоответствия(Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные.Ссылка, Элементы.СписокНоменклатуры.ТекущиеДанные.Ссылка, ТекстОшибки) Тогда
		ПоказатьПредупреждение(, ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АлкогольнаяПродукция", Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные.Ссылка);
	ПараметрыФормы.Вставить("Номенклатура", Элементы.СписокНоменклатуры.ТекущиеДанные.Ссылка);
	ПараметрыФормы.Вставить("ИдентификаторУпаковки", Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные.ИдентификаторУпаковки);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("УстановитьСоответствие_Завершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.СопоставлениеНоменклатурыЕГАИС.Форма.ФормаСопоставленияНоменклатуры", ПараметрыФормы, ЭтотОбъект,,,, ОповещениеПриЗавершении);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСоответствие_Завершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Истина Тогда
		Элементы.СписокАлкогольнойПродукцииЕГАИС.Обновить();
		Элементы.СписокНоменклатуры.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСоответствие(Команда)
	
	МассивЭлементов = Новый Массив;
	
	Для каждого АлкогольнаяПродукция Из Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки Цикл
	
		ДанныеСтроки = Элементы.СписокАлкогольнойПродукцииЕГАИС.ДанныеСтроки(АлкогольнаяПродукция);
		Если НЕ ДанныеСтроки.Номенклатура.Пустая() Тогда
			МассивЭлементов.Добавить(АлкогольнаяПродукция);
		КонецЕсли;
	
	КонецЦикла;
	
	Если МассивЭлементов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	АдресМассиваАлкогольнойПродукции = ПоместитьВоВременноеХранилище(МассивЭлементов);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОтменитьСоответствие_Завершение", ЭтотОбъект);
	ПоказатьВопрос(ОповещениеПриЗавершении, НСтр("ru = 'Отменить связь выбранной алкогольной продукции?'"), РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСоответствие_Завершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("Подключаемый_ОтменитьСоответствие", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ТекШтрихкод = "";
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект, Новый Структура("ТекШтрихкод", ТекШтрихкод)), ТекШтрихкод, НСтр("ru = 'Введите штрихкод'"));
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру(Команда)
	
	МассивЭлементов = Элементы.СписокАлкогольнойПродукцииЕГАИС.ВыделенныеСтроки;
	Если МассивЭлементов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = "";
	Если НЕ ПроверитьВозможностьСозданияНоменклатуры(МассивЭлементов, ТекстОшибки) Тогда
		ПоказатьПредупреждение(, ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("СоздатьНоменклатуру_Подтверждение", ЭтотОбъект, МассивЭлементов);
	ПоказатьВопрос(ОповещениеПриЗавершении, НСтр("ru = 'Создать номенклатуру по выделенным строкам алкогольной продукции?'"), РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру_Подтверждение(РезультатВопроса, ВыделенныеСтроки) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	АдресСпискаАлкогольнойПродукции = ПоместитьВоВременноеХранилище(ВыделенныеСтроки);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресСпискаАлкогольнойПродукции", АдресСпискаАлкогольнойПродукции);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("СоздатьНоменклатуру_Завершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.СопоставлениеНоменклатурыЕГАИС.Форма.ФормаСозданияНоменклатуры", ПараметрыФормы, ЭтотОбъект,,,, ОповещениеПриЗавершении);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру_Завершение(ПараметрыСозданияНоменклатуры, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ПараметрыСозданияНоменклатуры) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	АдресПараметровСозданияНоменклатуры = ПоместитьВоВременноеХранилище(ПараметрыСозданияНоменклатуры);
	
	ПодключитьОбработчикОжидания("Подключаемый_СоздатьНоменклатуру", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНоменклатуру(Команда)
	
	ВыбратьНоменклатуруКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_СоздатьНоменклатуру()
	
	СозданнаяНоменклатура = СоздатьНоменклатуруНаСервере(АдресПараметровСозданияНоменклатуры);
	
	Элементы.СписокАлкогольнойПродукцииЕГАИС.Обновить();
	Элементы.СписокНоменклатуры.Обновить();
	
	Элементы.СписокНоменклатуры.ВыделенныеСтроки.Очистить();
	
	Номенклатура = Неопределено; 
	
	Для каждого Номенклатура Из СозданнаяНоменклатура Цикл
		Элементы.СписокНоменклатуры.ВыделенныеСтроки.Добавить(Номенклатура);
	КонецЦикла;
	
	Если РежимВыбора И ЗначениеЗаполнено(Номенклатура) Тогда
		Закрыть(Номенклатура);
		Возврат;
	КонецЕсли;
	
	Если СозданнаяНоменклатура.Количество() = 1 Тогда
		ТекстСообщения = НСтр("ru = 'Создан элемент номенклатуры %Наименование%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Наименование%", СокрЛП(СозданнаяНоменклатура[0]));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СозданнаяНоменклатура[0]);
	Иначе
		ТекстСообщения = НСтр("ru = 'Создано %Количество% элементов номенклатуры.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СозданнаяНоменклатура.Количество());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтменитьСоответствие()
	
	ОтменитьСоответствиеНаСервере(ПолучитьИзВременногоХранилища(АдресМассиваАлкогольнойПродукции));
	
	Элементы.СписокАлкогольнойПродукцииЕГАИС.Обновить();
	Элементы.СписокНоменклатуры.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьНоменклатуруНаСервере(АдресПараметровСозданияНоменклатуры)
	
	СозданнаяНоменклатура = Новый Массив;
	
	ПараметрыСозданияНоменклатуры = ПолучитьИзВременногоХранилища(АдресПараметровСозданияНоменклатуры);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого АлкогольнаяПродукция Из ПараметрыСозданияНоменклатуры.МассивЭлементов Цикл
		
		РеквизитыАлкогольнойПродукции = ПолучитьРеквизитыАлкогольнойПродукции(АлкогольнаяПродукция);
		
		НоменклатураОбъект  = Справочники.Номенклатура.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НоменклатураОбъект, РеквизитыАлкогольнойПродукции,, "Производитель");
		
		НоменклатураОбъект.Родитель              = ПараметрыСозданияНоменклатуры.Родитель;
		НоменклатураОбъект.АлкогольнаяПродукция  = Истина;
		НоменклатураОбъект.ЕдиницаИзмерения      = ПараметрыСозданияНоменклатуры.ЕдиницаИзмерения;
		НоменклатураОбъект.СтавкаНДС             = ПараметрыСозданияНоменклатуры.СтавкаНДС;
		НоменклатураОбъект.КатегорияНоменклатуры = ПараметрыСозданияНоменклатуры.КатегорияНоменклатуры;
		
		НоменклатураОбъект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас;
		
		Если ПараметрыСозданияНоменклатуры.СтранаПроисхождения <> Справочники.СтраныМира.Россия Тогда
			НоменклатураОбъект.СтранаПроисхождения  = ПараметрыСозданияНоменклатуры.СтранаПроисхождения;
		КонецЕсли;
		
		НоменклатураОбъект.СрокПополнения = 1;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.Склад) Тогда
			НоменклатураОбъект.Склад = Справочники.СтруктурныеЕдиницы.ОсновнойСклад;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.СчетУчетаЗапасов) Тогда
			НоменклатураОбъект.СчетУчетаЗапасов = ПланыСчетов.Управленческий.СырьеИМатериалы;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.СчетУчетаЗатрат) Тогда
			НоменклатураОбъект.СчетУчетаЗатрат = ПланыСчетов.Управленческий.КоммерческиеРасходы;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.ЕдиницаИзмерения) Тогда
			НоменклатураОбъект.ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.шт;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.КатегорияНоменклатуры) Тогда
			НоменклатураОбъект.КатегорияНоменклатуры = Справочники.КатегорииНоменклатуры.БезКатегории;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.МетодОценки) Тогда
			НоменклатураОбъект.МетодОценки = Перечисления.МетодОценкиЗапасов.ПоСредней;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.НаправлениеДеятельности) Тогда
			НоменклатураОбъект.НаправлениеДеятельности = Справочники.НаправленияДеятельности.ОсновноеНаправление;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.СпособПополнения) Тогда
			НоменклатураОбъект.СпособПополнения = Перечисления.СпособыПополненияЗапасов.Закупка;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.СтавкаНДС) Тогда
			Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	СтавкиНДС.Ссылка
				|ИЗ
				|	Справочник.СтавкиНДС КАК СтавкиНДС
				|ГДЕ
				|	СтавкиНДС.Ставка = 18
				|	И НЕ СтавкиНДС.Расчетная"
			);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				НоменклатураОбъект.СтавкаНДС = Выборка.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
		ТекстОшибкиПроизводитель = "";
		ТекстОшибкиИмпортер = "";
		
		Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ПроизводительЕГАИС) Тогда
			Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.Производитель) Тогда
				Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ИмпортерЕГАИС) Тогда
					НоменклатураОбъект.Производитель = РеквизитыАлкогольнойПродукции.Производитель;
				Иначе
					НоменклатураОбъект.ПроизводительИмпортерАлкогольнойПродукции = РеквизитыАлкогольнойПродукции.Производитель;
				КонецЕсли;
			Иначе
				ТекстОшибкиПроизводитель = НСтр("ru = 'При создании номенклатуры %Наименование% не удалось определить сопоставленного производителя.'");
				ТекстОшибкиПроизводитель = СтрЗаменить(ТекстОшибкиПроизводитель, "%Наименование%", СокрЛП(НоменклатураОбъект.Наименование));
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ИмпортерЕГАИС) Тогда
			Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.Импортер) Тогда
				НоменклатураОбъект.ПроизводительИмпортерАлкогольнойПродукции = РеквизитыАлкогольнойПродукции.Импортер;
			Иначе
				ТекстОшибкиИмпортер = НСтр("ru = 'При создании номенклатуры %Наименование% не удалось определить сопоставленного импортера.'");
				ТекстОшибкиИмпортер = СтрЗаменить(ТекстОшибкиИмпортер, "%Наименование%", СокрЛП(НоменклатураОбъект.Наименование));
			КонецЕсли;
		КонецЕсли;
		
		НоменклатураОбъект.Записать();
		
		Если НЕ ПустаяСтрока(ТекстОшибкиПроизводитель) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиПроизводитель, НоменклатураОбъект.Ссылка);
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстОшибкиИмпортер) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиИмпортер, НоменклатураОбъект.Ссылка);
		КонецЕсли;
		
		Запись = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
		Запись.АлкогольнаяПродукция = АлкогольнаяПродукция;
		Запись.Номенклатура = НоменклатураОбъект.Ссылка;
		Запись.Записать();
		
		СозданнаяНоменклатура.Добавить(НоменклатураОбъект.Ссылка);
		
	КонецЦикла;
	
	Возврат СозданнаяНоменклатура;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыАлкогольнойПродукции(АлкогольнаяПродукция)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", АлкогольнаяПродукция);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Наименование,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.НаименованиеПолное,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Объем / 10 КАК ОбъемДАЛ,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Крепость,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции КАК ВидАлкогольнойПродукции,
	|	ЕСТЬNULL(СоответствиеПоПроизводителю.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Производитель,
	|	ЕСТЬNULL(СоответствиеПоИмпортеру.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Импортер,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель КАК ПроизводительЕГАИС,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Импортер КАК ИмпортерЕГАИС
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеПоПроизводителю
	|		ПО КлассификаторАлкогольнойПродукцииЕГАИС.Производитель = СоответствиеПоПроизводителю.ОрганизацияЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеПоИмпортеру
	|		ПО КлассификаторАлкогольнойПродукцииЕГАИС.Импортер = СоответствиеПоИмпортеру.ОрганизацияЕГАИС
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить()[0];
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьСоответствиеНаСервере(МассивАлкогольнойПродукции)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивАлкогольнойПродукции", МассивАлкогольнойПродукции);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.ИдентификаторУпаковки
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция В(&МассивАлкогольнойПродукции)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Прочитать();
		
		Если Запись.Выбран() Тогда
			Запись.Удалить();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьВозможностьУстановкиСоответствия(АлкогольнаяПродукция, Номенклатура, ТекстОшибки)
	
	Если Номенклатура.ЭтоГруппа Тогда
		ТекстОшибки = НСтр("ru = 'Связка алкогольной продукции с группой номенклатуры невозможна.'");
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", АлкогольнаяПродукция);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = &АлкогольнаяПродукция
	|	И СоответствиеНоменклатурыЕГАИС.Номенклатура <> &Номенклатура";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТекстОшибки = НСтр("ru = 'Выбранная алкогольная продукция уже имеет связку.'");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьВозможностьСозданияНоменклатуры(МассивАлкогольнойПродукции, ТекстОшибки)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивАлкогольнойПродукции", МассивАлкогольнойПродукции);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка В(&МассивАлкогольнойПродукции)
	|	И СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ТекстОшибки = НСтр("ru = 'Выбранная алкогольная продукция уже имеет связку.'");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокСвязаннойАлкогольнойПродукции(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("АлкогольнаяПродукция");
	
КонецФункции

&НаСервереБезКонтекста
Функция ПоискАлкогольнойПродукции(СтрокаПоиска, ОписаниеОшибки)
	
	РезультатПоиска = Новый Структура;
	РезультатПоиска.Вставить("АлкогольнаяПродукция", Новый Массив);
	
	РазмерПорции = 200;
	
	ОбластьПоиска = Новый Массив;
	ОбластьПоиска.Добавить(Метаданные.Справочники.КлассификаторАлкогольнойПродукцииЕГАИС);
	
	СписокПоиска = ПолнотекстовыйПоиск.СоздатьСписок(СтрокаПоиска, РазмерПорции);
	СписокПоиска.ПолучатьОписание = Ложь;
	СписокПоиска.ОбластьПоиска = ОбластьПоиска;
	СписокПоиска.ПерваяЧасть();
	
	Если СписокПоиска.СлишкомМногоРезультатов() Тогда
		ОписаниеОшибки = НСтр("ru = 'Слишком много результатов. Уточните запрос.'");
		Возврат РезультатПоиска;
	КонецЕсли;
	
	КоличествоНайденныхЭлементов = СписокПоиска.ПолноеКоличество();
	Если КоличествоНайденныхЭлементов = 0 Тогда
		ОписаниеОшибки = НСтр("ru = 'Ничего не найдено'");
		Возврат РезультатПоиска;
	КонецЕсли;
	
	// Обработка данных
	НачальнаяПозиция    = 0;
	КонечнаяПозиция     = ?(КоличествоНайденныхЭлементов > РазмерПорции, РазмерПорции, КоличествоНайденныхЭлементов) - 1;
	ЕстьСледующаяПорция = Истина;

	Пока ЕстьСледующаяПорция Цикл
		
		Для СчетчикЭлементов = 0 По КонечнаяПозиция Цикл
			
			Элемент = СписокПоиска.Получить(СчетчикЭлементов);
			
			Если Элемент.Метаданные = Метаданные.Справочники.КлассификаторАлкогольнойПродукцииЕГАИС Тогда
				РезультатПоиска.АлкогольнаяПродукция.Добавить(Элемент.Значение);
			Иначе
				ВызватьИсключение НСтр("ru = 'Неизвестная ошибка'");
			КонецЕсли;
			
		КонецЦикла;
		
		НачальнаяПозиция    = НачальнаяПозиция + РазмерПорции;
		ЕстьСледующаяПорция = (НачальнаяПозиция < КоличествоНайденныхЭлементов - 1);
		
		Если ЕстьСледующаяПорция Тогда
			
			КонечнаяПозиция = ?(КоличествоНайденныхЭлементов > НачальнаяПозиция + РазмерПорции,
			                    РазмерПорции,
			                    КоличествоНайденныхЭлементов - НачальнаяПозиция
			                    ) - 1;
			СписокПоиска.СледующаяЧасть();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РезультатПоиска;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолнотекстовыйПоискНаСервереБезКонтекста(ОбластьПоиска, СтрокаПоиска, РезультатПоиска)
	
	ОписаниеОшибки = "";
	
	Если ОбластьПоиска = "Номенклатура" Тогда
		РезультатПоиска = ПодборНоменклатурыВДокументахПереопределяемый.ПоискТоваров(СтрокаПоиска, ОписаниеОшибки);
	Иначе
		РезультатПоиска = ПоискАлкогольнойПродукции(СтрокаПоиска, ОписаниеОшибки);
	КонецЕсли;
	
	ПоискНеУдачный = ЗначениеЗаполнено(ОписаниеОшибки);
	
	Возврат ПоискНеУдачный;
	
КонецФункции

&НаКлиенте
Процедура ПоискПоПодстрокеНаКлиенте(ОбластьПоиска, Список, СтрокаПоиска)
	
	Использование = ЗначениеЗаполнено(СтрокаПоиска);
	
	ГруппаОтбора = УправлениеНебольшойФирмойКлиент.СоздатьГруппуЭлементовОтбора(
		Список.Отбор.Элементы,
		"ПоискПоПодстроке",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"Наименование",
		СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);
	
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"Код",
		СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);
		
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"НаименованиеПолное",
		СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);
		
	Если ОбластьПоиска = "Номенклатура" Тогда
		УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
			ГруппаОтбора,
			"Артикул",
			СтрокаПоиска,
			Использование, ВидСравненияКомпоновкиДанных.Содержит);
	КонецЕсли;
			
	СпискиВыбораКлиент.ОбновитьСписокВыбора(Элементы["СтрокаПоиска" + ОбластьПоиска].СписокВыбора, СтрокаПоиска);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьИндексПолнотекстовогоПоиска()
	
	УстановитьПривилегированныйРежим(Истина);
	ПолнотекстовыйПоиск.ОбновитьИндекс();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеИндексаПолнотекстовогоПоискаДанных()
	
	Состояние(НСтр("ru = 'Идет обновление индекса полнотекстового поиска ...'"));
	ОбновитьИндексПолнотекстовогоПоиска();
	Состояние(НСтр("ru = 'Обновление индекса полнотекстового поиска завершено...'")); 
	
	ИндексПолнотекстовогоПоискаАктуален = Истина;
	
	Если ТекущаяОбластьПоиска = "Номенклатура" Тогда
		Список = СписокНоменклатуры;
		СтрокаПоиска = СтрокаПоискаНоменклатура;
	Иначе
		Список = СписокАлкогольнойПродукцииЕГАИС;
		СтрокаПоиска = СтрокаПоискаАлкогольнаяПродукция;
	КонецЕсли;
	
	ПолнотекстовыйПоискНаКлиенте(ТекущаяОбластьПоиска, Список, СтрокаПоиска);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПолнотекстовыйПоискНаКлиенте(ОбластьПоиска, Список, СтрокаПоиска)
	
	Если Не ИндексПолнотекстовогоПоискаАктуален 
		И ИнформационнаяБазаФайловая Тогда
		
		ТекущаяОбластьПоиска = ОбластьПоиска;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросВыполнитьПолнотекстовыйПоискНаКлиенте", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, 
			НСтр("ru='Индекс полнотекстового поиска неактуален. Обновить индекс?'"),
			РежимДиалогаВопрос.ДаНет); 
		
	Иначе
		
		ПолнотекстовыйПоискНаКлиенте(ОбластьПоиска, Список, СтрокаПоиска);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросВыполнитьПолнотекстовыйПоискНаКлиенте(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОбновлениеИндексаПолнотекстовогоПоискаДанных",0.2,Истина);

КонецПроцедуры

&НаКлиенте
Процедура ПолнотекстовыйПоискНаКлиенте(ОбластьПоиска, Список, СтрокаПоиска)
		
	ГруппаОтбора = УправлениеНебольшойФирмойКлиент.СоздатьГруппуЭлементовОтбора(
		Список.Отбор.Элементы,
		"ПоискПоПодстроке",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		
	Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаПоиска)) Тогда
		
		ПоискНеУдачный = Ложь;
		
		УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
			ГруппаОтбора,
			"Ссылка",
			Неопределено,
			Ложь, ВидСравненияКомпоновкиДанных.ВСписке);
						
	Иначе
		
		РезультатПоиска = Неопределено;
		ПоискНеУдачный = ПолнотекстовыйПоискНаСервереБезКонтекста(ОбластьПоиска, СтрокаПоиска, РезультатПоиска);
		
		Если Не ПоискНеУдачный Тогда
			
			Использование = РезультатПоиска[ОбластьПоиска].Количество() > 0;
			
			УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
				ГруппаОтбора,
				"Ссылка",
				?(Использование, РезультатПоиска[ОбластьПоиска], Неопределено),
				Использование, ВидСравненияКомпоновкиДанных.ВСписке);
						
			СпискиВыбораКлиент.ОбновитьСписокВыбора(Элементы["СтрокаПоиска" + ОбластьПоиска].СписокВыбора, СтрокаПоиска);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЭтотОбъект["ПоискНеУдачный" + ОбластьПоиска] = ПоискНеУдачный;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьПоиск(ОбластьПоиска, Список, СтрокаПоиска)
	
	Если ИспользоватьПолнотекстовыйПоиск Тогда
		
		ВыполнитьПолнотекстовыйПоискНаКлиенте(ОбластьПоиска, Список, СтрокаПоиска);
		
	Иначе
		
		ПоискПоПодстрокеНаКлиенте(ОбластьПоиска, Список, СтрокаПоиска);
		
	КонецЕсли;
	
КонецПроцедуры

// МеханизмВнешнегоОборудования

// Процедура обрабатывает полученные штрихкоды.
//
&НаКлиенте
Процедура ПолученШтрихкод(ДанныеШтрихкода) Экспорт
	
	Штрихкод = ДанныеШтрихкода.Штрихкод;
	
	Номенклатура = ПолучитьНоменклатуруПоШтрихкоду(ДанныеШтрихкода);
	Если Номенклатура <> Неопределено Тогда
		
		Элементы.СписокНоменклатуры.ТекущаяСтрока = Номенклатура;
		
	Иначе
		СтрокаСообщения = НСтр("ru = 'Данные по штрихкоду не найдены: %1%'");
		СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%1%", Штрихкод);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		
	КонецЕсли;
	
КонецПроцедуры // ПолученыШтрихкоды()

&НаСервереБезКонтекста
Функция ПолучитьНоменклатуруПоШтрихкоду(ДанныеШтрихкода)

	Возврат РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьНоменклатуруПоШтрихкоду(ДанныеШтрихкода);
	
КонецФункции

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекШтрихкод = ?(Результат = Неопределено, ДополнительныеПараметры.ТекШтрихкод, Результат);
	Если НЕ ПустаяСтрока(ТекШтрихкод) Тогда
		ПолученШтрихкод(Новый Структура("Штрихкод, Количество", ТекШтрихкод, 1));
	КонецЕсли;

КонецПроцедуры // ПоискПоШтрихкоду()

&НаСервере
Функция ОбработатьДанныеПОВФормеСервер(СтруктураПараметров, СтруктураПараметровКлиента) Экспорт
	
	Если НЕ СтруктураПараметров.НеизвестныеДанныеПО Тогда
		
		Если СтруктураПараметров.Действие = "ПроверкаТоваров" Тогда
			Если СтруктураПараметров.ЗначенияПоиска.Количество() > 0 Тогда
								
				СтруктураПараметровКлиента.Вставить("ПрекратитьПоиск");
								
				ГруппаОтбора = УправлениеНебольшойФирмойКлиентСервер.СоздатьГруппуЭлементовОтбора(
					СписокНоменклатуры.Отбор.Элементы,
					"ПоискПоПодстроке",
					ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
									
				УправлениеНебольшойФирмойКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
					ГруппаОтбора,
					"Ссылка",
					Неопределено,
					Ложь, 
					ВидСравненияКомпоновкиДанных.ВСписке);

				Элементы.СписокНоменклатуры.ТекущаяСтрока = СтруктураПараметров.ЗначенияПоиска[0].Номенклатура;
				СтрокаПоискаНоменклатура = "";
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураПараметровКлиента;
	
КонецФункции

// Конец МеханизмВнешнегоОборудования

&НаКлиенте
Процедура Подключаемый_ОбновитьОтборНоменклатуры()
	
	УстановитьОтборНоменклатурыПоСвойствамАлкогольнойПродукции();
	
	ЭтотОбъект.ТекущийЭлемент = Элементы.СписокАлкогольнойПродукцииЕГАИС;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборНоменклатурыПоСвойствамАлкогольнойПродукции()
	
	ТекущиеДанные = Элементы.СписокАлкогольнойПродукцииЕГАИС.ТекущиеДанные;
	
	ИспользованиеОтборов = ИспользоватьОтборПоСвойствам И ТекущиеДанные <> Неопределено;
	
	ГруппаОтбора = УправлениеНебольшойФирмойКлиент.СоздатьГруппуЭлементовОтбора(
		СписокНоменклатуры.Отбор.Элементы,
		"ОтборПоСвойствамАлкогольнойПродукции",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"ОбъемДАЛ",
		?(ТекущиеДанные = Неопределено, Неопределено, ТекущиеДанные.Объем / 10),
		ИспользованиеОтборов И ОтборПоОбъему И ТекущиеДанные.Объем <> 0, ВидСравненияКомпоновкиДанных.Равно);
		
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"Крепость",
		?(ТекущиеДанные = Неопределено, Неопределено, ТекущиеДанные.Крепость),
		ИспользованиеОтборов И ОтборПоКрепости И ТекущиеДанные.Крепость <> 0, ВидСравненияКомпоновкиДанных.Равно);
		
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"ВидАлкогольнойПродукцииЕГАИС",
		?(ТекущиеДанные = Неопределено, Неопределено, ТекущиеДанные.ВидПродукции),
		ИспользованиеОтборов И ОтборПоВидуПродукции И ЗначениеЗаполнено(ТекущиеДанные.ВидПродукции), ВидСравненияКомпоновкиДанных.Равно);
		
	Производитель = ?(ТекущиеДанные = Неопределено, Неопределено, ПолучитьКонтрагентаПоСоответствию(ТекущиеДанные.Производитель));
	
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"Производитель",
		?(ТекущиеДанные = Неопределено, Неопределено, Производитель),
		ИспользованиеОтборов И ОтборПоПроизводителю И ЗначениеЗаполнено(Производитель) И ЗначениеЗаполнено(ТекущиеДанные.Импортер), ВидСравненияКомпоновкиДанных.Равно);
		
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"ПроизводительИмпортерАлкогольнойПродукции",
		?(ТекущиеДанные = Неопределено, Неопределено, Производитель),
		ИспользованиеОтборов И ОтборПоПроизводителю И ЗначениеЗаполнено(Производитель) И НЕ ЗначениеЗаполнено(ТекущиеДанные.Импортер), ВидСравненияКомпоновкиДанных.Равно);
		
	Импортер = ?(ТекущиеДанные = Неопределено, Неопределено, ПолучитьКонтрагентаПоСоответствию(ТекущиеДанные.Импортер));
	
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"ПроизводительИмпортерАлкогольнойПродукции",
		?(ТекущиеДанные = Неопределено, Неопределено, Импортер),
		ИспользованиеОтборов И ОтборПоИмпортеру И ЗначениеЗаполнено(Импортер), ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСвойствОтбора()
	
	Элементы.ГруппаВидыОтборовПоСвойтвамЕГАИС.Видимость = ИспользоватьОтборПоСвойствам;
	Элементы.ДекорацияОтборПоСвойствам.Видимость = ИспользоватьОтборПоСвойствам;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСвойствОтбораНаСервере()
	
	Элементы.ГруппаВидыОтборовПоСвойтвамЕГАИС.Видимость = ИспользоватьОтборПоСвойствам;
	Элементы.ДекорацияОтборПоСвойствам.Видимость = ИспользоватьОтборПоСвойствам;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоСоответствиюАлкогольнаяПродукция()
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(
			СписокАлкогольнойПродукцииЕГАИС,
			"ЕстьСоответствие",
			Истина,
			НЕ ВариантОтбораСоответствийАлкогольнаяПродукция = "Все", 
			?(ВариантОтбораСоответствийАлкогольнаяПродукция = "Связанные", ВидСравненияКомпоновкиДанных.Равно, ВидСравненияКомпоновкиДанных.НеРавно));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоСоответствиюАлкогольнаяПродукцияНаСервере()
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(
			СписокАлкогольнойПродукцииЕГАИС,
			"ЕстьСоответствие",
			Истина,
			НЕ ВариантОтбораСоответствийАлкогольнаяПродукция = "Все", 
			?(ВариантОтбораСоответствийАлкогольнаяПродукция = "Связанные", ВидСравненияКомпоновкиДанных.Равно, ВидСравненияКомпоновкиДанных.НеРавно));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоСоответствиюНоменклатура()
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(
			СписокНоменклатуры,
			"ЕстьСоответствие",
			Истина,
			НЕ ВариантОтбораСоответствийНоменклатура = "Все", 
			?(ВариантОтбораСоответствийНоменклатура = "Связанные", ВидСравненияКомпоновкиДанных.Равно, ВидСравненияКомпоновкиДанных.НеРавно));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоСоответствиюНоменклатураНаСервере()
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(
			СписокНоменклатуры,
			"ЕстьСоответствие",
			Истина,
			НЕ ВариантОтбораСоответствийНоменклатура = "Все", 
			?(ВариантОтбораСоответствийНоменклатура = "Связанные", ВидСравненияКомпоновкиДанных.Равно, ВидСравненияКомпоновкиДанных.НеРавно));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоАлкогольнойПродукции()
	
	Элементы.СписокНоменклатурыАлкогольнаяПродукция.Видимость = НЕ ОтборПоАлкогольнойПродукции;
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(
			СписокНоменклатуры,
			"АлкогольнаяПродукция",
			Истина,
			ОтборПоАлкогольнойПродукции, 
			ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоАлкогольнойПродукцииНаСервере()
	
	Элементы.СписокНоменклатурыАлкогольнаяПродукция.Видимость = НЕ ОтборПоАлкогольнойПродукции;
	
	УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(
			СписокНоменклатуры,
			"АлкогольнаяПродукция",
			Истина,
			ОтборПоАлкогольнойПродукции, 
			ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКонтрагентаПоСоответствию(ОрганизацияЕГАИС)
	
	Если ОрганизацияЕГАИС.Пустая() Тогда
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеОрганизацийЕГАИС.Контрагент
	|ИЗ
	|	РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеОрганизацийЕГАИС
	|ГДЕ
	|	СоответствиеОрганизацийЕГАИС.ОрганизацияЕГАИС = &ОрганизацияЕГАИС";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат РезультатЗапроса.Выгрузить()[0].Контрагент;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьНоменклатуруКлиент()
	
	ТекущиеДанныеНоменклатура = Элементы.СписокНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанныеНоменклатура = Неопределено Тогда
		Закрыть()
	Иначе
		Закрыть(ТекущиеДанныеНоменклатура.Ссылка)
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ИсторияПоискаНоменклатуры","ИсторияПоискаНоменклатуры",
		Элементы.СтрокаПоискаНоменклатура.СписокВыбора.ВыгрузитьЗначения());
		
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ИсторияПоискаАлкогольнойПродукции","ИсторияПоискаАлкогольнойПродукции",
		Элементы.СтрокаПоискаАлкогольнаяПродукция.СписокВыбора.ВыгрузитьЗначения());
	
	Настройки = Новый Структура;
	Настройки.Вставить("ВариантОтбораСоответствийАлкогольнаяПродукция", ВариантОтбораСоответствийАлкогольнаяПродукция);
	Настройки.Вставить("ВариантОтбораСоответствийНоменклатура"        , ВариантОтбораСоответствийНоменклатура);
	Настройки.Вставить("ИспользоватьОтборПоСвойствам"                 , ИспользоватьОтборПоСвойствам);
	Настройки.Вставить("ОтборПоАлкогольнойПродукции"                  , ОтборПоАлкогольнойПродукции);
	Настройки.Вставить("ОтборПоВидуПродукции"                         , ОтборПоВидуПродукции);
	Настройки.Вставить("ОтборПоИмпортеру"                             , ОтборПоИмпортеру);
	Настройки.Вставить("ОтборПоКрепости"                              , ОтборПоКрепости);
	Настройки.Вставить("ОтборПоОбъему"                                , ОтборПоОбъему);
	Настройки.Вставить("ОтборПоПроизводителю"                         , ОтборПоПроизводителю);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("СопоставлениеНоменклатурыЕГАИС","СопоставлениеНоменклатурыЕГАИС", Настройки);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиНаСервере()
	
	ВариантОтбораСоответствийАлкогольнаяПродукция = "Все";
	ВариантОтбораСоответствийНоменклатура = "Все";
	ОтборПоАлкогольнойПродукции = Истина;
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("СопоставлениеНоменклатурыЕГАИС", "СопоставлениеНоменклатурыЕГАИС");
	
	Если Настройки <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Настройки);
	КонецЕсли;
	
	УстановитьОтборПоСоответствиюАлкогольнаяПродукцияНаСервере();
	УстановитьОтборПоСоответствиюНоменклатураНаСервере();
	УстановитьОтборПоАлкогольнойПродукцииНаСервере();
	
	УстановитьВидимостьСвойствОтбораНаСервере();
	
КонецПроцедуры

#КонецОбласти
