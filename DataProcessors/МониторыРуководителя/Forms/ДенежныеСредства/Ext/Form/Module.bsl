
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьНастройки();
	ОбновитьДанные();
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовФормы

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Организация.
//
Процедура ОрганизацияПриИзменении(Элемент)

	ОбновитьДанные();
	
КонецПроцедуры // ОрганизацияПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Период.
//
Процедура ПериодПриИзменении(Элемент)
	
	Если Период = '00010101' Тогда
		Период = ТекущаяДата();
	КонецЕсли;	
		
	ОбновитьДанные();
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Интервал.
//
Процедура ИнтервалПриИзменении(Элемент)
	
	ОбновитьДанные();
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события Нажатие гиперссылки Подробнее из виджета ОстаткиДенежныхСредств.
//
Процедура ОстаткиДСПодробнееНажатие(Элемент)
	
	СвойстваОтчета = Новый Структура;
	СвойстваОтчета.Вставить("ИмяОтчета", "ДенежныеСредства");
	СвойстваОтчета.Вставить("КлючВарианта", "Ведомость");
	
	ПараметрыИОтборы = Новый Массив;
	
	ПериодОтчета = Новый СтандартныйПериод;
	ПериодОтчета.ДатаНачала = ПериодНачало;
	ПериодОтчета.ДатаОкончания = КонецДня(Период);
	
	Настройка = Новый Структура;
	Настройка.Вставить("ИмяПоля", "Организация");
	Настройка.Вставить("ПравоеЗначение", Организация);
	ПараметрыИОтборы.Добавить(Настройка);
	
	Настройка = Новый Структура;
	Настройка.Вставить("ИмяПоля", "СтПериод");
	Настройка.Вставить("ПравоеЗначение", ПериодОтчета);
	ПараметрыИОтборы.Добавить(Настройка);
	
	КомпоновщикНастроек = УправлениеНебольшойФирмойСервер.ПолучитьПереопределенныйКомпоновщикНастроек(СвойстваОтчета, ПараметрыИОтборы);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючВарианта",		 		 СвойстваОтчета.КлючВарианта);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки", КомпоновщикНастроек.ПользовательскиеНастройки);
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",	 Истина);
	
	ОткрытьФорму("Отчет." + СвойстваОтчета.ИмяОтчета + ".Форма", ПараметрыФормы, Элемент, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события Нажатие гиперссылки Подробнее из виджета Доходы.
//
Процедура ДоходыПодробнееНажатие(Элемент)
	
	СвойстваОтчета = Новый Структура;
	СвойстваОтчета.Вставить("ИмяОтчета", "ДенежныеСредства");
	СвойстваОтчета.Вставить("КлючВарианта", "ДинамикаПоступленияДенежныхСредств");
	
	ПараметрыИОтборы = Новый Массив;
	
	ПериодОтчета = Новый СтандартныйПериод;
	ПериодОтчета.ДатаНачала = ПериодНачало;
	ПериодОтчета.ДатаОкончания = КонецДня(Период);
	
	Настройка = Новый Структура;
	Настройка.Вставить("ИмяПоля", "Организация");
	Настройка.Вставить("ПравоеЗначение", Организация);
	ПараметрыИОтборы.Добавить(Настройка);
	
	Настройка = Новый Структура;
	Настройка.Вставить("ИмяПоля", "СтПериод");
	Настройка.Вставить("ПравоеЗначение", ПериодОтчета);
	ПараметрыИОтборы.Добавить(Настройка);
	
	КомпоновщикНастроек = УправлениеНебольшойФирмойСервер.ПолучитьПереопределенныйКомпоновщикНастроек(СвойстваОтчета, ПараметрыИОтборы);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючВарианта",		 		 СвойстваОтчета.КлючВарианта);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки", КомпоновщикНастроек.ПользовательскиеНастройки);
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",	 Истина);
	
	ОткрытьФорму("Отчет." + СвойстваОтчета.ИмяОтчета + ".Форма", ПараметрыФормы, Элемент, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события Нажатие гиперссылки Подробнее из виджета Расходы.
//
Процедура РасходыПодробнееНажатие(Элемент)
	
	СвойстваОтчета = Новый Структура;
	СвойстваОтчета.Вставить("ИмяОтчета", "ДенежныеСредства");
	СвойстваОтчета.Вставить("КлючВарианта", "ДинамикаРасходаДенежныхСредств");
	
	ПараметрыИОтборы = Новый Массив;
	
	ПериодОтчета = Новый СтандартныйПериод;
	ПериодОтчета.ДатаНачала = ПериодНачало;
	ПериодОтчета.ДатаОкончания = КонецДня(Период);
	
	Настройка = Новый Структура;
	Настройка.Вставить("ИмяПоля", "Организация");
	Настройка.Вставить("ПравоеЗначение", Организация);
	ПараметрыИОтборы.Добавить(Настройка);
	
	Настройка = Новый Структура;
	Настройка.Вставить("ИмяПоля", "СтПериод");
	Настройка.Вставить("ПравоеЗначение", ПериодОтчета);
	ПараметрыИОтборы.Добавить(Настройка);
	
	КомпоновщикНастроек = УправлениеНебольшойФирмойСервер.ПолучитьПереопределенныйКомпоновщикНастроек(СвойстваОтчета, ПараметрыИОтборы);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючВарианта",		 		 СвойстваОтчета.КлючВарианта);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки", КомпоновщикНастроек.ПользовательскиеНастройки);
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",	 Истина);
	
	ОткрытьФорму("Отчет." + СвойстваОтчета.ИмяОтчета + ".Форма", ПараметрыФормы, Элемент, УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДанные();
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
// Процедура восстанавливает настройки общие для мониторов.
//
Процедура ПолучитьНастройки()
	
	Если Константы.УчетПоКомпании.Получить() Тогда
		Организация = Константы.Компания.Получить();
		Элементы.Организация.ТолькоПросмотр = Истина;
	Иначе
		Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиДляМониторов", "Организация");
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			Организация = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяОрганизация");
			Если НЕ ЗначениеЗаполнено(Организация) Тогда
				Организация = Справочники.Организации.ОсновнаяОрганизация;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Период = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиДляМониторов", "Период");
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Интервал = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиДляМониторов", "Интервал", Перечисления.Периодичность.День);
	
КонецПроцедуры // ПолучитьНастройки()

&НаСервере
// Процедура сохраняет настройки общие для мониторов.
//
Процедура СохранитьНастройки()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиДляМониторов", "Организация", Организация);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиДляМониторов", "Интервал", Интервал);
	
	Если (НачалоДня(ТекущаяДатаСеанса()) = НачалоДня(Период)) Тогда
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиДляМониторов", "Период", '00010101');
	Иначе
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиДляМониторов", "Период", Период);
	КонецЕсли;

КонецПроцедуры // СохранитьНастройки()

&НаСервере
// Процедура обновляет данные на форме.
//
Процедура ОбновитьДанные()
	
	Если Интервал = Перечисления.Периодичность.День Тогда
		ПериодНачало = ДобавитьМесяц(НачалоДня(Период),-1);
	ИначеЕсли Интервал = Перечисления.Периодичность.Неделя Тогда
		ПериодНачало = НачалоНедели(Период) - 4*7*24*3600;
	ИначеЕсли Интервал = Перечисления.Периодичность.Месяц Или Интервал = Перечисления.Периодичность.Квартал Тогда
		ПериодНачало = ДобавитьМесяц(НачалоДня(Период),-12);
	КонецЕсли;
	
	ПредставлениеПериода = Формат(ПериодНачало, "ДЛФ=DD") + " — " + Формат(Период, "ДЛФ=DD") + ?(НачалоДня(Период) = НачалоДня(ТекущаяДатаСеанса()), " (Сегодня)", "");
	
	ОбновитьДиаграммуОстаткиДС();
	ОбновитьДиаграммыПоступлениеИРасходДС();
	ОбновитьВиджетОстаткиДС();
	ОбновитьВиджетДоходы();
	ОбновитьВиджетРасходы();
	
	СохранитьНастройки();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДиаграммуОстаткиДС()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДСОстаткиИОбороты.Период КАК Период,
		|	ДСОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства.ОстаткиИОбороты(&ПериодНачало, &Период, День, ДвиженияИГраницыПериода, Организация = &Организация) КАК ДСОстаткиИОбороты
		|ГДЕ
		|	ДСОстаткиИОбороты.СуммаКонечныйОстаток > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|ИТОГИ
		|	СУММА(СуммаКонечныйОстаток)
		|ПО
		|	Период ПЕРИОДАМИ(ДЕНЬ, &ПериодНачало, &Период)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДЕНЬ", Интервал);	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "День", Интервал);
	
	Запрос.УстановитьПараметр("Период", КонецДня(Период));
	Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
	Запрос.УстановитьПараметр("Организация", Организация);

	ДиаграммаОстаткиДС.Обновление = Ложь;
	ДиаграммаОстаткиДС.Очистить();
	ДиаграммаОстаткиДС.АвтоТранспонирование = Ложь;
	ДиаграммаОстаткиДС.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки, -1);
	
	Серия = ДиаграммаОстаткиДС.Серии.Добавить("Остаток");
	Серия.Цвет = УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Оранжевый");
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Период", "Все");
	Пока Выборка.Следующий() Цикл
		
		ПериодТочки = КонецПериода(Выборка.Период, Интервал);
		Точка = ДиаграммаОстаткиДС.Точки.Добавить();
		Точка.Текст = Формат(ПериодТочки, "ДФ=dd.MM.yy");
		Подсказка = "Остаток " + Выборка.СуммаКонечныйОстаток + " на " + Формат(ПериодТочки, "ДФ=dd.MM.yyyy");
		ДиаграммаОстаткиДС.УстановитьЗначение(Точка, Серия, Выборка.СуммаКонечныйОстаток, , Подсказка);
		
	КонецЦикла;
	
	ДиаграммаОстаткиДС.АвтоТранспонирование = Истина;
	ДиаграммаОстаткиДС.Обновление = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДиаграммыПоступлениеИРасходДС()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДенежныеСредстваОбороты.Период КАК Период,
		|	ДенежныеСредстваОбороты.СуммаПриход КАК СуммаПриход,
		|	ДенежныеСредстваОбороты.СуммаРасход КАК СуммаРасход
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства.Обороты(&ПериодНачало, &Период, День, Организация = &Организация) КАК ДенежныеСредстваОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|ИТОГИ
		|	СУММА(СуммаПриход),
		|	СУММА(СуммаРасход)
		|ПО
		|	Период ПЕРИОДАМИ(ДЕНЬ, &ПериодНачало, &Период)";
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДЕНЬ", Интервал);	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "День", Интервал);
	
	Запрос.УстановитьПараметр("Период", КонецДня(Период));
	Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
	Запрос.УстановитьПараметр("Организация", Организация);

	ДиаграммаПоступлениеДС.Обновление = Ложь;
	ДиаграммаПоступлениеДС.Очистить();
	ДиаграммаПоступлениеДС.АвтоТранспонирование = Ложь;
	ДиаграммаПоступлениеДС.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки, -1);
	
	Серия = ДиаграммаПоступлениеДС.Серии.Добавить("Поступление");
	Серия.Цвет = УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Зеленый");
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Период", "Все");
	Пока Выборка.Следующий() Цикл
		
		ПериодТочки = КонецПериода(Выборка.Период, Интервал);
		Точка = ДиаграммаПоступлениеДС.Точки.Добавить();
		Точка.Текст = Формат(ПериодТочки, "ДФ=dd.MM.yy");
		Подсказка = "Поступление " + Выборка.СуммаПриход + " на " + Формат(ПериодТочки, "ДФ=dd.MM.yyyy");
		ДиаграммаПоступлениеДС.УстановитьЗначение(Точка, Серия, Выборка.СуммаПриход, , Подсказка);
		
	КонецЦикла;
	
	ДиаграммаПоступлениеДС.АвтоТранспонирование = Истина;
	ДиаграммаПоступлениеДС.Обновление = Истина;
	
	ДиаграммаРасходДС.Обновление = Ложь;
	ДиаграммаРасходДС.Очистить();
	ДиаграммаРасходДС.АвтоТранспонирование = Ложь;
	ДиаграммаРасходДС.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки, -1);
	
	Серия = ДиаграммаРасходДС.Серии.Добавить("Расход");
	Серия.Цвет = УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Красный");
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		
		ПериодТочки = КонецПериода(Выборка.Период, Интервал);
		Точка = ДиаграммаРасходДС.Точки.Добавить();
		Точка.Текст = Формат(ПериодТочки, "ДФ=dd.MM.yy");
		Подсказка = "Расход " + Выборка.СуммаРасход + " на " + Формат(ПериодТочки, "ДФ=dd.MM.yyyy");
		ДиаграммаРасходДС.УстановитьЗначение(Точка, Серия, Выборка.СуммаРасход, , Подсказка);
		
	КонецЦикла;
	
	ДиаграммаРасходДС.АвтоТранспонирование = Истина;
	ДиаграммаРасходДС.Обновление = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВиджетОстаткиДС()
	
	ШиринаРасчетныйСчет = 19;
	ШиринаОстатокРасчетныйСчет = 9;
	ШиринаКасса = 16;
	ШиринаОстатокКасса = 8;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДенежныеСредстваОстатки.БанковскийСчетКасса КАК БанковскийСчет,
		|	ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК БанковскийСчетПредставление,
		|	ДенежныеСредстваОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства.Остатки(
		|			&Период,
		|			Организация = &Организация
		|				И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)) КАК ДенежныеСредстваОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	СуммаОстаток УБЫВ
		|ИТОГИ
		|	СУММА(СуммаОстаток)
		|ПО
		|	ОБЩИЕ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДенежныеСредстваОстатки.БанковскийСчетКасса КАК Касса,
		|	ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК КассаПредставление,
		|	ДенежныеСредстваОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства.Остатки(
		|			&Период,
		|			Организация = &Организация
		|				И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)) КАК ДенежныеСредстваОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	СуммаОстаток УБЫВ
		|ИТОГИ
		|	СУММА(СуммаОстаток)
		|ПО
		|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Период", КонецДня(Период));
	Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();

	ВыборкаОбщиеИтоги = МассивРезультатов[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаОбщиеИтоги.Следующий() Тогда
		Элементы.ДекорацияРасчетныеСчетаИтог.Заголовок = УправлениеНебольшойФирмойСервер.СформироватьЗаголовок(ВыборкаОбщиеИтоги.СуммаОстаток);
	Иначе
		Элементы.ДекорацияРасчетныеСчетаИтог.Заголовок = "—";
	КонецЕсли;
	
	Элементы.РасчетныйСчет.Заголовок = "";
	Элементы.РасчетныйСчет.Подсказка = "";
	Элементы.ОстатокРасчетныйСчет.Заголовок = "";
	Элементы.ОстатокРасчетныйСчет.Подсказка = "";
	
	Выборка = ВыборкаОбщиеИтоги.Выбрать();
	Для Индекс = 1 По 6 Цикл
		Если Выборка.Следующий() Тогда
			
			СуммаОстатокПредставление = Формат(Выборка.СуммаОстаток, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00; ЧГ=3,0");
			
			Элементы.РасчетныйСчет.Заголовок = Элементы.РасчетныйСчет.Заголовок + ?(ПустаяСтрока(Элементы.РасчетныйСчет.Заголовок),"", Символы.ПС) 
				+ Лев(Выборка.БанковскийСчетПредставление, ШиринаРасчетныйСчет) + ?(СтрДлина(Выборка.БанковскийСчетПредставление) > ШиринаРасчетныйСчет, "...", "");
			Элементы.РасчетныйСчет.Подсказка = Элементы.РасчетныйСчет.Подсказка + ?(ПустаяСтрока(Элементы.РасчетныйСчет.Подсказка),"", Символы.ПС) 
				+ Выборка.БанковскийСчетПредставление;
				
			Элементы.ОстатокРасчетныйСчет.Заголовок = Элементы.ОстатокРасчетныйСчет.Заголовок + ?(ПустаяСтрока(Элементы.ОстатокРасчетныйСчет.Заголовок),"", Символы.ПС) 
				+ Лев(СуммаОстатокПредставление, ШиринаОстатокРасчетныйСчет) + ?(СтрДлина(СуммаОстатокПредставление) > ШиринаОстатокРасчетныйСчет, "...", "");
			Элементы.ОстатокРасчетныйСчет.Подсказка = Элементы.ОстатокРасчетныйСчет.Подсказка + ?(ПустаяСтрока(Элементы.ОстатокРасчетныйСчет.Подсказка),"", Символы.ПС) 
				+ СуммаОстатокПредставление;
				
		КонецЕсли;
	КонецЦикла;
	
	ВыборкаОбщиеИтоги = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаОбщиеИтоги.Следующий() Тогда
		Элементы.ДекорацияКассыИтог.Заголовок = УправлениеНебольшойФирмойСервер.СформироватьЗаголовок(ВыборкаОбщиеИтоги.СуммаОстаток);
	Иначе
		Элементы.ДекорацияКассыИтог.Заголовок = "—";
	КонецЕсли;
	
	Элементы.Касса.Заголовок = "";
	Элементы.Касса.Подсказка = "";
	Элементы.ОстатокКасса.Заголовок = "";
	Элементы.ОстатокКасса.Подсказка = "";
	
	Выборка = ВыборкаОбщиеИтоги.Выбрать();
	Для Индекс = 1 По 6 Цикл
		Если Выборка.Следующий() Тогда
			
			СуммаОстатокПредставление = Формат(Выборка.СуммаОстаток, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00; ЧГ=3,0");
			
			Элементы.Касса.Заголовок = Элементы.Касса.Заголовок + ?(ПустаяСтрока(Элементы.Касса.Заголовок),"", Символы.ПС) 
				+ Лев(Выборка.КассаПредставление, ШиринаКасса) + ?(СтрДлина(Выборка.КассаПредставление) > ШиринаКасса, "...", "");
			Элементы.Касса.Подсказка = Элементы.Касса.Подсказка + ?(ПустаяСтрока(Элементы.Касса.Подсказка),"", Символы.ПС) 
				+ Выборка.КассаПредставление;
				
			Элементы.ОстатокКасса.Заголовок = Элементы.ОстатокКасса.Заголовок + ?(ПустаяСтрока(Элементы.ОстатокКасса.Заголовок),"", Символы.ПС) 
				+ Лев(СуммаОстатокПредставление, ШиринаОстатокКасса) + ?(СтрДлина(СуммаОстатокПредставление) > ШиринаОстатокКасса, "...", "");
			Элементы.ОстатокКасса.Подсказка = Элементы.ОстатокКасса.Подсказка + ?(ПустаяСтрока(Элементы.ОстатокКасса.Подсказка),"", Символы.ПС) 
				+ СуммаОстатокПредставление;
				
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВиджетДоходы()
	
	ШиринаСтатьяДвижения  = 30;
	ШиринаСумма = 10;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ДСОстаткиИОбороты.Регистратор ССЫЛКА Документ.ВводНачальныхОстатков
		|			ТОГДА ""Ввод начальных остатков""
		|		ИНАЧЕ ДСОстаткиИОбороты.Регистратор.Статья.Представление
		|	КОНЕЦ КАК ВидДохода,
		|	СУММА(ДСОстаткиИОбороты.СуммаПриход) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства.ОстаткиИОбороты(&ПериодНачало, &Период, Регистратор, , Организация = &Организация) КАК ДСОстаткиИОбороты
		|ГДЕ
		|	ДСОстаткиИОбороты.СуммаПриход > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ДСОстаткиИОбороты.Регистратор ССЫЛКА Документ.ВводНачальныхОстатков
		|			ТОГДА ""Ввод начальных остатков""
		|		ИНАЧЕ ДСОстаткиИОбороты.Регистратор.Статья.Представление
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сумма УБЫВ
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ";
		
	Запрос.УстановитьПараметр("Период", КонецДня(Период));
	Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ВыборкаОбщиеИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаОбщиеИтоги.Следующий() Тогда
		Элементы.СуммаДоходовИтог.Заголовок = УправлениеНебольшойФирмойСервер.СформироватьЗаголовок(ВыборкаОбщиеИтоги.Сумма);
	Иначе
		Элементы.СуммаДоходовИтог.Заголовок = "—";
	КонецЕсли;
	
	Элементы.ВидДохода.Заголовок = "";
	Элементы.ВидДохода.Подсказка = "";
	Элементы.СуммаДохода.Заголовок = "";
	Элементы.СуммаДохода.Подсказка = "";
	
	Выборка = ВыборкаОбщиеИтоги.Выбрать();
	Для Индекс = 1 По 6 Цикл
		Если Выборка.Следующий() Тогда
			
			СуммаПредставление = Формат(Выборка.Сумма, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00; ЧГ=3,0");
			
			Элементы.ВидДохода.Заголовок = Элементы.ВидДохода.Заголовок + ?(ПустаяСтрока(Элементы.ВидДохода.Заголовок),"", Символы.ПС) 
				+ Лев(Выборка.ВидДохода, ШиринаСтатьяДвижения) + ?(СтрДлина(Выборка.ВидДохода) > ШиринаСтатьяДвижения, "...", "");
			Элементы.ВидДохода.Подсказка = Элементы.ВидДохода.Подсказка + ?(ПустаяСтрока(Элементы.ВидДохода.Подсказка),"", Символы.ПС) 
				+ Выборка.ВидДохода;
				
			Элементы.СуммаДохода.Заголовок = Элементы.СуммаДохода.Заголовок + ?(ПустаяСтрока(Элементы.СуммаДохода.Заголовок),"", Символы.ПС) 
				+ Лев(СуммаПредставление, ШиринаСумма) + ?(СтрДлина(СуммаПредставление) > ШиринаСумма, "...", "");
			Элементы.СуммаДохода.Подсказка = Элементы.СуммаДохода.Подсказка + ?(ПустаяСтрока(Элементы.СуммаДохода.Подсказка),"", Символы.ПС) 
				+ СуммаПредставление;
				
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВиджетРасходы()
	
	ШиринаСтатьяДвижения  = 30;
	ШиринаСумма = 10;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ДСОстаткиИОбороты.Регистратор ССЫЛКА Документ.ВводНачальныхОстатков
		|			ТОГДА ""Ввод начальных остатков""
		|		ИНАЧЕ ДСОстаткиИОбороты.Регистратор.Статья.Представление
		|	КОНЕЦ КАК ВидРасхода,
		|	СУММА(ДСОстаткиИОбороты.СуммаРасход) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства.ОстаткиИОбороты(&ПериодНачало, &Период, Регистратор, , Организация = &Организация) КАК ДСОстаткиИОбороты
		|ГДЕ
		|	ДСОстаткиИОбороты.СуммаРасход > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ДСОстаткиИОбороты.Регистратор ССЫЛКА Документ.ВводНачальныхОстатков
		|			ТОГДА ""Ввод начальных остатков""
		|		ИНАЧЕ ДСОстаткиИОбороты.Регистратор.Статья.Представление
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сумма УБЫВ
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ";

	Запрос.УстановитьПараметр("Период", КонецДня(Период));
	Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ВыборкаОбщиеИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаОбщиеИтоги.Следующий() Тогда
		Элементы.СуммаРасходовИтог.Заголовок = УправлениеНебольшойФирмойСервер.СформироватьЗаголовок(ВыборкаОбщиеИтоги.Сумма);
	Иначе
		Элементы.СуммаРасходовИтог.Заголовок = "—";
	КонецЕсли;
	
	Элементы.ВидРасхода.Заголовок = "";
	Элементы.ВидРасхода.Подсказка = "";
	Элементы.СуммаРасхода.Заголовок = "";
	Элементы.СуммаРасхода.Подсказка = "";
	
	Выборка = ВыборкаОбщиеИтоги.Выбрать();
	Для Индекс = 1 По 6 Цикл
		Если Выборка.Следующий() Тогда
			
			СуммаПредставление = Формат(Выборка.Сумма, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00; ЧГ=3,0");
			
			Элементы.ВидРасхода.Заголовок = Элементы.ВидРасхода.Заголовок + ?(ПустаяСтрока(Элементы.ВидРасхода.Заголовок),"", Символы.ПС) 
				+ Лев(Выборка.ВидРасхода, ШиринаСтатьяДвижения) + ?(СтрДлина(Выборка.ВидРасхода) > ШиринаСтатьяДвижения, "...", "");
			Элементы.ВидРасхода.Подсказка = Элементы.ВидРасхода.Подсказка + ?(ПустаяСтрока(Элементы.ВидРасхода.Подсказка),"", Символы.ПС) 
				+ Выборка.ВидРасхода;
				
			Элементы.СуммаРасхода.Заголовок = Элементы.СуммаРасхода.Заголовок + ?(ПустаяСтрока(Элементы.СуммаРасхода.Заголовок),"", Символы.ПС) 
				+ Лев(СуммаПредставление, ШиринаСумма) + ?(СтрДлина(СуммаПредставление) > ШиринаСумма, "...", "");
			Элементы.СуммаРасхода.Подсказка = Элементы.СуммаРасхода.Подсказка + ?(ПустаяСтрока(Элементы.СуммаРасхода.Подсказка),"", Символы.ПС) 
				+ СуммаПредставление;
				
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КонецПериода(Период, Периодичность)
	
	Если Периодичность = Перечисления.Периодичность.День Тогда
		Результат = КонецДня(Период);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		Результат = КонецНедели(Период);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Декада Тогда
		ДеньДекады = ДеньГода(Период) % 10;
		ДнейДоКонцаДекады = ?(ДеньДекады = 0, 0, 10 - ДеньДекады);
		Результат = КонецДня(Период + 86400*ДнейДоКонцаДекады);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		Результат = КонецМесяца(Период);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		Результат = КонецКвартала(Период);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Полугодие Тогда
		Если Месяц(Период) <=6 Тогда
			Результат = ДобавитьМесяц(КонецГода(Период), -6);
		Иначе
			Результат = КонецГода(Период);
		КонецЕсли;
	ИначеЕсли Периодичность = Перечисления.Периодичность.Год Тогда
		Результат = КонецГода(Период);
	Иначе
		Результат = Период;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти