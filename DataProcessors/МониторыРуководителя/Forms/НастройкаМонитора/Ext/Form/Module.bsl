
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойКлиентСервер.ЗаполнитьСписокИзСписка(ДоступныеТипыДиаграммы("НесколькоСерий"), Элементы.ПродажиТипДиаграммы.СписокВыбора);
	УправлениеНебольшойФирмойКлиентСервер.ЗаполнитьСписокИзСписка(ДоступныеТипыДиаграммы("ОднаСерия"), Элементы.ДеньгиТипДиаграммы.СписокВыбора);
	УправлениеНебольшойФирмойКлиентСервер.ЗаполнитьСписокИзСписка(ДоступныеТипыДиаграммы("ОднаСерия"), Элементы.ДолгиТипДиаграммы.СписокВыбора);
	
	СоставВиджетов = Обработки.МониторыРуководителя.СоставВиджетовТекущий();
	Для Каждого ЭлементСписка Из СоставВиджетов Цикл
		НастройкаВиджета = Обработки.МониторыРуководителя.НастройкаВиджетаТекущая(ЭлементСписка.Значение);
		ИмяВиджета = ОбщегоНазначения.ИмяЗначенияПеречисления(ЭлементСписка.Значение);
		СоответствиеВиджетовИменамМетаданных.Добавить(ЭлементСписка.Значение, ИмяВиджета);
		Для Каждого КлючИЗначение Из НастройкаВиджета Цикл
			ЭтаФорма[ИмяВиджета + КлючИЗначение.Ключ] = КлючИЗначение.Значение;
		КонецЦикла;
	КонецЦикла;
	
	Если НЕ Параметры.ТекущийВиджет.Пустая() Тогда
		НайденныйЭлемент = СоставВиджетов.НайтиПоЗначению(Параметры.ТекущийВиджет);
		Если НайденныйЭлемент <> Неопределено Тогда
			Элементы.СоставВиджетов.ТекущаяСтрока = НайденныйЭлемент.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДолгиПоляРасшифровкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДолгиПоляРасшифровкиКонецВыбора", ЭтотОбъект);
	Заголовок = НСтр("ru = 'Отметьте выводимые колонки'");
	ДолгиПоляРасшифровки.ПоказатьОтметкуЭлементов(ОписаниеОповещения, Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура ДолгиПоляРасшифровкиКонецВыбора(Список, ДополнительныеПараметры) Экспорт
	
	Если Список <> Неопределено Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		СохранитьНастройкиНаСервере();
		Закрыть(Модифицированность);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтандартныеНастройки(Команда)
	
	ЗаполнитьВиджетыПоУмолчанию();
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьВиджетыПоУмолчанию()
	
	СоставВиджетов = Обработки.МониторыРуководителя.СоставВиджетовПоУмолчанию();
	
	Для Каждого ЭлементСписка Из СоставВиджетов Цикл
		НастройкаВиджета = Обработки.МониторыРуководителя.НастройкаВиджетаПоУмолчанию(ЭлементСписка.Значение);
		ИмяВиджета = СоответствиеВиджетовИменамМетаданных.НайтиПоЗначению(ЭлементСписка.Значение).Представление;
		Для Каждого КлючИЗначение Из НастройкаВиджета Цикл
			ЭтотОбъект[ИмяВиджета + КлючИЗначение.Ключ] = КлючИЗначение.Значение;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиДляМонитора", "СоставВиджетов", СоставВиджетов,
		НСтр("ru = 'Настройка состава виджетов монитора руководителя'"));
		
	Реквизиты = ПолучитьРеквизиты();
	Для Каждого ЭлементСписка Из СоставВиджетов Цикл
		
		НастройкаВиджета = Новый Структура;
		ИмяВиджета = СоответствиеВиджетовИменамМетаданных.НайтиПоЗначению(ЭлементСписка.Значение).Представление;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			Если Лев(Реквизит.Имя, СтрДлина(ИмяВиджета)) = ИмяВиджета Тогда
				ИмяНастройки = Сред(Реквизит.Имя, СтрДлина(ИмяВиджета) + 1);
				НастройкаВиджета.Вставить(ИмяНастройки, ЭтотОбъект[Реквизит.Имя]);
			КонецЕсли;
		КонецЦикла;
		
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиДляМонитора", ИмяВиджета, НастройкаВиджета,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Настройка виджета %1 монитора руководителя'"),
				Строка(ЭлементСписка.Значение)
				)
			);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставВиджетовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.СоставВиджетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницыНастроек.ТекущаяСтраница = Элементы[СоответствиеВиджетовИменамМетаданных.НайтиПоЗначению(ТекущиеДанные.Значение).Представление];
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДоступныеТипыДиаграммы(Вариант = Неопределено)
	
	ДоступныеТипы = Новый СписокЗначений;
	
	Если Вариант = Неопределено Тогда
		Вариант = "НесколькоСерий";
	КонецЕсли;
	
	Если Вариант = "ОднаСерия" Тогда
		
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.График);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГрафикПоШагам);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГрафикСОбластями);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.Гистограмма);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГистограммаОбъемная);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГистограммаГоризонтальная);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГистограммаГоризонтальнаяОбъемная);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.Биржевая);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.Изометрическая);
		
	ИначеЕсли Вариант = "НесколькоСерий" Тогда
		
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.Водопад);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.Гистограмма);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГистограммаГоризонтальная);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГистограммаГоризонтальнаяОбъемная);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГистограммаОбъемная);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГистограммаСНакоплением);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГистограммаСНакоплениемГоризонтальная);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГистограммаСНакоплениемГоризонтальнаяОбъемная);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГистограммаСНакоплениемОбъемная);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.График);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ГрафикСОбластями);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.Изометрическая);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ИзометрическаяЛента);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ИзометрическаяНепрерывная);
		ДоступныеТипы.Добавить(Перечисления.ТипыДиаграмм.ИзометрическаяПирамида);
		
	КонецЕсли;
	
	Возврат ДоступныеТипы;
	
КонецФункции

#КонецОбласти
