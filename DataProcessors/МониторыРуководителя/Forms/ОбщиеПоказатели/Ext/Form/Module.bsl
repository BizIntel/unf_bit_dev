
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьНастройки();
	ОбновитьДанные();
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовФормы

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Организация.
//
Процедура ОрганизацияПриИзменении(Элемент)

	ОбновитьДанные();
	
КонецПроцедуры // ОрганизацияПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Период.
//
Процедура ПериодПриИзменении(Элемент)
	
	Если Период = '00010101' Тогда
		Период = ТекущаяДата();
	КонецЕсли;	
		
	ОбновитьДанные();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДанные();
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
// Процедура восстанавливает настройки общие для мониторов.
//
Процедура ПолучитьНастройки()
	
	Если Константы.УчетПоКомпании.Получить() Тогда
		Организация = Константы.Компания.Получить();
		Элементы.Организация.ТолькоПросмотр = Истина;
	Иначе
		Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиДляМониторов", "Организация");
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			Организация = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяОрганизация");
			Если НЕ ЗначениеЗаполнено(Организация) Тогда
				Организация = Справочники.Организации.ОсновнаяОрганизация;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Период = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиДляМониторов", "Период");
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
КонецПроцедуры // ПолучитьНастройки()

&НаСервере
// Процедура сохраняет настройки общие для мониторов.
//
Процедура СохранитьНастройки()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиДляМониторов", "Организация", Организация);
	
	Если (НачалоДня(ТекущаяДатаСеанса()) = НачалоДня(Период)) Тогда
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиДляМониторов", "Период", '00010101');
	Иначе
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиДляМониторов", "Период", Период);
	КонецЕсли;

КонецПроцедуры // СохранитьНастройки()

&НаСервере
// Процедура обновляет данные на форме.
//
Процедура ОбновитьДанные()
	
	СохранитьНастройки();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчетДоходовИРасходов.Период КАК Период,
	|	УчетДоходовИРасходов.СуммаДоходовОборот КАК Выручка,
	|	0 КАК Себестоимость,
	|	0 КАК Расходы
	|ИЗ
	|	РегистрНакопления.ДоходыИРасходы.Обороты(
	|			&ДатаОтбораНачала,
	|			&ДатаОтбораОкончания,
	|			Месяц,
	|			Организация = &Организация
	|				И СчетУчета.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Доходы)) КАК УчетДоходовИРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчетДоходовИРасходов.Период,
	|	0,
	|	УчетДоходовИРасходов.СуммаРасходовОборот,
	|	0
	|ИЗ
	|	РегистрНакопления.ДоходыИРасходы.Обороты(
	|			&ДатаОтбораНачала,
	|			&ДатаОтбораОкончания,
	|			Месяц,
	|			Организация = &Организация
	|				И СчетУчета.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.СебестоимостьПродаж)) КАК УчетДоходовИРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчетДоходовИРасходов.Период,
	|	0,
	|	0,
	|	УчетДоходовИРасходов.СуммаРасходовОборот
	|ИЗ
	|	РегистрНакопления.ДоходыИРасходы.Обороты(
	|			&ДатаОтбораНачала,
	|			&ДатаОтбораОкончания,
	|			Месяц,
	|			Организация = &Организация
	|				И СчетУчета.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)) КАК УчетДоходовИРасходов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ
	|	СУММА(Выручка),
	|	СУММА(Себестоимость),
	|	СУММА(Расходы)
	|ПО
	|	Период ПЕРИОДАМИ(МЕСЯЦ, &ДатаОтбораНачала, &ДатаОтбораОкончания)";
	
	Запрос.УстановитьПараметр("ДатаОтбораНачала", ДобавитьМесяц(КонецМесяца(Период)+1,-12));
	Запрос.УстановитьПараметр("ДатаОтбораОкончания", КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	МаксВыручка = 0;
	МаксСебестоимость = 0;
	МаксВаловаяПрибыль = 0;
	МаксРасходы = 0;
	МаксПрибыль = 0;
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		Если Выборка.Выручка > МаксВыручка Тогда
			МаксВыручка = Выборка.Выручка;
		КонецЕсли;
		Если Выборка.Себестоимость > МаксСебестоимость Тогда
			МаксСебестоимость = Выборка.Себестоимость;
		КонецЕсли;
		Если Выборка.Выручка - Выборка.Себестоимость > МаксВаловаяПрибыль Тогда
			МаксВаловаяПрибыль = Выборка.Выручка - Выборка.Себестоимость;
		КонецЕсли;
		Если Выборка.Расходы > МаксРасходы Тогда
			МаксРасходы = Выборка.Расходы;
		КонецЕсли;
		Если Выборка.Выручка - Выборка.Себестоимость - Выборка.Расходы > МаксПрибыль Тогда
			МаксПрибыль = Выборка.Выручка - Выборка.Себестоимость - Выборка.Расходы;
		КонецЕсли;
	КонецЦикла;
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Период", "Все");
	НомерМесяца = 0;
	Пока Выборка.Следующий() Цикл
		
		НомерМесяца = НомерМесяца + 1;
		
		Выручка = ?(ЗначениеЗаполнено(Выборка.Выручка), Выборка.Выручка, 0);
		Себестоимость = ?(ЗначениеЗаполнено(Выборка.Себестоимость), Выборка.Себестоимость, 0);
		ВаловаяПрибыль = Выручка - Себестоимость;
		Расходы = ?(ЗначениеЗаполнено(Выборка.Расходы), Выборка.Расходы, 0);
		Прибыль = Выручка - Себестоимость - Расходы;
		
		Элементы["Месяц"+НомерМесяца].Заголовок = Формат(Выборка.Период, "ДФ='MMMM yyyy'");
		
		Элементы["Выручка"+НомерМесяца].Заголовок = ФорматированнаяСтрокаДляДиаграммы(Выручка, МаксВыручка, УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Зеленый"));
		Элементы["Себестоимость"+НомерМесяца].Заголовок = ФорматированнаяСтрокаДляДиаграммы(Себестоимость, МаксСебестоимость, УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Синий"));
		Элементы["ВаловаяПрибыль"+НомерМесяца].Заголовок = ФорматированнаяСтрокаДляДиаграммы(ВаловаяПрибыль, МаксВаловаяПрибыль, УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Коралловый"));
		Элементы["Расходы"+НомерМесяца].Заголовок = ФорматированнаяСтрокаДляДиаграммы(Расходы, МаксРасходы, УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Оранжевый"));
		Элементы["Прибыль"+НомерМесяца].Заголовок = ФорматированнаяСтрокаДляДиаграммы(Прибыль, МаксПрибыль, УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Пурпурный"));
		
	КонецЦикла;
	
КонецПроцедуры

// Функция возвращает форматированную строку для элемента формы в виде собранной диаграммы (горизонтальной нормированной гистограммы) с подписью
//
// Параметры:
//  ТекущееЗначение	 - Число	 - значение серии
//  МаксЗначение	 - Число	 - максимально возможное значение для диаграммы
//  ЦветЗначения	 - Цвет	 - цвет для серии
// Возвращаемое значение:
//  ФорматированнаяСтрока
&НаСервереБезКонтекста
Функция ФорматированнаяСтрокаДляДиаграммы(ТекущееЗначение, МаксЗначение, ЦветЗначения)
	
	СимволовВДиаграмме = 16;
	ЦветПустогоЗначения = УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Светло-серый");
	
	ЭлементыСтроки = Новый Массив;
	ЭлементЗначениеДиаграммы = Новый Структура("Строка, Шрифт, ЦветТекста");
	СтрокаДиаграммы = "";
	
	Если ТекущееЗначение < 0 Или МаксЗначение <= 0 Тогда
		СимволовТекущегоЗначения = 0;
	Иначе
		СимволовТекущегоЗначения = ?(МаксЗначение = 0, 0, Окр(ТекущееЗначение / МаксЗначение * СимволовВДиаграмме));
	КонецЕсли;
	Для Индекс = 1 По СимволовТекущегоЗначения Цикл
		СтрокаДиаграммы = СтрокаДиаграммы + "▄";
	КонецЦикла;
	ЭлементЗначениеДиаграммы.Строка = СтрокаДиаграммы;
	ЭлементЗначениеДиаграммы.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	ЭлементЗначениеДиаграммы.ЦветТекста = ЦветЗначения;
	
	ЭлементыСтроки.Добавить(ЭлементЗначениеДиаграммы);
	
	ЭлементПустоеЗначениеДиаграммы = Новый Структура("Строка, Шрифт, ЦветТекста");
	СтрокаДиаграммы = "";
	
	Для Индекс = СимволовТекущегоЗначения+1 По СимволовВДиаграмме Цикл
		СтрокаДиаграммы = СтрокаДиаграммы + "▄";
	КонецЦикла;
	СтрокаДиаграммы = СтрокаДиаграммы + Символы.ПС;
	ЭлементПустоеЗначениеДиаграммы.Строка = СтрокаДиаграммы;
	ЭлементПустоеЗначениеДиаграммы.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	ЭлементПустоеЗначениеДиаграммы.ЦветТекста = ЦветПустогоЗначения;
	ЭлементыСтроки.Добавить(ЭлементПустоеЗначениеДиаграммы);
	
	ЭлементПредставлениеЗначения = Новый Структура("Строка, Шрифт, ЦветТекста");
	
	ЭлементПредставлениеЗначения.Строка = Формат(ТекущееЗначение, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00; ЧГ=3,0");
	Если ТекущееЗначение < 0 Тогда
		ЭлементПредставлениеЗначения.ЦветТекста = УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Красный");
	Иначе
		ЭлементПредставлениеЗначения.ЦветТекста = УправлениеНебольшойФирмойСервер.ЦветДляМониторов("Серый");
	КонецЕсли;
	ЭлементПредставлениеЗначения.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	ЭлементыСтроки.Добавить(ЭлементПредставлениеЗначения);
	
	Возврат УправлениеНебольшойФирмойСервер.СкомпоноватьФорматированнуюСтроку(ЭлементыСтроки);
	
КонецФункции

#КонецОбласти
