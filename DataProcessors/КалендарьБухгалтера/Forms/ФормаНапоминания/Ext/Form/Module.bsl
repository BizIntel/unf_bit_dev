
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Напоминания = Параметры.Напоминания;
	Индекс = 0;
	Для Каждого Напоминание Из Напоминания Цикл
		
		События.Добавить();
		События[Индекс].Срок = Напоминание.Срок;
		События[Индекс].Периодичность = Напоминание.Периодичность;
		События[Индекс].Налогоплательщик = Напоминание.Налогоплательщик;
		События[Индекс].ЗаПериодС = Напоминание.ЗаПериодС;
		События[Индекс].ЗаПериодПо = Напоминание.ЗаПериодПо;
		События[Индекс].НарастающийИтог = Напоминание.НарастающийИтог;
		События[Индекс].ФормаОтчета = Напоминание.ФормаОтчета;
		События[Индекс].Организация = Напоминание.Организация;
		События[Индекс].ДатаПоказа = Напоминание.ДатаПоказа;
		События[Индекс].КартинкаОповещение = БиблиотекаКартинок.НапоминаниеРО;
		
		// Для признака событий "Уплата" название налога хранится в реквизите "ИсточникОтчета".
		Если Напоминание.ТипСообщения = Перечисления.СообщенияДляРегОтчетов.УплатаНалога Тогда
			События[Индекс].ТипСообщения = "Уплата налога";
			События[Индекс].НазваниеОтчетаИлиНалога = Напоминание.ИсточникОтчета;
		ИначеЕсли Напоминание.ТипСообщения = Перечисления.СообщенияДляРегОтчетов.СдачаОтчета Тогда
			События[Индекс].ТипСообщения = "Сдача отчета";
			События[Индекс].ИсточникОтчета = Напоминание.ИсточникОтчета;
			События[Индекс].НазваниеОтчетаИлиНалога = Напоминание.НазваниеОтчетаИлиНалога;
		КонецЕсли;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
	ДатаНапоминания = ТекущаяДатаСеанса();
	ЭтаФорма.Заголовок = "Напоминания календаря бухгалтера: " + Формат(ДатаНапоминания, "ДФ='dd ММММ yyyy';ДЛФ=ДД") + " г., " + Формат(ДатаНапоминания, "ДФ='дддд'");
	
	ПеречислениеПериодичностьМесяц   = Перечисления.Периодичность.Месяц;
	ПеречислениеПериодичностьКвартал = Перечисления.Периодичность.Квартал;

КонецПроцедуры

&НаКлиенте
Процедура СобытияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьПоСтроке(Элемент.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПоСтроке(ВыбраннаяСтрока)
	
	Если ВыбраннаяСтрока.ТипСообщения = "Уплата налога" Тогда
		
		ОткрытьФорму(РегламентированнаяОтчетностьКлиентПереопределяемый.ИмяФормыДляУплатыНалога());
		
		Возврат;
		
	КонецЕсли;

	Если СтрНайти(ВыбраннаяСтрока.Периодичность, "Месячная") Тогда
		Периодичность = ПеречислениеПериодичностьМесяц;
	ИначеЕсли СтрНайти(ВыбраннаяСтрока.Периодичность, "Квартальная") Тогда
		Периодичность = ПеречислениеПериодичностьКвартал;
	Иначе
		Периодичность = Неопределено;
	КонецЕсли;

	ДатаНач = НачалоДня(ВыбраннаяСтрока.ЗаПериодС);
	ДатаКон = КонецДня(ВыбраннаяСтрока.ЗаПериодПо);
	ОрганизацияОтбор = ВыбраннаяСтрока.Организация;
	Организация = Новый СписокЗначений();
	Организация.Добавить(ОрганизацияОтбор);

	ИсточникОтчета = ВыбраннаяСтрока.ИсточникОтчета;
	ДокументыОтчета = РегламентированнаяОтчетностьВызовСервера.ДокументыСУчетомКритериевОтбораКалендарь(ИсточникОтчета, ДатаНач, ДатаКон, ОрганизацияОтбор, "", ВыбраннаяСтрока.Периодичность);

	Если ДокументыОтчета <> 0 Тогда
		мПериодичностьКалендарь = "Уникальная";
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ИсточникОтчета", ИсточникОтчета);
		ПараметрыФормы.Вставить("Периодичность", Периодичность);
		ПараметрыФормы.Вставить("ДатаКонцаПериодаОтчета", ДатаКон);
		ПараметрыФормы.Вставить("Организация", Организация);
		ПараметрыФормы.Вставить("КодИФНС", Неопределено);
		ПараметрыФормы.Вставить("ДатаНачалаПериодаОтчета", ДатаНач);
		ПараметрыФормы.Вставить("ОтборКодИФНС", Ложь);
		ПараметрыФормы.Вставить("ОтборПериод", Истина);
		ПараметрыФормы.Вставить("мПериодичностьКалендарь", мПериодичностьКалендарь);

		ФормаВыбораОтчета = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ФормаВыбораОтчета", ПараметрыФормы, ЭтаФорма);
		ДополнительныеПараметры = Новый Структура("ДатаКон, ДатаНач, ИсточникОтчета, ОрганизацияОтбор, Периодичность", ДатаКон, ДатаНач, ИсточникОтчета, ОрганизацияОтбор, Периодичность);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПоСтрокеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ФормаВыбораОтчета.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВыбораОтчета.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбораОтчета.Открыть();
	Иначе
		РегламентированнаяОтчетностьКлиент.ОткрытьРегОтчетКалендарь(ИсточникОтчета, ДатаНач, ДатаКон, Периодичность, ОрганизацияОтбор);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПоСтрокеЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ДатаКон = ДополнительныеПараметры.ДатаКон;
	ДатаНач = ДополнительныеПараметры.ДатаНач;
	ИсточникОтчета = ДополнительныеПараметры.ИсточникОтчета;
	ОрганизацияОтбор = ДополнительныеПараметры.ОрганизацияОтбор;
	Периодичность = ДополнительныеПараметры.Периодичность;
	
	Если РезультатВыбора = Истина Тогда // создаем новый отчет
		РегламентированнаяОтчетностьКлиент.ОткрытьРегОтчетКалендарь(ИсточникОтчета, ДатаНач, ДатаКон, Периодичность, ОрганизацияОтбор);
	ИначеЕсли ЗначениеЗаполнено(РезультатВыбора) Тогда
		ПоказатьЗначение(, РезультатВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСобытие(Команда)
	
	Если Элементы.События.ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(,"Нет выбранного события");
		Возврат;
	КонецЕсли;
	ОткрытьПоСтроке(Элементы.События.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСобытие(Команда)
	
	Если Элементы.События.ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(,"Нет выбранного события");
		Возврат;
	КонецЕсли;

	РежимПлатежа = Элементы.События.ТекущиеДанные.ТипСообщения = "Уплата налога";
	
	ТекущиеДанные = Новый Структура;
	ТекущиеДанные.Вставить("ЗаПериодС", Элементы.События.ТекущиеДанные.ЗаПериодС);
	ТекущиеДанные.Вставить("ЗаПериодПо", Элементы.События.ТекущиеДанные.ЗаПериодПо);
	ТекущиеДанные.Вставить("НазваниеОтчетаИлиНалога", Элементы.События.ТекущиеДанные.НазваниеОтчетаИлиНалога);
	ТекущиеДанные.Вставить("Периодичность", Элементы.События.ТекущиеДанные.Периодичность);
	ТекущиеДанные.Вставить("Срок", Элементы.События.ТекущиеДанные.Срок);
	ТекущиеДанные.Вставить("ИсточникОтчета", Элементы.События.ТекущиеДанные.ИсточникОтчета);
	ТекущиеДанные.Вставить("Налогоплательщик", Элементы.События.ТекущиеДанные.Налогоплательщик);
	ТекущиеДанные.Вставить("НарастающийИтог", Элементы.События.ТекущиеДанные.НарастающийИтог);
	ТекущиеДанные.Вставить("ФормаОтчета", Элементы.События.ТекущиеДанные.ФормаОтчета);
	ТекущиеДанные.Вставить("ДатаПоказа", Элементы.События.ТекущиеДанные.ДатаПоказа);
	ТекущиеДанные.Вставить("Организация", Элементы.События.ТекущиеДанные.Организация);
	
	УдалитьЗаписьВРегистрОповещения(ТекущиеДанные, РежимПлатежа);
	
	// Удалим из таблицы
	События.Удалить(Элементы.События.ТекущиеДанные);
	Элементы.События.Обновить();

	ФормаЦУО = ПолучитьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.УправлениеОтчетностью");
	Если ФормаЦУО.Открыта() Тогда
		Если ПолучитьФорму("Обработка.КалендарьБухгалтера.Форма.ФормаКалендаря", , ФормаЦУО).Открыта() Тогда
			Оповестить("Обновить признаки оповещения", "Обновить признаки оповещения", ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьЗаписьВРегистрОповещения(ДанныеСтроки, РежимУплаты = Ложь)

	НовЗап = РегистрыСведений.СобытияКалендаряБухгалтера.СоздатьМенеджерЗаписи();

	НовЗап.Пользователь = Пользователи.ТекущийПользователь();
	НовЗап.ПоследняяДатаДействия = ДанныеСтроки.Срок;
	НовЗап.ЗаПериодС = ДанныеСтроки.ЗаПериодС;
	НовЗап.ЗаПериодПо = ДанныеСтроки.ЗаПериодПо;
	НовЗап.Организация = ДанныеСтроки.Организация;
	НовЗап.ДатаПоказа = ДанныеСтроки.ДатаПоказа;

	НовЗап.Периодичность = ДанныеСтроки.Периодичность;
	НовЗап.Налогоплательщик = ДанныеСтроки.Налогоплательщик;
	НовЗап.НарастающийИтог = ДанныеСтроки.НарастающийИтог;

	Если РежимУплаты Тогда
		НовЗап.ИсточникОтчета = ДанныеСтроки.НазваниеОтчетаИлиНалога;
		НовЗап.ТипСообщения = Перечисления.СообщенияДляРегОтчетов.УплатаНалога;
		НовЗап.ФормаОтчета = "";
		НовЗап.Название = "";
	Иначе
		НовЗап.ИсточникОтчета = ДанныеСтроки.ИсточникОтчета;
		НовЗап.ТипСообщения = Перечисления.СообщенияДляРегОтчетов.СдачаОтчета;
		НовЗап.ФормаОтчета = ДанныеСтроки.ФормаОтчета;
		НовЗап.Название = ДанныеСтроки.НазваниеОтчетаИлиНалога; // Название отчета
	КонецЕсли;
	НовЗап.Удалить();
	
КонецПроцедуры

#КонецОбласти