 #Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подготавливает информацию о выполнении актуальных договоров обслуживания (сколько оказано, выставлено, осталось выставить).
// Вызывается в фоновом задании из формы обработки выставления счетов.
//
// Параметры:
//  Параметры - Структура - Параметры, используемые для отбора данных. Обязательные ключи:
//					* ДатаНачала    - Дата - Начало рассматриваемого интервала времени.
//					* ДатаОкончания - Дата - Конец рассматриваемого интервала времени.
//					* Периодичность - ПеречислениеСсылка.БиллингПериодичностьДоговораОбслуживания - 
//													Периодичность рассматриваемых договоров.
//  ВременноеХранилищеРезультата - Строка - Возвращаемый в родительский сеанс параметр.
//											Хранит адрес результирующуих данных во временном хранилище.
//
Процедура ПолучитьДанныеПоДоговорамОбслуживания(Параметры, ВременноеХранилищеРезультата) Экспорт
	
	Перем Ошибки;
	
	Результат = Новый Структура;
	ВыполнитьПолучениеДанныхПоДоговорамОбслуживания(Параметры, Результат, Ошибки);
	ВключитьОшибкиВРезультатВыполнения(Результат, Ошибки);
	
	ПоместитьВоВременноеХранилище(Результат, ВременноеХранилищеРезультата);
	
КонецПроцедуры

// По выбранным договорам обслуживания выполняет создание документов (Счета на оплату, Акты выполненных работ)
// и актуализиурет информацию (сколько оказано, выставлено, осталось выставить).
// Вызывается в фоновом задании из формы обработки выставления счетов.
//
// Параметры:
//  Параметры - Структура - Параметры, используемые для отбора данных. Обязательные ключи:
//					* ДатаНачала    - Дата - Начало рассматриваемого интервала времени.
//					* ДатаОкончания - Дата - Конец рассматриваемого интервала времени.
//					* ДатаФормированияДокументовСчета - Дата
//					* ДатаФормированияДокументовАкты  - Дата
//					* Периодичности                         - СписокЗначений (ПеречислениеСсылка.БиллингПериодичностьДоговораОбслуживания)
//					* СписокДоговорыОбслуживания            - ТаблицаЗначений
//					* СписокВыполнениеДоговоровОбслуживания - ТаблицаЗначений
//					* СписокРасшифровкаБиллинга             - ТаблицаЗначений
//					* ФормированиеАктов                        - Булево
//					* ФормированиеАктовПроводить               - Булево
//					* ФормированиеАктовОтправлятьПоПочте       - Булево
//					* ФормированиеАктовФормироватьСчетаФактуры - Булево
//					* ФормированиеСчетовОтправлятьПоПочте      - Булево
//					* ШаблонСообщения                          - СправочникСсылка.ШаблоныСообщений
//  ВременноеХранилищеРезультата - Строка - Возвращаемый в родительский сеанс параметр.
//											Хранит адрес результирующуих данных во временном хранилище.
//
Процедура СоздатьПакетДокументов(Параметры, ВременноеХранилищеРезультата) Экспорт
	
	Перем Ошибки;
	
	Результат = Новый Структура;
	ВыполнитьСозданиеПакетаДокументов(Параметры, Результат, Ошибки);
	ВыполнитьПолучениеДанныхПоДоговорамОбслуживания(Параметры, Результат, Ошибки);
	ВключитьОшибкиВРезультатВыполнения(Результат, Ошибки);
	
	ПоместитьВоВременноеХранилище(Результат, ВременноеХранилищеРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьПолучениеДанныхПоДоговорамОбслуживания(Параметры, Результат, Ошибки)
	
	СписокДоговорыОбслуживания = Новый ТаблицаЗначений;
	СписокДоговорыОбслуживания.Колонки.Добавить("ФормироватьСчет",           Новый ОписаниеТипов("Булево"));
	СписокДоговорыОбслуживания.Колонки.Добавить("ФормироватьАкт",            Новый ОписаниеТипов("Булево"));
	СписокДоговорыОбслуживания.Колонки.Добавить("НомерКартинки",             Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1,0,ДопустимыйЗнак.Неотрицательный)));
	СписокДоговорыОбслуживания.Колонки.Добавить("ДатаВыставленияДокументов", Новый ОписаниеТипов("Дата",,,,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	СписокДоговорыОбслуживания.Колонки.Добавить("Контрагент",                Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	СписокДоговорыОбслуживания.Колонки.Добавить("Договор",                   Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	СписокДоговорыОбслуживания.Колонки.Добавить("ТарифныйПлан",              Новый ОписаниеТипов("СправочникСсылка.ТарифныеПланыДоговоровОбслуживания"));
	СписокДоговорыОбслуживания.Колонки.Добавить("Сумма",                     Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
	СписокДоговорыОбслуживания.Колонки.Добавить("ВалютаРасчетовСимвольноеПредставление", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(3, ДопустимаяДлина.Переменная)));
	СписокДоговорыОбслуживания.Колонки.Добавить("ЕстьПозицииБезЦены",             Новый ОписаниеТипов("Булево"));
	СписокДоговорыОбслуживания.Колонки.Добавить("ЕстьПозицииСЦеной",              Новый ОписаниеТипов("Булево"));
	СписокДоговорыОбслуживания.Колонки.Добавить("ЕстьПозицииБезСуммыВыставления", Новый ОписаниеТипов("Булево"));
	
	СписокВыполнениеДоговоровОбслуживания = Новый ТаблицаЗначений;
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("Договор",                  Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("Номенклатура",             Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("Характеристика",           Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("КоличествоОказаноСЦеной",  Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("КоличествоОказаноБезЦены", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("СуммаОказаноСЦеной",       Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)));
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("СуммаОказаноБезЦены",      Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)));
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("КоличествоВыставлено",     Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("СуммаВыставлено",          Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)));
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("КоличествоКВыставлению",   Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
	СписокВыполнениеДоговоровОбслуживания.Колонки.Добавить("СуммаКВыставлению",        Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)));
	
	СписокРасшифровкаБиллинга = Новый ТаблицаЗначений;
	СписокРасшифровкаБиллинга.Колонки.Добавить("Договор",                    Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	СписокРасшифровкаБиллинга.Колонки.Добавить("ОбъектДоговораОбслуживания", Новый ОписаниеТипов("СправочникСсылка.Номенклатура,ПланСчетовСсылка.Управленческий"));
	СписокРасшифровкаБиллинга.Колонки.Добавить("Характеристика",             Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	СписокРасшифровкаБиллинга.Колонки.Добавить("ПредставлениеВСчете",        Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	СписокРасшифровкаБиллинга.Колонки.Добавить("ЕдиницаИзмерения",           Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения,СправочникСсылка.ЕдиницыИзмерения"));
	СписокРасшифровкаБиллинга.Колонки.Добавить("Количество",                 Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
	СписокРасшифровкаБиллинга.Колонки.Добавить("Сумма",                      Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)));
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.ДоговорОбслуживанияПериодичность = ЗНАЧЕНИЕ(Перечисление.БиллингПериодичностьДоговораОбслуживания.День)
	|			ТОГДА &ДатаНачала
	|		КОГДА ДоговорыКонтрагентов.ДоговорОбслуживанияПериодичность = ЗНАЧЕНИЕ(Перечисление.БиллингПериодичностьДоговораОбслуживания.Неделя)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаНачала, ДЕНЬ, ДоговорыКонтрагентов.ДоговорОбслуживанияДнейДоВыставленияДокументов - 1)
	|		КОГДА ДоговорыКонтрагентов.ДоговорОбслуживанияПериодичность = ЗНАЧЕНИЕ(Перечисление.БиллингПериодичностьДоговораОбслуживания.Месяц)
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(&ДатаНачала, ДЕНЬ, ДоговорыКонтрагентов.ДоговорОбслуживанияДнейДоВыставленияДокументов - 1) > &ДатаОкончания
	|						ТОГДА &ДатаОкончания
	|					ИНАЧЕ ДОБАВИТЬКДАТЕ(&ДатаНачала, ДЕНЬ, ДоговорыКонтрагентов.ДоговорОбслуживанияДнейДоВыставленияДокументов - 1)
	|				КОНЕЦ
	|		КОГДА ДоговорыКонтрагентов.ДоговорОбслуживанияПериодичность = ЗНАЧЕНИЕ(Перечисление.БиллингПериодичностьДоговораОбслуживания.Квартал)
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, КВАРТАЛ), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), ДЕНЬ, ДоговорыКонтрагентов.ДоговорОбслуживанияДнейДоВыставленияДокументов - 1) > КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, КВАРТАЛ), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), МЕСЯЦ)
	|						ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, КВАРТАЛ), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), МЕСЯЦ)
	|					ИНАЧЕ ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, КВАРТАЛ), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), ДЕНЬ, ДоговорыКонтрагентов.ДоговорОбслуживанияДнейДоВыставленияДокументов - 1)
	|				КОНЕЦ
	|		КОГДА ДоговорыКонтрагентов.ДоговорОбслуживанияПериодичность = ЗНАЧЕНИЕ(Перечисление.БиллингПериодичностьДоговораОбслуживания.Полгода)
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, ПОЛУГОДИЕ), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), ДЕНЬ, ДоговорыКонтрагентов.ДоговорОбслуживанияДнейДоВыставленияДокументов - 1) > КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, ПОЛУГОДИЕ), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), МЕСЯЦ)
	|						ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, ПОЛУГОДИЕ), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), МЕСЯЦ)
	|					ИНАЧЕ ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, ПОЛУГОДИЕ), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), ДЕНЬ, ДоговорыКонтрагентов.ДоговорОбслуживанияДнейДоВыставленияДокументов - 1)
	|				КОНЕЦ
	|		КОГДА ДоговорыКонтрагентов.ДоговорОбслуживанияПериодичность = ЗНАЧЕНИЕ(Перечисление.БиллингПериодичностьДоговораОбслуживания.Год)
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, ГОД), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), ДЕНЬ, ДоговорыКонтрагентов.ДоговорОбслуживанияДнейДоВыставленияДокументов - 1) > КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, ГОД), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), МЕСЯЦ)
	|						ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, ГОД), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), МЕСЯЦ)
	|					ИНАЧЕ ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, ГОД), МЕСЯЦ, ДоговорыКонтрагентов.ДоговорОбслуживанияМесяцевДоВыставленияДокументов - 1), ДЕНЬ, ДоговорыКонтрагентов.ДоговорОбслуживанияДнейДоВыставленияДокументов - 1)
	|				КОНЕЦ
	|	КОНЕЦ КАК ДатаВыставленияДокументов
	|ПОМЕСТИТЬ ВТДоговорыОбслуживания
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ЭтоДоговорОбслуживания
	|	И ДоговорыКонтрагентов.ДоговорОбслуживанияДатаНачала <= &ДатаОкончания
	|	И (ДоговорыКонтрагентов.ДоговорОбслуживанияДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ ДоговорыКонтрагентов.ДоговорОбслуживанияДатаОкончания >= &ДатаНачала)
	|	И ДоговорыКонтрагентов.ДоговорОбслуживанияПериодичность В(&Периодичности)
	|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоговорыОбслуживания.Договор,
	|	ВТДоговорыОбслуживания.ДатаВыставленияДокументов,
	|	ДоговорыКонтрагентов.ДоговорОбслуживанияДатаНачала КАК ДатаНачала,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.ДоговорОбслуживанияТарифныйПлан КАК ТарифныйПлан,
	|	ДоговорыКонтрагентов.ВидЦен,
	|	ДоговорыКонтрагентов.ВалютаРасчетов.СимвольноеПредставление КАК ВалютаРасчетовСимвольноеПредставление
	|ПОМЕСТИТЬ ВТДоговорыКонтрагенты
	|ИЗ
	|	ВТДоговорыОбслуживания КАК ВТДоговорыОбслуживания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ВТДоговорыОбслуживания.Договор = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	ВТДоговорыОбслуживания.ДатаВыставленияДокументов >= &ДатаНачала
	|	И ВТДоговорыОбслуживания.ДатаВыставленияДокументов <= &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТарифныеПланыДоговоровОбслуживания.Ссылка КАК ТарифныйПлан,
	|	ТарифныеПланыДоговоровОбслуживания.НезапланированныеПозицииВключатьВСчет КАК НезапланированныеПозицииВключатьВСчет,
	|	ТарифныеПланыДоговоровОбслуживания.НезапланированныеПозицииПредставлениеВСчете КАК НезапланированныеПозицииПредставлениеВСчете,
	|	ТарифныеПланыДоговоровОбслуживания.НезапланированныеЗатратыВключатьВСчет КАК НезапланированныеЗатратыВключатьВСчет,
	|	ТарифныеПланыДоговоровОбслуживания.НезапланированныеЗатратыФормированиеЦены КАК НезапланированныеЗатратыФормированиеЦены,
	|	ТарифныеПланыДоговоровОбслуживания.НезапланированныеЗатратыПредставлениеВСчете КАК НезапланированныеЗатратыПредставлениеВСчете,
	|	ТарифныеПланыДоговоровОбслуживания.НезапланированныеЗатратыФиксированнаяЦена КАК НезапланированныеЗатратыФиксированнаяЦена,
	|	ТарифныеПланыДоговоровОбслуживания.НезапланированныеЗатратыНаценка КАК НезапланированныеЗатратыНаценка
	|ПОМЕСТИТЬ ВТУсловияТарифныхПланов
	|ИЗ
	|	Справочник.ТарифныеПланыДоговоровОбслуживания КАК ТарифныеПланыДоговоровОбслуживания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.Ссылка КАК ТарифныйПлан,
	|	ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.Номенклатура КАК ОбъектДоговораОбслуживания,
	|	ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.Характеристика,
	|	ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.ВключатьВСчет,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.Количество
	|		ИНАЧЕ ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.Количество / ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.Цена,
	|	ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.ЕдиницаИзмерения,
	|	0 КАК Наценка,
	|	ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.ФормированиеЦены,
	|	ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры.ПредставлениеВСчете
	|ПОМЕСТИТЬ ВТУсловияПоПозициямТарифныхПланов
	|ИЗ
	|	Справочник.ТарифныеПланыДоговоровОбслуживания.УчетНоменклатуры КАК ТарифныеПланыДоговоровОбслуживанияУчетНоменклатуры
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТарифныеПланыДоговоровОбслуживанияУчетЗатрат.Ссылка,
	|	ТарифныеПланыДоговоровОбслуживанияУчетЗатрат.СтатьяЗатрат,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ТарифныеПланыДоговоровОбслуживанияУчетЗатрат.ВключатьВСчет,
	|	0,
	|	ТарифныеПланыДоговоровОбслуживанияУчетЗатрат.Цена,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка),
	|	ТарифныеПланыДоговоровОбслуживанияУчетЗатрат.Наценка,
	|	ТарифныеПланыДоговоровОбслуживанияУчетЗатрат.ФормированиеЦены,
	|	ТарифныеПланыДоговоровОбслуживанияУчетЗатрат.ПредставлениеВСчете
	|ИЗ
	|	Справочник.ТарифныеПланыДоговоровОбслуживания.УчетЗатрат КАК ТарифныеПланыДоговоровОбслуживанияУчетЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоговорыКонтрагенты.Договор КАК Договор,
	|	ВТУсловияПоПозициямТарифныхПланов.ОбъектДоговораОбслуживания КАК ОбъектДоговораОбслуживания,
	|	ВТУсловияПоПозициямТарифныхПланов.Характеристика КАК Характеристика,
	|	ВТУсловияПоПозициямТарифныхПланов.ВключатьВСчет КАК ВключатьВСчет,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ВТУсловияПоПозициямТарифныхПланов.Количество
	|		ИНАЧЕ ВТУсловияПоПозициямТарифныхПланов.Количество / ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	ВТУсловияПоПозициямТарифныхПланов.Количество * ВТУсловияПоПозициямТарифныхПланов.Цена КАК Сумма,
	|	ВТУсловияПоПозициямТарифныхПланов.ПредставлениеВСчете КАК ПредставлениеВСчете
	|ПОМЕСТИТЬ ВТДоговорыОбслуживанияАбонЧасть
	|ИЗ
	|	ВТДоговорыКонтрагенты КАК ВТДоговорыКонтрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУсловияПоПозициямТарифныхПланов КАК ВТУсловияПоПозициямТарифныхПланов
	|		ПО ВТДоговорыКонтрагенты.ТарифныйПлан = ВТУсловияПоПозициямТарифныхПланов.ТарифныйПлан
	|ГДЕ
	|	ВТУсловияПоПозициямТарифныхПланов.Количество <> 0
	|	И ВТУсловияПоПозициямТарифныхПланов.ФормированиеЦены = ЗНАЧЕНИЕ(Перечисление.БиллингФормированиеЦеныНоменклатуры.ФиксированноеЗначение)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВТДоговорыКонтрагенты.Договор,
	|	ВТУсловияПоПозициямТарифныхПланов.ОбъектДоговораОбслуживания,
	|	ВТУсловияПоПозициямТарифныхПланов.Характеристика,
	|	ВТУсловияПоПозициямТарифныхПланов.ВключатьВСчет,
	|	ВТУсловияПоПозициямТарифныхПланов.Количество,
	|	ВТУсловияПоПозициямТарифныхПланов.Количество * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0),
	|	ВТУсловияПоПозициямТарифныхПланов.ПредставлениеВСчете
	|ИЗ
	|	ВТДоговорыКонтрагенты КАК ВТДоговорыКонтрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУсловияПоПозициямТарифныхПланов КАК ВТУсловияПоПозициямТарифныхПланов
	|		ПО ВТДоговорыКонтрагенты.ТарифныйПлан = ВТУсловияПоПозициямТарифныхПланов.ТарифныйПлан
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаФормированияДокументовСчета, ) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ЦеныНоменклатурыСрезПоследних.ВидЦен = ВТДоговорыКонтрагенты.ВидЦен)
	|			И (ЦеныНоменклатурыСрезПоследних.Номенклатура = ВТУсловияПоПозициямТарифныхПланов.ОбъектДоговораОбслуживания)
	|			И (ЦеныНоменклатурыСрезПоследних.Характеристика = ВТУсловияПоПозициямТарифныхПланов.Характеристика)
	|ГДЕ
	|	ВТУсловияПоПозициямТарифныхПланов.Количество <> 0
	|	И ВТУсловияПоПозициямТарифныхПланов.ФормированиеЦены = ЗНАЧЕНИЕ(Перечисление.БиллингФормированиеЦеныНоменклатуры.ПоВидуЦенДоговора)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоговорыКонтрагенты.Договор,
	|	ВТДоговорыКонтрагенты.ТарифныйПлан,
	|	ВыполнениеДоговоровОбслуживанияОбороты.ОбъектДоговораОбслуживания,
	|	ВыполнениеДоговоровОбслуживанияОбороты.Характеристика,
	|	ВыполнениеДоговоровОбслуживанияОбороты.УказанаСтоимость,
	|	ВыполнениеДоговоровОбслуживанияОбороты.КоличествоОборот КАК Количество,
	|	ВЫБОР
	|		КОГДА ВыполнениеДоговоровОбслуживанияОбороты.ОбъектДоговораОбслуживания ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ВыполнениеДоговоровОбслуживанияОбороты.СуммаОборот
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ВТУсловияПоПозициямТарифныхПланов.ФормированиеЦены, ВТУсловияТарифныхПланов.НезапланированныеЗатратыФормированиеЦены) = ЗНАЧЕНИЕ(Перечисление.БиллингФормированиеЦеныЗатрат.ПоСебестоимости)
	|					ТОГДА ВыполнениеДоговоровОбслуживанияОбороты.СуммаОборот
	|				КОГДА ЕСТЬNULL(ВТУсловияПоПозициямТарифныхПланов.ФормированиеЦены, ВТУсловияТарифныхПланов.НезапланированныеЗатратыФормированиеЦены) = ЗНАЧЕНИЕ(Перечисление.БиллингФормированиеЦеныЗатрат.ПоСебестоимостиСНаценкой)
	|					ТОГДА ВыполнениеДоговоровОбслуживанияОбороты.СуммаОборот + ВыполнениеДоговоровОбслуживанияОбороты.СуммаОборот * ЕСТЬNULL(ВТУсловияПоПозициямТарифныхПланов.Наценка, ВТУсловияТарифныхПланов.НезапланированныеЗатратыНаценка) / 100
	|				КОГДА ЕСТЬNULL(ВТУсловияПоПозициямТарифныхПланов.ФормированиеЦены, ВТУсловияТарифныхПланов.НезапланированныеЗатратыФормированиеЦены) = ЗНАЧЕНИЕ(Перечисление.БиллингФормированиеЦеныЗатрат.ФиксированноеЗначение)
	|					ТОГДА ЕСТЬNULL(ВТУсловияПоПозициямТарифныхПланов.Цена, ВТУсловияТарифныхПланов.НезапланированныеЗатратыФиксированнаяЦена) * ВыполнениеДоговоровОбслуживанияОбороты.КоличествоОборот
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВыполнениеДоговоровОбслуживанияОбороты.ОбъектДоговораОбслуживания ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ЕСТЬNULL(ВТУсловияПоПозициямТарифныхПланов.ПредставлениеВСчете, ВТУсловияТарифныхПланов.НезапланированныеПозицииПредставлениеВСчете)
	|		ИНАЧЕ ЕСТЬNULL(ВТУсловияПоПозициямТарифныхПланов.ПредставлениеВСчете, ВТУсловияТарифныхПланов.НезапланированныеЗатратыПредставлениеВСчете)
	|	КОНЕЦ КАК ПредставлениеВСчете,
	|	ВЫБОР
	|		КОГДА ВыполнениеДоговоровОбслуживанияОбороты.ОбъектДоговораОбслуживания ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ЕСТЬNULL(ВТУсловияПоПозициямТарифныхПланов.ВключатьВСчет, ВТУсловияТарифныхПланов.НезапланированныеПозицииВключатьВСчет)
	|		ИНАЧЕ ЕСТЬNULL(ВТУсловияПоПозициямТарифныхПланов.ВключатьВСчет, ВТУсловияТарифныхПланов.НезапланированныеЗатратыВключатьВСчет)
	|	КОНЕЦ КАК ВключатьВСчет
	|ПОМЕСТИТЬ ВТОбороты
	|ИЗ
	|	РегистрНакопления.ВыполнениеДоговоровОбслуживания.Обороты(&ДатаНачалаГраница, &ДатаОкончанияГраница, , ) КАК ВыполнениеДоговоровОбслуживанияОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоговорыКонтрагенты КАК ВТДоговорыКонтрагенты
	|		ПО ВыполнениеДоговоровОбслуживанияОбороты.Договор = ВТДоговорыКонтрагенты.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловияПоПозициямТарифныхПланов КАК ВТУсловияПоПозициямТарифныхПланов
	|		ПО (ВТДоговорыКонтрагенты.ТарифныйПлан = ВТУсловияПоПозициямТарифныхПланов.ТарифныйПлан)
	|			И ВыполнениеДоговоровОбслуживанияОбороты.ОбъектДоговораОбслуживания = ВТУсловияПоПозициямТарифныхПланов.ОбъектДоговораОбслуживания
	|			И ВыполнениеДоговоровОбслуживанияОбороты.ОбъектДоговораОбслуживания = ВТУсловияПоПозициямТарифныхПланов.ОбъектДоговораОбслуживания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловияТарифныхПланов КАК ВТУсловияТарифныхПланов
	|		ПО (ВТДоговорыКонтрагенты.ТарифныйПлан = ВТУсловияТарифныхПланов.ТарифныйПлан)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбороты.Договор,
	|	ВТОбороты.ТарифныйПлан,
	|	ВТОбороты.ОбъектДоговораОбслуживания,
	|	ВТОбороты.Характеристика,
	|	ВТОбороты.Количество КАК КоличествоСЦеной,
	|	ВТОбороты.Сумма КАК СуммаСЦеной,
	|	0 КАК КоличествоБезЦены,
	|	0 КАК СуммаБезЦены,
	|	0 КАК ЦенаПоВидуЦен,
	|	ВТОбороты.ПредставлениеВСчете,
	|	ВТОбороты.ВключатьВСчет
	|ПОМЕСТИТЬ ВТОборотыОказаноБезГруппировки
	|ИЗ
	|	ВТОбороты КАК ВТОбороты
	|ГДЕ
	|	ВТОбороты.УказанаСтоимость
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВТОбороты.Договор,
	|	ВТОбороты.ТарифныйПлан,
	|	ВТОбороты.ОбъектДоговораОбслуживания,
	|	ВТОбороты.Характеристика,
	|	0,
	|	0,
	|	ВТОбороты.Количество,
	|	ВТОбороты.Количество * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0),
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0),
	|	ВТОбороты.ПредставлениеВСчете,
	|	ВТОбороты.ВключатьВСчет
	|ИЗ
	|	ВТОбороты КАК ВТОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоговорыКонтрагенты КАК ВТДоговорыКонтрагенты
	|		ПО ВТОбороты.Договор = ВТДоговорыКонтрагенты.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаФормированияДокументовСчета, ) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ЦеныНоменклатурыСрезПоследних.ВидЦен = ВТДоговорыКонтрагенты.ВидЦен)
	|			И (ЦеныНоменклатурыСрезПоследних.Номенклатура = ВТОбороты.ОбъектДоговораОбслуживания)
	|			И (ЦеныНоменклатурыСрезПоследних.Характеристика = ВТОбороты.Характеристика)
	|ГДЕ
	|	НЕ ВТОбороты.УказанаСтоимость
	|	И ТИПЗНАЧЕНИЯ(ВТОбороты.ОбъектДоговораОбслуживания) = ТИП(Справочник.Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОборотыОказаноБезГруппировки.Договор КАК Договор,
	|	ВТОборотыОказаноБезГруппировки.ТарифныйПлан КАК ТарифныйПлан,
	|	ВТОборотыОказаноБезГруппировки.ОбъектДоговораОбслуживания КАК ОбъектДоговораОбслуживания,
	|	ВТОборотыОказаноБезГруппировки.Характеристика КАК Характеристика,
	|	СУММА(ВТОборотыОказаноБезГруппировки.КоличествоСЦеной) КАК КоличествоСЦеной,
	|	СУММА(ВТОборотыОказаноБезГруппировки.СуммаСЦеной) КАК СуммаСЦеной,
	|	СУММА(ВТОборотыОказаноБезГруппировки.КоличествоБезЦены) КАК КоличествоБезЦены,
	|	СУММА(ВТОборотыОказаноБезГруппировки.СуммаБезЦены) КАК СуммаБезЦены,
	|	СУММА(ВТОборотыОказаноБезГруппировки.ЦенаПоВидуЦен) КАК ЦенаПоВидуЦен,
	|	ВТОборотыОказаноБезГруппировки.ПредставлениеВСчете КАК ПредставлениеВСчете,
	|	ВТОборотыОказаноБезГруппировки.ВключатьВСчет КАК ВключатьВСчет
	|ПОМЕСТИТЬ ВТОборотыОказано
	|ИЗ
	|	ВТОборотыОказаноБезГруппировки КАК ВТОборотыОказаноБезГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОборотыОказаноБезГруппировки.Договор,
	|	ВТОборотыОказаноБезГруппировки.ТарифныйПлан,
	|	ВТОборотыОказаноБезГруппировки.ОбъектДоговораОбслуживания,
	|	ВТОборотыОказаноБезГруппировки.Характеристика,
	|	ВТОборотыОказаноБезГруппировки.ВключатьВСчет,
	|	ВТОборотыОказаноБезГруппировки.ПредставлениеВСчете
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетНаОплату.Ссылка КАК Ссылка,
	|	ВТДоговорыОбслуживания.Договор КАК Договор
	|ПОМЕСТИТЬ ВТСчетаПоДоговорамОбслуживания
	|ИЗ
	|	ВТДоговорыОбслуживания КАК ВТДоговорыОбслуживания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетНаОплату КАК СчетНаОплату
	|		ПО ВТДоговорыОбслуживания.Договор = СчетНаОплату.Договор
	|ГДЕ
	|	СчетНаОплату.Проведен
	|	И СчетНаОплату.Дата >= &ДатаНачала
	|	И СчетНаОплату.Дата <= &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСчетаПоДоговорамОбслуживания.Договор,
	|	СчетНаОплатуРасшифровкаБиллинга.ОбъектДоговораОбслуживания КАК ОбъектДоговораОбслуживания,
	|	СчетНаОплатуРасшифровкаБиллинга.Характеристика КАК Характеристика,
	|	СУММА(ВЫБОР
	|			КОГДА СчетНаОплатуРасшифровкаБиллинга.ЕдиницаИзмерения = НЕОПРЕДЕЛЕНО
	|				ТОГДА СчетНаОплатуРасшифровкаБиллинга.Количество
	|			КОГДА ТИПЗНАЧЕНИЯ(СчетНаОплатуРасшифровкаБиллинга.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА СчетНаОплатуРасшифровкаБиллинга.Количество
	|			ИНАЧЕ СчетНаОплатуРасшифровкаБиллинга.Количество / СчетНаОплатуРасшифровкаБиллинга.ЕдиницаИзмерения.Коэффициент
	|		КОНЕЦ) КАК Количество,
	|	СУММА(СчетНаОплатуРасшифровкаБиллинга.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТОборотыВыставлено
	|ИЗ
	|	ВТСчетаПоДоговорамОбслуживания КАК ВТСчетаПоДоговорамОбслуживания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплату.РасшифровкаБиллинга КАК СчетНаОплатуРасшифровкаБиллинга
	|		ПО ВТСчетаПоДоговорамОбслуживания.Ссылка = СчетНаОплатуРасшифровкаБиллинга.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСчетаПоДоговорамОбслуживания.Договор,
	|	СчетНаОплатуРасшифровкаБиллинга.ОбъектДоговораОбслуживания,
	|	СчетНаОплатуРасшифровкаБиллинга.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТДоговорыОбслуживанияАбонЧасть.Договор, ВТОборотыОказано.Договор) КАК Договор,
	|	ЕСТЬNULL(ВТДоговорыОбслуживанияАбонЧасть.ОбъектДоговораОбслуживания, ВТОборотыОказано.ОбъектДоговораОбслуживания) КАК ОбъектДоговораОбслуживания,
	|	ЕСТЬNULL(ВТДоговорыОбслуживанияАбонЧасть.Характеристика, ВТОборотыОказано.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(ВТДоговорыОбслуживанияАбонЧасть.ПредставлениеВСчете, ВТОборотыОказано.ПредставлениеВСчете) КАК ПредставлениеВСчете,
	|	ЕСТЬNULL(ВТДоговорыОбслуживанияАбонЧасть.ВключатьВСчет, ВТОборотыОказано.ВключатьВСчет) КАК ВключатьВСчет,
	|	ЕСТЬNULL(ВТДоговорыОбслуживанияАбонЧасть.Количество, 0) КАК КоличествоПоДоговору,
	|	ЕСТЬNULL(ВТДоговорыОбслуживанияАбонЧасть.Сумма, 0) КАК СуммаПоДоговору,
	|	ЕСТЬNULL(ВТОборотыОказано.КоличествоСЦеной, 0) КАК КоличествоОказаноСЦеной,
	|	ЕСТЬNULL(ВТОборотыОказано.СуммаСЦеной, 0) КАК СуммаОказаноСЦеной,
	|	ЕСТЬNULL(ВТОборотыОказано.КоличествоБезЦены, 0) КАК КоличествоОказаноБезЦены,
	|	ЕСТЬNULL(ВТОборотыОказано.ЦенаПоВидуЦен, 0) КАК ЦенаПоВидуЦен,
	|	ЕСТЬNULL(ВТОборотыОказано.СуммаБезЦены, 0) КАК СуммаОказаноБезЦены,
	|	ЕСТЬNULL(ВТОборотыВыставлено.Количество, 0) КАК КоличествоВыставлено,
	|	ЕСТЬNULL(ВТОборотыВыставлено.Сумма, 0) КАК СуммаВыставлено
	|ПОМЕСТИТЬ ВТВсеОбороты
	|ИЗ
	|	ВТДоговорыОбслуживанияАбонЧасть КАК ВТДоговорыОбслуживанияАбонЧасть
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТОборотыОказано КАК ВТОборотыОказано
	|		ПО ВТДоговорыОбслуживанияАбонЧасть.Договор = ВТОборотыОказано.Договор
	|			И ВТДоговорыОбслуживанияАбонЧасть.ОбъектДоговораОбслуживания = ВТОборотыОказано.ОбъектДоговораОбслуживания
	|			И ВТДоговорыОбслуживанияАбонЧасть.Характеристика = ВТОборотыОказано.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОборотыВыставлено КАК ВТОборотыВыставлено
	|		ПО (ЕСТЬNULL(ВТДоговорыОбслуживанияАбонЧасть.Договор, ВТОборотыОказано.Договор) = ВТОборотыВыставлено.Договор)
	|			И (ЕСТЬNULL(ВТДоговорыОбслуживанияАбонЧасть.ОбъектДоговораОбслуживания, ВТОборотыОказано.ОбъектДоговораОбслуживания) = ВТОборотыВыставлено.ОбъектДоговораОбслуживания)
	|			И (ЕСТЬNULL(ВТДоговорыОбслуживанияАбонЧасть.Характеристика, ВТОборотыОказано.Характеристика) = ВТОборотыВыставлено.Характеристика)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВсеОбороты.Договор,
	|	ВТВсеОбороты.ОбъектДоговораОбслуживания,
	|	ВТВсеОбороты.Характеристика,
	|	ВТВсеОбороты.ПредставлениеВСчете,
	|	ВТВсеОбороты.ВключатьВСчет,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ИЛИ ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения ЕСТЬ NULL 
	|			ТОГДА ВТВсеОбороты.КоличествоПоДоговору
	|		ИНАЧЕ ВТВсеОбороты.КоличествоПоДоговору * ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК КоличествоПоДоговору,
	|	ВТВсеОбороты.СуммаПоДоговору,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ИЛИ ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения ЕСТЬ NULL 
	|			ТОГДА ВТВсеОбороты.КоличествоОказаноСЦеной
	|		ИНАЧЕ ВТВсеОбороты.КоличествоОказаноСЦеной * ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК КоличествоОказаноСЦеной,
	|	ВТВсеОбороты.СуммаОказаноСЦеной,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ИЛИ ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения ЕСТЬ NULL 
	|			ТОГДА ВТВсеОбороты.КоличествоОказаноБезЦены
	|		ИНАЧЕ ВТВсеОбороты.КоличествоОказаноБезЦены * ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК КоличествоОказаноБезЦены,
	|	ВТВсеОбороты.ЦенаПоВидуЦен,
	|	ВТВсеОбороты.СуммаОказаноБезЦены,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ИЛИ ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения ЕСТЬ NULL 
	|			ТОГДА ВТВсеОбороты.КоличествоВыставлено
	|		ИНАЧЕ ВТВсеОбороты.КоличествоВыставлено * ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК КоличествоВыставлено,
	|	ВТВсеОбороты.СуммаВыставлено,
	|	ВЫБОР
	|		КОГДА НЕ ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения ЕСТЬ NULL 
	|			ТОГДА ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения
	|		КОГДА ВТУсловияПоПозициямТарифныхПланов.ЕдиницаИзмерения ЕСТЬ NULL 
	|				И ТИПЗНАЧЕНИЯ(ВТВсеОбороты.ОбъектДоговораОбслуживания) = ТИП(Справочник.Номенклатура)
	|			ТОГДА ВТВсеОбороты.ОбъектДоговораОбслуживания.ЕдиницаИзмерения
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТВсеОборотыВЕдиницахИзмерения
	|ИЗ
	|	ВТВсеОбороты КАК ВТВсеОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловияПоПозициямТарифныхПланов КАК ВТУсловияПоПозициямТарифныхПланов
	|		ПО ВТВсеОбороты.Договор.ДоговорОбслуживанияТарифныйПлан = ВТУсловияПоПозициямТарифныхПланов.ТарифныйПлан
	|			И ВТВсеОбороты.ОбъектДоговораОбслуживания = ВТУсловияПоПозициямТарифныхПланов.ОбъектДоговораОбслуживания
	|			И ВТВсеОбороты.Характеристика = ВТУсловияПоПозициямТарифныхПланов.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоговорыКонтрагенты.Контрагент КАК Контрагент,
	|	ВТДоговорыКонтрагенты.ТарифныйПлан КАК ТарифныйПлан,
	|	ВТВсеОборотыВЕдиницахИзмерения.Договор КАК Договор,
	|	ВТДоговорыКонтрагенты.ДатаВыставленияДокументов КАК ДатаВыставленияДокументов,
	|	ВТДоговорыКонтрагенты.ВалютаРасчетовСимвольноеПредставление КАК ВалютаРасчетовСимвольноеПредставление,
	|	ВЫБОР
	|		КОГДА ВТВсеОборотыВЕдиницахИзмерения.ПредставлениеВСчете <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ВТВсеОборотыВЕдиницахИзмерения.ПредставлениеВСчете
	|		ИНАЧЕ ВТВсеОборотыВЕдиницахИзмерения.ОбъектДоговораОбслуживания
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТВсеОборотыВЕдиницахИзмерения.ПредставлениеВСчете <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ВТВсеОборотыВЕдиницахИзмерения.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	СУММА(ВТВсеОборотыВЕдиницахИзмерения.КоличествоПоДоговору) КАК КоличествоПоДоговору,
	|	СУММА(ВТВсеОборотыВЕдиницахИзмерения.СуммаПоДоговору) КАК СуммаПоДоговору,
	|	СУММА(ВТВсеОборотыВЕдиницахИзмерения.КоличествоОказаноСЦеной) КАК КоличествоОказаноСЦеной,
	|	СУММА(ВТВсеОборотыВЕдиницахИзмерения.СуммаОказаноСЦеной) КАК СуммаОказаноСЦеной,
	|	СУММА(ВТВсеОборотыВЕдиницахИзмерения.КоличествоОказаноБезЦены) КАК КоличествоОказаноБезЦены,
	|	СУММА(ВТВсеОборотыВЕдиницахИзмерения.СуммаОказаноБезЦены) КАК СуммаОказаноБезЦены,
	|	ВТВсеОборотыВЕдиницахИзмерения.ЦенаПоВидуЦен,
	|	СУММА(ВТВсеОборотыВЕдиницахИзмерения.КоличествоВыставлено) КАК КоличествоВыставлено,
	|	СУММА(ВТВсеОборотыВЕдиницахИзмерения.СуммаВыставлено) КАК СуммаВыставлено
	|ИЗ
	|	ВТВсеОборотыВЕдиницахИзмерения КАК ВТВсеОборотыВЕдиницахИзмерения
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТДоговорыКонтрагенты КАК ВТДоговорыКонтрагенты
	|		ПО ВТВсеОборотыВЕдиницахИзмерения.Договор = ВТДоговорыКонтрагенты.Договор
	|ГДЕ
	|	ВТВсеОборотыВЕдиницахИзмерения.ВключатьВСчет
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДоговорыКонтрагенты.Контрагент,
	|	ВТДоговорыКонтрагенты.ТарифныйПлан,
	|	ВТВсеОборотыВЕдиницахИзмерения.Договор,
	|	ВТДоговорыКонтрагенты.ДатаВыставленияДокументов,
	|	ВТДоговорыКонтрагенты.ВалютаРасчетовСимвольноеПредставление,
	|	ВЫБОР
	|		КОГДА ВТВсеОборотыВЕдиницахИзмерения.ПредставлениеВСчете <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ВТВсеОборотыВЕдиницахИзмерения.ПредставлениеВСчете
	|		ИНАЧЕ ВТВсеОборотыВЕдиницахИзмерения.ОбъектДоговораОбслуживания
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТВсеОборотыВЕдиницахИзмерения.ПредставлениеВСчете <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ВТВсеОборотыВЕдиницахИзмерения.Характеристика
	|	КОНЕЦ,
	|	ВТВсеОборотыВЕдиницахИзмерения.ЦенаПоВидуЦен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВыставленияДокументов
	|ИТОГИ ПО
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВсеОборотыВЕдиницахИзмерения.Договор,
	|	ВТВсеОборотыВЕдиницахИзмерения.ОбъектДоговораОбслуживания,
	|	ВТВсеОборотыВЕдиницахИзмерения.Характеристика,
	|	ВТВсеОборотыВЕдиницахИзмерения.ПредставлениеВСчете,
	|	ВТВсеОборотыВЕдиницахИзмерения.ЕдиницаИзмерения,
	|	ВТВсеОборотыВЕдиницахИзмерения.КоличествоПоДоговору,
	|	ВТВсеОборотыВЕдиницахИзмерения.СуммаПоДоговору,
	|	ВТВсеОборотыВЕдиницахИзмерения.КоличествоОказаноСЦеной,
	|	ВТВсеОборотыВЕдиницахИзмерения.СуммаОказаноСЦеной,
	|	ВТВсеОборотыВЕдиницахИзмерения.КоличествоОказаноБезЦены,
	|	ВТВсеОборотыВЕдиницахИзмерения.СуммаОказаноБезЦены,
	|	ВТВсеОборотыВЕдиницахИзмерения.ЦенаПоВидуЦен,
	|	ВТВсеОборотыВЕдиницахИзмерения.КоличествоВыставлено,
	|	ВТВсеОборотыВЕдиницахИзмерения.СуммаВыставлено
	|ИЗ
	|	ВТВсеОборотыВЕдиницахИзмерения КАК ВТВсеОборотыВЕдиницахИзмерения
	|ГДЕ
	|	ВТВсеОборотыВЕдиницахИзмерения.ВключатьВСчет";
	
	Запрос.УстановитьПараметр("ДатаНачалаГраница", Новый Граница(Параметры.ДатаНачала, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаОкончанияГраница", Новый Граница(Параметры.ДатаОкончания, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаНачала", Параметры.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Параметры.ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаФормированияДокументовСчета", Параметры.ДатаФормированияДокументовСчета);
	Запрос.УстановитьПараметр("Периодичности", Параметры.Периодичности);
	Запрос.УстановитьПараметр("ТекущаяДатаСеанса", НачалоДня(ТекущаяДатаСеанса()));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДоговоры = РезультатЗапроса[12].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	СчетчикПометокСчета = 0;
	СчетчикПометокАкты = 0;
	
	ТекущаяДата = НачалоДня(ТекущаяДатаСеанса());
	
	Пока ВыборкаДоговоры.Следующий() Цикл
		
		ЕстьПозицииБезЦены = Ложь;
		ЕстьПозицииСЦеной = Ложь;
		ЕстьПозицииБезСуммыВыставления = Ложь;
		
		ДатаВыставленияДокументов = Неопределено;
		НомерКартинки = Неопределено;
		Договор       = Неопределено;
		Контрагент    = Неопределено;
		ТарифныйПлан  = Неопределено;
		ВалютаРасчетовСимвольноеПредставление = Неопределено;
		КоличествоКВыставлению = 0;
		СуммаКВыставлению      = 0;
		
		ВыборкаОбороты = ВыборкаДоговоры.Выбрать();
		Итератор = 0;
		Пока ВыборкаОбороты.Следующий() Цикл
			
			ДатаВыставленияДокументов = ВыборкаОбороты.ДатаВыставленияДокументов;
			Договор       = ВыборкаОбороты.Договор;
			Контрагент    = ВыборкаОбороты.Контрагент;
			ТарифныйПлан  = ВыборкаОбороты.ТарифныйПлан;
			ВалютаРасчетовСимвольноеПредставление = ВыборкаОбороты.ВалютаРасчетовСимвольноеПредставление;
			
			Если ВыборкаОбороты.Номенклатура = Null
				ИЛИ НЕ ЗначениеЗаполнено(ВыборкаОбороты.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = СписокВыполнениеДоговоровОбслуживания.Добавить();
			НоваяСтрока.Договор                    = ВыборкаОбороты.Договор;
			НоваяСтрока.Номенклатура = ВыборкаОбороты.Номенклатура;
			НоваяСтрока.Характеристика             = ВыборкаОбороты.Характеристика;
			НоваяСтрока.КоличествоОказаноСЦеной    = ВыборкаОбороты.КоличествоОказаноСЦеной;
			НоваяСтрока.КоличествоОказаноБезЦены   = ВыборкаОбороты.КоличествоОказаноБезЦены;
			НоваяСтрока.СуммаОказаноСЦеной         = ВыборкаОбороты.СуммаОказаноСЦеной;
			НоваяСтрока.СуммаОказаноБезЦены        = ВыборкаОбороты.СуммаОказаноБезЦены;
			НоваяСтрока.КоличествоВыставлено       = ВыборкаОбороты.КоличествоВыставлено;
			НоваяСтрока.СуммаВыставлено            = ВыборкаОбороты.СуммаВыставлено;
			
			// Добавляем абонентские условия.
			Если НоваяСтрока.КоличествоОказаноСЦеной <= ВыборкаОбороты.КоличествоПоДоговору Тогда
				
				ЗамещенноеКоличествоСЦеной = ВыборкаОбороты.КоличествоПоДоговору - НоваяСтрока.КоличествоОказаноСЦеной;
				Если НоваяСтрока.КоличествоОказаноБезЦены > ЗамещенноеКоличествоСЦеной Тогда
					НоваяСтрока.КоличествоОказаноБезЦены = НоваяСтрока.КоличествоОказаноБезЦены - ЗамещенноеКоличествоСЦеной;
					НоваяСтрока.СуммаОказаноБезЦены = НоваяСтрока.КоличествоОказаноБезЦены * ВыборкаОбороты.ЦенаПоВидуЦен;
				Иначе
					НоваяСтрока.КоличествоОказаноБезЦены = 0;
					НоваяСтрока.СуммаОказаноБезЦены = 0;
				КонецЕсли;
				
				НоваяСтрока.КоличествоОказаноСЦеной = ВыборкаОбороты.КоличествоПоДоговору;
				НоваяСтрока.СуммаОказаноСЦеной      = ВыборкаОбороты.СуммаПоДоговору;
				
			КонецЕсли;
			
			НоваяСтрока.КоличествоКВыставлению =
				НоваяСтрока.КоличествоОказаноСЦеной +
				НоваяСтрока.КоличествоОказаноБезЦены -
				НоваяСтрока.КоличествоВыставлено
			;
			
			НоваяСтрока.СуммаКВыставлению =
				НоваяСтрока.СуммаОказаноСЦеной +
				НоваяСтрока.СуммаОказаноБезЦены -
				НоваяСтрока.СуммаВыставлено
			;
			
			Если НоваяСтрока.СуммаКВыставлению = 0 Тогда
				НомерКартинки = 0;
			Иначе
				Если ДатаВыставленияДокументов > ТекущаяДата Тогда
					НомерКартинки = 1;
				ИначеЕсли ДатаВыставленияДокументов = ТекущаяДата Тогда
					НомерКартинки = 2;
				ИначеЕсли ДатаВыставленияДокументов < ТекущаяДата Тогда
					НомерКартинки = 3;
				КонецЕсли;
			КонецЕсли;
			
			КоличествоКВыставлению = КоличествоКВыставлению + НоваяСтрока.КоличествоКВыставлению;
			СуммаКВыставлению = СуммаКВыставлению + НоваяСтрока.СуммаКВыставлению;
			
			Если НоваяСтрока.КоличествоОказаноСЦеной <> 0 Тогда
				ЕстьПозицииСЦеной = Истина;
			КонецЕсли;
			
			Если НоваяСтрока.КоличествоОказаноБезЦены <> 0 Тогда
				ЕстьПозицииБезЦены = Истина;
			КонецЕсли;
			
			// Проверяем на то, есть ли цена для позиции.
			Если НоваяСтрока.КоличествоОказаноБезЦены <> 0 И НоваяСтрока.СуммаОказаноБезЦены = 0
				ИЛИ НоваяСтрока.КоличествоОказаноСЦеной <> 0 И НоваяСтрока.СуммаОказаноСЦеной = 0 Тогда
				
				ЕстьПозицииБезСуммыВыставления = Истина;
				
			КонецЕсли;
			
			Итератор = Итератор + 1;
			
		КонецЦикла;
		
		НоваяСтрока = СписокДоговорыОбслуживания.Добавить();
		НоваяСтрока.ФормироватьСчет           = КоличествоКВыставлению <> 0 И СуммаКВыставлению <> 0;
		НоваяСтрока.ФормироватьАкт            = КоличествоКВыставлению <> 0 И СуммаКВыставлению <> 0;
		НоваяСтрока.ДатаВыставленияДокументов = ДатаВыставленияДокументов;
		НоваяСтрока.НомерКартинки             = НомерКартинки;
		НоваяСтрока.Контрагент                = Контрагент;
		НоваяСтрока.Договор                   = Договор;
		НоваяСтрока.ТарифныйПлан              = ТарифныйПлан;
		НоваяСтрока.Сумма                     = СуммаКВыставлению;
		НоваяСтрока.ВалютаРасчетовСимвольноеПредставление = ?(ЗначениеЗаполнено(СуммаКВыставлению), ВалютаРасчетовСимвольноеПредставление, "");
		
		НоваяСтрока.ЕстьПозицииСЦеной  = ЕстьПозицииСЦеной;
		НоваяСтрока.ЕстьПозицииБезЦены = ЕстьПозицииБезЦены;
		НоваяСтрока.ЕстьПозицииБезСуммыВыставления = ЕстьПозицииБезСуммыВыставления;
		
		Если НоваяСтрока.ФормироватьСчет Тогда
			СчетчикПометокСчета = СчетчикПометокСчета + 1;
		КонецЕсли;
		Если НоваяСтрока.ФормироватьАкт Тогда
			СчетчикПометокАкты = СчетчикПометокАкты + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	ВыборкаРасшифровкаБиллинга = РезультатЗапроса[13].Выбрать();
	Пока ВыборкаРасшифровкаБиллинга.Следующий() Цикл
		
		НоваяСтрока = СписокРасшифровкаБиллинга.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРасшифровкаБиллинга);
		
		КоличествоОказаноСЦеной    = ВыборкаРасшифровкаБиллинга.КоличествоОказаноСЦеной;
		КоличествоОказаноБезЦены   = ВыборкаРасшифровкаБиллинга.КоличествоОказаноБезЦены;
		СуммаОказаноСЦеной         = ВыборкаРасшифровкаБиллинга.СуммаОказаноСЦеной;
		СуммаОказаноБезЦены        = ВыборкаРасшифровкаБиллинга.СуммаОказаноБезЦены;
		КоличествоВыставлено       = ВыборкаРасшифровкаБиллинга.КоличествоВыставлено;
		СуммаВыставлено            = ВыборкаРасшифровкаБиллинга.СуммаВыставлено;
		
		// Добавляем абонентские условия.
		Если КоличествоОказаноСЦеной <= ВыборкаРасшифровкаБиллинга.КоличествоПоДоговору Тогда
			
			ЗамещенноеКоличествоСЦеной = ВыборкаРасшифровкаБиллинга.КоличествоПоДоговору - КоличествоОказаноСЦеной;
			Если КоличествоОказаноБезЦены > ЗамещенноеКоличествоСЦеной Тогда
				КоличествоОказаноБезЦены = КоличествоОказаноБезЦены - ЗамещенноеКоличествоСЦеной;
				СуммаОказаноБезЦены = КоличествоОказаноБезЦены * ВыборкаРасшифровкаБиллинга.ЦенаПоВидуЦен;
			Иначе
				КоличествоОказаноБезЦены = 0;
				СуммаОказаноБезЦены = 0;
			КонецЕсли;
			
			КоличествоОказаноСЦеной = ВыборкаРасшифровкаБиллинга.КоличествоПоДоговору;
			СуммаОказаноСЦеной      = ВыборкаРасшифровкаБиллинга.СуммаПоДоговору;
			
		КонецЕсли;
		
		Если ТипЗнч(НоваяСтрока.ОбъектДоговораОбслуживания) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если КоличествоОказаноБезЦены <> 0 И СуммаОказаноБезЦены = 0
				ИЛИ КоличествоОказаноСЦеной <> 0 И СуммаОказаноСЦеной = 0 Тогда
				
				ТекстОшибки = СтрШаблон(
					НСтр("ru='По договору %1: %2 не может быть сформирован Счет! Для номенклатуры %3 не установлена цена во виду цен договора: %4'"),
					НоваяСТрока.Договор.Владелец,
					НоваяСТрока.Договор,
					УправлениеНебольшойФирмойСервер.ПредставлениеНоменклатуры(НоваяСтрока.ОбъектДоговораОбслуживания, НоваяСтрока.Характеристика),
					НоваяСТрока.Договор.ВидЦен
				);
				
				ДобавитьОшибкуПользователю(
					Ошибки,
					ТекстОшибки,
					НоваяСтрока.ОбъектДоговораОбслуживания
				);
				
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока.Количество =
			КоличествоОказаноСЦеной +
			КоличествоОказаноБезЦены -
			КоличествоВыставлено
		;
		
		НоваяСтрока.Сумма =
			СуммаОказаноСЦеной +
			СуммаОказаноБезЦены -
			СуммаВыставлено
		;
		
	КонецЦикла;
	
	Результат.Вставить("СписокДоговорыОбслуживания", СписокДоговорыОбслуживания);
	Результат.Вставить("СписокВыполнениеДоговоровОбслуживания", СписокВыполнениеДоговоровОбслуживания);
	Результат.Вставить("СписокРасшифровкаБиллинга", СписокРасшифровкаБиллинга);
	Результат.Вставить("СчетчикПометокСчета", СчетчикПометокСчета);
	Результат.Вставить("СчетчикПометокАкты", СчетчикПометокАкты);
	
КонецПроцедуры

Процедура ВыполнитьСозданиеПакетаДокументов(Параметры, Результат, Ошибки)
	
	Если НачалоДня(Параметры.ДатаФормированияДокументовСчета) = НачалоДня(ТекущаяДатаСеанса()) Тогда
		СчетНаОплатуДата = ТекущаяДатаСеанса();
	Иначе
		СчетНаОплатуДата = Параметры.ДатаФормированияДокументовСчета;
	КонецЕсли;
	
	Если НачалоДня(Параметры.ДатаФормированияДокументовАкты) = НачалоДня(ТекущаяДатаСеанса()) Тогда
		АктВыполненныхРаботДата = ТекущаяДатаСеанса();
	Иначе
		АктВыполненныхРаботДата = Параметры.ДатаФормированияДокументовАкты;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Договор", Неопределено);
	
	Результат.Вставить("СчетаНаОплату", Новый Массив);
	Если Параметры.ФормированиеАктов Тогда
		Результат.Вставить("АктыВыполненныхРабот", Новый Массив);
	КонецЕсли;
	Если Параметры.ФормированиеАктовФормироватьСчетаФактуры Тогда
		Результат.Вставить("СчетаФактуры", Новый Массив);
	КонецЕсли;
	Если Параметры.ФормированиеСчетовОтправлятьПоПочте ИЛИ Параметры.ФормированиеАктовОтправлятьПоПочте Тогда
		Результат.Вставить("ЭлектронныеПисьма", Новый Массив);
	КонецЕсли;
	
	Для Итератор = 0 По Параметры.СписокДоговорыОбслуживания.Количество() - 1 Цикл
		
		СтрДоговор = Параметры.СписокДоговорыОбслуживания[Итератор];
		ПредставлениеДоговора = Строка(СтрДоговор.Договор);
		
		Если НЕ СтрДоговор.ФормироватьСчет И НЕ СтрДоговор.ФормироватьАкт Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрДоговор.ЕстьПозицииБезСуммыВыставления Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыОтбора.Договор = СтрДоговор.Договор;
		
		СчетНаОплату        = Неопределено;
		АктВыполненныхРабот = Неопределено;
		СчетФактура         = Неопределено;
		ЭлектронноеПисьмо   = Неопределено;
		
		НачатьТранзакцию();
		Попытка
			Если СтрДоговор.ФормироватьСчет Тогда
				
				РасшифровкаБиллинга = Параметры.СписокРасшифровкаБиллинга.НайтиСтроки(ПараметрыОтбора);
				
				СчетНаОплату = СоздатьСчетНаОплату(
					СчетНаОплатуДата,
					СтрДоговор.Договор,
					СтрДоговор.Контрагент,
					РасшифровкаБиллинга
				);
				
			КонецЕсли;
			
			Если Параметры.ФормированиеАктов
				И СтрДоговор.ФормироватьСчет
				И СтрДоговор.ФормироватьАкт
				И СчетНаОплату <> Неопределено Тогда
				
				АктВыполненныхРабот = СоздатьАктВыполненныхРаботПоСчету(
					АктВыполненныхРаботДата,
					СчетНаОплату.Ссылка,
					Параметры.ФормированиеАктовПроводить
				);
				
				Если Параметры.ФормированиеАктовФормироватьСчетаФактуры
					И АктВыполненныхРабот <> Неопределено Тогда
					
					СчетФактура = СоздатьСчетФактуруПоАктуВыполненныхРабот(
						АктВыполненныхРаботДата, АктВыполненныхРабот.Ссылка
					);
				КонецЕсли;
				
			КонецЕсли;
			
			Если Параметры.ФормированиеСчетовОтправлятьПоПочте ИЛИ Параметры.ФормированиеАктовОтправлятьПоПочте Тогда
				
				ДокументыКОтправке = Новый Массив;
				Если СчетНаОплату <> Неопределено И Параметры.ФормированиеСчетовОтправлятьПоПочте Тогда
					ДокументыКОтправке.Добавить(СчетНаОплату.Ссылка);
				КонецЕсли;
				Если АктВыполненныхРабот <> Неопределено И Параметры.ФормированиеАктовОтправлятьПоПочте Тогда
					ДокументыКОтправке.Добавить(АктВыполненныхРабот.Ссылка);
				КонецЕсли;
				Если СчетФактура <> Неопределено  И Параметры.ФормированиеАктовОтправлятьПоПочте Тогда
					ДокументыКОтправке.Добавить(СчетФактура.Ссылка);
				КонецЕсли;
				
				ЭлектронноеПисьмо = СоздатьЭлектронноеПисьмо(Параметры.ШаблонСообщения, СтрДоговор.Договор, ДокументыКОтправке);
				
			КонецЕсли;
			
			Если Результат.Свойство("СчетаНаОплату") И СчетНаОплату <> Неопределено Тогда
				Результат.СчетаНаОплату.Добавить(СчетНаОплату.Ссылка);
			КонецЕсли;
			Если Результат.Свойство("АктыВыполненныхРабот") И АктВыполненныхРабот <> Неопределено Тогда
				Результат.АктыВыполненныхРабот.Добавить(АктВыполненныхРабот.Ссылка);
			КонецЕсли;
			Если Результат.Свойство("СчетаФактуры") И СчетФактура <> Неопределено Тогда
				Результат.СчетаФактуры.Добавить(СчетФактура.Ссылка);
			КонецЕсли;
			Если Результат.Свойство("ЭлектронныеПисьма") И ЭлектронноеПисьмо <> Неопределено Тогда
				Результат.ЭлектронныеПисьма.Добавить(ЭлектронноеПисьмо.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru='Пакетное формирование счетов и электронных писем'"),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстОшибки
			);
			
			ТекстОшибки = СтрШаблон(
				НСтр("ru='Для договора %1 не удалось создать пакет документов по причине: %2'"),
				ПредставлениеДоговора,
				ТекстОшибки
			);
			
			ДобавитьОшибкуПользователю(Ошибки, ТекстОшибки);
			
		КонецПопытки;
		
	КонецЦикла; // Параметры.СписокДоговорыОбслуживания
	
КонецПроцедуры // ВыполнитьСозданиеПакетаДокументов()

Функция СоздатьСчетНаОплату(Дата, Договор, Контрагент, ОборотыПоДоговору)
	
	Если ОборотыПоДоговору.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Договор", Договор);
	ДанныеЗаполнения.Вставить("Контрагент", Контрагент);
	
	СчетНаОплату = Документы.СчетНаОплату.СоздатьДокумент();
	СчетНаОплату.Дата = Дата;
	СчетНаОплату.Заполнить(ДанныеЗаполнения);
	
	Для каждого Стр Из ОборотыПоДоговору Цикл
		
		Если Стр.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = СчетНаОплату.РасшифровкаБиллинга.Добавить();
		НоваяСтрока.ОбъектДоговораОбслуживания = Стр.ОбъектДоговораОбслуживания;
		НоваяСтрока.Характеристика      = Стр.Характеристика;
		НоваяСтрока.ПредставлениеВСчете = Стр.ПредставлениеВСчете;
		НоваяСтрока.Количество          = Стр.Количество;
		НоваяСтрока.ЕдиницаИзмерения    = ?(ЗначениеЗаполнено(Стр.ЕдиницаИзмерения), Стр.ЕдиницаИзмерения, Неопределено);
		НоваяСтрока.Сумма               = Стр.Сумма;
		НоваяСтрока.Цена                = Стр.Сумма / Стр.Количество;
		
	КонецЦикла;
	
	Если СчетНаОплату.РасшифровкаБиллинга.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Документы.СчетНаОплату.ПерезаполнитьЗапасыПоРасшифровкеБиллинга(СчетНаОплату);
	
	// АвтоматическиеСкидки
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("ПрименятьКОбъекту",           Истина);
	СтруктураПараметры.Вставить("ТолькоПредварительныйРасчет", Ложь);
	СтруктураПараметры.Вставить("РабочееМесто", "");
	СкидкиНаценкиСерверПереопределяемый.Рассчитать(СчетНаОплату, СтруктураПараметры);
	// Конец АвтоматическиеСкидки
	
	СчетНаОплату.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат СчетНаОплату;
	
КонецФункции

Функция СоздатьАктВыполненныхРаботПоСчету(Дата, СчетНаОплату, ПроводитьДокумент)
	
	АктВыполненныхРабот = Документы.АктВыполненныхРабот.СоздатьДокумент();
	АктВыполненныхРабот.Дата = Дата;
	АктВыполненныхРабот.Заполнить(СчетНаОплату);
	
	Если АктВыполненныхРабот.РаботыИУслуги.Количество() = 0 Тогда
		АктВыполненныхРабот = Неопределено;
		Возврат Неопределено;
	КонецЕсли;
	
	Если ПроводитьДокумент Тогда
		РежимПроведения = РежимЗаписиДокумента.Проведение;
	Иначе
		РежимПроведения = РежимЗаписиДокумента.Запись;
	КонецЕсли;
	АктВыполненныхРабот.Записать(РежимПроведения);
	
	Возврат АктВыполненныхРабот;
	
КонецФункции

Функция СоздатьСчетФактуруПоАктуВыполненныхРабот(Дата, АктВыполненныхРабот)
	
	СчетФактура = Документы.СчетФактура.СоздатьДокумент();
	СчетФактура.Дата = Дата;
	СчетФактура.Заполнить(АктВыполненныхРабот);
	
	Если СчетФактура.Запасы.Количество() = 0 Тогда
		СчетФактура = Неопределено;
		Возврат Неопределено;
	КонецЕсли;
	
	СчетФактура.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат СчетФактура;
	
КонецФункции

Функция СоздатьЭлектронноеПисьмо(ШаблонСообщения, Договор, ДокументыКОтправке)
	
	Если Договор.ДоговорОбслуживанияПолучателиРассылки.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеЗаполнения = ПолучитьДанныеЗаполненияЭлектронногоПисьма(ШаблонСообщения, Договор, ДокументыКОтправке);
	
	ЭлектронноеПисьмо = Документы.Событие.СоздатьДокумент();
	ЭлектронноеПисьмо.Заполнить(Неопределено);
	ЭлектронноеПисьмо.ТипСобытия     = Перечисления.ТипыСобытий.ЭлектронноеПисьмо;
	ЭлектронноеПисьмо.Состояние      = Справочники.СостоянияСобытий.Запланировано;
	ЭлектронноеПисьмо.УчетнаяЗапись  = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяУчетнаяЗаписьЭлектроннойПочты");
	ЭлектронноеПисьмо.Тема           = ДанныеЗаполнения.Тема;
	ЭлектронноеПисьмо.Содержание     = ДанныеЗаполнения.Содержание;
	ЭлектронноеПисьмо.СодержаниеHTML = ДанныеЗаполнения.СодержаниеHTML;
	ЭлектронноеПисьмо.КартинкиHTML   = ДанныеЗаполнения.КартинкиHTML;
	
	ВложенияЭлектронногоПисьма = ДанныеЗаполнения.Вложения;
	
	Для каждого ДокументОснование Из ДокументыКОтправке Цикл
		ЭлектронноеПисьмо.ДокументыОснования.Добавить().ДокументОснование = ДокументОснование;
	КонецЦикла;
	
	Для каждого Получатель Из Договор.ДоговорОбслуживанияПолучателиРассылки Цикл
		НоваяСтрока = ЭлектронноеПисьмо.Участники.Добавить();
		НоваяСтрока.Контакт      = Получатель.Контакт;
		НоваяСтрока.КакСвязаться = Получатель.АдресЭП;
	КонецЦикла;
	
	Попытка
		ЭлектронноеПисьмо.ОтправитьЭлектронноеПисьмо(Ложь, ВложенияЭлектронногоПисьма);
	Исключение
		ТекстСообщения = СтрШаблон(
			НСтр("ru='Не удалось автоматически отправить электронное письмо по причине: %2'"),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Пакетное формирование счетов и электронных писем'"),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Документы.Событие,
			ЭлектронноеПисьмо.Ссылка,
			ТекстСообщения
		);
		ВызватьИсключение;
	КонецПопытки;
	
	ЭлектронноеПисьмо.ДополнительныеСвойства.Вставить("Вложения", ВложенияЭлектронногоПисьма);
	ЭлектронноеПисьмо.Записать();
	
	Возврат ЭлектронноеПисьмо;
	
КонецФункции

Функция ПолучитьДанныеЗаполненияЭлектронногоПисьма(ШаблонСообщения, Договор, ДокументыКОтправке)
	
	Если НЕ ЗначениеЗаполнено(ШаблонСообщения) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура("Отправитель,Тема,Содержание,СодержаниеHTML,КартинкиHTML,Вложения");
	
	ПроизвольныеПараметры = Новый Соответствие;
	Для каждого Документ Из ДокументыКОтправке Цикл
		ПроизвольныеПараметры.Вставить(Документ.Метаданные().Имя, Документ);
	КонецЦикла;
	
	ДополнительныеПараметрыПисьма = Новый Структура;
	ДополнительныеПараметрыПисьма.Вставить("ПреобразовыватьHTMLДляФорматированногоДокумента", Истина);
	ДополнительныеПараметрыПисьма.Вставить("ПроизвольныеПараметры", ПроизвольныеПараметры);
	
	СформированноеСообщение = ШаблоныСообщений.СформироватьСообщение(
		ШаблонСообщения,
		Договор,
		Новый УникальныйИдентификатор,
		ДополнительныеПараметрыПисьма
	);
	ФД = Новый ФорматированныйДокумент;
	ФД.УстановитьHTML(СформированноеСообщение.Текст, Новый Структура);
	ДанныеЗаполнения.Тема           = СформированноеСообщение.Тема;
	ДанныеЗаполнения.Содержание     = ФД.ПолучитьТекст();
	ДанныеЗаполнения.СодержаниеHTML = СформированноеСообщение.Текст;
	
	ВложенияПисьма = Новый Соответствие; // для вызова API отправки сообщения, см. СобытиеОбъект.ОтправитьЭлектронноеПисьмо()
	
	Если СформированноеСообщение.Вложения.Количество() > 0 Тогда
		
		КартинкиФД = Новый Структура; // Для сохранения картинок вставленных непосредственно в тело письма
		Индекс = СформированноеСообщение.Вложения.Количество()-1;
		Пока Индекс >= 0 Цикл
			Вложение = СформированноеСообщение.Вложения[Индекс];
			ВложенияПисьма.Вставить(Вложение.Представление, Вложение.АдресВоВременномХранилище);
			Если ЗначениеЗаполнено(Вложение.Идентификатор) Тогда
				КартинкиФД.Вставить(
					Вложение.Представление,
					Новый Картинка(ПолучитьИзВременногоХранилища(Вложение.АдресВоВременномХранилище)));
				СформированноеСообщение.Вложения.Удалить(Вложение); // Удаляем из всех вложений, вложения которые вставлены в тело письма, их не надо сохранять отдельно в присоединенных файлах
			КонецЕсли;
			Индекс = Индекс - 1;
		КонецЦикла;
		
		// Запишем картинки, вставленные в тело письма, в реквизит-хранилище
		ДанныеЗаполнения.КартинкиHTML = Новый ХранилищеЗначения(КартинкиФД);
		
	КонецЕсли;
	
	ДанныеЗаполнения.Вложения = ВложенияПисьма;
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

Процедура ДобавитьОшибкуПользователю(Ошибки, Текст, КлючДанных = Неопределено)
	
	Если Ошибки = Неопределено Тогда
		Ошибки = Новый Массив;
	КонецЕсли;
	
	Ошибка = Новый Структура;
	Ошибка.Вставить("Текст", Текст);
	Если КлючДанных <> Неопределено Тогда
		Ошибка.Вставить("КлючДанных", КлючДанных);
	КонецЕсли;
	
	Ошибки.Добавить(Ошибка);
	
КонецПроцедуры

Процедура ВключитьОшибкиВРезультатВыполнения(Результат, Ошибки)
	
	Если ТипЗнч(Ошибки) = Тип("Массив") И Ошибки.Количество() <> 0 Тогда
		Результат.Вставить("Ошибки", Ошибки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли