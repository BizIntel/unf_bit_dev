&НаКлиенте
Перем ШиринаКнопкиОтправить;

&НаКлиенте
Перем КонтекстЭДОКлиент;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		Если ЗначениеЗаполнено(Параметры.Организация) Тогда
			Объект.Организация = Параметры.Организация;
		Иначе
			Организация = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяОрганизация");
			Если Не ЗначениеЗаполнено(Организация) Тогда
				Организация =УправлениеНебольшойФирмойСервер.ПолучитьПредопределеннуюОрганизацию();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СобытиеКалендаря) Тогда
		Объект.СобытиеКалендаря = Параметры.СобытиеКалендаря;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СостояниеСобытия) Тогда
		Если ЗначениеЗаполнено(Параметры.СостояниеСобытия) Тогда
			Объект.СостояниеСобытия = Параметры.СостояниеСобытия;
		Иначе
			Объект.СостояниеСобытия = КалендарьОтчетности.ПолучитьСостояниеСобытияКалендаря(
				Объект.Организация,
				Объект.СобытиеКалендаря);
			
		КонецЕсли;
	КонецЕсли;
	
	
	Если НЕ ЗначениеЗаполнено(КомплектОтчетности) Тогда
		Если ЗначениеЗаполнено(Параметры.КомплектОтчетности) Тогда
			КомплектОтчетности = Параметры.КомплектОтчетности;
		Иначе
			КомплектОтчетности = РегламентированнаяОтчетностьУСН.ПолучитьКомплектОтчетностиПерсучетаПоСобытиюКалендаря(Объект.Организация, Объект.СобытиеКалендаря);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КомплектОтчетности) Тогда
		
		ЗапросПоКомплекту = Новый Запрос;
		ЗапросПоКомплекту.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КомплектыОтчетностиПерсучета.РСВ_1 КАК РСВ,
		|	КомплектыОтчетностиПерсучета.РСВ_1.НомерПачки КАК НомерПачкиРСВ1,
		|	КомплектыОтчетностиПерсучета.ОписьПачекСЗВ КАК ОписьПачекСЗВ,
		|	КомплектыОтчетностиПерсучета.ОписьПачекСЗВ.НомерПачки КАК НомерПачкиАДВ62,
		|	КомплектыОтчетностиПерсучета.ОтчетныйПериод
		|ИЗ
		|	Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
		|ГДЕ
		|	КомплектыОтчетностиПерсучета.Ссылка = &Комплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов КАК ПачкаДокументов,
		|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов.НомерПачки КАК НомерПачки
		|ИЗ
		|	Справочник.КомплектыОтчетностиПерсучета.СписокПачекСЗВ КАК КомплектыОтчетностиПерсучетаСписокПачекСЗВ
		|ГДЕ
		|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.Ссылка = &Комплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ6_3.ПачкаДокументов КАК ПачкаДокументов,
		|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ6_3.ПачкаДокументов.НомерПачки КАК НомерПачкиСЗВ6
		|ИЗ
		|	Справочник.КомплектыОтчетностиПерсучета.СписокПачекСЗВ6_3 КАК КомплектыОтчетностиПерсучетаСписокПачекСЗВ6_3
		|ГДЕ
		|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ6_3.Ссылка = &Комплект";
		ЗапросПоКомплекту.УстановитьПараметр("Комплект", КомплектОтчетности);
		Пакет = ЗапросПоКомплекту.ВыполнитьПакет();
		
		Выборка1 = Пакет[0].Выбрать();
		Если Выборка1.Следующий() Тогда
			ДокументОтчетности = Выборка1.РСВ;
			ДокументАДВ = Выборка1.ОписьПачекСЗВ;
			ОтчетныйПериод = Выборка1.ОтчетныйПериод;
			ЭтоОтчетностьРанее2013года = (Год(ОтчетныйПериод) < 2013);
			ЭтоОтчетностьРанее2014года = (Год(ОтчетныйПериод) < 2014);
			
			НомерПачкиРСВ1 = Выборка1.НомерПачкиРСВ1;
			НомерПачкиАДВ62 = Выборка1.НомерПачкиАДВ62;
			Если Месяц(ОтчетныйПериод) = 10 И ЭтоОтчетностьРанее2013года Тогда
				Элементы.РаспечататьСЗВ63.Видимость = Истина;
				Элементы.РаспечататьАДВ64.Видимость = Истина;
				Элементы.РаспечататьСЗВ63_1.Видимость = Истина;
				Элементы.РаспечататьАДВ64_1.Видимость = Истина;
				Элементы.ГруппаСЗВ63.Видимость = Истина;
				Элементы.Декорация21.Высота = 5;
				Элементы.ДекорацияОписаниеРаботы2.Заголовок = НСтр("ru='Распечатайте РСВ-1, АДВ-6-2, СЗВ-6-2, СЗВ-6-3, АДВ-6-4 в 2-х экземплярах'");
				Элементы.ДекорацияТекстОписание7.Заголовок = НСтр("ru='Сохраните файлы РСВ-1, АДВ-6-2, СЗВ-6-2, СЗВ-6-3, АДВ-6-4 на флешку или дискету (разные налоговые по-разному принимают)'");
				
				Выборка3 = Пакет[2].Выбрать();
				Если Выборка3.Следующий() Тогда
					ДокументСЗВ63 = Выборка3.ПачкаДокументов;
					НомерПачкиСЗВ63 = Выборка3.НомерПачкиСЗВ63;
				КонецЕсли;
			КонецЕсли;
			Элементы.ГруппаСЗВ62.Видимость = ЭтоОтчетностьРанее2013года;
			Элементы.РаспечататьСЗВ62.Видимость = ЭтоОтчетностьРанее2013года;
			Элементы.РаспечататьСЗВ62_1.Видимость = ЭтоОтчетностьРанее2013года;
			
			Элементы.ГруппаСЗВ64.Видимость = Не ЭтоОтчетностьРанее2013года И ЭтоОтчетностьРанее2014года;
			Элементы.РаспечататьСЗВ64.Видимость = Не ЭтоОтчетностьРанее2013года И ЭтоОтчетностьРанее2014года;
			Элементы.РаспечататьСЗВ64_1.Видимость = Не ЭтоОтчетностьРанее2013года И ЭтоОтчетностьРанее2014года;
			Элементы.РаспечататьАДВ65.Видимость = Не ЭтоОтчетностьРанее2013года И ЭтоОтчетностьРанее2014года;
			Элементы.РаспечататьАДВ65_1.Видимость = Не ЭтоОтчетностьРанее2013года И ЭтоОтчетностьРанее2014года;
			
			Элементы.ГруппаАДВ62.Видимость = ЭтоОтчетностьРанее2014года;
			Элементы.РаспечататьОписьПачек.Видимость = ЭтоОтчетностьРанее2014года;
			Элементы.РаспечататьОписьПачек1.Видимость = ЭтоОтчетностьРанее2014года;
			
			Элементы.ГруппаРаздел6РСВ1.Видимость = Не ЭтоОтчетностьРанее2014года;
			
			Если Не ЭтоОтчетностьРанее2014года Тогда
				Элементы.Декорация21.Высота = 1;
				Элементы.ДекорацияОписаниеРаботы2.Заголовок = НСтр("ru='Распечатайте РСВ-1 в 2-х экземплярах'");
				Элементы.ДекорацияТекстОписание7.Заголовок = НСтр("ru='Сохраните файлы РСВ-1 на флешку или дискету (разные налоговые по-разному принимают)'");
			ИначеЕсли Не ЭтоОтчетностьРанее2013года Тогда
				Элементы.ДекорацияОписаниеРаботы2.Заголовок = НСтр("ru='Распечатайте РСВ-1, АДВ-6-2, СЗВ-6-4, АДВ-6-5 в 2-х экземплярах'");
				Элементы.ДекорацияТекстОписание7.Заголовок = НСтр("ru='Сохраните файлы РСВ-1, АДВ-6-2, СЗВ-6-4, АДВ-6-5 на флешку или дискету (разные налоговые по-разному принимают)'");
			КонецЕсли;
			
			Выборка2 = Пакет[1].Выбрать();
			Если Выборка2.Следующий() Тогда
				Если ТипЗнч(Выборка2.ПачкаДокументов) = Тип("ДокументСсылка.РеестрСЗВ_6_2") Тогда
					ДокументСЗВ62 = Выборка2.ПачкаДокументов;
					НомерПачкиСЗВ62 = Выборка2.НомерПачки;
				ИначеЕсли ТипЗнч(Выборка2.ПачкаДокументов) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4") Тогда
					ДокументСЗВ64 = Выборка2.ПачкаДокументов;
					НомерПачкиСЗВ64 = Выборка2.НомерПачки;
				Иначе
					ДокументРаздел6РасчетаРСВ1 = Выборка2.ПачкаДокументов;
					НомерПачкиРаздел6 = Выборка2.НомерПачки;
				КонецЕсли;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ДокументРаздел6РасчетаРСВ1) Тогда
				Элементы.ГруппаРаздел6РСВ1.Видимость = Ложь;
			КонецЕсли;
			
			Если НЕ ЭтоОтчетностьРанее2014года И Не ЗначениеЗаполнено(ДокументРаздел6РасчетаРСВ1) И ИмеютсяСотрудникиВПФР Тогда
				Элементы.ДекорацияПредупреждение.Видимость = Истина;
				Элементы.ДекорацияПредупреждение.Заголовок = НСтр("ru = 'Внимание! В программе появились новые формы отчетности в ПФР. Сформируйте данный комплект отчетности заново.'");
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОтчетности, "СпособСдачи") = Перечисления.СпособыСдачиРегламентированныхОтчетов.ЧерезПредставителя Тогда
		ТекущийСпособСдачи = 1;
	Иначе
		ТекущийСпособСдачи = 2;
	КонецЕсли;
	
	ПереключитьСпособСдачи(ТекущийСпособСдачи);
	
	// обработка ситуации, если статус отправки "отправлен", то проверяем, нет ли каких-нибудь изменений
	Если Объект.СостояниеСобытия = Перечисления.СостоянияСобытийКалендаря.ПолучитьПодтверждение Тогда
		
		РегламентированнаяОтчетностьУСН.ОбновитьСтатусыОтправленныхОтчетов();
		
		Объект.СостояниеСобытия = КалендарьОтчетности.ПолучитьСостояниеСобытияКалендаря(
				Объект.Организация,
				Объект.СобытиеКалендаря);
	КонецЕсли;
	
	ДатаСменыСостояния = КалендарьОтчетности.ПолучитьДатуСменыСостояния(Объект.Организация, Объект.СобытиеКалендаря);
	
	Заголовок = Объект.СобытиеКалендаря.Наименование;
	
	УстановитьПривилегированныйРежим(Истина);
	РежимИспользованияИБ = Константы.РежимИспользованияИнформационнойБазы.Получить();
	УстановитьПривилегированныйРежим(Ложь);
	ИспользуетсяДКО = Истина;
	
	Если РежимИспользованияИБ = Перечисления.РежимыИспользованияИнформационнойБазы.Демонстрационный Тогда
		Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить (в демо не доступно)'");
		Элементы.ОтправитьВКонтролирующийОрган.Доступность = Ложь;
	Иначе
		
		ПроверитьВозможностьОтправки();
		
	КонецЕсли;
	
	ЗаписьТарифа = РегистрыСведений.ПрименяемыеТарифыСтраховыхВзносов.ПолучитьПоследнее(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СобытиеКалендаря, "ДатаДокументаОбработкиСобытия"), Новый Структура("Организация", Объект.Организация));
	Если ЗаписьТарифа.ВидТарифа = РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "УпрощенныйНалоговыйРежимПроизводство") Тогда
		Элементы.ГруппаДекорацииОписания19.Видимость = Истина;
	Иначе
		Элементы.ГруппаДекорацииОписания19.Видимость = Ложь;
	КонецЕсли;
	ПолучитьДанныеОтчетности();
	
	ДатыСобытия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.СобытиеКалендаря, "ДатаНачалаДокументов,ДатаОкончанияДокументов");
	ПериодЗадачиПредставление = ПредставлениеПериода(
		ДатыСобытия.ДатаНачалаДокументов,
		КонецДня(ДатыСобытия.ДатаОкончанияДокументов),
		"ФП=Истина");
	
	
	Элементы.ДекорацияОтступ18.Видимость = Элементы.ЗапроситьНаличиеОтвета.Видимость;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ДокументОтчетности,
			"ДатаНачала,ДатаОкончания,ВыбраннаяФорма");
			
	Если ЗначениеЗаполнено(ДокументОтчетности) И Реквизиты.ДатаОкончания >= '20150401' И Реквизиты.ВыбраннаяФорма = "ФормаОтчета2014Кв1" Тогда
		Элементы.ГруппаДекорацииПредупреждение.Видимость = Истина;
		Элементы.ГруппаДекорацииПредупреждение1.Видимость = Истина;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма, "ПФР");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
	УстановитьТекущуюЗакладку(ЭтаФорма, Объект);
	
	УстановитьЗаголовокФормыПоТекущейСтранице();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииПослеПолученияКонтекста", ЭтаФорма);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПрикрепленаДоверенность" И Параметр = Объект.Организация Тогда
		Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Идет проверка доверенности'");
	ИначеЕсли ИмяСобытия = "ИзмененаЗаявкаЭДО" Тогда
		Если Параметр.Организация = Объект.Организация Тогда
			Если Параметр.ЕстьАктуальнаяЗаявка Тогда
				Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить'");
				Элементы.ОтправитьВКонтролирующийОрган.Доступность = Истина;
				Элементы.ОформитьЗаявку.Видимость = Ложь;
			Иначе
				Элементы.ОтправитьВКонтролирующийОрган.Доступность = Ложь;
				Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить (нет заявки)'");
				Элементы.ОформитьЗаявку.Видимость = Истина;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзмененаТекущаяОрганизация" Тогда
		Если Окно.Основное Тогда
			ПерейтиПоНавигационнойСсылке("e1cib/navigationpoint/НалогиИОтчетность");
		Иначе
			Закрыть();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзменениеСостоянияСобытияКалендаря" Тогда
		Если Параметр = Объект.СобытиеКалендаря
				И Источник <> ЭтаФорма
				И Окно<> Неопределено
				И Не Окно.Основное Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "СозданоЗаявлениеНаПодключениеКЭДОСКО" Тогда
		ПроверитьВозможностьОтправки();
	КонецЕсли;
	
КонецПроцедуры



///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ОтправитьОтчетностьЧерезИнтернетВыбор(Команда)
	
	Если ТекущийСпособСдачи = 2 Тогда
		ПереключитьСпособСдачи(1);
	Иначе
		ШиринаКнопкиОтправить = 5;
		ПодключитьОбработчикОжидания("АнимацияОтправить", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодатьОтчетностьСамостоятельно(Команда)
	
	Если ТекущийСпособСдачи = 1 Тогда
		ПереключитьСпособСдачи(2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлВыгрузки(Команда)
	
	РегламентированнаяОтчетностьУСНКлиент.СохранитьФайлВыгрузкиОтчетности(ДокументОтчетности);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьСправкуРСВ1(Команда)
	
	МассивПечатуемыхОтчетов = Новый СписокЗначений;
	МассивПечатуемыхОтчетов.Добавить(ДокументОтчетности);
	РегламентированнаяОтчетностьКлиент.НапечататьОтчеты(МассивПечатуемыхОтчетов, "ПоказатьБланк");
КонецПроцедуры

&НаКлиенте
Процедура ОшибкиСдачи(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ПоказатьПротоколОтправки(ДокументОтчетности, "ПФР");
КонецПроцедуры

&НаКлиенте
Процедура ОформитьЗаявку(Команда)
	
	ОткрытьФорму("Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.МастерФормированияЗаявкиНаПодключение",
		Новый Структура("Организация", Объект.Организация));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатус(Команда)
	
	ВыбранныеОрганизации = Новый Массив(1);
	ВыбранныеОрганизации[0] = Объект.Организация;	
	
	
	Если ВыбранныеОрганизации.Количество() = 0 Тогда
		ПоказатьПредупреждение(,"Учетная запись не выбрана.");
		Возврат;
	ИначеЕсли ВыбранныеОрганизации.Количество() = 1 Тогда
		ТекстВопроса = НСтр("ru='Информация будет запрошена по всем отчетам, ожидающим подтверждения'");
	Иначе
		ТекстВопроса = "Произвести обмен сообщениями по выбранным учетным записям?";
	КонецЕсли;
	
	ПоказатьПредупреждение(,ТекстВопроса);
	
	
	// получаем массив учетных записей по массиву организаций
	ВыбранныеУчетныеЗаписи = ПолучитьМассивУчетныхЗаписей(ВыбранныеОрганизации);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОбменаПоУчетнойЗаписиЗавершение", ЭтаФорма);
	
	// последовательно для каждой учетной записи производим обмен
	Для Каждого ВыбраннаяУчетнаяЗапись Из ВыбранныеУчетныеЗаписи Цикл
		КонтекстЭДОКлиент.ОсуществитьОбменПоУчетнойЗаписи(ОписаниеОповещения, ВыбраннаяУчетнаяЗапись);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОбменаПоУчетнойЗаписиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПроверитьСтатусОтчета();
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСтатусОтчета()
	
	РегламентированнаяОтчетностьУСН.ОбновитьСтатусыОтправленныхОтчетов();
	
	Объект.СостояниеСобытия = КалендарьОтчетности.ПолучитьСостояниеСобытияКалендаря(
		Объект.Организация,
		Объект.СобытиеКалендаря);
	
	УстановитьТекущуюЗакладку(ЭтаФорма, Объект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивУчетныхЗаписей(ВыбранныеОрганизации)
	
	// получаем массив учетных записей по массиву организаций
	КонтекстЭДО = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	Возврат КонтекстЭДО.УчетныеЗаписиПоОрганизациям(ВыбранныеОрганизации);
	
КонецФункции

&НаКлиенте
Процедура ИсторияОбмена(Команда)
	ПоказатьЗначение(,ПолучитьЦиклОбмена(КомплектОтчетности));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЦиклОбмена(Док) 
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЦиклыОбмена.Ссылка
	|ИЗ
	|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
	|ГДЕ
	|	ЦиклыОбмена.Предмет = &ДокРО
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЦиклыОбмена.ДатаСоздания УБЫВ");
	Запрос.УстановитьПараметр("ДокРО", Док);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции


 &НаКлиенте
Процедура НомерПачкиРСВ1ПриИзменении(Элемент)
	
	УстановитьНомерРСВ(ДокументОтчетности, НомерПачкиРСВ1);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерПачкиАДВ62ПриИзменении(Элемент)
	УстановитьНомерПачки(ДокументАДВ, НомерПачкиАДВ62);
КонецПроцедуры

&НаКлиенте
Процедура НомерПачкиСЗВ62ПриИзменении(Элемент)
	УстановитьНомерПачки(ДокументСЗВ62, НомерПачкиСЗВ62);
КонецПроцедуры

&НаКлиенте
Процедура НомерПачкиСЗВ63ПриИзменении(Элемент)
	УстановитьНомерПачки(ДокументСЗВ63, НомерПачкиСЗВ63);
КонецПроцедуры

&НаКлиенте
Процедура НомерПачкиСЗВ64ПриИзменении(Элемент)
	УстановитьНомерПачки(ДокументСЗВ64, НомерПачкиСЗВ64);
КонецПроцедуры

&НаКлиенте
Процедура НомерПачкиРаздел6ПриИзменении(Элемент)
		УстановитьНомерПачки(ДокументРаздел6РасчетаРСВ1, НомерПачкиРаздел6);
КонецПроцедуры


//-----------------------------------------------------------------------------
// События переходов

&НаКлиенте
Процедура ПереходЗаполнение(Команда)
	
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Заполнить");
	
	КалендарьОтчетности.ЗаписатьСостояниеСобытияКалендаря(
		Объект.Организация,
		Объект.СобытиеКалендаря,
		Объект.СостояниеСобытия,
		"");
	
	Оповестить("ИзменениеСостоянияСобытияКалендаря", Объект.СобытиеКалендаря, ЭтаФорма);
	ПараметрыФормы = Новый Структура("Организация,СобытиеКалендаря", Объект.Организация,Объект.СобытиеКалендаря);
	
	КалендарьОтчетностиКлиент.ОткрытьФормуНачалаЗаполнения(ЭтаФорма,ПараметрыФормы);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереходСправкиПоРСВ(Элемент)
	
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Отправить");
	
	ЗафиксироватьПереход(Объект.Организация, Объект.СобытиеКалендаря, Объект.СостояниеСобытия);
		
	ДатаСменыСостояния = ТекущаяДата();
	
	Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = Элементы.ОтчетностьВПФР;
	Элементы.ПереходВыполнил.КнопкаПоУмолчанию = Истина;
	
	УстановитьЗаголовокФормыПоТекущейСтранице();
	
	Оповестить("ИзменениеСостоянияСобытияКалендаря", Объект.СобытиеКалендаря, ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗафиксироватьПереход(Организация, Событие, Состояние)
	
	КалендарьОтчетности.ЗаписатьСостояниеСобытияКалендаря(
		Организация,
		Событие,
		Состояние,
		"");
	
	
	ЗаписьКалендаря = Справочники.ЗаписиКалендаряПодготовкиОтчетности.ПолучитьЗаписьКалендаря(Организация, Событие);
	Если ЗаписьКалендаря <> Неопределено Тогда
		ОбъектЗаписьКалендаря = ЗаписьКалендаря.ПолучитьОбъект();
		ОбъектЗаписьКалендаря.Завершено = Ложь;
		ОбъектЗаписьКалендаря.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереходКЗаполнениюОтчетностиПФРНажатие(Элемент)
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Заполнить");
	
	ЗафиксироватьПереход(Объект.Организация, Объект.СобытиеКалендаря, Объект.СостояниеСобытия);
	
	Оповестить("ИзменениеСостоянияСобытияКалендаря", Объект.СобытиеКалендаря, ЭтаФорма);
	ПараметрыФормы = Новый Структура("Организация,СобытиеКалендаря", Объект.Организация,Объект.СобытиеКалендаря);
	
	КалендарьОтчетностиКлиент.ОткрытьФормуНачалаЗаполнения(ЭтаФорма,ПараметрыФормы);
	Закрыть();
	
КонецПроцедуры


&НаКлиенте
Процедура ПереходВыполнил(Команда)
	
	оп = Новый ОписаниеОповещения("ОповещениеПодтверждениеПриема",ЭтотОбъект);
	ПоказатьВопрос(оп, НСтр("ru='ПФР приняла отчетность?'"), РежимДиалогаВопрос.ДаНет);
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправкуРСВ1(Команда)
	
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуРеглОтчета(ДокументОтчетности, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОтчетность(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОтветеНаВопросОЗаполнении",
	ЭтаФорма);
	
	ПоказатьВопрос(ОписаниеОповещения,
		НСтр("ru='Вы подтверждаете, что отчет заполнен полностью и корректно?'"), РежимДиалогаВопрос.ДаНет);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОтветеНаВопросОЗаполнении(РезультатВопроса, ДопПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	// регистрируем заявку на отправку
	
	Отказ = Ложь;
	ВыгрузитьРСВКомплекта(Отказ);
	
	Если Отказ Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Отправка прервана! В отчете РСВ-1 найдены ошибки. Проверьте корректность заполнения отчета и повторите снова.'"));
		
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправкаВКонтролирующийОрганПослеОтправки", ЭтаФорма);
	
	Если ИспользуетсяДКО Тогда
		КонтекстЭДОКлиент.ОтправкаРегламентированногоОтчетаВПФР(КомплектОтчетности, ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправкаВКонтролирующийОрганПослеОтправки(РезультатОтправки, ДополнительныеПараметры) Экспорт
	
	Если РезультатОтправки Тогда
		ОтправитьОтчетностьНаСервере();
		Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = Элементы.ЗадачаОжидатьПодтверждения;
		УстановитьЗаголовокФормыПоТекущейСтранице();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьСЗВ62(Команда)
	
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ДокументСЗВ62);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.РеестрСЗВ_6_2", "ФормаСЗВ_6_2", МассивОбъектов, ЭтаФорма, Новый Структура());
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьСЗВ(Команда)
	
	ИмяФайла = ПолучитьИмяФайлаСЗВАДВ(ДокументСЗВ64);
	АдресФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВ64(ДокументСЗВ64);
	ПолучитьФайл(АдресФайла, ИмяФайла, Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяФайлаСЗВАДВ(ДокументСЗВ)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСЗВ, "ИмяФайлаДляПФР");
КонецФункции

&НаКлиенте
Процедура РаспечататьОписьПачек(Команда)
	
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ДокументАДВ);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ОписьПачекСЗВ_6", "ФормаАДВ_6_2", МассивОбъектов, ЭтаФорма, Новый Структура());
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьАДВ(Команда)
	
	ИмяФайла = ПолучитьИмяФайлаСЗВАДВ(ДокументАДВ);
	АдресФайла = УчетСтраховыхВзносов.СохранитьФайлВыгрузкиАДВ62(ДокументАДВ);
	ПолучитьФайл(АдресФайла, ИмяФайла, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписьАДВ62(Команда)
	ПоказатьЗначение(,ДокументАДВ);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСЗВ62(Команда)
	ПоказатьЗначение(,ДокументСЗВ62);
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьАДВ64(Команда)
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ДокументСЗВ63);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ПачкаДокументовСЗВ_6_3", "ФормаАДВ_6_4", МассивОбъектов, ЭтаФорма, Новый Структура());
	
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьСЗВ63(Команда)
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ДокументСЗВ63);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ПачкаДокументовСЗВ_6_3", "ФормаСЗВ_6_3", МассивОбъектов, ЭтаФорма, Новый Структура());
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлы(Команда)
	
	
	ОповещениеВопроса = Новый ОписаниеОповещения("СохранитьФайлыЗавершение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОповещениеВопроса);
	
КонецПроцедуры


&НаКлиенте
Процедура СохранитьФайлыЗавершение(Результат, Параметры) Экспорт
	Оповещение = Новый ОписаниеОповещения("ЗаписьНаДискПослеПодключенияРасширенияРаботыСФайлами", ЭтотОбъект);	
	
	НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьНаДискПослеПодключенияРасширенияРаботыСФайлами(Подключено, Параметры) Экспорт
	
	ИмяФайлаВыгрузкиРСВ = Неопределено;
	МассивФайлов = ПолучитьМассивОписанийФайловКомплекта(ИмяФайлаВыгрузкиРСВ);
	Оповестить("ЗаписьКомплекта");
	
	ПолучаемыеФайлы = Новый Массив;
	Для Каждого ОписаниеФайла Из МассивФайлов Цикл
		ПолучаемыйФайл = Новый ОписаниеПередаваемогоФайла(ВРег(ОписаниеФайла.ИмяФайла), ОписаниеФайла.СсылкаНаДвоичныеДанныеФайла);
		ПолучаемыеФайлы.Добавить(ПолучаемыйФайл);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ДокументОтчетности) Тогда
		МассивСохранмяемыхОтчетов = Новый СписокЗначений;
		МассивСохранмяемыхОтчетов.Добавить(ДокументОтчетности);
		
		Ошибки = Новый Массив;
		
		ФайлВыгрузкиВоВременномХранилище = Новый Структура;
		Отказ = НЕ РегламентированнаяОтчетностьКлиент.ВыгрузитьОтчеты(МассивСохранмяемыхОтчетов,, Ошибки, , Истина, ФайлВыгрузкиВоВременномХранилище);
		Если Ошибки.Количество() > 0 Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Сохранение прервано! В отчете РСВ-1 найдены ошибки. Проверьте корректность заполнения отчета и повторите снова.'"));
			
			Возврат;
		КонецЕсли;
		Если ФайлВыгрузкиВоВременномХранилище.Свойство("АдресФайлаВыгрузкиВоВременномХранилище")
			И ФайлВыгрузкиВоВременномХранилище.Свойство("ИмяФайлаВыгрузки", ИмяФайлаВыгрузкиРСВ) Тогда
			
			ПолучаемыйФайл = Новый ОписаниеПередаваемогоФайла(ВРег(ФайлВыгрузкиВоВременномХранилище.ИмяФайлаВыгрузки), ФайлВыгрузкиВоВременномХранилище.АдресФайлаВыгрузкиВоВременномХранилище);
			ПолучаемыеФайлы.Добавить(ПолучаемыйФайл);	
		КонецЕсли;	

	КонецЕсли;
	
	Если Подключено Тогда
		ЗаписатьФайлыНаДискКомплектом(ПолучаемыеФайлы);	
	Иначе
		ЗаписатьФайлыНаДискПоОдному(ПолучаемыеФайлы);	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте 
Процедура ЗаписатьФайлыНаДискКомплектом(ПолучаемыеФайлы)
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ВыборФайла.МножественныйВыбор = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПослеПолученияФайловНаДиск", ЭтотОбъект);
	
	НачатьПолучениеФайлов(Оповещение, ПолучаемыеФайлы, ВыборФайла, Истина);		
КонецПроцедуры	

&НаКлиенте 
Процедура ЗаписатьФайлыНаДискПоОдному(ПолучаемыеФайлы)
	Для Каждого ОписаниеФайла Из ПолучаемыеФайлы Цикл
		ПолучитьФайл(ОписаниеФайла.Хранение, ОписаниеФайла.Имя, Истина);
	КонецЦикла;
КонецПроцедуры
	
&НаКлиенте 
Процедура ПослеПолученияФайловНаДиск(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	ФайлыЗаписаны = ПолученныеФайлы <> Неопределено; 	
КонецПроцедуры	

&НаКлиенте
Процедура ПереходСдатьОтчетность(Команда)
	
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Отправить");
	
	КалендарьОтчетности.ЗаписатьСостояниеСобытияКалендаря(
		Объект.Организация,
		Объект.СобытиеКалендаря,
		Объект.СостояниеСобытия,
		"");
		
	ДатаСменыСостояния = ТекущаяДата();
	
	Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = Элементы.ОтчетностьВПФР;
	Элементы.ПереходВыполнил.КнопкаПоУмолчанию = Истина;
	УстановитьЗаголовокФормыПоТекущейСтранице();
	
	Оповестить("ИзменениеСостоянияСобытияКалендаря", Объект.СобытиеКалендаря, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПачкаСЗВ63(Команда)
	ПоказатьЗначение(,ДокументСЗВ63);
КонецПроцедуры

&НаКлиенте
Процедура ПереходРедактирование(Команда)
	
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Ознакомиться");
	
	КалендарьОтчетности.ЗаписатьСостояниеСобытияКалендаря(
		Объект.Организация,
		Объект.СобытиеКалендаря,
		Объект.СостояниеСобытия,
		"");
		
	ДатаСменыСостояния = ТекущаяДата();
	
	Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = Элементы.ЗадачаОтредактировать;
	Элементы.ПереходСдатьОтчетность.КнопкаПоУмолчанию = Истина;
	УстановитьЗаголовокФормыПоТекущейСтранице();
	
	Оповестить("ИзменениеСостоянияСобытияКалендаря", Объект.СобытиеКалендаря, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСЗВ64(Команда)
	ПоказатьЗначение(,ДокументСЗВ64);
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьСЗВ64(Команда)
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ДокументСЗВ64);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ПачкаДокументовСЗВ_6_4", "ФормаСЗВ_6_4", МассивОбъектов, ЭтаФорма, Новый Структура());
	
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьАДВ65(Команда)
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ДокументСЗВ64);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ПачкаДокументовСЗВ_6_4", "ФормаАДВ_6_5", МассивОбъектов, ЭтаФорма, Новый Структура());
	
КонецПроцедуры

&НаКлиенте
Процедура Открыть6РазделРСВ1(Команда)
	ПоказатьЗначение(,ДокументРаздел6РасчетаРСВ1);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЗаявлениеОтправленоОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОбновитьСтатус" Тогда
		оп = Новый ОписаниеОповещения("ОбновлениеСтатусаЗавершение", ЭтаФорма);
		ОбработкаЗаявленийАбонентаКлиент.ОбновитьСтатусыЗаявленийАбонентов(,ЭтаФорма.УникальныйИдентификатор,оп,Объект.Организация);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПерейтиКСпискуЗаявлений" Тогда
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьФормуСпискаЗаявленийНаПодключение(Объект.Организация);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеСтатусаЗавершение(Результат, ДопПараметры) Экспорт
	ПроверитьВозможностьОтправки();
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Завершено");
	
	КалендарьОтчетности.ЗавершитьСобытиеКалендаряОтчетности(
		Объект.Организация,
		Объект.СобытиеКалендаря,
		"");
		
	ДатаСменыСостояния = ТекущаяДата();	
	
	Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = Элементы.ЗадачаВыполнена;
	УстановитьЗаголовокФормыПоТекущейСтранице();
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.ЗаписиКалендаряПодготовкиОтчетности"));
	Оповестить("Запись_ЗаписиКалендаряПодготовкиОтчетности");
	
КонецПроцедуры

// Конец событий переходов
//-----------------------------------------------------------------------------

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ПроверитьВозможностьОтправки()
	
	Если НЕ ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "УчетнаяЗаписьОбмена")) Тогда
		// Возможно заявление отправлено, но еще не одобрено
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявлениеАбонентаСпецоператораСвязи.Ссылка
		|ИЗ
		|	Документ.ЗаявлениеАбонентаСпецоператораСвязи КАК ЗаявлениеАбонентаСпецоператораСвязи
		|ГДЕ
		|	НЕ ЗаявлениеАбонентаСпецоператораСвязи.ПометкаУдаления
		|	И ЗаявлениеАбонентаСпецоператораСвязи.Организация = &Организация
		|	И ЗаявлениеАбонентаСпецоператораСвязи.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявленияАбонентаСпецоператораСвязи.Отправлено)";
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Если Запрос.Выполнить().Пустой() Тогда
			Элементы.ОтправитьВКонтролирующийОрган.Доступность = Ложь;
			Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить (нет заявки)'");
			Элементы.ОформитьЗаявку.Видимость = Истина;
			Элементы.ДекорацияЗаявлениеОтправлено.Видимость = Ложь;
		Иначе
			
			Элементы.ОтправитьВКонтролирующийОрган.Доступность = Ложь;
			Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить (нет заявки)'");
			Элементы.ОформитьЗаявку.Видимость = Ложь;
			Элементы.ДекорацияЗаявлениеОтправлено.Видимость = Истина;
		КонецЕсли;
	Иначе
		Элементы.ОтправитьВКонтролирующийОрган.Заголовок = НСтр("ru='Отправить'");
		Элементы.ОтправитьВКонтролирующийОрган.Доступность = Истина;
		Элементы.ОформитьЗаявку.Видимость = Ложь;
		Элементы.ДекорацияЗаявлениеОтправлено.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьРСВКомплекта(Отказ)
	Если Не ДокументОтчетности.Пустая() Тогда
		СписокОтчетов = Новый СписокЗначений;
		СписокОтчетов.Добавить(ДокументОтчетности);
		Отказ = Ложь;
		СообщенияОбОшибкахРСВ = Новый Массив;
		ФайлВыгрузкиВоВременномХранилище = Новый Структура;
		РегламентированнаяОтчетностьКлиент.ВыгрузитьОтчеты(СписокОтчетов, , СообщенияОбОшибкахРСВ, , Истина, ФайлВыгрузкиВоВременномХранилище);
		
		Если СообщенияОбОшибкахРСВ.Количество() > 0 Тогда
			Отказ = Истина;
			
			Возврат;
		КонецЕсли;
		
		СохранитьИзмененияВКомплекте(КомплектОтчетности, ФайлВыгрузкиВоВременномХранилище);
		
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьИзмененияВКомплекте(Комплект, ФайлВыгрузкиВоВременномХранилище)
	
	КомплектОбъект = Комплект.ПолучитьОбъект();
	КомплектОбъект.АдресФайлаВыгрузкиРСВ = ФайлВыгрузкиВоВременномХранилище.АдресФайлаВыгрузкиВоВременномХранилище;
	КомплектОбъект.ИмяФайлаВыгрузкиРСВ = ФайлВыгрузкиВоВременномХранилище.ИмяФайлаВыгрузки;
	КомплектОбъект.Записать();
	
	Комплект = КомплектОбъект.Ссылка;
	
КонецПроцедуры
&НаСервере
Процедура ОтправитьОтчетностьНаСервере()
	
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.ПолучитьПодтверждение");
	
	КалендарьОтчетности.ЗаписатьСостояниеСобытияКалендаря(
		Объект.Организация,
		Объект.СобытиеКалендаря,
		Объект.СостояниеСобытия,
		ДокументОтчетности);
		
	ДатаСменыСостояния = ТекущаяДатаСеанса();
	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокФормыПоТекущейСтранице()
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница.Заголовок, ПериодЗадачиПредставление);
	РегламентированнаяОтчетностьУСНКлиентСервер.УстановитьЗаголовокФормыЗадачи(ЭтаФорма, Объект.Организация);
КонецПроцедуры


// 1 - через представителя; 2 - самостоятельно
&НаСервере
Процедура ПереключитьСпособСдачи(СпособСдачи)
	
	Если СпособСдачи = 1 Тогда
		Элементы.ГруппаПодачиЧерезИнтернетОписание.Видимость = Истина;
		Элементы.ГруппаПодачиСамостоятельноОписание.Видимость = Ложь;
		Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Шрифт = Новый Шрифт(Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Шрифт,,,Истина);
		Элементы.ПодатьОтчетностьСамостоятельно.Шрифт = Новый Шрифт(Элементы.ПодатьОтчетностьСамостоятельно.Шрифт,,,Ложь);
	Иначе
		Элементы.ГруппаПодачиЧерезИнтернетОписание.Видимость = Ложь;
		Элементы.ГруппаПодачиСамостоятельноОписание.Видимость = Истина;
		Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Шрифт = Новый Шрифт(Элементы.ОтправитьОтчетностьЧерезИнтернетВыбор.Шрифт,,,Ложь);
		Элементы.ПодатьОтчетностьСамостоятельно.Шрифт = Новый Шрифт(Элементы.ПодатьОтчетностьСамостоятельно.Шрифт,,,Истина);
	КонецЕсли;
	
	Если ТекущийСпособСдачи = СпособСдачи Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийСпособСдачи = СпособСдачи;
	
	
КонецПроцедуры

&НаКлиенте
Процедура АнимацияОтправить()
	
	Если ШиринаКнопкиОтправить <= 25 Тогда
		Элементы.ОтправитьВКонтролирующийОрган.Ширина = ШиринаКнопкиОтправить;
		ПодключитьОбработчикОжидания("АнимацияОтправить", 0.2, Истина);
		ШиринаКнопкиОтправить = ШиринаКнопкиОтправить + 5;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьМассивСсылокНаОтправляемыеДокументы()Экспорт 
	
	МассивОтправляемыхДокументов = Новый Массив;
	МассивОтправляемыхДокументов.Вставить(0, ДокументАДВ);
	МассивОтправляемыхДокументов.Добавить(ДокументСЗВ62);
	Если ЗначениеЗаполнено(ДокументСЗВ63) Тогда
		МассивОтправляемыхДокументов.Добавить(ДокументСЗВ63);
	КонецЕсли;
	МассивОтправляемыхДокументов.Добавить(ДокументОтчетности);
	
	Возврат МассивОтправляемыхДокументов;
	
КонецФункции


// Процедура заполняет данные формы по данным ранее сформированной отчетности
//
&НаСервере
Процедура ПолучитьДанныеОтчетности()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗначенияПоказателейОтчетности.ЗначениеПоказателя Как ЗначениеПоказателя,
	|	ЗначенияПоказателейОтчетности.ПоказательОтчетности.Код КАК КодОтчетности
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетности КАК ЗначенияПоказателейОтчетности
	|ГДЕ
	|	ЗначенияПоказателейОтчетности.Организация = &Организация
	|	И ЗначенияПоказателейОтчетности.ПериодОтчетности = &ПериодОтчетности
	|	И ЗначенияПоказателейОтчетности.ПоказательОтчетности В(&МассивПоказателей)");
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ПериодОтчетности", Объект.СобытиеКалендаря.ДатаДокументаОбработкиСобытия);
	
	МассивПоказателей = Новый Массив;
	МассивПоказателей.Добавить(ПланыВидовХарактеристик.ПоказателиОтчетности.ИмеютсяСотрудникиВПФР);
	
	Запрос.УстановитьПараметр("МассивПоказателей", МассивПоказателей);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЭтаФорма[Выборка.КодОтчетности] = Выборка.ЗначениеПоказателя;
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Функция СсылкаНаОтправляемыйДокумент()Экспорт 
	Возврат КомплектОтчетности;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюЗакладку(ЭтаФорма, Объект)
	Если Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.ОтчетНеСдан") Тогда
		
		ЭтаФорма.Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаОзнакомиться;
		
	ИначеЕсли Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Ознакомиться") Тогда
		
		ЭтаФорма.Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаОтредактировать;
		ЭтаФорма.Элементы.ПереходСдатьОтчетность.КнопкаПоУмолчанию = Истина;
	ИначеЕсли Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Распечатать")
		ИЛИ Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Отправить") Тогда
		
		ЭтаФорма.Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = ЭтаФорма.Элементы.ОтчетностьВПФР;
		ЭтаФорма.Элементы.ПереходВыполнил.КнопкаПоУмолчанию = Истина;
		
	ИначеЕсли Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Завершить") Тогда
		
		ЭтаФорма.Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаПроверена;
		ЭтаФорма.Элементы.Далее.КнопкаПоУмолчанию = Истина;
		
	ИначеЕсли Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Завершено") Тогда
		
		ЭтаФорма.Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаВыполнена;
		
	ИначеЕсли Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.ПолучитьПодтверждение") Тогда
		
		ЭтаФорма.Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = ЭтаФорма.Элементы.ЗадачаОжидатьПодтверждения;
		
	Иначе
		
		ЭтаФорма.Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = ЭтаФорма.Элементы.ОтчетностьВПФР;
		ЭтаФорма.Элементы.ПереходВыполнил.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьМассивОписанийФайловКомплекта(ИмяФайлаВыгрузкиРСВ)
	
	МассивСсылок = Новый Массив;
	
	Если ЗначениеЗаполнено(ДокументАДВ) Тогда
		СтруктураОписьСЗВ = Новый Структура;
		СтруктураОписьСЗВ.Вставить("СсылкаНаДвоичныеДанныеФайла", УчетСтраховыхВзносов.СохранитьФайлВыгрузкиАДВ62(ДокументАДВ));
		СтруктураОписьСЗВ.Вставить("ИмяФайла",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументАДВ, "ИмяФайлаДляПФР"));
		
		МассивСсылок.Добавить(СтруктураОписьСЗВ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументСЗВ62) Тогда
		СтруктураСЗВ62 = Новый Структура;
		СтруктураСЗВ62.Вставить("СсылкаНаДвоичныеДанныеФайла", УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВ62(ДокументСЗВ62));
		СтруктураСЗВ62.Вставить("ИмяФайла",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСЗВ62, "ИмяФайлаДляПФР"));
		
		МассивСсылок.Добавить(СтруктураСЗВ62);
	ИначеЕсли ЗначениеЗаполнено(ДокументСЗВ64) Тогда
		СтруктураСЗВ64 = Новый Структура;
		СтруктураСЗВ64.Вставить("СсылкаНаДвоичныеДанныеФайла", УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВ64(ДокументСЗВ64));
		СтруктураСЗВ64.Вставить("ИмяФайла",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСЗВ64, "ИмяФайлаДляПФР"));
		
		МассивСсылок.Добавить(СтруктураСЗВ64);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументСЗВ63) Тогда
		СтруктураСЗВ63 = Новый Структура;
		СтруктураСЗВ63.Вставить("СсылкаНаДвоичныеДанныеФайла", УчетСтраховыхВзносов.СохранитьФайлВыгрузкиСЗВ63(ДокументСЗВ63));
		СтруктураСЗВ63.Вставить("ИмяФайла",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСЗВ63, "ИмяФайлаДляПФР"));
		МассивСсылок.Добавить(СтруктураСЗВ63);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументРаздел6РасчетаРСВ1) Тогда
		СтруктураРаздела6РасчетаРСВ1 = Новый Структура;
		СтруктураРаздела6РасчетаРСВ1.Вставить("СсылкаНаДвоичныеДанныеФайла", УчетСтраховыхВзносов.СохранитьФайлВыгрузкиРаздела6РСВ1(ДокументРаздел6РасчетаРСВ1));
		СтруктураРаздела6РасчетаРСВ1.Вставить("ИмяФайла",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРаздел6РасчетаРСВ1, "ИмяФайлаДляПФР"));
		МассивСсылок.Добавить(СтруктураРаздела6РасчетаРСВ1);
	КонецЕсли;
	ИмяФайлаВыгрузкиРСВ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КомплектОтчетности, "ИмяФайлаВыгрузкиРСВ");
	
	Возврат МассивСсылок;
	
КонецФункции



&НаСервереБезКонтекста
Процедура УстановитьНомерПачки(Ссылка, НомерПачки)
	
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	ДокументОбъект.НомерПачки = НомерПачки;
	ДокументОбъект.Записать();
	ОтчетныйПериод = ?(ТипЗнч(ДокументОбъект.ОтчетныйПериод)= Тип("Дата"), Год(ДокументОбъект.ОтчетныйПериод), ДокументОбъект.ОтчетныйПериод);
	
	РегламентированнаяОтчетность.УстановитьНомерПачкиВыгруженныхФайловПФР(ДокументОбъект.Организация, ОтчетныйПериод, ДокументОбъект.НомерПачки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьНомерРСВ(Ссылка, НомерПачки)
	РеглОтчет = Ссылка.ПолучитьОбъект();
	
	РеглОтчет.Заблокировать();
	
	РеглОтчет.НомерПачки = НомерПачки;
	
	РеглОтчет.Записать();
	
	РеглОтчет.Разблокировать();
КонецПроцедуры


&НаКлиенте
Процедура ОповещениеПодтверждениеПриема(Ответ, Параметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект.СостояниеСобытия = ПредопределенноеЗначение("Перечисление.СостоянияСобытийКалендаря.Завершено");
	
	КалендарьОтчетности.ЗавершитьСобытиеКалендаряОтчетности(
		Объект.Организация,
		Объект.СобытиеКалендаря,
		"");
		
	ДатаСменыСостояния = ТекущаяДата();	
	
	Элементы.СтраницаОтчетностиВПФР.ТекущаяСтраница = Элементы.ЗадачаВыполнена;
	УстановитьЗаголовокФормыПоТекущейСтранице();
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.ЗаписиКалендаряПодготовкиОтчетности"));
	Оповестить("Запись_ЗаписиКалендаряПодготовкиОтчетности");
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПодтверждениеЗаполненности(Ответ, Параметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	// регистрируем заявку на отправку
	
	Отказ = Ложь;
	ВыгрузитьРСВКомплекта(Отказ);
	
	Если Отказ Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Отправка прервана! В отчете РСВ-1 найдены ошибки. Проверьте корректность заполнения отчета и повторите снова.'"));
		
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправкаВКонтролирующийОрганПослеОтправки", ЭтаФорма);
	
	Если ИспользуетсяДКО Тогда
		КонтекстЭДОКлиент.ОтправкаРегламентированногоОтчетаВПФР(КомплектОтчетности, ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры


#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ПФР");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ПФР");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ПФР");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ПФР");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ПФР");
КонецПроцедуры

#КонецОбласти



