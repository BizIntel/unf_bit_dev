
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Организация = Параметры.Организация;
	
	Для Каждого Строка Из Параметры.СписокКПоиску Цикл
		
		новстр = ТаблицаРегистрации.Добавить();
		новстр.Представление = Строка.Представление;
		новстр.ВзаиморасчетыСБюджетом = Строка.Значение;
		
	КонецЦикла;
	БезДокументаВзаиморасчетов = Параметры.БезДокументаВзаиморасчетов;
	
	ВывестиДанныеВСписке();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРегистрацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ТаблицаРегистрацииРКО"
		И Элементы.ТаблицаРегистрации.ТекущиеДанные.Сумма > 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Элементы.ТаблицаРегистрации.ТекущиеДанные.РКО.Пустая() Тогда
			
			ДатаУплаты = ?(ЗначениеЗаполнено(ВыбраннаяДата), ВыбраннаяДата, ТекущаяДата());
			
			оп = Новый ОписаниеОповещения("ОповещениеВыбораДаты", ЭтотОбъект);
			
			ПоказатьВводДаты(
				оп,
				ДатаУплаты,
				НСтр("ru='Когда была произведена уплата?'")
			);
			
			
			Возврат;
			
		Иначе
			ПоказатьЗначение(,Элементы.ТаблицаРегистрации.ТекущиеДанные.РКО);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеВыбораДаты(ДатаРасхода, Параметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДатаРасхода) Тогда
		Возврат;
	КонецЕсли;
	
	ВыбраннаяДата = ДатаРасхода;
	
	Ссылка = РегламентированнаяОтчетностьУСН.ЗарегистрироватьРасходыПоНалогамИВзносамНаличные(
		Объект.Организация,
		Элементы.ТаблицаРегистрации.ТекущиеДанные.ВзаиморасчетыСБюджетом,
		ВыбраннаяДата,
		Ложь,
		Элементы.ТаблицаРегистрации.ТекущиеДанные.Сумма);
	
	ВывестиДанныеВСписке();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиДанныеВСписке()
	
	Временная = ТаблицаРегистрации.Выгрузить();
	Временная.Свернуть("Представление,ВзаиморасчетыСБюджетом");
	ТаблицаРегистрации.Загрузить(Временная);
	
	Если БезДокументаВзаиморасчетов Тогда
		ВидыНалогов = Новый Массив;
		СрокУплаты = Дата('00010101');
		СоответствиеВидаНалогаИДанных = Новый Соответствие;
		Для Каждого СтрокаРегистрации Из ТаблицаРегистрации Цикл
			ВидыНалогов.Добавить(СтрокаРегистрации.ВзаиморасчетыСБюджетом.ВидНалога);
			СрокУплаты = СтрокаРегистрации.ВзаиморасчетыСБюджетом.СрокУплаты;
			СоответствиеВидаНалогаИДанных.Вставить(СтрокаРегистрации.ВзаиморасчетыСБюджетом.ВидНалога, Новый Структура("ВзаиморасчетыСБюджетом, Представление", СтрокаРегистрации.ВзаиморасчетыСБюджетом, СтрокаРегистрации.Представление));
		КонецЦикла;
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВидыНалогов.Ссылка КАК ВидНалога
		|ПОМЕСТИТЬ втДанные
		|ИЗ
		|	Справочник.ВидыНалогов КАК ВидыНалогов
		|ГДЕ ВидыНалогов.Ссылка В(&ВидыНалогов);
		|ВЫБРАТЬ
		|	втДанные.ВидНалога,
		|	ЕСТЬNULL(РасходИзКассы.Ссылка, ЗНАЧЕНИЕ(Документ.РасходИзКассы.ПустаяСсылка)) КАК РКО,
		|	ЕСТЬNULL(РасходИзКассы.СуммаДокумента, 0) КАК СуммаРКО
		|ИЗ
		|	втДанные КАК втДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходИзКассы КАК РасходИзКассы
		|ПО втДанные.ВидНалога = РасходИзКассы.ВидНалога
		|	И НЕ РасходИзКассы.ПометкаУдаления
		|	И РасходИзКассы.Проведен
		|	И РасходИзКассы.Организация = &Организация
		|	И РасходИзКассы.СрокУплаты = &СрокУплаты
		|
		|УПОРЯДОЧИТЬ ПО
		|	РасходИзКассы.ВидНалога");
		
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("СрокУплаты", СрокУплаты);
		Запрос.УстановитьПараметр("ВидыНалогов", ВидыНалогов);
		
		Выборка = Запрос.Выполнить().Выбрать();
		ПоследняяДобавленнаяСтрока = Неопределено;
		ПромежуточнаяСумма = 0;
		СуммаДокумента = 0;
		ВидНалога = Неопределено;
		Данные = Неопределено;
		ТаблицаРегистрации.Очистить();
		
		Пока Выборка.Следующий() Цикл
			СтруктураДанные = СоответствиеВидаНалогаИДанных[Выборка.ВидНалога];
			Данные = СтруктураДанные.ВзаиморасчетыСБюджетом;
			СуммаДокумента = Данные.СуммаДокумента;
			Представление = СтруктураДанные.Представление;
			Если ВидНалога <> Выборка.ВидНалога Тогда
				// игнорируем первый проход и записи, где уплата произвелась полностью и где уплата не производилась
				Если ВидНалога <> Неопределено 
					И ПромежуточнаяСумма < СоответствиеВидаНалогаИДанных[ВидНалога].ВзаиморасчетыСБюджетом.СуммаДокумента
					И ПромежуточнаяСумма <> 0 Тогда
					
					НоваяСтрока = ТаблицаРегистрации.Добавить();
					НоваяСтрока.Представление = Представление;
					НоваяСтрока.ВзаиморасчетыСБюджетом = Данные;
					НоваяСтрока.Сумма = СуммаДокумента - ПромежуточнаяСумма;
				КонецЕсли;
				
				ПромежуточнаяСумма = 0;
				ВидНалога = Выборка.ВидНалога;
				
			КонецЕсли;
			
			НоваяСтрока = ТаблицаРегистрации.Добавить();
			НоваяСтрока.Представление = Представление;
			НоваяСтрока.ВзаиморасчетыСБюджетом = Данные;
			НоваяСтрока.РКО = Выборка.РКО;
			НоваяСтрока.Сумма = ?(ЗначениеЗаполнено(Выборка.РКО),Выборка.СуммаРКО, СуммаДокумента);
			
			ПромежуточнаяСумма = ПромежуточнаяСумма + Выборка.СуммаРКО;
			ПоследняяДобавленнаяСтрока = НоваяСтрока;
			
		КонецЦикла;
		
		Если ПромежуточнаяСумма > 0 И СуммаДокумента > 0 И ПромежуточнаяСумма <> СуммаДокумента Тогда
			НоваяСтрока = ТаблицаРегистрации.Добавить();
			НоваяСтрока.Представление = Представление;
			НоваяСтрока.ВзаиморасчетыСБюджетом = Данные;
			НоваяСтрока.Сумма = СуммаДокумента - ПромежуточнаяСумма;
		КонецЕсли;
	Иначе
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(втДанные.ВзаиморасчетыСсылка КАК Документ.НачислениеНалогов) КАК ВзаиморасчетыСБюджетом,
		|	втДанные.Представление КАК Представление
		|ПОМЕСТИТЬ втДанные
		|ИЗ
		|	&втДанные КАК втДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанные.Представление,
		|	ВЫРАЗИТЬ(втДанные.ВзаиморасчетыСБюджетом КАК Документ.НачислениеНалогов) КАК ВзаиморасчетыСБюджетом,
		|	ЕСТЬNULL(РасходИзКассы.Ссылка, ЗНАЧЕНИЕ(Документ.РасходИзКассы.ПустаяСсылка)) КАК РКО,
		|	ЕСТЬNULL(РасходИзКассы.СуммаДокумента, втДанные.ВзаиморасчетыСБюджетом.СуммаДокумента) КАК СуммаРКО
		|ИЗ
		|	втДанные КАК втДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходИзКассы КАК РасходИзКассы
		|		ПО втДанные.ВзаиморасчетыСБюджетом = РасходИзКассы.ДокументОснование
		|			И (РасходИзКассы.Проведен)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВзаиморасчетыСБюджетом
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанные.ВзаиморасчетыСБюджетом КАК Документ,
		|	втДанные.ВзаиморасчетыСБюджетом.СуммаДокумента КАК Сумма
		|ИЗ
		|	втДанные КАК втДанные");
		
		Временная = ТаблицаРегистрации.Выгрузить();
		Временная.Колонки.Добавить("ВзаиморасчетыСсылка", Новый ОписаниеТипов("ДокументСсылка.НачислениеНалогов"), "Взиморасчеты");
		Для Каждого Строка Из Временная Цикл
			Строка.ВзаиморасчетыСсылка = Строка.ВзаиморасчетыСБюджетом;
		КонецЦикла;
		
		Запрос.УстановитьПараметр("втДанные",Временная);
		
		РезультатПакета = Запрос.ВыполнитьПакет();
		
		ТаблицаРегистрации.Очистить();
		
		// заполняем соответствие документов и сумм для последущего быстрого поиска
		Выборка = РезультатПакета[2].Выбрать();
		СоответствиеДокументовИСумм = Новый Соответствие;
		Пока Выборка.Следующий() Цикл
			СоответствиеДокументовИСумм.Вставить(Выборка.Документ, Выборка.Сумма );
		КонецЦикла;
		
		
		// заполняем таблицу регистрации
		// по результатам запроса может быть на несколько документов взаиморасчета
		// несколько документов оплаты, поэтому их нужно разбить по суммам
		// а строку с остатком мы просто помещаем без ссылки на РКО
		
		Выборка = РезультатПакета[1].Выбрать();
		СсылкаВзаиморасчета = Неопределено;
		ПоследняяДобавленнаяСтрока = Неопределено;
		ПромежуточнаяСумма = 0;
		
		Пока Выборка.Следующий() Цикл
			
			Если СсылкаВзаиморасчета <> Выборка.ВзаиморасчетыСБюджетом Тогда
				
				// игнорируем первый проход и записи, где уплата произвелась полностью и где улпата не производилась
				Если СсылкаВзаиморасчета <> Неопределено 
					И ПромежуточнаяСумма < СоответствиеДокументовИСумм[СсылкаВзаиморасчета]
					И ПромежуточнаяСумма <> 0 Тогда
					
					НоваяСтрока = ТаблицаРегистрации.Добавить();
					НоваяСтрока.Представление = ПоследняяДобавленнаяСтрока.Представление;
					НоваяСтрока.ВзаиморасчетыСБюджетом = СсылкаВзаиморасчета;
					НоваяСтрока.Сумма = СоответствиеДокументовИСумм[СсылкаВзаиморасчета] - ПромежуточнаяСумма;
				КонецЕсли;
				
				ПромежуточнаяСумма = 0;
				СсылкаВзаиморасчета = Выборка.ВзаиморасчетыСБюджетом;
				
			КонецЕсли;
			
			НоваяСтрока = ТаблицаРегистрации.Добавить();
			НоваяСтрока.Представление = Выборка.Представление;
			НоваяСтрока.ВзаиморасчетыСБюджетом = Выборка.ВзаиморасчетыСБюджетом;
			НоваяСтрока.РКО = Выборка.РКО;
			НоваяСтрока.Сумма = Выборка.СуммаРКО;
			
			ПромежуточнаяСумма = ПромежуточнаяСумма + Выборка.СуммаРКО;
			ПоследняяДобавленнаяСтрока = НоваяСтрока;
			
		КонецЦикла;
	КонецЕсли;
	ТаблицаРегистрации.Сортировать("Представление");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОповещениеОбИзмененииДолга" Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументСсылка.РасходИзКассы") Тогда
			
			ВывестиДанныеВСписке();
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
