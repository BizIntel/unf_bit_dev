// Процедура - обработчик команды ЗагрузитьИзФайла.
//
&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	Если ЗначениеЗаполнено(СоглашениеПрямогоОбменаСБанками) Тогда
		
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Организация", Объект.Организация);
		ПараметрыОткрытияФормы.Вставить("БанковскийСчетОрганизации", Объект.БанковскийСчет);
		ПараметрыОткрытияФормы.Вставить("БанковскийСчет", Объект.БанковскийСчет);
		ПараметрыОткрытияФормы.Вставить("СтатьяДДСВходящий", Объект.СтатьяДДСВходящий);
		ПараметрыОткрытияФормы.Вставить("СтатьяДДСИсходящий", Объект.СтатьяДДСИсходящий);
		ПараметрыОткрытияФормы.Вставить("ПроводитьЗагружаемые", Объект.ПроводитьЗагружаемые);
		ПараметрыОткрытияФормы.Вставить("ЗаполнятьДолгиАвтоматически", Объект.ЗаполнятьДолгиАвтоматически);
		ПараметрыОткрытияФормы.Вставить("СоглашениеПрямогоОбменаСБанками", СоглашениеПрямогоОбменаСБанками);
		ПараметрыОткрытияФормы.Вставить("АвтоматическиПодставлятьДокументы", Объект.АвтоматическиПодставлятьДокументы);
		ПараметрыОткрытияФормы.Вставить("НеУдалятьДокументыКоторыхНетВВыписке", Объект.НеУдалятьДокументыКоторыхНетВВыписке);
		ПараметрыОткрытияФормы.Вставить("АнализироватьИсториюВыбораЗначенийРеквизитов", Объект.АнализироватьИсториюВыбораЗначенийРеквизитов);
		ПараметрыОткрытияФормы.Вставить("НастройкиПолучены", Истина);
		ПараметрыОткрытияФормы.Вставить("КонтролироватьБезопасностьОбменаСБанком", Объект.КонтролироватьБезопасностьОбменаСБанком);
		
		ОткрытьФорму(
			"Обработка.КлиентБанк.Форма.ФормаЗагрузка",
			ПараметрыОткрытияФормы
		);
		
	Иначе
	
		УправлениеНебольшойФирмойКлиент.ЗагрузитьДанныеИзФайлаВыписки(
			УникальныйИдентификатор,
			Объект.ФайлЗагрузки,
			Объект.Организация,
			Объект.БанковскийСчет,
			Объект.СтатьяДДСВходящий,
			Объект.СтатьяДДСИсходящий,
			Объект.ПроводитьЗагружаемые,
			Объект.ЗаполнятьДолгиАвтоматически,
			Объект.Программа,
			Объект.Кодировка,
			Объект.ВерсияФормата,
			Объект.АвтоматическиПодставлятьДокументы,
			Объект.АнализироватьИсториюВыбораЗначенийРеквизитов,
			Истина,
			Объект.НеУдалятьДокументыКоторыхНетВВыписке,
			Объект.КонтролироватьБезопасностьОбменаСБанком
		);
	
	КонецЕсли;
	
КонецПроцедуры // ЗагрузитьИзФайла()

// Процедура - обработчик команды СохранитьНовыеПоручения.
//
&НаКлиенте
Процедура СохранитьНовыеПоручения(Команда)
	
	ОткрытьФорму(
		"Обработка.КлиентБанк.Форма.ФормаВыгрузка",
		Новый Структура(
			"Организация, БанковскийСчетОрганизации, БанковскийСчет, ФайлВыгрузки, Программа, Кодировка, ВерсияФормата, СоглашениеПрямогоОбменаСБанками, КонтролироватьБезопасностьОбменаСБанком",
			Объект.Организация,
			Объект.БанковскийСчет,
			Объект.БанковскийСчет,
			Объект.ФайлВыгрузки,
			Объект.Программа,
			Объект.Кодировка,
			Объект.ВерсияФормата,
			СоглашениеПрямогоОбменаСБанками,
			Объект.КонтролироватьБезопасностьОбменаСБанком
		)
	);
	
КонецПроцедуры // СохранитьНовыеПоручения()

// Процедура - обработчик события ПриСозданииНаСервере формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкиЗагружены = ОбновитьФильтрБанкСчетов();
	
	Если НЕ ЗначениеЗаполнено(Объект.Кодировка) Тогда
		Объект.Кодировка = "Авто";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ВерсияФормата) Тогда
		Объект.ВерсияФормата = "1.02";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.СтатьяДДСВходящий) Тогда
		Объект.СтатьяДДСВходящий = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.СтатьяДДСИсходящий) Тогда
		Объект.СтатьяДДСИсходящий = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ГруппаДоступа) Тогда
		Объект.ГруппаДоступа = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяГруппаДоступаКонтрагентов");
	КонецЕсли;
	Если Не НастройкиЗагружены Тогда
		Объект.КонтролироватьБезопасностьОбменаСБанком = Истина;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

// Процедура сохраняет настройки формы.
//
&НаСервере
Процедура СохранитьНастройкиФормы()
	
	Настройки = Новый Соответствие;
	Настройки.Вставить("ФайлЗагрузки", Объект.ФайлЗагрузки);
	Настройки.Вставить("ФайлВыгрузки", Объект.ФайлВыгрузки);
	Настройки.Вставить("Программа", Объект.Программа);
	Настройки.Вставить("СтатьяДДСИсходящий", Объект.СтатьяДДСИсходящий);
	Настройки.Вставить("СтатьяДДСВходящий", Объект.СтатьяДДСВходящий);
	Настройки.Вставить("ПроводитьЗагружаемые", Объект.ПроводитьЗагружаемые);
	Настройки.Вставить("ЗаполнятьДолгиАвтоматически", Объект.ЗаполнятьДолгиАвтоматически);
	Настройки.Вставить("Кодировка", Объект.Кодировка);
	Настройки.Вставить("ВерсияФормата", Объект.ВерсияФормата);
	Настройки.Вставить("АвтоматическиПодставлятьДокументы", Объект.АвтоматическиПодставлятьДокументы);
	Настройки.Вставить("НеУдалятьДокументыКоторыхНетВВыписке", Объект.НеУдалятьДокументыКоторыхНетВВыписке);
	Настройки.Вставить("АнализироватьИсториюВыбораЗначенийРеквизитов", Объект.АнализироватьИсториюВыбораЗначенийРеквизитов);
	Настройки.Вставить("ГруппаДоступа", Объект.ГруппаДоступа);
	Настройки.Вставить("КонтролироватьБезопасностьОбменаСБанком", Объект.КонтролироватьБезопасностьОбменаСБанком);

	ХранилищеСистемныхНастроек.Сохранить("Обработка.КлиентБанк.Форма.ОсновнаяФорма/" + ?(ЗначениеЗаполнено(Объект.БанковскийСчет), ПолучитьНавигационнуюСсылку(Объект.БанковскийСчет), "БанковскийСчетНеУказан"), "ВыгрузкаВСбербанк", Настройки);
	
КонецПроцедуры // СохранитьНастройкиФормы()

// Процедура - обработчик команды ФильтрПоСчетуНажатие.
//
&НаКлиенте
Процедура ФильтрПоСчетуНажатие(Элемент)
	
	Отбор = Новый Структура("ЭтоСчетОрганизации", Истина);
	ОткрытьФорму("Справочник.БанковскиеСчета.Форма.ФормаВыбораБезВладельца", Новый Структура("ТекущаяСтрока, Отбор", Объект.БанковскийСчет, Отбор), ЭтаФорма);
	
КонецПроцедуры // ФильтрПоСчетуНажатие()

// Процедура - обработчик события ОбработкаВыбора формы.
//
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		Объект.БанковскийСчет = ВыбранноеЗначение;
		ОбновитьФильтрБанкСчетов();
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбора()

// Загружает настройки формы.
// Если загрузка настроек осуществляется при изменении реквизита формы,
// например, для новой организации, то обязательно проверить подлючено ли 
// расширение для работы с файлами.
//
// Признаком отсутствия подключения будит информация в реквизитах объекта обработки:
// ФайлВыгрузки, ФайлЗагрузки
//
&НаСервере
Функция ЗагрузитьНастройкиФормы()
	
	Настройки = ХранилищеСистемныхНастроек.Загрузить("Обработка.КлиентБанк.Форма.ОсновнаяФорма/" + ?(ЗначениеЗаполнено(Объект.БанковскийСчет), ПолучитьНавигационнуюСсылку(Объект.БанковскийСчет), "БанковскийСчетНеУказан"), "ВыгрузкаВСбербанк");
	
	Если Настройки <> Неопределено Тогда
		Объект.ФайлВыгрузки = Настройки.Получить("ФайлВыгрузки");
		Объект.ФайлЗагрузки = Настройки.Получить("ФайлЗагрузки");
		Объект.Программа = Настройки.Получить("Программа");
		Объект.СтатьяДДСИсходящий = Настройки.Получить("СтатьяДДСИсходящий");
		Объект.СтатьяДДСВходящий = Настройки.Получить("СтатьяДДСВходящий");
		Объект.ПроводитьЗагружаемые = Настройки.Получить("ПроводитьЗагружаемые");
		Если Настройки.Получить("ЗаполнятьДолгиАвтоматически") = Неопределено Тогда
			Объект.ЗаполнятьДолгиАвтоматически = Истина;
		Иначе
			Объект.ЗаполнятьДолгиАвтоматически = Настройки.Получить("ЗаполнятьДолгиАвтоматически");
		КонецЕсли;
		Объект.Кодировка = Настройки.Получить("Кодировка");
		Если НЕ ЗначениеЗаполнено(Объект.Кодировка) Тогда
			Объект.Кодировка = "Авто";
		КонецЕсли;
		Объект.ВерсияФормата = Настройки.Получить("ВерсияФормата");
		Если НЕ ЗначениеЗаполнено(Объект.ВерсияФормата) Тогда
			Объект.ВерсияФормата = "1.02";
		КонецЕсли;
		Если Настройки.Получить("АвтоматическиПодставлятьДокументы") = Неопределено Тогда
			Объект.АвтоматическиПодставлятьДокументы = Истина;
		Иначе
			Объект.АвтоматическиПодставлятьДокументы = Настройки.Получить("АвтоматическиПодставлятьДокументы");
		КонецЕсли;
		Если Настройки.Получить("НеУдалятьДокументыКоторыхНетВВыписке") = Неопределено Тогда
			Объект.НеУдалятьДокументыКоторыхНетВВыписке = Ложь;
		Иначе
			Объект.НеУдалятьДокументыКоторыхНетВВыписке = Настройки.Получить("НеУдалятьДокументыКоторыхНетВВыписке");
		КонецЕсли;
		Если Настройки.Получить("АнализироватьИсториюВыбораЗначенийРеквизитов") = Неопределено Тогда
			Объект.АнализироватьИсториюВыбораЗначенийРеквизитов = Истина;
		Иначе
			Объект.АнализироватьИсториюВыбораЗначенийРеквизитов = Настройки.Получить("АнализироватьИсториюВыбораЗначенийРеквизитов");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Настройки.Получить("ГруппаДоступа")) Тогда
			Объект.ГруппаДоступа = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяГруппаДоступаКонтрагентов");
		Иначе
			Объект.ГруппаДоступа = Настройки.Получить("ГруппаДоступа");
		КонецЕсли;
		Если Настройки.Получить("КонтролироватьБезопасностьОбменаСБанком") = Неопределено Тогда
			Объект.КонтролироватьБезопасностьОбменаСБанком = Истина;
		Иначе
			Объект.КонтролироватьБезопасностьОбменаСБанком = Настройки.Получить("КонтролироватьБезопасностьОбменаСБанком");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Настройки <> Неопределено;
	
КонецФункции // ЗагрузитьНастройкиФормы()

// Обновляет фильтр банковских счетов.
//
&НаСервере
Функция ОбновитьФильтрБанкСчетов()
	
	БанковскийСчетНомер = Объект.БанковскийСчет.НомерСчета;
	
	Объект.Организация = Объект.БанковскийСчет.Владелец;
	
	НастройкиЗагружены = ЗагрузитьНастройкиФормы();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(БанковскиеСчета.Владелец) = ТИП(Справочник.Организации)
	|	И НЕ БанковскиеСчета.ПометкаУдаления");
	
	ВыборкаРезультата = Запрос.Выполнить().Выбрать();
	
	НесколькоСчетов = ВыборкаРезультата.Следующий();
	
	ЗначениеФильтраЗаполнено = ЗначениеЗаполнено(Объект.БанковскийСчет);
	
	// Настройка видимости.
	Если НесколькоСчетов Тогда
		Элементы.ПоВсемСчетам.Видимость = ЗначениеФильтраЗаполнено;
		Элементы.ФильтрПоСчету.Видимость = Истина;
	Иначе
		Элементы.ПоВсемСчетам.Видимость = Ложь;
		Элементы.ФильтрПоСчету.Видимость = Истина;
	КонецЕсли;
	
	СоглашениеПрямогоОбменаСБанками = Неопределено;
	Если ЗначениеЗаполнено(Объект.БанковскийСчет) Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьОбменСБанками") Тогда
			
			Запрос = Новый Запрос();
			Запрос.Параметры.Вставить("БанковскийСчет", Объект.БанковскийСчет);
			Запрос.Параметры.Вставить("Организация", Объект.Организация);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	НастройкиОбменСБанками.Ссылка КАК СоглашениеПрямогоОбменаСБанками,
			|	НастройкиОбменСБанками.Банк
			|ИЗ
			|	Справочник.БанковскиеСчета КАК БанковскиеСчета
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиОбменСБанками КАК НастройкиОбменСБанками
			|		ПО БанковскиеСчета.Банк = НастройкиОбменСБанками.Банк
			|ГДЕ
			|	БанковскиеСчета.Ссылка = &БанковскийСчет
			|	И НастройкиОбменСБанками.Организация = &Организация
			|	И НастройкиОбменСБанками.Недействительна = ЛОЖЬ";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				СоглашениеПрямогоОбменаСБанками = Выборка.СоглашениеПрямогоОбменаСБанками;
			КонецЕсли;
			
		КонецЕсли;
		
		Элементы.ФильтрПоСчету.Заголовок = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Банковский счет: %1'"),
				Объект.БанковскийСчет);
	Иначе
		Элементы.ФильтрПоСчету.Заголовок = НСтр("ru='Банковский счет: <по данным выписки>'")
	КонецЕсли;
	
	Возврат НастройкиЗагружены;
	
КонецФункции // ОбновитьФильтрБанкСчетов()

// Обновляет фильтр банковских счетов при записи нового банковского счета.
//
&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Если ТипЗнч(НовыйОбъект) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		СтандартнаяОбработка = Ложь;
		ОбновитьФильтрБанкСчетов();
	КонецЕсли;

КонецПроцедуры // ОбработкаЗаписиНового()

// Отмена выбора банковского счета.
//
&НаКлиенте
Процедура ПоВсемСчетам(Команда)
	
	Объект.БанковскийСчет = ПредопределенноеЗначение("Справочник.БанковскиеСчета.ПустаяСсылка");
	ОбновитьФильтрБанкСчетов();
	
КонецПроцедуры // ПоВсемСчетам()

// Процедура - обработчик команды Настройка.
//
&НаКлиенте
Процедура Настройка(Команда)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Кодировка", Объект.Кодировка);
	ПараметрыОткрытияФормы.Вставить("Программа", Объект.Программа);
	ПараметрыОткрытияФормы.Вставить("ВерсияФормата", Объект.ВерсияФормата);
	ПараметрыОткрытияФормы.Вставить("СтатьяДДСВходящий", Объект.СтатьяДДСВходящий);
	ПараметрыОткрытияФормы.Вставить("СтатьяДДСИсходящий", Объект.СтатьяДДСИсходящий);
	ПараметрыОткрытияФормы.Вставить("ПроводитьЗагружаемые", Объект.ПроводитьЗагружаемые);
	ПараметрыОткрытияФормы.Вставить("ЗаполнятьДолгиАвтоматически", Объект.ЗаполнятьДолгиАвтоматически);
	ПараметрыОткрытияФормы.Вставить("СоглашениеПрямогоОбменаСБанками", СоглашениеПрямогоОбменаСБанками);
	ПараметрыОткрытияФормы.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	ПараметрыОткрытияФормы.Вставить("ФайлВыгрузки", Объект.ФайлВыгрузки);
	ПараметрыОткрытияФормы.Вставить("ФайлЗагрузки", Объект.ФайлЗагрузки);
	ПараметрыОткрытияФормы.Вставить("АнализироватьИсториюВыбораЗначенийРеквизитов", Объект.АнализироватьИсториюВыбораЗначенийРеквизитов);
	ПараметрыОткрытияФормы.Вставить("АвтоматическиПодставлятьДокументы", Объект.АвтоматическиПодставлятьДокументы);
	ПараметрыОткрытияФормы.Вставить("НеУдалятьДокументыКоторыхНетВВыписке", Объект.НеУдалятьДокументыКоторыхНетВВыписке);
	ПараметрыОткрытияФормы.Вставить("ФормаЗагрузка", Истина);
	ПараметрыОткрытияФормы.Вставить("ФормаВыгрузка", Истина);
	Если ЗначениеЗаполнено(Объект.БанковскийСчет) Тогда
		ПараметрыОткрытияФормы.Вставить("ЗагруженыНастройкиСчета", Истина);
		ПараметрыОткрытияФормы.Вставить("БанковскийСчетНомер", БанковскийСчетНомер);
	КонецЕсли;
	ПараметрыОткрытияФормы.Вставить("ГруппаДоступа", Объект.ГруппаДоступа);
	ПараметрыОткрытияФормы.Вставить("КонтролироватьБезопасностьОбменаСБанком", Объект.КонтролироватьБезопасностьОбменаСБанком);
	
	ОткрытьФорму("Обработка.КлиентБанк.Форма.ФормаНастройка", ПараметрыОткрытияФормы);
	
КонецПроцедуры // Настройка()

// Процедура - обработчик события ОбработкаОповещения формы.
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеНастроек" + УникальныйИдентификатор Тогда
		Объект.ФайлЗагрузки = Параметр.ФайлЗагрузки;
		Объект.ФайлВыгрузки = Параметр.ФайлВыгрузки;
		Объект.Кодировка = Параметр.Кодировка;
		Объект.ВерсияФормата = Параметр.ВерсияФормата;
		Объект.Программа = Параметр.Программа;
		Объект.СтатьяДДСВходящий = Параметр.СтатьяДДСВходящий;
		Объект.СтатьяДДСИсходящий = Параметр.СтатьяДДСИсходящий;
		Объект.ПроводитьЗагружаемые = Параметр.ПроводитьЗагружаемые;
		Объект.ЗаполнятьДолгиАвтоматически = Параметр.ЗаполнятьДолгиАвтоматически;
		Объект.АнализироватьИсториюВыбораЗначенийРеквизитов = Параметр.АнализироватьИсториюВыбораЗначенийРеквизитов;
		Объект.АвтоматическиПодставлятьДокументы = Параметр.АвтоматическиПодставлятьДокументы;
		Объект.НеУдалятьДокументыКоторыхНетВВыписке = Параметр.НеУдалятьДокументыКоторыхНетВВыписке;
		Объект.ГруппаДоступа = Параметр.ГруппаДоступа;
		Объект.КонтролироватьБезопасностьОбменаСБанком = Параметр.КонтролироватьБезопасностьОбменаСБанком;
		
		СохранитьНастройкиФормы();
	КонецЕсли;
	
КонецПроцедуры // ОбработкаОповещения()

&НаКлиенте
Процедура ДекорацияИнформацияОПрямомОбменеСБанкомНажатие(Элемент)
	ПерейтиПоНавигационнойСсылке("http://its.1c.ru/db/updinfo#content:142:1:issogl2_9");
КонецПроцедуры

&НаКлиенте
Процедура ИсторияЗагрузкиИВыгрузки(Команда)
	ОткрытьФорму("РегистрСведений.ИсторияРаботыСКлиентомБанка.ФормаСписка");
КонецПроцедуры
