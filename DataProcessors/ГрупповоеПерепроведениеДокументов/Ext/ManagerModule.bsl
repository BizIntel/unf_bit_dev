#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ПерепроведениеДокументов(СтруктураПараметров, АдресХранилища) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", ?(СтруктураПараметров.НачалоПериода = Неопределено, '00010101', НачалоДня(СтруктураПараметров.НачалоПериода)));
	Если ЗначениеЗаполнено(СтруктураПараметров.КонецПериода) Тогда
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(СтруктураПараметров.КонецПериода));
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	
	СписокОшибок = Новый ТаблицаЗначений;
	СписокОшибок.Колонки.Добавить("Текст");
	СписокОшибок.Колонки.Добавить("Ссылка");
	
	ВозвращаемыеПараметры = Новый Структура("ПроведеноДокументов, НеУдалосьПровести", 0, 0);
	
	Запрос.Текст = ПолучитьТекстЗапросаПоПервичнымДокументам();
	
	// Устанавливаем отбор по организации
	ТекстУсловияПоОрганизации = ?(ЗначениеЗаполнено(СтруктураПараметров.Организация), "И Журнал.организация В (&Организация)", "");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &УсловиеОрганизации", ТекстУсловияПоОрганизации);
	
	// Устанавливаем отбор по периоду
	Если ЗначениеЗаполнено(СтруктураПараметров.КонецПериода) Тогда
		ТекстУсловияПериода = ?(ЗначениеЗаполнено(СтруктураПараметров.НачалоПериода), "И Журнал.Дата МЕЖДУ &НачалоПериода И &КонецПериода", " И Журнал.Дата <= &КонецПериода");
	ИначеЕсли ЗначениеЗаполнено(СтруктураПараметров.НачалоПериода) Тогда
		ТекстУсловияПериода = " И Журнал.Дата >= &НачалоПериода";
	Иначе
		ТекстУсловияПериода = "";
	КонецЕсли; 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &УсловиеПериода", ТекстУсловияПериода);
	Запрос.Текст = Запрос.Текст + "
		|УПОРЯДОЧИТЬ ПО
		|	Дата, Ссылка";
	
	ВсеДокументы = Запрос.Выполнить().Выгрузить();
	
	ИндексСтрокиНачалаДаты	= Неопределено;
	ТекущаяДатаПроведения	= Неопределено;
	ВсегоДокументов			= ВсеДокументы.Количество();
	
	Для Индекс = 0 ПО ВсегоДокументов - 1 Цикл
		
		СтрокаДокумента = ВсеДокументы[Индекс];
		
		ДокументОбъект = СтрокаДокумента.Ссылка.ПолучитьОбъект();
		
		Если ТекущаяДатаПроведения <> ДокументОбъект.Дата Тогда
			ИндексСтрокиНачалаДаты = Индекс;
			ТекущаяДатаПроведения  = ДокументОбъект.Дата;
		КонецЕсли;
		
		Попытка
			
			Если ДокументОбъект.ПроверитьЗаполнение() Тогда
				
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				ВозвращаемыеПараметры.ПроведеноДокументов = ВозвращаемыеПараметры.ПроведеноДокументов + 1;
				
			КонецЕсли;
			
		Исключение
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			
			ТекстСообщения = НСтр("ru = 'Документ %1 не проведен! %2 По причине: %3'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
						Строка(ДокументОбъект), Символы.ПС, ОписаниеОшибки());
						
			ДобавитьСообщениеобОшибке(СписокОшибок, ТекстСообщения, ДокументОбъект);
			
			ВозвращаемыеПараметры.НеУдалосьПровести = ВозвращаемыеПараметры.НеУдалосьПровести + 1;
			
			Если СтруктураПараметров.ОстанавливатьсяПоОшибке Тогда
				
				Прервать;
				
			КонецЕсли;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если СписокОшибок.Количество() > 0 Тогда
		
		ПоказатьОшибки(СписокОшибок);
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(ВозвращаемыеПараметры, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьСообщениеобОшибке(СписокОшибок, ТекстСообщения, ОбъектОшибки)

	СтрокаОшибки = СписокОшибок.Добавить();
	СтрокаОшибки.Текст  = ТекстСообщения;
	СтрокаОшибки.Ссылка = ОбъектОшибки;

КонецПроцедуры

Процедура ПоказатьОшибки(СписокОшибок)
	
	// Большое количество ошибок при работе в ВЕБ режиме приводит к ошибке платформы
	// по этой причине принято решение ограничить количество выводимых сообщений числом 50
	
	ЛимитВыводимыхСообщений = 50;
	
	Для Каждого СтрокаОшибки Из СписокОшибок Цикл
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрокаОшибки.Текст, 
			СтрокаОшибки.Ссылка,
			"Дата", 
			"Объект"
		);
		
		ЛимитВыводимыхСообщений = ЛимитВыводимыхСообщений - 1;
		
		Если ЛимитВыводимыхСообщений = 0 Тогда
			
			ТекстСообщения = НСтр("ru = 'При перепроведении выявлено %1 ошибок. 
			|Сообщения о первых 50 ошибках предоставлены к ознакомлению. 
			|Необходимо исправить указанные ошибки, после чего принять решение о повторном перепроведении документов.'");
			
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаОшибки, СписокОшибок.Количество());
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаПоПервичнымДокументам()

	ТекстЗапроса = "";
	
	Для Каждого МетаданныеДокумента Из Метаданные.Документы Цикл
		
		// У некоторых ролей нет прав на отдельные документы
		Если НЕ РольДоступна("ПолныеПрава") Тогда
			Если НЕ ПравоДоступа("Чтение", МетаданныеДокумента) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		//Отсекаем документы, которые не следует перепроводить
		Если МетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
			ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ") + " 
				|	Дата КАК Дата,
				|	""" + МетаданныеДокумента.Имя + """ КАК ИмяДокумента, 
				|	""" + МетаданныеДокумента.Синоним + """ КАК СинонимДокумента, 
				|	Журнал.Ссылка КАК Ссылка, 
				|	NULL,
				|	NULL,
				|	NULL,
				|	ЛОЖЬ КАК Выполнена,
				|	Журнал.Представление КАК Представление,
				|	ЛОЖЬ КАК БылаОшибка
				|ИЗ Документ." + МетаданныеДокумента.Имя + " КАК Журнал
				|ГДЕ Проведен 
				|	И &УсловиеПериода
				|" + ?(МетаданныеДокумента.Реквизиты.Найти("Организация") = Неопределено, "", "	И &УсловиеОрганизации
				|");
		КонецЕсли;
	
	КонецЦикла;

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли