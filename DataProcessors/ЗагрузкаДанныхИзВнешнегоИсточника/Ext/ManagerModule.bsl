#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ВывестиОтчетООшибках(ТабличныйДокументСообщения, Ошибки)
	
	ТабличныйДокументСообщения.Очистить();
	
	Макет					= ПолучитьМакет("Ошибки");
	ОбластьШапка			= Макет.ПолучитьОбласть("Шапка");
	ОбластьОшибкаОбычная	= Макет.ПолучитьОбласть("ОшибкаОбычная");
	ОбластьОшибкаКритичная	= Макет.ПолучитьОбласть("ОшибкаКритичная");
	
	ТабличныйДокументСообщения.Вывести(ОбластьШапка);
	Для каждого Ошибка Из Ошибки Цикл
		
		ОбластьМакета = ?(Ошибка.Критичная, ОбластьОшибкаКритичная, ОбластьОшибкаОбычная);
		ОбластьМакета.Параметры.Заполнить(Ошибка);
		
		ТабличныйДокументСообщения.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЭтоПустойТабличныйДокумент(ТабличныйДокумент, ЗапретитьПереходДалее)
	
	ЗапретитьПереходДалее = (ТабличныйДокумент.ВысотаТаблицы < 1);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеТабличногоДокументаИЗаполнитьТаблицуФормы(ТабличныйДокумент, ТаблицаСопоставленияДанных, ГруппыИПоля, Ошибки)
	
	ТаблицаСопоставленияДанных.Очистить();
	
	ПостФикс = ЗагрузкаДанныхИзВнешнегоИсточника.ПостФиксИменПолейВходящихДанных();
	КопияГруппыИПоля = ГруппыИПоля.Скопировать();
	
	КоличествоПустыхСтрок = 0;
	Для НомерСтроки = 2 По ТабличныйДокумент.ВысотаТаблицы Цикл 
		
		ВСтрокеБылиЗначения = Ложь;
		
		НоваяСтрокаДанных = ТаблицаСопоставленияДанных.Добавить();
		Для каждого ГруппаИлиПоле Из КопияГруппыИПоля.Строки Цикл
			
			Если ПустаяСтрока(ГруппаИлиПоле.ИмяГруппыПолей) Тогда
				
				Если ГруппаИлиПоле.ИмяПоля = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяПоляДобавленияДополнительныхРеквизитов() Тогда
				
					Для каждого ПолеИзГруппыПолейДополнительныхРеквизитов Из ГруппаИлиПоле.Строки Цикл 
						
						Если ПолеИзГруппыПолейДополнительныхРеквизитов.НомерКолонки = 0 Тогда
							
							Продолжить;
							
						КонецЕсли;
						
						ЗначениеЯчейки = ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, ПолеИзГруппыПолейДополнительныхРеквизитов.НомерКолонки).ТекущаяОбласть.Текст;
						НоваяСтрокаДанных[ПолеИзГруппыПолейДополнительныхРеквизитов.ИмяПоля + ПостФикс] = ЗначениеЯчейки;
						
					КонецЦикла;
					
					Продолжить;
					
				ИначеЕсли ГруппаИлиПоле.НомерКолонки = 0 Тогда
					
					Продолжить;
					
				КонецЕсли;
				
				ЗначениеЯчейки = ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, ГруппаИлиПоле.НомерКолонки).ТекущаяОбласть.Текст;
				НоваяСтрокаДанных[ГруппаИлиПоле.ИмяПоля + ПостФикс] = ЗначениеЯчейки;
				
				ВСтрокеБылиЗначения = (ВСтрокеБылиЗначения ИЛИ НЕ ПустаяСтрока(ЗначениеЯчейки));
				
				Если ГруппаИлиПоле.НомерЦветаОригинал = 1
					И НЕ ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
					
					ТекстОшибки = Нстр("ru = 'В колонке {%1} присутствуют незаполенные ячейки. При обработке данные строки будут пропущены.'");
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ГруппаИлиПоле.ПредставлениеПоля);
					МестоВозникновения = Нстр("ru = 'Строка № %1.'");
					МестоВозникновения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(МестоВозникновения, НомерСтроки);
					
					ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьОшибку(Ошибки, ТекстОшибки, Ложь, МестоВозникновения);
					
				КонецЕсли;
				
			Иначе
				
				Для каждого ПолеИзГруппыПолей Из ГруппаИлиПоле.Строки Цикл 
					
					Если ПолеИзГруппыПолей.НомерКолонки = 0 Тогда
						
						Продолжить;
						
					КонецЕсли;
					
					ЗначениеЯчейки = ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, ПолеИзГруппыПолей.НомерКолонки).ТекущаяОбласть.Текст;
					НоваяСтрокаДанных[ПолеИзГруппыПолей.ИмяПоля] = ЗначениеЯчейки;
					
					ВСтрокеБылиЗначения = (ВСтрокеБылиЗначения ИЛИ НЕ ПустаяСтрока(ЗначениеЯчейки));
					
					Если ПолеИзГруппыПолей.НомерЦветаОригинал = 1 
						И НЕ ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							
							ТекстОшибки = Нстр("ru = 'В колонке {%1} присутствуют незаполенные ячейки. При обработке данные строки будут пропущены.'");
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ПолеИзГруппыПолей.ПредставлениеПоля);
							МестоВозникновения = Нстр("ru = 'Строка № %1.'");
							МестоВозникновения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(МестоВозникновения, НомерСтроки);
							
							ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьОшибку(Ошибки, ТекстОшибки, Ложь, МестоВозникновения);
							
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ВСтрокеБылиЗначения Тогда
			
			КоличествоПустыхСтрок = КоличествоПустыхСтрок + 1;
			
		КонецЕсли;
		
		// В версии 8.3.10 для решения такой проблемы сделан метод ПолучитьРазмерОбластиДанныхПоВертикали, а пока так...
		Если КоличествоПустыхСтрок > ЗагрузкаДанныхИзВнешнегоИсточника.МаксимальноеКоличествоПустыхСтрок() Тогда
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЕстьНезаполненныеОбязательныеКолонки(ДеревоПолей, Ошибки)
	
	Для каждого ПолеИлиГруппаПолей Из ДеревоПолей.Строки Цикл
		
		Если НЕ ПустаяСтрока(ПолеИлиГруппаПолей.ИмяГруппыПолей) Тогда
			
			ИменаНевыбранныхКолонок = "";
			НевыбраноКолонокВГруппе = 0;
			
			Для каждого ПолеИзГруппыПолей Из ПолеИлиГруппаПолей.Строки Цикл 
				
				Если ПолеИзГруппыПолей.НомерЦветаОригинал = 1 
					И ПолеИзГруппыПолей.НомерКолонки = 0 Тогда
					
					ТекстОшибки = Нстр("ru = 'Не выбрана обязательная колонка {%1}'");
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ПолеИзГруппыПолей.ПредставлениеПоля);
					МестоВозникновения = Нстр("ru = 'Настройка заголовков.'");
					
					ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьОшибку(Ошибки, ТекстОшибки, Истина, МестоВозникновения);
					
				ИначеЕсли ПолеИлиГруппаПолей.НомерЦветаОригинал = 1 Тогда // Если группа обязательна к заполнению, а неодно поле не выбрано
					
					НевыбраноКолонокВГруппе = НевыбраноКолонокВГруппе + 1;
					ИменаНевыбранныхКолонок = ИменаНевыбранныхКолонок + ?(ПустаяСтрока(ИменаНевыбранныхКолонок), "", ", ") + ПолеИзГруппыПолей.ПредставлениеПоля;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ПолеИлиГруппаПолей.Строки.Количество() = НевыбраноКолонокВГруппе Тогда
				
				ТекстОшибки = Нстр("ru = 'Для группы полей {%1}, состоящей из набора колонок {%2}, в загружаемых данных необходимо выбрать минимум одну колонку.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ПолеИлиГруппаПолей.ИмяГруппыПолей, ИменаНевыбранныхКолонок);
				МестоВозникновения = Нстр("ru = 'Настройка заголовков.'");
				
				ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьОшибку(Ошибки, ТекстОшибки, Истина, МестоВозникновения);
				
			КонецЕсли;
			
		ИначеЕсли ПолеИлиГруппаПолей.НомерЦветаОригинал = 1 
			И ПолеИлиГруппаПолей.НомерКолонки = 0 Тогда
			
			ТекстОшибки = Нстр("ru = 'Не выбрана обязательная колонка {%1}'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ПолеИлиГруппаПолей.ПредставлениеПоля);
			МестоВозникновения = Нстр("ru = 'Настройка заголовков.'");
			
			ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьОшибку(Ошибки, ТекстОшибки, Истина, МестоВозникновения);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПредварительнаяОбработкаДанных(ТабличныйДокумент, ТаблицаСопоставленияДанных, НастройкиЗагрузкиДанных, ТабличныйДокументСообщения, ПропуститьСтраницу, ЗапретитьПереходДалее) Экспорт
	Перем Ошибки;
	
	ЗагрузкаДанныхИзВнешнегоИсточника.СоздатьТаблицуОписанияОшибок(Ошибки);
	
	ЭтоПустойТабличныйДокумент(ТабличныйДокумент, ЗапретитьПереходДалее);
	Если ЗапретитьПереходДалее Тогда
		
		ТекстОшибки = НСтр("ru = 'Незаполнены импортируемые данные...'");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьОшибку(Ошибки, ТекстОшибки);
		Возврат;
		
	КонецЕсли;
	
	ДеревоПолей = ПолучитьИзВременногоХранилища(НастройкиЗагрузкиДанных.АдресХраненияДереваПолей);
	ЕстьНезаполненныеОбязательныеКолонки(ДеревоПолей, Ошибки);
	Если Ошибки.Найти(Истина, "Критичная") = Неопределено Тогда
		
		ПроверитьЗаполнениеТабличногоДокументаИЗаполнитьТаблицуФормы(ТабличныйДокумент, ТаблицаСопоставленияДанных, ДеревоПолей, Ошибки);
		
	КонецЕсли;
	
	ЗагрузкаДанныхИзВнешнегоИсточника.СформироватьНастройкиОбновленияСвойств(ДеревоПолей, НастройкиЗагрузкиДанных);
	
	ПропуститьСтраницу = (Ошибки.Количество() < 1);
	Если НЕ ПропуститьСтраницу Тогда
		
		ЗапретитьПереходДалее = (Ошибки.Найти(Истина, "Критичная") <> Неопределено);
		ВывестиОтчетООшибках(ТабличныйДокументСообщения, Ошибки);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьКолонкиТаблицыСопоставлений(ЭтотОбъект, ТаблицаСопоставленияДанных, НастройкиЗагрузкиДанных) Экспорт
	Перем ГруппыИПоля;
	
	Если ТаблицаСопоставленияДанных.Выгрузить().Колонки.Количество() > 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если НЕ НастройкиЗагрузкиДанных.ЭтоЗагрузкаТабличнойЧасти Тогда
		
		МенеджерОбъект = Неопределено;
		ЗагрузкаДанныхИзВнешнегоИсточника.ПолучитьМенеджерПоИмениОбъектаЗаполнения(НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения, МенеджерОбъект);
		БлокируемыеРеквизиты = МенеджерОбъект.ПолучитьБлокируемыеРеквизитыОбъекта();
		
	КонецЕсли;
	
	ЗагрузкаДанныхИзВнешнегоИсточника.СоздатьИЗаполнитьДеревоГруппыИПолейПоИмениОбъекта(НастройкиЗагрузкиДанных, ГруппыИПоля);
	
	МассивРеквизитов= Новый Массив;
	ПутьРеквизита	= "ТаблицаСопоставленияДанных";
	ГруппаОбязательныхПолей = Неопределено;
	ГруппаНеобязательныхПолей = Неопределено;
	ГруппаСлужебныхПолей = Неопределено;
	Для Каждого ГруппаПолей Из ГруппыИПоля.Строки Цикл
		
		ЭтоПользовательскаяГруппаПолей = ЗагрузкаДанныхИзВнешнегоИсточника.ЭтоПользовательскаяГруппаПолей(ГруппаПолей.ИмяГруппыПолей);
		Если ЭтоПользовательскаяГруппаПолей Тогда
			
			ДобавитьРеквизитыИзПользовательскойГруппыПолей(ЭтотОбъект, ГруппаПолей, ПутьРеквизита, БлокируемыеРеквизиты);
			
		ИначеЕсли ГруппаПолей.ИмяГруппыПолей = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяГруппыПолейОбязательныхКЗаполнению() Тогда
			
			ГруппаОбязательныхПолей = ГруппаПолей;
			
		ИначеЕсли ГруппаПолей.ИмяГруппыПолей = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяГруппыПолейНеобязательныхКЗаполнению() Тогда
			
			ГруппаНеобязательныхПолей = ГруппаПолей;
			
		ИначеЕсли ГруппаПолей.ИмяГруппыПолей = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяГруппыПолейСлужебные() Тогда
			
			ГруппаСлужебныхПолей = ГруппаПолей;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДобавитьОбязательныеРеквизиты(ЭтотОбъект, ГруппаОбязательныхПолей, ПутьРеквизита, БлокируемыеРеквизиты);
	ДобавитьНеобязательныеРеквизиты(ЭтотОбъект, ГруппаНеобязательныхПолей, ПутьРеквизита, БлокируемыеРеквизиты);
	ДобавитьСлужебныеРеквизиты(ЭтотОбъект, ГруппаСлужебныхПолей, ПутьРеквизита);
	
	ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПослеДобавленияЭлементовТаблицыСопоставлений(ЭтотОбъект, НастройкиЗагрузкиДанных);
	ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ДобавитьУсловноеОформлениеТаблицыСопоставлений(ЭтотОбъект, ПутьРеквизита, НастройкиЗагрузкиДанных);
	
КонецПроцедуры

//:::Построение дерева полей

Процедура СоздатьШаблонДереваПолейЗагрузкиДоступныхПользователю(ДеревоПолей)
	
	ОписаниеТиповСтрока100 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(100));
	ОписаниеТиповСтрока256 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(256));
	ОписаниеТиповЧисло1_0 = Новый ОписаниеТипов("Число", , , , Новый КвалификаторыЧисла(1, 0, ДопустимыйЗнак.Неотрицательный));
	ОписаниеТиповЧисло2_0 = Новый ОписаниеТипов("Число", , , , Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный));
	ОписаниеТиповОТ = Новый ОписаниеТипов("ОписаниеТипов");
	
	ДеревоПолей = Новый ДеревоЗначений;
	
	ДеревоПолей.Колонки.Добавить("ИмяГруппыПолей",			ОписаниеТиповСтрока100,,);
	ДеревоПолей.Колонки.Добавить("ТипПолучаемогоЗначения",	ОписаниеТиповОТ,,);
	ДеревоПолей.Колонки.Добавить("ИмяПоля",					ОписаниеТиповСтрока100,,);
	ДеревоПолей.Колонки.Добавить("ПредставлениеПоля",		ОписаниеТиповСтрока256,,);
	ДеревоПолей.Колонки.Добавить("НомерКолонки",			ОписаниеТиповЧисло2_0,,);
	ДеревоПолей.Колонки.Добавить("НомерЦвета",				ОписаниеТиповЧисло1_0,,);
	ДеревоПолей.Колонки.Добавить("НомерЦветаОригинал",		ОписаниеТиповЧисло1_0,,);
	
КонецПроцедуры

Процедура ДобавитьПоля(РодительПолей, ГруппаПолей, НомерЦвета, ЭтоПользовательскаяГруппаПолей = Ложь)
	
	Для каждого Поле Из ГруппаПолей.Строки Цикл
		
		Если Поле.Видимость Тогда
			
			НоваяСтрока 						= РодительПолей.Строки.Добавить();
			НоваяСтрока.ИмяГруппыПолей			= Поле.ИмяГруппыПолей;
			НоваяСтрока.ТипПолучаемогоЗначения	= Поле.ТипПолучаемогоЗначения;
			НоваяСтрока.ИмяПоля					= Поле.ИмяПоля;
			НоваяСтрока.ПредставлениеПоля		= Поле.ПредставлениеПоля;
			НоваяСтрока.НомерКолонки			= Поле.НомерКолонки;
			
			Если НоваяСтрока.НомерКолонки <> 0 Тогда
				
				НоваяСтрока.НомерЦвета			= 3;
				Если ЭтоПользовательскаяГруппаПолей Тогда
					
					РодительПолей.НомерЦвета	= 3;
					
				КонецЕсли;
				
			ИначеЕсли Поле.ДопРеквизитПризнак = Истина 
				И НомерЦвета <> 1 Тогда // Обязательные поля не перекращиваем
				
				НоваяСтрока.НомерЦвета			= 4;
				
			Иначе
				
				НоваяСтрока.НомерЦвета			= ?(Поле.ОбязательноеЗаполнение, 1, НомерЦвета);
				
			КонецЕсли;
			
			НоваяСтрока.НомерЦветаОригинал 		= НоваяСтрока.НомерЦвета;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьДеревоПолейЗагрузкиДоступныхПользователю(ДеревоПолей, НастройкиЗагрузкиДанных) Экспорт
	Перем ГруппыИПоля;
	
	СоздатьШаблонДереваПолейЗагрузкиДоступныхПользователю(ДеревоПолей);
	ЗагрузкаДанныхИзВнешнегоИсточника.СоздатьИЗаполнитьДеревоГруппыИПолейПоИмениОбъекта(НастройкиЗагрузкиДанных, ГруппыИПоля);
	
	НоваяСтрока = ДеревоПолей.Строки.Добавить();
	НоваяСтрока.ПредставлениеПоля	= "Не загружать";
	
	Для каждого ГруппаПолей Из ГруппыИПоля.Строки Цикл
		
		Если ГруппаПолей.ИмяГруппыПолей = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяГруппыПолейСлужебные() Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НомерЦвета						= 0;
		ЭтоПользовательскаяГруппаПолей	= ЗагрузкаДанныхИзВнешнегоИсточника.ЭтоПользовательскаяГруппаПолей(ГруппаПолей.ИмяГруппыПолей);
		Если ЭтоПользовательскаяГруппаПолей Тогда
			
			НомерЦвета = 2;
			
			НоваяСтрока 					= ДеревоПолей.Строки.Добавить();
			НоваяСтрока.ПредставлениеПоля	= ГруппаПолей.ИмяГруппыПолей;
			НоваяСтрока.ИмяГруппыПолей		= ГруппаПолей.ИмяГруппыПолей;
			НоваяСтрока.НомерЦвета 			= ?(ГруппаПолей.ОбязательноеЗаполнениеГруппы, 1, 0);
			ДобавитьПоля(НоваяСтрока, ГруппаПолей, НомерЦвета, ЭтоПользовательскаяГруппаПолей);
			Продолжить;
			
		ИначеЕсли ГруппаПолей.ИмяГруппыПолей = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяГруппыПолейОбязательныхКЗаполнению() Тогда
			
			НомерЦвета = 1;
			
		КонецЕсли;
		
		ДобавитьПоля(ДеревоПолей, ГруппаПолей, НомерЦвета);
		
	КонецЦикла;
	
КонецПроцедуры

//:::Работа с реквизитами и элементами форм помошника

Процедура ДобавитьРеквизитыИзПользовательскойГруппыПолей(ЭтотОбъект, ГруппаПолей, ПутьРеквизита, БлокируемыеРеквизиты = Неопределено)
	
	Элементы = ЭтотОбъект.Элементы;
	
	ГруппаПервогоУровня = Элементы.Добавить("Группа" + ГруппаПолей.ИмяГруппыПолей, Тип("ГруппаФормы"), Элементы.ТаблицаСопоставленияДанных);
	ГруппаПервогоУровня.Группировка = ГруппировкаКолонок.Вертикальная;
	ГруппаПервогоУровня.ОтображатьЗаголовок = Ложь;
	
	НовыйРеквизитГруппа = Новый РеквизитФормы(ГруппаПолей.ИмяГруппыПолей, ГруппаПолей.ТипПолучаемогоЗначения, ПутьРеквизита, ГруппаПолей.ИмяГруппыПолей);
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(НовыйРеквизитГруппа);
	ЭтотОбъект.ИзменитьРеквизиты(МассивРеквизитов);
	
	НовыйЭлемент 				= Элементы.Добавить(ГруппаПолей.ИмяГруппыПолей, Тип("ПолеФормы"), ГруппаПервогоУровня);
	НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным	= "ТаблицаСопоставленияДанных." + ГруппаПолей.ИмяГруппыПолей;
	НовыйЭлемент.Заголовок		= ГруппаПолей.ПредставлениеПоля;
	НовыйЭлемент.РежимРедактирования = РежимРедактированияКолонки.Вход;
	НовыйЭлемент.ОтметкаНезаполненного = ГруппаПолей.ОбязательноеЗаполнениеГруппы;
	НовыйЭлемент.АвтоОтметкаНезаполненного = ГруппаПолей.ОбязательноеЗаполнениеГруппы;
	НовыйЭлемент.КнопкаСоздания = Ложь;
	
	ГруппаВторогоУровня = Элементы.Добавить("ГруппаВходящая" + ГруппаПолей.ИмяГруппыПолей, Тип("ГруппаФормы"), ГруппаПервогоУровня);
	ГруппаВторогоУровня.Группировка = ГруппировкаКолонок.ВЯчейке;
	ГруппаВторогоУровня.ОтображатьЗаголовок = Ложь;
	
	Для каждого СтрокаГруппы Из ГруппаПолей.Строки Цикл
		
		МассивРеквизитов.Очистить();
		
		НовыйРеквизит = Новый РеквизитФормы(СтрокаГруппы.ИмяПоля, СтрокаГруппы.ТипВходящихДанных, ПутьРеквизита, ГруппаПолей.ПредставлениеПоля);
		МассивРеквизитов.Добавить(НовыйРеквизит);
		
		ЭтотОбъект.ИзменитьРеквизиты(МассивРеквизитов);
		
		НовыйЭлемент 				= Элементы.Добавить(СтрокаГруппы.ИмяПоля, Тип("ПолеФормы"), ГруппаВторогоУровня);
		НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным	= "ТаблицаСопоставленияДанных." + СтрокаГруппы.ИмяПоля;
		НовыйЭлемент.Заголовок		= СтрокаГруппы.ПредставлениеПоля;
		НовыйЭлемент.ТолькоПросмотр = Истина;
		НовыйЭлемент.Ширина 		= 4;
		НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьОбязательныеРеквизиты(ЭтотОбъект, ГруппаПолей, ПутьРеквизита, БлокируемыеРеквизиты = Неопределено)
	
	Элементы = ЭтотОбъект.Элементы;
	
	ГруппаПервогоУровня = Элементы.Добавить(ЗагрузкаДанныхИзВнешнегоИсточника.ИмяГруппыПолейОбязательныхКЗаполнению(), Тип("ГруппаФормы"), Элементы.ТаблицаСопоставленияДанных);
	ГруппаПервогоУровня.Группировка = ГруппировкаКолонок.Горизонтальная;
	ГруппаПервогоУровня.ОтображатьЗаголовок = Ложь;
	
	ПостФикс = ЗагрузкаДанныхИзВнешнегоИсточника.ПостФиксИменПолейВходящихДанных();
	
	МассивРеквизитов = Новый Массив;
	Для каждого СтрокаГруппы Из ГруппаПолей.Строки Цикл
		
		ГруппаВторогоУровня = Элементы.Добавить("Группа" + СтрокаГруппы.ИмяПоля, Тип("ГруппаФормы"), ГруппаПервогоУровня);
		ГруппаВторогоУровня.Группировка = ГруппировкаКолонок.Вертикальная;
		ГруппаВторогоУровня.ОтображатьЗаголовок = Ложь;
		
		МассивРеквизитов.Очистить();
		
		НовыйРеквизит = Новый РеквизитФормы(СтрокаГруппы.ИмяПоля, СтрокаГруппы.ТипПолучаемогоЗначения, ПутьРеквизита, ГруппаПолей.ПредставлениеПоля);
		МассивРеквизитов.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы(СтрокаГруппы.ИмяПоля + ПостФикс, СтрокаГруппы.ТипВходящихДанных, ПутьРеквизита, ГруппаПолей.ПредставлениеПоля);
		МассивРеквизитов.Добавить(НовыйРеквизит);
		
		ЭтотОбъект.ИзменитьРеквизиты(МассивРеквизитов);
		
		НовыйЭлемент 				= Элементы.Добавить(СтрокаГруппы.ИмяПоля, Тип("ПолеФормы"), ГруппаВторогоУровня);
		НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным	= "ТаблицаСопоставленияДанных." + СтрокаГруппы.ИмяПоля;
		НовыйЭлемент.Заголовок		= СтрокаГруппы.ПредставлениеПоля;
		НовыйЭлемент.ТолькоПросмотр = Ложь;
		НовыйЭлемент.ОтметкаНезаполненного = Истина;
		НовыйЭлемент.АвтоОтметкаНезаполненного = Истина;
		НовыйЭлемент.КнопкаСоздания = Ложь;
		
		Если БлокируемыеРеквизиты <> Неопределено
			И БлокируемыеРеквизиты.Найти(СтрокаГруппы.ИмяПоля) = Неопределено Тогда
			
			НовыйЭлемент.КартинкаШапки = БиблиотекаКартинок.ВосклицательныйЗнакСерый;
			
		КонецЕсли;
		
		НовыйЭлемент 				= Элементы.Добавить(СтрокаГруппы.ИмяПоля + ПостФикс, Тип("ПолеФормы"), ГруппаВторогоУровня);
		НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным	= "ТаблицаСопоставленияДанных." + СтрокаГруппы.ИмяПоля + ПостФикс;
		НовыйЭлемент.Заголовок		= " ";//СтрокаГруппы.ПредставлениеПоля + ПостФикс;
		НовыйЭлемент.ТолькоПросмотр = Истина;
		НовыйЭлемент.ОтметкаНезаполненного = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьНеобязательныеРеквизиты(ЭтотОбъект, ГруппаПолей, ПутьРеквизита, БлокируемыеРеквизиты = Неопределено)
	
	Элементы = ЭтотОбъект.Элементы;
	
	ГруппаПервогоУровня = Элементы.Добавить(ЗагрузкаДанныхИзВнешнегоИсточника.ИмяГруппыПолейНеобязательныхКЗаполнению(), Тип("ГруппаФормы"), Элементы.ТаблицаСопоставленияДанных);
	ГруппаПервогоУровня.Группировка = ГруппировкаКолонок.Горизонтальная;
	ГруппаПервогоУровня.ОтображатьЗаголовок = Ложь;
	
	ПостФикс = ЗагрузкаДанныхИзВнешнегоИсточника.ПостФиксИменПолейВходящихДанных();
	
	МассивРеквизитов = Новый Массив;
	Для каждого СтрокаГруппы Из ГруппаПолей.Строки Цикл
		
		Если СтрокаГруппы.ИмяПоля = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяПоляДобавленияДополнительныхРеквизитов() Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ГруппаВторогоУровня = Элементы.Добавить("Группа" + СтрокаГруппы.ИмяПоля, Тип("ГруппаФормы"), ГруппаПервогоУровня);
		ГруппаВторогоУровня.Группировка = ГруппировкаКолонок.Вертикальная;
		ГруппаВторогоУровня.ОтображатьЗаголовок = Ложь;
		
		МассивРеквизитов.Очистить();
		
		НовыйРеквизит = Новый РеквизитФормы(СтрокаГруппы.ИмяПоля, СтрокаГруппы.ТипПолучаемогоЗначения, ПутьРеквизита, ГруппаПолей.ПредставлениеПоля);
		МассивРеквизитов.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы(СтрокаГруппы.ИмяПоля + ПостФикс, СтрокаГруппы.ТипВходящихДанных, ПутьРеквизита, ГруппаПолей.ПредставлениеПоля);
		МассивРеквизитов.Добавить(НовыйРеквизит);
		
		ЭтотОбъект.ИзменитьРеквизиты(МассивРеквизитов);
		
		НовыйЭлемент 				= Элементы.Добавить(СтрокаГруппы.ИмяПоля, Тип("ПолеФормы"), ГруппаВторогоУровня);
		НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным	= "ТаблицаСопоставленияДанных." + СтрокаГруппы.ИмяПоля;
		НовыйЭлемент.Заголовок		= СтрокаГруппы.ПредставлениеПоля;
		НовыйЭлемент.ТолькоПросмотр = Ложь;
		НовыйЭлемент.КнопкаСоздания = Ложь;
		
		Если БлокируемыеРеквизиты <> Неопределено
			И БлокируемыеРеквизиты.Найти(СтрокаГруппы.ИмяПоля) <> Неопределено Тогда
			
			НовыйЭлемент.КартинкаШапки = БиблиотекаКартинок.ИнформацияПоНедоступнымПолям;
			
		КонецЕсли;
		
		НовыйЭлемент 				= Элементы.Добавить(СтрокаГруппы.ИмяПоля + ПостФикс, Тип("ПолеФормы"), ГруппаВторогоУровня);
		НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным	= "ТаблицаСопоставленияДанных." + СтрокаГруппы.ИмяПоля + ПостФикс;
		НовыйЭлемент.Заголовок		= " ";
		НовыйЭлемент.ТолькоПросмотр = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьДополнительныеРеквизиты(ЭтотОбъект, ВыбранныеДополнительныеРеквизиты) Экспорт
	
	Элементы = ЭтотОбъект.Элементы;
	ПостФикс = ЗагрузкаДанныхИзВнешнегоИсточника.ПостФиксИменПолейВходящихДанных();
	ПутьРеквизита = "ТаблицаСопоставленияДанных";
	ОписаниеТиповСтрока150 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(150));
	
	ГруппаПервогоУровня = Элементы.Найти(ЗагрузкаДанныхИзВнешнегоИсточника.ИмяГруппыПолейНеобязательныхКЗаполнению()); // Доп. реквизиты не являются обязательными
	
	МассивРеквизитов = Новый Массив;
	Для каждого СтрокаСоответствия Из ВыбранныеДополнительныеРеквизиты Цикл
		
		Если Элементы.Найти(СтрокаСоответствия.Значение) <> Неопределено Тогда
			
			Продолжить; // Добавлялся ранее
			
		КонецЕсли;
		
		ГруппаВторогоУровня = Элементы.Добавить("Группа" + СтрокаСоответствия.Значение, Тип("ГруппаФормы"), ГруппаПервогоУровня);
		ГруппаВторогоУровня.Группировка = ГруппировкаКолонок.Вертикальная;
		ГруппаВторогоУровня.ОтображатьЗаголовок = Ложь;
		ГруппаВторогоУровня.Ширина = 8;
		
		МассивРеквизитов.Очистить();
		
		НовыйРеквизит = Новый РеквизитФормы(СтрокаСоответствия.Значение, СтрокаСоответствия.Ключ.ТипЗначения, ПутьРеквизита, Строка(СтрокаСоответствия.Ключ.Наименование));
		МассивРеквизитов.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы(СтрокаСоответствия.Значение + ПостФикс, ОписаниеТиповСтрока150, ПутьРеквизита, Строка(СтрокаСоответствия.Ключ.Наименование));
		МассивРеквизитов.Добавить(НовыйРеквизит);
		
		ЭтотОбъект.ИзменитьРеквизиты(МассивРеквизитов);
		
		НовыйЭлемент 				= Элементы.Добавить(СтрокаСоответствия.Значение, Тип("ПолеФормы"), ГруппаВторогоУровня);
		НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным	= "ТаблицаСопоставленияДанных." + СтрокаСоответствия.Значение;
		НовыйЭлемент.Заголовок		= Строка(СтрокаСоответствия.Ключ.Наименование);
		НовыйЭлемент.ТолькоПросмотр = Ложь;
		НовыйЭлемент.КнопкаСоздания = Ложь;
		НовыйЭлемент.Ширина			= 8;
		
		НовыйЭлемент 				= Элементы.Добавить(СтрокаСоответствия.Значение + ПостФикс, Тип("ПолеФормы"), ГруппаВторогоУровня);
		НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным	= "ТаблицаСопоставленияДанных." + СтрокаСоответствия.Значение + ПостФикс;
		НовыйЭлемент.Заголовок		= " ";
		НовыйЭлемент.ТолькоПросмотр = Истина;
		НовыйЭлемент.Ширина			= 8;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьСлужебныеРеквизиты(ЭтотОбъект, ГруппаПолей, ПутьРеквизита)
	
	МассивРеквизитов = Новый Массив;
	Для каждого СтрокаГруппы Из ГруппаПолей.Строки Цикл
		
		НовыйРеквизит = Новый РеквизитФормы(СтрокаГруппы.ИмяПоля, СтрокаГруппы.ТипПолучаемогоЗначения, ПутьРеквизита, СтрокаГруппы.ИмяПоля);
		МассивРеквизитов.Добавить(НовыйРеквизит);
		
	КонецЦикла;
	
	ЭтотОбъект.ИзменитьРеквизиты(МассивРеквизитов);
	
КонецПроцедуры

#КонецЕсли