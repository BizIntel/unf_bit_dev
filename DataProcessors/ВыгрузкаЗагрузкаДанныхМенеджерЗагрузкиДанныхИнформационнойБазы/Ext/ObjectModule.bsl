#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ВнутреннееСостояние

Перем ТекущийКонтейнер;
Перем ТекущиеЗагружаемыеТипы;
Перем ТекущиеИсключаемыеТипы;
Перем ТекущиеОбработчики;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура Инициализировать(Контейнер, ЗагружаемыеТипы, ИсключаемыеТипы, Обработчики) Экспорт
	
	ТекущийКонтейнер = Контейнер;
	ТекущиеЗагружаемыеТипы = ЗагружаемыеТипы;
	ТекущиеЗагружаемыеТипы = СортироватьЗагружаемыеТипы(ТекущиеЗагружаемыеТипы);
	ТекущиеИсключаемыеТипы = ИсключаемыеТипы;
	ТекущиеОбработчики = Обработчики;
	
КонецПроцедуры

Процедура ЗагрузитьДанные() Экспорт
	
	ВыполнитьЗаменуСсылок();
	ВыполнитьЗагрузкуДанных();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Типы сортируются по убыванию приоритета, сериализаторы выбирают их из массива с конца.
//
// Параметры:
//	ЗагружаемыеТипы - Массив - массив метаданных.
//
// Возвращаемое значение:
//	Массив - отсортированный массив метаданных по приоритету.
//
Функция СортироватьЗагружаемыеТипы(Знач ЗагружаемыеТипы)
	
	Сортировка = Новый ТаблицаЗначений();
	Сортировка.Колонки.Добавить("ОбъектМетаданных");
	Сортировка.Колонки.Добавить("Приоритет", Новый ОписаниеТипов("Число"));
	
	Для каждого ОбъектМетаданных Из ЗагружаемыеТипы Цикл
		
		Строка = Сортировка.Добавить();
		Строка.ОбъектМетаданных = ОбъектМетаданных;
		
		Если ОбщегоНазначенияБТС.ЭтоКонстанта(ОбъектМетаданных) Тогда
			
			Строка.Приоритет = 0;
			
		ИначеЕсли ОбщегоНазначенияБТС.ЭтоСсылочныеДанные(ОбъектМетаданных) Тогда
			
			Если ОбщегоНазначенияБТС.ЭтоПланВидовХарактеристик(ОбъектМетаданных) Тогда
				
				Строка.Приоритет = 1;
				
			ИначеЕсли ОбщегоНазначенияБТС.ЭтоПланСчетов(ОбъектМетаданных) Тогда
				
				Строка.Приоритет = 2;
				
			ИначеЕсли ОбщегоНазначенияБТС.ЭтоПланВидовРасчета(ОбъектМетаданных) Тогда
				
				Строка.Приоритет = 3;
				
			ИначеЕсли ОбщегоНазначенияБТС.ЭтоСправочник(ОбъектМетаданных) Тогда
				
				Строка.Приоритет = 4;
				
			Иначе
				
				Строка.Приоритет = 5;
				
			КонецЕсли;
				
		ИначеЕсли ОбщегоНазначенияБТС.ЭтоНаборЗаписей(ОбъектМетаданных) Тогда
			
			Строка.Приоритет = 6;
			
		ИначеЕсли Метаданные.РегистрыРасчета.Содержит(ОбъектМетаданных.Родитель()) Тогда // Перерасчеты
			
			Строка.Приоритет = 7;
			
		ИначеЕсли Метаданные.Последовательности.Содержит(ОбъектМетаданных) Тогда
			
			Строка.Приоритет = 8;
			
		Иначе
			
			ШаблонТекста = НСтр("ru = 'Выгрузка объекта метаданных не поддерживается %1'");
			ТекстСообщения = СтрШаблон(ШаблонТекста, ОбъектМетаданных.ПолноеИмя());
			ВызватьИсключение(ТекстСообщения);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Сортировка.Сортировать("Приоритет");
	
	Возврат Сортировка.ВыгрузитьКолонку("ОбъектМетаданных");
	
КонецФункции

Процедура ВыполнитьЗаменуСсылок()
	
	ПотокЗаменыСсылок = Обработки.ВыгрузкаЗагрузкаДанныхПотокЗаменыСсылок.Создать();
	ПотокЗаменыСсылок.Инициализировать(ТекущийКонтейнер, ТекущиеОбработчики);
	
	МенеджерПересозданияСсылок = Обработки.ВыгрузкаЗагрузкаДанныхМенеджерПересозданияСсылок.Создать();
	МенеджерПересозданияСсылок.Инициализировать(ТекущийКонтейнер, ПотокЗаменыСсылок);
	МенеджерПересозданияСсылок.ВыполнитьПересозданиеСсылок();
	
	МенеджерСопоставленияСсылок = Обработки.ВыгрузкаЗагрузкаДанныхМенеджерСопоставленияСсылок.Создать();
	МенеджерСопоставленияСсылок.Инициализировать(ТекущийКонтейнер, ПотокЗаменыСсылок, ТекущиеОбработчики);
	МенеджерСопоставленияСсылок.ВыполнитьСопоставлениеСсылок();
	
	ПотокЗаменыСсылок.Закрыть();
	
КонецПроцедуры

Процедура ВыполнитьЗагрузкуДанных()
	
	Для Каждого ОбъектМетаданных Из ТекущиеЗагружаемыеТипы Цикл
		
		Если ТекущиеИсключаемыеТипы.Найти(ОбъектМетаданных) = Неопределено Тогда
			
			Отказ = Ложь;
			ТекущиеОбработчики.ПередЗагрузкойТипа(ТекущийКонтейнер, ОбъектМетаданных, Отказ);
			
			Если Не Отказ Тогда
				ЗагрузитьДанныеОбъектаИнформационнойБазы(ОбъектМетаданных);
			КонецЕсли;
			
			ТекущиеОбработчики.ПослеЗагрузкиТипа(ТекущийКонтейнер, ОбъектМетаданных);
			
		Иначе
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'ВыгрузкаЗагрузкаДанных.ЗагрузкаОбъектаПропущена'", Метаданные.ОсновнойЯзык.КодЯзыка),
				УровеньЖурналаРегистрации.Информация,
				ОбъектМетаданных,
				,
				СтрШаблон(НСтр("ru = 'Загрузка данных объекта метаданных %1 пропущена, т.к. он включен в
                          |список объектов метаданных, исключаемых из выгрузки и загрузки данных'", Метаданные.ОсновнойЯзык.КодЯзыка),
					ОбъектМетаданных.ПолноеИмя()));
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Загружает все необходимые данные для объекта информационной базы.
//
// Параметры:
//	Контейнер - ОбработкаОбъект.ВыгрузкаЗагрузкаДанныхМенеджерКонтейнера - менеджер
//		контейнера, используемый в процессе выгрузи данных. Подробнее см. комментарий
//		к программному интерфейсу обработки ВыгрузкаЗагрузкаДанныхМенеджерКонтейнера.
//	ОбъектМетаданных - загружаемый объект метаданных.
//	Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления общего модуля ОбновлениеИнформационнойБазы.
//
Процедура ЗагрузитьДанныеОбъектаИнформационнойБазы(Знач ОбъектМетаданных)
	
	ИмяФайла = ТекущийКонтейнер.ПолучитьФайлИзКаталога(ВыгрузкаЗагрузкаДанныхСлужебный.InfobaseData(), ОбъектМетаданных.ПолноеИмя());
	Если ИмяФайла = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПотокЧтения = Обработки.ВыгрузкаЗагрузкаДанныхПотокЧтенияДанныхИнформационнойБазы.Создать();
	ПотокЧтения.ОткрытьФайл(ИмяФайла);
	
	Пока ПотокЧтения.ПрочитатьОбъектДанныхИнформационнойБазы() Цикл
		
		Объект = ПотокЧтения.ТекущийОбъект();
		Артефакты = ПотокЧтения.АртефактыТекущегоОбъекта();
		
		ЗаписатьОбъектВИнформационнуюБазу(Объект, Артефакты);
		
	КонецЦикла;
	
КонецПроцедуры

// Записывает объект в информационную базу.
//
// Параметры:
//	Контейнер - ОбработкаОбъект.ВыгрузкаЗагрузкаДанныхМенеджерКонтейнера - менеджер
//		контейнера, используемый в процессе выгрузи данных. Подробнее см. комментарий
//		к программному интерфейсу обработки ВыгрузкаЗагрузкаДанныхМенеджерКонтейнера.
//	Объект - загружаемый объект метаданных.
//	АртефактыОбъекта - Массив - массив объектов XDTO.
//	Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗаписатьОбъектВИнформационнуюБазу(Объект, АртефактыОбъекта)
	
	Отказ = Ложь;
	ТекущиеОбработчики.ПередЗагрузкойОбъекта(ТекущийКонтейнер, Объект, АртефактыОбъекта, Отказ);
	
	Если Не Отказ Тогда
		
		Если ОбщегоНазначенияБТС.ЭтоКонстанта(Объект.Метаданные()) Тогда
			
			Если Не ЗначениеЗаполнено(Объект.Значение) Тогда
				// Поскольку константы предварительно очищались - повторная перезапись пустых
				// значений не требуется.
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
		
		Если ОбщегоНазначенияБТС.ЭтоНезависимыйНаборЗаписей(Объект.Метаданные()) Тогда
			
			// Т.к. независимые наборы записей выгружаются курсорными запросами - запись
			// выполняется без замещения.
			Объект.Записать(Ложь);
			
		Иначе
			
			Объект.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущиеОбработчики.ПослеЗагрузкиОбъекта(ТекущийКонтейнер, Объект, АртефактыОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
