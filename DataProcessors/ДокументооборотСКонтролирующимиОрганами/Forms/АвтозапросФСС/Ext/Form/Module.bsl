&НаКлиенте
Перем МаксСекунд, ЧислоСекунд, ЧислоПопыток, ПовторныйЗапрос, КонтекстЭДОКлиент, ВнутриОповещения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОтчетСсылка = ОтправкаОбъект.ОтчетСсылка;
	ТипЗнчСсылкаНаОтчет = ТипЗнч(ОтчетСсылка);
	ЭтоРеестрСведений = ДокументооборотСФССКлиентСервер.ЭтоРеестрСведенийНаВыплатуПособийФСС(ОтчетСсылка);
	
	Если ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
		ОтчетПредставление = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(ОтчетСсылка);
	ИначеЕсли ЭтоРеестрСведений Тогда
		ОтчетПредставление = Строка(ОтчетСсылка);
	ИначеЕсли ТипЗнчСсылкаНаОтчет = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
		// электронное представление
		ОтчетПредставление = ОтчетСсылка.Наименование;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Обновление статуса отправки в форме Управления обменом
	ПараметрыОповещения = Новый Структура(); 
	ПараметрыОповещения.Вставить("Ссылка", ОтправкаОбъект.ОтчетСсылка);
	ПараметрыОповещения.Вставить("Организация", ОтправкаОбъект.Организация);
	Оповестить("Запись_ОтправкиФСС", ПараметрыОповещения, ОтправкаОбъект.Ссылка);
	
	// Обновление статуса отправки на форме отправляемого отчета
	Если ЭтаФорма.ВладелецФормы <> Неопределено 
		И ЭтаФорма.ВладелецФормы.ИмяФормы <> "ОбщаяФорма.РегламентированнаяОтчетность" Тогда
		РегламентированнаяОтчетностьКлиент.ОбновитьПанельСостоянияОтправкиВРегламентированномОтчете(ЭтаФорма.ВладелецФормы , "ФСС");
	КонецЕсли;
	
	ПовторныйЗапрос = Ложь;
	ЧислоПопыток = 0;
	МаксСекунд = 60;
	ЧислоСекунд = МаксСекунд;
	ВнутриОповещения = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтчетПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, ОтправкаОбъект.ОтчетСсылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	ОбновитьПанельЗапроса();
	ПодключитьОбработчикОжидания("ОжиданиеЗапроса", 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПанельЗапроса()
	
	Если ЧислоПопыток = 3 Тогда
		НадписьОсталосьСекунд = НСтр("ru = 'Результатов отправки отчета получить не удалось. "
			+ "Возможно, сервер перегружен. Попробуйте через некоторое время использовать в отчете кнопку ""Обновить"".'");
	Иначе
		Если НЕ ПовторныйЗапрос Тогда
			НадписьОсталосьСекунд = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Отчет отправлен. " +
				"Результаты отправки будут получены через некоторое время (%1 с)'"), Строка(ЧислоСекунд));
		Иначе
			НадписьОсталосьСекунд = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Результатов отправки отчета получить не удалось. " +
				"Через некоторое время будет предпринята еще одна попытка (%1 с)'"), Строка(ЧислоСекунд));
		КонецЕсли;
	КонецЕсли;
	
	Индикатор = МаксСекунд - ЧислоСекунд;
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияПослеОбновленияРезультата()
	
	Если ОтправкаОбъект.СтатусОтправки = ПредопределенноеЗначение("Перечисление.СтатусыОтправки.Отправлен") Тогда
		ЧислоСекунд = МаксСекунд;
		ЧислоПопыток = ЧислоПопыток + 1;
		Если ЧислоПопыток = 3 Тогда
			ОтключитьОбработчикОжидания("ОжиданиеЗапроса");
			Активизировать();
			ОповеститьОЗавершенииАвтообмена();
		Иначе
			ПовторныйЗапрос = Истина;	
		КонецЕсли;
		
		ОбновитьПанельЗапроса();
	Иначе
		ОтключитьОбработчикОжидания("ОжиданиеЗапроса");
		Активизировать();
		ОповеститьОЗавершенииАвтообмена();
		КонтекстЭДОКлиент.ПоказатьПротоколОбработкиПоСсылкеИсточникаДляФСС(ОтправкаОбъект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормыНаСервере()
	Прочитать();
	ОбновитьФорму();
КонецПроцедуры

&НаСервере
Процедура ОбновитьФорму()
	
	СтатусОтправки = ОтправкаОбъект.СтатусОтправки;
	
	Если СтатусОтправки <> ПредопределенноеЗначение("Перечисление.СтатусыОтправки.Отправлен") Тогда
		//
		ЦветШрифта = Новый Цвет(255, 0, 0);
		ЗаголовокРезультата = НСтр("ru = 'Ошибка механизма отправки.'");
		
		Если СтатусОтправки = ПредопределенноеЗначение("Перечисление.СтатусыОтправки.НеПринят") Тогда
			ЦветШрифта = Новый Цвет(255, 0, 0);
			ЗаголовокРезультата = НСтр("ru = 'Отчет не принят: обнаружены ошибки.'");
		ИначеЕсли СтатусОтправки = ПредопределенноеЗначение("Перечисление.СтатусыОтправки.ПринятЕстьОшибки") Тогда
			ЦветШрифта = Новый Цвет(255, 153, 0);
			ЗаголовокРезультата = НСтр("ru = 'Отчет сдан: получена квитанция, обнаружены ошибки при логическом контроле.'");
		ИначеЕсли СтатусОтправки = ПредопределенноеЗначение("Перечисление.СтатусыОтправки.Сдан") Тогда
			ЦветШрифта = Новый Цвет(0, 179, 16);
			ЗаголовокРезультата = НСтр("ru = 'Отчет сдан: получена квитанция, ошибок не обнаружено.'");
		КонецЕсли;
		
		Элементы.НадписьОсталосьСекунд.ЦветТекста = ЦветШрифта;
		НадписьОсталосьСекунд = ЗаголовокРезультата;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОжиданиеЗапроса()
	
	Если ЧислоСекунд < 1 Тогда
		
		//обновим результат отправки
		Если ВнутриОповещения Тогда
			Возврат;
		КонецЕсли;
		ВнутриОповещения = Истина;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОжиданиеЗапросаЗавершение", ЭтотОбъект);
		
		КонтекстЭДОКлиент.ОбновитьРезультатОтправленногоОтчетаФСС(
			ЭтаФорма,
			ОписаниеОповещения);
		
	Иначе
		ЧислоСекунд = ЧислоСекунд - 1;
		ОбновитьПанельЗапроса();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОжиданиеЗапросаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	БылаПопыткаПолученияРезультатаОтСервераФСС = Результат.БылаПопыткаПолученияРезультатаОтСервераФСС;
	ПолученРезультатОтСервераФСС = Результат.ПолученРезультатОтСервераФСС;
	ВнутриОповещения = Ложь;
	
	Если БылаПопыткаПолученияРезультатаОтСервераФСС И ПолученРезультатОтСервераФСС Тогда
		// показать результат на форме Автозапрос ФСС
		ОбновитьДанныеФормыНаСервере();
		// Обновление статуса отправки в форме Управления обменом
		
		ПараметрыОповещения = Новый Структура(); 
		ПараметрыОповещения.Вставить("Ссылка", ОтправкаОбъект.ОтчетСсылка);
		ПараметрыОповещения.Вставить("Организация", ОтправкаОбъект.Организация);
		Оповестить("Редактирование_ОтправкиФСС", ПараметрыОповещения, ОтправкаОбъект.Ссылка);
		
		// Обновление статуса отправки на форме отправляемого отчета
		Если ЭтаФорма.ВладелецФормы <> Неопределено 
			И ЭтаФорма.ВладелецФормы.ИмяФормы <> "ОбщаяФорма.РегламентированнаяОтчетность" Тогда
			РегламентированнаяОтчетностьКлиент.ОбновитьПанельСостоянияОтправкиВРегламентированномОтчете(ЭтаФорма.ВладелецФормы , "ФСС");
		КонецЕсли;
		ДействияПослеОбновленияРезультата();
		
	Иначе
		ОтключитьОбработчикОжидания("ОжиданиеЗапроса");
		ОповеститьОЗавершенииАвтообмена();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершенииАвтообмена()
	
	ПараметрыОповещения = Новый Структура(); 
	ПараметрыОповещения.Вставить("Ссылка", ОтправкаОбъект.ОтчетСсылка);
	ПараметрыОповещения.Вставить("Организация", ОтправкаОбъект.Организация);
	Оповестить("Завершение автообмена с сервером ФСС", ПараметрыОповещения, ОтправкаОбъект.Ссылка);
	
КонецПроцедуры

#КонецОбласти