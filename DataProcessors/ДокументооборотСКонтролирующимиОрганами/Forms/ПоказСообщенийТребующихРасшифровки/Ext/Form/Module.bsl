&НаКлиенте
Перем КонтекстЭДОКлиент;

&НаКлиенте
Перем МассивСообщенийКлиент Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	
	// Проверяем 
	
	Если Параметры.Сообщения = Неопределено Тогда 
		Отказ = Истина;
		Возврат;
	Иначе
		МассивСообщений = Параметры.Сообщения;
	КонецЕсли;
	
	Если ТипЗнч(МассивСообщений) <> Тип("Массив") И МассивСообщений.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитыИНастройки(МассивСообщений, Отказ);
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Текст = НСтр("ru = 	'Имеются новые, требующие расшифровки сообщения. Их расшифровка может занять продолжительное время.
						|Расшифровать входящие сообщения? На время расшифровки ключ должен быть доступен.'");
	Элементы.Декорация1.Заголовок = Текст;
	
	ВключитьОбработчик = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ДокументооборотСКОКлиент.ПодключениеОбработчикаОжиданияАвтообмена(ВключитьОбработчик);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "ОбновлениеМассиваСообщений" Тогда 
		Возврат;
	КонецЕсли;
	
	Если Параметр = Неопределено ИЛИ ТипЗнч(Параметр) <> Тип("Массив") Тогда 
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ЗаполнитьРеквизитыИНастройки(Параметр, Отказ);
	Если Отказ Тогда 
		Закрыть();
	Иначе 
		Элементы.ТаблицаРасшифровкиПоОрганизациям.Обновить();
		ЭтаФорма.ОбновитьОтображениеДанных();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаРасшифровать(Команда)
	
	Если КонтекстЭДОКлиент = Неопределено Тогда 
		// инициализируем контекст формы - контейнера клиентских методов
		ОписаниеОповещения = Новый ОписаниеОповещения("КомандаРасшифроватьЗавершение", ЭтотОбъект);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	Иначе
		СохранитьНастройки();
		Расшифровать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНапомнитьПозже(Команда)
	
	ВключитьОбработчик = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНеПредлагатьВТекущемСеансе(Команда)
	
	ВключитьОбработчик = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитыИНастройки(МассивСообщений, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТранспортноеСообщение.ЦиклОбмена.Организация КАК Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортноеСообщение.Ссылка) КАК КоличествоСообщений
	|ИЗ
	|	Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
	|ГДЕ
	|	ТранспортноеСообщение.Ссылка В(&Ссылка)
	|	И НЕ ТранспортноеСообщение.УчетнаяЗапись.ОтключитьАвтообмен
	|	И НЕ ТранспортноеСообщение.ЦиклОбмена.Организация.УчетнаяЗаписьОбмена = &ПустаяУчетнаяЗапись
	|
	|СГРУППИРОВАТЬ ПО
	|	ТранспортноеСообщение.ЦиклОбмена.Организация";
	Запрос.УстановитьПараметр("Ссылка", МассивСообщений);
	Запрос.УстановитьПараметр("ПустаяУчетнаяЗапись", Справочники.УчетныеЗаписиДокументооборота.ПустаяСсылка());
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	сохрАвтообменСКО_СписокПомеченныхОрганизаций = ХранилищеОбщихНастроек.Загрузить("АвтообменСКО_СписокПомеченныхОрганизаций");
	Если сохрАвтообменСКО_СписокПомеченныхОрганизаций = Неопределено Тогда
		// если настойка до этого не сохранялась, пишем текущие значения
		сохрАвтообменСКО_СписокПомеченныхОрганизаций = Новый СписокЗначений;
		сохрАвтообменСКО_СписокПомеченныхОрганизаций.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("Организация"));
		сохрАвтообменСКО_СписокПомеченныхОрганизаций.ЗаполнитьПометки(Истина);
	КонецЕсли;
	
	ИспользуютсяСъемныеКлючевыеНосители = Истина;
	
	ТаблицаРасшифровкиПоОрганизациям.Очистить();
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		
		НоваяСтрока = ТаблицаРасшифровкиПоОрганизациям.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезультата);
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Всего сообщений к расшифровке: %1.'"),
			НоваяСтрока.КоличествоСообщений);
		
		НоваяСтрока.ТекстСообщения = ТекстСообщения;
		
		СтрокаСписка = сохрАвтообменСКО_СписокПомеченныхОрганизаций.НайтиПоЗначению(НоваяСтрока.Организация);
		Если НЕ СтрокаРезультата.Организация.УчетнаяЗаписьОбмена.ИспользуютсяСъемныеКлючевыеНосители Тогда 
			НоваяСтрока.Отметка = ?(СтрокаСписка = Неопределено, Ложь, СтрокаСписка.Пометка);
		Иначе 
			НоваяСтрока.Отметка = Ложь; // По данной УЗ вкл.использование ключа
		КонецЕсли;
		
		Если ИспользуютсяСъемныеКлючевыеНосители Тогда 
			ИспользуютсяСъемныеКлючевыеНосители = СтрокаРезультата.Организация.УчетнаяЗаписьОбмена.ИспользуютсяСъемныеКлючевыеНосители;
		КонецЕсли;
		
	КонецЦикла;
	
	// Ни по одной из УЗ не откл.использование ключа
	Если ИспользуютсяСъемныеКлючевыеНосители Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// По организациям сообщения есть, сохраняем параметр в реквизит
	Для Каждого ЭлементМассива Из МассивСообщений Цикл 
		НоваяСтрока = ТребующиеРасшифровки.Добавить();
		НоваяСтрока.ТранспортноеСообщение = ЭлементМассива;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	Если МассивСообщенийКлиент = Неопределено ИЛИ ТипЗнч(МассивСообщенийКлиент) <> Тип("Массив") Тогда 
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ЗаполнитьРеквизитыИНастройки(МассивСообщенийКлиент, Отказ);
	Если Отказ Тогда 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРасшифроватьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	Расшифровать();
	
КонецПроцедуры

&НаКлиенте
Процедура Расшифровать()

	ТипыСообщенийНеТребующихОбращенияККлючуДляРаспаковки = Новый Массив;
	ТипыСообщенийНеТребующихОбращенияККлючуДляРаспаковки.Добавить(ПредопределенноеЗначение("Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка"));
	ТипыСообщенийНеТребующихОбращенияККлючуДляРаспаковки.Добавить(ПредопределенноеЗначение("Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР"));
	ТипыСообщенийНеТребующихОбращенияККлючуДляРаспаковки.Добавить(ПредопределенноеЗначение("Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС"));
	
	МассивОрганизаций = Новый Массив;
	Для Каждого ЭлементТаблицы Из ТаблицаРасшифровкиПоОрганизациям Цикл 
		Если ЭлементТаблицы.Отметка Тогда 
			МассивОрганизаций.Добавить(ЭлементТаблицы.Организация);
		КонецЕсли;
	КонецЦикла;
	Если МассивОрганизаций.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбраны организации.'"));
		Возврат;
	КонецЕсли;
	
	СобратьСообщенияДляРасшифровки(МассивОрганизаций);
	
	ВсегоСообщений = ТребующиеРасшифровки.Количество();
	
	Если ВсегоСообщений = 0 Тогда
		//?
	КонецЕсли;
	
	// производим расшифровку
	КоличествоРасшифрованных = 0;
	КоличествоНеРасшифрованных = 0;
	Счетчик = 0;
	НомерОбъекта = 0;
	Организация = Неопределено;
	РасшифроватьТребующиеРасшифровку(Организация, ВсегоСообщений, КоличествоНеРасшифрованных, КоличествоРасшифрованных, НомерОбъекта, Счетчик, ТребующиеРасшифровки);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифроватьТребующиеРасшифровку(Организация, ВсегоСообщений, КоличествоНеРасшифрованных, КоличествоРасшифрованных, НомерОбъекта, Счетчик, ТребующиеРасшифровки)
	
	Если НомерОбъекта + 1 > ТребующиеРасшифровки.Количество() Тогда
		
		ВывестиВТаблицу(Организация, , КоличествоРасшифрованных, КоличествоНеРасшифрованных, Истина);
		
		Если КоличествоНеРасшифрованных = 0 Тогда 
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Расшифровано сообщений: %1 из %2.'"),
			Формат(КоличествоРасшифрованных, "ЧН=; ЧГ="), Формат(ВсегоСообщений, "ЧГ="));
			ТекстПояснения = НСтр("ru = 'Расшифровка завершена.'");
			
			РезультатРасшифровки = Новый Структура("Результат, ТекстСообщения, ТекстПояснения");
			РезультатРасшифровки.Результат			= Истина;
			РезультатРасшифровки.ТекстСообщения		= ТекстСообщения;
			РезультатРасшифровки.ТекстПояснения		= ТекстПояснения;
			
			ВключитьОбработчик = Истина;
			Закрыть(РезультатРасшифровки);
			
		Иначе
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Расшифровано сообщений: %1. Не расшифровано: %2.'"),
			Формат(КоличествоРасшифрованных, "ЧН=; ЧГ="), Формат(КоличествоНеРасшифрованных, "ЧГ="));
			
			ТекстПояснения = НСтр("ru = 'Расшифровка завершена с ошибками.'");
			Состояние(ТекстСообщения, , ТекстПояснения, БиблиотекаКартинок.КрасныйКрест);
			
		КонецЕсли;
		
	Иначе
		
		Сообщение = ТребующиеРасшифровки[НомерОбъекта];
		
		Организация = Сообщение.Организация;
		Счетчик = Счетчик + 1;
		ВывестиВТаблицу(Организация, Счетчик, , КоличествоНеРасшифрованных, Ложь);
		
		УчетнаяЗапись = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ЗначениеРеквизитаОбъекта(Организация, "УчетнаяЗаписьОбмена");
		
		ЭтоЭлектроннаяПодписьВМоделиСервиса = ЭлектроннаяПодписьВМоделиСервисаБРОВызовСервера.РеквизитыУчетнойЗаписи(УчетнаяЗапись).ЭлектроннаяПодписьВМоделиСервиса;
		
		ДополнительныеПараметры = Новый Структура("Организация, Сообщение, ВсегоСообщений, КоличествоНеРасшифрованных, КоличествоРасшифрованных, НомерОбъекта, Счетчик", Организация, Сообщение, ВсегоСообщений, КоличествоНеРасшифрованных, КоличествоРасшифрованных, НомерОбъекта, Счетчик);
		ОписаниеОповещения = Новый ОписаниеОповещения("РасшифроватьТребующиеРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		КонтекстЭДОКлиент.РасшифроватьТранспортноеСообщение(Сообщение.ТранспортноеСообщение, ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифроватьТребующиеРасшифровкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ВсегоСообщений = ДополнительныеПараметры.ВсегоСообщений;
	КоличествоНеРасшифрованных = ДополнительныеПараметры.КоличествоНеРасшифрованных;
	КоличествоРасшифрованных = ДополнительныеПараметры.КоличествоРасшифрованных;
	НомерОбъекта = ДополнительныеПараметры.НомерОбъекта;
	Счетчик = ДополнительныеПараметры.Счетчик;
	Сообщение = ДополнительныеПараметры.Сообщение;
	Организация = ДополнительныеПараметры.Организация;
	
	Если Результат Тогда 
		ПодтвердитьРасшифровку(Сообщение.ТранспортноеСообщение);
		КоличествоРасшифрованных = КоличествоРасшифрованных + 1;
	Иначе
		КоличествоНеРасшифрованных = КоличествоНеРасшифрованных + 1;
	КонецЕсли;
	
	РасшифроватьТребующиеРасшифровку(Организация, ВсегоСообщений, КоличествоНеРасшифрованных, КоличествоРасшифрованных, НомерОбъекта + 1, Счетчик, ТребующиеРасшифровки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиВТаблицу(Организация,
							Счетчик = Неопределено,
							КоличествоРасшифрованных = Неопределено, 
							КоличествоНеРасшифрованных = Неопределено, 
							РасшифровкаЗавершена = Ложь)
	
	Отбор = Новый Структура("Организация", Организация);
	РезультатОтбора = ТаблицаРасшифровкиПоОрганизациям.НайтиСтроки(Отбор);
	Если РезультатОтбора.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Элементы.ТаблицаРасшифровкиПоОрганизациям.ТекущаяСтрока = РезультатОтбора[0].ПолучитьИдентификатор();
	
	Если КоличествоНеРасшифрованных <> Неопределено Тогда 
		РезультатОтбора[0].КоличествоНеРасшифрованных = КоличествоНеРасшифрованных;
	КонецЕсли;
	
	Если КоличествоРасшифрованных <> Неопределено Тогда 
		РезультатОтбора[0].КоличествоРасшифрованных = КоличествоРасшифрованных;
	КонецЕсли;
	
	Если РасшифровкаЗавершена Тогда 
	
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1Расшифровано сообщений: %2 из %3.'"),
			?(КоличествоНеРасшифрованных = Неопределено ИЛИ КоличествоНеРасшифрованных = 0, 
				НСтр("ru = 'Расшифровка завершена. '"), НСтр("ru = 'Расшифровка завершена с ошибками. '")),
			КоличествоРасшифрованных,
			РезультатОтбора[0].КоличествоСообщений);
	
	Иначе 
	
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Расшифровывается сообщение: %1 из %2.%3'"),
			Счетчик,
			РезультатОтбора[0].КоличествоСообщений,
			?(КоличествоНеРасшифрованных = Неопределено ИЛИ КоличествоНеРасшифрованных = 0,
				"",
				НСтр("ru = ' Не расшифровано: '") + КоличествоНеРасшифрованных));
	
	КонецЕсли;
	
	РезультатОтбора[0].ТекстСообщения = ТекстСообщения;
	
	Элементы.ТаблицаРасшифровкиПоОрганизациям.Обновить();
	
	ЭтаФорма.ОбновитьОтображениеДанных();
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПодтвердитьРасшифровку(Сообщение)
	
	НаборЗаписей = РегистрыСведений.СвойстваТранспортныхСообщений.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.УчетнаяЗапись.Установить(Сообщение.УчетнаяЗапись);
	НаборЗаписей.Отбор.ТранспортноеСообщение.Установить(Сообщение);
	
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл 
		
		// Изменение данных полей записи.
		Запись.ТребуетРасшифровки = Ложь;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура СобратьСообщенияДляРасшифровки(МассивОрганизаций)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СвойстваТранспортныхСообщений.ТранспортноеСообщение.ЦиклОбмена.Организация КАК Организация,
	|	СвойстваТранспортныхСообщений.ТранспортноеСообщение КАК Ссылка
	|ИЗ
	|	РегистрСведений.СвойстваТранспортныхСообщений КАК СвойстваТранспортныхСообщений
	|ГДЕ
	|	СвойстваТранспортныхСообщений.ТранспортноеСообщение.ЦиклОбмена.Организация В(&Организации)
	|	И НЕ СвойстваТранспортныхСообщений.ТранспортноеСообщение.УчетнаяЗапись.ОтключитьАвтообмен
	|	И НЕ СвойстваТранспортныхСообщений.ТранспортноеСообщение.ЦиклОбмена.Организация.УчетнаяЗаписьОбмена = &ПустаяУчетнаяЗапись
	|	И СвойстваТранспортныхСообщений.ТребуетРасшифровки";
	Запрос.УстановитьПараметр("ПустаяУчетнаяЗапись", Справочники.УчетныеЗаписиДокументооборота.ПустаяСсылка());
	Запрос.УстановитьПараметр("Организации", МассивОрганизаций);
	
	ТребующиеРасшифровки.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НоваяСтрока = ТребующиеРасшифровки.Добавить();
		НоваяСтрока.Организация = Выборка.Организация;
		НоваяСтрока.ТранспортноеСообщение = Выборка.Ссылка;
		НоваяСтрока.ТипТранспортногоСообщения = Выборка.Ссылка.Тип;
	КонецЦикла;
	
	// уточнение количества собранных вх.сообщений
	ПромежуточнаяТаблица = ТребующиеРасшифровки.Выгрузить();
	ПромежуточнаяТаблица.Свернуть("Организация");
	Для Каждого СтрокаСвертки ИЗ ПромежуточнаяТаблица Цикл 
		Отбор = Новый Структура("Организация", СтрокаСвертки.Организация);
		РезультатОтбора = ТаблицаРасшифровкиПоОрганизациям.НайтиСтроки(Отбор);
		Если РезультатОтбора.Количество() > 0 Тогда 
			ОтборТребующихРасшифровки = ТребующиеРасшифровки.НайтиСтроки(Отбор);
			РезультатОтбора[0].КоличествоСообщений = ОтборТребующихРасшифровки.Количество();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	сохрАвтообменСКО_СписокПомеченныхОрганизаций = Новый СписокЗначений;
	
	Для Каждого СтрокаТаблицы Из ТаблицаРасшифровкиПоОрганизациям Цикл
		сохрАвтообменСКО_СписокПомеченныхОрганизаций.Добавить(СтрокаТаблицы.Организация, , СтрокаТаблицы.Отметка);
	КонецЦикла;
	
	ХранилищеОбщихНастроек.Сохранить("АвтообменСКО_СписокПомеченныхОрганизаций", , сохрАвтообменСКО_СписокПомеченныхОрганизаций);
	
КонецПроцедуры

#КонецОбласти

