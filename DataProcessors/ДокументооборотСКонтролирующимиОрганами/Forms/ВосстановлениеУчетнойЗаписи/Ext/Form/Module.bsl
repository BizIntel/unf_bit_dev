&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ТехнологияСервиса.РаботаВМоделиСервиса.ЭлектроннаяПодписьВМоделиСервиса") Тогда
		МодульЭлектроннаяПодписьВМоделиСервиса = ОбщегоНазначения.ОбщийМодуль("ЭлектроннаяПодписьВМоделиСервиса");
		ДоступнаЭлектроннаяПодписьВМоделиСервиса = МодульЭлектроннаяПодписьВМоделиСервиса.ИспользованиеВозможно();
	Иначе
		ДоступнаЭлектроннаяПодписьВМоделиСервиса = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		
			Модуль = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации");
			Организация = Модуль.ОрганизацияПоУмолчанию();
			
		Иначе
			Организация = ЭлектронныйДокументооборотСКонтролирующимиОрганамиПереопределяемый.ОсновнаяОрганизация();
		КонецЕсли;
	КонецЕсли;
	
	ОрганизацияПриИзмененииНаСервере();
		
	НастройкаПользователей();
		
	УправлениеФормой(ЭтаФорма);
	
	УправлениеКнопкамиНавигации(ЭтаФорма);
	
	ЗаполнитьДанныеСлужбыПоддержки(ЭтаФорма);
	
	Если ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ЭтоВариантИнтерфейсаТакси() Тогда
		Элементы.ДекорацияЭтапа1.Ширина = 59;
		Элементы.ДекорацияЭтапа2_5.Ширина = 59;
		Элементы.ДекорацияЭтапа3.Ширина = 59;
		Элементы.ДекорацияЭтапа4.Ширина = 59;
	Иначе
		Элементы.ДекорацияЭтапа1.Ширина = 73;
		Элементы.ДекорацияЭтапа2_5.Ширина = 73;
		Элементы.ДекорацияЭтапа3.Ширина = 73;
		Элементы.ДекорацияЭтапа4.Ширина = 73;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Организации" Тогда
		Если Источник = Организация Тогда 
			ОрганизацияПриИзмененииНаСервере();	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КлючЭлектроннойПодписиПриИзменении(Элемент)

	Если ЗначениеЗаполнено(КлючЭлектроннойПодписи) Тогда
		НайденныеСтроки = ТаблицаКлючей.НайтиСтроки(Новый Структура("ИдентификаторКлюча", КлючЭлектроннойПодписи));
		Если НайденныеСтроки.Количество() = 1 Тогда
			Спецоператор = НайденныеСтроки[0].СпецоператорСвязи;
			ТелефонМобильныйДляАвторизации = НайденныеСтроки[0].ТелефонМобильный;
			ИдентификаторАбонента = НайденныеСтроки[0].ИдентификаторАбонента;
			ИдентификаторДокументооборота = НайденныеСтроки[0].ИдентификаторДокументооборота; 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРеквизитОрганизации(Элемент)
	
	ИмяРеквизита = СтрЗаменить(Элемент.Имя, "Декорация", "");
	Если Не ЗначениеЗаполнено(ЭтаФорма[ИмяРеквизита]) Тогда
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентПереопределяемый.ОткрытьФормуОрганизацииНаРеквизите(Организация, ИмяРеквизита);		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КоманднаяПанельМастерНазад(Команда)
	ПоказатьПредыдущуюСтраницу();
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельМастерДалее(Команда)
	
	ТекущаяСтраница = Элементы.ОсновнаяПанель.ТекущаяСтраница;
	ОчиститьСообщения();
	МастерДалее = Истина;
	
	Если ТекущаяСтраница = Элементы.СтраницаВыборОрганизации Тогда
		
		МастерДалее = Истина;
		
		Если ЭтоЮридическоеЛицо Тогда
			
			// ИНН
			Если ПустаяСтрока(ИНН) Тогда 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Заполните ИНН'"), ,"ДекорацияИНН");
				МастерДалее = Ложь;
			ИначеЕсли НЕ КонтекстЭДОКлиент.ПроверитьЦифровойКодЗаданнойДлины(ИНН,10) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'ИНН должен состоять из 10 цифр'"), ,"ДекорацияИНН");
				МастерДалее = Ложь;
			КонецЕсли;
			
			// КПП
			Если ПустаяСтрока(КПП) Тогда 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Заполните КПП'"), ,"ДекорацияКПП");
				МастерДалее = Ложь;
			ИначеЕсли НЕ (КонтекстЭДОКлиент.ПроверитьКПП(КПП)) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'КПП должен состоять из 9 цифр'"), ,"ДекорацияКПП");
				МастерДалее = Ложь;
			КонецЕсли;
			
		Иначе
			
			// ИНН
			Если ПустаяСтрока(ИНН) Тогда 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Заполните ИНН'"), ,"ДекорацияИНН");
				МастерДалее = Ложь;
			ИначеЕсли НЕ КонтекстЭДОКлиент.ПроверитьЦифровойКодЗаданнойДлины(ИНН,12) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'ИНН должен состоять из 12 цифр'"), ,"ДекорацияИНН");
				МастерДалее = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
		Элементы.ПодсказкаПоРезультатамШаг2.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Выберите пользователей, которые будут иметь право использовать 1С-Отчетность по %1'"),
			Организация);
			
		Элементы.ПодсказкаКонечныйРезультат.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Поздравляем!
                  |Учетная запись по %1 успешно восстановлена'"),
			Организация);
		
		Если ДоступнаЭлектроннаяПодписьВМоделиСервиса И МастерДалее Тогда
			ПодключитьОбработчикОжидания("Подключаемый_ПолучитьКлючиЭлектроннойПодписиВМоделиСервиса", 0.2, Истина);
		Иначе
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВыборСпецоператораСвязи;
		КонецЕсли;
		
		Если МастерДалее Тогда
			ПоказатьСледующуюСтраницу();
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаИнформацияОбУчетнойЗаписи Тогда
		
		МастерДалее = Истина;
		Результат = Неопределено;
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВыборКлюча Тогда
			Если Не ЗначениеЗаполнено(КлючЭлектроннойПодписи) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Укажите ключ электронной подписи'"), ,"КлючЭлектроннойПодписи");
				МастерДалее = Ложь;
			КонецЕсли;
			
			ДополнительныеПараметры = Новый Структура("МастерДалее", МастерДалее);
			ОписаниеОповещения = Новый ОписаниеОповещения("КоманднаяПанельМастерДалееЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
			Если МастерДалее Тогда
				// По идентификатору документооборота и оператору электронного документооборота 
				// получим идентификатор абонента.
				ПолучитьИдентификаторАбонента(КлючЭлектроннойПодписи, Спецоператор);
				
				ВыполнитьНастройкуУчетнойЗаписи(Истина, КлючЭлектроннойПодписи, ОписаниеОповещения);		
			Иначе
				ВыполнитьОбработкуОповещения(ОписаниеОповещения, Результат);
			КонецЕсли;
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВыборСпецоператораСвязи Тогда
			Если Не ЗначениеЗаполнено(Спецоператор) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Укажите оператора электронного документооборота'"), ,"Спецоператор");
				МастерДалее = Ложь;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ИдентификаторАбонента) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Укажите идентификатор абонента'"), ,"ИдентификаторАбонента");
				МастерДалее = Ложь;
			ИначеЕсли СтрДлина(ИдентификаторАбонента) <> 36 И СтрДлина(ИдентификаторАбонента) <> 39 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Указан некорректный идентификатор абонента'"), ,"ИдентификаторАбонента");
				МастерДалее = Ложь;
			КонецЕсли;
			
			ДополнительныеПараметры = Новый Структура("МастерДалее", МастерДалее);
			ОписаниеОповещения = Новый ОписаниеОповещения("КоманднаяПанельМастерДалееЗавершение", ЭтотОбъект, ДополнительныеПараметры);

			Если МастерДалее Тогда
				ВыполнитьНастройкуУчетнойЗаписи(Ложь, КлючЭлектроннойПодписи, ОписаниеОповещения);		
			Иначе
				ВыполнитьОбработкуОповещения(ОписаниеОповещения, Результат);
			КонецЕсли;
		Иначе
			ДополнительныеПараметры = Новый Структура("МастерДалее", МастерДалее);
			ОписаниеОповещения = Новый ОписаниеОповещения("КоманднаяПанельМастерДалееЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, Результат);
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = Элементы.ОсновнаяПанель.ПодчиненныеЭлементы.СтраницаНастройкаПрограммы Тогда
		МастерДалее = Истина;
		ОбновитьПользователейУчетнойЗаписи(Истина);
		
		Если МастерДалее Тогда
			ПоказатьСледующуюСтраницу();
		КонецЕсли;
		
	Иначе
		
		Если МастерДалее Тогда
			
			ПоказатьСледующуюСтраницу();
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельМастерДалееЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	МастерДалее = ДополнительныеПараметры.МастерДалее;
	
	Если Результат = Истина Тогда
		ОбновитьПользователейУчетнойЗаписи();
		МастерДалее = Ложь;
	ИначеЕсли Результат = Ложь Тогда
		Элементы.ОсновнаяПанель.ТекущаяСтраница = Элементы.СтраницаРезультат;
		Элементы.СтраницыРезультата.ТекущаяСтраница = Элементы.СтраницаРезультатОшибка;
	КонецЕсли;
	
	Если МастерДалее Тогда
		ПоказатьСледующуюСтраницу();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если Не ДоступнаЭлектроннаяПодписьВМоделиСервиса Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВыборСпецоператораСвязи;
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.СтраницаПоискКлючейВМоделиСервиса.Видимость                    = Форма.ДоступнаЭлектроннаяПодписьВМоделиСервиса;
	Элементы.СтраницаВыборКлюча.Видимость                            = Форма.ДоступнаЭлектроннаяПодписьВМоделиСервиса;
	Элементы.СтраницаИнформацияОКлючахВДругойОбластиДанных.Видимость = Форма.ДоступнаЭлектроннаяПодписьВМоделиСервиса;
	
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		Элементы.Организация.ТолькоПросмотр = Истина; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере() 
	
	ЭтоЮридическоеЛицо = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ЭтоЮрЛицо(Организация);
	
	// Получаем ИНН и КПП
	Если ЗначениеЗаполнено(Организация) Тогда
		СтруктураДанныхОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация);	
		Если ЭтоЮридическоеЛицо Тогда
			ИНН = СтруктураДанныхОрганизации.ИННЮЛ;
			КПП = СтруктураДанныхОрганизации.КППЮЛ;
		Иначе
			ИНН = СтруктураДанныхОрганизации.ИННФЛ;
			КПП = "";
		КонецЕсли;
	Иначе
		ИНН = "";
		КПП = "";
	КонецЕсли;
	
	ИзменитьОформлениеРеквизитовОрганизации(ЭтаФорма);
	
	ОбновитьКлючи = Истина;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПоискКлючейВМоделиСервиса;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредыдущуюСтраницу()
	
	ТекущаяСтраница 		= Элементы.ОсновнаяПанель.ТекущаяСтраница;
	ИндексТекущейСтраницы 	= Элементы.ОсновнаяПанель.ПодчиненныеЭлементы.Индекс(ТекущаяСтраница);
	
	Если ИндексТекущейСтраницы > 0 Тогда
		
		Индекс = ИндексТекущейСтраницы;
		Пока Индекс > 0 Цикл
			Индекс = Индекс - 1;
			Страница = Элементы.ОсновнаяПанель.ПодчиненныеЭлементы.Получить(Индекс);
			Если Страница.Видимость Тогда		
				Элементы.ОсновнаяПанель.ТекущаяСтраница = Страница;
				Прервать;
			КонецЕсли;
		КонецЦикла;
										 
	КонецЕсли;
	УправлениеКнопкамиНавигации(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСледующуюСтраницу()
	
	ТекущаяСтраница = Элементы.ОсновнаяПанель.ТекущаяСтраница;
	ИндексТекущейСтраницы = Элементы.ОсновнаяПанель.ПодчиненныеЭлементы.Индекс(ТекущаяСтраница);
	
	Пока Элементы.ОсновнаяПанель.ПодчиненныеЭлементы.Индекс(ТекущаяСтраница) < Элементы.ОсновнаяПанель.ПодчиненныеЭлементы.Количество() - 1 Цикл
		
		Страница = Элементы.ОсновнаяПанель.ПодчиненныеЭлементы.Получить(Элементы.ОсновнаяПанель.ПодчиненныеЭлементы.Индекс(ТекущаяСтраница) + 1);
		
		Если Страница.Видимость Тогда
			Элементы.ОсновнаяПанель.ТекущаяСтраница = Страница;
			Прервать;
		Иначе
			ТекущаяСтраница = Страница;
		КонецЕсли;
		
	КонецЦикла;	
	
	УправлениеКнопкамиНавигации(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура НастройкаПользователей()
	
	СписокПользователей.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ВЫБОР
	                      |		КОГДА Настройки.УчетнаяЗапись ЕСТЬ NULL 
	                      |			ТОГДА Ложь
	                      |		ИНАЧЕ Истина
	                      |	КОНЕЦ КАК Пометка,
	                      |	Пользователи.Ссылка КАК Пользователь
	                      |ИЗ
	                      |	Справочник.Пользователи КАК Пользователи
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |			ПользователиУчетныхЗаписейДокументооборота.УчетнаяЗапись КАК УчетнаяЗапись,
	                      |			ПользователиУчетныхЗаписейДокументооборота.Пользователь КАК Пользователь
	                      |		ИЗ
	                      |			РегистрСведений.ПользователиУчетныхЗаписейДокументооборота КАК ПользователиУчетныхЗаписейДокументооборота
	                      |		ГДЕ
	                      |			ПользователиУчетныхЗаписейДокументооборота.УчетнаяЗапись = &УчетнаяЗапись) КАК Настройки
	                      |		ПО Пользователи.Ссылка = Настройки.Пользователь
	                      |ГДЕ
	                      |	НЕ Пользователи.ПометкаУдаления
	                      |	И НЕ Пользователи.Недействителен
	                      |	И НЕ Пользователи.Служебный
	                      |	И Пользователи.ИдентификаторПользователяИБ <> &ПустойИдентификаторПользователяИБ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Пользователи.Наименование");
	Запрос.УстановитьПараметр("УчетнаяЗапись", Справочники.УчетныеЗаписиДокументооборота.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойИдентификаторПользователяИБ", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Выборка = Запрос.Выполнить().Выбрать();
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Пока Выборка.Следующий() Цикл 
		Если Выборка.Пользователь = ТекущийПользователь Тогда 
			Картинка = БиблиотекаКартинок.Пользователь;
		Иначе 
			Картинка = Неопределено;
		КонецЕсли;
		СписокПользователей.Добавить(Выборка.Пользователь, Выборка.Пользователь.Наименование, Выборка.Пометка, Картинка);
	КонецЦикла;

	СтрокаПользователь = СписокПользователей.НайтиПоЗначению(ТекущийПользователь);
	Если СтрокаПользователь <> Неопределено Тогда 
		СтрокаПользователь.Пометка = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолучитьКлючиЭлектроннойПодписиВМоделиСервиса()
	
	Результат = ПолучитьКлючиЭлектроннойПодписиВМоделиСервисаНаСервере();
	
	Если НЕ Результат.ЗаданиеВыполнено Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКлючиЭлектроннойПодписиВМоделиСервисаНаСервере()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИНН", ИНН);
	СтруктураПараметров.Вставить("КПП", КПП);
	СтруктураПараметров.Вставить("ОбластьДанных", ОбщегоНазначения.ЗначениеРазделителяСеанса());
	
	НаименованиеЗадания = НСтр("ru = 'Получение ключей электронной подписи в модели сервиса'");
	Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		УникальныйИдентификатор,
		"ЭлектроннаяПодписьВМоделиСервисаБРО.ПолучитьДействующиеКлючи",
		СтруктураПараметров,
		НаименованиеЗадания);

	АдресХранилища       = Результат.АдресХранилища;
	ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		
	Если Результат.ЗаданиеВыполнено Тогда
		ЗагрузитьПодготовленныеДанныеНаСервере();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()

	Попытка
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
			ЗагрузитьПодготовленныеДанныеНаСервере();
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания",
				ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
		КонецЕсли;
	Исключение
		КоманднаяПанельМастерДалее(Неопределено);
	КонецПопытки;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанныеНаСервере()

	ПолнаяТаблицаКлючей = ПолучитьИзВременногоХранилища(АдресХранилища);
		
	ИдентификаторПриложения = ОбщегоНазначения.ЗначениеРазделителяСеанса();
	
	МассивИдентификаторовПриложений = Новый Массив;
	
	ЕстьДействующиеКлючи = Ложь;
	ЕстьКлючиСДругимИдентификатором = Ложь;
	СписокДляУдаления = Новый Массив;
	Для Каждого СтрокаТаблицы Из ПолнаяТаблицаКлючей Цикл
		Если СтрокаТаблицы.ИдентификаторПриложения = ИдентификаторПриложения Тогда
			ЕстьДействующиеКлючи = Истина;
		Иначе
			ЕстьКлючиСДругимИдентификатором = Истина;
			СписокДляУдаления.Добавить(СтрокаТаблицы);
			МассивИдентификаторовПриложений.Добавить(СтрокаТаблицы.ИдентификаторПриложения);
		КонецЕсли;
	КонецЦикла;
	
	// Открыть страницу СтраницаВыборКлюча
	Если ЕстьДействующиеКлючи Тогда
		Для Каждого СтрокаДляУдаления Из СписокДляУдаления Цикл
			ПолнаяТаблицаКлючей.Удалить(СтрокаДляУдаления);	
		КонецЦикла;
		
		ТаблицаКлючей.Загрузить(ПолнаяТаблицаКлючей);	
		Элементы.КлючЭлектроннойПодписи.СписокВыбора.Очистить();

		Для Каждого СтрокаТаблицы Из ТаблицаКлючей Цикл
			ПредставлениеКлюча = НСтр("ru = '%1 (%2 - %3)'");
			ПредставлениеКлюча = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ПредставлениеКлюча, СтрокаТаблицы.Наименование, СтрокаТаблицы.ДействителенС,
				СтрокаТаблицы.ДействителенДо, СтрокаТаблицы.Направления);
			
			Элементы.КлючЭлектроннойПодписи.СписокВыбора.Добавить(СтрокаТаблицы.ИдентификаторКлюча, ПредставлениеКлюча);
		КонецЦикла;
		
		Если Элементы.КлючЭлектроннойПодписи.СписокВыбора.Количество() = 1 Тогда
			КлючЭлектроннойПодписи = Элементы.КлючЭлектроннойПодписи.СписокВыбора[0].Значение;
			НайденныеСтроки = ТаблицаКлючей.НайтиСтроки(Новый Структура("ИдентификаторКлюча", КлючЭлектроннойПодписи));
			Если НайденныеСтроки.Количество() = 1 Тогда
				Спецоператор = НайденныеСтроки[0].СпецоператорСвязи;			
				ТелефонМобильныйДляАвторизации = НайденныеСтроки[0].ТелефонМобильный;
				ИдентификаторАбонента = НайденныеСтроки[0].ИдентификаторАбонента;
				ИдентификаторДокументооборота = НайденныеСтроки[0].ИдентификаторДокументооборота;
			КонецЕсли;
		Иначе
			КлючЭлектроннойПодписи = Неопределено;
		КонецЕсли;
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВыборКлюча;
		
	// Открыть страницу СтраницаИнформацияОКлючахВДругойОбластиДанных
	ИначеЕсли ЕстьКлючиСДругимИдентификатором Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаИнформацияОКлючахВДругойОбластиДанных;
		
		ТекстНадписиОКлючахВДругойОбластиДанных = НСтр("ru = 'Для %1 не найдены ключи электронной подписи для приложения с идентификатором %2, но найдены для %3.
                                                       |Для их использования необходимо обратиться в службу поддержки.'");
		
		НайденныеИдентификаторыПриложений = СтрСоединить(МассивИдентификаторовПриложений, ",");
		
		Элементы.НадписьОКлючахВДругойОбластиДанных.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстНадписиОКлючахВДругойОбластиДанных, 
			Организация, ИдентификаторПриложения, НайденныеИдентификаторыПриложений, ТелефонСлужбыПоддержки);
		
	// Открыть страницу СтраницаВыборСпецоператораСвязи
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВыборСпецоператораСвязи;
	КонецЕсли;
	
	ИдентификаторЗадания = Неопределено;
	
	УправлениеКнопкамиНавигации(ЭтаФорма);	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеРеквизитовОрганизации(Форма)
	
	Элементы = Форма.Элементы;
	
	ОформитьЭлементФормы(Форма, "ДекорацияИНН", Форма.ИНН, Истина);
	ОформитьЭлементФормы(Форма, "ДекорацияКПП", Форма.КПП, Истина);
	
	Элементы.ДекорацияКПП.Видимость = Форма.ЭтоЮридическоеЛицо;
	Элементы.НадписьКПП.Видимость 	= Форма.ЭтоЮридическоеЛицо;
	Если Не Форма.ЭтоЮридическоеЛицо Тогда 		
		Форма.КПП = "";
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОформитьЭлементФормы(Форма, ИмяЭлемента, Знач Значение, ОбязательныйДляЗаполнения)
	
	Элементы = Форма.Элементы;
	
	СинийЦвет 				= Новый Цвет(28,85,174); 
	КрасныйЦвет 			= Новый Цвет(178,34,34);    
	СерыйЦвет 				= Новый Цвет(192,192,192);
	ЦветТекстаФормы			= Новый Цвет(65,48,3);
	
	Элемент 				= Элементы[ИмяЭлемента];
	
	ПроверяемоеЗначение 	= Строка(Значение);
	ПроверяемоеЗначение 	= СтрЗаменить(ПроверяемоеЗначение,"-","");
	ПроверяемоеЗначение 	= СтрЗаменить(ПроверяемоеЗначение,",","");
	ПроверяемоеЗначение 	= СтрЗаменить(ПроверяемоеЗначение," ","");
	
	ЗначениеЗаполнено 		= ЗначениеЗаполнено(ПроверяемоеЗначение);	
	Элемент.Гиперссылка 	= не ЗначениеЗаполнено;	
	
	Если ЗначениеЗаполнено тогда 		
		Элемент.ЦветТекста 	= ЦветТекстаФормы;
		Элемент.Заголовок  	= Строка(Значение);
	Иначе	
		Элемент.ЦветТекста 	= ?(ОбязательныйДляЗаполнения,КрасныйЦвет,СинийЦвет);
		Элемент.Заголовок  	= "Заполнить";
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПользователейУчетныхЗаписейДокументооборота(СсылкаУчетнаяЗапись)
	
	НаборЗаписей = РегистрыСведений.ПользователиУчетныхЗаписейДокументооборота.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.УчетнаяЗапись.Установить(СсылкаУчетнаяЗапись.Ссылка);
	ФлагОтметки = Ложь;
	
	Для Каждого СтрокаСписка Из СписокПользователей Цикл
		Если СтрокаСписка.Пометка Тогда
			НоваяСтрока = НаборЗаписей.Добавить();
			НоваяСтрока.УчетнаяЗапись = СсылкаУчетнаяЗапись.Ссылка;
			НоваяСтрока.Пользователь = СтрокаСписка.Значение;
			ФлагОтметки = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		РегламентированнаяОтчетностьКлиентСервер.СообщитьОбОшибке(ОписаниеОшибки(), Ложь,
			"Не удалось обновить список пользователей по учетной записи налогоплательщика """ + СокрЛП(СсылкаУчетнаяЗапись.Ссылка) + """.");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИдентификаторАбонента(КлючЭлектроннойПодписи, СпецоператорСвязи)
	
	Если ЗначениеЗаполнено(ИдентификаторАбонента) Тогда
		
		Возврат ИдентификаторАбонента;
		
	Иначе
		
		ДокументЗаявление = Новый Структура("Статус,СтатусКомментарий");
		ДокументЗаявление.Вставить("ИдентификаторДокументооборота", ИдентификаторДокументооборота);
		ДокументЗаявление.Вставить("СпецоператорСвязи"            , СпецоператорСвязи);
		
		РезультатОтветаСервера 	= ОбработкаЗаявленийАбонентаВызовСервера.ПолучитьИРазобратьОтветНаЗаявление(ДокументЗаявление, Истина);
		ИдентификаторАбонента 	= РезультатОтветаСервера.ИдентификаторАбонента;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьНастройкуУчетнойЗаписи(ЭтоЭлектроннаяПодписьВМоделиСервиса, ИдентификаторДокументооборота, ВыполняемоеОповещение)
	
	ДатаПолученияОтвета = КонтекстЭДОКлиент.ТекущаяДатаНаСервере();
	// Создание учетной записи 
	ПараметрыОбработатьОбновление = КонтекстЭДОКлиент.ПараметрыОбработатьОбновление();
	
	ПараметрыОбработатьОбновление.ЭтоЭлектроннаяПодписьВМоделиСервиса   = ЭтоЭлектроннаяПодписьВМоделиСервиса;
	ПараметрыОбработатьОбновление.ИдентификаторДокументооборота  = ИдентификаторДокументооборота;
	ПараметрыОбработатьОбновление.ТелефонМобильныйДляАвторизации = ТелефонМобильныйДляАвторизации;
	ПараметрыОбработатьОбновление.ИдентификаторАбонента          = ?(СтрДлина(ИдентификаторАбонента) = 36, ИдентификаторАбонента, Сред(ИдентификаторАбонента, 4));
	ПараметрыОбработатьОбновление.СпецОператорСвязи              = Спецоператор;
	ПараметрыОбработатьОбновление.ПутьКонтейнерЗакрытогоКлюча    = ПутьКонтейнерЗакрытогоКлюча;
	ПараметрыОбработатьОбновление.Организация                    = Организация;
	
	ПараметрыОбработатьОбновление.ВызовИзМастераПодключенияК1СОтчетности = Истина;
	
	ДополнительныеПараметры = Новый Структура("ВыполняемоеОповещение, ПараметрыОбработатьОбновление", ВыполняемоеОповещение, ПараметрыОбработатьОбновление);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьНастройкуУчетнойЗаписиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	КонтекстЭДОКлиент.ОбработатьОбновление(ПараметрыОбработатьОбновление, ОписаниеОповещения);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьНастройкуУчетнойЗаписиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыОбработатьОбновление = Результат.ПараметрыФункции;
	РезультатОбновления = Результат.РезультатОбновления;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	
	Если РезультатОбновления <> Истина Тогда
		ПодробноеОписаниеОшибки = ПараметрыОбработатьОбновление.ТекстОшибокДляМастераПодключенияК1СОтчетности;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, РезультатОбновления);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПользователейУчетнойЗаписи(НепосредственноОбновить = Ложь)
	
	Если СписокПользователей.Количество() <= 1 ИЛИ НепосредственноОбновить Тогда
		Если Не НепосредственноОбновить Тогда
			Для Каждого Пользователь Из СписокПользователей Цикл
				Пользователь.Пометка = Истина;
			КонецЦикла;
		КонецЕсли;
		
		// Записываем выбранных пользователей в регистр сведений
		ЗаписатьПользователейУчетныхЗаписейДокументооборота(КонтекстЭДОКлиент.НоваяУчетнаяЗапись);
		
		СтруктураДляОповещения = Новый Структура("Организация, УчетнаяЗапись", Организация, КонтекстЭДОКлиент.НоваяУчетнаяЗапись);
		Оповестить("ПривязатьУчетнуюЗаписьКОрганизации", СтруктураДляОповещения);
		
		Если НЕ СтруктураДляОповещения.Свойство("ОповещениеОтработано") ИЛИ СтруктураДляОповещения.ОповещениеОтработано = Ложь Тогда
			КонтекстЭДОКлиент.УстановитьУчетнуюЗаписьОрганизации(Организация, КонтекстЭДОКлиент.НоваяУчетнаяЗапись);
		КонецЕсли;
		ОповеститьОбИзменении(КонтекстЭДОКлиент.НоваяУчетнаяЗапись);
		Если НЕ СтруктураДляОповещения.Свойство("ОповещениеОтработано") ИЛИ СтруктураДляОповещения.ОповещениеОтработано = Ложь Тогда
			Оповестить("ОбновитьУчетнуюЗапись", КонтекстЭДОКлиент.НоваяУчетнаяЗапись);
		КонецЕсли;
		
		Элементы.ОсновнаяПанель.ТекущаяСтраница = Элементы.СтраницаРезультат;
		Элементы.СтраницыРезультата.ТекущаяСтраница = Элементы.СтраницаРезультатУспех;
		УправлениеКнопкамиНавигации(ЭтаФорма);
	Иначе 
		Элементы.ОсновнаяПанель.ТекущаяСтраница = Элементы.СтраницаНастройкаПрограммы;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеКнопкамиНавигации(Форма)
	
	Элементы = Форма.Элементы;
	
	ТекущаяСтраница 		= Элементы.ОсновнаяПанель.ТекущаяСтраница;
	ИндексТекущейСтраницы 	= Элементы.ОсновнаяПанель.ПодчиненныеЭлементы.Индекс(ТекущаяСтраница);
	ВсегоСтраниц 			= Элементы.ОсновнаяПанель.ПодчиненныеЭлементы.Количество();
		
	КнопкаДалее	  = Элементы.Далее;
	КнопкаНазад   = Элементы.Назад;
	КнопкаЗакрыть = Элементы.Закрыть;
	
	КнопкаДалее.Заголовок = "Далее>";
	КнопкаДалее.Видимость = Истина;
	КнопкаНазад.Заголовок = "<Назад";
	КнопкаНазад.Видимость = Истина;
	
	Если ИндексТекущейСтраницы = 0 Тогда
		КнопкаЗакрыть.Заголовок 			= "Отмена";
		КнопкаДалее.Видимость 				= Истина;
		КнопкаНазад.Видимость 				= Ложь;
		КнопкаДалее.КнопкаПоУмолчанию 		= Истина;
		
	ИначеЕсли ИндексТекущейСтраницы = 1 Тогда
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПоискКлючейВМоделиСервиса
			И Элементы.Страницы.ТекущаяСтраница.Видимость Тогда
			КнопкаЗакрыть.Заголовок 			= "Отмена";
			КнопкаЗакрыть.КнопкаПоУмолчанию     = Истина;
			КнопкаДалее.Видимость 				= Ложь;
			КнопкаНазад.Видимость 				= Ложь;
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаИнформацияОКлючахВДругойОбластиДанных
			И Элементы.Страницы.ТекущаяСтраница.Видимость Тогда
			КнопкаДалее.Видимость 				= Ложь;
			КнопкаНазад.Видимость 				= Ложь;
			КнопкаЗакрыть.Заголовок 			= "Закрыть";
			КнопкаЗакрыть.КнопкаПоУмолчанию 	= Истина;
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВыборКлюча
			И Элементы.Страницы.ТекущаяСтраница.Видимость Тогда
			КнопкаЗакрыть.Заголовок 			= "Отмена";
			КнопкаДалее.Заголовок               = "Восстановить учетную запись";
			КнопкаДалее.Видимость 				= Истина;
			КнопкаНазад.Видимость 				= Истина;
			КнопкаДалее.КнопкаПоУмолчанию       = Истина;
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВыборСпецоператораСвязи
			И Элементы.Страницы.ТекущаяСтраница.Видимость Тогда
			КнопкаЗакрыть.Заголовок 			= "Отмена";
			КнопкаДалее.Заголовок               = "Далее>";
			КнопкаДалее.Видимость 				= Истина;
			КнопкаНазад.Заголовок               = "<Назад";
			КнопкаНазад.Видимость 				= Истина;
			КнопкаДалее.КнопкаПоУмолчанию       = Истина;	
		Иначе
			КнопкаЗакрыть.Заголовок 			= "Отмена";
			КнопкаДалее.Видимость 				= Истина;
			КнопкаНазад.Видимость 				= Истина;
			КнопкаДалее.КнопкаПоУмолчанию       = Истина;
		КонецЕсли;	
    ИначеЕсли ИндексТекущейСтраницы = ВсегоСтраниц - 1 Тогда
		//последняя закладка
		КнопкаДалее.Видимость 				= Ложь;
    	КнопкаНазад.Видимость 				= Ложь;
		КнопкаЗакрыть.Заголовок 			= "Закрыть";
		КнопкаЗакрыть.КнопкаПоУмолчанию 	= Истина;
	Иначе	
		//все остальные закладки
		КнопкаЗакрыть.Заголовок 			= "Отмена";
		КнопкаНазад.Видимость 				= Истина;
    	КнопкаДалее.Видимость 				= Истина;
		КнопкаДалее.КнопкаПоУмолчанию 		= Истина;	
    КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДанныеСлужбыПоддержки(Форма)

	Форма.ТелефонСлужбыПоддержки = "";
	Форма.АдресЭлектроннойПочтыСлужбыПоддержки = "";

КонецПроцедуры

#КонецОбласти

