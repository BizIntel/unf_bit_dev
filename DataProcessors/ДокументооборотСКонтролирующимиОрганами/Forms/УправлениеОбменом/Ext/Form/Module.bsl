&НаСервере
Перем КонтекстЭДОСервер Экспорт;

&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СоответствиеСписокСтраница = ПолучитьСоответствиеСписокСтраница();
	ПараметрыДинамическихСписков = Новый Структура;
	Для Каждого ЭлементСписка Из СоответствиеСписокСтраница Цикл
		НастройкиДС = Новый Структура("ОсновнаяТаблица,ДинамическоеСчитываниеДанных,ТекстЗапроса");
		ЗаполнитьЗначенияСвойств(НастройкиДС, ЭтаФорма[ЭлементСписка.Ключ]);
		ПараметрыДинамическихСписков.Вставить(ЭлементСписка.Ключ, НастройкиДС);
	КонецЦикла;
	
	ИмяДокументаУведомлениеОКонтролируемыхСделках = 
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("УведомлениеОКонтролируемыхСделках");
	ИмяДокументаУведомлениеОСпецрежимахНалогообложения = "УведомлениеОСпецрежимахНалогообложения";
		
	ВидДокументаЗаявленияОВвозе = "Заявление";
	
	// заполняем список учетных записей
	ЗаполнитьУчетныеЗаписи();
	
	// восстанавливаем настройки, сохраненные при последнем закрытии формы
	ВосстановитьНастройки();
	
	ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );

	сохрТекущаяСтраницаПанелиФормы = Неопределено;
	сохрТекущаяСтраницаПанелиФНС = Неопределено;
	сохрТекущаяСтраницаПанелиПФР = Неопределено;
	сохрТекущаяСтраницаПанелиФСГС = Неопределено;
	
	ВосстановитьНастройкиСтраниц(сохрТекущаяСтраницаПанелиФормы, сохрТекущаяСтраницаПанелиФНС, сохрТекущаяСтраницаПанелиПФР, сохрТекущаяСтраницаПанелиФСГС);
	
	// определяем ВидДокументаЗаявленияОВвозе, если он еще не определен
	Если ВидДокументаЗаявленияОВвозе = "" Тогда
		ВидДокументаЗаявленияОВвозе = "Заявление";
	КонецЕсли;
	
	УправлениеЗакладкойУведомлений();
	УправлениеЗакладкойОтветыНаТребования();
	
	УстановитьПараметрыПроизвольныхЗапросов(сохрТекущаяСтраницаПанелиФормы, сохрТекущаяСтраницаПанелиФНС, сохрТекущаяСтраницаПанелиПФР, сохрТекущаяСтраницаПанелиФСГС);
	УправлениеЗакладкойЗаявлений();
	ВосстановитьНастройкиОтборов();
		
	// прорисовываем элементы управления
	УправлениеЭУ(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если УчетныеЗаписи.Количество() = 0 Тогда
		ТекстВопроса = "Для работы с формой """ + СокрЛП(Заголовок) + """ Вы должны быть зарегистрированы
						|в информационной базе как пользователь хотя бы одной из активных учетных записей документооборота.
						|
						|Открыть справочник учетных записей документооборота?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПриОткрытииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		МассивПолученныхСообщений = Новый Массив;
		Оповестить("Заполнение списка полученных сообщений", МассивПолученныхСообщений);
		Если МассивПолученныхСообщений.Количество() > 0 Тогда 
			ПолученныеТранспортныеСообщения.ЗагрузитьЗначения(МассивПолученныхСообщений);
		КонецЕсли;
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы

&НаКлиенте
Процедура ТаблицаИсходящиеДокументыФНСПриАктивизацииСтроки(Элемент)

	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаИсходящиеФНС.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаИсходящиеФНС.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаИсходящиеДокументыФНС.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВходящиеДокументыФНСПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаВходящиеФНС.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаВходящиеФНС.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаВходящиеДокументыФНС.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗапросыИОНПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаЗапросыИОН.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаЗапросыИОН.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаЗапросыИОН.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВходящиеДокументыПФРПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаВходящиеПФР.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаВходящиеПФР.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаВходящиеДокументыПФР.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсходящиеДокументыПФРВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсходящиеДокументыПФРПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаИсходящиеПФР.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено
			И Элементы.ТаблицаИсходящиеДокументыПФР.ТекущиеДанные <> Неопределено Тогда
			ЦиклыОбменаИсходящиеПФР.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаИсходящиеДокументыПФР.ТекущиеДанные.Ссылка);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВходящиеДокументыФСГСПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаВходящиеФСГС.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаВходящиеФСГС.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаВходящиеДокументыФСГС.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсходящиеДокументыФСГСПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаИсходящиеФСГС.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаИсходящиеФСГС.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаИсходящиеДокументыФСГС.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаКоманднаяПанельУчетныеЗаписиУстановитьФлажки(Команда)
	
	СнятьУстановитьФлажки(Истина);
	ПриСменеСтраницы(Неопределено, Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура КомандаКоманднаяПанельУчетныеЗаписиСнятьФлажки(Команда)

	СнятьУстановитьФлажки(Ложь);
	ПриСменеСтраницы(Неопределено, Неопределено);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УчетныеЗаписиПриИзменении(Элемент)
	
	ПриСменеСтраницы(Неопределено, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЦиклыОбменаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	КолонкаВыбора = Поле.Имя;
	
	Результат = ВызватьВыборВТабличномПолеЦикловОбмена(ВыбраннаяСтрока, КолонкаВыбора, СтандартнаяОбработка);
	Если ТипЗнч(Результат) = Тип("Строка") Тогда 
		ПоказатьПредупреждение(, Результат);
	ИначеЕсли ТипЗнч(Результат) = Тип("ДокументСсылка.ТранспортноеСообщение") Тогда 
		ПоказатьЗначение(, Результат);
	ИначеЕсли ТипЗнч(Результат) = Тип("СписокЗначений") Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ТаблицаЦиклыОбменаВыборЗавершение", ЭтотОбъект);
		Результат.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите сообщение", Результат.Получить(0));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КоманднаяПанельОтчетностьОткрытьВходящее(Команда)
	
	СсылкаНаЭлемент = Элементы.ТаблицаВходящиеДокументыФНС.ТекущаяСтрока;
	Если СсылкаНаЭлемент <> Неопределено Тогда 
		ПоказатьЗначение(, СсылкаНаЭлемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЦиклыОбменаНайтиОтчетВСписке(Команда)
	
	Если Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки.Количество() > 0 Тогда
		ПредметыЦиклаОбмена = КонтекстЭДОКлиент.ПолучитьПредметыЦиклаОбмена(Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки[0]);
		Для Каждого Предмет Из ПредметыЦиклаОбмена Цикл
			ТипЗнчПредмет = ТипЗнч(Предмет);
			Если ТипЗнчПредмет = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
				
				НачатьЗамерВремени();
				ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.УправлениеОтчетностью");
			ИначеЕсли ТипЗнчПредмет = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
				СтруктураПараметров = Новый Структура("ТекущаяСтрока", Предмет);
				ОткрытьФорму("Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов.ФормаСписка", СтруктураПараметров);
			Иначе
				ИмяДокументаСправкиНДФЛДляПередачиВНалоговыйОрган = 
				ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("СправкиНДФЛДляПередачиВНалоговыйОрган");
				ИмяДокументаЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ = 
				ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ");
				Если НайтиМетаданныеНаСервере(ИмяДокументаСправкиНДФЛДляПередачиВНалоговыйОрган)
					И ТипЗнчПредмет = Тип("ДокументСсылка." + ИмяДокументаСправкиНДФЛДляПередачиВНалоговыйОрган) Тогда
					СтруктураПараметров = Новый Структура("ТекущаяСтрока", Предмет);
					ОткрытьФорму("Документ." + ИмяДокументаСправкиНДФЛДляПередачиВНалоговыйОрган + ".ФормаСписка", СтруктураПараметров);
				ИначеЕсли НайтиМетаданныеНаСервере(ИмяДокументаЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ)
					И ТипЗнчПредмет = Тип("ДокументСсылка." + ИмяДокументаЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ) Тогда
					СтруктураПараметров = Новый Структура("ТекущаяСтрока", Предмет);
					ОткрытьФорму("Документ." + ИмяДокументаЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ + ".ФормаСписка", СтруктураПараметров);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЦиклыОбменаНайтиОтчетПФРВСписке(Команда)
	
	Если Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки.Количество() > 0 Тогда
		ПредметыЦиклаОбмена = КонтекстЭДОКлиент.ПолучитьПредметыЦиклаОбмена(Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки[0]);
		Для Каждого Предмет Из ПредметыЦиклаОбмена Цикл
			ТипЗнчПредмет = ТипЗнч(Предмет);
			Если ТипЗнчПредмет = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
				НачатьЗамерВремени();
				ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.УправлениеОтчетностью");
			ИначеЕсли ТипЗнчПредмет = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
				СтруктураПараметров = Новый Структура("ТекущаяСтрока", Предмет);
				ОткрытьФорму("Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов.ФормаСписка", СтруктураПараметров);
			Иначе
				ИмяДокументаСправкиНДФЛДляПередачиВНалоговыйОрган = 
				ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("СправкиНДФЛДляПередачиВНалоговыйОрган");
				Если НайтиМетаданныеНаСервере(ИмяДокументаСправкиНДФЛДляПередачиВНалоговыйОрган)
					И ТипЗнчПредмет = Тип("ДокументСсылка." + ИмяДокументаСправкиНДФЛДляПередачиВНалоговыйОрган) Тогда
					СтруктураПараметров = Новый Структура("ТекущаяСтрока", Предмет);
					ОткрытьФорму("Документ." +
					ИмяДокументаСправкиНДФЛДляПередачиВНалоговыйОрган +
					".ФормаСписка", СтруктураПараметров);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЦиклыОбменаНайтиОтчетФСГСВСписке(Команда)
	
	Если Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки.Количество() > 0 Тогда
		ПредметыЦиклаОбмена = КонтекстЭДОКлиент.ПолучитьПредметыЦиклаОбмена(Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки[0]);
		Для Каждого Предмет Из ПредметыЦиклаОбмена Цикл
			ТипЗнчПредмет = ТипЗнч(Предмет);
			Если ТипЗнчПредмет = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
				НачатьЗамерВремени();
				ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.УправлениеОтчетностью");
			ИначеЕсли ТипЗнчПредмет = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
				СтруктураПараметров = Новый Структура("ТекущаяСтрока", Предмет);
				ОткрытьФорму("Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов.ФормаСписка", СтруктураПараметров);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьВывестиВОкно(Команда)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки.Количество();
	МассивВыделенныхСтрок = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки Цикл
		МассивВыделенныхСтрок.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	КонтекстЭДОКлиент.ПоказатьДокументыЦикловОбмена(МассивВыделенныхСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьПФРВывестиВОкно(Команда)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки.Количество();
	МассивВыделенныхСтрок = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки Цикл
		МассивВыделенныхСтрок.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	КонтекстЭДОКлиент.ПоказатьДокументыЦикловОбмена(МассивВыделенныхСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФСГСВывестиВОкно(Команда)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки.Количество();
	МассивВыделенныхСтрок = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки Цикл
		МассивВыделенныхСтрок.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	КонтекстЭДОКлиент.ПоказатьДокументыЦикловОбмена(МассивВыделенныхСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьПоказатьОтчетОСостоянии(Команда)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки.Количество();
	МассивВыделенныхСтрок = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки Цикл
		МассивВыделенныхСтрок.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	КонтекстЭДОКлиент.ПоказатьОтчетыОСостоянииЦикловОбмена(ВыделеннаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьПФРПоказатьОтчетОСостоянии(Команда)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки.Количество();
	МассивВыделенныхСтрок = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки Цикл
		МассивВыделенныхСтрок.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	КонтекстЭДОКлиент.ПоказатьОтчетыОСостоянииЦикловОбмена(ВыделеннаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФСГСПоказатьОтчетОСостоянии(Команда)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки.Количество();
	МассивВыделенныхСтрок = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки Цикл
		МассивВыделенныхСтрок.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	КонтекстЭДОКлиент.ПоказатьОтчетыОСостоянииЦикловОбмена(ВыделеннаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьВыгрузить(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки;
	
	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьВыгрузитьКонтейнеры(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки;
	
	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьВыгрузитьСодержимое(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки;
	
	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьПФРВыгрузить(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки;
	
	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьПФРВыгрузитьКонтейнеры(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки;
	
	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьПФРВыгрузитьСодержимое(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки;
	
	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФСГСВыгрузить(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки;
	
	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФСГСВыгрузитьКонтейнеры(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки;
	
	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФСГСВыгрузитьСодержимое(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки;
	
	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЦиклыОбменаРегламентированныйОтчет(Команда)
	
	Предмет = Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ТекущиеДанные;
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки.Количество();
	Если КоличествоВыделенныхСтрок > 0 Тогда 
		Предмет = Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки[0];
		ПоказатьЗначение(, ПолучитьСсылкуНаРеквизит(Предмет, "Предмет"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЦиклыОбменаРегламентированныйОтчетПФР(Команда)
	
	Предмет = Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ТекущиеДанные;
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки.Количество();
	Если КоличествоВыделенныхСтрок > 0 Тогда 
		Предмет = Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.ВыделенныеСтроки[0];
		ПоказатьЗначение(, ПолучитьСсылкуНаРеквизит(Предмет, "Предмет"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЦиклыОбменаРегламентированныйОтчетФСГС(Команда)
	
	Предмет = Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ТекущиеДанные;
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки.Количество();
	Если КоличествоВыделенныхСтрок > 0 Тогда 
		Предмет = Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.ВыделенныеСтроки[0];
		ПоказатьЗначение(, ПолучитьСсылкуНаРеквизит(Предмет, "Предмет"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельВходящиеДокументыФНСОтветить(Команда)
	
	СсылкаНаЭлемент = Элементы.ТаблицаВходящиеДокументыФНС.ТекущаяСтрока;
	Если СсылкаНаЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтветНаПисьмо = КонтекстЭДОКлиент.СоздатьОтветНаПисьмо(СсылкаНаЭлемент);
	
	Если ОтветНаПисьмо <> Неопределено Тогда
		СтруктураПараметров = Новый Структура("Ключ", ОтветНаПисьмо);
		ОткрытьФорму("Справочник.ПерепискаСКонтролирующимиОрганами.ФормаОбъекта", СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельВходящиеДокументыПФРОтветить(Команда)
	
	СсылкаНаЭлемент = Элементы.ТаблицаВходящиеДокументыПФР.ТекущаяСтрока;
	Если СсылкаНаЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтветНаПисьмо = КонтекстЭДОКлиент.СоздатьОтветНаПисьмо(СсылкаНаЭлемент);
	
	Если ОтветНаПисьмо <> Неопределено Тогда
		СтруктураПараметров = Новый Структура("Ключ", ОтветНаПисьмо);
		ОткрытьФорму("Справочник.ПерепискаСКонтролирующимиОрганами.ФормаОбъекта", СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящиеДокументыФНСОтображатьСписокЦикловОбмена(Команда)
	
	Элементы.КнопкаИсходящиеДокументыФНСОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.КнопкаИсходящиеДокументыФНСОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаИсходящиеФНС.Видимость = Элементы.КнопкаИсходящиеДокументыФНСОтображатьСписокЦикловОбмена.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеДокументыФНСОтображатьСписокЦикловОбмена(Команда)
	
	Элементы.КнопкаВходящиеДокументыФНСОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.КнопкаВходящиеДокументыФНСОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаВходящиеФНС.Видимость = Элементы.КнопкаВходящиеДокументыФНСОтображатьСписокЦикловОбмена.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящиеДокументыПФРОтображатьСписокЦикловОбмена(Команда)
	
	Элементы.КнопкаИсходящиеДокументыПФРОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.КнопкаИсходящиеДокументыПФРОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаИсходящиеПФР.Видимость = Элементы.КнопкаИсходящиеДокументыПФРОтображатьСписокЦикловОбмена.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеДокументыПФРОтображатьСписокЦикловОбмена(Команда)
	
	Элементы.КнопкаВходящиеДокументыПФРОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.КнопкаВходящиеДокументыПФРОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаВходящиеПФР.Видимость = Элементы.КнопкаВходящиеДокументыПФРОтображатьСписокЦикловОбмена.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящиеДокументыФСГСОтображатьСписокЦикловОбмена(Команда)
	
	Элементы.КнопкаИсходящиеДокументыФСГСОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.КнопкаИсходящиеДокументыФСГСОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаИсходящиеФСГС.Видимость = Элементы.КнопкаИсходящиеДокументыФСГСОтображатьСписокЦикловОбмена.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеДокументыФСГСОтображатьСписокЦикловОбмена(Команда)
	
	Элементы.КнопкаВходящиеДокументыФСГСОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.КнопкаВходящиеДокументыФСГСОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаВходящиеФСГС.Видимость = Элементы.КнопкаВходящиеДокументыФСГСОтображатьСписокЦикловОбмена.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросыИОНОтображатьСписокЦикловОбмена(Команда)
	
	Элементы.КнопкаЗапросыИОНОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.КнопкаЗапросыИОНОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаЗапросыИОН.Видимость = Элементы.КнопкаЗапросыИОНОтображатьСписокЦикловОбмена.Пометка;

КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяКоманднаяПанельРежимОднойУчетнойЗаписи(Команда)
	
	Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка = НЕ Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка;
	УправлениеЭУ(ЭтаФорма);
	ПриСменеСтраницы(Неопределено, Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельВходящиеДокументыПФРОткрыть(Команда)
	
	СсылкаНаЭлемент = Элементы.ТаблицаВходящиеДокументыПФР.ТекущаяСтрока;
	Если СсылкаНаЭлемент <> Неопределено Тогда 
		ПоказатьЗначение(, СсылкаНаЭлемент);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельВходящиеДокументыФСГСОтветить(Команда)
	
	СсылкаНаЭлемент = Элементы.ТаблицаВходящиеДокументыФСГС.ТекущаяСтрока;
	Если СсылкаНаЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтветНаПисьмо = КонтекстЭДОКлиент.СоздатьОтветНаПисьмо(СсылкаНаЭлемент);
	
	Если ОтветНаПисьмо <> Неопределено Тогда
		СтруктураПараметров = Новый Структура("Ключ", ОтветНаПисьмо);
		ОткрытьФорму("Справочник.ПерепискаСКонтролирующимиОрганами.ФормаОбъекта", СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельВходящиеДокументыФСГСОткрыть(Команда)
	
	СсылкаНаЭлемент = Элементы.ТаблицаВходящиеДокументыФСГС.ТекущаяСтрока;
	Если СсылкаНаЭлемент <> Неопределено Тогда 
		ПоказатьЗначение(, СсылкаНаЭлемент);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельПрочиеОткрыть(Команда)
	
	СсылкаНаЭлемент = Элементы.ТранспортноеСообщение.ТекущаяСтрока;
	Если СсылкаНаЭлемент <> Неопределено Тогда 
		ПоказатьЗначение(, СсылкаНаЭлемент);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьСписокУчетныхЗаписей()
	
	СписокУчетныхЗаписей = Новый СписокЗначений;
	СписокУчетныхЗаписей.ЗагрузитьЗначения(УчетныеЗаписи.Выгрузить(, "Объект").ВыгрузитьКолонку("Объект"));
	Возврат СписокУчетныхЗаписей;
	
КонецФункции

&НаКлиенте
Процедура ПолеОтборУчетнаяЗаписьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СписокУчетныхЗаписей = ПолучитьСписокУчетныхЗаписей();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПолеОтборУчетнаяЗаписьНачалоВыбораЗавершение", ЭтотОбъект);
	ПоказатьВыборИзСписка(ОписаниеОповещения, СписокУчетныхЗаписей,,СписокУчетныхЗаписей.НайтиПоЗначению(ОтборУчетнаяЗапись));
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтборУчетнаяЗаписьНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		ОтборУчетнаяЗапись = РезультатВыбора.Значение;
		ПриСменеСтраницы(Неопределено, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИсходящиеДокументыФНС(Команда)
	
	ОткрытьФорму("Справочник.ПерепискаСКонтролирующимиОрганами.ФормаОбъекта", ПолучитьЗначенияЗаполнения("СФНС"));
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЗначенияЗаполнения(ТипПереписки)
	
	Если ТипПереписки = "СФНС" Тогда 
		Возврат Новый Структура("ЗначенияЗаполнения", Новый Структура("Тип", ПредопределенноеЗначение("Перечисление.ТипыПерепискиСКонтролирующимиОрганами.ПерепискаСФНС")));
	ИначеЕсли ТипПереписки = "СПФР" Тогда 
		Возврат Новый Структура("ЗначенияЗаполнения", Новый Структура("Тип", ПредопределенноеЗначение("Перечисление.ТипыПерепискиСКонтролирующимиОрганами.ПерепискаСПФР")));
	ИначеЕсли ТипПереписки = "СФСГС" Тогда
		Возврат Новый Структура("ЗначенияЗаполнения", Новый Структура("Тип", ПредопределенноеЗначение("Перечисление.ТипыПерепискиСКонтролирующимиОрганами.ПерепискаСФСГС")));
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура КомандаИсходящиеДокументыПФРСоздать(Команда)
	
	ОткрытьФорму("Справочник.ПерепискаСКонтролирующимиОрганами.ФормаОбъекта", ПолучитьЗначенияЗаполнения("СПФР"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИсходящиеДокументыПФРСоздатьМакетПД(Команда)
	
	ОткрытьФорму("Справочник.МакетыПенсионныхДел.ФормаОбъекта");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИсходящиеДокументыФСГССоздать(Команда)
	
	ОткрытьФорму("Справочник.ПерепискаСКонтролирующимиОрганами.ФормаОбъекта", ПолучитьЗначенияЗаполнения("СФСГС"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьОтчетностьФНС(Команда)
	
	Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьИсходящиеДокументыФНС(Команда)
	
	Элементы.ТаблицаИсходящиеДокументыФНС.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаИсходящиеФНС.Видимость Тогда 
		Элементы.ТаблицаЦиклыОбменаИсходящиеФНС.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьВходящиеДокументыФНС(Команда)
	
	Элементы.ТаблицаВходящиеДокументыФНС.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаВходящиеФНС.Видимость Тогда 
		Элементы.ТаблицаЦиклыОбменаВходящиеФНС.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьОтчетностьПФР(Команда)
	
	Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьИсходящиеДокументыПФР(Команда)
	
	Элементы.ТаблицаИсходящиеДокументыПФР.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаИсходящиеПФР.Видимость Тогда
		Элементы.ТаблицаЦиклыОбменаИсходящиеПФР.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьВходящиеДокументыПФР(Команда)
	
	Элементы.ТаблицаВходящиеДокументыПФР.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаВходящиеПФР.Видимость Тогда
		Элементы.ТаблицаЦиклыОбменаВходящиеПФР.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьТранспортноеСообщение(Команда)
	
	Элементы.ТранспортноеСообщение.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьОтчетностьФСГС(Команда)
	
	Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьИсходящиеДокументыФСГС(Команда)
	
	Элементы.ТаблицаИсходящиеДокументыФСГС.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаИсходящиеФСГС.Видимость Тогда
		Элементы.ТаблицаЦиклыОбменаИсходящиеФСГС.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьВходящиеДокументыФСГС(Команда)
	
	Элементы.ТаблицаВходящиеДокументыФСГС.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаВходящиеФСГС.Видимость Тогда
		Элементы.ТаблицаЦиклыОбменаВходящиеФСГС.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	МассивОрганизаций = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
	
	// Получаем имя документа "УведомлениеОКонтролируемыхСделках"
	ИмяСобытияЗаписиДокументаУведомлениеОКонтролируемыхСделках = 
		?(НЕ ЗначениеЗаполнено(ИмяДокументаУведомлениеОКонтролируемыхСделках), "", "Запись_" + ИмяДокументаУведомлениеОКонтролируемыхСделках);
		
	Если ИмяСобытия = "Изменение сообщения" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ПриСменеСтраницы(Неопределено, Неопределено);
		
	ИначеЕсли ИмяСобытия = "Запись_ЭлектронныеПредставленияРегламентированныхОтчетов" 
		ИЛИ ИмяСобытия = ИмяСобытияЗаписиДокументаУведомлениеОКонтролируемыхСделках 
		ИЛИ ИмяСобытия = "Запись_УведомлениеОСпецрежимахНалогообложения" Тогда
		
		ПриСменеСтраницы(Неопределено, Неопределено);
		
	ИначеЕсли ИмяСобытия = "Запись уведомления о контролируемых сделках" Тогда
		
		ПриСменеСтраницы(Неопределено, Неопределено);
		
	ИначеЕсли ИмяСобытия = "Запись_ОписиИсходящихДокументовВНалоговыеОрганы" 
		И ТипЗнч(Источник) = Тип("СправочникСсылка.ОписиИсходящихДокументовВНалоговыеОрганы")
		ИЛИ ИмяСобытия = "Запись_ПоясненияКДекларацииПоНДС" 
		И ТипЗнч(Источник) = Тип("ДокументСсылка.ПоясненияКДекларацииПоНДС")
		ИЛИ ИмяСобытия = "Запись_ПерепискаСКонтролирующимиОрганами" 
		И ТипЗнч(Источник) = Тип("СправочникСсылка.ПерепискаСКонтролирующимиОрганами")
		ИЛИ ИмяСобытия = "Запись_МакетыПенсионныхДел"
		И ТипЗнч(Источник) = Тип("СправочникСсылка.МакетыПенсионныхДел") Тогда
		
		Элементы.ТаблицаТребования.Обновить();
		Элементы.ТаблицаПредставления.Обновить();
		Элементы.ТаблицаИсходящиеДокументыПФР.Обновить();
		Элементы.ТаблицаИсходящиеДокументыФСГС.Обновить();
		Элементы.ТаблицаИсходящиеДокументыФНС.Обновить();
		
	ИначеЕсли ИмяСобытия = "Чтение сообщения" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		Если Параметр.Свойство("Сообщение") Тогда 
			ЭлементСписка = ПолученныеТранспортныеСообщения.НайтиПоЗначению(Параметр.Сообщение);
			Если ЭлементСписка <> Неопределено Тогда 
				ПолученныеТранспортныеСообщения.Удалить(ЭлементСписка);
				
			КонецЕсли;
		КонецЕсли;
		
		ПриСменеСтраницы(Неопределено, Неопределено);
		
	ИначеЕсли ИмяСобытия = "Чтение письма" Тогда
		
		//не используется
		
	ИначеЕсли ИмяСобытия = "Чтение запроса" Тогда
		
		//не используется
		
	ИначеЕсли ИмяСобытия = "Изменение учетной записи налогоплательщика"
	ИЛИ ИмяСобытия = "Изменение состава пользователей учетной записи налогоплательщика"
	ИЛИ ИмяСобытия = "Изменение организации" Тогда
		
		ЗаполнитьУчетныеЗаписи();
		ПриСменеСтраницы(Неопределено, Неопределено);
		
	ИначеЕсли ИмяСобытия = "Заполнение списка полученных сообщений" И ТипЗнч(Параметр) = Тип("Массив") Тогда
		
		Если Параметр.Количество() = 0 Тогда 
			// оповещение отправлено или открываемой формой или формой с пустым списком
			МассивДляПараметра = ПолученныеТранспортныеСообщения.ВыгрузитьЗначения();
			Для Каждого ЭлементМассива Из МассивДляПараметра Цикл
				Параметр.Добавить(ЭлементМассива);
			КонецЦикла;
		Иначе
			// оповещение отправлено формой с НЕ пустым списком (был выполнен обмен)
			Для Каждого ЭлементПараметра Из Параметр Цикл
				ЭлементСписка = ПолученныеТранспортныеСообщения.НайтиПоЗначению(ЭлементПараметра);
				Если ЭлементСписка = Неопределено Тогда 
					ПолученныеТранспортныеСообщения.Добавить(ЭлементПараметра);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПриСменеСтраницы(Неопределено, Неопределено);
		
	ИначеЕсли ИмяСобытия = "Получение контекста ЭДО" И КонтекстЭДОКлиент <> Неопределено И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		Параметр.КонтекстЭДО = КонтекстЭДОКлиент;
		
	ИначеЕсли ИмяСобытия = "Показать циклы обмена" Тогда
		
		// ФНС, страница Отчетность
		
		// Устанавливаем нужную текущую страницу
		Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ГруппаФНС;
		Элементы.ГруппаСтраницыФНС.ТекущаяСтраница = Элементы.ГруппаОтчетностьФНС;
		ПриСменеСтраницы(Неопределено, Неопределено);
		
		Элементы.ОтобратьОтчетностьФНС.Пометка = Истина;
		УстановитьВидимостьПоляПредставленияПредмета(ЭтаФорма);
		
		// Устанавливаем значение параметра
		ПредметОтчетностиФНС = Параметр;
		
		// Устанавливаем отбор по значению параметра
		УстановитьОтборПоПредмету(ЭтаФорма);
		
	ИначеЕсли ИмяСобытия = "Показать циклы обмена заявления" Тогда
		
		// ФНС, страница Заявления 
		Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ГруппаФНС;
		Элементы.ГруппаСтраницыФНС.ТекущаяСтраница = Элементы.ГруппаЗаявление;
		ПриСменеСтраницы(Неопределено, Неопределено);
		
		Элементы.ОтобратьЗаявленияФНС.Пометка = Истина;
		УстановитьВидимостьПоляПредставленияПредмета(ЭтаФорма);
		
		ПредметЗаявленийФНС = Параметр;
		
		УстановитьОтборПоПредмету(ЭтаФорма);
		
	ИначеЕсли ИмяСобытия = "Показать циклы обмена уведомления" 
		ИЛИ ИмяСобытия = "Показать журнал отправки электронного представления уведомления" Тогда
		// ФНС, страница Исходящие уведомления
		
		ТипЗначенияПараметра = ТипЗнч(Параметр);
		
		СкорректироватьСоставОрганизаций(Параметр);
		
		Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ГруппаФНС;
		Элементы.ГруппаСтраницыФНС.ТекущаяСтраница = Элементы.ГруппаУведомления;
		
		Если ЗначениеЗаполнено(ИмяДокументаУведомлениеОКонтролируемыхСделках) Тогда
			Если Тип("ДокументСсылка." + ИмяДокументаУведомлениеОКонтролируемыхСделках) = ТипЗначенияПараметра Тогда 
				СменитьЗакладкуУведомленийПриНеобходимости("Документы", Ложь);
			КонецЕсли;
		КонецЕсли;
		
		Если Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") = ТипЗначенияПараметра Тогда 
			СменитьЗакладкуУведомленийПриНеобходимости("ПрочиеУведомления", Ложь);
		КонецЕсли;
		
		Если Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") = ТипЗначенияПараметра Тогда 
			СменитьЗакладкуУведомленийПриНеобходимости("Файлы", Ложь);
		КонецЕсли;
		ПриСменеСтраницы(Неопределено, Неопределено);
		
		Элементы.ТаблицаУведомления.ТекущаяСтрока = Параметр;
		
	ИначеЕсли ИмяСобытия = "Показать циклы обмена отчета ПФР" Тогда
		
		Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ГруппаПФР;
		Элементы.ГруппаСтраницыПФР.ТекущаяСтраница = Элементы.ОтчетностьПФР;
		ПриСменеСтраницы(Неопределено, Неопределено);
		
		Элементы.ОтобратьОтчетностьПФР.Пометка = Истина;
		УстановитьВидимостьПоляПредставленияПредмета(ЭтаФорма);
		
		ПредметОтчетностиПФР = Параметр;

		УстановитьОтборПоПредмету(ЭтаФорма);
		
	ИначеЕсли ИмяСобытия = "Показать циклы обмена отчета статистики" Тогда

		Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ГруппаФСГС;
		Элементы.ГруппаСтраницыФСГС.ТекущаяСтраница = Элементы.ОтчетностьФСГС;
		ПриСменеСтраницы(Неопределено, Неопределено);
		
		Элементы.ОтобратьОтчетностьФСГС.Пометка = Истина;
		УстановитьВидимостьПоляПредставленияПредмета(ЭтаФорма);
		
		ПредметОтчетностиФСГС = Параметр;

		УстановитьОтборПоПредмету(ЭтаФорма);
		
	ИначеЕсли ИмяСобытия = "Запись_ОтправкиФСС" ИЛИ ИмяСобытия = "Редактирование_ОтправкиФСС" 
		ИЛИ ИмяСобытия = "Запись_ОтправкиФСРАР" ИЛИ ИмяСобытия = "Редактирование_ОтправкиФСРАР"
		ИЛИ ИмяСобытия = "Запись_ОтправкиРПН" ИЛИ ИмяСобытия = "Редактирование_ОтправкиРПН" 
		ИЛИ ИмяСобытия = "Запись_ОтправкиФТС" ИЛИ ИмяСобытия = "Редактирование_ОтправкиФТС" Тогда
		
		ПриСменеСтраницы(Неопределено, Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСоставОрганизаций(Источник)

	// Определяем организацию по источнику
	ОрганизацияИсточника = Неопределено;

	Если ТипЗнч(Источник) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
		ОрганизацияИсточника = Источник.Организация;
	Иначе
		Попытка
			ОрганизацияИсточника = КонтекстЭДОКлиент.ПолучитьРеквизитНаСервере(Источник, "Организация");
		Исключение
			ОрганизацияИсточника = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервераПереопределяемый.ПолучитьСсылкуНаОрганизациюИсточника(Источник);
		КонецПопытки
	КонецЕсли;
	
	// Если не удалось определить организацию, то дальнейшие действия не выполняем
	Если ОрганизацияИсточника = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Корректируем состав организаций в отборе журнала управления обменом
	Если Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка Тогда
		// Если стоит режим выбора одной организации, то подменяем организацию на организацию источника
		Если ОтборУчетнаяЗапись <> ОрганизацияИсточника Тогда
			ОтборУчетнаяЗапись = ОрганизацияИсточника;
		КонецЕсли;
	Иначе
		// Вариант, когда стоит режим выбора нескольких организации
		
		НайденныеСтроки = УчетныеЗаписи.НайтиСтроки(Новый Структура("Объект", ОрганизацияИсточника));
		Если НайденныеСтроки.Количество() = 0 Тогда
			// Если организации нет в списке, то добавлеям
			НоваяСтрока = УчетныеЗаписи.Добавить();
			НоваяСтрока.Пометка = Истина;
			НоваяСтрока.Объект 	= ОрганизацияИсточника;
		Иначе
			// Если организация есть в списке, то проставляем у нее Пометку 
			СтрокаСОрганизацией = НайденныеСтроки[0];
			Если НЕ СтрокаСОрганизацией.Пометка Тогда
				СтрокаСОрганизацией.Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьЗапросыИОН(Команда)
	
	Элементы.ТаблицаЗапросыИОН.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаЗапросыИОН.Видимость Тогда
		Элементы.ТаблицаЦиклыОбменаЗапросыИОН.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗапросыИОНВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаЗапросыИОНОтвет" Тогда 
		СтандартнаяОбработка = Ложь;
		Если Элемент.ТекущиеДанные.Ответ Тогда // есть ответ
			ПоказатьОтветНаЗапросИОН(ВыбраннаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтветНаЗапросИОН(Запрос, СтандартнаяОбработка = Неопределено)
	
	Если ТипЗнч(Запрос) = Тип("ДокументСсылка.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика")
		И ЗначениеЗаполнено(Запрос) Тогда
		КонтекстЭДОКлиент.ПоказатьОтветНаЗапросИОН(Запрос);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗапросыИОНПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Если Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка Тогда
		СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", Новый Структура("Организация", ОтборУчетнаяЗапись));
		ОткрытьФорму("Документ.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика.Форма.ФормаДокумента", СтруктураПараметров);
	Иначе
		ОткрытьФорму("Документ.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика.Форма.ФормаДокумента");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	СохраняемыеВНастройкахДанныеМодифицированы = Истина;
	
	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница.Имя;
	ТекущаяСтраницаФНС = Элементы.ГруппаСтраницыФНС.ТекущаяСтраница.Имя;
	
	Попытка 
		ТекущаяСтраницаПФР = Элементы.ГруппаСтраницыПФР.ТекущаяСтраница.Имя;
	Исключение
		Элементы.ГруппаСтраницыПФР.ТекущаяСтраница = Элементы.ОтчетностьПФР;
		ТекущаяСтраницаПФР = Элементы.ГруппаСтраницыПФР.ТекущаяСтраница.Имя;
	КонецПопытки;
	
	Попытка 
		ТекущаяСтраницаФСГС = Элементы.ГруппаСтраницыФСГС.ТекущаяСтраница.Имя;
	Исключение
		Элементы.ГруппаСтраницыФСГС.ТекущаяСтраница = Элементы.ОтчетностьФСГС;
		ТекущаяСтраницаФСГС = Элементы.ГруппаСтраницыФСГС.ТекущаяСтраница.Имя;
	КонецПопытки;
	
	УстановитьПараметрыПроизвольныхЗапросов(ТекущаяСтраница, ТекущаяСтраницаФНС, ТекущаяСтраницаПФР, ТекущаяСтраницаФСГС);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТребованияПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаТребования.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаТребования.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаТребования.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельТребованияОткрыть(Команда)
	СсылкаНаЭлемент = Элементы.ТаблицаТребования.ТекущаяСтрока;
	Если СсылкаНаЭлемент <> Неопределено Тогда 
		ПоказатьЗначение(, СсылкаНаЭлемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьТребования(Команда)
	Элементы.ТаблицаТребования.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаТребования.Видимость Тогда 
		Элементы.ТаблицаЦиклыОбменаТребования.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТребованияОтображатьСписокЦикловОбмена(Команда)
	Элементы.КнопкаТребованияОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.КнопкаТребованияОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаТребования.Видимость = Элементы.КнопкаТребованияОтображатьСписокЦикловОбмена.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЗаявлениеВывестиВОкно(Команда)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки.Количество();
	МассивВыделенныхСтрок = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки Цикл
		МассивВыделенныхСтрок.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	КонтекстЭДОКлиент.ПоказатьДокументыЦикловОбмена(МассивВыделенныхСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЗаявлениеПоказатьОтчетОСостоянии(Команда)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки.Количество();
	МассивВыделенныхСтрок = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки Цикл
		МассивВыделенныхСтрок.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	КонтекстЭДОКлиент.ПоказатьОтчетыОСостоянииЦикловОбмена(ВыделеннаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЗаявлениеВыгрузить(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки;

	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЗаявлениеВыгрузитьКонтейнеры(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки;

	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЗаявлениеВыгрузитьСодержимое(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки;
	
	ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЦиклыОбменаЗаявление(Команда)
	
	Предмет = Элементы.ТаблицаЦиклыОбменаЗаявление.ТекущиеДанные;
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки.Количество();
	Если КоличествоВыделенныхСтрок > 0 Тогда 
		Предмет = Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки[0];
		ПоказатьЗначение(, ПолучитьСсылкуНаРеквизит(Предмет, "Предмет"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельЦиклыОбменаНайтиЗаявлениеВСписке(Команда)
	
	Если Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки.Количество() > 0 Тогда
		ПредметыЦиклаОбмена = КонтекстЭДОКлиент.ПолучитьПредметыЦиклаОбмена(Элементы.ТаблицаЦиклыОбменаЗаявление.ВыделенныеСтроки[0]);
		Для Каждого Предмет Из ПредметыЦиклаОбмена Цикл
			ТипЗнчПредмет = ТипЗнч(Предмет);
			Если ТипЗнчПредмет = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
				НачатьЗамерВремени();
				ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.УправлениеОтчетностью");
			ИначеЕсли ТипЗнчПредмет = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
				СтруктураПараметров = Новый Структура("ТекущаяСтрока", Предмет);
				ОткрытьФорму("Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов.ФормаСписка", СтруктураПараметров);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьЗаявление(Команда)
	
	Элементы.ТаблицаЦиклыОбменаЗаявление.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьВыгрузитьПакет(Команда)
	
	ВидимыеЦиклы = Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.ВыделенныеСтроки;
	
	ВыгрузитьПакеты(ВидимыеЦиклы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПакеты(ВидимыеЦиклы)
	
	Если ВидимыеЦиклы.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбраны циклы обмена!'"));
	Иначе
		Если ВидимыеЦиклы.Количество() = 1 Тогда
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выгрузить цикл обмена ""%1""?'"), КонтекстЭДОКлиент.ПредставлениеЦиклаОбмена(ВидимыеЦиклы[0]));
		Иначе
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выгрузить выбранные %1 циклов обмена?'"), Строка(ВидимыеЦиклы.Количество()));
		КонецЕсли;
		ДополнительныеПараметры = Новый Структура("ВидимыеЦиклы", ВидимыеЦиклы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьПакетыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПакетыЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	ВидимыеЦиклы = ДополнительныеПараметры.ВидимыеЦиклы;
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДОКлиент.ВыгрузитьПакетыПоДокументооборотамСдачиОтчетностиВФНС(ВидимыеЦиклы)
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПредставленияПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда 
		Если ЦиклыОбменаПредставления.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаПредставления.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаПредставления.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьПредставления(Команда)
	Элементы.ТаблицаПредставления.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаПредставления.Видимость Тогда 
		Элементы.ТаблицаЦиклыОбменаПредставления.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставленияОтображатьСписокЦикловОбмена(Команда)
	Элементы.ТаблицаПредставленияКнопкаОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.ТаблицаПредставленияКнопкаОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаПредставления.Видимость = Элементы.ТаблицаПредставленияКнопкаОтображатьСписокЦикловОбмена.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредставленияСоздать(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СменитьЗакладкуПредставленийПриНеобходимости", 
		ЭтотОбъект);
		
	// эта опись содержит требования, ответов еще нет
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ЗапретитьСозданиеПисьмаВОтветНаТребованиеПоДекларации", Истина);
	ДополнительныеПараметры.Вставить("ВыполняемоеОповещение", 		ОписаниеОповещения);
	
	РежимОднойУчетнойЗаписи = Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка;
	Если РежимОднойУчетнойЗаписи Тогда
		Организация = ОтборУчетнаяЗапись;
	Иначе
		Организация = Неопределено;
	КонецЕсли;
	
	КонтекстЭДОКлиент.СоздатьОтветНаТребованиеСВыборомТребования(,Организация, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТребованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ВходящаяОпись = ВыбраннаяСтрока;
	
	Если Поле.Имя = "ТаблицаТребованияОтветы" Тогда
		Если Элемент.ТекущиеДанные.КоличествоОтветовОформлениеЯчейки.Текст = "<не требуется>" Тогда
			// эта опись не содержит требований, ответы не требуются
			ПоказатьЗначение(, ВходящаяОпись);	
		ИначеЕсли Элемент.ТекущиеДанные.КоличествоОтветовОформлениеЯчейки.Текст = "Создать" Тогда
			КонтекстЭДОКлиент.СоздатьОтветНаТребованиеСВыборомТребования(ВходящаяОпись);
		Иначе
			// эта опись содержит требования, ответы уже есть
			ПоказатьОтветыНаВходящуюопись(ВходящаяОпись);
		КонецЕсли;
	Иначе
		ПоказатьЗначение(, ВходящаяОпись);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтветыНаВходящуюопись(ВходящаяОпись)
	
	МассивОтветов = ПолучитьМассивОтветовПоОписиВходящихДокументов(ВходящаяОпись);
	КонтекстЭДОКлиент.ПоказатьОтветыНаТребованияФНС(МассивОтветов);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросыИОСОтображатьСписокЦикловОбмена(Команда)
	
	Элементы.КнопкаЗапросыИОСОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.КнопкаЗапросыИОСОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаЗапросыИОС.Видимость = Элементы.КнопкаЗапросыИОСОтображатьСписокЦикловОбмена.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьЗапросыИОС(Команда)
	
	Элементы.ТаблицаЗапросыИОС.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаЗапросыИОС.Видимость Тогда
		Элементы.ТаблицаЦиклыОбменаЗапросыИОС.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтветНаЗапросИОС(Запрос, СтандартнаяОбработка = Неопределено)
	
	Если ТипЗнч(Запрос) = Тип("ДокументСсылка.ЗапросНаИнформационноеОбслуживаниеСтрахователя")
		И ЗначениеЗаполнено(Запрос) Тогда
		КонтекстЭДОКлиент.ПоказатьОтветНаЗапросИОС(Запрос);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗапросыИОСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаЗапросыИОСОтвет" Тогда
		СтандартнаяОбработка = Ложь;
		Если Элемент.ТекущиеДанные.Ответ Тогда // есть ответ
			ПоказатьОтветНаЗапросИОС(ВыбраннаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗапросыИОСПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Если Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка Тогда
		СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", Новый Структура("Организация", ОтборУчетнаяЗапись));
		ОткрытьФорму("Документ.ЗапросНаИнформационноеОбслуживаниеСтрахователя.Форма.ФормаДокумента", СтруктураПараметров);
	Иначе
		ОткрытьФорму("Документ.ЗапросНаИнформационноеОбслуживаниеСтрахователя.Форма.ФормаДокумента");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗапросыИОСПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаЗапросыИОС.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаЗапросыИОС.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаЗапросыИОС.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФССВыгрузитьОтправленныйПакет(Команда)
	ВыгрузитьСодержимоеОтправкиФСС(0);
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФССВыгрузитьПолученнуюКвитанцию(Команда)
	ВыгрузитьСодержимоеОтправкиФСС(1);
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФССВыгрузитьПолученныйПротоколОбработки(Команда)
	ВыгрузитьСодержимоеОтправкиФСС(2);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтправкиОтчетностьФССВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаОтправкиОтчетностьФССКолонка1" Тогда
		СтандартнаяОбработка = Ложь;
	ИначеЕсли Поле.Имя = "ТаблицаОтправкиОтчетностьФССКолонка2" Тогда
		КонтекстЭДОКлиент.ПоказатьПротоколОбработкиПоСсылкеИсточникаДляФСС(ВыбраннаяСтрока);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьОтчетностьФСС(Команда)
	
	Элементы.ТаблицаОтправкиОтчетностьФСС.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтправкиНайтиОтчетФССВСписке(Команда)
	
	Если Элементы.ТаблицаОтправкиОтчетностьФСС.ВыделенныеСтроки.Количество() > 0 Тогда
		
		ОбъектФСС = ПолучитьСсылкуНаРеквизит(Элементы.ТаблицаОтправкиОтчетностьФСС.ВыделенныеСтроки[0], "ОтчетСсылка");
		
		ТипЗнчОбъектФСС = ТипЗнч(ОбъектФСС);
		Если ТипЗнчОбъектФСС = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			НачатьЗамерВремени();
			ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.УправлениеОтчетностью");
		ИначеЕсли ТипЗнчОбъектФСС = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
			СтруктураПараметров = Новый Структура("ТекущаяСтрока", ОбъектФСС);
			ОткрытьФорму("Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов.ФормаСписка", СтруктураПараметров);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтправкиРегламентированныйОтчетФСС(Команда)
	
	Если Элементы.ТаблицаОтправкиОтчетностьФСС.ВыделенныеСтроки.Количество() > 0 Тогда
		ОбъектФСС = ПолучитьСсылкуНаРеквизит(Элементы.ТаблицаОтправкиОтчетностьФСС.ВыделенныеСтроки[0], "ОтчетСсылка");
		ПоказатьЗначение(, ОбъектФСС);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СодержимоеОтправкиФССВоВременномХранилищеНаСервере(РежимВыгрузки, СсылкаНаОбъектОтправкиФСС, ИмяФайлаДляКлиента)
	
	Если РежимВыгрузки = 0 Тогда
		СсылкаНаСодержимое = СсылкаНаОбъектОтправкиФСС["ЗашифрованныйПакет"];
		ИмяФайлаДляКлиента = СсылкаНаОбъектОтправкиФСС["ИмяФайлаПакета"];
	ИначеЕсли РежимВыгрузки = 1 Тогда
		СсылкаНаСодержимое = СсылкаНаОбъектОтправкиФСС["Квитанция"];
		ИмяФайлаДляКлиента = СсылкаНаОбъектОтправкиФСС["ИдентификаторОтправкиНаСервере"] + ".p7e";
	ИначеЕсли РежимВыгрузки = 2 Тогда
		СсылкаНаСодержимое = СсылкаНаОбъектОтправкиФСС["Протокол"];
		ИмяФайлаДляКлиента = НСтр("ru = 'Протокол'") + " " + СсылкаНаОбъектОтправкиФСС["ИдентификаторОтправкиНаСервере"] + ".html";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Если СсылкаНаСодержимое = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Содержимое = СсылкаНаСодержимое.Получить();
	Если Содержимое = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если РежимВыгрузки = 2 Тогда
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		ВременныйФайл = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаТекста.UTF8);
		ВременныйФайл.Записать(Содержимое);
		ВременныйФайл.Закрыть();
		Содержимое = Новый ДвоичныеДанные(ИмяВременногоФайла);
		Попытка
			УдалитьФайлы(ИмяВременногоФайла);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(Содержимое, Новый УникальныйИдентификатор());
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьСодержимоеОтправкиФСС(РежимВыгрузки)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаОтправкиОтчетностьФСС.ВыделенныеСтроки.Количество();
	Если КоличествоВыделенныхСтрок <= 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбраны отправки ФСС!'"));
		Возврат;
	КонецЕсли;
	
	ИмяФайла = Неопределено;
	АдресВоВременномХранилище = СодержимоеОтправкиФССВоВременномХранилищеНаСервере(РежимВыгрузки, Элементы.ТаблицаОтправкиОтчетностьФСС.ВыделенныеСтроки[0], ИмяФайла);
	
	Если РежимВыгрузки = 0 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Зашифрованный пакет отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки отправленного пакета'");
		
	ИначеЕсли РежимВыгрузки = 1 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Квитанция об успехе отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки полученной квитанции'");
		
	ИначеЕсли РежимВыгрузки = 2 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Протокол обработки отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки полученного протокола обработки'");
		
	Иначе
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла = КонтекстЭДОКлиент.СформироватьИмяФайла(ИмяФайла);
	ОписаниеФайла = Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла, АдресВоВременномХранилище);
	МассивОписанийПолучаемыхФайлов = Новый Массив;
	МассивОписанийПолучаемыхФайлов.Добавить(ОписаниеФайла);
	
	ОперацииСФайламиЭДКОКлиент.СохранитьФайлы(МассивОписанийПолучаемыхФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленияПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаУведомления.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаУведомления.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаУведомления.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;
	 
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьУведомления(Команда)
	Элементы.ТаблицаУведомления.Обновить();
	Если Элементы.ТаблицаЦиклыОбменаУведомления.Видимость Тогда 
		Элементы.ТаблицаЦиклыОбменаУведомления.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УведомленияОтображатьСписокЦикловОбмена(Команда)
	Элементы.ТаблицаУведомленияКнопкаОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.ТаблицаУведомленияКнопкаОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаУведомления.Видимость = Элементы.ТаблицаУведомленияКнопкаОтображатьСписокЦикловОбмена.Пометка;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СуществуетРегламентированныйОтчетРозничныеЦеныНаТабак()
	Если Метаданные.Отчеты.Найти("РегламентированныйОтчетРозничныеЦеныНаТабак") <> Неопределено Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура КомандаУведомленияСоздать(Команда)
	
	// наполняем список выбора в зависимости от того, какие объекты в системе существуют
	СписокВариантовВыбора = Новый СписокЗначений;
	
	Если ЗначениеЗаполнено(ИмяДокументаУведомлениеОКонтролируемыхСделках) Тогда
		СписокВариантовВыбора.Добавить("Документы", НСтр("ru='Уведомление о контролируемых сделках'"));
	КонецЕсли;
	
	Если СуществуетРегламентированныйОтчетРозничныеЦеныНаТабак() Тогда
		СписокВариантовВыбора.Добавить("УведомленияОРозничныхЦенахНаТабак", НСтр("ru='Уведомления о розничных ценах на табак'"));
	КонецЕсли;
	
	СписокВариантовВыбора.Добавить("УведомленияОПолучателеДокументов", НСтр("ru='Уведомления о получателе документов'"));
	
	СписокВариантовВыбора.Добавить("РеестрыФНС", НСтр("ru='Реестры по НДС'"));
	
	Если СписокВариантовВыбора.Количество() = 0 Тогда
		ПредставлениеУведомленийОСпецрежимах = НСтр("ru='Уведомления'");
	Иначе
		ПредставлениеУведомленийОСпецрежимах = НСтр("ru='Прочие уведомления'");
	КонецЕсли;
	
	СписокВариантовВыбора.Добавить("ПрочиеУведомления", ПредставлениеУведомленийОСпецрежимах);
			
	СписокВариантовВыбора.Добавить("Файлы", НСтр("ru='Загрузить из файла'"));
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаУведомленияСоздатьЗавершение", ЭтотОбъект);
	СписокВариантовВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выбор действия");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУведомленияСоздатьПродолжитьЗагрузкуФайла(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат Тогда
		КонтекстЭДОКлиент.ПолучениеФайловДляИмпортаНачало(УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУведомленияСоздатьЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		
		// Определяем организацию, по которой нужно создать документ
		Организации = ВыбранныеУчетныеЗаписи(ЭтаФорма);
		Если Организации.Количество() = 1 Тогда
			Организация = Организации[0];
		Иначе
			Организация = Неопределено;
		КонецЕсли;
		
		// Открываем соответствующую форму
		Если РезультатВыбора.Значение = "Документы" Тогда
			СменитьЗакладкуУведомленийПриНеобходимости("Документы");
			ОткрытьФорму("Документ." + ИмяДокументаУведомлениеОКонтролируемыхСделках + ".ФормаОбъекта", Новый Структура("Организация", Организация));
			
		ИначеЕсли РезультатВыбора.Значение = "УведомленияОРозничныхЦенахНаТабак" Тогда
			СменитьЗакладкуУведомленийПриНеобходимости("УведомленияОРозничныхЦенахНаТабак");
			
			ИсточникОтчета = "РегламентированныйОтчетРозничныеЦеныНаТабак";
			
			ОткрытьФорму("Отчет." + ИсточникОтчета + ".Форма.ОсновнаяФорма", Новый Структура("Организация", Организация));
			
		ИначеЕсли РезультатВыбора.Значение = "УведомленияОПолучателеДокументов" Тогда
			СменитьЗакладкуУведомленийПриНеобходимости("УведомленияОПолучателеДокументов");
			
			ОткрытьФорму("Документ.УведомлениеОПолучателеДокументов.Форма.ФормаДокумента", Новый Структура("Организация", Организация));
			
		ИначеЕсли РезультатВыбора.Значение = "ПрочиеУведомления" Тогда
			СменитьЗакладкуУведомленийПриНеобходимости("ПрочиеУведомления");
			
			МассивВидовУведомлений = ВидыПрочихОтправляемыхУведомлений();
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("ВидыПрочихУведомлений", ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.МассивВидовПрочихУведомленийПоддерживающихДокументооборот(МассивВидовУведомлений));
			СтруктураПараметров.Вставить("Организация", Организация);
			ОткрытьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.ФормаОбъекта", СтруктураПараметров, ЭтаФорма);
		ИначеЕсли РезультатВыбора.Значение = "Файлы" Тогда				
			СменитьЗакладкуУведомленийПриНеобходимости("Файлы");
			КонтекстЭДОКлиент.ПолучениеФайловДляИмпортаНачало(УникальныйИдентификатор);
		ИначеЕсли РезультатВыбора.Значение = "РеестрыФНС" Тогда
			
			СменитьЗакладкуУведомленийПриНеобходимости("РеестрыФНС");
			
			ТекстВопроса = НСтр("ru = 'Создание реестров НДС выполняется из формы ""1С-Отчетность"".
                                 |Перейти к форме ""1С-Отчетность""?'");
			
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"КомандаУведомленияСоздатьПослеОтветаНаВопрос", 
				ЭтотОбъект); 
			
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУведомленияСоздатьПослеОтветаНаВопрос(Ответ, ВходящийКонтекст) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ПараметрыОткрытия = Новый Структура();
		ПараметрыОткрытия.Вставить("Раздел", ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Отчеты"));
	
		ОткрытьФорму("ОбщаяФорма.РегламентированнаяОтчетность", ПараметрыОткрытия, , "1С-Отчетность", );
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФСРАРВыгрузитьОтправленныйПакет(Команда)
	ВыгрузитьСодержимоеОтправкиФСРАР(0);
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФСРАРВыгрузитьПолученныйПротоколОбработки(Команда)
	ВыгрузитьСодержимоеОтправкиФСРАР(2);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтправкиОтчетностьФСРАРВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаОтправкиОтчетностьФСРАРКолонка1" Тогда
		СтандартнаяОбработка = Ложь;
	ИначеЕсли Поле.Имя = "ТаблицаОтправкиОтчетностьФСРАРКолонка2" Тогда
		КонтекстЭДОКлиент.ПоказатьПротоколОбработкиПоСсылкеИсточникаДляФСРАР(ВыбраннаяСтрока);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьОтчетностьФСРАР(Команда)
	
	Элементы.ТаблицаОтправкиОтчетностьФСРАР.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтправкиНайтиОтчетФСРАРВСписке(Команда)
	
	Если Элементы.ТаблицаОтправкиОтчетностьФСРАР.ВыделенныеСтроки.Количество() > 0 Тогда
		
		ОбъектФСРАР = ПолучитьСсылкуНаРеквизит(Элементы.ТаблицаОтправкиОтчетностьФСРАР.ВыделенныеСтроки[0], "ОтчетСсылка");
		
		ТипЗнчОбъектФСРАР = ТипЗнч(ОбъектФСРАР);
		Если ТипЗнчОбъектФСРАР = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			НачатьЗамерВремени();
			ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.УправлениеОтчетностью");
		ИначеЕсли ТипЗнчОбъектФСРАР = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
			СтруктураПараметров = Новый Структура("ТекущаяСтрока", ОбъектФСРАР);
			ОткрытьФорму("Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов.ФормаСписка", СтруктураПараметров);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтправкиРегламентированныйОтчетФСРАР(Команда)
	
	Если Элементы.ТаблицаОтправкиОтчетностьФСРАР.ВыделенныеСтроки.Количество() > 0 Тогда
		ОбъектФСРАР = ПолучитьСсылкуНаРеквизит(Элементы.ТаблицаОтправкиОтчетностьФСРАР.ВыделенныеСтроки[0], "ОтчетСсылка");
		ПоказатьЗначение(, ОбъектФСРАР);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СодержимоеОтправкиФСРАРВоВременномХранилищеНаСервере(РежимВыгрузки, СсылкаНаОбъектОтправкиФСРАР, ИмяФайлаДляКлиента)
	
	Если РежимВыгрузки = 0 Тогда
		СсылкаНаСодержимое = СсылкаНаОбъектОтправкиФСРАР["ЗашифрованныйПакет"];
		ИмяФайлаДляКлиента = СсылкаНаОбъектОтправкиФСРАР["ИмяФайлаПакета"];
	ИначеЕсли РежимВыгрузки = 2 Тогда
		СсылкаНаСодержимое = СсылкаНаОбъектОтправкиФСРАР["Протокол"];
		ИмяФайлаДляКлиента = НСтр("ru = 'Протокол'") + " " + СсылкаНаОбъектОтправкиФСРАР["ИдентификаторОтправкиНаСервере"] + ".html";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Если СсылкаНаСодержимое = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Содержимое = СсылкаНаСодержимое.Получить();
	Если Содержимое = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если РежимВыгрузки = 2 Тогда
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		ВременныйФайл = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаТекста.UTF8);
		ВременныйФайл.Записать(Содержимое);
		ВременныйФайл.Закрыть();
		Содержимое = Новый ДвоичныеДанные(ИмяВременногоФайла);
		Попытка
			УдалитьФайлы(ИмяВременногоФайла);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(Содержимое, Новый УникальныйИдентификатор());
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьСодержимоеОтправкиФСРАР(РежимВыгрузки)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаОтправкиОтчетностьФСРАР.ВыделенныеСтроки.Количество();
	Если КоличествоВыделенныхСтрок <= 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбраны отправки в Росалкогольрегулирование!'"));
		Возврат;
	КонецЕсли;
	
	ИмяФайла = Неопределено;
	АдресВоВременномХранилище = СодержимоеОтправкиФСРАРВоВременномХранилищеНаСервере(РежимВыгрузки, Элементы.ТаблицаОтправкиОтчетностьФСРАР.ВыделенныеСтроки[0], ИмяФайла);
	
	Если РежимВыгрузки = 0 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Зашифрованный пакет отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки отправленного пакета'");
		
	ИначеЕсли РежимВыгрузки = 1 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Квитанция об успехе отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки полученной квитанции'");
		
	ИначеЕсли РежимВыгрузки = 2 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Протокол обработки отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки полученного протокола обработки'");
		
	Иначе
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла = КонтекстЭДОКлиент.СформироватьИмяФайла(ИмяФайла);
	ОписаниеФайла = Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла, АдресВоВременномХранилище);
	МассивОписанийПолучаемыхФайлов = Новый Массив;
	МассивОписанийПолучаемыхФайлов.Добавить(ОписаниеФайла);
	
	ОперацииСФайламиЭДКОКлиент.СохранитьФайлы(МассивОписанийПолучаемыхФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьРПНВыгрузитьОтправленныйПакет(Команда)
	ВыгрузитьСодержимоеОтправкиРПН(0);
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьРПНВыгрузитьПолученныйПротоколОбработки(Команда)
	ВыгрузитьСодержимоеОтправкиРПН(2);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтправкиОтчетностьРПНВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаОтправкиОтчетностьРПНКолонка1" Тогда
		СтандартнаяОбработка = Ложь;
	ИначеЕсли Поле.Имя = "ТаблицаОтправкиОтчетностьРПНКолонка2" Тогда
		КонтекстЭДОКлиент.ПоказатьПротоколОбработкиПоСсылкеИсточникаДляРПН(ВыбраннаяСтрока);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьОтчетностьРПН(Команда)
	
	Элементы.ТаблицаОтправкиОтчетностьРПН.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтправкиНайтиОтчетРПНВСписке(Команда)
	
	Если Элементы.ТаблицаОтправкиОтчетностьРПН.ВыделенныеСтроки.Количество() > 0 Тогда
		
		ОбъектРПН = ПолучитьСсылкуНаРеквизит(Элементы.ТаблицаОтправкиОтчетностьРПН.ВыделенныеСтроки[0], "ОтчетСсылка");
		
		ТипЗнчОбъектРПН = ТипЗнч(ОбъектРПН);
		Если ТипЗнчОбъектРПН = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			НачатьЗамерВремени();
			ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.УправлениеОтчетностью");
		ИначеЕсли ТипЗнчОбъектРПН = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
			СтруктураПараметров = Новый Структура("ТекущаяСтрока", ОбъектРПН);
			ОткрытьФорму("Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов.ФормаСписка", СтруктураПараметров);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтправкиРегламентированныйОтчетРПН(Команда)
	
	Если Элементы.ТаблицаОтправкиОтчетностьРПН.ВыделенныеСтроки.Количество() > 0 Тогда
		ОбъектРПН = ПолучитьСсылкуНаРеквизит(Элементы.ТаблицаОтправкиОтчетностьРПН.ВыделенныеСтроки[0], "ОтчетСсылка");
		ПоказатьЗначение(,ОбъектРПН);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СодержимоеОтправкиРПНВоВременномХранилищеНаСервере(РежимВыгрузки, СсылкаНаОбъектОтправкиРПН, ИмяФайлаДляКлиента)
	
	Если РежимВыгрузки = 0 Тогда
		СсылкаНаСодержимое = СсылкаНаОбъектОтправкиРПН["ЗашифрованныйПакет"];
		ИмяФайлаДляКлиента = СсылкаНаОбъектОтправкиРПН["ИмяФайлаПакета"];
	ИначеЕсли РежимВыгрузки = 2 Тогда
		СсылкаНаСодержимое = СсылкаНаОбъектОтправкиРПН["Протокол"];
		ИмяФайлаДляКлиента = НСтр("ru = 'Протокол'") + " " + СсылкаНаОбъектОтправкиРПН["ИдентификаторОтправкиНаСервере"] + ".html";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Если СсылкаНаСодержимое = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Содержимое = СсылкаНаСодержимое.Получить();
	Если Содержимое = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если РежимВыгрузки = 2 Тогда
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		ВременныйФайл = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаТекста.UTF8);
		ВременныйФайл.Записать(Содержимое);
		ВременныйФайл.Закрыть();
		Содержимое = Новый ДвоичныеДанные(ИмяВременногоФайла);
		Попытка
			УдалитьФайлы(ИмяВременногоФайла);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(Содержимое, Новый УникальныйИдентификатор());
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьСодержимоеОтправкиРПН(РежимВыгрузки)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаОтправкиОтчетностьРПН.ВыделенныеСтроки.Количество();
	Если КоличествоВыделенныхСтрок <= 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Не выбраны отправки в Росприродназдор!'"));
		Возврат;
	КонецЕсли;
	
	ИмяФайла = Неопределено;
	АдресВоВременномХранилище = СодержимоеОтправкиРПНВоВременномХранилищеНаСервере(РежимВыгрузки, Элементы.ТаблицаОтправкиОтчетностьРПН.ВыделенныеСтроки[0], ИмяФайла);
	
	Если РежимВыгрузки = 0 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Зашифрованный пакет отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки отправленного пакета'");
		
	ИначеЕсли РежимВыгрузки = 2 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Протокол обработки отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки полученного протокола обработки'");
		
	Иначе
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла = КонтекстЭДОКлиент.СформироватьИмяФайла(ИмяФайла);
	ОписаниеФайла = Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла, АдресВоВременномХранилище);
	МассивОписанийПолучаемыхФайлов = Новый Массив;
	МассивОписанийПолучаемыхФайлов.Добавить(ОписаниеФайла);
	
	ОперацииСФайламиЭДКОКлиент.СохранитьФайлы(МассивОписанийПолучаемыхФайлов);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Страница "ФТС" - Список "Отчетность"

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФТСВыгрузитьОтправленныйПодписанныйОтчет(Команда)
	ВыгрузитьСодержимоеОтправкиФТС(0);
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФТСВыгрузитьПолученнуюКвитанцию(Команда)
	ВыгрузитьСодержимоеОтправкиФТС(1);
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетностьФТСВыгрузитьПолученныйПротоколОбработки(Команда)
	ВыгрузитьСодержимоеОтправкиФТС(2);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтправкиОтчетностьФТСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаОтправкиОтчетностьФТСКолонка1" Тогда
		СтандартнаяОбработка = Ложь;
	ИначеЕсли Поле.Имя = "ТаблицаОтправкиОтчетностьФТСКолонка2" Тогда
		КонтекстЭДОКлиент.ПоказатьПротоколОбработкиПоСсылкеИсточникаДляФТС(ВыбраннаяСтрока);
		СтандартнаяОбработка = Ложь;
	ИначеЕсли Поле.Имя = "ТаблицаОтправкиОтчетностьФТСКолонка3" Тогда
		Если ОтправкаНаКонтроле(ВыбраннаяСтрока) Тогда
			ПерейтиПоНавигационнойСсылке("https://edata.customs.ru/FtsPersonalCabinetWeb/Services/Obtain/Stat");
		КонецЕсли;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтправкаНаКонтроле(Отправка)
	
	Возврат Отправка.НаКонтроле;
	
КонецФункции

&НаКлиенте
Процедура КомандаОбновитьОтчетностьФТС(Команда)
	
	Элементы.ТаблицаОтправкиОтчетностьФТС.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтправкиНайтиОтчетФТСВСписке(Команда)
	
	Если Элементы.ТаблицаОтправкиОтчетностьФТС.ВыделенныеСтроки.Количество() > 0 Тогда
		
		ОбъектФТС = ПолучитьСсылкуНаРеквизит(Элементы.ТаблицаОтправкиОтчетностьФТС.ВыделенныеСтроки[0], "ОтчетСсылка");
		
		ТипЗнчОбъектФТС = ТипЗнч(ОбъектФТС);
		Если ТипЗнчОбъектФТС = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			НачатьЗамерВремени();
			ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.УправлениеОтчетностью");
		ИначеЕсли ТипЗнчОбъектФТС = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
			СтруктураПараметров = Новый Структура("ТекущаяСтрока", ОбъектФТС);
			ОткрытьФорму("Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов.ФормаСписка", СтруктураПараметров);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтправкиРегламентированныйОтчетФТС(Команда)
	
	Если Элементы.ТаблицаОтправкиОтчетностьФТС.ВыделенныеСтроки.Количество() > 0 Тогда
		ОбъектФТС = ПолучитьСсылкуНаРеквизит(Элементы.ТаблицаОтправкиОтчетностьФТС.ВыделенныеСтроки[0], "ОтчетСсылка");
		ПоказатьЗначение(,ОбъектФТС);
	КонецЕсли;
	
КонецПроцедуры
 
&НаСервереБезКонтекста
Функция СодержимоеОтправкиФТСВоВременномХранилищеНаСервере(РежимВыгрузки, СсылкаНаОбъектОтправкиФТС, ИмяФайлаДляКлиента)
	
	Если РежимВыгрузки = 0 Тогда
		СсылкаНаСодержимое = СсылкаНаОбъектОтправкиФТС["Подпись"];
		ИмяФайлаДляКлиента = НСтр("ru = 'Подпись'") + СсылкаНаОбъектОтправкиФТС["ИмяФайлаВыгрузки"];
	ИначеЕсли РежимВыгрузки = 1 Тогда
		СсылкаНаСодержимое = СсылкаНаОбъектОтправкиФТС["Квитанция"];
		ИмяФайлаДляКлиента = НСтр("ru = 'Квитанция'") + " " + СсылкаНаОбъектОтправкиФТС["ИмяФайлаВыгрузки"];
	ИначеЕсли РежимВыгрузки = 2 Тогда
		СсылкаНаСодержимое = СсылкаНаОбъектОтправкиФТС["Протокол"];
		ИмяФайлаДляКлиента = НСтр("ru = 'Протокол'") + " " + СсылкаНаОбъектОтправкиФТС["ИдентификаторОтправкиНаСервере"] + ".html";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Если СсылкаНаСодержимое = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Содержимое = СсылкаНаСодержимое.Получить();
	Если Содержимое = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если РежимВыгрузки = 2 Тогда
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		ВременныйФайл = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаТекста.UTF8);
		ВременныйФайл.Записать(Содержимое);
		ВременныйФайл.Закрыть();
		Содержимое = Новый ДвоичныеДанные(ИмяВременногоФайла);
		Попытка
			УдалитьФайлы(ИмяВременногоФайла);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(Содержимое, Новый УникальныйИдентификатор());
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьСодержимоеОтправкиФТС(РежимВыгрузки)
	
	КоличествоВыделенныхСтрок = Элементы.ТаблицаОтправкиОтчетностьФТС.ВыделенныеСтроки.Количество();
	Если КоличествоВыделенныхСтрок <= 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Не выбраны отправки в ФТС!'"));
		Возврат;
	КонецЕсли;
	
	ИмяФайла = Неопределено;
	АдресВоВременномХранилище = СодержимоеОтправкиФТСВоВременномХранилищеНаСервере(РежимВыгрузки, Элементы.ТаблицаОтправкиОтчетностьФТС.ВыделенныеСтроки[0], ИмяФайла);
	
	Если РежимВыгрузки = 0 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Подпись отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки отправленного пакета'");
		
	ИначеЕсли РежимВыгрузки = 1 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Квитанция отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки полученной квитанции'");
		
	ИначеЕсли РежимВыгрузки = 2 Тогда
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Протокол обработки отсутствует.'"));
			Возврат;
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Выберите каталог для выгрузки полученного протокола обработки'");
		
	Иначе
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла = КонтекстЭДОКлиент.СформироватьИмяФайла(ИмяФайла);
	ОписаниеФайла = Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла, АдресВоВременномХранилище);
	МассивОписанийПолучаемыхФайлов = Новый Массив;
	МассивОписанийПолучаемыхФайлов.Добавить(ОписаниеФайла);
	
	ОперацииСФайламиЭДКОКлиент.СохранитьФайлы(МассивОписанийПолучаемыхФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьЗапросыНаВыпискуЕГР(Команда)
	
	Элементы.ТаблицаЗапросыЕГР.Обновить();
	
	Если Элементы.ТаблицаЦиклыОбменаЗапросыЕГР.Видимость Тогда
		Элементы.ТаблицаЦиклыОбменаЗапросыЕГР.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗапросыНаВыпискуЕГРОтображатьСписокЦикловОбмена(Команда)
	
	Элементы.ТаблицаЗапросыЕГРЗапросыНаВыпискуЕГРОтображатьСписокЦикловОбмена.Пометка = НЕ Элементы.ТаблицаЗапросыЕГРЗапросыНаВыпискуЕГРОтображатьСписокЦикловОбмена.Пометка;
	Элементы.ТаблицаЦиклыОбменаЗапросыЕГР.Видимость = Элементы.ТаблицаЗапросыЕГРЗапросыНаВыпискуЕГРОтображатьСписокЦикловОбмена.Пометка;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗапросыЕГРПриАктивизацииСтроки(Элемент)
	
	Если Элемент.Видимость Тогда
		Если ЦиклыОбменаЗапросыЕГР.Параметры.Элементы.Найти(Новый ПараметрКомпоновкиДанных("СсылкаДляОтбора")) <> Неопределено Тогда
			ЦиклыОбменаЗапросыЕГР.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаЗапросыЕГР.ТекущаяСтрока);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗапросыЕГРПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Если Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка Тогда
		СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", Новый Структура("Организация", ОтборУчетнаяЗапись));
		ОткрытьФорму("Документ.ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП.Форма.ФормаДокумента", СтруктураПараметров);
	Иначе
		ОткрытьФорму("Документ.ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП.Форма.ФормаДокумента");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗапросыЕГРВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = "ЗапросыНаВыпискуИзЕГРЮЛ_ЕГРИПОтвет" Тогда 
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			Если Элемент.ТекущиеДанные.НаличиеОтвета Тогда // есть ответ
				КонтекстЭДОКлиент.ПоказатьОтветНаЗапросВыпискиЕГРЮЛ_ЕГРИП(ВыбраннаяСтрока);
			Иначе
				РедактироватьОбъект(ВыбраннаяСтрока);
			КонецЕсли;
		КонецЕсли;
	Иначе
		РедактироватьОбъект(ВыбраннаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтборУчетнаяЗаписьПриИзменении(Элемент)
	ПриСменеСтраницы(Неопределено, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьДокументы(Команда)
	УправлениеЗакладкойУведомлений("Документы");
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьФайлы(Команда)
	УправлениеЗакладкойУведомлений("Файлы");
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьПрочиеУведомления(Команда)
	УправлениеЗакладкойУведомлений("ПрочиеУведомления");
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьРеестрыФНС(Команда)
	УправлениеЗакладкойУведомлений("РеестрыФНС");
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьУведомленияОРозничныхЦенахНаТабак(Команда)
	УправлениеЗакладкойУведомлений("УведомленияОРозничныхЦенахНаТабак");
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьУведомленияОПолучателеДокументов(Команда)
	УправлениеЗакладкойУведомлений("УведомленияОПолучателеДокументов");
КонецПроцедуры

&НаСервере
Функция ВидыПрочихОтправляемыхУведомлений()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВидыОтправляемыхДокументов.Ссылка КАК Вид
		|ИЗ
		|	Справочник.ВидыОтправляемыхДокументов КАК ВидыОтправляемыхДокументов
		|ГДЕ
		|	ВидыОтправляемыхДокументов.Ссылка В ИЕРАРХИИ(&Уведомления)
		|	И ВидыОтправляемыхДокументов.Ссылка <> &Уведомления";

	Запрос.УстановитьПараметр("Уведомления", Справочники.ВидыОтправляемыхДокументов.Уведомления);

	Результат = Запрос.Выполнить().Выгрузить();
	МассивВидов = Результат.ВыгрузитьКолонку("Вид");
    Возврат МассивВидов;

КонецФункции 

&НаКлиенте
Процедура ТаблицаУведомленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение(, Элементы.ТаблицаУведомления.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Функция НачатьЗамерВремени()
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ОценкаПроизводительности") Тогда
		
		КлючеваяОперация = "ОткрытиеФормыРегламентированнаяОтчетность";
		ОбщегоНазначенияКлиент.ОбщийМодуль("ОценкаПроизводительностиКлиент").НачатьЗамерВремени(Истина, КлючеваяОперация);
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьПоляПредставленияПредмета(Форма)
	
	ЭтаФорма = Форма;
	Элементы = ЭтаФорма.Элементы;
	
	// Получаем имена реквизитов текущей страницы
	ИменаРеквизитовФормы 	= ИменаРеквизитовФормы(ЭтаФорма);
	
	// Определяем поле представления предмета
	ИмяПредмета 				= ИменаРеквизитовФормы["ИмяПредмета"];
	ПолеПредставленияПредмета 	= Элементы[ИмяПредмета + "Представление"];
	
	// Определяем кнопку отбора
	ИмяКнопкиОтбора 			= ИменаРеквизитовФормы["ИмяКнопкиОтбора"];
 	КнопкаОтбора 				= Элементы[ИмяКнопкиОтбора];
	
	// Устанавливаем видимость поля в зависимости от нажатости кнопки
	ПолеПредставленияПредмета.Видимость = КнопкаОтбора.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура Отобрать(Команда)
	
	ОтработатьНажатиеКнопкиОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработатьНажатиеКнопкиОтбора()
	
	// Устанавливаем пометку кнопки
	ИменаРеквизитовФормы 	= ИменаРеквизитовФормы(ЭтаФорма);
	
	ИмяКнопкиОтбора 		= ИменаРеквизитовФормы["ИмяКнопкиОтбора"];
	КнопкаОтбора 			= Элементы[ИмяКнопкиОтбора]; 
	
	КнопкаОтбора.Пометка = НЕ КнопкаОтбора.Пометка;
	
	// Устанавливаем видимость поля Предмет
	УстановитьВидимостьПоляПредставленияПредмета(ЭтаФорма);
	
	// Устанавливаем отбор по предмету
	УстановитьОтборПоПредмету(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораПредмета(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Получаем имена реквизитов текущей страницы
	ИменаРеквизитовФормы = ИменаРеквизитовФормы(ЭтаФорма);
	
	ИмяПредмета 			= ИменаРеквизитовФормы["ИмяПредмета"];
	ИмяДинамическогоСписка 	= ИменаРеквизитовФормы["ИмяДинамическогоСписка"];
	
	Предмет = ЭтаФорма[ИмяПредмета];
	
	// Формируем массив предметов, у которых на этой текущей странице есть циклы обмена
	АдресТаблицыПредметовИзЦикловОбмена = АдресТаблицыПредметовИзЦикловОбмена(ИмяДинамическогоСписка);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресТаблицыПредметовИзЦикловОбмена", АдресТаблицыПредметовИзЦикловОбмена);
	ПараметрыОткрытия.Вставить("ТекущийОбъект", Предмет);
	
	// Запоминаем предыдущее значение отбора
	ПредыдущееЗначениеПредмета = Предмет;
	// Получаем новое значение отбора
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ИмяПредмета",                ИмяПредмета);
	ДополнительныеПараметры.Вставить("ПредыдущееЗначениеПредмета", ПредыдущееЗначениеПредмета);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"НачалоВыбораПредметаЗавершение",
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	ОткрытьФорму(
		КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.ВыборПредметаЦиклаОбмена", 
		ПараметрыОткрытия,
		,
		,
		,
		,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораПредметаЗавершение(ВыбранныйПредмет, ДополнительныеПараметры) Экспорт
	
	ИмяПредмета = ДополнительныеПараметры.ИмяПредмета;
	ПредыдущееЗначениеПредмета = ДополнительныеПараметры.ПредыдущееЗначениеПредмета;
	
	// Устанавливаем новое значение отбора
	Если ЗначениеЗаполнено(ВыбранныйПредмет) Тогда
		ЭтаФорма[ИмяПредмета + "Представление"] = Представление(ВыбранныйПредмет);
		ЭтаФорма[ИмяПредмета] = ВыбранныйПредмет;
	Иначе
		ЭтаФорма[ИмяПредмета + "Представление"] = Представление(ПредыдущееЗначениеПредмета);
		ЭтаФорма[ИмяПредмета] = ПредыдущееЗначениеПредмета;
	КонецЕсли;
	
	УстановитьОтборПоПредмету(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция Представление(Предмет)
	
	Представление = "";
	// Для регламентированного отчета формируем представление по отдельному алгоритму
	Если ТипЗнч(Предмет) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
		Представление = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(Предмет);
	Иначе
		Представление = Строка(Предмет);
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

&НаСервере
Функция АдресТаблицыПредметовИзЦикловОбмена(ИмяДинамическогоСписка)
	
	ДинамическийСписок = ЭтаФорма[ИмяДинамическогоСписка];
	ТекстЗапроса = ДинамическийСписок.ТекстЗапроса;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	
	// Используем запрос и параметры динамического списка, чтобы получить список Предметов циклов обмена, которые находятся в списке
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
					| ЦиклыОбмена.Предмет КАК Предмет,
					| ЦиклыОбмена.Организация КАК Организация
					|ИЗ (" + ТекстЗапроса + ")  КАК ЦиклыОбмена
					|УПОРЯДОЧИТЬ ПО ЦиклыОбмена.Предмет";
					
	ЗапросПоПредметам = Новый Запрос(ТекстЗапроса);
					
	Для каждого ПараметрДинамическогоСписка Из ДинамическийСписок.Параметры.Элементы Цикл
		Если ПараметрДинамическогоСписка.Использование Тогда
			ЗапросПоПредметам.УстановитьПараметр(ПараметрДинамическогоСписка.Параметр, ПараметрДинамическогоСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	РезультатЗапроса = ЗапросПоПредметам.Выполнить().Выгрузить();
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
						
		Модуль = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации");
		ОрганизацияПоУмолчанию = Модуль.ОрганизацияПоУмолчанию();
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Организация", ОрганизацияПоУмолчанию);
		
		ТаблицаПредметов = РезультатЗапроса.Скопировать(СтруктураОтбора, "Предмет, Организация");
		
	Иначе
		ТаблицаПредметов = РезультатЗапроса.Скопировать(, "Предмет, Организация");
	КонецЕсли;
	
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ТаблицаПредметов);

	Возврат АдресВременногоХранилища;
	
КонецФункции

&НаКлиенте
Процедура ОчиститьПредмет()
	
	// Получаем имена реквизитов текущей страницы
	ИменаРеквизитовФормы 	= ИменаРеквизитовФормы(ЭтаФорма);
	ИмяПредмета 			= ИменаРеквизитовФормы["ИмяПредмета"];
	
	// Очищаем Предмет и Представление предмета
	ЭтаФорма[ИмяПредмета] 					= Неопределено;
	ЭтаФорма[ИмяПредмета + "Представление"]	= Неопределено;

	// Убираем отборы в динамическом списке
	УбратьОтборПоПредмету(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УбратьОтборПоПредмету(Форма)
	
	ЭтаФорма = Форма;
	Элементы = ЭтаФорма.Элементы;
	
	// Получаем имена реквизитов текущей страницы
	ИменаРеквизитовФормы 	= ИменаРеквизитовФормы(ЭтаФорма);
	
	ИмяПредмета 			= ИменаРеквизитовФормы["ИмяПредмета"];
	ИмяДинамическогоСписка 	= ИменаРеквизитовФормы["ИмяДинамическогоСписка"];
	ИмяКнопкиОтбора 		= ИменаРеквизитовФормы["ИмяКнопкиОтбора"];
	
	// Определяем реквизиты и элементы формы
	ТаблицаДинамическогоСписока = Элементы["Таблица" + ИмяДинамическогоСписка];
	ДинамическийСписок 			= ЭтаФорма[ИмяДинамическогоСписка];
	
	// Восстанавливаем отбор по организации
	ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
	Если ДинамическийСписок.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")) <> Неопределено Тогда 
		ДинамическийСписок.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
	КонецЕсли;
	
	// Удаляем отбор по предмету
	ЭлементыОтбора = ДинамическийСписок.Отбор.Элементы;
	Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Предмет") Тогда
			ЭлементыОтбора.Удалить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаДинамическогоСписока.Обновить();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоПредмету(Форма)
	
	ЭтаФорма = Форма;
	Элементы = ЭтаФорма.Элементы;
	
	// Получаем имена реквизитов текущей страницы
	ИменаРеквизитовФормы 	= ИменаРеквизитовФормы(ЭтаФорма);
	
	ИмяПредмета 				= ИменаРеквизитовФормы["ИмяПредмета"];
	ИмяДинамическогоСписка 		= ИменаРеквизитовФормы["ИмяДинамическогоСписка"];
	ИмяКнопкиОтбора 			= ИменаРеквизитовФормы["ИмяКнопкиОтбора"];
	
	// Если имена не определены, значит мы находимся на той странице, где нельзя установить отбор
	Если ИмяПредмета = Неопределено ИЛИ ИмяДинамическогоСписка = Неопределено ИЛИ ИмяКнопкиОтбора = Неопределено  Тогда
		Возврат;
	КонецЕсли;
	
	// Определяем реквизиты и элементы формы
	ТаблицаДинамическогоСписока = Элементы["Таблица" + ИмяДинамическогоСписка];
	ДинамическийСписок 			= ЭтаФорма[ИмяДинамическогоСписка];
	Предмет 					= ЭтаФорма[ИмяПредмета];
	КнопкаОтбора 				= Элементы[ИмяКнопкиОтбора];
	ПолеПредставленияПредмета 	= Элементы[ИмяПредмета + "Представление"];
	
	УстановитьВидимостьПоляПредставленияПредмета(ЭтаФорма);
	
	Если КнопкаОтбора.Пометка Тогда
		
		Если ЗначениеЗаполнено(Предмет) Тогда
			
			// Если отбор уже был установлен, тогда берем существующий элемент отбора
			ПредыдущийЭлементОтбора = Неопределено;
			
			Для каждого ЭлементОтбора Из ДинамическийСписок.Отбор.Элементы Цикл
				Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Предмет") Тогда
					ПредыдущийЭлементОтбора = ЭлементОтбора;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ПредыдущийЭлементОтбора <> Неопределено Тогда
				ЭлементОтбора = ПредыдущийЭлементОтбора;
			Иначе
				ЭлементОтбора = ДинамическийСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			КонецЕсли;
			
			// Устанавливаем непосредственно сам отбор
			ЭтаФорма[ИмяПредмета + "Представление"] = Представление(Предмет);
			
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Предмет");
			ЭлементОтбора.ПравоеЗначение 	= Предмет;
			ЭлементОтбора.Использование 	= Истина;
			
			// Применяем отбор
			Если ДинамическийСписок.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")) <> Неопределено Тогда
				ДинамическийСписок.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")).Использование = Ложь;
			КонецЕсли;
			ТаблицаДинамическогоСписока.Обновить();
			
		Иначе
			
			УбратьОтборПоПредмету(ЭтаФорма);
			
		КонецЕсли;
		
	Иначе
		
		УбратьОтборПоПредмету(ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИменаРеквизитовФормы(Форма)
	
	ЭтаФорма = Форма;
	Элементы = ЭтаФорма.Элементы;
	
	ИмяПредмета 			= Неопределено;
	ИмяДинамическогоСписка	= Неопределено;
	ИмяКнопкиОтбора			= Неопределено;
	
	// Определяем, на какой странице мы находимся
	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	Если ТекущаяСтраница = Элементы.ГруппаФНС Тогда
		// ФНС
		ТекущаяЗакладка = Элементы.ГруппаСтраницыФНС.ТекущаяСтраница;
		Если ТекущаяЗакладка = Элементы.ГруппаОтчетностьФНС Тогда
			 ИмяПредмета			= "ПредметОтчетностиФНС";
			 ИмяДинамическогоСписка	= "ЦиклыОбменаОтчетностьФНС";
			 ИмяКнопкиОтбора 		= "ОтобратьОтчетностьФНС";
		ИначеЕсли ТекущаяЗакладка = Элементы.ГруппаЗаявление Тогда
			 ИмяПредмета			= "ПредметЗаявленийФНС";
			 ИмяДинамическогоСписка	= "ЦиклыОбменаЗаявление";
			 ИмяКнопкиОтбора 		= "ОтобратьЗаявленияФНС";
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаПФР Тогда
		// ПФР
		Если Элементы.ГруппаСтраницыПФР.ТекущаяСтраница = Элементы.ОтчетностьПФР Тогда
			ИмяПредмета				= "ПредметОтчетностиПФР";
			ИмяДинамическогоСписка	= "ЦиклыОбменаОтчетностьПФР";
			ИмяКнопкиОтбора 		= "ОтобратьОтчетностьПФР";
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаФСГС Тогда
		// Росстат
		Если Элементы.ГруппаСтраницыФСГС.ТекущаяСтраница = Элементы.ОтчетностьФСГС Тогда
			ИмяПредмета				= "ПредметОтчетностиФСГС";
			ИмяДинамическогоСписка	= "ЦиклыОбменаОтчетностьФСГС";
			ИмяКнопкиОтбора 		= "ОтобратьОтчетностьФСГС";
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаФСС Тогда
		// ФСС
		Если Элементы.ГруппаСтраницыФСС.ТекущаяСтраница = Элементы.ГруппаОтчетностьФСС Тогда
			ИмяПредмета				= "ПредметОтчетностиФСС";
			ИмяДинамическогоСписка	= "ОтправкиОтчетностьФСС";
			ИмяКнопкиОтбора 		= "ОтобратьОтчетностьФСС";
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаФСРАР Тогда
		// ФСРАР
		Если Элементы.ГруппаСтраницыФСРАР.ТекущаяСтраница = Элементы.ГруппаОтчетностьФСРАР Тогда
			ИмяПредмета				= "ПредметОтчетностиФСРАР";
			ИмяДинамическогоСписка	= "ОтправкиОтчетностьФСРАР";
			ИмяКнопкиОтбора 		= "ОтобратьОтчетностьФСРАР";
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаРПН Тогда
		// РПН
		Если Элементы.ГруппаСтраницыРПН.ТекущаяСтраница = Элементы.ГруппаОтчетностьРПН Тогда
			ИмяПредмета				= "ПредметОтчетностиРПН";
			ИмяДинамическогоСписка	= "ОтправкиОтчетностьРПН";
			ИмяКнопкиОтбора 		= "ОтобратьОтчетностьРПН";
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаФТС Тогда
		// ФТС
		Если Элементы.ГруппаСтраницыФТС.ТекущаяСтраница = Элементы.ГруппаОтчетностьФТС Тогда
			ИмяПредмета				= "ПредметОтчетностиФТС";
			ИмяДинамическогоСписка	= "ОтправкиОтчетностьФТС";
			ИмяКнопкиОтбора 		= "ОтобратьОтчетностьФТС";
		КонецЕсли;
	КонецЕсли;
	
	СтруктураИмен = Новый Структура();
	СтруктураИмен.Вставить("ИмяПредмета", 				ИмяПредмета);
	СтруктураИмен.Вставить("ИмяДинамическогоСписка", 	ИмяДинамическогоСписка);
	СтруктураИмен.Вставить("ИмяКнопкиОтбора", 			ИмяКнопкиОтбора);
	
	Возврат СтруктураИмен;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьПредмет()
	
	// Получаем имена реквизитов текущей страницы
	ИменаРеквизитовФормы 	= ИменаРеквизитовФормы(ЭтаФорма);
	ИмяПредмета 			= ИменаРеквизитовФормы["ИмяПредмета"];
	Предмет					= ЭтаФорма[ИмяПредмета];
	
	Если ЗначениеЗаполнено(Предмет) Тогда
		ПоказатьЗначение(, Предмет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметПриИзменении(Элемент)
	
	УстановитьОтборПоПредмету(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметОчистка(Элемент, СтандартнаяОбработка)
	
	ОчиститьПредмет();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьПредмет();
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	СохранитьНастройки();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкиДляДинамическогоСписка(ИмяДинамическогоСписка)

	Настройки = Новый Структура("ТекстЗапроса,ОсновнаяТаблица,ДинамическоеСчитываниеДанных");
	
	Если ИмяДинамическогоСписка = "ВходящиеДокументыПФР" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ПерепискаСКонтролирующимиОрганами";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ПерепискаСКО.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|						ТОГДА 7
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|								ТОГДА 5
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|										ТОГДА 6
		|									ИНАЧЕ 4
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|					ТОГДА 3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|							ТОГДА 1
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|									ТОГДА 2
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ПерепискаСКО.Отправитель,
		|	ПерепискаСКО.ДатаСообщения КАК ДатаПолучения,
		|	ПерепискаСКО.Наименование КАК Тема,
		|	ПерепискаСКО.Организация,
		|	ПерепискаСКО.Ссылка
		|ИЗ
		|	Справочник.ПерепискаСКонтролирующимиОрганами КАК ПерепискаСКО
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Объект КАК Объект,
		|			СтатусыОтправки.Статус КАК Статус
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусПереписки
		|		ПО (СтатусПереписки.Объект = ПерепискаСКО.Ссылка)
		|ГДЕ
		|	ПерепискаСКО.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыПерепискиСКонтролирующимиОрганами.ПерепискаСПФР)
		|	И ПерепискаСКО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|	И ПерепискаСКО.Организация В(&Организация)";	
		
	ИначеЕсли ИмяДинамическогоСписка = "ВходящиеДокументыФНС" Тогда	
		Настройки.ОсновнаяТаблица = "Справочник.ПерепискаСКонтролирующимиОрганами";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ПерепискаСКО.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|						ТОГДА 7
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|								ТОГДА 5
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|										ТОГДА 6
		|									ИНАЧЕ 4
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|					ТОГДА 3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|							ТОГДА 1
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|									ТОГДА 2
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ПерепискаСКО.ДатаСообщения КАК ДатаПолучения,
		|	ПерепискаСКО.Отправитель,
		|	ПерепискаСКО.Наименование КАК Тема,
		|	ПерепискаСКО.Организация,
		|	ПерепискаСКО.Ссылка
		|ИЗ
		|	Справочник.ПерепискаСКонтролирующимиОрганами КАК ПерепискаСКО
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Объект КАК Объект,
		|			СтатусыОтправки.Статус КАК Статус
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусПереписки
		|		ПО (СтатусПереписки.Объект = ПерепискаСКО.Ссылка)
		|ГДЕ
		|	ПерепискаСКО.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыПерепискиСКонтролирующимиОрганами.ПерепискаСФНС)
		|	И ПерепискаСКО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|	И ПерепискаСКО.Организация В(&Организация)";
		
	ИначеЕсли ИмяДинамическогоСписка = "ВходящиеДокументыФСГС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ПерепискаСКонтролирующимиОрганами";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ПерепискаСКО.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|						ТОГДА 7
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|								ТОГДА 5
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|										ТОГДА 6
		|									ИНАЧЕ 4
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|					ТОГДА 3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|							ТОГДА 1
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|									ТОГДА 2
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ПерепискаСКО.Отправитель,
		|	ПерепискаСКО.ДатаСообщения КАК ДатаПолучения,
		|	ПерепискаСКО.Наименование КАК Тема,
		|	ПерепискаСКО.Организация,
		|	ПерепискаСКО.Ссылка
		|ИЗ
		|	Справочник.ПерепискаСКонтролирующимиОрганами КАК ПерепискаСКО
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Объект КАК Объект,
		|			СтатусыОтправки.Статус КАК Статус
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусПереписки
		|		ПО (СтатусПереписки.Объект = ПерепискаСКО.Ссылка)
		|ГДЕ
		|	ПерепискаСКО.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыПерепискиСКонтролирующимиОрганами.ПерепискаСФСГС)
		|	И ПерепискаСКО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|	И ПерепискаСКО.Организация В(&Организация)";
		
	ИначеЕсли ИмяДинамическогоСписка = "ЗапросНаИнформационноеОбслуживаниеНалогоплательщика" Тогда
		Настройки.ОсновнаяТаблица = "Документ.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СтатусОтправки.Статус, 0) = 0
		|			ТОГДА 1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДокументЗапросНаИОН.ПометкаУдаления = ЛОЖЬ
		|					ТОГДА ВЫБОР
		|							КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.ВРаботе)
		|								ТОГДА 0
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.Подготовлен)
		|										ТОГДА 1
		|									ИНАЧЕ ВЫБОР
		|											КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.ВКонверте)
		|												ТОГДА 2
		|											ИНАЧЕ ВЫБОР
		|													КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|														ТОГДА 3
		|													ИНАЧЕ ВЫБОР
		|															КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|																ТОГДА 4
		|															ИНАЧЕ ВЫБОР
		|																	КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		|																		ТОГДА 5
		|																	ИНАЧЕ ВЫБОР
		|																			КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|																					ИЛИ СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.Сдан)
		|																				ТОГДА 6
		|																		КОНЕЦ
		|																КОНЕЦ
		|														КОНЕЦ
		|												КОНЕЦ
		|										КОНЕЦ
		|								КОНЕЦ
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.ВРаботе)
		|							ТОГДА 7
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.Подготовлен)
		|									ТОГДА 8
		|								ИНАЧЕ ВЫБОР
		|										КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.ВКонверте)
		|											ТОГДА 9
		|										ИНАЧЕ ВЫБОР
		|												КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|													ТОГДА 10
		|												ИНАЧЕ ВЫБОР
		|														КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|															ТОГДА 11
		|														ИНАЧЕ ВЫБОР
		|																КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		|																	ТОГДА 12
		|																ИНАЧЕ ВЫБОР
		|																		КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|																				ИЛИ СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.Сдан)
		|																			ТОГДА 13
		|																	КОНЕЦ
		|															КОНЕЦ
		|													КОНЕЦ
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ДокументЗапросНаИОН.Дата КАК ДатаСоздания,
		|	ДокументЗапросНаИОН.ДатаНачалаПериода КАК НачалоПериода,
		|	ДокументЗапросНаИОН.ДатаОкончанияПериода КАК КонецПериода,
		|	ДокументЗапросНаИОН.ВидУслуги,
		|	ДокументЗапросНаИОН.Организация,
		|	ДокументЗапросНаИОН.Получатель,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОтветНаЗапросыИОН.Запрос, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Ответ
		|ИЗ
		|	Документ.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика КАК ДокументЗапросНаИОН
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ОтветыНаЗапросыИОН.Запрос КАК Запрос
		|		ИЗ
		|			РегистрСведений.ОтветыНаЗапросыИОН КАК ОтветыНаЗапросыИОН) КАК ОтветНаЗапросыИОН
		|		ПО (ОтветНаЗапросыИОН.Запрос = ДокументЗапросНаИОН.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Статус КАК Статус,
		|			СтатусыОтправки.Объект КАК Объект
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусОтправки
		|		ПО (СтатусОтправки.Объект = ДокументЗапросНаИОН.Ссылка)
		|ГДЕ
		|	ДокументЗапросНаИОН.Организация В(&Организация)";
		
	ИначеЕсли ИмяДинамическогоСписка = "ЗапросНаИнформационноеОбслуживаниеСтрахователя" Тогда
		Настройки.ОсновнаяТаблица = "Документ.ЗапросНаИнформационноеОбслуживаниеСтрахователя";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СтатусОтправки.Статус, 0) = 0
		|			ТОГДА 1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДокументЗапросНаИОС.ПометкаУдаления = ЛОЖЬ
		|					ТОГДА ВЫБОР
		|							КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.ВРаботе)
		|								ТОГДА 0
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.Подготовлен)
		|										ТОГДА 1
		|									ИНАЧЕ ВЫБОР
		|											КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.ВКонверте)
		|												ТОГДА 2
		|											ИНАЧЕ ВЫБОР
		|													КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|														ТОГДА 3
		|													ИНАЧЕ ВЫБОР
		|															КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|																ТОГДА 4
		|															ИНАЧЕ ВЫБОР
		|																	КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		|																		ТОГДА 5
		|																	ИНАЧЕ ВЫБОР
		|																			КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|																					ИЛИ СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.Сдан)
		|																				ТОГДА 6
		|																		КОНЕЦ
		|																КОНЕЦ
		|														КОНЕЦ
		|												КОНЕЦ
		|										КОНЕЦ
		|								КОНЕЦ
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.ВРаботе)
		|							ТОГДА 7
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.Подготовлен)
		|									ТОГДА 8
		|								ИНАЧЕ ВЫБОР
		|										КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.ВКонверте)
		|											ТОГДА 9
		|										ИНАЧЕ ВЫБОР
		|												КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|													ТОГДА 10
		|												ИНАЧЕ ВЫБОР
		|														КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|															ТОГДА 11
		|														ИНАЧЕ ВЫБОР
		|																КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		|																	ТОГДА 12
		|																ИНАЧЕ ВЫБОР
		|																		КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|																				ИЛИ СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРегламентированныхОтчетов.Сдан)
		|																			ТОГДА 13
		|																	КОНЕЦ
		|															КОНЕЦ
		|													КОНЕЦ
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ДокументЗапросНаИОС.Дата КАК ДатаСоздания,
		|	ДокументЗапросНаИОС.ВидУслуги,
		|	ДокументЗапросНаИОС.Организация,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОтветНаЗапросыИОС.Запрос, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Ответ,
		|	ВЫБОР
		|		КОГДА ОтветНаЗапросыИОС.ОтветОтрицательный = ИСТИНА
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОтветОтрицательный
		|ИЗ
		|	Документ.ЗапросНаИнформационноеОбслуживаниеСтрахователя КАК ДокументЗапросНаИОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ОтветыНаЗапросыИОС.Запрос КАК Запрос,
		|			МАКСИМУМ(ОтветыНаЗапросыИОС.ОтветОтрицательный) КАК ОтветОтрицательный
		|		ИЗ
		|			РегистрСведений.ОтветыНаЗапросыИОС КАК ОтветыНаЗапросыИОС
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ОтветыНаЗапросыИОС.Запрос) КАК ОтветНаЗапросыИОС
		|		ПО (ОтветНаЗапросыИОС.Запрос = ДокументЗапросНаИОС.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Статус КАК Статус,
		|			СтатусыОтправки.Объект КАК Объект
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусОтправки
		|		ПО (СтатусОтправки.Объект = ДокументЗапросНаИОС.Ссылка)
		|ГДЕ
		|	ДокументЗапросНаИОС.Организация В(&Организация)";
		
	ИначеЕсли ИмяДинамическогоСписка = "ЗапросыНаВыпискуИзЕГРЮЛ_ЕГРИП" Тогда
		Настройки.ОсновнаяТаблица = "Документ.ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СтатусОтправки.Статус, 0) = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ДокументЗапросНаВыпискуЕГР.ПометкаУдаления = ЛОЖЬ
		|						ТОГДА 1
		|					ИНАЧЕ 8
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.ВКонверте)
		|						И ЕСТЬNULL(ОтветНаЗапросыЕГР.Запрос, 0) = 0
		|					ТОГДА ВЫБОР
		|							КОГДА ДокументЗапросНаВыпискуЕГР.ПометкаУдаления = ЛОЖЬ
		|								ТОГДА 2
		|							ИНАЧЕ 9
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|								И ЕСТЬNULL(ОтветНаЗапросыЕГР.Запрос, 0) = 0
		|							ТОГДА ВЫБОР
		|									КОГДА ДокументЗапросНаВыпискуЕГР.ПометкаУдаления = ЛОЖЬ
		|										ТОГДА 3
		|									ИНАЧЕ 10
		|								КОНЕЦ
		|						ИНАЧЕ ВЫБОР
		|								КОГДА НЕ ЕСТЬNULL(ОтветНаЗапросыЕГР.Запрос, 0) = 0
		|											И (ВЫРАЗИТЬ(ОтветНаЗапросыЕГР.РезультатОбработкиЗапроса КАК СТРОКА(20))) = ""Запрос принят""
		|										ИЛИ (ВЫРАЗИТЬ(ОтветНаЗапросыЕГР.РезультатОбработкиЗапроса КАК СТРОКА(20))) = ""Заявление принято""
		|										ИЛИ (ВЫРАЗИТЬ(ОтветНаЗапросыЕГР.РезультатОбработкиЗапроса КАК СТРОКА(100))) = ""По Вашему запросу данных не найдено""
		|									ТОГДА ВЫБОР
		|											КОГДА ДокументЗапросНаВыпискуЕГР.ПометкаУдаления = ЛОЖЬ
		|												ТОГДА 6
		|											ИНАЧЕ 13
		|										КОНЕЦ
		|								ИНАЧЕ ВЫБОР
		|										КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|													И НЕ ЕСТЬNULL(ОтветНаЗапросыЕГР.Запрос, 0) = 0
		|													И (ВЫРАЗИТЬ(ОтветНаЗапросыЕГР.РезультатОбработкиЗапроса КАК СТРОКА(100))) <> ""Запрос принят""
		|												ИЛИ (ВЫРАЗИТЬ(ОтветНаЗапросыЕГР.РезультатОбработкиЗапроса КАК СТРОКА(100))) <> ""По Вашему запросу данных не найдено""
		|											ТОГДА ВЫБОР
		|													КОГДА ДокументЗапросНаВыпискуЕГР.ПометкаУдаления = ЛОЖЬ
		|														ТОГДА 5
		|													ИНАЧЕ 12
		|												КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ДокументЗапросНаВыпискуЕГР.Дата КАК ДатаСоздания,
		|	ДокументЗапросНаВыпискуЕГР.ВидПараметраЗапроса,
		|	ВЫБОР
		|		КОГДА ДокументЗапросНаВыпискуЕГР.ВидПараметраЗапроса = ЗНАЧЕНИЕ(Перечисление.ВидыПараметровЗапросаНаВыпискуИзЕГРЮЛ_ЕГРИП.ОГРН)
		|			ТОГДА ДокументЗапросНаВыпискуЕГР.ПараметрЗапроса + "" (ОГРН)""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДокументЗапросНаВыпискуЕГР.ВидПараметраЗапроса = ЗНАЧЕНИЕ(Перечисление.ВидыПараметровЗапросаНаВыпискуИзЕГРЮЛ_ЕГРИП.ИНН)
		|					ТОГДА ДокументЗапросНаВыпискуЕГР.ПараметрЗапроса + "" (ИНН)""
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ДокументЗапросНаВыпискуЕГР.ВидПараметраЗапроса = ЗНАЧЕНИЕ(Перечисление.ВидыПараметровЗапросаНаВыпискуИзЕГРЮЛ_ЕГРИП.ПустаяСсылка)
		|							ТОГДА ДокументЗапросНаВыпискуЕГР.ПараметрЗапроса
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПараметрЗапроса,
		|	ДокументЗапросНаВыпискуЕГР.Организация,
		|	ДокументЗапросНаВыпискуЕГР.ПометкаУдаления,
		|	СтатусОтправки.Статус,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОтветНаЗапросыЕГР.Запрос, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК НаличиеОтвета,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОтветНаЗапросыЕГР.Запрос, 0) = 0
		|			ТОГДА ""<отсутствует>""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА (ВЫРАЗИТЬ(ОтветНаЗапросыЕГР.РезультатОбработкиЗапроса КАК СТРОКА(20))) = ""Запрос принят""
		|						ИЛИ (ВЫРАЗИТЬ(ОтветНаЗапросыЕГР.РезультатОбработкиЗапроса КАК СТРОКА(20))) = ""Заявление принято""
		|							И ЕСТЬNULL(ОтветНаЗапросыЕГР.Запрос, 0) <> 0
		|					ТОГДА ""Показать""
		|				ИНАЧЕ ВЫБОР
		|						КОГДА (ВЫРАЗИТЬ(ОтветНаЗапросыЕГР.РезультатОбработкиЗапроса КАК СТРОКА(100))) = ""По Вашему запросу данных не найдено""
		|								И ДокументЗапросНаВыпискуЕГР.ВидПараметраЗапроса = ЗНАЧЕНИЕ(Перечисление.ВидыПараметровЗапросаНаВыпискуИзЕГРЮЛ_ЕГРИП.ОГРН)
		|							ТОГДА ""Запрос обработан, по запрошенному ОГРН информация в реестрах отсутствует.""
		|						ИНАЧЕ ВЫБОР
		|								КОГДА (ВЫРАЗИТЬ(ОтветНаЗапросыЕГР.РезультатОбработкиЗапроса КАК СТРОКА(100))) = ""По Вашему запросу данных не найдено""
		|										И ДокументЗапросНаВыпискуЕГР.ВидПараметраЗапроса = ЗНАЧЕНИЕ(Перечисление.ВидыПараметровЗапросаНаВыпискуИзЕГРЮЛ_ЕГРИП.ИНН)
		|									ТОГДА ""Запрос обработан, по запрошенному ИНН информация в реестрах отсутствует.""
		|								ИНАЧЕ ВЫРАЗИТЬ(ОтветНаЗапросыЕГР.РезультатОбработкиЗапроса КАК СТРОКА(100))
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Ответ
		|ИЗ
		|	Документ.ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП КАК ДокументЗапросНаВыпискуЕГР
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ОтветыНаЗапросы.Запрос КАК Запрос,
		|			ВЫРАЗИТЬ(ОтветыНаЗапросы.РезультатОбработкиЗапроса КАК СТРОКА(100)) КАК РезультатОбработкиЗапроса
		|		ИЗ
		|			РегистрСведений.ОтветыНаЗапросыВыпискиИзЕГРЮЛ_ЕГРИП КАК ОтветыНаЗапросы) КАК ОтветНаЗапросыЕГР
		|		ПО (ОтветНаЗапросыЕГР.Запрос = ДокументЗапросНаВыпискуЕГР.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Статус КАК Статус,
		|			СтатусыОтправки.Объект КАК Объект
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусОтправки
		|		ПО (СтатусОтправки.Объект = ДокументЗапросНаВыпискуЕГР.Ссылка)
		|ГДЕ
		|	ДокументЗапросНаВыпискуЕГР.Организация В(&Организация)";
		
	ИначеЕсли ИмяДинамическогоСписка = "ИсходящиеДокументыПФР" Тогда
		Настройки.ОсновнаяТаблица = "";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ПерепискаСКО.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|						ТОГДА 7
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|								ТОГДА 5
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|										ТОГДА 6
		|									ИНАЧЕ 4
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|					ТОГДА 3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|							ТОГДА 1
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|									ТОГДА 2
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ПерепискаСКО.ДатаСообщения КАК ДатаСоздания,
		|	ПерепискаСКО.Получатель,
		|	ПерепискаСКО.Наименование КАК Тема,
		|	ПерепискаСКО.Организация,
		|	ПерепискаСКО.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПерепискаСКонтролирующимиОрганами КАК ПерепискаСКО
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Объект КАК Объект,
		|			СтатусыОтправки.Статус КАК Статус
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусПереписки
		|		ПО (СтатусПереписки.Объект = ПерепискаСКО.Ссылка)
		|ГДЕ
		|	ПерепискаСКО.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыПерепискиСКонтролирующимиОрганами.ПерепискаСПФР)
		|	И НЕ ПерепискаСКО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|	И ПерепискаСКО.Организация В(&Организация)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА МакетыПенсионныхДел.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|						ТОГДА 7
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|								ТОГДА 5
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|										ТОГДА 6
		|									ИНАЧЕ 4
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|					ТОГДА 3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|							ТОГДА 1
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|									ТОГДА 2
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ,
		|	МакетыПенсионныхДел.ДатаСоздания,
		|	МакетыПенсионныхДел.Получатель,
		|	МакетыПенсионныхДел.Наименование,
		|	МакетыПенсионныхДел.Организация,
		|	МакетыПенсионныхДел.Ссылка
		|ИЗ
		|	Справочник.МакетыПенсионныхДел КАК МакетыПенсионныхДел
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Объект КАК Объект,
		|			СтатусыОтправки.Статус КАК Статус
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусПереписки
		|		ПО (СтатусПереписки.Объект = МакетыПенсионныхДел.Ссылка)
		|ГДЕ
		|	МакетыПенсионныхДел.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыПерепискиСКонтролирующимиОрганами.ПерепискаСПФР)
		|	И НЕ МакетыПенсионныхДел.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|	И МакетыПенсионныхДел.Организация В(&Организация)";
		
	ИначеЕсли ИмяДинамическогоСписка = "ИсходящиеДокументыФНС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ПерепискаСКонтролирующимиОрганами";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ПерепискаСКО.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|						ТОГДА 7
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|								ТОГДА 5
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|										ТОГДА 6
		|									ИНАЧЕ 4
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|					ТОГДА 3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|							ТОГДА 1
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|									ТОГДА 2
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ПерепискаСКО.ДатаСообщения КАК ДатаСоздания,
		|	ПерепискаСКО.Получатель,
		|	ПерепискаСКО.Наименование КАК Тема,
		|	ПерепискаСКО.Организация,
		|	ПерепискаСКО.Ссылка
		|ИЗ
		|	Справочник.ПерепискаСКонтролирующимиОрганами КАК ПерепискаСКО
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Объект КАК Объект,
		|			СтатусыОтправки.Статус КАК Статус
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусПереписки
		|		ПО (СтатусПереписки.Объект = ПерепискаСКО.Ссылка)
		|ГДЕ
		|	ПерепискаСКО.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыПерепискиСКонтролирующимиОрганами.ПерепискаСФНС)
		|	И (ПерепискаСКО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|			ИЛИ ПерепискаСКО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Исходящее)
		|			ИЛИ ПерепискаСКО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Сохраненное))
		|	И ПерепискаСКО.Организация В(&Организация)";

	ИначеЕсли ИмяДинамическогоСписка = "ИсходящиеДокументыФСГС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ПерепискаСКонтролирующимиОрганами";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ПерепискаСКО.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|						ТОГДА 7
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|								ТОГДА 5
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|										ТОГДА 6
		|									ИНАЧЕ 4
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)
		|					ТОГДА 3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|							ТОГДА 1
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|									ТОГДА 2
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ПерепискаСКО.ДатаСообщения КАК ДатаСоздания,
		|	ПерепискаСКО.Получатель,
		|	ПерепискаСКО.Наименование КАК Тема,
		|	ПерепискаСКО.Организация,
		|	ПерепискаСКО.Ссылка
		|ИЗ
		|	Справочник.ПерепискаСКонтролирующимиОрганами КАК ПерепискаСКО
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Объект КАК Объект,
		|			СтатусыОтправки.Статус КАК Статус
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусПереписки
		|		ПО (СтатусПереписки.Объект = ПерепискаСКО.Ссылка)
		|ГДЕ
		|	ПерепискаСКО.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыПерепискиСКонтролирующимиОрганами.ПерепискаСФСГС)
		|	И (ПерепискаСКО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Сохраненное)
		|			ИЛИ ПерепискаСКО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Исходящее)
		|			ИЛИ ПерепискаСКО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное))
		|	И ПерепискаСКО.Организация В(&Организация)";

	ИначеЕсли ИмяДинамическогоСписка = "ОтправкиОтчетностьФСРАР" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ОтправкиФСРАР";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ОтправкиФСРАР.ОтчетСсылка,
		|	ОтправкиФСРАР.ВидОтчета,
		|	ОтправкиФСРАР.ПредставлениеПериода,
		|	ОтправкиФСРАР.ПредставлениеВидаДокумента,
		|	ОтправкиФСРАР.ДатаОтправки,
		|	ВЫБОР
		|		КОГДА ОтправкиФСРАР.СтатусОтправки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|			ТОГДА ""Не завершена""
		|		ИНАЧЕ ОтправкиФСРАР.ДатаЗакрытия
		|	КОНЕЦ КАК ДатаЗакрытия,
		|	1 КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ОтправкиФСРАР.СтатусОтправки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|			ТОГДА ВЫБОР
		|					КОГДА (ОтправкиФСРАР.СхемаСдачиОтчетности = ЗНАЧЕНИЕ(Перечисление.СхемыСдачиОтчетностиФСРАР.ТиповойРегиональныйИФедеральныйСерверы)
		|							ИЛИ ОтправкиФСРАР.СхемаСдачиОтчетности = ЗНАЧЕНИЕ(Перечисление.СхемыСдачиОтчетностиФСРАР.МосковскийРегиональныйИФедеральныйСерверы))
		|							И ОтправкиФСРАР.СтатусОтправкиНаРегиональныйСервер = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|						ТОГДА 3
		|					ИНАЧЕ 2
		|				КОНЕЦ
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Колонка2,
		|	ОтправкиФСРАР.СтатусОтправки,
		|	ОтправкиФСРАР.Организация,
		|	ОтправкиФСРАР.ОтчетСсылка КАК Предмет
		|ИЗ
		|	Справочник.ОтправкиФСРАР КАК ОтправкиФСРАР
		|ГДЕ
		|	ОтправкиФСРАР.ПометкаУдаления = ЛОЖЬ
		|{ГДЕ
		|	(ОтправкиФСРАР.Организация В (&Организация))}";

	ИначеЕсли ИмяДинамическогоСписка = "ОтправкиОтчетностьРПН" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ОтправкиРПН";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтправкиРПН.ОтчетСсылка,
		|	ОтправкиРПН.ВидОтчета,
		|	ОтправкиРПН.ПредставлениеПериода,
		|	ОтправкиРПН.ПредставлениеВидаДокумента,
		|	ОтправкиРПН.ДатаОтправки,
		|	ВЫБОР
		|		КОГДА ОтправкиРПН.СтатусОтправки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|			ТОГДА ""Не завершена""
		|		ИНАЧЕ ОтправкиРПН.ДатаЗакрытия
		|	КОНЕЦ КАК ДатаЗакрытия,
		|	1 КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ОтправкиРПН.СтатусОтправки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтправкиРПН.СтатусПроверкиНаПортале = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|						ТОГДА 3
		|					ИНАЧЕ 2
		|				КОНЕЦ
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Колонка2,
		|	ОтправкиРПН.СтатусОтправки,
		|	ОтправкиРПН.Организация,
		|	ОтправкиРПН.ОтчетСсылка КАК Предмет
		|ИЗ
		|	Справочник.ОтправкиРПН КАК ОтправкиРПН
		|ГДЕ
		|	ОтправкиРПН.ПометкаУдаления = ЛОЖЬ
		|	{ГДЕ (ОтправкиРПН.Организация В (&Организация))}";
		
	ИначеЕсли ИмяДинамическогоСписка = "ОтправкиОтчетностьФТС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ОтправкиФТС";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтправкиФТС.ОтчетСсылка,
		|	ОтправкиФТС.ВидОтчета,
		|	ОтправкиФТС.ПредставлениеПериода,
		|	ОтправкиФТС.ПредставлениеВидаДокумента,
		|	ОтправкиФТС.ДатаОтправки,
		|	ВЫБОР
		|		КОГДА ОтправкиФТС.СтатусОтправки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|			ТОГДА ""Не завершена""
		|		ИНАЧЕ ОтправкиФТС.ДатаЗакрытия
		|	КОНЕЦ КАК ДатаЗакрытия,
		|	1 КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ОтправкиФТС.СтатусОтправки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Колонка2,
		|	ВЫБОР
		|		КОГДА ОтправкиФТС.НаКонтроле
		|			ТОГДА 6
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Колонка3,
		|	ОтправкиФТС.СтатусОтправки,
		|	ОтправкиФТС.Организация,
		|	ОтправкиФТС.ОтчетСсылка КАК Предмет
		|ИЗ
		|	Справочник.ОтправкиФТС КАК ОтправкиФТС
		|ГДЕ
		|	ОтправкиФТС.ПометкаУдаления = ЛОЖЬ
		|	{ГДЕ (ОтправкиФТС.Организация В (&Организация))}";
		
	ИначеЕсли ИмяДинамическогоСписка = "ОтправкиОтчетностьФСС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ОтправкиФСС";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ОтправкиФСС.ОтчетСсылка,
		|	ОтправкиФСС.ВидОтчета,
		|	ОтправкиФСС.ПредставлениеПериода,
		|	ОтправкиФСС.ПредставлениеВидаДокумента,
		|	ОтправкиФСС.ДатаОтправки,
		|	ВЫБОР
		|		КОГДА ОтправкиФСС.СтатусОтправки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|			ТОГДА ""Не завершена""
		|		ИНАЧЕ ОтправкиФСС.ДатаЗакрытия
		|	КОНЕЦ КАК ДатаЗакрытия,
		|	1 КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ОтправкиФСС.СтатусОтправки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Колонка2,
		|	ОтправкиФСС.СтатусОтправки,
		|	ОтправкиФСС.Организация,
		|	ОтправкиФСС.КодОрганаФСС,
		|	ОтправкиФСС.ОтчетСсылка КАК Предмет
		|ИЗ
		|	Справочник.ОтправкиФСС КАК ОтправкиФСС
		|ГДЕ
		|	ОтправкиФСС.ПометкаУдаления = ЛОЖЬ
		|{ГДЕ
		|	(ОтправкиФСС.Организация В (&Организация))}";

	ИначеЕсли ИмяДинамическогоСписка = "Представления" Тогда
		
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		
	ИначеЕсли ИмяДинамическогоСписка = "ТранспортноеСообщение" Тогда
		Настройки.ОсновнаяТаблица = "Документ.ТранспортноеСообщение";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДокументТранспортноеСообщение.ДатаТранспорта,
		|	ДокументТранспортноеСообщение.ОтКогоАдрес,
		|	ДокументТранспортноеСообщение.Тема,
		|	ДокументТранспортноеСообщение.ЦиклОбмена,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДокументТранспортноеСообщение.Получатель, НЕОПРЕДЕЛЕНО) <> НЕОПРЕДЕЛЕНО
		|			ТОГДА ДокументТранспортноеСообщение.Получатель
		|		КОГДА ЕСТЬNULL(ДокументТранспортноеСообщение.Получатель, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
		|				И ЕСТЬNULL(ТранспортноеСообщениеКому.Представление, НЕОПРЕДЕЛЕНО) <> НЕОПРЕДЕЛЕНО
		|				И ТранспортноеСообщениеКому.Представление <> """"
		|			ТОГДА ТранспортноеСообщениеКому.Представление
		|		КОГДА ЕСТЬNULL(ДокументТранспортноеСообщение.Получатель, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
		|				И ЕСТЬNULL(ТранспортноеСообщениеКому.АдресЭлектроннойПочты, НЕОПРЕДЕЛЕНО) <> НЕОПРЕДЕЛЕНО
		|				И ТранспортноеСообщениеКому.АдресЭлектроннойПочты <> """"
		|			ТОГДА ТранспортноеСообщениеКому.АдресЭлектроннойПочты
		|		ИНАЧЕ ""<не определен>""
		|	КОНЕЦ КАК Организация,
		|	ДокументТранспортноеСообщение.УчетнаяЗапись КАК УчетнаяЗапись
		|ИЗ
		|	Документ.ТранспортноеСообщение КАК ДокументТранспортноеСообщение
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ДокументТранспортноеСообщение.Ссылка = НовыеСообщения.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортноеСообщение.Кому КАК ТранспортноеСообщениеКому
		|		ПО ДокументТранспортноеСообщение.Ссылка = ТранспортноеСообщениеКому.Ссылка
		|			И (ТранспортноеСообщениеКому.НомерСтроки = 1)
		|ГДЕ
		|	ДокументТранспортноеСообщение.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Полученное)";

	ИначеЕсли ИмяДинамическогоСписка = "Требования" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ОписиВходящихДокументовИзНалоговыхОрганов";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ВходящиеОписи.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		|						ТОГДА 5
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|								ТОГДА 5
		|							ИНАЧЕ 3
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусПереписки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|							ТОГДА 2
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ВходящиеОписи.ДатаСообщения,
		|	ВходящиеОписи.НалоговыйОрган,
		|	ВходящиеОписи.Организация,
		|	ВходящиеОписи.Ссылка,
		|	ЕСТЬNULL(ТребованияПоВходящимОписям.КоличествоТребований, 0) КАК КоличествоТребований,
		|	ЕСТЬNULL(ОтветыПоВходящимОписям.количествоОтветов, 0) КАК КоличествоОтветов
		|ИЗ
		|	Справочник.ОписиВходящихДокументовИзНалоговыхОрганов КАК ВходящиеОписи
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Объект КАК Объект,
		|			СтатусыОтправки.Статус КАК Статус
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусПереписки
		|		ПО ВходящиеОписи.Ссылка = СтатусПереписки.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОтветыНаТребования.КоличествоОтветов), 0) КАК количествоОтветов,
		|			ОтветыНаТребования.Ответ КАК Ответ
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОписиИсходящихДокументовВНалоговыеОрганы.Ссылка), 0) КАК КоличествоОтветов,
		|				ОписиИсходящихДокументовВНалоговыеОрганы.ОписьВходящихДокументов КАК Ответ
		|			ИЗ
		|				Справочник.ОписиИсходящихДокументовВНалоговыеОрганы КАК ОписиИсходящихДокументовВНалоговыеОрганы
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ОписиИсходящихДокументовВНалоговыеОрганы.ОписьВходящихДокументов
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПоясненияКДекларацииПоНДС.Ссылка), 0),
		|				ПоясненияКДекларацииПоНДС.ОписьВходящихДокументов
		|			ИЗ
		|				Документ.ПоясненияКДекларацииПоНДС КАК ПоясненияКДекларацииПоНДС
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПоясненияКДекларацииПоНДС.ОписьВходящихДокументов
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПерепискаСКонтролирующимиОрганами.Ссылка), 0),
		|				ОписиВходящихДокументовИзНалоговыхОрганов.Ссылка
		|			ИЗ
		|				Справочник.ПерепискаСКонтролирующимиОрганами КАК ПерепискаСКонтролирующимиОрганами
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОписиВходящихДокументовИзНалоговыхОрганов.ВходящиеДокументы КАК ОписиВходящихДокументовИзНалоговыхОрганов
		|					ПО (ОписиВходящихДокументовИзНалоговыхОрганов.СсылкаНаОбъект = ПерепискаСКонтролирующимиОрганами.Требование)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ОписиВходящихДокументовИзНалоговыхОрганов.Ссылка) КАК ОтветыНаТребования
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ОтветыНаТребования.Ответ) КАК ОтветыПоВходящимОписям
		|		ПО ВходящиеОписи.Ссылка = ОтветыПоВходящимОписям.Ответ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОписиВходящихДокументовИзНалоговыхОргановВходящиеДокументы.Ссылка КАК ОписьВходящихДокументов,
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОписиВходящихДокументовИзНалоговыхОргановВходящиеДокументы.СсылкаНаОбъект) КАК КоличествоТребований
		|		ИЗ
		|			Справочник.ОписиВходящихДокументовИзНалоговыхОрганов.ВходящиеДокументы КАК ОписиВходящихДокументовИзНалоговыхОргановВходящиеДокументы
		|		ГДЕ
		|			ОписиВходящихДокументовИзНалоговыхОргановВходящиеДокументы.СсылкаНаОбъект.ВидДокумента В (ЗНАЧЕНИЕ(Перечисление.ВидыНалоговыхДокументов.ТребованиеОПредставленииДокументов), ЗНАЧЕНИЕ(Перечисление.ВидыНалоговыхДокументов.ТребованиеОПредставленииПоясненийКДекларацииНДС))
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ОписиВходящихДокументовИзНалоговыхОргановВходящиеДокументы.Ссылка) КАК ТребованияПоВходящимОписям
		|		ПО ВходящиеОписи.Ссылка = ТребованияПоВходящимОписям.ОписьВходящихДокументов
		|ГДЕ
		|	ВходящиеОписи.Организация В(&Организация)";

	ИначеЕсли ИмяДинамическогоСписка = "Уведомления" Тогда
		
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		
	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаВходящиеПФР" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка4.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|				ИЛИ ЗапросКолонка4.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|						ИЛИ ЗапросКолонка1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ТОГДА ИСТИНА
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоВходящееПФР))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоВходящееПФР))) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР))) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСПФР)
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаВходящиеФНС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка4.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|				ИЛИ ЗапросКолонка4.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|						ИЛИ ЗапросКолонка1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ТОГДА ИСТИНА
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РассылкаНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РассылкаНО))) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП))) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФНС)
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора
		|	И ЦиклыОбмена.Предмет <> НЕОПРЕДЕЛЕНО";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаВходящиеФСГС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка4.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|				ИЛИ ЗапросКолонка4.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|						ИЛИ ЗапросКолонка1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ТОГДА ИСТИНА
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РассылкаФСГС))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РассылкаФСГС))) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС))) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФСГС)
		|	И ЦиклыОбмена.ПометкаУдаления = ЛОЖЬ
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаЗапросыЕГР" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	"""" КАК Разделитель,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка2.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка8
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ЗапросНаВыпискуЕРГЮЛ_ЕГРИП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ЗапросНаВыпискуЕРГЮЛ_ЕГРИП)) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗапросаНаВыпискуЕРГЮЛ_ЕГРИП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗапросаНаВыпискуЕРГЮЛ_ЕГРИП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗапросаНаВыпискуЕРГЮЛ_ЕГРИП)) КАК ЗапросКолонка2
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаССОС)
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаЗапросыИОН" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка2,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка3.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка3.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка3.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка3,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка5.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка5.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка5,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка6.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка6.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка6.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка6,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка7.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка7.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка7,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка8.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка8.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка8.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка8,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка8.Ссылка.ПротоколСОшибкой
		|				ИЛИ ЗапросКолонка8.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка7.Ссылка.ПротоколСОшибкой
		|						ИЛИ ЗапросКолонка7.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЗапросКолонка6.Ссылка.ПротоколСОшибкой
		|								ИЛИ ЗапросКолонка6.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ЗапросКолонка5.Ссылка.ПротоколСОшибкой
		|										ИЛИ ЗапросКолонка5.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|									ТОГДА ИСТИНА
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|												ИЛИ ЗапросКолонка4.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|											ТОГДА ИСТИНА
		|										ИНАЧЕ ВЫБОР
		|												КОГДА ЗапросКолонка3.Ссылка.ПротоколСОшибкой
		|														ИЛИ ЗапросКолонка3.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|													ТОГДА ИСТИНА
		|												ИНАЧЕ ВЫБОР
		|														КОГДА ЗапросКолонка2.Ссылка.ПротоколСОшибкой
		|																ИЛИ ЗапросКолонка2.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|															ТОГДА ИСТИНА
		|														ИНАЧЕ ВЫБОР
		|																КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|																		ИЛИ ЗапросКолонка1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|																	ТОГДА ИСТИНА
		|															КОНЕЦ
		|													КОНЕЦ
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ЗапросНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ЗапросНП)) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО)) КАК ЗапросКолонка2
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП)) КАК ЗапросКолонка3
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка3.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеЗапросНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеЗапросНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеЗапросНО)) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО)) КАК ЗапросКолонка5
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка5.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП)) КАК ЗапросКолонка6
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка6.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО)) КАК ЗапросКолонка7
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка7.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП)) КАК ЗапросКолонка8
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка8.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФНС)
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаЗапросыИОС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка2,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка3.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка3.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка3,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка4.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|				ИЛИ ЗапросКолонка4.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка3.Ссылка.ПротоколСОшибкой
		|						ИЛИ ЗапросКолонка3.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЗапросКолонка2.Ссылка.ПротоколСОшибкой
		|								ИЛИ ЗапросКолонка2.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР)
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|										ИЛИ ЗапросКолонка1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР)
		|									ТОГДА ИСТИНА
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееЗапросПФР)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееЗапросПФР)) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Дата) КАК ДатаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Дата = КрайнееСообщение.ДатаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПолученияЗапросаПФР)) КАК ЗапросКолонка2
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Дата) КАК ДатаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ОтветНаЗапросПФР))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Дата = КрайнееСообщение.ДатаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ОтветНаЗапросПФР)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ОтветНаЗапросПФР)) КАК ЗапросКолонка3
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка3.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Дата) КАК ДатаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Дата = КрайнееСообщение.ДатаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ОтветНаЗапросКвитанцияПФР)) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСПФР)
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаЗаявление" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Если ВидДокументаЗаявленияОВвозе = "Заявление" Тогда
			Настройки.ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ЛОЖЬ КАК Пометка,
			|	ЦиклыОбмена.Ссылка,
			|	ЦиклыОбмена.ВидОтчета,
			|	ЦиклыОбмена.Период КАК Период,
			|	ЦиклыОбмена.ПредставлениеПериода КАК ПредставлениеПериода,
			|	ЦиклыОбмена.ДатаСоздания,
			|	ЦиклыОбмена.ДатаЗакрытия,
			|	ЦиклыОбмена.ВнешняяОрганизация КАК НалоговыйОрган,
			|	ЦиклыОбмена.Наименование,
			|	ЦиклыОбмена.Предмет,
			|	ЦиклыОбмена.Организация,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК Новое,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
			|					ТОГДА 1
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
			|							ТОГДА 3
			|						ИНАЧЕ 4
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка1,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоСодержимого, 0) = 0
			|					ТОГДА 5
			|				ИНАЧЕ 1
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка2,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка3.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЗапросКолонка3.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
			|					ТОГДА 1
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ЕСТЬNULL(ЗапросКолонка3.ЧислоКонтейнеров, 0) = 0
			|							ТОГДА 3
			|						ИНАЧЕ 4
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка3,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
			|					ТОГДА 5
			|				ИНАЧЕ 1
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка4,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка5.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЕСТЬNULL(ЗапросКолонка5.ЧислоСодержимого, 0) = 0
			|					ТОГДА 5
			|				ИНАЧЕ 1
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка5,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка6.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЗапросКолонка6.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
			|					ТОГДА 1
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ЕСТЬNULL(ЗапросКолонка6.ЧислоКонтейнеров, 0) = 0
			|							ТОГДА 3
			|						ИНАЧЕ 4
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка6,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка7.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЕСТЬNULL(ЗапросКолонка7.ЧислоСодержимого, 0) = 0
			|					ТОГДА 5
			|				ИНАЧЕ 1
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка7,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка8.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЗапросКолонка8.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
			|					ТОГДА 1
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ЕСТЬNULL(ЗапросКолонка8.ЧислоКонтейнеров, 0) = 0
			|							ТОГДА 3
			|						ИНАЧЕ 4
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка8,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка9.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЕСТЬNULL(ЗапросКолонка9.ЧислоСодержимого, 0) = 0
			|					ТОГДА 5
			|				ИНАЧЕ 1
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка9,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка10.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЗапросКолонка10.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
			|					ТОГДА 1
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ЕСТЬNULL(ЗапросКолонка10.ЧислоКонтейнеров, 0) = 0
			|							ТОГДА 3
			|						ИНАЧЕ 4
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка10,
			|	ВЫБОР
			|		КОГДА ЗапросКолонка10.Ссылка.ПротоколСОшибкой
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЗапросКолонка9.Ссылка.ПротоколСОшибкой
			|					ТОГДА ИСТИНА
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ЗапросКолонка8.Ссылка.ПротоколСОшибкой
			|							ТОГДА ИСТИНА
			|						ИНАЧЕ ВЫБОР
			|								КОГДА ЗапросКолонка7.Ссылка.ПротоколСОшибкой
			|									ТОГДА ИСТИНА
			|								ИНАЧЕ ВЫБОР
			|										КОГДА ЗапросКолонка6.Ссылка.ПротоколСОшибкой
			|											ТОГДА ИСТИНА
			|										ИНАЧЕ ВЫБОР
			|												КОГДА ЗапросКолонка5.Ссылка.ПротоколСОшибкой
			|													ТОГДА ИСТИНА
			|												ИНАЧЕ ВЫБОР
			|														КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
			|															ТОГДА ИСТИНА
			|														ИНАЧЕ ВЫБОР
			|																КОГДА ЗапросКолонка3.Ссылка.ПротоколСОшибкой
			|																	ТОГДА ИСТИНА
			|																ИНАЧЕ ВЫБОР
			|																		КОГДА ЗапросКолонка2.Ссылка.ПротоколСОшибкой
			|																			ТОГДА ИСТИНА
			|																		ИНАЧЕ ВЫБОР
			|																				КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
			|																					ТОГДА ИСТИНА
			|																			КОНЕЦ
			|																	КОНЕЦ
			|															КОНЕЦ
			|													КОНЕЦ
			|											КОНЕЦ
			|									КОНЕЦ
			|							КОНЕЦ
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
			|ИЗ
			|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|		ГДЕ
			|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
			|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
			|				ИЗ
			|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
			|				ГДЕ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ЗаявлениеНП))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
			|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ЗаявлениеНП))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка1
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
			|				ИЗ
			|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
			|				ГДЕ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
			|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка2
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
			|				ИЗ
			|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
			|				ГДЕ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
			|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка3
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка3.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
			|				ИЗ
			|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
			|				ГДЕ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
			|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка4
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
			|				ИЗ
			|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
			|				ГДЕ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
			|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка5
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка5.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
			|				ИЗ
			|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
			|				ГДЕ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
			|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка6
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка6.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
			|				ИЗ
			|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
			|				ГДЕ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
			|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеНО))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка7
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка7.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
			|				ИЗ
			|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
			|				ГДЕ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
			|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка8
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка8.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
			|				ИЗ
			|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
			|				ГДЕ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
			|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка9
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка9.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
			|				ИЗ
			|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
			|				ГДЕ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
			|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка10
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка10.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
			|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|		ГДЕ
			|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
			|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ПротоколСУведомлениемОшибкой
			|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
			|ГДЕ
			|	ЦиклыОбмена.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыЦикловОбмена.Заявление)
			|	И ЦиклыОбмена.ПометкаУдаления = ЛОЖЬ
			|{ГДЕ
			|	(ЦиклыОбмена.Организация В (&Организация))}";	
			
		ИначеЕсли ВидДокументаЗаявленияОВвозе = "ПереченьЗаявлений" Тогда
			
			Настройки.ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ЛОЖЬ КАК Пометка,
			|	ЦиклыОбмена.Ссылка,
			|	ЦиклыОбмена.ВидОтчета,
			|	ЦиклыОбмена.Период КАК Период,
			|	ЦиклыОбмена.ПредставлениеПериода КАК ПредставлениеПериода,
			|	ЦиклыОбмена.ДатаСоздания,
			|	ЦиклыОбмена.ДатаЗакрытия,
			|	ЦиклыОбмена.ВнешняяОрганизация КАК НалоговыйОрган,
			|	ЦиклыОбмена.Наименование,
			|	ЦиклыОбмена.Предмет,
			|	ЦиклыОбмена.Организация,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК Новое,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
			|					ТОГДА 1
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
			|							ТОГДА 3
			|						ИНАЧЕ 4
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка1,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоСодержимого, 0) = 0
			|					ТОГДА 5
			|				ИНАЧЕ 1
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка2,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка3.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЗапросКолонка3.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
			|					ТОГДА 1
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ЕСТЬNULL(ЗапросКолонка3.ЧислоКонтейнеров, 0) = 0
			|							ТОГДА 3
			|						ИНАЧЕ 4
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка3,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
			|					ТОГДА 5
			|				ИНАЧЕ 1
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка4,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка5.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЕСТЬNULL(ЗапросКолонка5.ЧислоСодержимого, 0) = 0
			|					ТОГДА 5
			|				ИНАЧЕ 1
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка5,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЗапросКолонка6.ЦиклОбмена, 0) = 0
			|			ТОГДА 2
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЗапросКолонка6.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
			|					ТОГДА 1
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ЕСТЬNULL(ЗапросКолонка6.ЧислоКонтейнеров, 0) = 0
			|							ТОГДА 3
			|						ИНАЧЕ 4
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК Колонка6,
			|	0 КАК Колонка7,
			|	0 КАК Колонка8,
			|	0 КАК Колонка9,
			|	0 КАК Колонка10,
			|	ВЫБОР
			|		КОГДА ЗапросКолонка6.Ссылка.ПротоколСОшибкой
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ЗапросКолонка5.Ссылка.ПротоколСОшибкой
			|					ТОГДА ИСТИНА
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
			|							ТОГДА ИСТИНА
			|						ИНАЧЕ ВЫБОР
			|								КОГДА ЗапросКолонка3.Ссылка.ПротоколСОшибкой
			|									ТОГДА ИСТИНА
			|								ИНАЧЕ ВЫБОР
			|										КОГДА ЗапросКолонка2.Ссылка.ПротоколСОшибкой
			|											ТОГДА ИСТИНА
			|										ИНАЧЕ ВЫБОР
			|												КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
			|													ТОГДА ИСТИНА
			|											КОНЕЦ
			|									КОНЕЦ
			|							КОНЕЦ
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
			|ИЗ
			|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|		ГДЕ
			|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
			|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
			|				ИЗ
			|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
			|				ГДЕ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПредставлениеНП))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
			|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПредставлениеНП))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка1
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
			|				ИЗ
			|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
			|				ГДЕ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
			|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка2
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
			|				ИЗ
			|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
			|				ГДЕ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
			|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка3
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка3.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
			|				ИЗ
			|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
			|				ГДЕ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
			|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка4
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
			|				ИЗ
			|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
			|				ГДЕ
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
			|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка5
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка5.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус,
			|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
			|				{ГДЕ
			|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
			|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
			|				ИЗ
			|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
			|				ГДЕ
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
			|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
			|		ГДЕ
			|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка6
			|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка6.ЦиклОбмена
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТранспортноеСообщение.Ссылка КАК Ссылка,
			|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|			ТранспортноеСообщение.Тип КАК Тип,
			|			ТранспортноеСообщение.Статус КАК Статус
			|		ИЗ
			|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
			|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
			|				ИЗ
			|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
			|				ГДЕ
			|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
			|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
			|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
			|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
			|		ГДЕ
			|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
			|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
			|		{ГДЕ
			|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ПротоколСУведомлениемОшибкой
			|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
			|ГДЕ
			|	ЦиклыОбмена.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыЦикловОбмена.Представление)
			|	И ЦиклыОбмена.ВидОтчета = ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.ПереченьЗаявленийОВвозеТоваров)
			|	И ЦиклыОбмена.ПометкаУдаления = ЛОЖЬ
			|{ГДЕ
			|	(ЦиклыОбмена.Организация В (&Организация))}";	
			
		КонецЕсли;
		
	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаИсходящиеПФР" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|				ИЛИ ЗапросКолонка4.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|						ИЛИ ЗапросКолонка1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ТОГДА ИСТИНА
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР)) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР)) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР)
		|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСПФР)
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаИсходящиеФНС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка2,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка3.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка3.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка3.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка3,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка5.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка5.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка5,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка6.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка6.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка6.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка6,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка6.Ссылка.ПротоколСОшибкой
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка5.Ссылка.ПротоколСОшибкой
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ЗапросКолонка3.Ссылка.ПротоколСОшибкой
		|									ТОГДА ИСТИНА
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ЗапросКолонка2.Ссылка.ПротоколСОшибкой
		|											ТОГДА ИСТИНА
		|										ИНАЧЕ ВЫБОР
		|												КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|													ТОГДА ИСТИНА
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ОбращениеНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ОбращениеНП)) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО)) КАК ЗапросКолонка2
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП)) КАК ЗапросКолонка3
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка3.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО)) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО)) КАК ЗапросКолонка5
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка5.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП)) КАК ЗапросКолонка6
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка6.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФНС)
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора
		|	И ЦиклыОбмена.Предмет <> НЕОПРЕДЕЛЕНО";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаИсходящиеФСГС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка2,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка3.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка3.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка3,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|				ИЛИ ЗапросКолонка4.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|						ИЛИ ЗапросКолонка1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ТОГДА ИСТИНА
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС)) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС)) КАК ЗапросКолонка2
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС)) КАК ЗапросКолонка3
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка3.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС)) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС)
		|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФСГС)
		|	И ЦиклыОбмена.ПометкаУдаления = ЛОЖЬ
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаОтчетностьПФР" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЛОЖЬ КАК Пометка,
		|	ВЫБОР
		|		КОГДА ЦиклыОбмена.Предмет ССЫЛКА Документ.РегламентированныйОтчет
		|			ТОГДА ЦиклыОбмена.ВидОтчета
		|		ИНАЧЕ ЦиклыОбмена.Предмет
		|	КОНЕЦ КАК Отчет,
		|	ЦиклыОбмена.Период КАК Период,
		|	ЦиклыОбмена.ПредставлениеПериода КАК ПредставлениеПериода,
		|	ЦиклыОбмена.ВидДокумента,
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Наименование,
		|	ЦиклыОбмена.Предмет,
		|	ЦиклыОбмена.Организация,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка5.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка5.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка5,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка6.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка6.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка6.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка6,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка6.Ссылка.ПротоколСОшибкой
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка5.Ссылка.ПротоколСОшибкой
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|									ТОГДА ИСТИНА
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР)
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПротоколПФР))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПротоколПФР)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПротоколПФР)
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка5
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка5.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР)
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка6
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка6.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР)
		|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСПФР)
		|	И ЦиклыОбмена.ПометкаУдаления = ЛОЖЬ
		|	И ЦиклыОбмена.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыЦикловОбмена.ОтчетностьПФР)
		|{ГДЕ
		|	(ЦиклыОбмена.Организация В (&Организация))}";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаОтчетностьФНС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЛОЖЬ КАК Пометка,
		|	ЦиклыОбмена.Ссылка КАК Ссылка,
		|	ЦиклыОбмена.ВидОтчета,
		|	ЦиклыОбмена.Период КАК Период,
		|	ЦиклыОбмена.ПредставлениеПериода КАК ПредставлениеПериода,
		|	ЦиклыОбмена.ВидДокумента,
		|	ЦиклыОбмена.ПредставлениеВидаДокумента,
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.ВнешняяОрганизация КАК НалоговыйОрган,
		|	ЦиклыОбмена.Наименование КАК Наименование,
		|	ЦиклыОбмена.Предмет,
		|	ЦиклыОбмена.Организация,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка2,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка3.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка3.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка3.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка3,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка5.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка5.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка5,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка6.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка6.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка6.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка6,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка7.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка7.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка7,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка8.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка8.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка8.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка8,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка8.Ссылка.ПротоколСОшибкой
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка7.Ссылка.ПротоколСОшибкой
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЗапросКолонка6.Ссылка.ПротоколСОшибкой
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ЗапросКолонка5.Ссылка.ПротоколСОшибкой
		|									ТОГДА ИСТИНА
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|											ТОГДА ИСТИНА
		|										ИНАЧЕ ВЫБОР
		|												КОГДА ЗапросКолонка3.Ссылка.ПротоколСОшибкой
		|													ТОГДА ИСТИНА
		|												ИНАЧЕ ВЫБОР
		|														КОГДА ЗапросКолонка2.Ссылка.ПротоколСОшибкой
		|															ТОГДА ИСТИНА
		|														ИНАЧЕ ВЫБОР
		|																КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|																	ТОГДА ИСТИНА
		|															КОНЕЦ
		|													КОНЕЦ
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ДекларацияНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.Форма2НДФЛНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ДекларацияНП), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.Форма2НДФЛНП))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка2
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка3
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка3.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО), ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка5
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка5.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка6
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка6.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка7
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка7.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка8
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка8.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФНС)
		|	И ЦиклыОбмена.ПометкаУдаления = ЛОЖЬ
		|	И ЦиклыОбмена.ФорматДокументооборота = ЗНАЧЕНИЕ(Перечисление.ФорматыДокументооборотаСФНС.Приказ534)
		|	И (ЦиклыОбмена.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность)
		|			ИЛИ ЦиклыОбмена.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыЦикловОбмена.Форма2НДФЛ))
		|	И ЦиклыОбмена.ВидОтчета <> ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.УведомлениеОКонтролируемыхСделках)
		|{ГДЕ
		|	(ЦиклыОбмена.Организация В (&Организация))}";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаОтчетностьФСГС" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЛОЖЬ КАК Пометка,
		|	ВЫБОР
		|		КОГДА ЦиклыОбмена.Предмет ССЫЛКА Документ.РегламентированныйОтчет
		|			ТОГДА ЦиклыОбмена.ВидОтчета
		|		ИНАЧЕ ЦиклыОбмена.Предмет
		|	КОНЕЦ КАК Отчет,
		|	ЦиклыОбмена.Период КАК Период,
		|	ЦиклыОбмена.ПредставлениеПериода КАК ПредставлениеПериода,
		|	ЦиклыОбмена.ВидДокумента,
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Наименование,
		|	ЦиклыОбмена.Предмет,
		|	ЦиклыОбмена.Организация,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка2,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка3.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка3.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка3.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка3,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка5.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка5.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка5,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка6.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка6.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка6.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка6,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка6.Ссылка.ПротоколСОшибкой
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка5.Ссылка.ПротоколСОшибкой
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|									ТОГДА ИСТИНА
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС)
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка2
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка3
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка3.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС)
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС)
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка5
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка5.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС))
		|				{ГДЕ
		|					(КрайнееСообщение.ЦиклОбмена.Организация В (&Организация))}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ЗапросКолонка6
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка6.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС)
		|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|		{ГДЕ
		|			(ТранспортноеСообщение.ЦиклОбмена.Организация В (&Организация))}) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФСГС)
		|	И ЦиклыОбмена.ПометкаУдаления = ЛОЖЬ
		|	И ЦиклыОбмена.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыЦикловОбмена.ОтчетностьФСГС)
		|{ГДЕ
		|	(ЦиклыОбмена.Организация В (&Организация))}";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаПредставления" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка2,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка3.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка3.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка3.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка3,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка5.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка5.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка5,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка6.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка6.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка6.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка6,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка6.Ссылка.ПротоколСОшибкой
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка5.Ссылка.ПротоколСОшибкой
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ЗапросКолонка3.Ссылка.ПротоколСОшибкой
		|									ТОГДА ИСТИНА
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ЗапросКолонка2.Ссылка.ПротоколСОшибкой
		|											ТОГДА ИСТИНА
		|										ИНАЧЕ ВЫБОР
		|												КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|													ТОГДА ИСТИНА
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПредставлениеНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПредставлениеНП)) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО)) КАК ЗапросКолонка2
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП)) КАК ЗапросКолонка3
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка3.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО)) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО)) КАК ЗапросКолонка5
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка5.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП)) КАК ЗапросКолонка6
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка6.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФНС)
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора
		|	И ЦиклыОбмена.Предмет <> НЕОПРЕДЕЛЕНО";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаТребования" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка4.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка5.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка5.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка5.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка5,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка6.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка6,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка5.Ссылка.ПротоколСОшибкой
		|				ИЛИ ЗапросКолонка6.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|			ТОГДА ИСТИНА
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ДокументНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ДокументНО))) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеДокументНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеДокументНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеДокументНП))) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаДокументНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаДокументНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаДокументНП))) КАК ЗапросКолонка5
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка5.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО))) КАК ЗапросКолонка6
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка6.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФНС)
		|	И (ЦиклыОбмена.Предмет = &СсылкаДляОтбора
		|			ИЛИ ЦиклыОбмена.ДополнительныеПредметы.Предмет = &СсылкаДляОтбора)
		|	И ЦиклыОбмена.Предмет <> НЕОПРЕДЕЛЕНО";

	ИначеЕсли ИмяДинамическогоСписка = "ЦиклыОбменаУведомления" Тогда
		Настройки.ОсновнаяТаблица = "Справочник.ЦиклыОбмена";
		Настройки.ДинамическоеСчитываниеДанных = Истина;
		Настройки.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦиклыОбмена.ДатаСоздания,
		|	ЦиклыОбмена.ДатаЗакрытия,
		|	ЦиклыОбмена.Предмет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыеСообщения.ЦиклОбмена, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Новое,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка1.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка1.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка1.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка2.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка2.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка2,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка3.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка3.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка3.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка3,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка4.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка4.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка4,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка5.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ЗапросКолонка5.ЧислоСодержимого, 0) = 0
		|					ТОГДА 5
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка5,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗапросКолонка6.ЦиклОбмена, 0) = 0
		|			ТОГДА 2
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка6.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПисем.Отправленное)
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(ЗапросКолонка6.ЧислоКонтейнеров, 0) = 0
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Колонка6,
		|	ВЫБОР
		|		КОГДА ЗапросКолонка6.Ссылка.ПротоколСОшибкой
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗапросКолонка5.Ссылка.ПротоколСОшибкой
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЗапросКолонка4.Ссылка.ПротоколСОшибкой
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ЗапросКолонка3.Ссылка.ПротоколСОшибкой
		|									ТОГДА ИСТИНА
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ЗапросКолонка2.Ссылка.ПротоколСОшибкой
		|											ТОГДА ИСТИНА
		|										ИНАЧЕ ВЫБОР
		|												КОГДА ЗапросКолонка1.Ссылка.ПротоколСОшибкой
		|													ТОГДА ИСТИНА
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПротоколСОшибкойУведомлением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПротоколСУведомлениемОшибкой.Ссылка, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПротоколСУведомлениемОшибкой
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|		ГДЕ
		|			ТранспортноеСообщение.Ссылка В(&ПолученныеТранспортныеСообщения)) КАК НовыеСообщения
		|		ПО ЦиклыОбмена.Ссылка = НовыеСообщения.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПредставлениеНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПредставлениеНП)) КАК ЗапросКолонка1
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка1.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ПодтверждениеПредставлениеНО)) КАК ЗапросКолонка2
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка2.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП)) КАК ЗапросКолонка3
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка3.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеПредставлениеНО)) КАК ЗапросКолонка4
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка4.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			СодержимоеТранспортногоКонтейнера.ЧислоСодержимого КАК ЧислоСодержимого
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщениеСсылка,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СодержимоеТранспортныхКонтейнеров.ИмяФайла) КАК ЧислоСодержимого
		|				ИЗ
		|					РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
		|				ГДЕ
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК СодержимоеТранспортногоКонтейнера
		|				ПО ТранспортноеСообщение.Ссылка = СодержимоеТранспортногоКонтейнера.ТранспортноеСообщениеСсылка
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.РезультатПриемаПредставлениеНО)) КАК ЗапросКолонка5
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка5.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус,
		|			ТранспортныйКонтейнер.ЧислоКонтейнеров КАК ЧислоКонтейнеров
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					КрайнееСообщение.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортныйКонтейнерСообщение,
		|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортныеКонтейнеры.ИмяФайла) КАК ЧислоКонтейнеров
		|				ИЗ
		|					РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
		|				ГДЕ
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК ТранспортныйКонтейнер
		|				ПО (ТранспортныйКонтейнер.ТранспортныйКонтейнерСообщение = ТранспортноеСообщение.Ссылка)
		|		ГДЕ
		|			ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП)) КАК ЗапросКолонка6
		|		ПО ЦиклыОбмена.Ссылка = ЗапросКолонка6.ЦиклОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТранспортноеСообщение.Ссылка КАК Ссылка,
		|			ТранспортноеСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|			ТранспортноеСообщение.Тип КАК Тип,
		|			ТранспортноеСообщение.Статус КАК Статус
		|		ИЗ
		|			Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КрайнееСообщение.ЦиклОбмена КАК ЦиклОбмена,
		|					МАКСИМУМ(КрайнееСообщение.Ссылка) КАК СсылкаКрайнегоСообщения
		|				ИЗ
		|					Документ.ТранспортноеСообщение КАК КрайнееСообщение
		|				ГДЕ
		|					(КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|							ИЛИ КрайнееСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КрайнееСообщение.ЦиклОбмена) КАК КрайнееСообщение
		|				ПО ТранспортноеСообщение.ЦиклОбмена = КрайнееСообщение.ЦиклОбмена
		|					И ТранспортноеСообщение.Ссылка = КрайнееСообщение.СсылкаКрайнегоСообщения
		|		ГДЕ
		|			(ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС)
		|					ИЛИ ТранспортноеСообщение.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТранспортныхСообщений.КритическаяОшибка))) КАК ПротоколСУведомлениемОшибкой
		|		ПО ЦиклыОбмена.Ссылка = ПротоколСУведомлениемОшибкой.ЦиклОбмена
		|ГДЕ
		|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФНС)
		|	И ЦиклыОбмена.Предмет = &СсылкаДляОтбора
		|	И ЦиклыОбмена.Предмет <> НЕОПРЕДЕЛЕНО";
		
	КонецЕсли; 
	
	Возврат Настройки;

КонецФункции

&НаСервере
Процедура ПринудительноПерестроитьФормуНаСервере()
	
	РеквизитУжеЕсть = Ложь;
	ИмяРеквизита = "СлужебныйРеквизит_123456789";
	
	РеквизитыФормы = ПолучитьРеквизиты();
	Для Каждого Реквизит Из РеквизитыФормы Цикл
		Если Реквизит.Имя = ИмяРеквизита Тогда
			РеквизитУжеЕсть = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если РеквизитУжеЕсть Тогда
		МассивУдаления = Новый Массив;
		МассивУдаления.Добавить(ИмяРеквизита);
		ИзменитьРеквизиты(, МассивУдаления);
	Иначе
		МассивДобавления = Новый Массив;
		МассивДобавления.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка")));
		ИзменитьРеквизиты(МассивДобавления);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСоответствиеСписокСтраница()
	
	СоответствиеСписокСтраница = Новый Соответствие;
	// ФНС
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаОтчетностьФНС", "ГруппаОтчетностьФНС");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаЗаявление", "ГруппаЗаявление");
	СоответствиеСписокСтраница.Вставить("Требования", "ГруппаТребования");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаТребования", "ГруппаТребования");
	СоответствиеСписокСтраница.Вставить("Представления", "ГруппаПредставления");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаПредставления", "ГруппаПредставления");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаУведомления", "ГруппаУведомления");
	СоответствиеСписокСтраница.Вставить("ИсходящиеДокументыФНС", "ГруппаИсходящиеДокументыФНС");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаИсходящиеФНС", "ГруппаИсходящиеДокументыФНС");
	СоответствиеСписокСтраница.Вставить("ВходящиеДокументыФНС", "ГруппаВходящиеДокументыФНС");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаВходящиеФНС", "ГруппаВходящиеДокументыФНС");
	СоответствиеСписокСтраница.Вставить("ЗапросНаИнформационноеОбслуживаниеНалогоплательщика", "ГруппаЗапросыФНС");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаЗапросыИОН", "ГруппаЗапросыФНС");
	
	// ПФР
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаОтчетностьПФР", "ОтчетностьПФР");
	СоответствиеСписокСтраница.Вставить("ИсходящиеДокументыПФР", "ИсходящиеДокументыПФР");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаИсходящиеПФР", "ИсходящиеДокументыПФР");
	СоответствиеСписокСтраница.Вставить("ВходящиеДокументыПФР", "ВходящиеДокументыПФР");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаВходящиеПФР", "ВходящиеДокументыПФР");
	СоответствиеСписокСтраница.Вставить("ЗапросНаИнформационноеОбслуживаниеСтрахователя", "ЗапросыПФР");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаЗапросыИОС", "ЗапросыПФР");
	
	// Росстат
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаОтчетностьФСГС", "ОтчетностьФСГС");
	СоответствиеСписокСтраница.Вставить("ИсходящиеДокументыФСГС", "ИсходящиеДокументыФСГС");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаИсходящиеФСГС", "ИсходящиеДокументыФСГС");
	СоответствиеСписокСтраница.Вставить("ВходящиеДокументыФСГС", "ВходящиеДокументыФСГС");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаВходящиеФСГС", "ВходящиеДокументыФСГС");
	
	// ФСС
	СоответствиеСписокСтраница.Вставить("ОтправкиОтчетностьФСС", "ГруппаОтчетностьФСС");
	
	// ФСРАР
	СоответствиеСписокСтраница.Вставить("ОтправкиОтчетностьФСРАР", "ГруппаОтчетностьФСРАР");
	
	// РПН
	СоответствиеСписокСтраница.Вставить("ОтправкиОтчетностьРПН", "ГруппаОтчетностьРПН");
	
	// ФТС
	СоответствиеСписокСтраница.Вставить("ОтправкиОтчетностьФТС", "ГруппаОтчетностьФТС");
	
	// Выписки
	СоответствиеСписокСтраница.Вставить("ЗапросыНаВыпискуИзЕГРЮЛ_ЕГРИП", "ГруппаЗапросНаВыпискуЕГР");
	СоответствиеСписокСтраница.Вставить("ЦиклыОбменаЗапросыЕГР", "ГруппаЗапросНаВыпискуЕГР");
	
	// Прочее
	// не используется
	
	Возврат СоответствиеСписокСтраница; 
	
КонецФункции

&НаСервере
Функция ПолучитьСоответствиеСтраницаНадпись()
	
	СоответствиеСтраницаНадпись = Новый Соответствие;
	// ФНС
	СоответствиеСтраницаНадпись.Вставить("ГруппаОтчетностьФНС", "СтраницаОтчетностьФНС");
	СоответствиеСтраницаНадпись.Вставить("ГруппаЗаявление", "СтраницаЗаявление");
	СоответствиеСтраницаНадпись.Вставить("ГруппаТребования", "СтраницаТребования");
	СоответствиеСтраницаНадпись.Вставить("ГруппаПредставления", "СтраницаПредставления");
	СоответствиеСтраницаНадпись.Вставить("ГруппаУведомления", "СтраницаУведомления");
	СоответствиеСтраницаНадпись.Вставить("ГруппаИсходящиеДокументыФНС", "СтраницаИсходящиеДокументыФНС");
	СоответствиеСтраницаНадпись.Вставить("ГруппаВходящиеДокументыФНС", "СтраницаВходящиеДокументыФНС");
	СоответствиеСтраницаНадпись.Вставить("ГруппаЗапросыФНС", "СтраницаЗапросыФНС");
	
	// ПФР
	СоответствиеСтраницаНадпись.Вставить("ОтчетностьПФР", "СтраницаОтчетностьПФР");
	СоответствиеСтраницаНадпись.Вставить("ИсходящиеДокументыПФР", "СтраницаИсходящиеПФР");
	СоответствиеСтраницаНадпись.Вставить("ВходящиеДокументыПФР", "СтраницаВходящиеПФР");
	СоответствиеСтраницаНадпись.Вставить("ЗапросыПФР", "СтраницаЗапросыИОС");
	
	// Росстат
	СоответствиеСтраницаНадпись.Вставить("ОтчетностьФСГС", "СтраницаОтчетностьФСГС");
	СоответствиеСтраницаНадпись.Вставить("ИсходящиеДокументыФСГС", "СтраницаИсходящиеФСГС");
	СоответствиеСтраницаНадпись.Вставить("ВходящиеДокументыФСГС", "СтраницаВходящиеФСГС");
	
	// ФСС
	СоответствиеСтраницаНадпись.Вставить("ГруппаОтчетностьФСС", "СтраницаОтчетностьФСС");
	
	// ФСРАР
	СоответствиеСтраницаНадпись.Вставить("ГруппаОтчетностьФСРАР", "СтраницаОтчетностьФСРАР");
	
	// РПН
	СоответствиеСтраницаНадпись.Вставить("ГруппаОтчетностьРПН", "СтраницаОтчетностьРПН");
	
	// ФТС
	СоответствиеСтраницаНадпись.Вставить("ГруппаОтчетностьФТС", "СтраницаОтчетностьФТС");
	
	// Выписки
	СоответствиеСтраницаНадпись.Вставить("ГруппаЗапросНаВыпискуЕГР", "СтраницаЗапросНаВыпискуЕГР");
	
	// Прочее
	// не используется
	
	Возврат СоответствиеСтраницаНадпись; 
	
КонецФункции

&НаКлиенте
Процедура РедактироватьОбъект(Ссылка)
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ПоказатьЗначение(,Ссылка);		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЗакладкойЗаявлений()
	// ВидДокументаЗаявленияОВвозе может принимать следующие значения:
	// - "Заявление", чтобы показать заявления о ввозе
	// - "ПереченьЗаявлений", чтобы показать перечни заявлений
		
	ЗаполнитьЗначенияСвойств(ЦиклыОбменаЗаявление, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаЗаявление"));
	Элементы.ТаблицаЦиклыОбменаЗаявление.Обновить();
	
	// устанавливаем "нажатость" пунктов меню и видимость колонок
	Если ВидДокументаЗаявленияОВвозе = "Заявление" Тогда
		Элементы.ВыборВидаЗаявление.Пометка 		= Истина;
		Элементы.ВыборВидаПереченьЗаявлений.Пометка = Ложь;
		
		Элементы.ТаблицаЦиклыОбменаЗаявлениеКолонка7.Видимость 	= Истина;
		Элементы.ТаблицаЦиклыОбменаЗаявлениеКолонка8.Видимость 	= Истина;
		Элементы.ТаблицаЦиклыОбменаЗаявлениеКолонка9.Видимость 	= Истина;
		Элементы.ТаблицаЦиклыОбменаЗаявлениеКолонка10.Видимость = Истина;
	ИначеЕсли ВидДокументаЗаявленияОВвозе = "ПереченьЗаявлений" Тогда
		Элементы.ВыборВидаЗаявление.Пометка 		= Ложь;
		Элементы.ВыборВидаПереченьЗаявлений.Пометка = Истина;
		
		Элементы.ТаблицаЦиклыОбменаЗаявлениеКолонка7.Видимость 	= Ложь;
		Элементы.ТаблицаЦиклыОбменаЗаявлениеКолонка8.Видимость 	= Ложь;
		Элементы.ТаблицаЦиклыОбменаЗаявлениеКолонка9.Видимость 	= Ложь;
		Элементы.ТаблицаЦиклыОбменаЗаявлениеКолонка10.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыборВидаЗаявление(Команда)
	ВидДокументаЗаявленияОВвозе = "Заявление";
	УправлениеЗакладкойЗаявлений();
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыборВидаПереченьЗаявлений(Команда)
	ВидДокументаЗаявленияОВвозе = "ПереченьЗаявлений";
	УправлениеЗакладкойЗаявлений();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПредставленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, ВыбраннаяСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ПереключитьНаПоясненияКДекларацииПоНДС(Команда)
	УправлениеЗакладкойОтветыНаТребования("ТребованиеПоясненийКДекларацииНДС");
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьНаОтветыНаТребованиеОПредставленииДокументов(Команда)
	УправлениеЗакладкойОтветыНаТребования("ТребованиеОПредставленииДокументов");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаРеквизит(ОбъектСсылка, ИмяРеквизита)
	
	Возврат ОбъектСсылка[ИмяРеквизита];
	
КонецФункции

&НаСервереБезКонтекста
Функция НайтиМетаданныеНаСервере(ИмяМД)
	
	Возврат Метаданные.Документы.Найти(ИмяМД) <> Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, ВыгружатьКонтейнеры, ВыгружатьСодержимое)
	
	Если ВидимыеЦиклы.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбраны циклы обмена!'"));
	Иначе
		Если ВидимыеЦиклы.Количество() = 1 Тогда
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выгрузить цикл обмена ""%1""?'"), КонтекстЭДОКлиент.ПредставлениеЦиклаОбмена(ВидимыеЦиклы[0]));
		Иначе
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выгрузить выбранные %1 циклов обмена?'"), Строка(ВидимыеЦиклы.Количество()));
		КонецЕсли;
		ДополнительныеПараметры = Новый Структура("ВидимыеЦиклы, ВыгружатьКонтейнеры, ВыгружатьСодержимое", ВидимыеЦиклы, ВыгружатьКонтейнеры, ВыгружатьСодержимое);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьЦиклыОбменаЗавершение", ЭтотОБъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЦиклыОбменаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	ВидимыеЦиклы = ДополнительныеПараметры.ВидимыеЦиклы;
	ВыгружатьКонтейнеры = ДополнительныеПараметры.ВыгружатьКонтейнеры;
	ВыгружатьСодержимое = ДополнительныеПараметры.ВыгружатьСодержимое;
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДОКлиент.ВыгрузитьЦиклыОбмена(ВидимыеЦиклы, ВыгружатьКонтейнеры, ВыгружатьСодержимое);
	
КонецПроцедуры

&НаСервере
Функция ВызватьВыборВТабличномПолеЦикловОбмена(ВыбраннаяСтрока, Колонка, СтандартнаяОбработка) Экспорт
	
	Если КонтекстЭДОСервер = Неопределено Тогда 
		// инициализируем контекст ЭДО - модуль обработки
		КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	КонецЕсли;
	
	Возврат КонтекстЭДОСервер.ВыборВТабличномПолеЦикловОбмена(ВыбраннаяСтрока, Колонка, СтандартнаяОбработка);
	
КонецФункции

&НаКлиенте
Процедура ТаблицаЦиклыОбменаВыборЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда 
		ПоказатьЗначение(, РезультатВыбора.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьУстановитьФлажки(Пометка)
	
	Для Каждого Элемент Из УчетныеЗаписи Цикл
		Элемент.Пометка = Пометка
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ВопросПриОткрытииЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОткрытьФорму("Справочник.УчетныеЗаписиДокументооборота.ФормаСписка");
	КонецЕсли;
	
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УчетныеЗаписиПоСпискуОрганизаций(СписокОрганизаций)
	
	Результат = Новый Массив;
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	                      |	Организации.УчетнаяЗаписьОбмена КАК УчетнаяЗапись
	                      |ИЗ
	                      |	Справочник.Организации КАК Организации
	                      |ГДЕ
	                      |	Организации.Ссылка В(&Ссылка)
	                      |	И Организации.ВидОбменаСКонтролирующимиОрганами = &ВидОбменаСКонтролирующимиОрганами");
	Запрос.УстановитьПараметр("Ссылка", СписокОрганизаций);
	Запрос.УстановитьПараметр("ВидОбменаСКонтролирующимиОрганами", Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменВУниверсальномФормате);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Выборка.УчетнаяЗапись);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОсновнаяКоманднаяПанельОбменяться(Команда)
	
	ВыбранныеОрганизации = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
	Если ВыбранныеОрганизации.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Учетная запись не выбрана.'"));
		Возврат;
	ИначеЕсли ВыбранныеОрганизации.Количество() = 1 Тогда
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Произвести обмен сообщениями по учетной записи ""%1""?'"), ВыбранныеОрганизации[0]);
	Иначе
		ТекстВопроса = НСтр("ru = 'Произвести обмен сообщениями по выбранным учетным записям?'");
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("ВыбранныеОрганизации", ВыбранныеОрганизации);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВопросОбменятьсяЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОбменятьсяЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	ВыбранныеОрганизации = ДополнительныеПараметры.ВыбранныеОрганизации;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДополнительныеПараметры = Новый Структура("ВыбранныеОрганизации", ВыбранныеОрганизации);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОсновнаяКоманднаяПанельОбменятьсяЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяКоманднаяПанельОбменятьсяЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	ВыбранныеОрганизации = ДополнительныеПараметры.ВыбранныеОрганизации;
	
	// получаем массив учетных записей по массиву организаций
	ВыбранныеУчетныеЗаписи = ПолучитьМассивУчетныхЗаписей(ВыбранныеОрганизации);
	
	СписокПолученныхТС = ПолученныеТранспортныеСообщения.Скопировать();
	
	ОсуществитьОбменПоВыбраннойУчетнойЗаписи(ВыбранныеУчетныеЗаписи, СписокПолученныхТС, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсуществитьОбменПоВыбраннойУчетнойЗаписи(ВыбранныеУчетныеЗаписи, СписокПолученныхТС, НомерОбъекта)

	Если НомерОбъекта + 1 > ВыбранныеУчетныеЗаписи.Количество() Тогда
		
		Оповестить("Заполнение списка полученных сообщений", СписокПолученныхТС.ВыгрузитьЗначения());
	
		ПолученныеТранспортныеСообщения = СписокПолученныхТС.Скопировать();
		ПриСменеСтраницы(Неопределено, Неопределено);
		
	Иначе
		
		ВыбраннаяУчетнаяЗапись = ВыбранныеУчетныеЗаписи[НомерОбъекта];
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("ВыбранныеУчетныеЗаписи", ВыбранныеУчетныеЗаписи);
		ДополнительныеПараметры.Вставить("СписокПолученныхТС",     СписокПолученныхТС);
		ДополнительныеПараметры.Вставить("НомерОбъекта",           НомерОбъекта);

		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ОсуществитьОбменПоВыбраннойУчетнойЗаписиЗавершение",
			ЭтотОбъект,
			ДополнительныеПараметры);
		
		КонтекстЭДОКлиент.ОсуществитьОбменПоУчетнойЗаписи(
			ОписаниеОповещения,
			ВыбраннаяУчетнаяЗапись,
			СписокПолученныхТС);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОсуществитьОбменПоВыбраннойУчетнойЗаписиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ВыбранныеУчетныеЗаписи = ДополнительныеПараметры.ВыбранныеУчетныеЗаписи;
	СписокПолученныхТС = ДополнительныеПараметры.СписокПолученныхТС;
	НомерОбъекта = ДополнительныеПараметры.НомерОбъекта;
	
	ОсуществитьОбменПоВыбраннойУчетнойЗаписи(ВыбранныеУчетныеЗаписи, СписокПолученныхТС, НомерОбъекта + 1);	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивУчетныхЗаписей(ВыбранныеОрганизации)
	
	// получаем массив учетных записей по массиву организаций
	КонтекстЭДО = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	Возврат КонтекстЭДО.УчетныеЗаписиПоОрганизациям(ВыбранныеОрганизации);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьУчетныеЗаписи()
	
	Если КонтекстЭДОСервер = Неопределено Тогда 
		// инициализируем контекст ЭДО - модуль обработки
		КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации");
		ОрганизацияПоУмолчанию = Модуль.ОрганизацияПоУмолчанию();
		
		Если ЗначениеЗаполнено(ОрганизацияПоУмолчанию) Тогда
			
			УчетныеЗаписи.Очистить();
			НоваяСтрока = УчетныеЗаписи.Добавить();
			НоваяСтрока.Пометка = Истина;
			
			НоваяСтрока.Объект = ОрганизацияПоУмолчанию;
			ОтборУчетнаяЗапись = ОрганизацияПоУмолчанию;
			
		КонецЕсли;
		
	Иначе
	
		ДопустимыеУчетныеЗаписи = КонтекстЭДОСервер.СписокДопустимыхОрганизацийВОбъектахОбмена();
			
		Для Каждого ДопустимаяУчетнаяЗаписьФНС Из ДопустимыеУчетныеЗаписи Цикл
			Если УчетныеЗаписи.НайтиСтроки(Новый Структура("Объект", ДопустимаяУчетнаяЗаписьФНС)).Количество() = 0 Тогда
				НовСтр = УчетныеЗаписи.Добавить();
				НовСтр.Объект = ДопустимаяУчетнаяЗаписьФНС;
			КонецЕсли;
		КонецЦикла;
		
		// расширим список допустимых учетных записей на список организаций, у которых настроен обмен с ФСС
		ДопустимыеУчетныеЗаписиФСС = КонтекстЭДОСервер.СписокДопустимыхОрганизацийВОбъектахОбменаФСС();
		Для Каждого ДопустимаяУчетнаяЗаписьФСС Из ДопустимыеУчетныеЗаписиФСС Цикл
			Если УчетныеЗаписи.НайтиСтроки(Новый Структура("Объект", ДопустимаяУчетнаяЗаписьФСС)).Количество() = 0 Тогда
				НовСтр = УчетныеЗаписи.Добавить();
				НовСтр.Объект = ДопустимаяУчетнаяЗаписьФСС;
			КонецЕсли;
		КонецЦикла;
		
		// расширим список допустимых учетных записей на список организаций, у которых настроен обмен с ФСРАР
		ДопустимыеУчетныеЗаписиФСРАР = КонтекстЭДОСервер.СписокДопустимыхОрганизацийВОбъектахОбменаФСРАР();
		Для Каждого ДопустимаяУчетнаяЗаписьФСРАР Из ДопустимыеУчетныеЗаписиФСРАР Цикл
			Если УчетныеЗаписи.НайтиСтроки(Новый Структура("Объект", ДопустимаяУчетнаяЗаписьФСРАР)).Количество() = 0 Тогда
				НовСтр = УчетныеЗаписи.Добавить();
				НовСтр.Объект = ДопустимаяУчетнаяЗаписьФСРАР;
			КонецЕсли;
		КонецЦикла;
		
		// расширим список допустимых учетных записей на список организаций, у которых настроен обмен с РПН
		ДопустимыеУчетныеЗаписиРПН = КонтекстЭДОСервер.СписокДопустимыхОрганизацийВОбъектахОбменаРПН();
		Для Каждого ДопустимаяУчетнаяЗаписьРПН Из ДопустимыеУчетныеЗаписиРПН Цикл
			Если УчетныеЗаписи.НайтиСтроки(Новый Структура("Объект", ДопустимаяУчетнаяЗаписьРПН)).Количество() = 0 Тогда
				НовСтр = УчетныеЗаписи.Добавить();
				НовСтр.Объект = ДопустимаяУчетнаяЗаписьРПН;
			КонецЕсли;
		КонецЦикла;
		
		// расширим список допустимых учетных записей на список организаций, у которых настроен обмен с ФТС
		ДопустимыеУчетныеЗаписиФТС = КонтекстЭДОСервер.СписокДопустимыхОрганизацийВОбъектахОбменаФТС();
		Для Каждого ДопустимаяУчетнаяЗаписьФТС Из ДопустимыеУчетныеЗаписиФТС Цикл
			Если УчетныеЗаписи.НайтиСтроки(Новый Структура("Объект", ДопустимаяУчетнаяЗаписьФТС)).Количество() = 0 Тогда
				НовСтр = УчетныеЗаписи.Добавить();
				НовСтр.Объект = ДопустимаяУчетнаяЗаписьФТС;
			КонецЕсли;
		КонецЦикла;
		
		КоличествоУчетныхЗаписей = УчетныеЗаписи.Количество();
		Для ОбратныйИндекс = 1 По КоличествоУчетныхЗаписей Цикл
			НомСтр = КоличествоУчетныхЗаписей - ОбратныйИндекс;
			ТекЗапись = УчетныеЗаписи[НомСтр].Объект;
			Если ДопустимыеУчетныеЗаписи.Найти(ТекЗапись) = Неопределено
			И ДопустимыеУчетныеЗаписиФСС.Найти(ТекЗапись) = Неопределено
			И ДопустимыеУчетныеЗаписиФСРАР.Найти(ТекЗапись) = Неопределено
			И ДопустимыеУчетныеЗаписиРПН.Найти(ТекЗапись) = Неопределено
			И ДопустимыеУчетныеЗаписиФТС.Найти(ТекЗапись) = Неопределено Тогда
				Если ОтборУчетнаяЗапись = ТекЗапись Тогда
					ОтборУчетнаяЗапись = Неопределено;
				КонецЕсли;
				УчетныеЗаписи.Удалить(НомСтр);
			КонецЕсли;
		КонецЦикла;
		
		УчетныеЗаписи.Сортировать("Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиСтраниц(сохрТекущаяСтраницаПанелиФормы, сохрТекущаяСтраницаПанелиФНС, сохрТекущаяСтраницаПанелиПФР, сохрТекущаяСтраницаПанелиФСГС)
	
	// восстанавливаем страницу панели формы
	сохрТекущаяСтраницаПанелиФормы = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ТекущаяСтраницаПанелиФормы");
	Если сохрТекущаяСтраницаПанелиФормы <> Неопределено Тогда 
		РезультатПоиска = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы.Найти(сохрТекущаяСтраницаПанелиФормы);
		Если РезультатПоиска <> Неопределено Тогда
			Элементы.ГруппаСтраниц.ТекущаяСтраница = РезультатПоиска;
		КонецЕсли;
	КонецЕсли;
	
	// восстанавливаем текущую страницу панели обмена с ФНС
	сохрТекущаяСтраницаПанелиФНС = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ТекущаяСтраницаПанелиФНС");
	Если сохрТекущаяСтраницаПанелиФНС <> Неопределено Тогда 
		Для Каждого Страница Из Элементы.ГруппаСтраницыФНС.ПодчиненныеЭлементы Цикл 
			Если сохрТекущаяСтраницаПанелиФНС = Страница.Имя Тогда
				Элементы.ГруппаСтраницыФНС.ТекущаяСтраница = Страница;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// восстанавливаем текущую страницу панели обмена с ПФР
	сохрТекущаяСтраницаПанелиПФР = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ТекущаяСтраницаПанелиПФР");
	Если сохрТекущаяСтраницаПанелиПФР <> Неопределено Тогда 
		Для Каждого Страница Из Элементы.ГруппаСтраницыПФР.ПодчиненныеЭлементы Цикл 
			Если сохрТекущаяСтраницаПанелиПФР = Страница.Имя Тогда
				Элементы.ГруппаСтраницыПФР.ТекущаяСтраница = Страница;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// восстанавливаем текущую страницу панели обмена с Росстатом
	сохрТекущаяСтраницаПанелиФСГС = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ТекущаяСтраницаПанелиФСГС");
	Если сохрТекущаяСтраницаПанелиФСГС <> Неопределено Тогда 
		Для Каждого Страница Из Элементы.ГруппаСтраницыФСГС.ПодчиненныеЭлементы Цикл 
			Если сохрТекущаяСтраницаПанелиФСГС = Страница.Имя Тогда
				Элементы.ГруппаСтраницыФСГС.ТекущаяСтраница = Страница;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если сохрТекущаяСтраницаПанелиФормы = Неопределено И сохрТекущаяСтраницаПанелиФНС = Неопределено Тогда 
		// сохраненных настроек нет 
		сохрТекущаяСтраницаПанелиФормы = Элементы.ГруппаФНС.Имя;
		сохрТекущаяСтраницаПанелиФНС = Элементы.ГруппаОтчетностьФНС.Имя;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройки()
	
	// восстанавливаем признаки отображения циклов обмена по неформализованным ФНС
	сохрИсходящиеДокументыФНС_ОтображатьЦиклыОбмена = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ИсходящиеДокументыФНС_ОтображатьЦиклыОбмена");
	Если сохрИсходящиеДокументыФНС_ОтображатьЦиклыОбмена <> Неопределено Тогда
		Элементы.КнопкаИсходящиеДокументыФНСОтображатьСписокЦикловОбмена.Пометка = сохрИсходящиеДокументыФНС_ОтображатьЦиклыОбмена;
	КонецЕсли;
	
	сохрВходящиеДокументыФНС_ОтображатьЦиклыОбмена = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ВходящиеДокументыФНС_ОтображатьЦиклыОбмена");
	Если сохрВходящиеДокументыФНС_ОтображатьЦиклыОбмена <> Неопределено Тогда
		Элементы.КнопкаВходящиеДокументыФНСОтображатьСписокЦикловОбмена.Пометка = сохрВходящиеДокументыФНС_ОтображатьЦиклыОбмена;
	КонецЕсли;
	
	// восстанавливаем признаки отображения циклов обмена по требованиям
	сохрТребования_ОтображатьЦиклыОбмена = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_Требования_ОтображатьЦиклыОбмена");
	Если сохрТребования_ОтображатьЦиклыОбмена <> Неопределено Тогда
		Элементы.КнопкаТребованияОтображатьСписокЦикловОбмена.Пометка = сохрТребования_ОтображатьЦиклыОбмена;
	КонецЕсли;
	
	// восстанавливаем признаки отображения циклов обмена по представлениям
	сохрПредставления_ОтображатьЦиклыОбмена = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_Представления_ОтображатьЦиклыОбмена");
	Если сохрПредставления_ОтображатьЦиклыОбмена <> Неопределено Тогда
		Элементы.ТаблицаПредставленияКнопкаОтображатьСписокЦикловОбмена.Пометка = сохрПредставления_ОтображатьЦиклыОбмена;
	КонецЕсли;
	
	// восстанавливаем признаки отображения циклов обмена по уведомлениям
	сохрУведомления_ОтображатьЦиклыОбмена = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_Уведомления_ОтображатьЦиклыОбмена");
	Если сохрУведомления_ОтображатьЦиклыОбмена <> Неопределено Тогда
		Элементы.ТаблицаУведомленияКнопкаОтображатьСписокЦикловОбмена.Пометка = сохрУведомления_ОтображатьЦиклыОбмена;
	КонецЕсли;

	// восстанавливаем признак режима одной учетной записи
		сохрРежимОднойУчетнойЗаписи = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_РежимОднойУчетнойЗаписи");
	Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка = ?(сохрРежимОднойУчетнойЗаписи = Неопределено, Ложь, сохрРежимОднойУчетнойЗаписи);
	
	// восстанавливаем список выбранных учетных записей ФНС
	Если НЕ РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		сохрВыбранныеУчетныеЗаписи = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ВыбранныеУчетныеЗаписи");
		Если сохрВыбранныеУчетныеЗаписи <> Неопределено Тогда
			ВыбранныеУчетныеЗаписи = Новый СписокЗначений;
			ВыбранныеУчетныеЗаписи.ЗагрузитьЗначения(сохрВыбранныеУчетныеЗаписи);
		Иначе
			ВыбранныеУчетныеЗаписи = Новый СписокЗначений;
			ВыбранныеУчетныеЗаписи.ЗагрузитьЗначения(УчетныеЗаписи.Выгрузить().ВыгрузитьКолонку("Объект"));
		КонецЕсли;
		Для Каждого УчЗапись Из УчетныеЗаписи Цикл
			УчЗапись.Пометка = (ВыбранныеУчетныеЗаписи.НайтиПоЗначению(УчЗапись.Объект) <> Неопределено);
		КонецЦикла;
		Если ВыбранныеУчетныеЗаписи.Количество() <> 0 Тогда
			ОтборУчетнаяЗапись = ВыбранныеУчетныеЗаписи.Получить(0).Значение;
		КонецЕсли;
	КонецЕсли;
		
	// восстанавливаем признаки отображения циклов обмена по неформализованным ПФР
	сохрИсходящиеДокументыПФР_ОтображатьЦиклыОбмена = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ИсходящиеДокументыПФР_ОтображатьЦиклыОбмена");
	Если сохрИсходящиеДокументыПФР_ОтображатьЦиклыОбмена <> Неопределено Тогда
		Элементы.КнопкаИсходящиеДокументыПФРОтображатьСписокЦикловОбмена.Пометка = сохрИсходящиеДокументыПФР_ОтображатьЦиклыОбмена;
	КонецЕсли;
	
	сохрВходящиеДокументыПФР_ОтображатьЦиклыОбмена = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ВходящиеДокументыПФР_ОтображатьЦиклыОбмена");
	Если сохрВходящиеДокументыПФР_ОтображатьЦиклыОбмена <> Неопределено Тогда
		Элементы.КнопкаИсходящиеДокументыПФРОтображатьСписокЦикловОбмена.Пометка = сохрВходящиеДокументыПФР_ОтображатьЦиклыОбмена;
	КонецЕсли;
	
	// восстанавливаем признаки отображения циклов обмена по неформализованным Росстата
	сохрИсходящиеДокументыФСГС_ОтображатьЦиклыОбмена = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ИсходящиеДокументыФСГС_ОтображатьЦиклыОбмена");
	Если сохрИсходящиеДокументыФСГС_ОтображатьЦиклыОбмена <> Неопределено Тогда
		Элементы.КнопкаИсходящиеДокументыФСГСОтображатьСписокЦикловОбмена.Пометка = сохрИсходящиеДокументыФСГС_ОтображатьЦиклыОбмена;
	КонецЕсли;
	
	сохрВходящиеДокументыФСГС_ОтображатьЦиклыОбмена = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ВходящиеДокументыФСГС_ОтображатьЦиклыОбмена");
	Если сохрВходящиеДокументыФСГС_ОтображатьЦиклыОбмена <> Неопределено Тогда
		Элементы.КнопкаИсходящиеДокументыФСГСОтображатьСписокЦикловОбмена.Пометка = сохрВходящиеДокументыФСГС_ОтображатьЦиклыОбмена;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиОтборов()
	
	Элементы.ПредметОтчетностиФНСПредставление.Видимость 	= Ложь;
	Элементы.ПредметЗаявленийФНСПредставление.Видимость 	= Ложь;
	Элементы.ПредметОтчетностиПФРПредставление.Видимость 	= Ложь;
	Элементы.ПредметОтчетностиФСГСПредставление.Видимость 	= Ложь;
	Элементы.ПредметОтчетностиФССПредставление.Видимость 	= Ложь;
	Элементы.ПредметОтчетностиФСРАРПредставление.Видимость 	= Ложь;
	Элементы.ПредметОтчетностиРПНПредставление.Видимость 	= Ложь;
	Элементы.ПредметОтчетностиФТСПредставление.Видимость 	= Ложь;
	
	// Восстанавливаем отборы
	
	// Закладка ФНС, Отчетность
	СохраненноеЗначениеПредмета = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ФНСОтчетностьОтбор");
	Если СохраненноеЗначениеПредмета <> Неопределено Тогда
		Элементы.ОтобратьОтчетностьФНС.Пометка 	= Истина;
		ПредметОтчетностиФНС 					= СохраненноеЗначениеПредмета;
		ПредметОтчетностиФНСПредставление 		= Представление(СохраненноеЗначениеПредмета);
	КонецЕсли;
	
	// Закладка ФНС, Заявления
	СохраненноеЗначениеПредмета = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ФНСЗаявленияОтбор");
	Если СохраненноеЗначениеПредмета <> Неопределено Тогда
		Элементы.ОтобратьЗаявленияФНС.Пометка	= Истина;
		ПредметЗаявленийФНС 					= СохраненноеЗначениеПредмета;
		ПредметЗаявленийФНСПредставление		= Представление(СохраненноеЗначениеПредмета);
	КонецЕсли;
	
	// Закладка ПФР, Отчетность
	СохраненноеЗначениеПредмета = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ПФРОтчетностьОтбор");
	Если СохраненноеЗначениеПредмета <> Неопределено Тогда
		Элементы.ОтобратьОтчетностьПФР.Пометка	= Истина;
		ПредметОтчетностиПФР 					= СохраненноеЗначениеПредмета;
		ПредметОтчетностиПФРПредставление		= Представление(СохраненноеЗначениеПредмета);
	КонецЕсли;
	
	// Закладка Росстат, Отчетность
	СохраненноеЗначениеПредмета = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_РосстатОтчетностьОтбор");
	Если СохраненноеЗначениеПредмета <> Неопределено Тогда
		Элементы.ОтобратьОтчетностьФСГС.Пометка	= Истина;
		ПредметОтчетностиФСГС 					= СохраненноеЗначениеПредмета;
		ПредметОтчетностиФСГСПредставление		= Представление(СохраненноеЗначениеПредмета);
	КонецЕсли;
	
	// Закладка ФСС, Отчетность
	СохраненноеЗначениеПредмета = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ФССОтчетностьОтбор");
	Если СохраненноеЗначениеПредмета <> Неопределено Тогда
		Элементы.ОтобратьОтчетностьФСС.Пометка	= Истина;
		ПредметОтчетностиФСС 					= СохраненноеЗначениеПредмета;
		ПредметОтчетностиФССПредставление		= Представление(СохраненноеЗначениеПредмета);
	КонецЕсли;
	
	// Закладка ФСРАР, Отчетность
	СохраненноеЗначениеПредмета = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ФСРАРОтчетностьОтбор");
	Если СохраненноеЗначениеПредмета <> Неопределено Тогда
		Элементы.ОтобратьОтчетностьФСРАР.Пометка	= Истина;
		ПредметОтчетностиФСРАР 						= СохраненноеЗначениеПредмета;
		ПредметОтчетностиФСРАРПредставление			= Представление(СохраненноеЗначениеПредмета);
	КонецЕсли;
	
	// Закладка РПН, Отчетность
	СохраненноеЗначениеПредмета = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_РПНОтчетностьОтбор");
	Если СохраненноеЗначениеПредмета <> Неопределено Тогда
		Элементы.ОтобратьОтчетностьРПН.Пометка	= Истина;
		ПредметОтчетностиРПН 						= СохраненноеЗначениеПредмета;
		ПредметОтчетностиРПНПредставление			= Представление(СохраненноеЗначениеПредмета);
	КонецЕсли;
	
	// Закладка ФТС, Отчетность
	СохраненноеЗначениеПредмета = ХранилищеОбщихНастроек.Загрузить("КонтекстЭДО_ФТСОтчетностьОтбор");
	Если СохраненноеЗначениеПредмета <> Неопределено Тогда
		Элементы.ОтобратьОтчетностьФТС.Пометка	= Истина;
		ПредметОтчетностиФТС 						= СохраненноеЗначениеПредмета;
		ПредметОтчетностиФТСПредставление			= Представление(СохраненноеЗначениеПредмета);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_РежимОднойУчетнойЗаписи", , Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка);
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ТекущаяСтраницаПанелиФНС", , Элементы.ГруппаФНС.ПодчиненныеЭлементы.ГруппаСтраницыФНС.ТекущаяСтраница.Имя);
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ВыбранныеУчетныеЗаписи", , ВыбранныеУчетныеЗаписи(ЭтаФорма, Неопределено));
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ТекущаяСтраницаПанелиФормы", , Элементы.ГруппаСтраниц.ТекущаяСтраница.Имя);
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ТекущаяСтраницаПанелиПФР", , Элементы.ГруппаПФР.ПодчиненныеЭлементы.ГруппаСтраницыПФР.ТекущаяСтраница.Имя);
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ТекущаяСтраницаПанелиФСГС", , Элементы.ГруппаФСГС.ПодчиненныеЭлементы.ГруппаСтраницыФСГС.ТекущаяСтраница.Имя);
	
	// Сохраняем свойства отбора
	
	// Закладка ФНС, Отчетность
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ФНСОтчетностьОтбор", , 
		?(Элементы.ОтобратьОтчетностьФНС.Пометка, ПредметОтчетностиФНС, Неопределено));
	
	// Закладка ФНС, Заявления
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ФНСЗаявленияОтбор", , 
		?(Элементы.ОтобратьОтчетностьФНС.Пометка, ПредметЗаявленийФНС, Неопределено));
	
	// Закладка ПФР, Отчетность
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ПФРОтчетностьОтбор", , 
		?(Элементы.ОтобратьОтчетностьПФР.Пометка, ПредметОтчетностиПФР, Неопределено));
	
	// Закладка Росстат, Отчетность
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_РосстатОтчетностьОтбор", , 
		?(Элементы.ОтобратьОтчетностьФСГС.Пометка, ПредметОтчетностиФСГС, Неопределено));
	
	// Закладка ФСС, Отчетность
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ФССОтчетностьОтбор", , 
		?(Элементы.ОтобратьОтчетностьФСС.Пометка, ПредметОтчетностиФСС, Неопределено));
	
	// Закладка ФСРАР, Отчетность
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ФСРАРОтчетностьОтбор", , 
		?(Элементы.ОтобратьОтчетностьФСРАР.Пометка, ПредметОтчетностиФСРАР, Неопределено));
	
	// Закладка РПН, Отчетность
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_РПНОтчетностьОтбор", , 
		?(Элементы.ОтобратьОтчетностьРПН.Пометка, ПредметОтчетностиРПН, Неопределено));
	
	// Закладка ФТС, Отчетность
	ХранилищеОбщихНастроек.Сохранить("КонтекстЭДО_ФТСОтчетностьОтбор", , 
		?(Элементы.ОтобратьОтчетностьФТС.Пометка, ПредметОтчетностиФТС, Неопределено));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВыбранныеУчетныеЗаписи(Форма, СтраницаФормы = Неопределено)
	
	ЭтаФорма = Форма;
	Элементы = ЭтаФорма.Элементы;
	
	Если Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка Тогда
		УчЗаписи = Новый Массив;
		Если ЗначениеЗаполнено(ЭтаФорма.ОтборУчетнаяЗапись) Тогда
			УчЗаписи.Добавить(ЭтаФорма.ОтборУчетнаяЗапись);
		КонецЕсли;
		Возврат УчЗаписи;
	Иначе
		УчЗаписи = Новый Массив;
		Для Каждого УчЗап Из ЭтаФорма.УчетныеЗаписи Цикл
			Если УчЗап.Пометка Тогда
				УчЗаписи.Добавить(УчЗап.Объект);
			КонецЕсли;
		КонецЦикла;
		Возврат УчЗаписи;
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭУ(Форма)
	
	Элементы = Форма.Элементы;
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка = Ложь;
		РежимОднойУчетнойЗаписи = Истина;
		
		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить("КнопкаРежимОднойУчетнойЗаписи");
		МассивЭлементов.Добавить("ПолеОтборУчетнаяЗапись");
		МассивЭлементов.Добавить("ГруппаУчетныеЗаписи");
		
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.СкрытьЭлементыФормыПриИспользованииОднойОрганизации(Форма, МассивЭлементов);
	Иначе
		РежимОднойУчетнойЗаписи = Элементы.КнопкаРежимОднойУчетнойЗаписи.Пометка;
		
		// регулируем показ верхней панели с учетной записью
		Элементы.ПолеОтборУчетнаяЗапись.Видимость = РежимОднойУчетнойЗаписи;
		
		// регулируем показ левой панели с учетными записями
		Элементы.ГруппаУчетныеЗаписи.Видимость = НЕ РежимОднойУчетнойЗаписи;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыПроизвольныхЗапросов(сохрТекущаяСтраницаПанелиФормы, сохрТекущаяСтраницаПанелиФНС, сохрТекущаяСтраницаПанелиПФР, сохрТекущаяСтраницаПанелиФСГС, ВыбранныеУчетныеЗаписи = Неопределено)
	
	Если ПолученныеТранспортныеСообщения.Количество() > 0 Тогда 
		ЗначениеПараметраПолученныеТС = ПолученныеТранспортныеСообщения.ВыгрузитьЗначения();
	Иначе
		ЗначениеПараметраПолученныеТС = Документы.ТранспортноеСообщение.ПустаяСсылка();
	КонецЕсли;
	
	Если сохрТекущаяСтраницаПанелиФормы = "ГруппаФНС" Тогда 
		
		Если сохрТекущаяСтраницаПанелиФНС = "ГруппаОтчетностьФНС" Тогда 
			
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаОтчетностьФНС, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаОтчетностьФНС"));
			ЦиклыОбменаОтчетностьФНС.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения", ЗначениеПараметраПолученныеТС);
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			// Если установлен отбор по предмету, то отбор по организации игнорируем
			Если Элементы.ОтобратьОтчетностьФНС.Пометка = Истина И ЗначениеЗаполнено(ПредметОтчетностиФНС) Тогда 
				Если ЦиклыОбменаОтчетностьФНС.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")) <> Неопределено Тогда 
					ЦиклыОбменаОтчетностьФНС.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")).Использование = Ложь;
				КонецЕСли;
			Иначе
				ЦиклыОбменаОтчетностьФНС.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			КонецЕсли;
			
			Если Элементы.СтраницаОтчетностьФНС.Видимость Тогда
				ПринудительноПерестроитьФормуНаСервере();
			КонецЕсли;
			
			Элементы.СтраницаОтчетностьФНС.Видимость = Ложь;
			Элементы.ТаблицаЦиклыОбменаОтчетностьФНС.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиФНС = "ГруппаЗаявление" Тогда 
			
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаЗаявление, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаЗаявление"));
			ЦиклыОбменаЗаявление.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения", ЗначениеПараметраПолученныеТС);
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			// Если установлен отбор по предмету, то отбор по организации игнорируем
			Если Элементы.ОтобратьЗаявленияФНС.Пометка = Истина И ЗначениеЗаполнено(ПредметЗаявленийФНС) Тогда 
				Если ЦиклыОбменаЗаявление.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")) <> Неопределено Тогда
					ЦиклыОбменаЗаявление.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")).Использование = Ложь;
				КонецЕСли;
			Иначе
				ЦиклыОбменаЗаявление.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			КонецЕсли;
						
			Элементы.СтраницаЗаявление.Видимость = Ложь;
			Элементы.ТаблицаЦиклыОбменаЗаявление.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиФНС = "ГруппаТребования" Тогда
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(Требования, ПолучитьНастройкиДляДинамическогоСписка("Требования"));
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаТребования, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаТребования"));
			ЦиклыОбменаТребования.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			Требования.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			ЦиклыОбменаТребования.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаТребования.ТекущаяСтрока);
			
			Элементы.СтраницаТребования.Видимость = Ложь;
			Элементы.ТаблицаТребования.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаТребования.Видимость = Истина;
			
			
		ИначеЕсли сохрТекущаяСтраницаПанелиФНС = "ГруппаПредставления" Тогда
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			УправлениеЗакладкойОтветыНаТребования();
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаПредставления, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаПредставления"));
			
			Представления.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			ЦиклыОбменаПредставления.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаПредставления.ТекущаяСтрока);
			ЦиклыОбменаПредставления.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Элементы.СтраницаПредставления.Видимость = Ложь;
			Элементы.ТаблицаПредставления.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаПредставления.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиФНС = "ГруппаУведомления" Тогда
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаУведомления, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаУведомления"));
			
			Уведомления.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			ЦиклыОбменаУведомления.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаУведомления.ТекущаяСтрока);
			ЦиклыОбменаУведомления.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Элементы.СтраницаУведомления.Видимость = Ложь;
			Элементы.ТаблицаУведомления.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаУведомления.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиФНС = "ГруппаИсходящиеДокументыФНС" Тогда
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ИсходящиеДокументыФНС, ПолучитьНастройкиДляДинамическогоСписка("ИсходящиеДокументыФНС"));
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаИсходящиеФНС, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаИсходящиеФНС"));
			
			ИсходящиеДокументыФНС.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			ЦиклыОбменаИсходящиеФНС.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаИсходящиеДокументыФНС.ТекущаяСтрока);
			ЦиклыОбменаИсходящиеФНС.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Если Элементы.СтраницаИсходящиеДокументыФНС.Видимость Тогда
				ПринудительноПерестроитьФормуНаСервере();
			КонецЕсли;

			Элементы.СтраницаИсходящиеДокументыФНС.Видимость = Ложь;
			Элементы.ТаблицаИсходящиеДокументыФНС.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаИсходящиеФНС.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиФНС = "ГруппаВходящиеДокументыФНС" Тогда
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ВходящиеДокументыФНС, ПолучитьНастройкиДляДинамическогоСписка("ВходящиеДокументыФНС"));
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаВходящиеФНС, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаВходящиеФНС"));
			
			ВходящиеДокументыФНС.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			ЦиклыОбменаВходящиеФНС.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаВходящиеДокументыФНС.ТекущаяСтрока);
			ЦиклыОбменаВходящиеФНС.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
				
			Элементы.СтраницаВходящиеДокументыФНС.Видимость = Ложь;
			Элементы.ТаблицаВходящиеДокументыФНС.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаВходящиеФНС.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиФНС = "ГруппаЗапросыФНС" Тогда
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЗапросНаИнформационноеОбслуживаниеНалогоплательщика, ПолучитьНастройкиДляДинамическогоСписка("ЗапросНаИнформационноеОбслуживаниеНалогоплательщика"));
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаЗапросыИОН, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаЗапросыИОН"));
			
			ЗапросНаИнформационноеОбслуживаниеНалогоплательщика.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			ЦиклыОбменаЗапросыИОН.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаЗапросыИОН.ТекущаяСтрока);
			ЦиклыОбменаЗапросыИОН.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Если Элементы.СтраницаЗапросыФНС.Видимость Тогда
				ПринудительноПерестроитьФормуНаСервере();
			КонецЕсли;
			
			Элементы.СтраницаЗапросыФНС.Видимость = Ложь;
			Элементы.ТаблицаЗапросыИОН.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаЗапросыИОН.Видимость = Истина;
		КонецЕсли;
		
	ИначеЕсли сохрТекущаяСтраницаПанелиФормы = "ГруппаПФР" Тогда 
		
		Если сохрТекущаяСтраницаПанелиПФР = "ОтчетностьПФР" Тогда
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаОтчетностьПФР, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаОтчетностьПФР"));
			
			// Если установлен отбор по предмету, то отбор по организации игнорируем
			Если Элементы.ОтобратьОтчетностьПФР.Пометка = Истина И ЗначениеЗаполнено(ПредметОтчетностиПФР) Тогда 
				Если ЦиклыОбменаОтчетностьПФР.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")) <> Неопределено Тогда
					ЦиклыОбменаОтчетностьПФР.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")).Использование = Ложь;
				КонецЕсли;
			Иначе
				ЦиклыОбменаОтчетностьПФР.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			КонецЕсли;
			
			ЦиклыОбменаОтчетностьПФР.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Элементы.СтраницаОтчетностьПФР.Видимость = Ложь;
			Элементы.ТаблицаЦиклыОбменаОтчетностьПФР.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиПФР = "ИсходящиеДокументыПФР" Тогда
			
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаИсходящиеПФР, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаИсходящиеПФР"));
			ЗаполнитьЗначенияСвойств(ИсходящиеДокументыПФР, ПолучитьНастройкиДляДинамическогоСписка("ИсходящиеДокументыПФР"));
			
			ЦиклыОбменаИсходящиеПФР.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаИсходящиеДокументыПФР.ТекущаяСтрока);
			ЦиклыОбменаИсходящиеПФР.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ИсходящиеДокументыПФР.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			Если Элементы.СтраницаИсходящиеПФР.Видимость Тогда
				ПринудительноПерестроитьФормуНаСервере();
			КонецЕсли;
			
			Элементы.СтраницаИсходящиеПФР.Видимость = Ложь;
			Элементы.ТаблицаИсходящиеДокументыПФР.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаИсходящиеПФР.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиПФР = "ВходящиеДокументыПФР" Тогда
			
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаВходящиеПФР, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаВходящиеПФР"));
			ЗаполнитьЗначенияСвойств(ВходящиеДокументыПФР, ПолучитьНастройкиДляДинамическогоСписка("ВходящиеДокументыПФР"));
			
			ЦиклыОбменаВходящиеПФР.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаВходящиеДокументыПФР.ТекущаяСтрока);
			ЦиклыОбменаВходящиеПФР.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ВходящиеДокументыПФР.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			Элементы.СтраницаВходящиеПФР.Видимость = Ложь;
			Элементы.ТаблицаВходящиеДокументыПФР.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаВходящиеПФР.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиПФР = "ЗапросыПФР" Тогда
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЗапросНаИнформационноеОбслуживаниеСтрахователя, ПолучитьНастройкиДляДинамическогоСписка("ЗапросНаИнформационноеОбслуживаниеСтрахователя"));
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаЗапросыИОС, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаЗапросыИОС"));
			
			ЗапросНаИнформационноеОбслуживаниеСтрахователя.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			ЦиклыОбменаЗапросыИОС.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаЗапросыИОС.ТекущаяСтрока);
			ЦиклыОбменаЗапросыИОС.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Если Элементы.СтраницаЗапросыИОС.Видимость Тогда
				ПринудительноПерестроитьФормуНаСервере();
			КонецЕсли;
			
			Элементы.СтраницаЗапросыИОС.Видимость = Ложь;
			Элементы.ТаблицаЗапросыИОС.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаЗапросыИОС.Видимость = Истина;
			
		КонецЕсли;
		
	ИначеЕсли сохрТекущаяСтраницаПанелиФормы = "ГруппаФСГС" Тогда 
		
		Если сохрТекущаяСтраницаПанелиФСГС = "ОтчетностьФСГС" Тогда
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаОтчетностьФСГС, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаОтчетностьФСГС"));
			
			// Если установлен отбор по предмету, то отбор по организации игнорируем
			Если Элементы.ОтобратьОтчетностьФСГС.Пометка = Истина И ЗначениеЗаполнено(ПредметОтчетностиФСГС) Тогда 
				Если ЦиклыОбменаОтчетностьФСГС.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")) <> Неопределено Тогда
					ЦиклыОбменаОтчетностьФСГС.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")).Использование = Ложь;
				КонецЕсли;
			Иначе
				ЦиклыОбменаОтчетностьФСГС.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			КонецЕсли;
			
			ЦиклыОбменаОтчетностьФСГС.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Элементы.СтраницаОтчетностьФСГС.Видимость = Ложь;
			Элементы.ТаблицаЦиклыОбменаОтчетностьФСГС.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиФСГС = "ИсходящиеДокументыФСГС" Тогда

			ЗаполнитьЗначенияСвойств(ЦиклыОбменаИсходящиеФСГС, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаИсходящиеФСГС"));
			ЗаполнитьЗначенияСвойств(ИсходящиеДокументыФСГС, ПолучитьНастройкиДляДинамическогоСписка("ИсходящиеДокументыФСГС"));

			ЦиклыОбменаИсходящиеФСГС.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаИсходящиеДокументыФСГС.ТекущаяСтрока);
			ЦиклыОбменаИсходящиеФСГС.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ИсходящиеДокументыФСГС.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			Если Элементы.СтраницаИсходящиеФСГС.Видимость Тогда
				ПринудительноПерестроитьФормуНаСервере();
			КонецЕсли;
			
			Элементы.СтраницаИсходящиеФСГС.Видимость = Ложь;
			Элементы.ТаблицаИсходящиеДокументыФСГС.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаИсходящиеФСГС.Видимость = Истина;
			
		ИначеЕсли сохрТекущаяСтраницаПанелиФСГС = "ВходящиеДокументыФСГС" Тогда
			
			ЗаполнитьЗначенияСвойств(ЦиклыОбменаВходящиеФСГС, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаВходящиеФСГС"));
			ЗаполнитьЗначенияСвойств(ВходящиеДокументыФСГС, ПолучитьНастройкиДляДинамическогоСписка("ВходящиеДокументыФСГС"));
			
			ЦиклыОбменаВходящиеФСГС.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаВходящиеДокументыФСГС.ТекущаяСтрока);
			ЦиклыОбменаВходящиеФСГС.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
			
			Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
				ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
			КонецЕсли;
			
			ВходящиеДокументыФСГС.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
			
			Элементы.СтраницаВходящиеФСГС.Видимость = Ложь;
			Элементы.ТаблицаВходящиеДокументыФСГС.Видимость = Истина;
			Элементы.ТаблицаЦиклыОбменаВходящиеФСГС.Видимость = Истина;
			
		КонецЕсли;
		
	ИначеЕсли сохрТекущаяСтраницаПанелиФормы = "ГруппаФСС" Тогда 
		
		Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
			ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОтправкиОтчетностьФСС, ПолучитьНастройкиДляДинамическогоСписка("ОтправкиОтчетностьФСС"));
		
		// Если установлен отбор по предмету, то отбор по организации игнорируем
		Если Элементы.ОтобратьОтчетностьФСС.Пометка = Истина И ЗначениеЗаполнено(ПредметОтчетностиФСС) Тогда 
			Если ОтправкиОтчетностьФСС.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")) <> Неопределено Тогда
				ОтправкиОтчетностьФСС.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")).Использование = Ложь;
			КонецЕсли;
		Иначе
			ОтправкиОтчетностьФСС.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
		КонецЕсли;
		
		Элементы.СтраницаОтчетностьФСС.Видимость = Ложь;
		Элементы.ТаблицаОтправкиОтчетностьФСС.Видимость = Истина;
		
	ИначеЕсли сохрТекущаяСтраницаПанелиФормы = "ГруппаФСРАР" Тогда 
		
		Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
			ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОтправкиОтчетностьФСРАР, ПолучитьНастройкиДляДинамическогоСписка("ОтправкиОтчетностьФСРАР"));
		
		// Если установлен отбор по предмету, то отбор по организации игнорируем
		Если Элементы.ОтобратьОтчетностьФСРАР.Пометка = Истина И ЗначениеЗаполнено(ПредметОтчетностиФСРАР) Тогда 
			Если ОтправкиОтчетностьФСРАР.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")) <> Неопределено Тогда
				ОтправкиОтчетностьФСРАР.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")).Использование = Ложь;
			КонецЕсли;
		Иначе
			ОтправкиОтчетностьФСРАР.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
		КонецЕсли;
		
		Элементы.СтраницаОтчетностьФСРАР.Видимость = Ложь;
		Элементы.ТаблицаОтправкиОтчетностьФСРАР.Видимость = Истина;
		
	ИначеЕсли сохрТекущаяСтраницаПанелиФормы = "ГруппаРПН" Тогда
		
		Если ВыбранныеУчетныеЗаписи = Неопределено Тогда
			ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОтправкиОтчетностьРПН, ПолучитьНастройкиДляДинамическогоСписка("ОтправкиОтчетностьРПН"));
		
		// Если установлен отбор по предмету, то отбор по организации игнорируем
		Если Элементы.ОтобратьОтчетностьРПН.Пометка = Истина И ЗначениеЗаполнено(ПредметОтчетностиРПН) Тогда
			Если ОтправкиОтчетностьРПН.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")) <> Неопределено Тогда
				ОтправкиОтчетностьРПН.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")).Использование = Ложь;
			КонецЕсли;
		Иначе
			ОтправкиОтчетностьРПН.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
		КонецЕсли;
		
		Элементы.СтраницаОтчетностьРПН.Видимость = Ложь;
		Элементы.ТаблицаОтправкиОтчетностьРПН.Видимость = Истина;
		
	ИначеЕсли сохрТекущаяСтраницаПанелиФормы = "ГруппаФТС" Тогда
		
		Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
			ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОтправкиОтчетностьФТС, ПолучитьНастройкиДляДинамическогоСписка("ОтправкиОтчетностьФТС"));
		// Если установлен отбор по предмету, то отбор по организации игнорируем
		Если Элементы.ОтобратьОтчетностьФТС.Пометка = Истина И ЗначениеЗаполнено(ПредметОтчетностиФТС) Тогда
			Если ОтправкиОтчетностьФТС.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")) <> Неопределено Тогда
				ОтправкиОтчетностьФТС.Параметры.Элементы.Найти(Новый ПолеКомпоновкиДанных("Организация")).Использование = Ложь;
			КонецЕсли;
		Иначе
			ОтправкиОтчетностьФТС.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
		КонецЕсли;
		Элементы.СтраницаОтчетностьФТС.Видимость = Ложь;
		Элементы.ТаблицаОтправкиОтчетностьФТС.Видимость = Истина;
		
	ИначеЕсли сохрТекущаяСтраницаПанелиФормы = "ГруппаВыписки" Тогда
		

		ЗаполнитьЗначенияСвойств(ЦиклыОбменаЗапросыЕГР, ПолучитьНастройкиДляДинамическогоСписка("ЦиклыОбменаЗапросыЕГР"));
		ЗаполнитьЗначенияСвойств(ЗапросыНаВыпискуИзЕГРЮЛ_ЕГРИП, ПолучитьНастройкиДляДинамическогоСписка("ЗапросыНаВыпискуИзЕГРЮЛ_ЕГРИП"));
		
		ЦиклыОбменаЗапросыЕГР.Параметры.УстановитьЗначениеПараметра("СсылкаДляОтбора", Элементы.ТаблицаЗапросыЕГР.ТекущаяСтрока);
		ЦиклыОбменаЗапросыЕГР.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
		
		Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
			ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
		КонецЕсли;
		
		ЗапросыНаВыпискуИзЕГРЮЛ_ЕГРИП.Параметры.УстановитьЗначениеПараметра("Организация", ВыбранныеУчетныеЗаписи);
		
		Если Элементы.СтраницаЗапросНаВыпискуЕГР.Видимость Тогда
			ПринудительноПерестроитьФормуНаСервере();
		КонецЕсли;
			
		Элементы.СтраницаЗапросНаВыпискуЕГР.Видимость = Ложь;
		Элементы.ТаблицаЗапросыЕГР.Видимость = Истина;
		Элементы.ТаблицаЦиклыОбменаЗапросыЕГР.Видимость = Истина;
		Элементы.ТаблицаЗапросыЕГРЗапросыНаВыпискуЕГРОтображатьСписокЦикловОбмена.Пометка = Истина;
		
		Если Элементы.ТаблицаЦиклыОбменаЗапросыЕГР.Видимость Тогда
			Элементы.ТаблицаЦиклыОбменаЗапросыЕГР.Обновить();
		КонецЕсли;
		
	ИначеЕсли сохрТекущаяСтраницаПанелиФормы = "ГруппаПрочее" Тогда
		
		Если ВыбранныеУчетныеЗаписи = Неопределено Тогда 
			ВыбранныеУчетныеЗаписи = ВыбранныеУчетныеЗаписи(ЭтаФорма, );
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТранспортноеСообщение, ПолучитьНастройкиДляДинамическогоСписка("ТранспортноеСообщение"));
		
		ТранспортноеСообщение.Параметры.УстановитьЗначениеПараметра("ПолученныеТранспортныеСообщения",  ЗначениеПараметраПолученныеТС);
		
		ТранспортноеСообщение.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
		ЭлементОтбора = ТранспортноеСообщение.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ЦиклОбмена");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.ПравоеЗначение   = Справочники.ЦиклыОбмена.ПустаяСсылка();
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ЭлементОтбора = ТранспортноеСообщение.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("УчетнаяЗапись");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.ПравоеЗначение   = УчетныеЗаписиПоСпискуОрганизаций(ВыбранныеУчетныеЗаписи);
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ТранспортноеСообщение.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки = Строка(Новый УникальныйИдентификатор);
		
		Элементы.СтраницаПрочее.Видимость = Ложь;
		Элементы.ТранспортноеСообщение.Видимость = Истина;
		
	КонецЕсли;
	
	УстановитьОтборПоПредмету(ЭтаФорма);
	
	СкрытьНеактивныеСтраницы();
	
КонецПроцедуры

&НаСервере
Процедура СкрытьНеактивныеСтраницы()
		
	СоответствиеСписокСтраница = ПолучитьСоответствиеСписокСтраница();
	
	СоответствиеСписокЭлемент = Новый Соответствие;
	
	Для Каждого ЭлементФормы Из Элементы Цикл
		Если ТипЗнч(ЭлементФормы) = Тип("ТаблицаФормы") И СоответствиеСписокСтраница.Получить(ЭлементФормы.ПутьКДанным) <> Неопределено Тогда
			СоответствиеСписокЭлемент.Вставить(ЭлементФормы.ПутьКДанным, ЭлементФормы.Имя);
		КонецЕсли;
	КонецЦикла;
	
	СписокКО = Новый Массив;
	СписокКО.Добавить("ФНС");
	СписокКО.Добавить("ПФР");
	СписокКО.Добавить("ФСГС");
	СписокКО.Добавить("ФСС");
	СписокКО.Добавить("ФСРАР");
	СписокКО.Добавить("РПН");
	СписокКО.Добавить("ФТС");
	СписокКО.Добавить("Выписки");
	
	СоответствиеСтраницаНадпись = ПолучитьСоответствиеСтраницаНадпись();
	
	Если Элементы.ГруппаСтраниц.ТекущаяСтраница <> Неопределено Тогда
		ТекущееИмя = СтрЗаменить(Элементы.ГруппаСтраниц.ТекущаяСтраница.Имя, "Группа", "");
		Для Каждого ЭлементСоответствия Из СоответствиеСписокСтраница Цикл
			Если ТекущееИмя = "Прочее" ИЛИ ЭлементСоответствия.Значение <> Элементы["ГруппаСтраницы" + ТекущееИмя].ТекущаяСтраница.Имя Тогда
				СписокДС = ЭтаФорма[ЭлементСоответствия.Ключ];
				ЗаполнитьЗначенияСвойств(СписокДС, ПараметрыДинамическихСписков[ЭлементСоответствия.Ключ]);
				Элементы[СоответствиеСписокЭлемент[ЭлементСоответствия.Ключ]].Видимость = Ложь;
				
				Элементы[СоответствиеСтраницаНадпись[ЭлементСоответствия.Значение]].Видимость = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПринудительноПерестроитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЗакладкойУведомлений(Вид = Неопределено)
	// Параметр функции "Вид" может принимать следующие значения:
	// - "Все", чтобы показать все виды документов в одном списке
	// - "Файлы", чтобы показать только электронные представления
	// - "Документы", чтобы показать только Уведомления о контролируемых сделках
	// - "ПрочиеУведомления", чтобы показать только Уведомление о спецрежимах налогообложения
	// - Неопределено, если мы не знаем какие виды документов существуют в системе, но в списке будет располагаться только один вид документа
	
	// меняем внешний вид выпадающего меню
	Элементы.КомандаОткрытияМенюВыбораВидаДокумента.Видимость 								= Истина; // верхний пункт меню
	Элементы.ТаблицаУведомленияКомандаОткрытьДокументы.Видимость 							= Истина; // документы
	Элементы.ТаблицаУведомленияКомандаОткрытьФайлы.Видимость 								= Истина; // файлы
	Элементы.ТаблицаУведомленияКомандаОткрытьПрочиеУведомления.Видимость 					= Истина; // прочие уведомления
	Элементы.ТаблицаУведомленияКомандаОткрытьУведомленияОРозничныхЦенахНаТабак.Видимость 	= Истина; // уведомления о розничных ценах на табак (регламентированный отчет)
	Элементы.ТаблицаУведомленияКомандаОткрытьУведомленияОПолучателеДокументов.Видимость 	= Истина; // уведомления о получателе документов
	
	Если НЕ ЗначениеЗаполнено(ИмяДокументаУведомлениеОКонтролируемыхСделках) Тогда
		Элементы.ТаблицаУведомленияКомандаОткрытьДокументы.Видимость = Ложь; // документ Уведомление о контролируемых сделках
	КонецЕсли;	
	
	Если НЕ СуществуетРегламентированныйОтчетРозничныеЦеныНаТабак() Тогда
		Элементы.ТаблицаУведомленияКомандаОткрытьУведомленияОРозничныхЦенахНаТабак.Видимость 	= Ложь; // уведомления о розничных ценах на табак (регламентированный отчет)	
	КонецЕсли;	
	
	// определяем Вид, если он еще не определен
	Если Вид = Неопределено Тогда
		Если ЗначениеЗаполнено(ИмяДокументаУведомлениеОКонтролируемыхСделках) Тогда
			Вид = "Документы";
		Иначе
			Вид = "ПрочиеУведомления";
		КонецЕсли;
	КонецЕсли;
	
	// устанавливаем "нажатость" пунктов меню и убираем видимость лишних колонок
	//
	Для каждого КомандаВРазделеУведомлений Из Элементы.КомандаОткрытияМенюВыбораВидаДокумента.ПодчиненныеЭлементы Цикл
		КомандаВРазделеУведомлений.Пометка = Ложь;
	КонецЦикла; 
	
	Элементы.ТаблицаУведомленияНалоговыйОрган.Видимость = Истина;
	Элементы.ТаблицаУведомленияОтчетныйГод.Видимость 	= Истина;
	
	Если Вид = "Документы" Тогда
		// документ Уведомление о контролируемых сделках
		Элементы.ТаблицаУведомленияКомандаОткрытьДокументы.Пометка = Истина; // нажатость подменю
		Элементы.ТаблицаУведомленияНалоговыйОрган.Видимость = Ложь;
	ИначеЕсли Вид = "ПрочиеУведомления" Тогда
		// документ Уведомление о спецрежимах налогообложения
		Элементы.ТаблицаУведомленияКомандаОткрытьПрочиеУведомления.Пометка = Истина;// нажатость подменю
		Элементы.ТаблицаУведомленияОтчетныйГод.Видимость = Ложь;
	ИначеЕсли Вид = "УведомленияОРозничныхЦенахНаТабак" Тогда
		// документ РегламентированныйОтчет с источником РегламентированныйОтчетРозничныеЦеныНаТабак
		Элементы.ТаблицаУведомленияКомандаОткрытьУведомленияОРозничныхЦенахНаТабак.Пометка = Истина;// нажатость подменю
		Элементы.ТаблицаУведомленияОтчетныйГод.Видимость = Ложь;
	ИначеЕсли Вид = "УведомленияОПолучателеДокументов" Тогда
		// документ УведомленияОПолучателеДокументов
		Элементы.ТаблицаУведомленияКомандаОткрытьУведомленияОПолучателеДокументов.Пометка = Истина;// нажатость подменю
		Элементы.ТаблицаУведомленияОтчетныйГод.Видимость = Ложь;
	ИначеЕсли Вид = "РеестрыФНС" Тогда
		// документ РегламентированныйОтчет с источником РегламентированныйОтчетРозничныеЦеныНаТабак
		Элементы.ТаблицаУведомленияКомандаОткрытьРеестрыФНС.Пометка = Истина;// нажатость подменю
		Элементы.ТаблицаУведомленияОтчетныйГод.Видимость = Ложь;
	ИначеЕсли Вид = "Файлы" Тогда
		// электронные представления
		Элементы.ТаблицаУведомленияКомандаОткрытьФайлы.Пометка = Истина;// нажатость подменю
	КонецЕсли;
	
	// меняем наименования пунктов меню
	Если НЕ ЗначениеЗаполнено(ИмяДокументаУведомлениеОКонтролируемыхСделках) И НЕ СуществуетРегламентированныйОтчетРозничныеЦеныНаТабак() Тогда
		Элементы.ТаблицаУведомленияКомандаОткрытьПрочиеУведомления.Заголовок 	= "Уведомления";
	КонецЕсли;
	
	// формируем запросы
	// 
	ТекстЗапроса = "";
	
	// запрос для электронных представлений с типом УведомлениеОКонтролируемыхСделках и ИсходящееУведомлениеФНС и УведомлениеОРозничныхЦенахНаТабак , будет в любом случае
	Если Вид = "Файлы" Тогда
		ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                              |	ВЫБОР
		                              |		КОГДА ЭлектронныеПредставленияРегламентированныхОтчетов.ПометкаУдаления
		                              |			ТОГДА ВЫБОР
		                              |					КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		                              |						ТОГДА 10
		                              |					ИНАЧЕ ВЫБОР
		                              |							КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		                              |								ТОГДА 11
		                              |							ИНАЧЕ ВЫБОР
		                              |									КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		                              |										ТОГДА 12
		                              |									ИНАЧЕ ВЫБОР
		                              |											КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		                              |												ТОГДА 13
		                              |										КОНЕЦ
		                              |								КОНЕЦ
		                              |						КОНЕЦ
		                              |				КОНЕЦ
		                              |		ИНАЧЕ ВЫБОР
		                              |				КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		                              |					ТОГДА 3
		                              |				ИНАЧЕ ВЫБОР
		                              |						КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		                              |							ТОГДА 4
		                              |						ИНАЧЕ ВЫБОР
		                              |								КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		                              |									ТОГДА 5
		                              |								ИНАЧЕ ВЫБОР
		                              |										КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		                              |											ТОГДА 6
		                              |									КОНЕЦ
		                              |							КОНЕЦ
		                              |					КОНЕЦ
		                              |			КОНЕЦ
		                              |	КОНЕЦ КАК СтатусКартинка,
		                              |	ЭлектронныеПредставленияРегламентированныхОтчетов.ДатаИмпорта КАК ДатаСоздания,
		                              |	ВЫРАЗИТЬ(ЭлектронныеПредставленияРегламентированныхОтчетов.Организация КАК Справочник.Организации) КАК Организация,
		                              |	ВЫБОР
		                              |		КОГДА ГОД(ЭлектронныеПредставленияРегламентированныхОтчетов.ДатаНачала) < 1900
		                              |				ИЛИ ЭлектронныеПредставленияРегламентированныхОтчетов.ВидОтчета.ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыОтправляемыхДокументов.ИсходящееУведомлениеФНС)
		                              |			ТОГДА 0
		                              |		ИНАЧЕ ГОД(ЭлектронныеПредставленияРегламентированныхОтчетов.ДатаНачала)
		                              |	КОНЕЦ КАК ОтчетныйГод,
		                              |	ЭлектронныеПредставленияРегламентированныхОтчетов.Ссылка,
		                              |	ЭлектронныеПредставленияРегламентированныхОтчетов.Получатель.Код КАК НалоговыйОрган,
		                              |	ЭлектронныеПредставленияРегламентированныхОтчетов.ВидОтчета КАК ВидУведомления
		                              |ИЗ
		                              |	Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов КАК ЭлектронныеПредставленияРегламентированныхОтчетов
		                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                              |			СтатусыОтправки.Объект КАК Объект,
		                              |			СтатусыОтправки.Статус КАК Статус
		                              |		ИЗ
		                              |			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусОтправки
		                              |		ПО (СтатусОтправки.Объект = ЭлектронныеПредставленияРегламентированныхОтчетов.Ссылка)
		                              |ГДЕ
		                              |	ЭлектронныеПредставленияРегламентированныхОтчетов.Организация В(&Организация)
		                              |	И (ЭлектронныеПредставленияРегламентированныхОтчетов.ВидОтчета.ТипДокумента В (&ТипыУведомлений)
									  |	ИЛИ ЭлектронныеПредставленияРегламентированныхОтчетов.ВидОтчета В (&ВидыУведомлений))";
									  
		// Основная таблица.
		Уведомления.ОсновнаяТаблица = "Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов";
		
	КонецЕсли;

	// Если в системе существует документ УведомлениеОКонтролируемыхСделках
	// тогда добавляем в запрос для динамического списка запрос по документу Уведомление о контролируемых сделках.
	Если ЗначениеЗаполнено(ИмяДокументаУведомлениеОКонтролируемыхСделках) И Вид = "Документы" Тогда
		
			ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
										  |	ВЫБОР
										  |		КОГДА УведомлениеОКонтролируемыхСделках.ПометкаУдаления
										  |			ТОГДА ВЫБОР
										  |					КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
										  |						ТОГДА 10
										  |					ИНАЧЕ ВЫБОР
										  |							КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
										  |								ТОГДА 11
										  |							ИНАЧЕ ВЫБОР
										  |									КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
										  |										ТОГДА 12
										  |									ИНАЧЕ ВЫБОР
										  |											КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
										  |												ТОГДА 13
										  |										КОНЕЦ
										  |								КОНЕЦ
										  |						КОНЕЦ
										  |				КОНЕЦ
										  |		ИНАЧЕ ВЫБОР
										  |				КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
										  |					ТОГДА 3
										  |				ИНАЧЕ ВЫБОР
										  |						КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
										  |							ТОГДА 4
										  |						ИНАЧЕ ВЫБОР
										  |								КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
										  |									ТОГДА 5
										  |								ИНАЧЕ ВЫБОР
										  |										КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
										  |											ТОГДА 6
										  |									КОНЕЦ
										  |							КОНЕЦ
										  |					КОНЕЦ
										  |			КОНЕЦ
										  |	КОНЕЦ КАК СтатусКартинка,
										  |	УведомлениеОКонтролируемыхСделках.Дата КАК ДатаСоздания,
										  |	ВЫРАЗИТЬ(УведомлениеОКонтролируемыхСделках.Организация КАК Справочник.Организации) КАК Организация,
										  |	ГОД(УведомлениеОКонтролируемыхСделках.ОтчетныйГод) КАК ОтчетныйГод,
										  |	УведомлениеОКонтролируемыхСделках.Ссылка,
										  |	"""" КАК НалоговыйОрган,
										  |	ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.УведомлениеОКонтролируемыхСделках) КАК ВидУведомления
										  |ИЗ
										  |	Документ.УведомлениеОКонтролируемыхСделках КАК УведомлениеОКонтролируемыхСделках
										  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
										  |			СтатусыОтправки.Объект КАК Объект,
										  |			СтатусыОтправки.Статус КАК Статус
										  |		ИЗ
										  |			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусОтправки
										  |		ПО (СтатусОтправки.Объект = УведомлениеОКонтролируемыхСделках.Ссылка)
										  |ГДЕ
										  |	УведомлениеОКонтролируемыхСделках.Организация В(&Организация)";
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "УведомлениеОКонтролируемыхСделках", ИмяДокументаУведомлениеОКонтролируемыхСделках);
			
			Уведомления.ОсновнаяТаблица = "Документ.УведомлениеОКонтролируемыхСделках";

	КонецЕсли;
	
	// Если в системе существует документ УведомлениеОСпецрежимахНалогообложения
	// тогда добавлеям в запрос для динамического списка запрос по документу уведомление о спецрежимах налогообложения.
	Если ЗначениеЗаполнено(ИмяДокументаУведомлениеОСпецрежимахНалогообложения) И Вид = "ПрочиеУведомления" Тогда
		
			ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
										  |	ВЫБОР
										  |		КОГДА УведомлениеОСпецрежимахНалогообложения.ПометкаУдаления
										  |			ТОГДА ВЫБОР
										  |					КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
										  |						ТОГДА 10
										  |					ИНАЧЕ ВЫБОР
										  |							КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
										  |								ТОГДА 11
										  |							ИНАЧЕ ВЫБОР
										  |									КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
										  |										ТОГДА 12
										  |									ИНАЧЕ ВЫБОР
										  |											КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
										  |												ТОГДА 13
										  |										КОНЕЦ
										  |								КОНЕЦ
										  |						КОНЕЦ
										  |				КОНЕЦ
										  |		ИНАЧЕ ВЫБОР
										  |				КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
										  |					ТОГДА 3
										  |				ИНАЧЕ ВЫБОР
										  |						КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
										  |							ТОГДА 4
										  |						ИНАЧЕ ВЫБОР
										  |								КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
										  |									ТОГДА 5
										  |								ИНАЧЕ ВЫБОР
										  |										КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
										  |											ТОГДА 6
										  |									КОНЕЦ
										  |							КОНЕЦ
										  |					КОНЕЦ
										  |			КОНЕЦ
										  |	КОНЕЦ КАК СтатусКартинка,
										  |	УведомлениеОСпецрежимахНалогообложения.Дата КАК ДатаСоздания,
										  |	ВЫРАЗИТЬ(УведомлениеОСпецрежимахНалогообложения.Организация КАК Справочник.Организации) КАК Организация,
										  |	0 КАК ОтчетныйГод,
										  |	УведомлениеОСпецрежимахНалогообложения.Ссылка,
										  |	УведомлениеОСпецрежимахНалогообложения.РегистрацияВИФНС.Код КАК НалоговыйОрган,
										  |	УведомлениеОСпецрежимахНалогообложения.ВидУведомления КАК ВидУведомления
										  |ИЗ
										  |	Документ.УведомлениеОСпецрежимахНалогообложения КАК УведомлениеОСпецрежимахНалогообложения
										  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
										  |			СтатусыОтправки.Объект КАК Объект,
										  |			СтатусыОтправки.Статус КАК Статус
										  |		ИЗ
										  |			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусОтправки
										  |		ПО (СтатусОтправки.Объект = УведомлениеОСпецрежимахНалогообложения.Ссылка)
										  |ГДЕ
										  |	УведомлениеОСпецрежимахНалогообложения.Организация В(&Организация)
										  |	И УведомлениеОСпецрежимахНалогообложения.ВидУведомления В (&ВидУведомления)";
										  
			Уведомления.ОсновнаяТаблица = "Документ.УведомлениеОСпецрежимахНалогообложения";
			
	КонецЕсли;
	
	// Добавляем в запрос для динамического списка запрос по документу РегламентированныйОтчет с источником РегламентированныйОтчетРозничныеЦеныНаТабак.
	Если СуществуетРегламентированныйОтчетРозничныеЦеныНаТабак() И Вид = "УведомленияОРозничныхЦенахНаТабак" Тогда
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаДляОтчетовНаЗакладкеИсходящиеУведомления("РегламентированныйОтчетРозничныеЦеныНаТабак");
		Уведомления.ОсновнаяТаблица = "Документ.РегламентированныйОтчет";
			
	КонецЕсли;
	
	Если Вид = "УведомленияОПолучателеДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
									  |	ВЫБОР
									  |		КОГДА УведомлениеОПолучателеДокументов.ПометкаУдаления
									  |			ТОГДА ВЫБОР
									  |					КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
									  |						ТОГДА 10
									  |					ИНАЧЕ ВЫБОР
									  |							КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
									  |								ТОГДА 11
									  |							ИНАЧЕ ВЫБОР
									  |									КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
									  |										ТОГДА 12
									  |									ИНАЧЕ ВЫБОР
									  |											КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
									  |												ТОГДА 13
									  |										КОНЕЦ
									  |								КОНЕЦ
									  |						КОНЕЦ
									  |				КОНЕЦ
									  |		ИНАЧЕ ВЫБОР
									  |				КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
									  |					ТОГДА 3
									  |				ИНАЧЕ ВЫБОР
									  |						КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
									  |							ТОГДА 4
									  |						ИНАЧЕ ВЫБОР
									  |								КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
									  |									ТОГДА 5
									  |								ИНАЧЕ ВЫБОР
									  |										КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
									  |											ТОГДА 6
									  |									КОНЕЦ
									  |							КОНЕЦ
									  |					КОНЕЦ
									  |			КОНЕЦ
									  |	КОНЕЦ КАК СтатусКартинка,
									  |	УведомлениеОПолучателеДокументов.Дата КАК ДатаСоздания,
									  |	ВЫРАЗИТЬ(УведомлениеОПолучателеДокументов.Организация КАК Справочник.Организации) КАК Организация,
									  |	ГОД(УведомлениеОПолучателеДокументов.Дата) КАК ОтчетныйГод,
									  |	УведомлениеОПолучателеДокументов.Ссылка,
									  |	УведомлениеОПолучателеДокументов.Получатель.Код КАК НалоговыйОрган,
									  |	ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.УведомлениеОПолучателеДокументов) КАК ВидУведомления
									  |ИЗ
									  |	Документ.УведомлениеОПолучателеДокументов КАК УведомлениеОПолучателеДокументов
									  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
									  |			СтатусыОтправки.Объект КАК Объект,
									  |			СтатусыОтправки.Статус КАК Статус
									  |		ИЗ
									  |			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусОтправки
									  |		ПО (СтатусОтправки.Объект = УведомлениеОПолучателеДокументов.Ссылка)
									  |ГДЕ
									  |	УведомлениеОПолучателеДокументов.Организация В(&Организация)";
		
		Уведомления.ОсновнаяТаблица = "Документ.УведомлениеОПолучателеДокументов";
		
	КонецЕсли;
	
	Если Вид = "РеестрыФНС" Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаДляОтчетовНаЗакладкеИсходящиеУведомления("РеестрНДСПриложение");
		Уведомления.ОсновнаяТаблица = "Документ.РегламентированныйОтчет";
	КонецЕсли;
	
	Уведомления.ТекстЗапроса = ТекстЗапроса;
	Уведомления.ДинамическоеСчитываниеДанных = Истина;
	
	// Установка параметров запроса динамического списка.
	Если Уведомления.Параметры.ДоступныеПараметры.НайтиПараметр(Новый ПараметрКомпоновкиДанных("ВидУведомления")) <> Неопределено Тогда
		МассивВидовУведомлений = ВидыПрочихОтправляемыхУведомлений();
		Уведомления.Параметры.УстановитьЗначениеПараметра("ВидУведомления", ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.МассивВидовПрочихУведомленийПоддерживающихДокументооборот(МассивВидовУведомлений));
	КонецЕсли;
	
	Если Вид = "Файлы" Тогда
		
		// Типы уведомлений.
		ТипыУведомлений = Новый Массив;
		ТипыУведомлений.Добавить(Перечисления.ТипыОтправляемыхДокументов.УведомлениеОКонтролируемыхСделках);
		ТипыУведомлений.Добавить(Перечисления.ТипыОтправляемыхДокументов.ИсходящееУведомлениеФНС);
		ТипыУведомлений.Добавить(Перечисления.ТипыОтправляемыхДокументов.УведомлениеОРозничныхЦенахНаТабак);
		
		Уведомления.Параметры.УстановитьЗначениеПараметра("ТипыУведомлений", ТипыУведомлений);
		
		// Виды уведомлений.
		ВидыУведомлений = ДокументооборотСКОКлиентСервер.ВидыОтправляемыхДокументовРеестровНДС();
		Уведомления.Параметры.УстановитьЗначениеПараметра("ВидыУведомлений", ВидыУведомлений);

	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаДляОтчетовНаЗакладкеИсходящиеУведомления(ИсточникОтчета)
	
	 ТекстЗапроса = "ВЫБРАТЬ
	                |	ВЫБОР
	                |		КОГДА РегламентированныйОтчет.ПометкаУдаления
	                |			ТОГДА ВЫБОР
	                |					КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
	                |						ТОГДА 10
	                |					ИНАЧЕ ВЫБОР
	                |							КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
	                |								ТОГДА 11
	                |							ИНАЧЕ ВЫБОР
	                |									КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
	                |										ТОГДА 12
	                |									ИНАЧЕ ВЫБОР
	                |											КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
	                |												ТОГДА 13
	                |										КОНЕЦ
	                |								КОНЕЦ
	                |						КОНЕЦ
	                |				КОНЕЦ
	                |		ИНАЧЕ ВЫБОР
	                |				КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
	                |					ТОГДА 3
	                |				ИНАЧЕ ВЫБОР
	                |						КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
	                |							ТОГДА 4
	                |						ИНАЧЕ ВЫБОР
	                |								КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
	                |									ТОГДА 5
	                |								ИНАЧЕ ВЫБОР
	                |										КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
	                |											ТОГДА 6
	                |									КОНЕЦ
	                |							КОНЕЦ
	                |					КОНЕЦ
	                |			КОНЕЦ
	                |	КОНЕЦ КАК СтатусКартинка,
	                |	РегламентированныйОтчет.ДатаПодписи КАК ДатаСоздания,
	                |	ВЫРАЗИТЬ(РегламентированныйОтчет.Организация КАК Справочник.Организации) КАК Организация,
	                |	0 КАК ОтчетныйГод,
	                |	РегламентированныйОтчет.Ссылка,
	                |	РегламентированныйОтчет.КодНалоговогоОргана КАК НалоговыйОрган,
	                |	ВЫБОР
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРозничныеЦеныНаТабак""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.УведомлениеОРозничныхЦенахНаТабачныеИзделия)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение1""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение1)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение2""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение2)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение3""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение3)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение4""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение4)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение5""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение5)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение6""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение6)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение7""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение7)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение8""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение8)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение9""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение9)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение10""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение10)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение11""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение11)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение12""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение12)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение13""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение13)
	                |		КОГДА РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетРеестрНДСПриложение14""
	                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОтправляемыхДокументов.РеестрНДСПриложение14)
	                |	КОНЕЦ КАК ВидУведомления
	                |ИЗ
	                |	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
	                |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                |			СтатусыОтправки.Объект КАК Объект,
	                |			СтатусыОтправки.Статус КАК Статус
	                |		ИЗ
	                |			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусОтправки
	                |		ПО (СтатусОтправки.Объект = РегламентированныйОтчет.Ссылка)
	                |ГДЕ
	                |	РегламентированныйОтчет.Организация В(&Организация)
	                |	И РегламентированныйОтчет.ИсточникОтчета ПОДОБНО ""%_ИсточникОтчета_%""";
										  
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "_ИсточникОтчета_", ИсточникОтчета);
										  
	Возврат ТекстЗапроса; 
	
КонецФункции

&НаКлиенте
Процедура СменитьЗакладкуПредставленийПриНеобходимости(ВидТребования, ДополнительныеПараметры) Экспорт
	
	Если ВидТребования = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КнопкиПанели = Элементы.КомандаОткрытияМенюВыбораВидаОтветаНаТребование;
	
	НужноВыполнитьСменуЗакладки = Ложь;
	Вид = Неопределено;
	
	Если ВидТребования = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхДокументов.ТребованиеОПредставленииДокументов") 
		И НЕ Элементы.ТаблицаПредставленияПереключитьНаОтветыНаТребованиеОПредставленииДокументов.Пометка Тогда
		Вид = "ТребованиеОПредставленииДокументов";
		НужноВыполнитьСменуЗакладки = Истина;
	ИначеЕсли ВидТребования = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхДокументов.ТребованиеОПредставленииПоясненийКДекларацииНДС")
		И НЕ Элементы.ТаблицаПредставленияПереключитьНаОтветыНаТребованиеПоясненийКДекларацииНДС.Пометка Тогда
		Вид = "ТребованиеПоясненийКДекларацииНДС";
		НужноВыполнитьСменуЗакладки = Истина;
	КонецЕсли;
	
	Если НужноВыполнитьСменуЗакладки Тогда
		
		ПредыдущийРежим = ТекущийРежимОтображенияВыбораВида(КнопкиПанели);
		// отображаем нужную закладку 
		УправлениеЗакладкойОтветыНаТребования(Вид);
		НовыйРежим = ТекущийРежимОтображенияВыбораВида(КнопкиПанели);
		
		// отображаем сообщение для пользователя
		СообщитьОСменеРежимов(ПредыдущийРежим, НовыйРежим);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ТекущийРежимОтображенияВыбораВида(Подменю)

	КнопкиПодменю = Подменю.ПодчиненныеЭлементы;
	
	Для каждого КнопкаПодменю Из КнопкиПодменю Цикл
		Если КнопкаПодменю.Пометка Тогда
			Возврат КнопкаПодменю.Заголовок;
		КонецЕсли;
	КонецЦикла;
	
	Возврат "";
	
КонецФункции

&НаКлиенте
Процедура СообщитьОСменеРежимов(ПредыдущийРежим, НовыйРежим)

	// отображаем сообщение для пользователя
	Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Режим отображения списка был переключен с ""%1"" на ""%2""'"), ПредыдущийРежим, НовыйРежим);
	Текст = Текст + Символы.ПС + "Для переключения между режимами воспользуйтесь подменю ""Режим отображения"""; 

	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЗакладкойОтветыНаТребования(Вид = Неопределено)
	// Параметр функции "Вид" может принимать следующие значения:
	// - "ТребованиеОПредставленииДокументов"
	// - "ТребованиеПоясненийКДекларацииНДС"
	
	Если Вид = Неопределено Тогда
		
		// Сначала пытаемся найти текущий, иначе берем требование о представлении документов
		Если Элементы.ТаблицаПредставленияПереключитьНаОтветыНаТребованиеОПредставленииДокументов.Пометка Тогда
			Вид = "ТребованиеОПредставленииДокументов";
		ИначеЕсли Элементы.ТаблицаПредставленияПереключитьНаОтветыНаТребованиеПоясненийКДекларацииНДС.Пометка Тогда 
			Вид = "ТребованиеПоясненийКДекларацииНДС";
		Иначе
			Вид = "ТребованиеОПредставленииДокументов";
		КонецЕсли;
			
	КонецЕсли;
	
	// нажатость подменю
	Элементы.ТаблицаПредставленияПереключитьНаОтветыНаТребованиеОПредставленииДокументов.Пометка = Вид = "ТребованиеОПредставленииДокументов";
	Элементы.ТаблицаПредставленияПереключитьНаОтветыНаТребованиеПоясненийКДекларацииНДС.Пометка  = Вид = "ТребованиеПоясненийКДекларацииНДС";
	
	// формируем запросы
	// 
	ТекстЗапроса = "";
	
	Если Вид = "ТребованиеОПредставленииДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ОтветыНаТребование.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|						ТОГДА 10
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|								ТОГДА 11
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		|										ТОГДА 12
		|									ИНАЧЕ ВЫБОР
		|											КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|												ТОГДА 13
		|											ИНАЧЕ 8
		|										КОНЕЦ
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|					ТОГДА 3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|							ТОГДА 4
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		|									ТОГДА 5
		|								ИНАЧЕ ВЫБОР
		|										КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|											ТОГДА 6
		|										ИНАЧЕ 1
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ОтветыНаТребование.ДатаСоздания КАК ДатаСоздания,
		|	ОтветыНаТребование.НалоговыйОрган КАК Получатель,
		|	ОтветыНаТребование.Организация,
		|	ОтветыНаТребование.Требование КАК Требование,
		|	ОтветыНаТребование.Ссылка
		|ИЗ
		|	Справочник.ОписиИсходящихДокументовВНалоговыеОрганы КАК ОтветыНаТребование
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Объект КАК Объект,
		|			СтатусыОтправки.Статус КАК Статус
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусОтправки
		|		ПО (СтатусОтправки.Объект = ОтветыНаТребование.Ссылка)
		|ГДЕ
		|	ОтветыНаТребование.Организация В(&Организация)";
									  
		Представления.ОсновнаяТаблица = "Справочник.ОписиИсходящихДокументовВНалоговыеОрганы";
		
		Элементы.ИнформацияОРежимеОтображения.Заголовок = 
		"Выведены ответы на требования о представлении документов. Для отображения прочих видов ответов воспользуйтесь переключателем ""Режим отображения""";

		
	ИначеЕсли Вид = "ТребованиеПоясненийКДекларацииНДС" Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ПоясненияКДекларацииПоНДС.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|						ТОГДА 10
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|								ТОГДА 11
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		|										ТОГДА 12
		|									ИНАЧЕ ВЫБОР
		|											КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|												ТОГДА 13
		|											ИНАЧЕ 8
		|										КОНЕЦ
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Отправлен)
		|					ТОГДА 3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Доставлен)
		|							ТОГДА 4
		|						ИНАЧЕ ВЫБОР
		|								КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.НеПринят)
		|									ТОГДА 5
		|								ИНАЧЕ ВЫБОР
		|										КОГДА СтатусОтправки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтправки.Сдан)
		|											ТОГДА 6
		|										ИНАЧЕ 1
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусКартинка,
		|	ПоясненияКДекларацииПоНДС.Дата КАК ДатаСоздания,
		|	ПоясненияКДекларацииПоНДС.НалоговыйОрган КАК Получатель,
		|	ПоясненияКДекларацииПоНДС.Организация,
		|	ПоясненияКДекларацииПоНДС.Требование,
		|	ПоясненияКДекларацииПоНДС.Ссылка
		|ИЗ
		|	Документ.ПоясненияКДекларацииПоНДС КАК ПоясненияКДекларацииПоНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатусыОтправки.Объект КАК Объект,
		|			СтатусыОтправки.Статус КАК Статус
		|		ИЗ
		|			РегистрСведений.СтатусыОтправки КАК СтатусыОтправки) КАК СтатусОтправки
		|		ПО (СтатусОтправки.Объект = ПоясненияКДекларацииПоНДС.Ссылка)
		|ГДЕ
		|	ПоясненияКДекларацииПоНДС.Организация В(&Организация)";
		
		Представления.ОсновнаяТаблица = "Документ.ПоясненияКДекларацииПоНДС";
		
		Элементы.ИнформацияОРежимеОтображения.Заголовок = 
			"Выведены ответы на требования пояснений к декларации НДС. Для отображения прочих видов ответов воспользуйтесь переключателем ""Режим отображения""";

	КонецЕсли;
					
	Представления.ТекстЗапроса 					= ТекстЗапроса;
	Представления.ДинамическоеСчитываниеДанных 	= Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьЗакладкуУведомленийПриНеобходимости(ИмяСобытия, ВыводитьПредупреждение = Истина)

	НужноВыполнитьСменуЗакладки = Ложь;
	Вид = Неопределено;
	
	Если ИмяСобытия = "Документы" И НЕ Элементы.ТаблицаУведомленияКомандаОткрытьДокументы.Пометка Тогда
		НужноВыполнитьСменуЗакладки = Истина;
	ИначеЕсли ИмяСобытия = "ПрочиеУведомления" И НЕ Элементы.ТаблицаУведомленияКомандаОткрытьПрочиеУведомления.Пометка Тогда
		НужноВыполнитьСменуЗакладки = Истина;
	ИначеЕсли ИмяСобытия = "УведомленияОРозничныхЦенахНаТабак" И НЕ Элементы.ТаблицаУведомленияКомандаОткрытьУведомленияОРозничныхЦенахНаТабак.Пометка Тогда
		НужноВыполнитьСменуЗакладки = Истина;
	ИначеЕсли ИмяСобытия = "УведомленияОПолучателеДокументов" И НЕ Элементы.ТаблицаУведомленияКомандаОткрытьУведомленияОПолучателеДокументов.Пометка Тогда
		НужноВыполнитьСменуЗакладки = Истина;
	ИначеЕсли ИмяСобытия = "РеестрыФНС" И НЕ Элементы.ТаблицаУведомленияКомандаОткрытьРеестрыФНС.Пометка Тогда
		НужноВыполнитьСменуЗакладки = Истина;
	ИначеЕсли ИмяСобытия = "Файлы" И НЕ Элементы.ТаблицаУведомленияКомандаОткрытьФайлы.Пометка Тогда
		НужноВыполнитьСменуЗакладки = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	Вид = ИмяСобытия;
	
	Если НужноВыполнитьСменуЗакладки Тогда
		
		ПредыдущийРежим = ТекущийРежимОтображенияВыбораВида(Элементы.КомандаОткрытияМенюВыбораВидаДокумента);
		// отображаем нужную закладку 
		УправлениеЗакладкойУведомлений(Вид);
		НовыйРежим = ТекущийРежимОтображенияВыбораВида(Элементы.КомандаОткрытияМенюВыбораВидаДокумента);
		
		// отображаем сообщение для пользователя
		Если ВыводитьПредупреждение Тогда
			СообщитьОСменеРежимов(ПредыдущийРежим, НовыйРежим);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивОтветовПоОписиВходящихДокументов(ОписьВходящихДокументовСсылка)
	
	МассивОписейИсходящихДокументов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОписиИсходящихДокументовВНалоговыеОрганы.Ссылка
		|ИЗ
		|	Справочник.ОписиИсходящихДокументовВНалоговыеОрганы КАК ОписиИсходящихДокументовВНалоговыеОрганы
		|ГДЕ
		|	ОписиИсходящихДокументовВНалоговыеОрганы.ОписьВходящихДокументов = &ОписьВходящихДокументовСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоясненияКДекларацииПоНДС.Ссылка
		|ИЗ
		|	Документ.ПоясненияКДекларацииПоНДС КАК ПоясненияКДекларацииПоНДС
		|ГДЕ
		|	ПоясненияКДекларацииПоНДС.ОписьВходящихДокументов = &ОписьВходящихДокументовСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПерепискаСКонтролирующимиОрганами.Ссылка
		|ИЗ
		|	Справочник.ПерепискаСКонтролирующимиОрганами КАК ПерепискаСКонтролирующимиОрганами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОписиВходящихДокументовИзНалоговыхОрганов.ВходящиеДокументы КАК ОписиВходящихДокументовИзНалоговыхОрганов
		|		ПО (ОписиВходящихДокументовИзНалоговыхОрганов.СсылкаНаОбъект = ПерепискаСКонтролирующимиОрганами.Требование)
		|ГДЕ
		|	ОписиВходящихДокументовИзНалоговыхОрганов.Ссылка = &ОписьВходящихДокументовСсылка";

	Запрос.УстановитьПараметр("ОписьВходящихДокументовСсылка", ОписьВходящихДокументовСсылка);

	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		МассивОписейИсходящихДокументов.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат МассивОписейИсходящихДокументов;
	
КонецФункции

#КонецОбласти
