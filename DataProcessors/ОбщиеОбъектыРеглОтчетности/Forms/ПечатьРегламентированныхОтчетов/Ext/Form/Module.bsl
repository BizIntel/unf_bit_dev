
&НаКлиенте
Перем ТекущаяСтрокаРазделовОтчета;

&НаКлиенте
Перем ТекущиеДанныеОтчета;

&НаКлиенте
Перем СтраницаПечатнойФормыМодифицирована;

&НаКлиенте
Перем АдресаЛистовВоВременномХранилище;

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СписокПечатаемыхЛистов = Параметры.СписокПечатаемыхЛистов;
	ВидПечати              = Параметры.ВидПечати;
	
	Если СписокПечатаемыхЛистов.Количество() = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = НСтр("ru='Не выбраны листы для вывода на печать.'");

		Сообщение.Сообщить();

		Отказ = Истина;
		
	КонецЕсли;
		
	Инициализация();
		
КонецПроцедуры

&НаСервере
Процедура Инициализация()
	
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать   = Истина;
	ТабличныйДокумент.Область().ЦветФона = Новый Цвет();
	ТабличныйДокумент.Область().Защита   = Ложь;
	ТабличныйДокумент.ЧерноБелыйПросмотр = Истина;
		
	ЗаголовокФормы = Параметры.ЗаголовокФормы;
	
	Для Каждого Элемент Из СписокПечатаемыхЛистов Цикл
		Элемент.Значение[0] = ПоместитьВоВременноеХранилище(ПолучитьИзВременногоХранилища(
			Элемент.Значение[0]), ЭтаФорма.УникальныйИдентификатор);
	КонецЦикла;
	
	Элемент = СписокПечатаемыхЛистов[0];
	
	ТаблДок = ПолучитьИзВременногоХранилища(Элемент.Значение[0]);
	
	ТабличныйДокумент.Вывести(ТаблДок);
	
	СохрКоличествоКопий   = ХранилищеНастроекДанныхФорм.Загрузить("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ПечатьРегламентированныхОтчетов", "ПредпросмотрРегламентированнойОтчетностиКоличествоКопий");
	СохрРазобратьПоКопиям = ХранилищеНастроекДанныхФорм.Загрузить("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ПечатьРегламентированныхОтчетов", "ПредпросмотрРегламентированнойОтчетностиРазобратьПоКопиям");
	
	КоличествоКопий   = СохрКоличествоКопий;
	РазобратьПоКопиям = СохрРазобратьПоКопиям;
	
	Если РазобратьПоКопиям = Неопределено Тогда
		РазобратьПоКопиям = Истина;
	КонецЕсли;
		
	ДеревоЛистов = РеквизитФормыВЗначение("СписокЛистов");
	
	ДеревоЛистов.Строки.Очистить();
	
	Для Каждого Сч Из СписокПечатаемыхЛистов Цикл
		
		НовСтр = ДеревоЛистов.Строки.Добавить();
		НовСтр.Пометка                   = 1;
		НовСтр.Наименование              = Сч.Представление;
		НовСтр.Идентификатор             = Сч.Значение[1];
		НовСтр.АдресВоВременномХранилище = Сч.Значение[0];
		
		ТекТабДок = ПолучитьИзВременногоХранилища(НовСтр.АдресВоВременномХранилище);
		КоличествоСтраниц = 0;
		НомПоследнейСтрокиСРазделителем = ТекТабДок.ВысотаТаблицы;
		Для НомСтроки = 1 По ТекТабДок.ВысотаТаблицы Цикл
			Если ТекТабДок.Область(НомСтроки, , НомСтроки, ).КонецСтраницы Тогда
				КоличествоСтраниц = КоличествоСтраниц + 1;
				НомПоследнейСтрокиСРазделителем = НомСтроки;
			КонецЕсли;
		КонецЦикла;
		Если НомПоследнейСтрокиСРазделителем < ТекТабДок.ВысотаТаблицы Тогда
			КоличествоСтраниц = КоличествоСтраниц + 1;
		КонецЕсли;
		
		НовСтр.КоличествоСтраниц = ?(КоличествоСтраниц > 0, КоличествоСтраниц, 1);
		
	КонецЦикла;
		
	ЗначениеВРеквизитФормы(ДеревоЛистов, "СписокЛистов");
	
	Если ДеревоЛистов.Строки.Количество() <= 1 Тогда
		Элементы.СписокЛистов.Видимость = Ложь;
		Элементы.СписокЛистовУстановитьФлажки.Видимость = Ложь;
		Элементы.СписокЛистовСнятьФлажки.Видимость      = Ложь;
		
		ТабличныйДокумент.АвтоМасштаб        = Истина;
		ТабличныйДокумент.ЧерноБелаяПечать   = Истина;
		ТабличныйДокумент.Область().ЦветФона = Новый Цвет();
		ТабличныйДокумент.Область().Защита   = Ложь;
		ТабличныйДокумент.ЧерноБелыйПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечататьСразу() Экспорт
	
	ПакетТаблДок = Новый ПакетОтображаемыхДокументов;
		
	Для Каждого Эл Из СписокПечатаемыхЛистов Цикл
		
		ПакетТаблДок.Состав.Добавить(Эл.Значение[0]);
		
	КонецЦикла;
	
	ПакетТаблДок.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	Заголовок = ЗаголовокФормы;
			 		
	ОтработатьИзмененияПараметровПечати();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьТекстПодсказки()
	
	КоличествоТаблДок = КоличествоВыбранныхТабличныхДокументов();
	
	КоличествоЛистовВсего = 0;
	
	Для Каждого Стр1 Из СписокЛистов.ПолучитьЭлементы() Цикл
		КоличествоЛистовВсего = КоличествоЛистовВсего + Стр1.КоличествоСтраниц;
	КонецЦикла;
	
	КоличествоЛистовТребуется = КоличествоТаблДок * КоличествоКопий;

	ТекстЛистовВсего = СтрЗаменить(ЧислоПрописью(КоличествоЛистовВсего, "НП=Истина, НД=Ложь", "листа, листов, листов, м, , , , ,0"),
	                               ЧислоПрописью(КоличествоЛистовВсего, "НП=Ложь, НД=Ложь", " , , , , , , , ,0"),
	                               "");

	ТекстЛистовТребуется = СтрЗаменить(ЧислоПрописью(КоличествоЛистовТребуется, "НП=Истина, НД=Ложь", "лист, листа, листов, м, , , , ,0"),
	                                   ЧислоПрописью(КоличествоЛистовТребуется, "НП=Ложь, НД=Ложь", " , , , , , , , ,0"),
	                                   "");

	ТекстСтатистики = НСтр("ru='Всего: '") + КоличествоЛистовТребуется + " " + ТекстЛистовТребуется + НСтр("ru=' бумаги'");
	
КонецПроцедуры

&НаКлиенте
Функция КоличествоВыбранныхТабличныхДокументов()
	
	Кол = 0;
	
	Для Каждого Стр1 Из СписокЛистов.ПолучитьЭлементы() Цикл
		
		Кол = Кол + ?(Стр1.Пометка, Стр1.КоличествоСтраниц, 0);
		
	КонецЦикла;
		
	Возврат Кол;
	
КонецФункции

&НаКлиенте
Процедура ОтработатьИзмененияПараметровПечати()
	
	Если КоличествоКопий = 0 ИЛИ КоличествоКопий = Неопределено Тогда
		КоличествоКопий = 1;
	КонецЕсли;
	
	Если КоличествоКопий <> 1 Тогда
		Элементы.РазобратьПоКопиям.Доступность = Истина;
	Иначе
		Элементы.РазобратьПоКопиям.Доступность = Ложь;
	КонецЕсли;
	
	СформироватьТекстПодсказки();
	
	СохранитьЗначениеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЛистовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущаяСтрока = ТекущаяСтрокаРазделовОтчета Тогда
		Возврат;
	КонецЕсли;
	
	СохранениеМодификацийВПечатнойФорме();
	
	ТекущаяСтрокаРазделовОтчета = Элемент.ТекущаяСтрока;
	ТекущиеДанныеОтчета = Элемент.ТекущиеДанные;
	
	ВывестиВыбранныйЛистВТабличныйДокумент(Элемент.ТекущиеДанные.АдресВоВременномХранилище);
		
КонецПроцедуры

&НаКлиенте
Процедура КоличествоКопийПриИзменении(Элемент)
	
	ОтработатьИзмененияПараметровПечати();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИлиСнятьФлажки(Пометка)
	
	Для Каждого Эл Из СписокЛистов.ПолучитьЭлементы() Цикл
		
		Эл.Пометка = Пометка;
		
	КонецЦикла;
	
	СформироватьТекстПодсказки();	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьИлиСнятьФлажки(1);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьИлиСнятьФлажки(0);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьЗначениеНаСервере()
		
	ХранилищеНастроекДанныхФорм.Сохранить("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ПечатьРегламентированныхОтчетов", "ПредпросмотрРегламентированнойОтчетностиКоличествоКопий",     КоличествоКопий);
	ХранилищеНастроекДанныхФорм.Сохранить("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ПечатьРегламентированныхОтчетов", "ПредпросмотрРегламентированнойОтчетностиРазобратьПоКопиям",   РазобратьПоКопиям);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЛистовПометкаПриИзменении(Элемент)
	
	Если Элементы.СписокЛистов.ТекущиеДанные.Пометка = 2 Тогда
		Элементы.СписокЛистов.ТекущиеДанные.Пометка = 0;
	КонецЕсли;
		
	Для Каждого Стр Из Элементы.СписокЛистов.ТекущиеДанные.ПолучитьЭлементы() Цикл
		Стр.Пометка = Элементы.СписокЛистов.ТекущиеДанные.Пометка;
	КонецЦикла;
	
	СформироватьТекстПодсказки();
	
КонецПроцедуры

&НаКлиенте
Процедура Печатать(Команда)
	
	СохранениеМодификацийВПечатнойФорме();
	
	ПакетТаблДок = Новый ПакетОтображаемыхДокументов;
	
	Если РазобратьПоКопиям Тогда
		
		Для Сч = 1 По КоличествоКопий Цикл
			
			Для Каждого Стр1 Из СписокЛистов.ПолучитьЭлементы() Цикл
				
				Если НЕ Стр1.Пометка Тогда
					Продолжить;
				КонецЕсли;
				
				ПакетТаблДок.Состав.Добавить(Стр1.АдресВоВременномХранилище);
				
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого Стр1 Из СписокЛистов.ПолучитьЭлементы() Цикл
				
			Если НЕ Стр1.Пометка Тогда
				Продолжить;
			КонецЕсли;
			
			Для Сч = 1 По КоличествоКопий Цикл
				
				ПакетТаблДок.Состав.Добавить(Стр1.АдресВоВременномХранилище);
				
			КонецЦикла;
				
		КонецЦикла;
		
	КонецЕсли;
	
	Если ПакетТаблДок.Состав.Количество() > 0 Тогда
		
		ПакетТаблДок.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
						
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФорматеPDFДокумента(Команда)
	
	#Если ВебКлиент Тогда
		
		ВыгрузитьНаДискВВебКлиенте(ТипФайлаТабличногоДокумента.PDF);
		
	#Иначе
		
		ВыгрузитьНаДиск(ТипФайлаТабличногоДокумента.PDF);
		
	#КонецЕсли	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФорматеMicrosoftExcel(Команда)
	
	#Если ВебКлиент Тогда
		
		ВыгрузитьНаДискВВебКлиенте(ТипФайлаТабличногоДокумента.XLS);
		
	#Иначе
		
		ВыгрузитьНаДиск(ТипФайлаТабличногоДокумента.XLS);
		
	#КонецЕсли	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВВидеТабличныхДокументов(Команда)
	
	#Если ВебКлиент Тогда
		
		ВыгрузитьНаДискВВебКлиенте(ТипФайлаТабличногоДокумента.MXL);
		
	#Иначе
		
		ВыгрузитьНаДиск(ТипФайлаТабличногоДокумента.MXL);
		
	#КонецЕсли	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьНаДиск(ВФормате)
	
	СохранениеМодификацийВПечатнойФорме();
	
	СоответствиеФорматаРасширению = Новый Соответствие;
	СоответствиеФорматаРасширению.Вставить(ТипФайлаТабличногоДокумента.MXL, "mxl");
	СоответствиеФорматаРасширению.Вставить(ТипФайлаТабличногоДокумента.XLS, "xls");
	СоответствиеФорматаРасширению.Вставить(ТипФайлаТабличногоДокумента.PDF, "pdf");
	
	Если КоличествоВыбранныхТабличныхДокументов() = 0 Тогда
		
		ПоказатьПредупреждение(, НСтр("ru='Выберите листы в дереве печатаемых листов.'"));
		
		Возврат;
		
	КонецЕсли;
	
	ПутьДляВыгрузки = РегламентированнаяОтчетностьКлиент.ПолучитьПутьВыгрузки();
	
	Если ПутьДляВыгрузки = Неопределено
	 ИЛИ ПустаяСтрока(ПутьДляВыгрузки)
	 ИЛИ ПутьДляВыгрузки = Ложь Тогда
	 
		Возврат;
		
	КонецЕсли;
	
	ПризнакОшибки = Ложь;
	
	Если ВФормате = ТипФайлаТабличногоДокумента.PDF Тогда
				
		ПакетТаблДок = Новый ПакетОтображаемыхДокументов;
						
		ИмяФайла = ПутьДляВыгрузки + СформироватьИмяФайла(ЗаголовокФормы + "." + СоответствиеФорматаРасширению[ВФормате]);
		
		Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохранение %1'"), ИмяФайла), , , БиблиотекаКартинок.Записать);
		
	КонецЕсли;	
	
	Для Каждого Стр1 Из СписокЛистов.ПолучитьЭлементы() Цикл
		
		Если Стр1.Пометка Тогда
			
			Если ВФормате = ТипФайлаТабличногоДокумента.PDF Тогда
				
				ПакетТаблДок.Состав.Добавить(Стр1.АдресВоВременномХранилище);
				
			Иначе	
								
				Попытка
					
					ТаблДок = ПолучитьИзВременногоХранилища(Стр1.АдресВоВременномХранилище);
					ТаблДок.Область().ЦветФона = Новый Цвет();
										
					ИмяФайла = ПутьДляВыгрузки + СформироватьИмяФайла(Стр1.Наименование + "." + СоответствиеФорматаРасширению[ВФормате]);
					
					Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохранение %1'"), ИмяФайла), , , БиблиотекаКартинок.Записать);
					
					ТаблДок.Записать(ИмяФайла, ВФормате);
					
				Исключение
					
					ПризнакОшибки = Истина;
					
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВФормате = ТипФайлаТабличногоДокумента.PDF
	   И ПакетТаблДок.Состав.Количество() > 0 Тогда
		
		Попытка
									
			ПакетТаблДок.ЗаписатьФайлДляПечати(ИмяФайла);
			
		Исключение
			
			ПризнакОшибки = Истина;
			
		КонецПопытки;
				
	КонецЕсли;			
	
	Состояние();
				
	Если ПризнакОшибки Тогда
		
		ПоказатьПредупреждение(, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось сохранить печатный бланк в указанный каталог.%1Возможно, недостаточно места на диске или диск защищен от записи.'"), Символы.ПС), , НСтр("ru='Ошибка записи на диск.'"));
			
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьНаДискВВебКлиенте(ВФормате)
	
	СохранениеМодификацийВПечатнойФорме();
	
	СоответствиеФорматаРасширению = Новый Соответствие;
	СоответствиеФорматаРасширению.Вставить(ТипФайлаТабличногоДокумента.MXL, "mxl");
	СоответствиеФорматаРасширению.Вставить(ТипФайлаТабличногоДокумента.XLS, "xls");
	СоответствиеФорматаРасширению.Вставить(ТипФайлаТабличногоДокумента.PDF, "pdf");
	
	Если КоличествоВыбранныхТабличныхДокументов() = 0 Тогда
		
		ПоказатьПредупреждение(, НСтр("ru='Выберите листы в дереве печатаемых листов.'"));
		
		Возврат;
		
	КонецЕсли;
		
	АдресаЛистовВоВременномХранилище = Новый Массив();
	
	ПоместитьЛистыВоВременноеХранилищеНаСервере(ВФормате, АдресаЛистовВоВременномХранилище, СоответствиеФорматаРасширению);
		
	ПодключитьОбработчикОжидания("Подключаемый_ПолучитьФайл", 1);
					
КонецПроцедуры

&НаСервере
Функция ПоместитьЛистыВоВременноеХранилищеНаСервере(ВФормате, АдресаЛистовВоВременномХранилище, СоответствиеФорматаРасширению) Экспорт 
	
	Если ВФормате = ТипФайлаТабличногоДокумента.PDF Тогда
				
		ПакетТаблДок = Новый ПакетОтображаемыхДокументов;
						
	КонецЕсли;
	
	Для Каждого Лист Из СписокЛистов.ПолучитьЭлементы() Цикл
		
		Если Лист.Пометка Тогда
			
			Если ВФормате = ТипФайлаТабличногоДокумента.PDF Тогда
				
				ПакетТаблДок.Состав.Добавить(Лист.АдресВоВременномХранилище);
				
			Иначе	
				
				ИмяФайла = КаталогВременныхФайлов() + СформироватьИмяФайла(Лист.Наименование + "." + СоответствиеФорматаРасширению[ВФормате]);
				
				ТаблДок = ПолучитьИзВременногоХранилища(Лист.АдресВоВременномХранилище);
				
				ТаблДок.Область().ЦветФона = Новый Цвет();
				
				ТаблДок.Записать(ИмяФайла, ВФормате);
				
				ФайлЛиста = Новый ДвоичныеДанные(ИмяФайла);
				
				АдресаЛистовВоВременномХранилище.Добавить(Новый Структура("АдресВоВременномХранилище, Наименование", ПоместитьВоВременноеХранилище(ФайлЛиста, ЭтаФорма.УникальныйИдентификатор), СформироватьИмяФайла(Лист.Наименование + "." + СоответствиеФорматаРасширению[ВФормате])));
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВФормате = ТипФайлаТабличногоДокумента.PDF
	   И ПакетТаблДок.Состав.Количество() > 0 Тогда
	   
	   	КаталогВременныхФайлов = КаталогВременныхФайлов();
	   
		ИмяФайла = СформироватьИмяФайла(ЗаголовокФормы + "." + СоответствиеФорматаРасширению[ВФормате]);
			
		ПакетТаблДок.ЗаписатьФайлДляПечати(КаталогВременныхФайлов + ИмяФайла);
		
		ФайлЛиста = Новый ДвоичныеДанные(КаталогВременныхФайлов + ИмяФайла);
				
		АдресаЛистовВоВременномХранилище.Добавить(Новый Структура("АдресВоВременномХранилище, Наименование",
			ПоместитьВоВременноеХранилище(ФайлЛиста, ЭтаФорма.УникальныйИдентификатор), ИмяФайла));
						
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьИмяФайла(ИсходноеИмяФайла)
	
	ИмяФайла = СтрЗаменить(ИсходноеИмяФайла, "/", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, "\", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, ":", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, "*", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, "?", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, """","_");
	ИмяФайла = СтрЗаменить(ИмяФайла, "<", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, ">", "_");
	
	ИмяФайла = СтрЗаменить(ИмяФайла, Символы.ПС, " ");
	
	Возврат СтрЗаменить(ИмяФайла, "|", "_");
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПолучитьФайл()
	
	Если АдресаЛистовВоВременномХранилище.Количество() = 0 Тогда
		
		ОтключитьОбработчикОжидания("Подключаемый_ПолучитьФайл");
		
		Возврат;
		
	КонецЕсли;
	
	ПолучитьФайл(АдресаЛистовВоВременномХранилище[0].АдресВоВременномХранилище, АдресаЛистовВоВременномХранилище[0].Наименование);
	
	АдресаЛистовВоВременномХранилище.Удалить(0);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЛистовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЛистовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиВыбранныйЛистВТабличныйДокумент(АдресВоВременномХранилище)
	
	ТаблДок = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
		
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ТаблДок);
	
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ТаблДок);
	
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать   = Истина;
	ТабличныйДокумент.Область().ЦветФона = Новый Цвет();
	ТабличныйДокумент.Область().Защита   = Ложь;
	ТабличныйДокумент.ЧерноБелыйПросмотр = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	СтраницаПечатнойФормыМодифицирована = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранениеМодификацийВПечатнойФорме()
	
	СтраницаПечатнойФормыМодифицирована = ?(СтраницаПечатнойФормыМодифицирована <> Неопределено, СтраницаПечатнойФормыМодифицирована, Ложь);
	
	Если СтраницаПечатнойФормыМодифицирована Тогда
		ПоместитьВоВременноеХранилище(ТабличныйДокумент, ТекущиеДанныеОтчета.АдресВоВременномХранилище);
		СтраницаПечатнойФормыМодифицирована = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазобратьПоКопиямПриИзменении(Элемент)
	
	СохранитьЗначениеНаСервере();
	
КонецПроцедуры

#КонецОбласти