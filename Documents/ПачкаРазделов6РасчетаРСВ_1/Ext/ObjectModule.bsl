#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РежимЗаписиТекущегоДокумента = РежимЗаписи;
	
КонецПроцедуры

Процедура СоздатьВТСТаблицамиОбъекта(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("ЗаписиОСтаже", ЗаписиОСтаже);
	Запрос.УстановитьПараметр("СведенияОЗаработке", СведенияОЗаработке);
	Запрос.УстановитьПараметр("СведенияОЗаработкеНаВредныхИТяжелыхРаботах", СведенияОЗаработкеНаВредныхИТяжелыхРаботах);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.НомерСтроки,
	|	Сотрудники.Сотрудник,
	|	Сотрудники.Фамилия,
	|	Сотрудники.Имя,
	|	Сотрудники.Отчество,
	|	Сотрудники.СтраховойНомерПФР,
	|	Сотрудники.НачисленоСтраховая,
	|	Сотрудники.ДоначисленоСтраховая
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&Сотрудники КАК Сотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка,
	|	СведенияОЗаработке.НомерСтроки,
	|	СведенияОЗаработке.Сотрудник,
	|	СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|	СведенияОЗаработке.Месяц,
	|	СведенияОЗаработке.Заработок,
	|	СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины,
	|	СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|ПОМЕСТИТЬ ВТСведенияОЗаработке
	|ИЗ
	|	&СведенияОЗаработке КАК СведенияОЗаработке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.НомерСтроки,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Сотрудник,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|ПОМЕСТИТЬ ВТСведенияОЗаработкеНаВредныхИТяжелыхРаботах
	|ИЗ
	|	&СведенияОЗаработкеНаВредныхИТяжелыхРаботах КАК СведенияОЗаработкеНаВредныхИТяжелыхРаботах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка,
	|	ЗаписиОСтаже.НомерСтроки,
	|	ЗаписиОСтаже.Сотрудник,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий
	|ПОМЕСТИТЬ ВТТаблицаСтажа
	|ИЗ
	|	&ЗаписиОСтаже КАК ЗаписиОСтаже
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.Сотрудник,
	|	ЗаписиОСтаже.НомерСтроки,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	СотрудникиНомераСтрок.НомерСтроки КАК НомерСтрокиСотрудник
	|ПОМЕСТИТЬ ВТЗаписиОСтаже
	|ИЗ
	|	ВТТаблицаСтажа КАК ЗаписиОСтаже
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК СотрудникиНомераСтрок
	|		ПО ЗаписиОСтаже.Сотрудник = СотрудникиНомераСтрок.Сотрудник";
	
	Запрос.Выполнить();	
КонецПроцедуры	

Функция СформироватьЗапросПоЗаработкуДляПроверкиЗаполнения(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	СведенияОЗаработке.НомерСтроки,
	|	СведенияОЗаработке.Сотрудник,
	|	СведенияОЗаработке.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	СведенияОЗаработке.Месяц КАК Месяц,
	|	СведенияОЗаработке.Заработок,
	|	СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины,
	|	СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	ВЫБОР
	|		КОГДА СведенияОЗаработке.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СведенияЗаполнены
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОЗаработке КАК СведенияОЗаработке
	|		ПО Сотрудники.Сотрудник = СведенияОЗаработке.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник,
	|	КатегорияЗастрахованныхЛиц,
	|	Месяц";
	
	Возврат Запрос.Выполнить();
КонецФункции	

Функция СформироватьЗапросПоВредномуЗаработкуДляПроверкиЗаполнения(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Ссылка,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.НомерСтроки,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Сотрудник,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда КАК КлассУсловийТруда,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц КАК Месяц,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	ВЫБОР
	|		КОГДА СведенияОЗаработкеНаВредныхИТяжелыхРаботах.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СведенияЗаполнены
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОЗаработкеНаВредныхИТяжелыхРаботах КАК СведенияОЗаработкеНаВредныхИТяжелыхРаботах
	|		ПО Сотрудники.Сотрудник = СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник,
	|	КлассУсловийТруда,
	|	Месяц";
	
	Возврат Запрос.Выполнить();	
КонецФункции	

Процедура ПроверитьДанныеДокумента(Ошибки, Отказ = Ложь, НеПроверяемыеРеквизиты = Неопределено) Экспорт 
	ПроверитьДанныеШапкиДокумента(Ошибки, Отказ, НеПроверяемыеРеквизиты);
	
	ЗапросПоСтрокамДокумента = Неопределено;
	
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ПроверяемыйПериод = ОтчетныйПериод;
	Иначе
		ПроверяемыйПериод = КорректируемыйПериод;
	КонецЕсли;
	
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТСТаблицамиОбъекта(МенеджерВременныхТаблиц);
	ВыборкаПоСтрокамДокумента = СформироватьЗапросПоЗаработкуДляПроверкиЗаполнения(МенеджерВременныхТаблиц).Выбрать();
	ВыборкаПоЗаработку = СформироватьЗапросПоЗаработкуДляПроверкиЗаполнения(МенеджерВременныхТаблиц).Выбрать();
	
	ВыборкаПоВредномуЗаработку = СформироватьЗапросПоВредномуЗаработкуДляПроверкиЗаполнения(МенеджерВременныхТаблиц).Выбрать();

	Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
		ВыборкаПоЗаработку.СледующийПоЗначениюПоля("НомерСтрокиСотрудник");
		ВыборкаПоВредномуЗаработку.СледующийПоЗначениюПоля("НомерСтрокиСотрудник");
		
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда 
			
			Если ВыборкаПоСтрокамДокумента.КонфликтующаяСтрока <> Null Тогда  
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Информация о сотруднике %1 была введена в документе ранее.'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование);
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
					Ошибки, 
					Ссылка, 
					ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
					ТекстОшибки,
					"Сотрудник",
					Отказ);
																							
			ИначеЕсли ВыборкаПоСтрокамДокумента.КонфликтующаяСтрокаСтраховойНомер <> Null Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: информация о сотруднике с таким же страховым номером была введена в документе ранее.'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование);
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
					Ошибки, 
					Ссылка, 
					ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
					ТекстОшибки,
					"СтраховойНомерПФР",
					Отказ);
			КонецЕсли;	
			
			
			ТарифыПоКатегориям = Новый Массив;
			
			ПроверитьСтрокиЗаработка(Ошибки, ВыборкаПоСтрокамДокумента, ВыборкаПоЗаработку, ТарифыПоКатегориям, Отказ);
			ПроверитьСтрокиВредногоЗаработка(Ошибки, ВыборкаПоСтрокамДокумента, ВыборкаПоВредномуЗаработку, Отказ);
		КонецЕсли;
		
	КонецЦикла;	
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ПроверяемыйПериод = ОтчетныйПериод;
	Иначе
		ПроверяемыйПериод = КорректируемыйПериод;
	КонецЕсли;
			
КонецПроцедуры

Процедура ПроверитьДанныеШапкиДокумента(Ошибки, Отказ = Ложь, НеПроверяемыеРеквизиты = Неопределено)
	Если Сотрудники.Количество() > 200 Тогда
		ТекстОшибки = НСтр("ru = 'В документе должно быть не более 200 форм.'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, , Отказ);
	КонецЕсли;
	
	Если ОтчетныйПериод < '20140101' Тогда
		ТекстОшибки = НСтр("ru = 'Разделы 6 Расчета РСВ-1 представляются начиная с 1 квартала 2014 года! Для формирования сведений за 2010-2012 годы используйте документ ""Пачка документов СЗВ-6-1"", ""Реестр СЗВ-6-2"" , за 2013 год используйте документ """"Пачка документов СЗВ-6-4"""".'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, , Отказ);
	КонецЕсли;
	
	Если ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Если Не ЗначениеЗаполнено(КорректируемыйПериод) Тогда
			ТекстОшибки = НСтр("ru = 'Не указан корректируемый отчетный период.'");
		
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		ИначеЕсли ОтчетныйПериод <= КорректируемыйПериод Тогда
			ТекстОшибки = НСтр("ru = 'Корректируемый период должен предшествовать отчетному.'");
		
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		ИначеЕсли КорректируемыйПериод < '20140101' Тогда
			ТекстОшибки = НСтр("ru = 'Корректирующие (отменяющие) Разделы 6 Расчета РСВ-1 представляются только за отчетные периоды c 1 квартала 2014 года.'");
		
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры	

Процедура ПроверитьСтрокиЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТарифыПоКатегориям, Отказ = Ложь)
	ПериодДанных = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
	
	МесяцС = Месяц(ПериодДанных);
	МесяцПо = МесяцС + 2;
	
	МесяцыДохода = Новый ТаблицаЗначений;
	МесяцыДохода.Колонки.Добавить("Месяц");
	МесяцыДохода.Колонки.Добавить("КатегорияЗастрахованныхЛиц");
	МесяцыДохода.Колонки.Добавить("КоличествоСтрок", Новый ОписаниеТипов("Число"));
	
	РассчитанныйПФР = 0;
	ОблагаемыйЗаработокПоКатегории = 0;
	Заработок = 0;
	
	Если ВыборкаПоДоходам.СведенияЗаполнены Тогда
		Пока ВыборкаПоДоходам.СледующийПоЗначениюПоля("КатегорияЗастрахованныхЛиц") Цикл
			ОблагаемыйЗаработокПоКатегории = 0;
			Пока ВыборкаПоДоходам.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаПоДоходам.Месяц) 
					И (ВыборкаПоДоходам.Месяц < МесяцС Или ВыборкаПоДоходам.Месяц > МесяцПо)
					И ЗначениеЗаполнено(ПериодДанных) Тогда
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'в строках заработка указан месяц (%1), не принадлежащий отчетному периоду'"), ВыборкаПоДоходам.Месяц);
					ПолныйТекстОшибки = ТекстОшибкиЗаработка(ВыборкаДанныхСотрудника.СотрудникНаименование, , ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц, ТекстОшибки);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
						Ошибки, 
						Ссылка, 
						ВыборкаПоДоходам.НомерСтрокиСотрудник,
						ВыборкаПоДоходам.НомерСтроки,
						ПолныйТекстОшибки,
						"Месяц",
						Отказ);	
				Иначе 	
					СтрокаТаблицы = МесяцыДохода.Добавить();
					СтрокаТаблицы.Месяц = ВыборкаПоДоходам.Месяц;
					СтрокаТаблицы.КатегорияЗастрахованныхЛиц = ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц;
					СтрокаТаблицы.КоличествоСтрок = 1;
					
					Если ВыборкаПоДоходам.Месяц <> 0 Тогда
						ОблагаемыйЗаработокПоКатегории = ОблагаемыйЗаработокПоКатегории + ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины;
						Заработок = Заработок + ВыборкаПоДоходам.Заработок;
					КонецЕсли;	

				КонецЕсли;	
				
				Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц) Тогда
					ТекстОшибки = НСтр("ru = 'не указана категория застрахованных лиц.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.Заработок = 0 И ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины = 0 И ВыборкаПоДоходам.ОблагаетсяВзносамиСвышеПредельнойВеличины = 0  Тогда
					ТекстОшибки = НСтр("ru = 'указаны нулевые данные.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.Заработок < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указан отрицательный заработок.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указана отрицательная база, не превышающая предельную величину.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.ПоДоговорамГПХДоПредельнойВеличины < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указана отрицательная база по договорам ГПХ, не превышающая предельную величину'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.ОблагаетсяВзносамиСвышеПредельнойВеличины < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указана отрицательная база, превышающая предельную величину.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.Заработок < ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины + ВыборкаПоДоходам.ОблагаетсяВзносамиСвышеПредельнойВеличины Тогда
					ТекстОшибки = НСтр("ru = 'сумма, облагаемая взносами, превышает сумму начисленного заработка.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				
			КонецЦикла;
			Тариф = ТарифыПоКатегориям.Получить(ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц);
			
			Если Тариф <> Неопределено Тогда
				РассчитанныйПФР = РассчитанныйПФР + Окр(ОблагаемыйЗаработокПоКатегории * (Тариф.ПФРСтраховая + Тариф.ПФРНакопительная) / 100, 2);
			КонецЕсли;	
			
		КонецЦикла;	
		
		МесяцыДохода.Свернуть("КатегорияЗастрахованныхЛиц, Месяц", "КоличествоСтрок");
		
		Если ЗначениеЗаполнено(ПериодДанных) Тогда
			Для каждого СтрокаТаблицы Из МесяцыДохода Цикл
				Если СтрокаТаблицы.КоличествоСтрок > 1 Тогда
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: в разделе 6.4 (сведения о заработке) по категории %2 месяц №%3 указан более одного раза'");
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ШаблонТекстаОшибки,
										ВыборкаДанныхСотрудника.СотрудникНаименование,
										ОбщегоНазначения.ИмяЗначенияПеречисления(СтрокаТаблицы.КатегорияЗастрахованныхЛиц),
										СтрокаТаблицы.Месяц);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
						Ошибки,
						Ссылка,
						ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
						ТекстОшибки, ,
						Отказ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;	
		
	// П. 7.5.4. По всем разделам 6 значение, указанное в подразделе 6.5 должно быть равно сумме значений, 
	// указанных в графе 5 строк 401,402 и 403  (411, 412, 413 и т.д. (зависит от количества тарифов 
	// страховых взносов), умноженных на соответствующий текущему периоду тариф страховых взносов.
		
	ТекстОшибки = НСтр("ru = '- значение, указанное в подразделе 6.5 (начислено на ОПС) должно быть равно сумме значений, указанных в графе 5 строк 401,402 и 403  (411, 412, 413 и т.д., зависит от количества тарифов страховых взносов),  умноженных на соответствующий текущему периоду тариф страховых взносов.'");
	Разность = Макс(РассчитанныйПФР - ВыборкаДанныхСотрудника.НачисленоСтраховая, ВыборкаДанныхСотрудника.НачисленоСтраховая - РассчитанныйПФР);
	Если Разность > 0.03 Тогда
		ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: %2'");	
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								ШаблонТекстаОшибки,
								ВыборкаДанныхСотрудника.СотрудникНаименование,
								ТекстОшибки);
							
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОВзносах(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки, 
			"НачисленоСтраховая",
			Отказ);				
	КонецЕсли;		
		
	// П. 7.4.16. Если в подразделе 6.8 содержится запись в графах 2 и 3, которая не сопровождается записью с кодом «АДМИНИСТР», «ДЕТИ», «УЧОТПУСК», «ДЛДЕТИ», «ДЛОТПУСК», «ВРНЕТРУД», 
	// «ДЕКРЕТ», «ЧАЭС», «НЕОПЛ», «НЕОПЛДОГ» и «НЕОПЛАВТ»  обязательно наличие значения в графе 4 строки 401-403  подраздела 6.4
	Если Заработок = 0 И ВыборкаДанныхСотрудника.КоличествоОплачиваемыхСтрок > 0 Тогда
		ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: %2'");
		
		ТекстОшибки = НСтр("ru = 'Если в подразделе 6.8 содержится запись в графах 2 и 3, которая не сопровождается записью с кодом «АДМИНИСТР», «ДЕТИ», «УЧОТПУСК», «ДЛДЕТИ», «ДЛОТПУСК», «ВРНЕТРУД», «ДЕКРЕТ», «ЧАЭС», «НЕОПЛ», «НЕОПЛДОГ» и «НЕОПЛАВТ»  обязательно наличие значения в графе 4 строки 401-403  подраздела 6.4'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								ШаблонТекстаОшибки,
								ВыборкаДанныхСотрудника.СотрудникНаименование,
								ТекстОшибки);

		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки, ,
			Отказ);				
	КонецЕсли;
	
		
КонецПроцедуры	

Процедура ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоЗаработку, ТекстОшибки, Отказ = Ложь)
	ПолныйТекстОшибки = ТекстОшибкиЗаработка(
							ВыборкаДанныхСотрудника.СотрудникНаименование,
							ВыборкаПоЗаработку.Месяц, 
							ВыборкаПоЗаработку.КатегорияЗастрахованныхЛиц, 
							ТекстОшибки);	
							
							
	ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
		Ошибки,
		Ссылка,
		ВыборкаПоЗаработку.НомерСтрокиСотрудник,
		ВыборкаПоЗаработку.НомерСтроки,
		ПолныйТекстОшибки,
		Отказ);
КонецПроцедуры	

Функция ТекстОшибкиЗаработка(НаименованиеСотрудника, Месяц = Неопределено, КатегорияЗастрахованныхЛиц = Неопределено, ТекcтОшибки)
	Если Месяц = Неопределено Тогда
		ОписаниеМесяца = "";	
	Иначе	
		ОписаниеМесяца = ?(Месяц = 0, НСтр("ru = '- в показателе С начала года '"), НСтр("ru = '- за '") + Месяц + НСтр("ru = '-й месяц '"));	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(КатегорияЗастрахованныхЛиц) Тогда
		ОписаниеКатегории = "";
	Иначе
		ОписаниеКатегории = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'по категории %1 '"),
								ОбщегоНазначения.ИмяЗначенияПеречисления(КатегорияЗастрахованныхЛиц));
		
	КонецЕсли;	
	
	ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: в разделе 6.4 (сведения о заработке) %2%3%4'");
	
	ПолныйТекстОшибки  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							ШаблонТекстаОшибки,
							НаименованиеСотрудника, 
							ОписаниеМесяца, 
							ОписаниеКатегории, 
							ТекcтОшибки);
	
	Возврат ПолныйТекстОшибки;
КонецФункции	

Процедура ПроверитьСтрокиВредногоЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах, Отказ = Ложь)
	ПериодДанных = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
	
	МесяцС = Месяц(ПериодДанных);
	МесяцПо = МесяцС + 2;
	
	МесяцыДохода = Новый ТаблицаЗначений;
	МесяцыДохода.Колонки.Добавить("Месяц");
	МесяцыДохода.Колонки.Добавить("КлассУсловийТруда");
	МесяцыДохода.Колонки.Добавить("КоличествоСтрок", Новый ОписаниеТипов("Число"));
	
	ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = 0;
	ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = 0;
	ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = 0;
	ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = 0;
	ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = 0;
	ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = 0;

	Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.СведенияЗаполнены Тогда
		Пока ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.СледующийПоЗначениюПоля("КлассУсловийТруда") Цикл
			Пока ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Следующий() Цикл 		
				Если ЗначениеЗаполнено(ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц) 
					И (ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц < МесяцС Или ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц > МесяцПо)
					И ЗначениеЗаполнено(ПериодДанных) Тогда
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'в строках заработка указан месяц (%1), не принадлежащий отчетному периоду'"), 
									ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц);
									
					ПолныйТекстОшибки = ТекстОшибкиВредногоЗаработка(
											ВыборкаДанныхСотрудника.СотрудникНаименование, , 
											ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.КлассУсловийТруда, 
											ТекстОшибки);
					
				Иначе
					СтрокаТаблицы = МесяцыДохода.Добавить();
					СтрокаТаблицы.Месяц = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц;
					СтрокаТаблицы.КлассУсловийТруда = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.КлассУсловийТруда;
					СтрокаТаблицы.КоличествоСтрок = 1;
				КонецЕсли;	

				Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц = МесяцС Тогда
					ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
					ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
				КонецЕсли;
				Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц = МесяцС + 1 Тогда
					ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
					ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
				КонецЕсли;
				Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц = МесяцС + 2 Тогда
					ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
					ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
				КонецЕсли;

				Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указана отрицательная база взносов за занятых на подземных и вредных работах.'");
					
					ДобавитьОшибкуВредногоЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах, ТекстОшибки, Отказ = Ложь);
				КонецЕсли;
				Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указана отрицательная база взносов за занятых на тяжелых работах.'");
					
					ДобавитьОшибкуВредногоЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах, ТекстОшибки, Отказ = Ложь)
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;	
		
		МесяцыДохода.Свернуть("КлассУсловийТруда, Месяц", "КоличествоСтрок");
		
		Если ЗначениеЗаполнено(ПериодДанных) Тогда 
			Для каждого СтрокаТаблицы Из МесяцыДохода Цикл
				Если СтрокаТаблицы.КоличествоСтрок > 1 Тогда
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: в разделе 6.7 (Сведения о выплатах занятых на работах дающих право на досрочную пенсию) по классу условий труда %2 месяц №%3 указан более одного раза'");
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ШаблонТекстаОшибки,
										ВыборкаДанныхСотрудника.СотрудникНаименование,
										СтрокаТаблицы.КлассУсловийТруда,
										СтрокаТаблицы.Месяц);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
						Ошибки,
						Ссылка,
						ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
						ТекстОшибки, ,
						Отказ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
	
	//П 7.8.2 По всем разделам 6 при наличии ненулевых значений в строках 701,702,703,711,712,713  графы 4 подраздела 6.7  
	//обязательно наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 для соответствующих периодов, 
	//указанных в графах 2 и 3 подраздела 6.8
	
	//П 7.8.4 По всем разделам 6 при наличии в графе «Особые условия труда (код)» подраздела 6.8  кода особых условий 
	//труда 27-1 и отсутствии кода «ДЕКРЕТ», «ВРНЕТРУД», «ВАХТА», «ДЛОТПУСК», то для соответствующих месяцев обязательно 
	//наличие ненулевых значений в графе 4 подраздела 6.7  за соответствующие месяцы (строки 701, 702, 703, 711, 712, 713). 
	
	ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: %2'");
	Если ВыборкаДанныхСотрудника.Ст27_1ВПервомМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии кода 27-1 особых условий труда в строках подраздела 6.8 за первый месяц отчетного периода обязательно наличие значений в графе 4 подраздела 6.7 в строках 701,711 ...'");
			
			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,
				Отказ);
		КонецЕсли; 
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьСт27_1ВПервомМесяце Тогда // коды есть, но проверять не надо	
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце <> 0 Тогда	
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 701,711 ... графы 4 подраздела 6.7  обязательно наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 в строках подраздела 6.8 за первый месяц отчетного периода'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,
			Отказ);
	КонецЕсли;
	Если ВыборкаДанныхСотрудника.Ст27_1ВоВторомМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии кода 27-1 особых условий труда в строках подраздела 6.8 за второй месяц отчетного периода обязательно наличие значений в графе 4 подраздела 6.7 в строках 702,712 ...'");
			
			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,
				Отказ);

		КонецЕсли;
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьСт27_1ВоВторомМесяце Тогда // коды есть, но проверять не надо
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце <> 0 Тогда	
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 702,712 ... графы 4 подраздела 6.7  обязательно наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 в строках подраздела 6.8 за второй месяц отчетного периода'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,
			Отказ);
		
	КонецЕсли;
	Если ВыборкаДанныхСотрудника.Ст27_1ВТретьемМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии кода 27-1 особых условий труда в строках подраздела 6.8 за третий месяц отчетного периода обязательно наличие значений в графе 4 подраздела 6.7 в строках 703,713 ...'");

			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,
				Отказ);

		КонецЕсли;
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьСт27_1ВТретьемМесяце Тогда // коды есть, но проверять не надо
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце <> 0 Тогда	
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 703,713 ... графы 4 подраздела 6.7  обязательно наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 в строках подраздела 6.8 за третий месяц отчетного периода'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,
			Отказ);

	КонецЕсли;
	
	//П 7.8.3 По всем разделам 6 при наличии ненулевых значений в строках 701,702,703,711,712,713  графы 5 подраздела 6.7  
	//обязательно наличие  для соответствующих периодов, указанных в графах 2 и 3 подраздела 6.8  в графе «Особые условия 
	//труда (код)» одного из кодов особых условий труда, (кроме «27-1» ,«28-СЕВ», «27-2» в сочетании со значением 23307000-17541 
	//элемента Код позиции списка) то есть указаны 27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ,  
	//или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» подраздела 6.8  в строке периода работы 
	//за соответствующий месяц должно быть указано одно из значений: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, 
	//УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15..
	
	//П 7.8.5 По всем разделам 6 при наличии в графе «Особые условия труда (код)» подраздела 6.8 одного из кодов особых условий 
	//труда, кроме «27-1», «28-СЕВ», «27-2» в сочетании со значением 23307000-17541 элемента Код позиции списка  (то есть указаны 
	//27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения 
	//трудовой пенсии. Основание (код)» указано одно из значений: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, 
	//УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 и отсутствии   кода «ДЕКРЕТ», «ВРНЕТРУД», «ВАХТА», 
	//«ДЛОТПУСК», то для соответствующих месяцев обязательно наличие ненулевых  значений в графе 5 подраздела 6.7  за 
	//соответствующие месяцы (строки 701, 702, 703, 711, 712, 713). 
		
	Если ВыборкаДанныхСотрудника.ОстальныеКодыВПервомМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии в строках подраздела 6.8 за первый месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ»  (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 обязательно наличие значений в графе 5 подраздела 6.7 в строках 701,711 ...'");

			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,
				Отказ);
				
		КонецЕсли;
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьОстальныеКодыВПервомМесяце Тогда // коды есть, но проверять не надо
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце <> 0 Тогда
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 701,711 ... графы 5 подраздела 6.7 обязательно наличие в строках подраздела 6.8 за первый месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,
			Отказ);

	КонецЕсли;
	Если ВыборкаДанныхСотрудника.ОстальныеКодыВоВторомМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии в строках подраздела 6.8 за второй месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» 27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 обязательно наличие значений в графе 5 подраздела 6.7 в строках 702,712 ...'");
			
			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,
				Отказ);

		КонецЕсли; 
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьОстальныеКодыВоВторомМесяце Тогда // коды есть, но проверять не надо
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце <> 0 Тогда	
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 702,712 ... графы 5 подраздела 6.7 обязательно наличие в строках подраздела 6.8 за второй месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ,  ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,
			Отказ);
			
	КонецЕсли;
	Если ВыборкаДанныхСотрудника.ОстальныеКодыВТретьемМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии в строках подраздела 6.8 за третий месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 обязательно наличие значений в графе 5 подраздела 6.7 в строках 701,711 ...'");
			
			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,
				Отказ);
			
		КонецЕсли; 
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьОстальныеКодыВТретьемМесяце Тогда // коды есть, но проверять не надо	
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце <> 0 Тогда	
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 701,711 ... графы 5 подраздела 6.7 обязательно наличие в строках подраздела 6.8 за третий месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ,  ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры	

Процедура ДобавитьОшибкуВредногоЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоЗаработку, ТекстОшибки, Отказ = Ложь)
	ПолныйТекстОшибки = ТекстОшибкиВредногоЗаработка(
							ВыборкаДанныхСотрудника.СотрудникНаименование,
							ВыборкаПоЗаработку.Месяц, 
							ВыборкаПоЗаработку.КлассУсловийТруда, 
							ТекстОшибки);	
							
							
КонецПроцедуры

Функция ТекстОшибкиВредногоЗаработка(НаименованиеСотрудника, Месяц = Неопределено, КлассУсловийТруда = Неопределено, ТекcтОшибки)
	Если Месяц = Неопределено Тогда
		ОписаниеМесяца = "";	
	Иначе	
		ОписаниеМесяца = ?(Месяц = 0, НСтр("ru = '- в показателе С начала года '"), НСтр("ru = '- за '") + Месяц + "ru = '-й месяц '");	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(КлассУсловийТруда) Тогда
		ОписаниеКлассаУсловийТруда = "";
	Иначе
		ОписаниеКлассаУсловийТруда = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'по классу условий труда %1 '"),
										КлассУсловийТруда);
		
	КонецЕсли;	
	
	ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: в разделе 6.7 (Сведения о выплатах занятых на работах дающих право на досрочную пенсию) %2%3%4'");
	
	ПолныйТекстОшибки  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							ШаблонТекстаОшибки, 
							НаименованиеСотрудника, 
							ОписаниеМесяца, 
							ОписаниеКлассаУсловийТруда, 
							ТекcтОшибки);
	
	Возврат ПолныйТекстОшибки;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Подсистема "Управление доступом"

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	
КонецПроцедуры

// Подсистема "Управление доступом"


Функция ОкончаниеОтчетногоПериода() Экспорт
	
	Возврат ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	
КонецФункции

#КонецЕсли
