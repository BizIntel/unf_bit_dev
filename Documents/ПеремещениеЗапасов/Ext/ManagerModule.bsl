#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасы(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.ВидОперации КАК ВидОперации,
	|	ТаблицаЗапасы.ВалютаЦеныПолучатель КАК ВалютаЦеныПолучатель,
	|	ТаблицаЗапасы.ТипСчетаЗатрат КАК ТипСчетаЗатрат,
	|	ТаблицаЗапасы.КоррНаправлениеДеятельности КАК КоррНаправлениеДеятельности,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СценарийПланирования КАК СценарийПланирования,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница КАК КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.КоррСчетУчета КАК КоррСчетУчета,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.КоррНоменклатура КАК КоррНоменклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.КоррХарактеристика КАК КоррХарактеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.КоррПартия КАК КоррПартия,
	|	ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаЗапасы.КоррЗаказПокупателя КАК КоррЗаказПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПродажи,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказПродажи,
	|	ТаблицаЗапасы.КоррСчетУчета КАК СчетДт,
	|	ТаблицаЗапасы.СчетУчета КАК СчетКт,
	|	ТаблицаЗапасы.ПеремещениеВРозницу КАК ПеремещениеВРозницу,
	|	ТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет КАК ПеремещениеВРозницуСуммовойУчет,
	|	ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет КАК ВозвратИзРозницыСуммовойУчет,
	|	ТаблицаЗапасы.СчетУчетаВРознице КАК СчетУчетаВРознице,
	|	ТаблицаЗапасы.СчетУчетаНаценки КАК СчетУчетаНаценки,
	|	ТаблицаЗапасы.СчетУчетаВРозницеПолучатель КАК СчетУчетаВРозницеПолучатель,
	|	ТаблицаЗапасы.СчетУчетаНаценкиПолучатель КАК СчетУчетаНаценкиПолучатель,
	|	ТаблицаЗапасы.СодержаниеПроводки КАК Содержание,
	|	ТаблицаЗапасы.СодержаниеПроводки КАК СодержаниеПроводки,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -ТаблицаЗапасы.Количество
	|			ИНАЧЕ ТаблицаЗапасы.Количество
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -ТаблицаЗапасы.Резерв
	|			ИНАЧЕ ТаблицаЗапасы.Резерв
	|		КОНЕЦ) КАК Резерв,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -ТаблицаЗапасы.Себестоимость
	|			ИНАЧЕ ТаблицаЗапасы.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	ЛОЖЬ КАК ФиксированнаяСтоимость
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	(НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.ВидОперации,
	|	ТаблицаЗапасы.ВалютаЦеныПолучатель,
	|	ТаблицаЗапасы.ТипСчетаЗатрат,
	|	ТаблицаЗапасы.КоррНаправлениеДеятельности,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.СценарийПланирования,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.СчетУчетаВРозницеПолучатель,
	|	ТаблицаЗапасы.КоррСчетУчета,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.КоррНоменклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.КоррХарактеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.КоррПартия,
	|	ТаблицаЗапасы.ЗаказПокупателя,
	|	ТаблицаЗапасы.КоррЗаказПокупателя,
	|	ТаблицаЗапасы.СодержаниеПроводки,
	|	ТаблицаЗапасы.СчетУчетаНаценкиПолучатель,
	|	ТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет,
	|	ТаблицаЗапасы.ПеремещениеВРозницу,
	|	ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет,
	|	ТаблицаЗапасы.СчетУчетаВРознице,
	|	ТаблицаЗапасы.СчетУчетаНаценки,
	|	ТаблицаЗапасы.КоррСчетУчета,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.СодержаниеПроводки";
	
	РезультатЗапроса = Запрос.Выполнить();

	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", РезультатЗапроса.Выгрузить());
	
	// Установка исключительной блокировки контролируемых остатков запасов.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаЗапасы.Организация КАК Организация,
	|		ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|		ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|		ТаблицаЗапасы.Характеристика КАК Характеристика,
	|		ТаблицаЗапасы.Партия КАК Партия,
	|		ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|	ГДЕ
	|		ТаблицаЗапасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		И (НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаЗапасы.Организация,
	|		ТаблицаЗапасы.СтруктурнаяЕдиница,
	|		ТаблицаЗапасы.СчетУчета,
	|		ТаблицаЗапасы.Номенклатура,
	|		ТаблицаЗапасы.Характеристика,
	|		ТаблицаЗапасы.Партия,
	|		ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|	ГДЕ
	|		(НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)) КАК ТаблицаЗапасы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.ЗаказПокупателя";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Запасы");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;

	Для каждого КолонкаРезультатЗапроса из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков запасов по стоимости.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.Организация КАК Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|		СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				&МоментКонтроля,
	|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						ТаблицаЗапасы.Организация,
	|						ТаблицаЗапасы.СтруктурнаяЕдиница,
	|						ТаблицаЗапасы.СчетУчета,
	|						ТаблицаЗапасы.Номенклатура,
	|						ТаблицаЗапасы.Характеристика,
	|						ТаблицаЗапасы.Партия,
	|						ТаблицаЗапасы.ЗаказПокупателя
	|					ИЗ
	|						ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|					ГДЕ
	|						ТаблицаЗапасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))) КАК ЗапасыОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗапасыОстатки.Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета,
	|		ЗапасыОстатки.Номенклатура,
	|		ЗапасыОстатки.Характеристика,
	|		ЗапасыОстатки.Партия,
	|		ЗапасыОстатки.ЗаказПокупателя
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗапасыОстатки.Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета,
	|		ЗапасыОстатки.Номенклатура,
	|		ЗапасыОстатки.Характеристика,
	|		ЗапасыОстатки.Партия,
	|		ЗапасыОстатки.ЗаказПокупателя,
	|		СУММА(ЗапасыОстатки.КоличествоОстаток),
	|		СУММА(ЗапасыОстатки.СуммаОстаток)
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				&МоментКонтроля,
	|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						ТаблицаЗапасы.Организация,
	|						ТаблицаЗапасы.СтруктурнаяЕдиница,
	|						ТаблицаЗапасы.СчетУчета,
	|						ТаблицаЗапасы.Номенклатура,
	|						ТаблицаЗапасы.Характеристика,
	|						ТаблицаЗапасы.Партия,
	|						ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					ИЗ
	|						ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы)) КАК ЗапасыОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗапасыОстатки.Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета,
	|		ЗапасыОстатки.Номенклатура,
	|		ЗапасыОстатки.Характеристика,
	|		ЗапасыОстатки.Партия,
	|		ЗапасыОстатки.ЗаказПокупателя
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗапасы.Организация,
	|		ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|		ДвиженияДокументаЗапасы.СчетУчета,
	|		ДвиженияДокументаЗапасы.Номенклатура,
	|		ДвиженияДокументаЗапасы.Характеристика,
	|		ДвиженияДокументаЗапасы.Партия,
	|		ДвиженияДокументаЗапасы.ЗаказПокупателя,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|	ГДЕ
	|		ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		И ДвиженияДокументаЗапасы.Период <= &ПериодКонтроля) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.ЗаказПокупателя";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПеремещениеЗапасов);
	Запрос.УстановитьПараметр("МоментКонтроля", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаЗапасыОстатки = РезультатЗапроса.Выгрузить();
	ТаблицаЗапасыОстатки.Индексы.Добавить("Организация,СтруктурнаяЕдиница,СчетУчета,Номенклатура,Характеристика,Партия,ЗаказПокупателя");
	
	ВременнаяТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.СкопироватьКолонки();
	
	ПустаяСтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	ПустойСчетУчета = ПланыСчетов.Управленческий.ПустаяСсылка();
	ПустаяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
	ПустаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	ПустаяПартия = Справочники.ПартииНоменклатуры.ПустаяСсылка();
    ПустойЗаказПокупателя = Документы.ЗаказПокупателя.ПустаяСсылка();

	ПеремещениеВРозницуСуммовойУчет = Ложь;
	ВозвратИзРозницыСуммовойУчет = Ложь;	
	
	Для н = 0 По СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Количество() - 1 Цикл
		
		СтрокаТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы[н];
		
		Если СтрокаТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет Тогда
			ВозвратИзРозницыСуммовойУчет = Истина;			
			
			СтрокаТаблицыРасход = ВременнаяТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасы);
			СтрокаТаблицыРасход.СтруктурнаяЕдиница = СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница;
			СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = Неопределено;
			СтрокаТаблицыРасход.КоррСчетУчета = Неопределено;
			СтрокаТаблицыРасход.КоррНоменклатура = Неопределено;
			СтрокаТаблицыРасход.КоррХарактеристика = Неопределено;
			СтрокаТаблицыРасход.КоррПартия = Неопределено;
			СтрокаТаблицыРасход.КоррЗаказПокупателя = Неопределено;
			СтрокаТаблицыРасход.ФиксированнаяСтоимость = Истина;

			СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
			СтрокаТаблицаУправленческий.Сумма = СтрокаТаблицаЗапасы.Сумма;
			СтрокаТаблицаУправленческий.СчетДт = СтрокаТаблицаЗапасы.СчетУчетаВРознице;
			
			Продолжить;
		КонецЕсли;
		
		СтруктураДляПоиска = Новый Структура;
		СтруктураДляПоиска.Вставить("Организация", СтрокаТаблицаЗапасы.Организация);
		СтруктураДляПоиска.Вставить("СтруктурнаяЕдиница", СтрокаТаблицаЗапасы.СтруктурнаяЕдиница);
		СтруктураДляПоиска.Вставить("СчетУчета", СтрокаТаблицаЗапасы.СчетУчета);
		СтруктураДляПоиска.Вставить("Номенклатура", СтрокаТаблицаЗапасы.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", СтрокаТаблицаЗапасы.Характеристика);
		СтруктураДляПоиска.Вставить("Партия", СтрокаТаблицаЗапасы.Партия);
		
		КоличествоТребуетсяРезерв = СтрокаТаблицаЗапасы.Резерв;
		КоличествоТребуетсяСвободныйОстаток = СтрокаТаблицаЗапасы.Количество;
		
		Если КоличествоТребуетсяРезерв > 0 Тогда
			
			КоличествоТребуетсяСвободныйОстаток = КоличествоТребуетсяСвободныйОстаток - КоличествоТребуетсяРезерв;
			
			СтруктураДляПоиска.Вставить("ЗаказПокупателя", СтрокаТаблицаЗапасы.ЗаказПокупателя);
			
			МассивСтрокОстатков = ТаблицаЗапасыОстатки.НайтиСтроки(СтруктураДляПоиска);
			
			КоличествоОстаток = 0;
			СуммаОстаток = 0;
			
			Если МассивСтрокОстатков.Количество() > 0 Тогда
				КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток;
				СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток;
			КонецЕсли;
			
			Если КоличествоОстаток > 0 И КоличествоОстаток > КоличествоТребуетсяРезерв Тогда

				СуммаКСписанию = Окр(СуммаОстаток * КоличествоТребуетсяРезерв / КоличествоОстаток , 2, 1);

				МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоТребуетсяРезерв;
				МассивСтрокОстатков[0].СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток - СуммаКСписанию;

			ИначеЕсли КоличествоОстаток = КоличествоТребуетсяРезерв Тогда

				СуммаКСписанию = СуммаОстаток;

				МассивСтрокОстатков[0].КоличествоОстаток = 0;
				МассивСтрокОстатков[0].СуммаОстаток = 0;

			Иначе
				СуммаКСписанию = 0;	
			КонецЕсли;
	
			// Расход.
			СтрокаТаблицыРасход = ВременнаяТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасы);
			
			СтрокаТаблицыРасход.Сумма = СуммаКСписанию;
			СтрокаТаблицыРасход.Количество = КоличествоТребуетсяРезерв;
			
			Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.Расходы
			 ИЛИ СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
				
				СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
				СтрокаТаблицыРасход.КоррСчетУчета = ПустойСчетУчета;
				СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
				СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
				СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				СтрокаТаблицыРасход.ДокументПродажи = ДокументСсылкаПеремещениеЗапасов;
				СтрокаТаблицыРасход.ЗаказПродажи = СтрокаТаблицаЗапасы.ЗаказПокупателя;
				
			Иначе
				
				Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
				   И СтрокаТаблицаЗапасы.ПеремещениеВРозницу Тогда
				   СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				ИначеЕсли НЕ СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
				   	    И НЕ СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
						СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				КонецЕсли;
				
				Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
					СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
					СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
					СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				КонецЕсли;
				
			КонецЕсли;
			
			Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации Тогда
				
				СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
				СтрокаТаблицыРасход.КоррСчетУчета = ПустойСчетУчета;
				СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
				СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
				СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				СтрокаТаблицыРасход.ФиксированнаяСтоимость = Истина;
				
			КонецЕсли;
			
			// Сформируем проводки.
			Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
				
				СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
				СтрокаТаблицаУправленческий.Сумма = СуммаКСписанию;
				
				Если СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
					СтрокаТаблицаУправленческий.СчетДт = СтрокаТаблицаЗапасы.СчетУчетаВРозницеПолучатель;
				КонецЕсли;
																
			КонецЕсли;
			
			Если СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
				
				СтрокаТаблицаСуммовойУчетВРознице = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСуммовойУчетВРознице.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаСуммовойУчетВРознице, СтрокаТаблицаЗапасы);
				СтрокаТаблицаСуммовойУчетВРознице.Себестоимость = СуммаКСписанию;
				СтрокаТаблицаСуммовойУчетВРознице.ВидДвижения = ВидДвиженияНакопления.Приход;
				СтрокаТаблицаСуммовойУчетВРознице.Валюта = СтрокаТаблицаЗапасы.ВалютаЦеныПолучатель;
				СтрокаТаблицаСуммовойУчетВРознице.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
				СтрокаТаблицаСуммовойУчетВРознице.Организация = СтрокаТаблицаЗапасы.Организация;
				СтрокаТаблицаСуммовойУчетВРознице.Сумма = 0;
				СтрокаТаблицаСуммовойУчетВРознице.СуммаВал = 0;
				
				ПеремещениеВРозницуСуммовойУчет = Истина;
							
			ИначеЕсли Окр(СуммаКСписанию, 2, 1) <> 0 ИЛИ КоличествоТребуетсяРезерв > 0 Тогда // Приход.
				
				Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.Расходы Тогда
					
					СтрокаТаблицыОборот = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыОборот, СтрокаТаблицаЗапасы);
					СтрокаТаблицыОборот.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
					СтрокаТаблицыОборот.НаправлениеДеятельности = СтрокаТаблицаЗапасы.КоррНаправлениеДеятельности;
					СтрокаТаблицыОборот.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
					СтрокаТаблицыОборот.СуммаРасходов = СуммаКСписанию;
					СтрокаТаблицыОборот.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					СтрокаТаблицыОборот.Аналитика = СтрокаТаблицаЗапасы.Номенклатура;
					
				Иначе // Это затраты.
					
					СтрокаТаблицыПриход = ВременнаяТаблицаЗапасы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
					
					СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
					
					СтрокаТаблицыПриход.Организация = СтрокаТаблицаЗапасы.Организация;
					СтрокаТаблицыПриход.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
					СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					СтрокаТаблицыПриход.Номенклатура = СтрокаТаблицаЗапасы.КоррНоменклатура;
					СтрокаТаблицыПриход.Характеристика = СтрокаТаблицаЗапасы.КоррХарактеристика;
					СтрокаТаблицыПриход.Партия = СтрокаТаблицаЗапасы.КоррПартия;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
					И НЕ СтрокаТаблицаЗапасы.ПеремещениеВРозницу Тогда
						СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;						
					ИначеЕсли СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
						СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
						СтрокаТаблицыПриход.Номенклатура = ПустаяНоменклатура;
						СтрокаТаблицыПриход.Характеристика = ПустаяХарактеристика;
						СтрокаТаблицыПриход.Партия = ПустаяПартия;
					Иначе
						СтрокаТаблицыПриход.ЗаказПокупателя = ПустойЗаказПокупателя;
					КонецЕсли;
					
					СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасы.СтруктурнаяЕдиница;
					СтрокаТаблицыПриход.КоррСчетУчета = СтрокаТаблицаЗапасы.СчетУчета;
					СтрокаТаблицыПриход.КоррНоменклатура = СтрокаТаблицаЗапасы.Номенклатура;
					СтрокаТаблицыПриход.КоррХарактеристика = СтрокаТаблицаЗапасы.Характеристика;
					СтрокаТаблицыПриход.КоррПартия = СтрокаТаблицаЗапасы.Партия;
					СтрокаТаблицыПриход.КоррЗаказПокупателя = СтрокаТаблицаЗапасы.ЗаказПокупателя;
					
					СтрокаТаблицыПриход.Сумма = СуммаКСписанию;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию
					 ИЛИ СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы Тогда
						СтрокаТаблицыПриход.Количество = 0;
					Иначе
						СтрокаТаблицыПриход.Количество = КоличествоТребуетсяРезерв;
					КонецЕсли;
					
					СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации Тогда
						
						СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
						СтрокаТаблицыПриход.КоррСчетУчета = ПустойСчетУчета;
						СтрокаТаблицыПриход.КоррНоменклатура = ПустаяНоменклатура;
						СтрокаТаблицыПриход.КоррХарактеристика = ПустаяХарактеристика;
						СтрокаТаблицыПриход.КоррПартия = ПустаяПартия;
						СтрокаТаблицыПриход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
						СтрокаТаблицыПриход.ФиксированнаяСтоимость = Истина;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если КоличествоТребуетсяСвободныйОстаток > 0 Тогда
			
			СтруктураДляПоиска.Вставить("ЗаказПокупателя", ПустойЗаказПокупателя);
			
			МассивСтрокОстатков = ТаблицаЗапасыОстатки.НайтиСтроки(СтруктураДляПоиска);
			
			КоличествоОстаток = 0;
			СуммаОстаток = 0;
			
			Если МассивСтрокОстатков.Количество() > 0 Тогда
				КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток;
				СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток;
			КонецЕсли;
			
			Если КоличествоОстаток > 0 И КоличествоОстаток > КоличествоТребуетсяСвободныйОстаток Тогда

				СуммаКСписанию = Окр(СуммаОстаток * КоличествоТребуетсяСвободныйОстаток / КоличествоОстаток , 2, 1);

				МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоТребуетсяСвободныйОстаток;
				МассивСтрокОстатков[0].СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток - СуммаКСписанию;

			ИначеЕсли КоличествоОстаток = КоличествоТребуетсяСвободныйОстаток Тогда

				СуммаКСписанию = СуммаОстаток;

				МассивСтрокОстатков[0].КоличествоОстаток = 0;
				МассивСтрокОстатков[0].СуммаОстаток = 0;

			Иначе
				СуммаКСписанию = 0;	
			КонецЕсли;
	
			// Расход.
			СтрокаТаблицыРасход = ВременнаяТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасы);
			
			СтрокаТаблицыРасход.Сумма = СуммаКСписанию;
			СтрокаТаблицыРасход.Количество = КоличествоТребуетсяСвободныйОстаток;
			СтрокаТаблицыРасход.ЗаказПокупателя = ПустойЗаказПокупателя;
			
			Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.Расходы
			 ИЛИ СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
				
				СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
				СтрокаТаблицыРасход.КоррСчетУчета = ПустойСчетУчета;
				СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
				СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
				СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				СтрокаТаблицыРасход.ДокументПродажи = ДокументСсылкаПеремещениеЗапасов;
				СтрокаТаблицыРасход.ЗаказПродажи = СтрокаТаблицаЗапасы.ЗаказПокупателя;
				
			Иначе
				Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
				   И СтрокаТаблицаЗапасы.ПеремещениеВРозницу Тогда
				   СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				ИначеЕсли НЕ СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
				   	   И НЕ СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
						СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				КонецЕсли;
				
				Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
					СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
					СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
					СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				КонецЕсли;
				
			КонецЕсли;
			
			Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации Тогда
				
				СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
				СтрокаТаблицыРасход.КоррСчетУчета = ПустойСчетУчета;
				СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
				СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
				СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				СтрокаТаблицыРасход.ФиксированнаяСтоимость = Истина;
				
			КонецЕсли;
			
			// Сформируем проводки.
			Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
				
				СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
				СтрокаТаблицаУправленческий.Сумма = СуммаКСписанию;
				
				Если СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
					СтрокаТаблицаУправленческий.СчетДт = СтрокаТаблицаЗапасы.СчетУчетаВРозницеПолучатель;					
				КонецЕсли;
				
			КонецЕсли;
                        			
			Если СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
				
				СтрокаТаблицаСуммовойУчетВРознице = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСуммовойУчетВРознице.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаСуммовойУчетВРознице, СтрокаТаблицаЗапасы);
				СтрокаТаблицаСуммовойУчетВРознице.ВидДвижения = ВидДвиженияНакопления.Приход;
				СтрокаТаблицаСуммовойУчетВРознице.Себестоимость = СуммаКСписанию;
				СтрокаТаблицаСуммовойУчетВРознице.Валюта = СтрокаТаблицаЗапасы.ВалютаЦеныПолучатель;
				СтрокаТаблицаСуммовойУчетВРознице.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
				СтрокаТаблицаСуммовойУчетВРознице.Сумма = 0;
				СтрокаТаблицаСуммовойУчетВРознице.СуммаВал = 0;
				
				ПеремещениеВРозницуСуммовойУчет = Истина;
			
			ИначеЕсли Окр(СуммаКСписанию, 2, 1) <> 0 ИЛИ КоличествоТребуетсяСвободныйОстаток > 0 Тогда // Приход
				
				Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.Расходы Тогда
					
					СтрокаТаблицыОборот = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыОборот, СтрокаТаблицаЗапасы);
					СтрокаТаблицыОборот.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
					СтрокаТаблицыОборот.НаправлениеДеятельности = СтрокаТаблицаЗапасы.КоррНаправлениеДеятельности;
					СтрокаТаблицыОборот.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
					СтрокаТаблицыОборот.СуммаРасходов = СуммаКСписанию;
					СтрокаТаблицыОборот.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					СтрокаТаблицыОборот.Аналитика = СтрокаТаблицаЗапасы.Номенклатура;
					
				Иначе // Это затраты.
					
					СтрокаТаблицыПриход = ВременнаяТаблицаЗапасы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
					
					СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
					
					СтрокаТаблицыПриход.Организация = СтрокаТаблицаЗапасы.Организация;
					СтрокаТаблицыПриход.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
					СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					СтрокаТаблицыПриход.Номенклатура = СтрокаТаблицаЗапасы.КоррНоменклатура;
					СтрокаТаблицыПриход.Характеристика = СтрокаТаблицаЗапасы.КоррХарактеристика;
					СтрокаТаблицыПриход.Партия = СтрокаТаблицаЗапасы.КоррПартия;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
					И НЕ СтрокаТаблицаЗапасы.ПеремещениеВРозницу Тогда
						СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
					ИначеЕсли СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
						СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
						СтрокаТаблицыПриход.Номенклатура = ПустаяНоменклатура;
						СтрокаТаблицыПриход.Характеристика = ПустаяХарактеристика;
						СтрокаТаблицыПриход.Партия = ПустаяПартия;
					Иначе
						СтрокаТаблицыПриход.ЗаказПокупателя = ПустойЗаказПокупателя;
					КонецЕсли;
					
					СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасы.СтруктурнаяЕдиница;
					СтрокаТаблицыПриход.КоррСчетУчета = СтрокаТаблицаЗапасы.СчетУчета;
					СтрокаТаблицыПриход.КоррНоменклатура = СтрокаТаблицаЗапасы.Номенклатура;
					СтрокаТаблицыПриход.КоррХарактеристика = СтрокаТаблицаЗапасы.Характеристика;
					СтрокаТаблицыПриход.КоррПартия = СтрокаТаблицаЗапасы.Партия;
					СтрокаТаблицыПриход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
					
					СтрокаТаблицыПриход.Сумма = СуммаКСписанию;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию
					 ИЛИ СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы Тогда
						СтрокаТаблицыПриход.Количество = 0;
					Иначе
						СтрокаТаблицыПриход.Количество = КоличествоТребуетсяСвободныйОстаток;
					КонецЕсли;
					
					СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации Тогда
						
						СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
						СтрокаТаблицыПриход.КоррСчетУчета = ПустойСчетУчета;
						СтрокаТаблицыПриход.КоррНоменклатура = ПустаяНоменклатура;
						СтрокаТаблицыПриход.КоррХарактеристика = ПустаяХарактеристика;
						СтрокаТаблицыПриход.КоррПартия = ПустаяПартия;
						СтрокаТаблицыПриход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
						СтрокаТаблицыПриход.ФиксированнаяСтоимость = Истина;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Если это передача в эксплуатацию, то передаем по нулевой стоимости, а саму стоимость относим
		// на затраты подразделения-получателя.
		Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию Тогда
		   
		   // Нужно добавить тогда приход только по количеству с пустой корреспонденции,
		   // для корректного учета в количественном выражении.
		   СтрокаТаблицыПриход = ВременнаяТаблицаЗапасы.Добавить();
		   ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
		   
		   СтрокаТаблицыПриход.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
		   
		   СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
		   
		   СтрокаТаблицыПриход.ЗаказПокупателя = ПустойЗаказПокупателя;
		  		   
		   СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
		   СтрокаТаблицыПриход.КоррСчетУчета = ПустойСчетУчета;
		   СтрокаТаблицыПриход.КоррНоменклатура = ПустаяНоменклатура;
		   СтрокаТаблицыПриход.КоррХарактеристика = ПустаяХарактеристика;
		   СтрокаТаблицыПриход.КоррПартия = ПустаяПартия;
		   СтрокаТаблицыПриход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
		   
		   СтрокаТаблицыПриход.Сумма = 0;
		   СтрокаТаблицыПриход.ФиксированнаяСтоимость = Истина;
		   
		КонецЕсли;
			
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы = ВременнаяТаблицаЗапасы;
	
	// Торговая наценка в случае розницы (суммовой учет).
	Если ПеремещениеВРозницуСуммовойУчет
	 ИЛИ ВозвратИзРозницыСуммовойУчет Тогда
		
		СуммаСебестоимость = ВременнаяТаблицаЗапасы.Итог("Сумма");
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ЕСТЬNULL(ВременнаяТаблицаСуммовойУчетВРознице.Сумма, 0)) КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаСуммовойУчетВРознице КАК ВременнаяТаблицаСуммовойУчетВРознице";
		
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			СуммаВПродажныхЦенах = ВыборкаРезультатаЗапроса.Сумма;			
		Иначе
			СуммаВПродажныхЦенах = 0;
		КонецЕсли;
		
		СуммаНаценка = СуммаВПродажныхЦенах - СуммаСебестоимость;
		
		Если СуммаНаценка <> 0 Тогда
			
			Если ВременнаяТаблицаЗапасы.Количество() > 0 Тогда
				СтрокаТаблицы = ВременнаяТаблицаЗапасы[0];
			ИначеЕсли СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСуммовойУчетВРознице.Количество() > 0 Тогда
				СтрокаТаблицы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСуммовойУчетВРознице[0];
			Иначе
				СтрокаТаблицы = Неопределено;
			КонецЕсли;
			
			Если СтрокаТаблицы <> Неопределено Тогда
				СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицы);
				СтрокаТаблицаУправленческий.СчетДт = ?(ПеремещениеВРозницуСуммовойУчет, СтрокаТаблицы.СчетУчетаВРозницеПолучатель, СтрокаТаблицы.СчетУчетаВРознице);
				СтрокаТаблицаУправленческий.СчетКт = ?(ПеремещениеВРозницуСуммовойУчет, СтрокаТаблицы.СчетУчетаНаценкиПолучатель, СтрокаТаблицы.СчетУчетаНаценки);
				СтрокаТаблицаУправленческий.СценарийПланирования = Справочники.СценарииПланирования.Фактический;
				СтрокаТаблицаУправленческий.Содержание = НСтр("ru='Торговая наценка'");
				СтрокаТаблицаУправленческий.Сумма = СуммаНаценка;
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;		
	
КонецПроцедуры // СформироватьТаблицаЗапасов()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыНаСкладах(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Ячейка КАК Ячейка,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	(НЕ ТаблицаЗапасы.ОрдерныйСклад)
	|	И (НЕ ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет)
	|	И (НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррЯчейка,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.Период < ТаблицаЗапасы.ДатаОбновленияНаРелиз_1_2_1
	|	И (НЕ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы))
	|	И (НЕ ТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет)
	|	И (НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррЯчейка,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	(НЕ ТаблицаЗапасы.КоррОрдерныйСклад)
	|	И ТаблицаЗапасы.Период >= ТаблицаЗапасы.ДатаОбновленияНаРелиз_1_2_1
	|	И (НЕ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы))
	|	И (НЕ ТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет)
	|	И (НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)";
    		
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыНаСкладах()

Процедура СформироватьТаблицаЗапасыВРазрезеГТД(СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыНаСкладах.НомерСтроки) КАК НомерСтроки
	|	,Выбор Когда ТаблицаЗапасыНаСкладах.ВидОперации = Значение(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации) Тогда ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) Иначе ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) Конец КАК ВидДвижения
	|	,ТаблицаЗапасыНаСкладах.Период КАК Период
	|	,ТаблицаЗапасыНаСкладах.Организация КАК Организация
	|	,ТаблицаЗапасыНаСкладах.Номенклатура КАК Номенклатура
	|	,ТаблицаЗапасыНаСкладах.Характеристика КАК Характеристика
	|	,ТаблицаЗапасыНаСкладах.Партия КАК Партия
	|	,ТаблицаЗапасыНаСкладах.НомерГТД КАК НомерГТД
	|	,ТаблицаЗапасыНаСкладах.СтранаПроисхождения КАК СтранаПроисхождения
	|	,СУММА(ТаблицаЗапасыНаСкладах.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасыНаСкладах
	|ГДЕ
	|	ТаблицаЗапасыНаСкладах.СтранаПроисхождения <> Значение(Справочник.СтраныМира.Россия)
	|	И ТаблицаЗапасыНаСкладах.СтранаПроисхождения <> Значение(Справочник.СтраныМира.ПустаяССылка)
	|	И ТаблицаЗапасыНаСкладах.НомерГТД <> Значение(Справочник.НомераГТД.ПустаяССылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Выбор Когда ТаблицаЗапасыНаСкладах.ВидОперации = Значение(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации) Тогда ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) Иначе ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) Конец
	|	,ТаблицаЗапасыНаСкладах.Период
	|	,ТаблицаЗапасыНаСкладах.Организация
	|	,ТаблицаЗапасыНаСкладах.Номенклатура
	|	,ТаблицаЗапасыНаСкладах.Характеристика
	|	,ТаблицаЗапасыНаСкладах.Партия
	|	,ТаблицаЗапасыНаСкладах.НомерГТД
	|	,ТаблицаЗапасыНаСкладах.СтранаПроисхождения";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыВРазрезеГТД", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыКРасходуСоСкладов(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.ОрдерныйСклад
	|	И (НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКРасходуСоСкладов", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыКРасходуСоСкладов()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыКПоступлениюНаСклады(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.КоррОрдерныйСклад = ИСТИНА
	|	И ((НЕ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы))
	|			ИЛИ (НЕ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.Период < ТаблицаЗапасы.ДатаОбновленияНаРелиз_1_2_1
	|	И ТаблицаЗапасы.КоррОрдерныйСклад = ИСТИНА
	|	И ((НЕ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы))
	|			ИЛИ (НЕ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию)))";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКПоступлениюНаСклады", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыКПоступлениюНаСклады()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходы(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК СтруктурнаяЕдиница,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК Аналитика,
	|	&КурсоваяРазница КАК СодержаниеПроводки,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДоходов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ КАК СуммаРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницСуммовойУчетВРознице КАК ТаблицаДокумента";
		
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСуммовойУчетВРознице(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПеремещениеЗапасов);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ПеремещениеВРозницу", НСтр("ru = 'Перемещение в розницу'"));
	Запрос.УстановитьПараметр("ПеремещениеВРознице", НСтр("ru = 'Перемещение в рознице'"));
	Запрос.УстановитьПараметр("ВозвратИзРозницы", НСтр("ru = 'Возврат из розницы'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.ВидДвижения КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.РозничныйВидЦен КАК РозничныйВидЦен,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.Валюта КАК Валюта,
	|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
	|	ТаблицаДокумента.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.СуммаВал КАК СуммаВал,
	|	ТаблицаДокумента.Сумма КАК СуммаДляОстатка,
	|	ТаблицаДокумента.СуммаВал КАК СуммаВалДляОстатка,
	|	ТаблицаДокумента.Себестоимость КАК Себестоимость,
	|	ТаблицаДокумента.СодержаниеПроводки КАК СодержаниеПроводки
	|ПОМЕСТИТЬ ВременнаяТаблицаСуммовойУчетВРознице
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокумента.Период КАК Дата,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|		ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|		ТаблицаДокумента.Организация КАК Организация,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА ТаблицаДокумента.РозничныйВидЦен
	|			ИНАЧЕ ТаблицаДокумента.РозничныйВидЦенПолучатель
	|		КОНЕЦ КАК РозничныйВидЦен,
	|		ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|		ТаблицаДокумента.Характеристика КАК Характеристика,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА ТаблицаДокумента.СтруктурнаяЕдиница
	|			ИНАЧЕ ТаблицаДокумента.КоррСтруктурнаяЕдиница
	|		КОНЕЦ КАК СтруктурнаяЕдиница,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА ТаблицаДокумента.ВалютаЦены
	|			ИНАЧЕ ТаблицаДокумента.ВалютаЦеныПолучатель
	|		КОНЕЦ КАК Валюта,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА ТаблицаДокумента.СчетУчетаВРознице
	|			ИНАЧЕ ТаблицаДокумента.СчетУчетаВРозницеПолучатель
	|		КОНЕЦ КАК СчетУчета,
	|		ТаблицаДокумента.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)))
	|			ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатурыПолучательСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалютыПолучатель.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалютыПолучатель.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыПолучательСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК Сумма,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)))
	|			ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатурыПолучательСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыПолучательСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаВал,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)))
	|			ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатурыПолучательСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалютыПолучатель.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалютыПолучатель.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыПолучательСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммДляОстатка,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)))
	|			ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатурыПолучательСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыПолучательСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаВалДляОстатка,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -ТаблицаДокумента.Себестоимость
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Себестоимость,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА &ВозвратИзРозницы
	|			ИНАЧЕ &ПеремещениеВРозницу
	|		КОНЕЦ КАК СодержаниеПроводки
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаЗапасы.РозничныйВидЦенПолучатель,
	|							ВременнаяТаблицаЗапасы.Номенклатура,
	|							ВременнаяТаблицаЗапасы.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаЗапасы)) КАК ЦеныНоменклатурыПолучательСрезПоследних
	|			ПО ТаблицаДокумента.Номенклатура = ЦеныНоменклатурыПолучательСрезПоследних.Номенклатура
	|				И ТаблицаДокумента.РозничныйВидЦенПолучатель = ЦеныНоменклатурыПолучательСрезПоследних.ВидЦен
	|				И ТаблицаДокумента.Характеристика = ЦеныНоменклатурыПолучательСрезПоследних.Характеристика
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаЗапасы.РозничныйВидЦен,
	|							ВременнаяТаблицаЗапасы.Номенклатура,
	|							ВременнаяТаблицаЗапасы.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаЗапасы)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО ТаблицаДокумента.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				И ТаблицаДокумента.РозничныйВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦен
	|				И ТаблицаДокумента.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|					&МоментВремени,
	|					Валюта В
	|						(ВЫБРАТЬ
	|							Константы.ВалютаУчета
	|						ИЗ
	|							Константы КАК Константы)) КАК КурсыУпрВалюты
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыЦенВалютыПолучатель
	|			ПО ТаблицаДокумента.ВалютаЦеныПолучатель = КурсыЦенВалютыПолучатель.Валюта
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыЦенВалюты
	|			ПО ТаблицаДокумента.ВалютаЦены = КурсыЦенВалюты.Валюта
	|	ГДЕ
	|		(ТаблицаДокумента.ПеремещениеВРозницуСуммовойУчет
	|				ИЛИ ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокумента.Период,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаДокумента.Организация,
	|		ТаблицаДокумента.РозничныйВидЦен,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаДокумента.СтруктурнаяЕдиница,
	|		ТаблицаДокумента.ВалютаЦены,
	|		ТаблицаДокумента.СчетУчетаВРознице,
	|		ТаблицаДокумента.ЗаказПокупателя,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		-СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		-СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		ТаблицаДокумента.Себестоимость,
	|		&ПеремещениеВРознице
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаЗапасы.РозничныйВидЦен,
	|							ВременнаяТаблицаЗапасы.Номенклатура,
	|							ВременнаяТаблицаЗапасы.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаЗапасы)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО ТаблицаДокумента.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				И ТаблицаДокумента.РозничныйВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦен
	|				И ТаблицаДокумента.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|					&МоментВремени,
	|					Валюта В
	|						(ВЫБРАТЬ
	|							Константы.ВалютаУчета
	|						ИЗ
	|							Константы КАК Константы)) КАК КурсыУпрВалюты
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыЦенВалюты
	|			ПО ТаблицаДокумента.ВалютаЦены = КурсыЦенВалюты.Валюта
	|	ГДЕ
	|		ТаблицаДокумента.ПеремещениеВРозницеСуммовойУчет
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаДокумента.Организация,
	|		ТаблицаДокумента.РозничныйВидЦен,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаДокумента.СтруктурнаяЕдиница,
	|		ТаблицаДокумента.ВалютаЦены,
	|		ТаблицаДокумента.СчетУчетаВРознице,
	|		ТаблицаДокумента.ЗаказПокупателя,
	|		ТаблицаДокумента.Себестоимость
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокумента.Период,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаДокумента.Организация,
	|		ТаблицаДокумента.РозничныйВидЦенПолучатель,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаДокумента.КоррСтруктурнаяЕдиница,
	|		ТаблицаДокумента.ВалютаЦеныПолучатель,
	|		ТаблицаДокумента.СчетУчетаВРозницеПолучатель,
	|		ТаблицаДокумента.ЗаказПокупателя,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыЦенВалютыПолучатель.Кратность / (КурсыЦенВалютыПолучатель.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыЦенВалютыПолучатель.Кратность / (КурсыЦенВалютыПолучатель.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		ТаблицаДокумента.Себестоимость,
	|		&ПеремещениеВРознице
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаЗапасы.РозничныйВидЦен,
	|							ВременнаяТаблицаЗапасы.Номенклатура,
	|							ВременнаяТаблицаЗапасы.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаЗапасы)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО ТаблицаДокумента.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				И ТаблицаДокумента.РозничныйВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦен
	|				И ТаблицаДокумента.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|					&МоментВремени,
	|					Валюта В
	|						(ВЫБРАТЬ
	|							Константы.ВалютаУчета
	|						ИЗ
	|							Константы КАК Константы)) КАК КурсыУпрВалюты
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыЦенВалюты
	|			ПО ТаблицаДокумента.ВалютаЦены = КурсыЦенВалюты.Валюта
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыЦенВалютыПолучатель
	|			ПО ТаблицаДокумента.ВалютаЦеныПолучатель = КурсыЦенВалютыПолучатель.Валюта
	|	ГДЕ
	|		ТаблицаДокумента.ПеремещениеВРозницеСуммовойУчет
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаДокумента.Организация,
	|		ТаблицаДокумента.РозничныйВидЦенПолучатель,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаДокумента.КоррСтруктурнаяЕдиница,
	|		ТаблицаДокумента.ВалютаЦеныПолучатель,
	|		ТаблицаДокумента.СчетУчетаВРозницеПолучатель,
	|		ТаблицаДокумента.ЗаказПокупателя,
	|		ТаблицаДокумента.Себестоимость) КАК ТаблицаДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтруктурнаяЕдиница,
	|	Валюта,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаСуммовойУчетВРознице.Организация КАК Организация,
	|	ВременнаяТаблицаСуммовойУчетВРознице.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаСуммовойУчетВРознице.Валюта КАК Валюта
	|ИЗ
	|	ВременнаяТаблицаСуммовойУчетВРознице КАК ВременнаяТаблицаСуммовойУчетВРознице";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СуммовойУчетВРознице");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = УправлениеНебольшойФирмойСервер.ПолучитьТекстЗапросаКурсовыеРазницыСуммовойУчетВРознице(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСуммовойУчетВРознице", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаУправленческий(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	0 КАК СуммаВалДт,
	|	0 КАК СуммаВалКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ КАК Сумма,
	|	&КурсоваяРазница КАК Содержание
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницСуммовойУчетВРознице КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаУправленческий", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаУправленческий()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеЗапасовЗапасы.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ПеремещениеЗапасовЗапасы.Ссылка.Дата КАК Период,
	|	ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации КАК ВидОперации,
	|	ПеремещениеЗапасовЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|				И ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПеремещениеВРозницуСуммовойУчет,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|				И ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПеремещениеВРозницу,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|				И ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВозвратИзРозницыСуммовойУчет,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|				И ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПеремещениеВРозницеСуммовойУчет,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.СчетУчетаВРознице КАК СчетУчетаВРознице,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.СчетУчетаНаценки КАК СчетУчетаНаценки,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.РозничныйВидЦен КАК РозничныйВидЦен,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.РозничныйВидЦен.ВалютаЦены КАК ВалютаЦены,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.СчетУчетаВРознице КАК СчетУчетаВРозницеПолучатель,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.СчетУчетаНаценки КАК СчетУчетаНаценкиПолучатель,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен КАК РозничныйВидЦенПолучатель,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен.ВалютаЦены КАК ВалютаЦеныПолучатель,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад КАК ОрдерныйСклад,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ОрдерныйСклад КАК КоррОрдерныйСклад,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СчетЗатрат.ТипСчета КАК ТипСчетаЗатрат,
	|	ПеремещениеЗапасовЗапасы.Ссылка.НаправлениеДеятельности КАК КоррНаправлениеДеятельности,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель КАК КоррСтруктурнаяЕдиница,
	|	ПеремещениеЗапасовЗапасы.Ссылка.Ячейка КАК Ячейка,
	|	ПеремещениеЗапасовЗапасы.Ссылка.ЯчейкаПолучатель КАК КоррЯчейка,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|			ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|					ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|								ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|								ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|							ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|						ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ВЫБОР
	|					КОГДА ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|							ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|							ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|						ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|									ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|									ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|								ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|							ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Ссылка.СчетЗатрат
	|	КОНЕЦ КАК КоррСчетУчета,
	|	ПеремещениеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПеремещениеЗапасовЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПеремещениеЗапасовЗапасы.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК КоррНоменклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ПеремещениеЗапасовЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ВЫБОР
	|					КОГДА &ИспользоватьХарактеристики
	|						ТОГДА ПеремещениеЗапасовЗапасы.Характеристика
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК КоррХарактеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ПеремещениеЗапасовЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ВЫБОР
	|					КОГДА &ИспользоватьПартии
	|						ТОГДА ПеремещениеЗапасовЗапасы.Партия
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК КоррПартия,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|			ТОГДА ПеремещениеЗапасовЗапасы.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|			ТОГДА ПеремещениеЗапасовЗапасы.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК КоррЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ПеремещениеЗапасовЗапасы.Количество
	|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Количество * ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|						ТОГДА ПеремещениеЗапасовЗапасы.Резерв
	|					ИНАЧЕ ПеремещениеЗапасовЗапасы.Резерв * ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Резерв,
	|	0 КАК Сумма,
	|	ПеремещениеЗапасовЗапасы.Сумма КАК Себестоимость,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ВЫБОР
	|					КОГДА ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|							ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|							ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|						ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|									ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|									ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|								ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|							ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Ссылка.СчетЗатрат
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|			ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|					ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|								ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|								ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|							ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|						ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетКт,
	|	&ПеремещениеЗапасов КАК Содержание,
	|	&ПеремещениеЗапасов КАК СодержаниеПроводки,
	|	ПеремещениеЗапасовЗапасы.Сумма КАК СуммаВозвратВал,
	|	&ДатаОбновленияНаРелиз_1_2_1 КАК ДатаОбновленияНаРелиз_1_2_1
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|ГДЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеЗапасовСерийныеНомера.КлючСвязи,
	|	ПеремещениеЗапасовСерийныеНомера.СерийныйНомер
	|ПОМЕСТИТЬ ВременнаяТаблицаСерийныеНомера
	|ИЗ
	|	Документ.ПеремещениеЗапасов.СерийныеНомера КАК ПеремещениеЗапасовСерийныеНомера
	|ГДЕ
	|	ПеремещениеЗапасовСерийныеНомера.Ссылка = &Ссылка
	|	И &ИспользоватьСерийныеНомера
	|	И НЕ ПеремещениеЗапасовСерийныеНомера.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПеремещениеЗапасов);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.Дляпроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	
	Запрос.УстановитьПараметр("ИспользоватьСерийныеНомера", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерийныеНомера);
	
	// Временно: изменение движений по ордерному складу.
	Запрос.УстановитьПараметр("ДатаОбновленияНаРелиз_1_2_1", Константы.ДатаОбновленияНаРелиз_1_2_1.Получить());
		
	Запрос.УстановитьПараметр("ПеремещениеЗапасов", НСтр("ru = 'Перемещение запасов'"));
	
	МассивРезультатов = Запрос.Выполнить();
		
	// Формирование проводок документа.
	СформироватьТаблицаЗапасыНаСкладах(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыВРазрезеГТД(СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыКРасходуСоСкладов(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыКПоступлениюНаСклады(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСуммовойУчетВРознице(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходы(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	
	// Серийные номера
	СформироватьТаблицаСерийныеНомера(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);	
	
	СформироватьТаблицаУправленческий(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
		
	// Расчет стоимости списания запасов.
	СформироватьТаблицаЗапасы(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаПеремещениеЗапасов, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если НЕ УправлениеНебольшойФирмойСервер.ВыполнитьКонтрольОстатков() Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы "ДвиженияЗапасыНаСкладахИзменение", "ДвиженияЗапасыИзменение"
	// содержат записи, необходимо выполнить контроль реализации товаров.
	
	Если СтруктураВременныеТаблицы.ДвиженияЗапасыНаСкладахИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияСуммовойУчетВРозницеИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияСерийныеНомераИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыВРазрезеГТДИзменение
		Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыНаСкладахИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияЗапасыНаСкладахИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК ЯчейкаПредставление,
		|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыНаСкладахИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия, Ячейка) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыНаСкладахИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыНаСкладахИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК Ячейка
		|					ИЗ
		|						ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение)) КАК ЗапасыНаСкладахОстатки
		|		ПО ДвиженияЗапасыНаСкладахИзменение.Организация = ЗапасыНаСкладахОстатки.Организация
		|			И ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыНаСкладахИзменение.Номенклатура = ЗапасыНаСкладахОстатки.Номенклатура
		|			И ДвиженияЗапасыНаСкладахИзменение.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
		|			И ДвиженияЗапасыНаСкладахИзменение.Партия = ЗапасыНаСкладахОстатки.Партия
		|			И ДвиженияЗапасыНаСкладахИзменение.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
		|			И (ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияЗапасыИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияЗапасыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияЗапасыИзменение.СчетУчета КАК СчетУчетаПредставление,
		|	ДвиженияЗапасыИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияЗапасыИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияЗапасыИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияЗапасыИзменение.ЗаказПокупателя КАК ЗаказПокупателяПредставление,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.СуммаОстаток, 0) КАК СуммаОстатокЗапасы
		|ИЗ
		|	ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыИзменение.СчетУчета КАК СчетУчета,
		|						ДвиженияЗапасыИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыИзменение.ЗаказПокупателя КАК ЗаказПокупателя
		|					ИЗ
		|						ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение)) КАК ЗапасыОстатки
		|		ПО ДвиженияЗапасыИзменение.Организация = ЗапасыОстатки.Организация
		|			И ДвиженияЗапасыИзменение.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыИзменение.СчетУчета = ЗапасыОстатки.СчетУчета
		|			И ДвиженияЗапасыИзменение.Номенклатура = ЗапасыОстатки.Номенклатура
		|			И ДвиженияЗапасыИзменение.Характеристика = ЗапасыОстатки.Характеристика
		|			И ДвиженияЗапасыИзменение.Партия = ЗапасыОстатки.Партия
		|			И ДвиженияЗапасыИзменение.ЗаказПокупателя = ЗапасыОстатки.ЗаказПокупателя
		|			И (ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) < 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияСуммовойУчетВРозницеИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияСуммовойУчетВРозницеИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница.РозничныйВидЦен.ВалютаЦены КАК ВалютаПредставление,
		|	ЕСТЬNULL(СуммовойУчетВРозницеОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалИзменение + ЕСТЬNULL(СуммовойУчетВРозницеОстатки.СуммаВалОстаток, 0) КАК ОстатокВРознице,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СебестоимостьПередЗаписью КАК СебестоимостьПередЗаписью,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СебестоимостьПриЗаписи КАК СебестоимостьПриЗаписи,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СебестоимостьИзменение КАК СебестоимостьИзменение
		|ИЗ
		|	ДвиженияСуммовойУчетВРозницеИзменение КАК ДвиженияСуммовойУчетВРозницеИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СуммовойУчетВРознице.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница) В
		|					(ВЫБРАТЬ
		|						ДвиженияСуммовойУчетВРозницеИзменение.Организация КАК Организация,
		|						ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
		|					ИЗ
		|						ДвиженияСуммовойУчетВРозницеИзменение КАК ДвиженияСуммовойУчетВРозницеИзменение)) КАК СуммовойУчетВРозницеОстатки
		|		ПО ДвиженияСуммовойУчетВРозницеИзменение.Организация = СуммовойУчетВРозницеОстатки.Организация
		|			И ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница = СуммовойУчетВРозницеОстатки.СтруктурнаяЕдиница
		|			И (ЕСТЬNULL(СуммовойУчетВРозницеОстатки.СуммаВалОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияСерийныеНомераИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияСерийныеНомераИзменение.СерийныйНомер КАК СерийныйНомерПредставление,
		|	ДвиженияСерийныеНомераИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияСерийныеНомераИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияСерийныеНомераИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияСерийныеНомераИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияСерийныеНомераИзменение.Ячейка КАК ЯчейкаПредставление,
		|	СерийныеНомераОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	СерийныеНомераОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияСерийныеНомераИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(СерийныеНомераОстатки.КоличествоОстаток, 0) КАК ОстатокСерийныеНомера,
		|	ЕСТЬNULL(СерийныеНомераОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокСерийныеНомера
		|ИЗ
		|	ДвиженияСерийныеНомераИзменение КАК ДвиженияСерийныеНомераИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СерийныеНомера.Остатки(&МоментКонтроля, ) КАК СерийныеНомераОстатки
		|		ПО ДвиженияСерийныеНомераИзменение.СтруктурнаяЕдиница = СерийныеНомераОстатки.СтруктурнаяЕдиница
		|			И ДвиженияСерийныеНомераИзменение.Номенклатура = СерийныеНомераОстатки.Номенклатура
		|			И ДвиженияСерийныеНомераИзменение.Характеристика = СерийныеНомераОстатки.Характеристика
		|			И ДвиженияСерийныеНомераИзменение.Партия = СерийныеНомераОстатки.Партия
		|			И ДвиженияСерийныеНомераИзменение.СерийныйНомер = СерийныеНомераОстатки.СерийныйНомер
		|			И ДвиженияСерийныеНомераИзменение.Ячейка = СерийныеНомераОстатки.Ячейка
		|			И (ЕСТЬNULL(СерийныеНомераОстатки.КоличествоОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыВРазрезеГТДИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД) КАК НомерГТДПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения) КАК СтранаПроисхожденияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыВРазрезеГТДОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыВРазрезеГТДИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыВРазрезеГТД,
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыВРазрезеГТД
		|ИЗ
		|	ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Остатки(
		|				&МоментКонтроля,
		|				(Организация, НомерГТД, Номенклатура, Характеристика, Партия, СтранаПроисхождения) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД КАК НомерГТД,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения КАК СтранаПроисхождения
		|					ИЗ
		|						ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение)) КАК ЗапасыВРазрезеГТДОстатки
		|		ПО ДвиженияЗапасыВРазрезеГТДИзменение.Организация = ЗапасыВРазрезеГТДОстатки.Организация
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД = ЗапасыВРазрезеГТДОстатки.НомерГТД
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура = ЗапасыВРазрезеГТДОстатки.Номенклатура
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика = ЗапасыВРазрезеГТДОстатки.Характеристика
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Партия = ЗапасыВРазрезеГТДОстатки.Партия
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения = ЗапасыВРазрезеГТДОстатки.СтранаПроисхождения
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой()
			ИЛИ НЕ МассивРезультатов[1].Пустой()
			ИЛИ НЕ МассивРезультатов[2].Пустой()
			ИЛИ НЕ МассивРезультатов[3].Пустой()
			ИЛИ НЕ МассивРезультатов[4].Пустой()
			Тогда
			
			ДокументОбъектПеремещениеЗапасов = ДокументСсылкаПеремещениеЗапасов.ПолучитьОбъект()
			
		КонецЕсли;
		
		// Отрицательный остаток запасов на складе.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасыНаСкладах(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток учета запасов и затрат.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасы(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по суммовому учету в рознице.
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструСуммовойУчетВРознице(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток учета серийных номеров.
		Если НЕ МассивРезультатов[3].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомера(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по остаткам запасов в разрезе номеров ГТД.
		Если Константы.КонтролироватьОстаткиПоНомерамГТД.Получить()
			И НЕ МассивРезультатов[4].Пустой() Тогда
			
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасыВРазрезеГТД(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

#Область ИнтерфейсПечати

// Функция проверяет, проведен документ или нет, и вызывает процедуру печати
// документа.
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ПеремещениеЗапасов";

	ПервыйДокумент = Истина;
	
	Для каждого ТекущийДокумент Из МассивОбъектов Цикл
	
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
		
		Если ИмяМакета = "ПеремещениеЗапасов" Тогда
		
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ШапкаДокумента.Дата КАК ДатаДокумента,
			|	ШапкаДокумента.Организация КАК Организация,
			|	ШапкаДокумента.СтруктурнаяЕдиница КАК Отправитель,
			|	ШапкаДокумента.СтруктурнаяЕдиницаПолучатель КАК Получатель,
			|	ШапкаДокумента.Номер,
			|	ШапкаДокумента.Организация.Префикс КАК Префикс,
			|	ШапкаДокумента.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы КАК СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы,
			|	ШапкаДокумента.Отпустил КАК Отпустил,
			|	ШапкаДокумента.СерийныеНомера.(
			|		СерийныйНомер,
			|		КлючСвязи
			|	)
			|ИЗ
			|	Документ.ПеремещениеЗапасов КАК ШапкаДокумента
			|ГДЕ
			|	ШапкаДокумента.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПеремещениеЗапасов.НомерСтроки КАК НомерСтроки,
			|	ПеремещениеЗапасов.Номенклатура.НаименованиеПолное КАК Запас,
			|	ПеремещениеЗапасов.Номенклатура.Код КАК Код,
			|	ПеремещениеЗапасов.Номенклатура.Артикул КАК Артикул,
			|	ПеремещениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаХранения,
			|	ПеремещениеЗапасов.Количество КАК Количество,
			|	ПеремещениеЗапасов.Резерв КАК Резерв,
			|	ПеремещениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
			|	ПеремещениеЗапасов.Характеристика КАК Характеристика,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ПеремещениеЗапасов.Количество, 0) КАК Сумма,
			|	ПеремещениеЗапасов.КлючСвязи
			|ИЗ
			|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				&ДатаДокумента,
			|				Номенклатура В (&СписокНоменклатура)
			|					И Характеристика В (&СписокХарактеристика)
			|					И ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ПеремещениеЗапасов.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И ПеремещениеЗапасов.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
			|			И ПеремещениеЗапасов.Ссылка.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦен
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			Запрос.УстановитьПараметр("ВидЦен", ТекущийДокумент.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен);
			Запрос.УстановитьПараметр("ДатаДокумента", ТекущийДокумент.Дата);
			Запрос.УстановитьПараметр("СписокНоменклатура", ТекущийДокумент.Запасы.ВыгрузитьКолонку("Номенклатура"));
			Запрос.УстановитьПараметр("СписокХарактеристика", ТекущийДокумент.Запасы.ВыгрузитьКолонку("Характеристика"));
			
			МассивРезультатов = Запрос.ВыполнитьПакет();
			
			Шапка = МассивРезультатов[0].Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокСерийныеНомера = Шапка.СерийныеНомера.Выбрать();
			ВыборкаСтрокЗапасы = МассивРезультатов[1].Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеЗапасов_ПеремещениеЗапасов";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеЗапасов.ПФ_MXL_ПеремещениеЗапасов");
			
			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ТекстЗаголовка =
				"Перемещение запасов № "
			  + НомерДокумента
			  + " от "
			  + Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
			
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Если Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
			 ИЛИ Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыСЦенами");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Если Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
			 ИЛИ Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСЦенами");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			КонецЕсли;
			
			Количество = 0;
			Всего = 0;
			
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				
				СтрокаСерийныеНомера = РаботаССерийнымиНомерами.СтрокаСерийныеНомераИзВыборки(ВыборкаСтрокСерийныеНомера, ВыборкаСтрокЗапасы.КлючСвязи);
				ОбластьМакета.Параметры.Запас = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, 
					ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул, СтрокаСерийныеНомера);
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Количество = Количество + 1;
				Всего = Всего + ВыборкаСтрокЗапасы.Сумма;
				
			КонецЦикла;
			
			Если Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
			 ИЛИ Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ИтогоСЦенами");
				ОбластьМакета.Параметры.Всего = Всего;
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Итого");
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
			
			ЗначенияПараметров = Новый Структура;
			
			ФИООтпускПроизвел = "";
			УправлениеНебольшойФирмойСервер.ФамилияИнициалыПоНаименованию(ФИООтпускПроизвел, Строка(Шапка.Отпустил));
			ЗначенияПараметров.Вставить("ОтветственныйПредставление", ФИООтпускПроизвел);
			
			ОбластьМакета.Параметры.Заполнить(ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		ИначеЕсли ИмяМакета = "М11" Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПеремещениеЗапасов.Дата КАК ДатаДокумента,
			|	ПеремещениеЗапасов.Организация КАК Организация,
			|	ПеремещениеЗапасов.СтруктурнаяЕдиница КАК Отправитель,
			|	ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель КАК Получатель,
			|	ПеремещениеЗапасов.СчетЗатрат.Код КАК КоррСчет,
			|	ПеремещениеЗапасов.Номер,
			|	ПеремещениеЗапасов.Организация.Префикс КАК Префикс,
			|	ПеремещениеЗапасов.Отпустил,
			|	ПеремещениеЗапасов.ОтпустилДолжность
			|ИЗ
			|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПеремещениеЗапасов.НомерСтроки КАК НомерСтроки,
			|	ПеремещениеЗапасов.Номенклатура КАК СсылкаНоменклатура,
			|	ПеремещениеЗапасов.Характеристика КАК СсылкаХарактеристика,
			|	ПеремещениеЗапасов.Номенклатура.НаименованиеПолное КАК Запас,
			|	ПеремещениеЗапасов.Номенклатура.Артикул КАК Артикул,
			|	ПеремещениеЗапасов.Количество КАК Количество,
			|	ПеремещениеЗапасов.Резерв КАК Резерв,
			|	ПеремещениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
			|	ПеремещениеЗапасов.Характеристика,
			|	ПеремещениеЗапасов.ЕдиницаИзмерения.Наименование,
			|	ПеремещениеЗапасов.ЕдиницаИзмерения.Код,
			|	ПеремещениеЗапасов.Номенклатура.СчетУчетаЗапасов.Код КАК Счет,
			|	ПеремещениеЗапасов.Номенклатура.Код КАК НоменклатурныйНомер
			|ПОМЕСТИТЬ ТаблицаДокумента
			|ИЗ
			|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасов
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаДокумента.НомерСтроки,
			|	ТаблицаДокумента.СсылкаНоменклатура,
			|	ТаблицаДокумента.СсылкаХарактеристика,
			|	ТаблицаДокумента.Запас,
			|	ТаблицаДокумента.Артикул,
			|	ТаблицаДокумента.Количество,
			|	ТаблицаДокумента.Резерв,
			|	ТаблицаДокумента.ЗаказПокупателя,
			|	ТаблицаДокумента.Характеристика,
			|	ТаблицаДокумента.ЕдиницаИзмеренияНаименование,
			|	ТаблицаДокумента.ЕдиницаИзмеренияКод,
			|	ТаблицаДокумента.Счет,
			|	ТаблицаДокумента.НоменклатурныйНомер,
			|	ВЫБОР
			|		КОГДА &ВалютаВидЦен = НациональнаяВалюта.Значение
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность
			|	КОНЕЦ КАК Цена,
			|	ВЫБОР
			|		КОГДА &ВалютаВидЦен = НациональнаяВалюта.Значение
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество, 0)
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество, 0) * КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность
			|	КОНЕЦ КАК Сумма
			|ИЗ
			|	ТаблицаДокумента КАК ТаблицаДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				&ДатаДокумента,
			|				Актуальность
			|					И ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ТаблицаДокумента.СсылкаНоменклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И ТаблицаДокумента.СсылкаХарактеристика = ЦеныНоменклатурыСрезПоследних.Характеристика,
			|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, Валюта = &ВалютаВидЦен) КАК КурсыВалютСрезПоследних,
			|	Константа.НациональнаяВалюта КАК НациональнаяВалюта
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТаблицаДокумента.НомерСтроки";
			
			РозничныйВидДокумента = ТекущийДокумент.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен;
			
			Если НЕ ЗначениеЗаполнено(РозничныйВидДокумента) Тогда
				
				РозничныйВидДокумента = Справочники.ВидыЦен.Учетная;
				
			КонецЕсли;
			
			Запрос.УстановитьПараметр("ВидЦен", 			РозничныйВидДокумента);
			Запрос.УстановитьПараметр("ВалютаВидЦен", 		?(ЗначениеЗаполнено(РозничныйВидДокумента.ВалютаЦены), РозничныйВидДокумента.ВалютаЦены, Константы.НациональнаяВалюта.Получить()));
			Запрос.УстановитьПараметр("ДатаДокумента", 		ТекущийДокумент.Дата);
			
			МассивРезультатов = Запрос.ВыполнитьПакет();
			
			Шапка = МассивРезультатов[0].Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = МассивРезультатов[2].Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеЗапасов_ПеремещениеЗапасов_М11";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеЗапасов.ПФ_MXL_М11");
			
			СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
			
			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заголовок =
				"ТРЕБОВАНИЕ-НАКЛАДНАЯ № "
			  + НомерДокумента
			  + " от "
			  + Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
			
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ОбластьМакета.Параметры.КодОКПО                  = СведенияОбОрганизации.КодПоОКПО;
			ОбластьМакета.Параметры.ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации);
			ОбластьМакета.Параметры.ДатаСоставления          = Формат(Шапка.ДатаДокумента, "ДФ=dd.MM.yy");
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
			
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				ОбластьМакета.Параметры.Запас = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул);
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ЗначенияПараметров = Новый Структура;
			
			ФИООтпускПроизвел = "";
			УправлениеНебольшойФирмойСервер.ФамилияИнициалыПоНаименованию(ФИООтпускПроизвел, Строка(Шапка.Отпустил));
			ЗначенияПараметров.Вставить("ФИООтпускПроизвел", ФИООтпускПроизвел);
			ЗначенияПараметров.Вставить("ОтпускПроизвелДолжность", Шапка.ОтпустилДолжность);
			
			ОбластьМакета.Параметры.Заполнить(ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		ИначеЕсли ИмяМакета = "ТОРГ13" Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ШапкаДокумента.Дата КАК ДатаДокумента,
			|	ШапкаДокумента.Организация КАК Организация,
			|	ШапкаДокумента.СтруктурнаяЕдиница КАК Отправитель,
			|	ШапкаДокумента.СтруктурнаяЕдиницаПолучатель КАК Получатель,
			|	ШапкаДокумента.СчетЗатрат.Код КАК СубСчет,
			|	ШапкаДокумента.Номер КАК Номер,
			|	ШапкаДокумента.Организация.Префикс КАК Префикс,
			|	ШапкаДокумента.Отпустил КАК Отпустил,
			|	ШапкаДокумента.ОтпустилДолжность КАК ОтпустилДолжность
			|ИЗ
			|	Документ.ПеремещениеЗапасов КАК ШапкаДокумента
			|ГДЕ
			|	ШапкаДокумента.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПеремещениеЗапасов.НомерСтроки КАК НомерСтроки,
			|	ПеремещениеЗапасов.Номенклатура КАК СсылкаНоменклатура,
			|	ПеремещениеЗапасов.Характеристика КАК СсылкаХарактеристика,
			|	ПеремещениеЗапасов.Номенклатура.НаименованиеПолное КАК Запас,
			|	ПеремещениеЗапасов.Номенклатура.Артикул КАК Артикул,
			|	ПеремещениеЗапасов.Количество КАК Количество,
			|	ПеремещениеЗапасов.Резерв КАК Резерв,
			|	ПеремещениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
			|	ПеремещениеЗапасов.Характеристика КАК Характеристика,
			|	ПеремещениеЗапасов.Номенклатура.СчетУчетаЗапасов.Код КАК Счет,
			|	ПеремещениеЗапасов.Номенклатура.Код КАК ТоварКод,
			|	ПеремещениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ПеремещениеЗапасов.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
			|	ПеремещениеЗапасов.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
			|ПОМЕСТИТЬ ТаблицаДокумента
			|ИЗ
			|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасов
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СсылкаНоменклатура,
			|	СсылкаХарактеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаДокумента.НомерСтроки,
			|	ТаблицаДокумента.СсылкаНоменклатура,
			|	ТаблицаДокумента.СсылкаХарактеристика,
			|	ТаблицаДокумента.Запас,
			|	ТаблицаДокумента.Артикул,
			|	ТаблицаДокумента.Количество КАК КоличествоМест,
			|	ВЫБОР
			|		КОГДА ТаблицаДокумента.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|			ТОГДА ТаблицаДокумента.ЕдиницаИзмерения.Коэффициент
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК КоличествоВОдномМесте,
			|	ТаблицаДокумента.Резерв,
			|	ТаблицаДокумента.ЗаказПокупателя,
			|	ТаблицаДокумента.Характеристика,
			|	ТаблицаДокумента.Счет,
			|	ТаблицаДокумента.ТоварКод,
			|	ТаблицаДокумента.ЕдиницаИзмеренияНаименование,
			|	ТаблицаДокумента.ЕдиницаИзмеренияКодПоОКЕИ,
			|	ВЫБОР
			|		КОГДА &ВалютаВидЦен = НациональнаяВалюта.Значение
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность
			|	КОНЕЦ КАК Цена,
			|	ВЫБОР
			|		КОГДА &ВалютаВидЦен = НациональнаяВалюта.Значение
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество, 0)
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество, 0) * КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность
			|	КОНЕЦ КАК Сумма
			|ИЗ
			|	ТаблицаДокумента КАК ТаблицаДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				&ДатаДокумента,
			|				Актуальность
			|					И ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ТаблицаДокумента.СсылкаНоменклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И ТаблицаДокумента.СсылкаХарактеристика = ЦеныНоменклатурыСрезПоследних.Характеристика,
			|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, Валюта = &ВалютаВидЦен) КАК КурсыВалютСрезПоследних,
			|	Константа.НациональнаяВалюта КАК НациональнаяВалюта
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТаблицаДокумента.НомерСтроки";
			
			РозничныйВидДокумента = ТекущийДокумент.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен;
			
			Если НЕ ЗначениеЗаполнено(РозничныйВидДокумента) Тогда
				
				РозничныйВидДокумента = Справочники.ВидыЦен.Учетная;
				
			КонецЕсли;
			
			Запрос.УстановитьПараметр("ВидЦен", 			РозничныйВидДокумента);
			Запрос.УстановитьПараметр("ВалютаВидЦен", 		?(ЗначениеЗаполнено(РозничныйВидДокумента.ВалютаЦены), РозничныйВидДокумента.ВалютаЦены, Константы.НациональнаяВалюта.Получить()));
			Запрос.УстановитьПараметр("ДатаДокумента", 		ТекущийДокумент.Дата);
			
			МассивРезультатов = Запрос.ВыполнитьПакет();
			
			Шапка = МассивРезультатов[0].Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = МассивРезультатов[2].Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеЗапасов_ТОРГ13";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеЗапасов.ПФ_MXL_ТОРГ13");
			
			// Выводим общие реквизиты шапки
			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;
			
			СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
			ОбластьМакета         = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ОбластьМакета.Параметры.ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации);
			ОбластьМакета.Параметры.НомерДокумента           = НомерДокумента;
			ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
			ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			СтрокНаСтранице = 23;
			СтрокШапки      = 10;
			СтрокПодвала    = 9;
			НомерСтраницы   = 1;
			
			// Выводим заголовок таблицы
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			КоличествоСтрок = ВыборкаСтрокЗапасы.Количество();
			
			Если КоличествоСтрок = 1 Тогда
				ПереноситьПоследнююСтроку = 0;
			Иначе
				ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
				ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
				ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
			КонецЕсли;
			
			// инициализация итогов по странице
			ИтогКоличествоМестПоСтранице = 0;
			ИтогСуммыПоСтранице = 0;
			
			// инициализация итогов по документу
			ИтогоКоличество  = 0;
			ИтогоСумма = 0;
			
			Ном = 0;
			
			// Выводим многострочную часть докмента
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
				
				Ном = Ном + 1;
				
				//Начинаем новую страницу, если предыдущая строка была последней на странице
				//или пора переносить последнюю строку на последнюю страницу с подвалом.
				ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
				
				Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				 ИЛИ ((ПереноситьПоследнююСтроку = 1) И (Ном = КоличествоСтрок)) Тогда
					
					ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице = ИтогСуммыПоСтранице;
					
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					// инициализация итогов по странице
					ИтогКоличествоМестПоСтранице = 0;
					ИтогСуммыПоСтранице = 0;
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
					
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				КоличествоМест = ВыборкаСтрокЗапасы.КоличествоМест;
				ОбластьМакета.Параметры.ТоварНаименование = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
					ВыборкаСтрокЗапасы.Запас,
					ВыборкаСтрокЗапасы.Характеристика,
					ВыборкаСтрокЗапасы.Артикул);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				// Обновим итоги по странице
				ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + КоличествоМест;
				ИтогСуммыПоСтранице = ИтогСуммыПоСтранице + ВыборкаСтрокЗапасы.Сумма;
				
				// Обновим итогов по документу
				ИтогоКоличество  = ИтогоКоличество + КоличествоМест;
				ИтогоСумма = ИтогоСумма + ВыборкаСтрокЗапасы.Сумма;
				
			КонецЦикла;
			
			ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице = ИтогСуммыПоСтранице;
			
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// Выводим итоги по документу в целом
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.ИтогоКоличествоМест = ИтогоКоличество;
			ОбластьМакета.Параметры.ИтогоСумма = ИтогоСумма;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ЗначенияПараметров = Новый Структура;
			
			ФИООтпускПроизвел = "";
			УправлениеНебольшойФирмойСервер.ФамилияИнициалыПоНаименованию(ФИООтпускПроизвел, Строка(Шапка.Отпустил));
			ЗначенияПараметров.Вставить("ФИООтпускПроизвел", ФИООтпускПроизвел);
			ЗначенияПараметров.Вставить("ОтпускПроизвелДолжность", Шапка.ОтпустилДолжность);
			
			ОбластьМакета.Параметры.Заполнить(ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Зададим параметры макета
			ТабличныйДокумент.ПолеСверху = 0;
			ТабличныйДокумент.ПолеСлева  = 0;
			ТабличныйДокумент.ПолеСнизу  = 0;
			ТабличныйДокумент.ПолеСправа = 0;
			ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
		ИначеЕсли ИмяМакета = "МХ18" Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ПеремещениеЗапасов.Дата КАК ДатаДокумента,
			|	ПеремещениеЗапасов.Организация КАК Организация,
			|	ПеремещениеЗапасов.СтруктурнаяЕдиница КАК Отправитель,
			|	ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель КАК Получатель,
			|	ПеремещениеЗапасов.СчетЗатрат.Код КАК СубСчет,
			|	ПеремещениеЗапасов.Номер,
			|	ПеремещениеЗапасов.Организация.Префикс КАК Префикс,
			|	ПеремещениеЗапасов.Отпустил КАК Отпустил,
			|	ПеремещениеЗапасов.ОтпустилДолжность КАК ОтпустилДолжность,
			|	ПеремещениеЗапасов.Запасы.(
			|		НомерСтроки,
			|		Номенклатура.НаименованиеПолное КАК Запас,
			|		Номенклатура.Артикул КАК Артикул,
			|		Количество КАК КоличествоМест,
			|		Резерв КАК Резерв,
			|		ЗаказПокупателя КАК ЗаказПокупателя,
			|		Характеристика,
			|		ЕдиницаИзмерения.Наименование КАК ВидУпаковки,
			|		Номенклатура.СчетУчетаЗапасов.Код КАК Счет,
			|		Номенклатура.Код КАК ТоварКод,
			|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНаименование,
			|		Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
			|		ВЫБОР
			|			КОГДА ПеремещениеЗапасов.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				ТОГДА ПеремещениеЗапасов.Запасы.ЕдиницаИзмерения.Коэффициент
			|			ИНАЧЕ 1
			|		КОНЕЦ КАК КоличествоВОдномМесте
			|	)
			|ИЗ
			|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = Шапка.Запасы.Выгрузить();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеЗапасов_МХ18";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеЗапасов.ПФ_MXL_МХ18");
			
			// Выводим общие реквизиты шапки
			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;
			
			СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
			ОбластьМакета         = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ОбластьМакета.Параметры.ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации);
			ОбластьМакета.Параметры.НомерДокумента           = НомерДокумента;
			ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
			ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			СтрокНаСтранице = 23;
			СтрокШапки      = 10;
			СтрокПодвала    = 9;
			НомерСтраницы   = 1;
			
			// Выводим заголовок таблицы
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			КоличествоСтрок = ВыборкаСтрокЗапасы.Количество();
			
			Если КоличествоСтрок = 1 Тогда
				ПереноситьПоследнююСтроку = 0;
			Иначе
				ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
				ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
				ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
			КонецЕсли;
			
			// инициализация итогов по странице
			ИтогКоличествоМестПоСтранице = 0;
			
			// инициализация итогов по документу
			ИтогоКоличество  = 0;
			
			Ном = 0;
			
			// Выводим многострочную часть докмента
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			Для каждого СтрокаЗапасы Из ВыборкаСтрокЗапасы Цикл
				
				Ном = Ном + 1;
				
				//Начинаем новую страницу, если предыдущая строка была последней на странице
				//или пора переносить последнюю строку на последнюю страницу с подвалом.
				ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
				
				Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				 ИЛИ ((ПереноситьПоследнююСтроку = 1) И (Ном = КоличествоСтрок)) Тогда
					
					ОбластьИтоговПоСтранице.Параметры.ИтогМестНаСтранице = ИтогКоличествоМестПоСтранице;
					
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					// инициализация итогов по странице
					ИтогКоличествоМестПоСтранице = 0;
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
					
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(СтрокаЗапасы);
				КоличествоМест = СтрокаЗапасы.КоличествоМест;
				ОбластьМакета.Параметры.ТоварНаименование = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаЗапасы.Запас, СтрокаЗапасы.Характеристика, СтрокаЗапасы.Артикул);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				// Обновим итоги по странице
				ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + КоличествоМест;
				
				// Обновим итогов по документу
				ИтогоКоличество  = ИтогоКоличество  + КоличествоМест;
				
			КонецЦикла;
			
			ОбластьИтоговПоСтранице.Параметры.ИтогМестНаСтранице = ИтогКоличествоМестПоСтранице;
			
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// Выводим итоги по документу в целом
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.ИтогМест = ИтогоКоличество;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ЗначенияПараметров = Новый Структура;
			
			ФИООтпускПроизвел = "";
			УправлениеНебольшойФирмойСервер.ФамилияИнициалыПоНаименованию(ФИООтпускПроизвел, Строка(Шапка.Отпустил));
			ЗначенияПараметров.Вставить("ФИООтпускПроизвел", ФИООтпускПроизвел);
			ЗначенияПараметров.Вставить("ОтпускПроизвелДолжность", Шапка.ОтпустилДолжность);
			
			ОбластьМакета.Параметры.Заполнить(ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Зададим параметры макета
			ТабличныйДокумент.ПолеСверху = 0;
			ТабличныйДокумент.ПолеСлева  = 0;
			ТабличныйДокумент.ПолеСнизу  = 0;
			ТабличныйДокумент.ПолеСправа = 0;
			ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
		ИначеЕсли ИмяМакета = "БланкТоварногоНаполненияОтправитель" Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПеремещениеЗапасов.Дата КАК ДатаДокумента,
			|	ПеремещениеЗапасов.СтруктурнаяЕдиница КАК ПредставлениеСклада,
			|	ПеремещениеЗапасов.Ячейка КАК ПредставлениеЯчейки,
			|	ПеремещениеЗапасов.Номер,
			|	ПеремещениеЗапасов.Организация.Префикс КАК Префикс,
			|	ПеремещениеЗапасов.Запасы.(
			|		НомерСтроки КАК НомерСтроки,
			|		Номенклатура.Склад КАК Склад,
			|		Номенклатура.Ячейка КАК Ячейка,
			|		ВЫБОР
			|			КОГДА (ВЫРАЗИТЬ(ПеремещениеЗапасов.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(100))) = """"
			|				ТОГДА ПеремещениеЗапасов.Запасы.Номенклатура.Наименование
			|			ИНАЧЕ ПеремещениеЗапасов.Запасы.Номенклатура.НаименованиеПолное
			|		КОНЕЦ КАК Запас,
			|		Номенклатура.Артикул КАК Артикул,
			|		Номенклатура.Код КАК Код,
			|		ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
			|		Количество КАК Количество,
			|		Характеристика,
			|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
			|		КлючСвязи
			|	),
			|	ПеремещениеЗапасов.СерийныеНомера.(
			|		СерийныйНомер,
			|		КлючСвязи
			|	)
			|ИЗ
			|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();
			ВыборкаСтрокСерийныеНомера = Шапка.СерийныеНомера.Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеЗапасов_БланкТоварногоНаполнения";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеЗапасов.ПФ_MXL_БланкТоварногоНаполнения");
			
			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ТекстЗаголовка =
				"Перемещение запасов № "
			  + НомерДокумента
			  + " от "
			  + Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Склад");
			ОбластьМакета.Параметры.ПредставлениеСклада = Шапка.ПредставлениеСклада;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Если Константы.ФункциональнаяОпцияУчетПоЯчейкам.Получить() Тогда
				
				ОбластьМакета = Макет.ПолучитьОбласть("Ячейка");
				ОбластьМакета.Параметры.ПредставлениеЯчейки = Шапка.ПредставлениеЯчейки;
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("ВремяПечати");
			ОбластьМакета.Параметры.ВремяПечати =
				"Дата и время печати: "
			  + ТекущаяДата()
			  + ". Пользователь: "
			  + Пользователи.ТекущийПользователь();
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
				
				Если НЕ ВыборкаСтрокЗапасы.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас Тогда
					Продолжить;
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				
				СтрокаСерийныеНомера = РаботаССерийнымиНомерами.СтрокаСерийныеНомераИзВыборки(ВыборкаСтрокСерийныеНомера, ВыборкаСтрокЗапасы.КлючСвязи);
				ОбластьМакета.Параметры.Запас = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, 
					ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул, СтрокаСерийныеНомера);
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Итого");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		ИначеЕсли ИмяМакета = "БланкТоварногоНаполненияПолучатель" Тогда
			
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ПеремещениеЗапасов.Дата КАК ДатаДокумента,
			|	ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель КАК ПредставлениеСклада,
			|	ПеремещениеЗапасов.ЯчейкаПолучатель КАК ПредставлениеЯчейки,
			|	ПеремещениеЗапасов.Номер,
			|	ПеремещениеЗапасов.Организация.Префикс КАК Префикс,
			|	ПеремещениеЗапасов.Запасы.(
			|		НомерСтроки КАК НомерСтроки,
			|		Номенклатура.Склад КАК Склад,
			|		Номенклатура.Ячейка КАК Ячейка,
			|		ВЫБОР
			|			КОГДА (ВЫРАЗИТЬ(ПеремещениеЗапасов.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(100))) = """"
			|				ТОГДА ПеремещениеЗапасов.Запасы.Номенклатура.Наименование
			|			ИНАЧЕ ПеремещениеЗапасов.Запасы.Номенклатура.НаименованиеПолное
			|		КОНЕЦ КАК Запас,
			|		Номенклатура.Артикул КАК Артикул,
			|		Номенклатура.Код КАК Код,
			|		ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
			|		Количество КАК Количество,
			|		Характеристика,
			|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
			|		КлючСвязи
			|	),
			|	ПеремещениеЗапасов.СерийныеНомера.(
			|		СерийныйНомер,
			|		КлючСвязи
			|	)
			|ИЗ
			|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();
			ВыборкаСтрокСерийныеНомера = Шапка.СерийныеНомера.Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеЗапасов_БланкТоварногоНаполнения";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеЗапасов.ПФ_MXL_БланкТоварногоНаполнения");
			
			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ТекстЗаголовка =
				"Перемещение запасов № "
			  + НомерДокумента
			  + " от "
			  + Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Склад");
			ОбластьМакета.Параметры.ПредставлениеСклада = Шапка.ПредставлениеСклада;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Если Константы.ФункциональнаяОпцияУчетПоЯчейкам.Получить() Тогда
				
				ОбластьМакета = Макет.ПолучитьОбласть("Ячейка");
				ОбластьМакета.Параметры.ПредставлениеЯчейки = Шапка.ПредставлениеЯчейки;
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("ВремяПечати");
			ОбластьМакета.Параметры.ВремяПечати =
				"Дата и время печати: "
			  + ТекущаяДата()
			  + ". Пользователь: "
			  + Пользователи.ТекущийПользователь();
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
				
				Если НЕ ВыборкаСтрокЗапасы.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас Тогда
					Продолжить;
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);

				СтрокаСерийныеНомера = РаботаССерийнымиНомерами.СтрокаСерийныеНомераИзВыборки(ВыборкаСтрокСерийныеНомера, ВыборкаСтрокЗапасы.КлючСвязи);
				ОбластьМакета.Параметры.Запас = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, 
					ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул, СтрокаСерийныеНомера);

				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Итого");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М11", "М-11", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "М11"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ13") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ13", "ТОРГ-13", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ТОРГ13"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МХ18") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МХ18", "МХ-18", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "МХ18"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН", "Товарно-транспортная накладная", Обработки.ПечатьТТН.ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПеремещениеЗапасов") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПеремещениеЗапасов", "Перемещение запасов", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ПеремещениеЗапасов"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БланкТоварногоНаполненияОтправитель") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "БланкТоварногоНаполненияОтправитель", "Бланк товарного наполнения", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "БланкТоварногоНаполненияОтправитель"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БланкТоварногоНаполненияПолучатель") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "БланкТоварногоНаполненияПолучатель", "Бланк товарного наполнения", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "БланкТоварногоНаполненияПолучатель"));
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	УправлениеНебольшойФирмойСервер.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М11,ТОРГ13,МХ18,ТТН,ПеремещениеЗапасов";
	КомандаПечати.Представление = НСтр("ru = 'Настраиваемый комплект документов'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'М11 (Требование-накладная)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ13";
	КомандаПечати.Представление = НСтр("ru = 'ТОРГ13 (Накладная на внутреннее перемещение)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 7;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "МХ18";
	КомандаПечати.Представление = НСтр("ru = 'МХ18 (Накладная на передачу готовой продукции)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 10;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТТН";
	КомандаПечати.Представление = НСтр("ru = '1-Т (Товарно-транспортная накладная)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 14;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеНебольшойФирмойКлиент.ПечатьТН";
	КомандаПечати.Идентификатор = "ТН";
	КомандаПечати.Представление = НСтр("ru = 'Приложение №4 (Транспортная накладная)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 17;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПеремещениеЗапасов";
	КомандаПечати.Представление = НСтр("ru = 'Перемещение запасов'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 20;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БланкТоварногоНаполненияОтправитель";
	КомандаПечати.Представление = НСтр("ru = 'Бланк товарного наполнения (Отправитель)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 23;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БланкТоварногоНаполненияПолучатель";
	КомандаПечати.Представление = НСтр("ru = 'Бланк товарного наполнения (Получатель)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 26;
	
	Если ПравоДоступа("Просмотр", Метаданные.Обработки.ПечатьЭтикетокИЦенников)
		И ПолучитьФункциональнуюОпцию("ПечатьЭтикетокИЦенников") Тогда
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеНебольшойФирмойКлиент.ПечатьЭтикетокИЦенниковИзДокументов";
		КомандаПечати.Идентификатор = "ПечатьЭтикетокИзПеремещенияТоваров";
		КомандаПечати.Представление = НСтр("ru = 'Печать этикеток'");
		КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
		КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		КомандаПечати.Порядок = 29;
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеНебольшойФирмойКлиент.ПечатьЭтикетокИЦенниковИзДокументов";
		КомандаПечати.Идентификатор = "ПечатьЦенниковИзПеремещенияТоваров";
		КомандаПечати.Представление = НСтр("ru = 'Печать ценников'");
		КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
		КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		КомандаПечати.Порядок = 32;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаССерийнымиНомерами

// Формирует таблицу значений, содержащую данные для проведения по регистру СерийныеНомераГарантии.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСерийныеНомера(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Если ДокументСсылка.СерийныеНомера.Количество()=0 Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераГарантии", Новый ТаблицаЗначений);
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераОстатки", Новый ТаблицаЗначений);
		Возврат;
	КонецЕсли;                         
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаЗапасы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	СерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	ВременнаяТаблицаЗапасы.Организация КАК Организация,
	|	ВременнаяТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаЗапасы.Ячейка КАК Ячейка,
	|	ВременнаяТаблицаЗапасы.ВидОперации КАК ВидОперации,
	|	1 КАК Количество,
	|	ВременнаяТаблицаЗапасы.ОрдерныйСклад КАК ОрдерныйСклад
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерийныеНомера КАК СерийныеНомера
	|		ПО ВременнаяТаблицаЗапасы.КлючСвязи = СерийныеНомера.КлючСвязи
	|ГДЕ
	|	НЕ ВременнаяТаблицаЗапасы.ОрдерныйСклад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаЗапасы.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	СерийныеНомера.СерийныйНомер,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия,
	|	ВременнаяТаблицаЗапасы.Организация,
	|	ВременнаяТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ВременнаяТаблицаЗапасы.КоррЯчейка,
	|	ВременнаяТаблицаЗапасы.ВидОперации,
	|	1,
	|	ВременнаяТаблицаЗапасы.ОрдерныйСклад
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерийныеНомера КАК СерийныеНомера
	|		ПО ВременнаяТаблицаЗапасы.КлючСвязи = СерийныеНомера.КлючСвязи
	|ГДЕ
	|	НЕ ВременнаяТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|	И НЕ ВременнаяТаблицаЗапасы.КоррОрдерныйСклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременнаяТаблицаЗапасы.Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОперацииСерийныхНомеров.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОперацииСерийныхНомеров.Движение)
	|	КОНЕЦ КАК Операция,
	|	СерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерийныеНомера КАК СерийныеНомера
	|		ПО ВременнаяТаблицаЗапасы.КлючСвязи = СерийныеНомера.КлючСвязи";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераГарантии", МассивРезультатов[1].Выгрузить());
	Если СтруктураДополнительныеСвойства.УчетнаяПолитика.ОстаткиСерийныхНомеров Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераОстатки", МассивРезультатов[0].Выгрузить());
	Иначе
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераОстатки", Новый ТаблицаЗначений);
	КонецЕсли; 
	
КонецПроцедуры // СформироватьТаблицаСерийныеНомера()

#КонецОбласти

#КонецЕсли