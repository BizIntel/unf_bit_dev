
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Функция создает страницу на форме.
//
Функция СоздатьСтраницу(ИмяСтраницы, Заголовок, Родитель, ВидГруппыФормы)

	НовыйЭлемент = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Родитель);
	НовыйЭлемент.Вид                      = ВидГруппыФормы;
	НовыйЭлемент.Заголовок                = Заголовок;
	НовыйЭлемент.РастягиватьПоВертикали   = Истина;
	НовыйЭлемент.РастягиватьПоГоризонтали = Истина;

	Возврат НовыйЭлемент;

КонецФункции // СоздатьСтраницу()

&НаСервере
// Функция создает имя страницы регистра.
//
Функция ПолучитьИмяСтраницыРегистра(ИмяРегистра)

	Возврат "Страница" + ИмяРегистра;

КонецФункции // ПолучитьИмяСтраницыРегистра()

&НаСервере
// Процедура удаляет страницу на форме, соответствующую регистру.
//
Процедура УдалитьСтраницуРегистра(ИмяРегистра)

	Элементы.Удалить(Элементы.Найти(ПолучитьИмяСтраницыРегистра(ИмяРегистра)));

КонецПроцедуры // УдалитьСтраницуРегистра()

&НаСервере
// Процедура создает на форме таблицу для регистра.
//
Процедура СоздатьТаблицуРегистра(ИмяРегистра, Колонки, Родитель)

	ТаблицаФормы = Элементы.Добавить("ТаблицаДвижений" + ИмяРегистра, Тип("ТаблицаФормы"), Родитель);
	ТаблицаФормы.ПутьКДанным      = "Объект.Движения." + ИмяРегистра;
	Родитель.ПутьКДаннымЗаголовка = ТаблицаФормы.ПутьКДанным + ".КоличествоСтрок";

	Для Каждого Колонка Из Колонки Цикл

		Если Колонка.Значение <> Неопределено Тогда
			
			ПолеФормы = Элементы.Добавить(ТаблицаФормы.Имя + Колонка.Ключ, Тип("ПолеФормы"), ТаблицаФормы);
			ПолеФормы.ПутьКДанным = ТаблицаФормы.ПутьКДанным + "." + Колонка.Ключ;
			ПолеФормы.Заголовок   = Колонка.Значение;
			ПолеФормы.Вид         = ВидПоляФормы.ПолеВвода;
			
		КонецЕсли;
	
	КонецЦикла;

	ТаблицаФормы.УстановитьДействие("ПриНачалеРедактирования", "Подключаемый_ТаблицаПриНачалеРедактирования");
	
КонецПроцедуры // СоздатьТаблицуРегистра()

&НаСервере
// Процедура отрисовывает таблицу регистра на странице формы.
//
Процедура ПоказатьТаблицуРегистраНаСтранице(Знач СтрокаТЧ)

	Если Метаданные.РегистрыНакопления.Найти(СтрокаТЧ.Имя) <> Неопределено Тогда
		
		СтраницаРегистра = Элементы.НастройкаРегистровНакопления;
		ПредставлениеРегистра = Метаданные.РегистрыНакопления[СтрокаТЧ.Имя].Синоним;
		
		Регистр = Метаданные.РегистрыНакопления[СтрокаТЧ.Имя];
		
	ИначеЕсли Метаданные.РегистрыСведений.Найти(СтрокаТЧ.Имя) <> Неопределено Тогда
		
		СтраницаРегистра = Элементы.НастройкаРегистровСведений;
		ПредставлениеРегистра = Метаданные.РегистрыСведений[СтрокаТЧ.Имя].Синоним;
		
		Регистр = Метаданные.РегистрыСведений[СтрокаТЧ.Имя];
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураРегистра = Новый Структура;
	СтруктураРегистра.Вставить("Период");
	СтруктураРегистра.Вставить("НомерСтроки");
	СтруктураРегистра.Вставить("Активность");
	СтруктураРегистра.Вставить("ВидДвижения");
	
	Для каждого СтандартныйРеквизит из Регистр.СтандартныеРеквизиты Цикл
		Если СтруктураРегистра.Свойство(СтандартныйРеквизит.Имя) Тогда
			СтруктураРегистра[СтандартныйРеквизит.Имя] = СтандартныйРеквизит.Синоним;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Измерение из Регистр.Измерения Цикл
		СтруктураРегистра.Вставить(Измерение.Имя, Измерение.Синоним);
	КонецЦикла;
	
	Для каждого Ресурс из Регистр.Ресурсы Цикл
		СтруктураРегистра.Вставить(Ресурс.Имя, Ресурс.Синоним);
	КонецЦикла;
	
	Для каждого Реквизит из Регистр.Реквизиты Цикл
		СтруктураРегистра.Вставить(Реквизит.Имя, Реквизит.Синоним);
	КонецЦикла;
	
	СтраницаДляРегистра = СоздатьСтраницу(ПолучитьИмяСтраницыРегистра(СтрокаТЧ.Имя), ПредставлениеРегистра, СтраницаРегистра, 
										  ВидГруппыФормы.Страница);
	
	СоздатьТаблицуРегистра(СтрокаТЧ.Имя, СтруктураРегистра, СтраницаДляРегистра);
	
КонецПроцедуры // ПоказатьТаблицуРегистраНаСтранице()

&НаСервере
// Процедура отрисовывает регистры на форме.
//
Процедура ПоказатьРегистры(ТаблицаРегистров)

	Для Каждого Строка Из ТаблицаРегистров Цикл

		ПоказатьТаблицуРегистраНаСтранице(Строка);

	КонецЦикла;

КонецПроцедуры // ПоказатьРегистры()

&НаСервере
// Процедура служит для включения/исключение регистров из списка редактируемых.
//
Процедура ОбработатьИзменениеРегистров(СписокРегистров)

	Для Каждого Элемент Из СписокРегистров Цикл

		// Нужно добавить новый регистр.
		Если Элемент.Пометка Тогда

			СтрокаТЧ = Объект.ТаблицаРегистров.Добавить();
			СтрокаТЧ.Имя           = Элемент.Значение;

			ПоказатьТаблицуРегистраНаСтранице(СтрокаТЧ);

		Иначе

			Для Каждого Строка Из Объект.ТаблицаРегистров.НайтиСтроки(Новый Структура("Имя", Элемент.Значение)) Цикл
				Объект.ТаблицаРегистров.Удалить(Строка);
			КонецЦикла;

			Объект.Движения[Элемент.Значение].Очистить();
			УдалитьСтраницуРегистра(Элемент.Значение);

		КонецЕсли;

	КонецЦикла;

	Модифицированность = Истина;

КонецПроцедуры // ОбработатьИзменениеРегистров()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказатьРегистры(Объект.ТаблицаРегистров);
	
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	
	ОтчетыУНФ.ПриСозданииНаСервереФормыСвязанногоОбъекта(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаВажныеКоманды);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры // ПриСозданииНаСервере()

// Подключаемый обработчик события "ПриНачалеРедактирования" таблицы формы.
//
&НаКлиенте
Процедура Подключаемый_ТаблицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока
		И Элемент.ТекущиеДанные.Свойство("Валюта") Тогда
		
		Элемент.ТекущиеДанные.Валюта = ВалютаУчета;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
// Процедура вызывается при нажатии кнопки "Настройка состава регистров" 
// командной панели формы.
//
Процедура НастройкаСоставаРегистров(Команда)
	
	СписокИспользуемыхРегистров = Новый СписокЗначений;

	Для Каждого Строка Из Объект.ТаблицаРегистров Цикл
		СписокИспользуемыхРегистров.Добавить(Строка.Имя);
	КонецЦикла;

	Результат = Неопределено;


	ОткрытьФорму("Документ.КорректировкаРегистров.Форма.ФормаВыбораРегистра",
				Новый Структура("СписокИспользуемыхРегистров", СписокИспользуемыхРегистров),,,,, Новый ОписаниеОповещения("НастройкаСоставаРегистровЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСоставаРегистровЗавершение(Результат1, ДополнительныеПараметры) Экспорт
    
    Результат = Результат1;
    
    Если ТипЗнч(Результат) = Тип("СписокЗначений") Тогда
        
        ОбработатьИзменениеРегистров(Результат);
        
    КонецЕсли;

КонецПроцедуры // НастройкаСоставаРегистров()

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти


