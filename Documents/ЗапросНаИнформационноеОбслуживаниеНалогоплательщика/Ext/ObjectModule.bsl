#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
	
Процедура ОбработкаЗаполнения(СообщениеОснование)
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации");
		Организация = Модуль.ОрганизацияПоУмолчанию();
	КонецЕсли;

	ДатаОкончанияПериода = ТекущаяДатаСеанса();
	ДатаНачалаПериода = НачалоГода(ДатаОкончанияПериода);
	
	
	ФорматОтвета = ПоследнийИспользуемыйФорматОтвета();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ВидУслуги = Перечисления.ВидыУслугПриИОН.ПредставлениеАктовСверкиРасчетов
		ИЛИ ВидУслуги = Перечисления.ВидыУслугПриИОН.ПредставлениеВыпискиОперацийИзКарточкиРасчетыСБюджетом Тогда
		
		ИмяСписка = НСтр("ru = 'Налоги и сборы, по которым проводится сверка'");
		Для Каждого СтрокаТаблицы Из ЗапрашиваемыеНалоги Цикл
			Префикс = "ЗапрашиваемыеНалоги[" + Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";

			Если ЗначениеЗаполнено(СтрокаТаблицы.КБК) И СтрДлина(СтрокаТаблицы.КБК) <> 20 Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Введено некорректное значение в колонке ""КБК"" в строке %1
                          |
                          |Длина КБК должна быть равна 20 символам. 
                          |
                          |
                          |
                          |Некорректно заполнена колонка """"%1"""" в строке %2 списка """"%3"""".
                          |
                          |%4'''"),
					СтрокаТаблицы.НомерСтроки);
						
				Поле = Префикс + "КБК";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.ОКАТО)
				И (СтрДлина(СтрокаТаблицы.ОКАТО) <> 11 И СтрДлина(СтрокаТаблицы.ОКАТО) <> 8 
				ИЛИ Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаТаблицы.ОКАТО)) Тогда
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Введено некорректное значение в колонке ""ОКАТО или ОКТМО"" в строке %1.
                          |
                          |Код ОКАТО/ОКТМО должен иметь длину 8 или 11 и состоять только из цифр.'"),
					СтрокаТаблицы.НомерСтроки);
						
				Поле = Префикс + "ОКАТО";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			КонецЕсли;	
		КонецЦикла;
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ЗапрашиваемыеНалоги");
		МассивНепроверяемыхРеквизитов.Добавить("ЗапрашиваемыеНалоги.КБК");
		МассивНепроверяемыхРеквизитов.Добавить("ЗапрашиваемыеНалоги.ОКАТО");
	КонецЕсли;
	
	Если ВидУслуги = Перечисления.ВидыУслугПриИОН.ПредставлениеВыпискиОперацийИзКарточкиРасчетыСБюджетом Тогда
		Если Не ЗначениеЗаполнено(ДатаОкончанияПериода) Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДатаНачалаПериода");
			МассивНепроверяемыхРеквизитов.Добавить("ДатаОкончанияПериода");
			ТекстСообщения = НСтр("ru = 'Поле ""За год"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДатаОкончанияПериода",, Отказ);			
		КонецЕсли;		
	КонецЕсли;
	
	Если ВидУслуги = Перечисления.ВидыУслугПриИОН.ПредставлениеСправкиОСостоянииРасчетовСБюджетом Тогда
		Если Не ЗначениеЗаполнено(ДатаОкончанияПериода) Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДатаНачалаПериода");
			МассивНепроверяемыхРеквизитов.Добавить("ДатаОкончанияПериода");
			ТекстСообщения = НСтр("ru = 'Поле ""На дату"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДатаОкончанияПериода",, Отказ);			
		КонецЕсли;		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("ДополнительныйПараметр");
	Если ВидУслуги = Перечисления.ВидыУслугПриИОН.ПредставлениеПеречняБухгалтерскойИНалоговойОтчетности Тогда
		Если Не ЗначениеЗаполнено(ДополнительныйПараметр) Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Виды отчетов"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДополнительныйПараметр",, Отказ);			
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПоследнийИспользуемыйФорматОтвета()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЗапросНаИнформационноеОбслуживаниеНалогоплательщика.ФорматОтвета
	|ИЗ
	|	Документ.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика КАК ЗапросНаИнформационноеОбслуживаниеНалогоплательщика
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗапросНаИнформационноеОбслуживаниеНалогоплательщика.Дата УБЫВ";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Перечисления.ФорматОтветаНаЗапросИОН.RTF;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.ФорматОтвета;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли