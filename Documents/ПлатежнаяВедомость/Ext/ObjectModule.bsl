#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Сотрудники.Итог("СуммаПлатежа");
	
КонецПроцедуры // ПередЗаписью()

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура заполняет табличную часть Сотрудники остатками по начислениям.
//
Процедура ЗаполнитьПоОстаткамНаСервере() Экспорт
	
	Если ВидОперации = Перечисления.ВидыОперацийПлатежнаяВедомость.Зарплата Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасчетыСПерсоналомОстатки.Сотрудник,
		               |	СУММА(ВЫБОР
		               |			КОГДА &ВалютаРасчетов = &ВалютаДокумента
		               |				ТОГДА РасчетыСПерсоналомОстатки.СуммаВалОстаток
		               |			ИНАЧЕ ВЫРАЗИТЬ(РасчетыСПерсоналомОстатки.СуммаВалОстаток * &Курс / &Кратность КАК ЧИСЛО(15, 2))
		               |		КОНЕЦ) КАК СуммаПлатежа,
		               |	СУММА(РасчетыСПерсоналомОстатки.СуммаВалОстаток) КАК СуммаРасчетов
		               |ИЗ
		               |	РегистрНакопления.РасчетыСПерсоналом.Остатки(,
		               |			Организация = &Организация
		               |				И ПериодРегистрации = &ПериодРегистрации
		               |				И Валюта = &ВалютаРасчетов
		               |				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК РасчетыСПерсоналомОстатки
		               |ГДЕ
		               |	РасчетыСПерсоналомОстатки.СуммаВалОстаток > 0
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РасчетыСПерсоналомОстатки.Сотрудник
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	РасчетыСПерсоналомОстатки.Сотрудник.Наименование";
		
		Запрос.УстановитьПараметр("ПериодРегистрации", 	ПериодРегистрации);
		Запрос.УстановитьПараметр("Организация", 		УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация));
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
		Запрос.УстановитьПараметр("ВалютаРасчетов",		ВалютаРасчетов);
		Запрос.УстановитьПараметр("ВалютаДокумента",	ВалютаДокумента);
		Запрос.УстановитьПараметр("Курс",				Курс);
		Запрос.УстановитьПараметр("Кратность",			Кратность);
		
		Сотрудники.Загрузить(Запрос.Выполнить().Выгрузить());

	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПлатежнаяВедомость.Аванс Тогда	
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'При выплате аванса заполнение по остаткам не предусмотрено!'");
 		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет табличную часть Сотрудники по подразделению.
//
Процедура ЗаполнитьПоПодразделениюНаСервере() Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СотрудникиПодразделения.Сотрудник КАК Сотрудник,
	               |	СотрудникиПодразделения.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		СотрудникиСрезПоследних.Сотрудник КАК Сотрудник,
	               |		СотрудникиСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	               |	ИЗ
	               |		РегистрСведений.Сотрудники.СрезПоследних(
	               |				&ПериодРегистрации,
	               |				Организация = &Организация
	               |					И (СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	               |						ИЛИ СтруктурнаяЕдиница = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))) КАК СотрудникиСрезПоследних
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		Сотрудники.Сотрудник,
	               |		Сотрудники.СтруктурнаяЕдиница
	               |	ИЗ
	               |		РегистрСведений.Сотрудники КАК Сотрудники
	               |	ГДЕ
	               |		Сотрудники.Организация = &Организация
	               |		И Сотрудники.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	               |		И Сотрудники.Период МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)) КАК СотрудникиПодразделения
	               |ГДЕ
	               |	СотрудникиПодразделения.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СотрудникиПодразделения.Сотрудник,
	               |	СотрудникиПодразделения.СтруктурнаяЕдиница
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Сотрудник";
	
	Запрос.УстановитьПараметр("ПериодРегистрации", 		ПериодРегистрации);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",		СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("Организация", 			УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация));
	
	Сотрудники.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли