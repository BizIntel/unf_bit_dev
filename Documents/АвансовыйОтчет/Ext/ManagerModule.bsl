#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасы(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ОприходованиеЗапасов", НСтр("ru = 'Оприходование запасов'"));
	Запрос.УстановитьПараметр("ПрочиеРасходы", НСтр("ru = 'Прочие расходы'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Партия КАК Партия,
	|	ТаблицаДокумента.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ИСТИНА КАК ФиксированнаяСтоимость,
	|	&ОприходованиеЗапасов КАК СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.СтруктурнаяЕдиница,
	|	ТаблицаДокумента.СчетУчета,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	ТаблицаДокумента.Характеристика,
	|	ТаблицаДокумента.Партия,
	|	ТаблицаДокумента.ЗаказПокупателя,
	|	0,
	|	ТаблицаДокумента.Сумма,
	|	ИСТИНА,
	|	&ПрочиеРасходы
	|ИЗ
	|	ВременнаяТаблицаРасходы КАК ТаблицаДокумента
	|ГДЕ
	|	(ТаблицаДокумента.ТипСчетУчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.НезавершенноеПроизводство)
	|			ИЛИ ТаблицаДокумента.ТипСчетУчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.КосвенныеЗатраты))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", ТаблицаРезультата);
	
КонецПроцедуры // СформироватьТаблицаЗапасы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыНаСкладах(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АвансовыйОтчетЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	АвансовыйОтчетЗапасы.Период КАК Период,
	|	АвансовыйОтчетЗапасы.Организация КАК Организация,
	|	АвансовыйОтчетЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА &УчетПоЯчейкам
	|			ТОГДА АвансовыйОтчетЗапасы.Ячейка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Ячейка,
	|	АвансовыйОтчетЗапасы.Номенклатура КАК Номенклатура,
	|	АвансовыйОтчетЗапасы.Характеристика КАК Характеристика,
	|	АвансовыйОтчетЗапасы.Партия КАК Партия,
	|	АвансовыйОтчетЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК АвансовыйОтчетЗапасы
	|ГДЕ
	|	(НЕ АвансовыйОтчетЗапасы.ОрдерныйСклад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыНаСкладах()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыКПоступлениюНаСклады(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АвансовыйОтчетЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	АвансовыйОтчетЗапасы.Период КАК Период,
	|	АвансовыйОтчетЗапасы.Организация КАК Организация,
	|	АвансовыйОтчетЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	АвансовыйОтчетЗапасы.Номенклатура КАК Номенклатура,
	|	АвансовыйОтчетЗапасы.Характеристика КАК Характеристика,
	|	АвансовыйОтчетЗапасы.Партия КАК Партия,
	|	АвансовыйОтчетЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК АвансовыйОтчетЗапасы
	|ГДЕ
	|	АвансовыйОтчетЗапасы.ОрдерныйСклад
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКПоступлениюНаСклады", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыКПоступлениюНаСклады()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПодотчетниками(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаАвансовыйОтчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ПогашениеДолгаПодотчетника", НСтр("ru = 'Погашение долга подотчетника'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru = 'Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицыДокумента.НомерСтроки) КАК НомерСтроки,
	|	&ПогашениеДолгаПодотчетника КАК СодержаниеПроводки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицыДокумента.Период КАК Период,
	|	ТаблицыДокумента.Сотрудник КАК Сотрудник,
	|	ТаблицыДокумента.СчетРасчетовСПодотчетниками КАК СчетРасчетовСПодотчетниками,
	|	ТаблицыДокумента.СчетРасчетовПоПерерасходу КАК СчетУчета,
	|	ТаблицыДокумента.Валюта КАК Валюта,
	|	&Ссылка КАК Документ,
	|	СУММА(ТаблицыДокумента.Сумма) КАК Сумма,
	|	СУММА(ТаблицыДокумента.СуммаВал) КАК СуммаВал
	|ПОМЕСТИТЬ ВременнаяТаблицаРасходыПодотчетногоЛица
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|		ТаблицаДокумента.Период КАК Период,
	|		ТаблицаДокумента.Сотрудник КАК Сотрудник,
	|		ТаблицаДокумента.СчетРасчетовСПодотчетниками КАК СчетРасчетовСПодотчетниками,
	|		ТаблицаДокумента.СчетРасчетовПоПерерасходу КАК СчетРасчетовПоПерерасходу,
	|		ТаблицаДокумента.Валюта КАК Валюта,
	|		СУММА(ТаблицаДокумента.Сумма) КАК Сумма,
	|		СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВал
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.Сотрудник,
	|		ТаблицаДокумента.СчетРасчетовСПодотчетниками,
	|		ТаблицаДокумента.СчетРасчетовПоПерерасходу,
	|		ТаблицаДокумента.Валюта
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МАКСИМУМ(ТаблицаДокумента.НомерСтроки),
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.Сотрудник,
	|		ТаблицаДокумента.СчетРасчетовСПодотчетниками,
	|		ТаблицаДокумента.СчетРасчетовПоПерерасходу,
	|		ТаблицаДокумента.Валюта,
	|		СУММА(ТаблицаДокумента.Сумма),
	|		СУММА(ТаблицаДокумента.СуммаВал)
	|	ИЗ
	|		ВременнаяТаблицаРасходы КАК ТаблицаДокумента
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.Сотрудник,
	|		ТаблицаДокумента.СчетРасчетовСПодотчетниками,
	|		ТаблицаДокумента.СчетРасчетовПоПерерасходу,
	|		ТаблицаДокумента.Валюта
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МАКСИМУМ(ТаблицаДокумента.НомерСтроки),
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.Сотрудник,
	|		ТаблицаДокумента.СчетРасчетовСПодотчетниками,
	|		ТаблицаДокумента.СчетРасчетовПоПерерасходу,
	|		ТаблицаДокумента.ВалютаДокумента,
	|		СУММА(ТаблицаДокумента.Сумма),
	|		СУММА(ТаблицаДокумента.СуммаПлатежа)
	|	ИЗ
	|		ВременнаяТаблицаОплаты КАК ТаблицаДокумента
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.Сотрудник,
	|		ТаблицаДокумента.СчетРасчетовСПодотчетниками,
	|		ТаблицаДокумента.СчетРасчетовПоПерерасходу,
	|		ТаблицаДокумента.ВалютаДокумента) КАК ТаблицыДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицыДокумента.Период,
	|	ТаблицыДокумента.Сотрудник,
	|	ТаблицыДокумента.СчетРасчетовСПодотчетниками,
	|	ТаблицыДокумента.СчетРасчетовПоПерерасходу,
	|	ТаблицыДокумента.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	&ПогашениеДолгаПодотчетника КАК СодержаниеПроводки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	ТаблицаДокумента.Ссылка.Сотрудник КАК Сотрудник,
	|	ТаблицаДокумента.Ссылка.Сотрудник.СчетРасчетовСПодотчетниками КАК СчетУчета,
	|	ТаблицаДокумента.Документ.ВалютаДенежныхСредств КАК Валюта,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * КурсыВалютВыданныхАвансов.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютВыданныхАвансов.Кратность) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаВал,
	|	-СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * КурсыВалютВыданныхАвансов.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютВыданныхАвансов.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаДляОстатка,
	|	-СУММА(ТаблицаДокумента.Сумма) КАК СуммаВалДляОстатка
	|ПОМЕСТИТЬ ВременнаяТаблицаВыданныеАвансы
	|ИЗ
	|	Документ.АвансовыйОтчет.ВыданныеАвансы КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютВыданныхАвансов
	|		ПО ТаблицаДокумента.Документ.ВалютаДенежныхСредств = КурсыВалютВыданныхАвансов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						Константы.ВалютаУчета
	|					ИЗ
	|						Константы КАК Константы)) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.Ссылка.Дата,
	|	ТаблицаДокумента.Ссылка.Сотрудник,
	|	ТаблицаДокумента.Ссылка.Сотрудник.СчетРасчетовСПодотчетниками,
	|	ТаблицаДокумента.Документ.ВалютаДенежныхСредств
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Сотрудник,
	|	Валюта,
	|	Документ,
	|	СчетУчета";
	
	Запрос.ВыполнитьПакет();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с подотчетными лицами.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВременнаяТаблицаВыданныеАвансы.Организация КАК Организация,
	|	ВременнаяТаблицаВыданныеАвансы.Сотрудник КАК Сотрудник,
	|	ВременнаяТаблицаВыданныеАвансы.Валюта КАК Валюта,
	|	ВременнаяТаблицаВыданныеАвансы.Документ КАК Документ
	|ИЗ
	|	ВременнаяТаблицаВыданныеАвансы КАК ВременнаяТаблицаВыданныеАвансы";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПодотчетниками");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Сумма КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Сумма
	|ИЗ
	|	ВременнаяТаблицаРасходы КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаОплаты.Сумма
	|ИЗ
	|	ВременнаяТаблицаОплаты КАК ВременнаяТаблицаОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыОстатки.Организация КАК Организация,
	|	РасчетыОстатки.Сотрудник КАК Сотрудник,
	|	РасчетыОстатки.Валюта КАК Валюта,
	|	РасчетыОстатки.Документ КАК Документ,
	|	РасчетыОстатки.Сотрудник.СчетРасчетовСПодотчетниками КАК СчетУчета,
	|	СУММА(РасчетыОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(РасчетыОстатки.СуммаВалОстаток) КАК СуммаВалОстаток
	|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиПослеПроведения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВременнаяТаблица.Организация КАК Организация,
	|		ВременнаяТаблица.Сотрудник КАК Сотрудник,
	|		ВременнаяТаблица.Валюта КАК Валюта,
	|		ВременнаяТаблица.Документ КАК Документ,
	|		ВременнаяТаблица.СуммаДляОстатка КАК СуммаОстаток,
	|		ВременнаяТаблица.СуммаВалДляОстатка КАК СуммаВалОстаток
	|	ИЗ
	|		ВременнаяТаблицаВыданныеАвансы КАК ВременнаяТаблица
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаОстатки.Организация,
	|		ТаблицаОстатки.Сотрудник,
	|		ТаблицаОстатки.Валюта,
	|		ТаблицаОстатки.Документ,
	|		ЕСТЬNULL(ТаблицаОстатки.СуммаОстаток, 0),
	|		ЕСТЬNULL(ТаблицаОстатки.СуммаВалОстаток, 0)
	|	ИЗ
	|		РегистрНакопления.РасчетыСПодотчетниками.Остатки(
	|				&МоментВремени,
	|				(Организация, Сотрудник, Валюта, Документ) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВременнаяТаблицаВыданныеАвансы.Организация,
	|						ВременнаяТаблицаВыданныеАвансы.Сотрудник,
	|						ВременнаяТаблицаВыданныеАвансы.Валюта,
	|						ВременнаяТаблицаВыданныеАвансы.Документ
	|					ИЗ
	|						ВременнаяТаблицаВыданныеАвансы)) КАК ТаблицаОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокумента.Организация,
	|		ДвиженияДокумента.Сотрудник,
	|		ДвиженияДокумента.Валюта,
	|		ДвиженияДокумента.Документ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокумента.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокумента.Сумма, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокумента.Сумма, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокумента.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокумента.СуммаВал, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокумента.СуммаВал, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РасчетыСПодотчетниками КАК ДвиженияДокумента
	|	ГДЕ
	|		ДвиженияДокумента.Регистратор = &Ссылка
	|		И ДвиженияДокумента.Период <= &ПериодКонтроля) КАК РасчетыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыОстатки.Организация,
	|	РасчетыОстатки.Сотрудник,
	|	РасчетыОстатки.Валюта,
	|	РасчетыОстатки.Документ,
	|	РасчетыОстатки.Сотрудник.СчетРасчетовСПодотчетниками
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Сотрудник,
	|	Валюта,
	|	Документ,
	|	СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1 КАК НомерСтроки,
	|	&ПериодКонтроля КАК Дата,
	|	ТаблицаРасчеты.Организация КАК Организация,
	|	ТаблицаРасчеты.Сотрудник КАК Сотрудник,
	|	ТаблицаРасчеты.Валюта КАК Валюта,
	|	ТаблицаРасчеты.Документ КАК Документ,
	|	ЕСТЬNULL(ТаблицаОстатки.СуммаВалОстаток, 0) * КурсыВалютРасчетовСрезПоследних.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютРасчетовСрезПоследних.Кратность) - ЕСТЬNULL(ТаблицаОстатки.СуммаОстаток, 0) КАК СуммаКурсовойРазницы,
	|	ТаблицаРасчеты.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсовыхРазницРасчетыСПодотчетниками
	|ИЗ
	|	ВременнаяТаблицаВыданныеАвансы КАК ТаблицаРасчеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОстаткиПослеПроведения КАК ТаблицаОстатки
	|		ПО ТаблицаРасчеты.Организация = ТаблицаОстатки.Организация
	|			И ТаблицаРасчеты.Сотрудник = ТаблицаОстатки.Сотрудник
	|			И ТаблицаРасчеты.Валюта = ТаблицаОстатки.Валюта
	|			И ТаблицаРасчеты.Документ = ТаблицаОстатки.Документ
	|			И ТаблицаРасчеты.СчетУчета = ТаблицаОстатки.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаВалютаУчета.Значение
	|					ИЗ
	|						Константа.ВалютаУчета КАК КонстантаВалютаУчета)) КАК КурсыВалютУчетаСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВременнаяТаблицаВыданныеАвансы.Валюта
	|					ИЗ
	|						ВременнаяТаблицаВыданныеАвансы)) КАК КурсыВалютРасчетовСрезПоследних
	|		ПО ТаблицаРасчеты.Валюта = КурсыВалютРасчетовСрезПоследних.Валюта
	|ГДЕ
	|	(ЕСТЬNULL(ТаблицаОстатки.СуммаВалОстаток, 0) * КурсыВалютРасчетовСрезПоследних.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютРасчетовСрезПоследних.Кратность) - ЕСТЬNULL(ТаблицаОстатки.СуммаОстаток, 0) >= 0.005
	|			ИЛИ ЕСТЬNULL(ТаблицаОстатки.СуммаВалОстаток, 0) * КурсыВалютРасчетовСрезПоследних.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютРасчетовСрезПоследних.Кратность) - ЕСТЬNULL(ТаблицаОстатки.СуммаОстаток, 0) <= -0.005)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.СодержаниеПроводки КАК СодержаниеПроводки,
	|	ТаблицаДокумента.ВидДвижения КАК ВидДвижения,
	|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ТаблицаДокумента.Сотрудник КАК Сотрудник,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Валюта КАК Валюта,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.СуммаВал КАК СуммаВал
	|ИЗ
	|	ВременнаяТаблицаВыданныеАвансы КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.СодержаниеПроводки,
	|	ТаблицаДокумента.ВидДвижения,
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.Сотрудник,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Валюта,
	|	ТаблицаДокумента.Сумма - ЕСТЬNULL(ТаблицаВыданныеАвансы.Сумма, 0),
	|	ТаблицаДокумента.СуммаВал - ЕСТЬNULL(ТаблицаВыданныеАвансы.СуммаВал, 0)
	|ИЗ
	|	ВременнаяТаблицаРасходыПодотчетногоЛица КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВременнаяТаблицаВыданныеАвансы.Валюта КАК Валюта,
	|			СУММА(ВременнаяТаблицаВыданныеАвансы.Сумма) КАК Сумма,
	|			СУММА(ВременнаяТаблицаВыданныеАвансы.СуммаВал) КАК СуммаВал
	|		ИЗ
	|			ВременнаяТаблицаВыданныеАвансы КАК ВременнаяТаблицаВыданныеАвансы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВременнаяТаблицаВыданныеАвансы.Валюта) КАК ТаблицаВыданныеАвансы
	|		ПО ТаблицаДокумента.Валюта = ТаблицаВыданныеАвансы.Валюта
	|ГДЕ
	|	ТаблицаДокумента.СуммаВал - ЕСТЬNULL(ТаблицаВыданныеАвансы.СуммаВал, 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаДокумента.НомерСтроки,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.Сотрудник,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Валюта,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	0
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПодотчетниками КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВременнаяТаблицаОстаткиПослеПроведения";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаСумм = МассивРезультатов[0].Выгрузить(); // таблица для расчета ошибки округления
	ТаблицаРезультата = МассивРезультатов[3].Выгрузить();
	
	СуммаВсего = ТаблицаСумм.Итог("Сумма"); // сумма для расчета ошибки округления
	СуммаРезультата = ТаблицаРезультата.Итог("Сумма");
	РазницаРезультата = СуммаВсего - СуммаРезультата;
	
	Если РазницаРезультата <> 0
		И ТаблицаРезультата.Количество() > 0 Тогда
		ТаблицаРезультата[0].Сумма = ТаблицаРезультата[0].Сумма + РазницаРезультата;
	КонецЕсли;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПодотчетниками", ТаблицаРезультата);
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПодотчетниками()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПоставщиками(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаАвансовыйОтчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ПогашениеОбязательствПередПоставщиком", "Погашение обязательств перед поставщиком");
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаОплаты.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаОплаты.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ВременнаяТаблицаОплаты.ПризнакАванса
	|						ТОГДА &Ссылка
	|					ИНАЧЕ ВременнаяТаблицаОплаты.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	&ПогашениеОбязательствПередПоставщиком КАК СодержаниеПроводки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаОплаты.ПризнакАванса
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|	КОНЕЦ КАК ТипРасчетов,
	|	ВременнаяТаблицаОплаты.СчетУчета КАК СчетУчета,
	|	ВременнаяТаблицаОплаты.Валюта КАК Валюта,
	|	ВременнаяТаблицаОплаты.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаОплаты.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаОплаты.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаОплаты.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ВременнаяТаблицаОплаты.Период КАК Дата,
	|	СУММА(ВременнаяТаблицаОплаты.Сумма) КАК Сумма,
	|	СУММА(ВременнаяТаблицаОплаты.СуммаВал) КАК СуммаВал,
	|	-СУММА(ВременнаяТаблицаОплаты.Сумма) КАК СуммаДляОстатка,
	|	-СУММА(ВременнаяТаблицаОплаты.СуммаВал) КАК СуммаВалДляОстатка
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыСПоставщиками
	|ИЗ
	|	ВременнаяТаблицаОплаты КАК ВременнаяТаблицаОплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаОплаты.НомерСтроки,
	|	ВременнаяТаблицаОплаты.СчетУчета,
	|	ВременнаяТаблицаОплаты.Валюта,
	|	ВременнаяТаблицаОплаты.Контрагент,
	|	ВременнаяТаблицаОплаты.Договор,
	|	ВременнаяТаблицаОплаты.Период,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаОплаты.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ВременнаяТаблицаОплаты.ПризнакАванса
	|						ТОГДА &Ссылка
	|					ИНАЧЕ ВременнаяТаблицаОплаты.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаОплаты.ПризнакАванса
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаОплаты.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаОплаты.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Контрагент,
	|	Договор,
	|	Валюта,
	|	Документ,
	|	Заказ,
	|	ТипРасчетов,
	|	СчетУчета";
	
	Запрос.Выполнить();

	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПоставщиками.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Договор КАК Договор,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Документ КАК Документ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.ТипРасчетов КАК ТипРасчетов
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПоставщиками";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = УправлениеНебольшойФирмойСервер.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПоставщиками(Запрос.МенеджерВременныхТаблиц, Ложь, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРезультата = МассивРезультатов[НомерЗапроса].Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками", ТаблицаРезультата);
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходы(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаАвансовыйОтчет);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru = 'Курсовая разница'"));
	Запрос.УстановитьПараметр("ПрочиеРасходы", НСтр("ru = 'Отражение затрат'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК СтруктурнаяЕдиница,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ КАК СчетУчета,
	|	ТаблицаДокумента.Валюта КАК Аналитика,
	|	&КурсоваяРазница КАК СодержаниеПроводки,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДоходов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ КАК СуммаРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПодотчетниками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСчетУчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеРасходы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее)
	|		ИНАЧЕ ТаблицаДокумента.НаправлениеДеятельности
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСчетУчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеРасходы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаДокумента.ЗаказПокупателя
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.Номенклатура,
	|	&ПрочиеРасходы,
	|	0,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.Сумма
	|ИЗ
	|	ВременнаяТаблицаРасходы КАК ТаблицаДокумента
	|ГДЕ
	|	(ТаблицаДокумента.ТипСчетУчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)
	|			ИЛИ ТаблицаДокумента.ТипСчетУчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеРасходы))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	ТаблицаДокумента.НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаАвансовыйОтчет);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.Сумма КАК СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.НаправлениеДеятельности,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.Сумма
	|ИЗ
	|	ВременнаяТаблицаРасходы КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|			ТОГДА ТаблицаДокумента.ДоговорОбслуживанияНаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.Сумма
	|ИЗ
	|	ВременнаяТаблицаОплаты КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ПризнакАванса
	|			ИЛИ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Статья,
	|	Таблица.СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица
	|ГДЕ
	|	Таблица.СуммаРасходов > 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетод", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыКассовыйМетод()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаАвансовыйОтчет);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.Сумма КАК СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаОплаты КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И ТаблицаДокумента.ПризнакАванса
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыНераспределенные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыНераспределенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаАвансовыйОтчет);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	
	// Формирование таблицы с суммами к списанию.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаОплаты КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И НЕ ТаблицаДокумента.ПризнакАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДоходыИРасходыОтложенные");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Документ", "Документ");
	Блокировка.Заблокировать();
	
	ТаблицаСуммыКСписанию = РезультатЗапроса.Выгрузить();
	
	// Формирование таблицы с остатками.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДоходыИРасходыОтложенныеОстатки.Организация КАК Организация,
	|	ДоходыИРасходыОтложенныеОстатки.Документ КАК Документ,
	|	ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка) КАК Статья,
	|	0 КАК СуммаДоходов,
	|	0 КАК СуммаРасходов,
	|	-СУММА(ДоходыИРасходыОтложенныеОстатки.СуммаДоходовОстаток) КАК СуммаДоходовОстаток,
	|	СУММА(ДоходыИРасходыОтложенныеОстатки.СуммаРасходовОстаток) КАК СуммаРасходовОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоходыИРасходыОтложенныеОстатки.Организация КАК Организация,
	|		ДоходыИРасходыОтложенныеОстатки.Документ КАК Документ,
	|		ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДоходыИРасходыОтложенныеОстатки.СуммаДоходовОстаток КАК СуммаДоходовОстаток,
	|		ДоходыИРасходыОтложенныеОстатки.СуммаРасходовОстаток КАК СуммаРасходовОстаток
	|	ИЗ
	|		РегистрНакопления.ДоходыИРасходыОтложенные.Остатки(
	|				,
	|				Организация = &Организация
	|					И Документ В
	|						(ВЫБРАТЬ
	|							ТаблицаДокумента.Документ
	|						ИЗ
	|							ВременнаяТаблицаОплаты КАК ТаблицаДокумента)) КАК ДоходыИРасходыОтложенныеОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Организация,
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Документ,
	|		ДвиженияДокументаДоходыИРасходыОтложенные.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаДоходыИРасходыОтложенные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаДоходов, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаДоходов, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаДоходыИРасходыОтложенные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаРасходов, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаРасходов, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ДоходыИРасходыОтложенные КАК ДвиженияДокументаДоходыИРасходыОтложенные
	|	ГДЕ
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Регистратор = &Ссылка) КАК ДоходыИРасходыОтложенныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыИРасходыОтложенныеОстатки.Организация,
	|	ДоходыИРасходыОтложенныеОстатки.Документ,
	|	ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ";
	
	ТаблицаСуммыОстатки = Запрос.Выполнить().Выгрузить();

	ТаблицаСуммыОстатки.Индексы.Добавить("Документ");
	
	// Расчет сумм списания.
	Для каждого СтрокаСуммыКСписанию Из ТаблицаСуммыКСписанию Цикл
		СуммаКСписанию = СтрокаСуммыКСписанию.СуммаКСписанию;
		Отбор = Новый Структура("Документ", СтрокаСуммыКСписанию.Документ);
		МассивСтрокСуммыОстатки = ТаблицаСуммыОстатки.НайтиСтроки(Отбор);
		Для каждого СтрокаСуммыОстатки Из МассивСтрокСуммыОстатки Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаСуммыОстатки.СуммаРасходовОстаток < СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаРасходов = СтрокаСуммыОстатки.СуммаРасходовОстаток;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = СуммаКСписанию - СтрокаСуммыОстатки.СуммаРасходовОстаток;
			ИначеЕсли СтрокаСуммыОстатки.СуммаРасходовОстаток >= СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаРасходов = СуммаКСписанию;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Формирование таблицы с суммами к списанию.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаОплаты КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ПризнакАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья";
	
	ТаблицаСуммыКСписанию = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаСуммыКСписанию Из ТаблицаСуммыКСписанию Цикл
		СуммаКСписанию = СтрокаСуммыКСписанию.СуммаКСписанию;
		Отбор = Новый Структура("Документ", СтрокаСуммыКСписанию.Документ);
		МассивСтрокСуммыОстатки = ТаблицаСуммыОстатки.НайтиСтроки(Отбор);
		Для каждого СтрокаСуммыОстатки Из МассивСтрокСуммыОстатки Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаСуммыОстатки.СуммаДоходовОстаток < СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаДоходов = СтрокаСуммыОстатки.СуммаДоходовОстаток;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = СуммаКСписанию - СтрокаСуммыОстатки.СуммаДоходовОстаток;
			ИначеЕсли СтрокаСуммыОстатки.СуммаДоходовОстаток >= СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаДоходов = СуммаКСписанию;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Формирование временной таблицы с суммами, статьями и направлениями
	// деятельности. Понадобится для формирования движений по доходам и расходам
	// кассовым методом.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	Таблица.Статья КАК Статья,
	|	Таблица.СуммаРасходов КАК СуммаРасходов,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные
	|ИЗ
	|	&Таблица КАК Таблица
	|ГДЕ
	|	Таблица.СуммаРасходов > 0";
	
	Запрос.УстановитьПараметр("Таблица", ТаблицаСуммыОстатки);
	
	Запрос.Выполнить();
	
	// Формирование таблицы для записи в регистр.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	Таблица.Статья КАК Статья,
	|	Таблица.СуммаРасходов КАК СуммаРасходов,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыОтложенные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыОтложенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗакупки(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗакупки.Период КАК Период,
	|	ТаблицаЗакупки.Организация КАК Организация,
	|	ТаблицаЗакупки.Номенклатура КАК Номенклатура,
	|	ТаблицаЗакупки.Характеристика КАК Характеристика,
	|	ТаблицаЗакупки.Партия КАК Партия,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказПоставщику,
	|	ТаблицаЗакупки.Документ КАК Документ,
	|	ТаблицаЗакупки.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаЗакупки.Количество) КАК Количество,
	|	СУММА(ТаблицаЗакупки.СуммаНДСЗакупки) КАК СуммаНДС,
	|	СУММА(ТаблицаЗакупки.Сумма) КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗакупки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗакупки.Период,
	|	ТаблицаЗакупки.Организация,
	|	ТаблицаЗакупки.Номенклатура,
	|	ТаблицаЗакупки.Характеристика,
	|	ТаблицаЗакупки.Партия,
	|	ТаблицаЗакупки.Документ,
	|	ТаблицаЗакупки.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаЗакупки.Период,
	|	ТаблицаЗакупки.Организация,
	|	ТаблицаЗакупки.Номенклатура,
	|	ТаблицаЗакупки.Характеристика,
	|	ТаблицаЗакупки.Партия,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаЗакупки.Документ,
	|	ТаблицаЗакупки.СтавкаНДС,
	|	СУММА(ТаблицаЗакупки.Количество),
	|	СУММА(ТаблицаЗакупки.СуммаНДСЗакупки),
	|	СУММА(ТаблицаЗакупки.Сумма)
	|ИЗ
	|	ВременнаяТаблицаРасходы КАК ТаблицаЗакупки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗакупки.Период,
	|	ТаблицаЗакупки.Организация,
	|	ТаблицаЗакупки.Номенклатура,
	|	ТаблицаЗакупки.Характеристика,
	|	ТаблицаЗакупки.Партия,
	|	ТаблицаЗакупки.Документ,
	|	ТаблицаЗакупки.СтавкаНДС";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗакупки", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗакупки()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаУправленческий(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru = 'Курсовая разница'"));
	Запрос.УстановитьПараметр("ОприходованиеЗапасов", НСтр("ru = 'Оприходование запасов'"));
	Запрос.УстановитьПараметр("ОплатаПоставщику", НСтр("ru = 'Оплата поставщику'"));
	Запрос.УстановитьПараметр("ПрочиеРасходы", НСтр("ru = 'Прочие расходы'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ТаблицаДокумента.СчетУчета КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалДт,
	|	ТаблицаДокумента.СчетРасчетовСПодотчетниками КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетРасчетовСПодотчетниками.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетРасчетовСПодотчетниками.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалКт,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(&ПрочиеРасходы КАК СТРОКА(100)) КАК Содержание
	|ИЗ
	|	ВременнаяТаблицаРасходы КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетРасчетовСПодотчетниками,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетРасчетовСПодотчетниками.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетРасчетовСПодотчетниками.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ВЫРАЗИТЬ(&ОприходованиеЗапасов КАК СТРОКА(100))
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетРасчетовСПодотчетниками,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетРасчетовСПодотчетниками.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетРасчетовСПодотчетниками.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ВЫРАЗИТЬ(&ОплатаПоставщику КАК СТРОКА(100))
	|ИЗ
	|	ВременнаяТаблицаОплаты КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетРасчетовСПодотчетниками,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетРасчетовСПодотчетниками.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетРасчетовСПодотчетниками.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал - ЕСТЬNULL(ТаблицаВыданныеАвансы.СуммаВал, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал - ЕСТЬNULL(ТаблицаВыданныеАвансы.СуммаВал, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма - ЕСТЬNULL(ТаблицаВыданныеАвансы.Сумма, 0),
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасходыПодотчетногоЛица КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВременнаяТаблицаВыданныеАвансы.Валюта КАК Валюта,
	|			СУММА(ВременнаяТаблицаВыданныеАвансы.Сумма) КАК Сумма,
	|			СУММА(ВременнаяТаблицаВыданныеАвансы.СуммаВал) КАК СуммаВал
	|		ИЗ
	|			ВременнаяТаблицаВыданныеАвансы КАК ВременнаяТаблицаВыданныеАвансы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВременнаяТаблицаВыданныеАвансы.Валюта) КАК ТаблицаВыданныеАвансы
	|		ПО ТаблицаДокумента.Валюта = ТаблицаВыданныеАвансы.Валюта
	|ГДЕ
	|	ТаблицаДокумента.СуммаВал - ЕСТЬNULL(ТаблицаВыданныеАвансы.СуммаВал, 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПодотчетниками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаУправленческий", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаУправленческий()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаОплатаСчетовИЗаказов(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.СчетНаОплату КАК СчетНаОплату,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ТаблицаДокумента.ПризнакАванса
	|				ТОГДА 0
	|			КОГДА ТаблицаДокумента.ВалютаДокумента = ТаблицаДокумента.СчетНаОплату.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.Валюта = ТаблицаДокумента.СчетНаОплату.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаВал
	|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютСчета.Кратность / (КурсыВалютСчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК СуммаАванса,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.ПризнакАванса
	|				ТОГДА 0
	|			КОГДА ТаблицаДокумента.ВалютаДокумента = ТаблицаДокумента.СчетНаОплату.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.Валюта = ТаблицаДокумента.СчетНаОплату.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаВал
	|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютСчета.Кратность / (КурсыВалютСчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК СуммаОплаты
	|ИЗ
	|	ВременнаяТаблицаОплаты КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютСчета
	|		ПО ТаблицаДокумента.СчетНаОплату.ВалютаДокумента = КурсыВалютСчета.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютКассы
	|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютКассы.Валюта
	|ГДЕ
	|	ТаблицаДокумента.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|	И ТаблицаДокумента.ВестиУчетОплатыПоСчетам
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.СчетНаОплату
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	&Организация,
	|	ТаблицаДокумента.Заказ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ТаблицаДокумента.ПризнакАванса
	|				ТОГДА 0
	|			КОГДА ТаблицаДокумента.ВалютаДокумента = ТаблицаДокумента.Заказ.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.Валюта = ТаблицаДокумента.Заказ.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаВал
	|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютСчета.Кратность / (КурсыВалютСчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.ПризнакАванса
	|				ТОГДА 0
	|			КОГДА ТаблицаДокумента.ВалютаДокумента = ТаблицаДокумента.Заказ.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.Валюта = ТаблицаДокумента.Заказ.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаВал
	|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютСчета.Кратность / (КурсыВалютСчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ)
	|ИЗ
	|	ВременнаяТаблицаОплаты КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютСчета
	|		ПО ТаблицаДокумента.Заказ.ВалютаДокумента = КурсыВалютСчета.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютКассы
	|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютКассы.Валюта
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПокупателя)
	|				И ТаблицаДокумента.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|				И ТаблицаДокумента.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Заказ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОплатаСчетовИЗаказов", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаОплатаСчетовИЗаказов()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПлатежныйКалендарь(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьПлатежныйКалендарь", Константы.ФункциональнаяОпцияПлатежныйКалендарь.Получить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам) КАК Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден) КАК СтатусУтвержденияПлатежа,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ ТаблицаДокумента.ВалютаДокумента
	|	КОНЕЦ КАК Валюта,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря КАК СчетНаОплату,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|				ТОГДА -ТаблицаДокумента.СуммаВал
	|			ИНАЧЕ -ТаблицаДокумента.СуммаПлатежа
	|		КОНЕЦ) КАК СуммаОплаты
	|ИЗ
	|	ВременнаяТаблицаОплаты КАК ТаблицаДокумента
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Период,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ ТаблицаДокумента.ВалютаДокумента
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПлатежныйКалендарь", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаПлатежныйКалендарь()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаАвансовыйОтчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.Дляпроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	Запрос.УстановитьПараметр("ОприходованиеЗапасов", НСтр("ru = 'Оприходование запасов'"));
	Запрос.УстановитьПараметр("ПрочиеРасходы", НСтр("ru = 'Отражение затрат'"));
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Документ.Статья КАК Статья
	|ИЗ
	|	Документ.АвансовыйОтчет.ВыданныеАвансы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &КассовыйМетодУчетаДоходовИРасходов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		Статья = РезультатЗапроса.Статья;
	Иначе
		Статья = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Статья", Статья);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Контрагент.ВестиРасчетыПоДоговорам КАК ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Контрагент.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Контрагент.ВестиРасчетыПоЗаказам КАК ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Контрагент.ВестиУчетОплатыПоСчетам КАК ВестиУчетОплатыПоСчетам,
	|	ТаблицаДокумента.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.ЭтоДоговорОбслуживания
	|				И ТаблицаДокумента.Договор.ДоговорОбслуживанияНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиУчетРасходовПоДоговорамОбслуживания,
	|	ТаблицаДокумента.Договор.ДоговорОбслуживанияНаправлениеДеятельности КАК ДоговорОбслуживанияНаправлениеДеятельности,
	|	ТаблицаДокумента.Договор.ВалютаРасчетов КАК Валюта,
	|	ТаблицаДокумента.ПризнакАванса КАК ПризнакАванса,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ТаблицаДокумента.Ссылка.Сотрудник КАК Сотрудник,
	|	ТаблицаДокумента.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	ТаблицаДокумента.Ссылка.Сотрудник.СчетРасчетовПоПерерасходу КАК СчетРасчетовПоПерерасходу,
	|	ТаблицаДокумента.Ссылка.Сотрудник.СчетРасчетовСПодотчетниками КАК СчетРасчетовСПодотчетниками,
	|	ТаблицаДокумента.Контрагент.СчетУчетаРасчетовСПоставщиком КАК СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаДокумента.Контрагент.СчетУчетаАвансовПоставщику КАК СчетУчетаАвансовПоставщику,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ПризнакАванса
	|			ТОГДА ТаблицаДокумента.Контрагент.СчетУчетаАвансовПоставщику
	|		ИНАЧЕ ТаблицаДокумента.Контрагент.СчетУчетаРасчетовСПоставщиком
	|	КОНЕЦ КАК СчетУчета,
	|	ТаблицаДокумента.Заказ КАК Заказ,
	|	ТаблицаДокумента.СчетНаОплату КАК СчетНаОплату,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетНаОплату.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.СчетНаОплату
	|		КОГДА ТаблицаДокумента.Заказ.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетНаОплатуДляПлатежногоКалендаря,
	|	ТаблицаДокумента.Курс КАК Курс,
	|	ТаблицаДокумента.Кратность КАК Кратность,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Статья = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|		ИНАЧЕ ТаблицаДокумента.Статья
	|	КОНЕЦ КАК Статья,
	|	СУММА(ТаблицаДокумента.СуммаПлатежа) КАК СуммаПлатежа,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * ТаблицаДокумента.Ссылка.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * ТаблицаДокумента.Ссылка.Кратность) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ТаблицаДокумента.СуммаРасчетов) КАК СуммаВал
	|ПОМЕСТИТЬ ВременнаяТаблицаОплаты
	|ИЗ
	|	Документ.АвансовыйОтчет.Оплаты КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						Константы.ВалютаУчета
	|					ИЗ
	|						Константы КАК Константы)) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.Договор,
	|	ТаблицаДокумента.Договор.ВалютаРасчетов,
	|	ТаблицаДокумента.ПризнакАванса,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.Заказ,
	|	ТаблицаДокумента.СчетНаОплату,
	|	ТаблицаДокумента.Курс,
	|	ТаблицаДокумента.Кратность,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.Ссылка.Дата,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаДокумента.Заказ
	|	КОНЕЦ,
	|	ТаблицаДокумента.Ссылка.Сотрудник.СчетРасчетовПоПерерасходу,
	|	ТаблицаДокумента.Ссылка.Сотрудник.СчетРасчетовСПодотчетниками,
	|	ТаблицаДокумента.Ссылка.Сотрудник,
	|	ТаблицаДокумента.Контрагент.СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаДокумента.Контрагент.СчетУчетаАвансовПоставщику,
	|	ТаблицаДокумента.Ссылка.ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетНаОплату.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.СчетНаОплату
	|		КОГДА ТаблицаДокумента.Заказ.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Контрагент.ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Контрагент.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Контрагент.ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Контрагент.ВестиУчетОплатыПоСчетам,
	|	ТаблицаДокумента.Договор.ДоговорОбслуживанияНаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.ЭтоДоговорОбслуживания
	|				И ТаблицаДокумента.Договор.ДоговорОбслуживанияНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансовыйОтчетЗапасы.НомерСтроки КАК НомерСтроки,
	|	АвансовыйОтчетЗапасы.Период КАК Период,
	|	АвансовыйОтчетЗапасы.Организация КАК Организация,
	|	АвансовыйОтчетЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	АвансовыйОтчетЗапасы.СтруктурнаяЕдиница.ОрдерныйСклад КАК ОрдерныйСклад,
	|	АвансовыйОтчетЗапасы.Ячейка КАК Ячейка,
	|	АвансовыйОтчетЗапасы.СчетУчета КАК СчетУчета,
	|	АвансовыйОтчетЗапасы.Номенклатура КАК Номенклатура,
	|	АвансовыйОтчетЗапасы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АвансовыйОтчетЗапасы.Сотрудник КАК Сотрудник,
	|	АвансовыйОтчетЗапасы.Валюта КАК Валюта,
	|	АвансовыйОтчетЗапасы.СчетРасчетовСПодотчетниками КАК СчетРасчетовСПодотчетниками,
	|	АвансовыйОтчетЗапасы.СчетРасчетовПоПерерасходу КАК СчетРасчетовПоПерерасходу,
	|	АвансовыйОтчетЗапасы.Характеристика КАК Характеристика,
	|	АвансовыйОтчетЗапасы.Партия КАК Партия,
	|	АвансовыйОтчетЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	АвансовыйОтчетЗапасы.Количество КАК Количество,
	|	АвансовыйОтчетЗапасы.Сумма КАК Сумма,
	|	АвансовыйОтчетЗапасы.СуммаВал КАК СуммаВал,
	|	АвансовыйОтчетЗапасы.СуммаНДС КАК СуммаНДС,
	|	АвансовыйОтчетЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	АвансовыйОтчетЗапасы.СуммаНДСЗакупки КАК СуммаНДСЗакупки,
	|	АвансовыйОтчетЗапасы.СуммаНДСВал КАК СуммаНДСВал,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчетЗапасы.Статья = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|			ТОГДА &Статья
	|		ИНАЧЕ АвансовыйОтчетЗапасы.Статья
	|	КОНЕЦ КАК Статья,
	|	&Ссылка КАК Документ
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	(ВЫБРАТЬ
	|		АвансовыйОтчетЗапасы.НомерСтроки КАК НомерСтроки,
	|		АвансовыйОтчетЗапасы.Ссылка.Дата КАК Период,
	|		&Организация КАК Организация,
	|		АвансовыйОтчетЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		АвансовыйОтчетЗапасы.Ячейка КАК Ячейка,
	|		АвансовыйОтчетЗапасы.Номенклатура.СчетУчетаЗапасов КАК СчетУчета,
	|		АвансовыйОтчетЗапасы.Номенклатура.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		АвансовыйОтчетЗапасы.Номенклатура КАК Номенклатура,
	|		АвансовыйОтчетЗапасы.Ссылка.Сотрудник КАК Сотрудник,
	|		АвансовыйОтчетЗапасы.СтавкаНДС КАК СтавкаНДС,
	|		АвансовыйОтчетЗапасы.Ссылка.ВалютаДокумента КАК Валюта,
	|		АвансовыйОтчетЗапасы.Ссылка.Сотрудник.СчетРасчетовПоПерерасходу КАК СчетРасчетовПоПерерасходу,
	|		АвансовыйОтчетЗапасы.Ссылка.Сотрудник.СчетРасчетовСПодотчетниками КАК СчетРасчетовСПодотчетниками,
	|		АвансовыйОтчетЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ВЫБОР
	|			КОГДА &ИспользоватьХарактеристики
	|				ТОГДА АвансовыйОтчетЗапасы.Характеристика
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ КАК Характеристика,
	|		ВЫБОР
	|			КОГДА &ИспользоватьПартии
	|				ТОГДА АвансовыйОтчетЗапасы.Партия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ КАК Партия,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(АвансовыйОтчетЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА АвансовыйОтчетЗапасы.Количество
	|			ИНАЧЕ АвансовыйОтчетЗапасы.Количество * АвансовыйОтчетЗапасы.ЕдиницаИзмерения.Коэффициент
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР
	|			КОГДА АвансовыйОтчетЗапасы.Ссылка.НДСВключатьВСтоимость
	|				ТОГДА 0
	|			ИНАЧЕ АвансовыйОтчетЗапасы.СуммаНДС
	|		КОНЕЦ КАК СуммаНДСВал,
	|		ВЫБОР
	|			КОГДА АвансовыйОтчетЗапасы.Ссылка.НДСВключатьВСтоимость
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(АвансовыйОтчетЗапасы.СуммаНДС * АвансовыйОтчетЗапасы.Ссылка.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * АвансовыйОтчетЗапасы.Ссылка.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаНДС,
	|		ВЫРАЗИТЬ(АвансовыйОтчетЗапасы.СуммаНДС * АвансовыйОтчетЗапасы.Ссылка.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * АвансовыйОтчетЗапасы.Ссылка.Кратность) КАК ЧИСЛО(15, 2)) КАК СуммаНДСЗакупки,
	|		АвансовыйОтчетЗапасы.Всего КАК СуммаВал,
	|		ВЫРАЗИТЬ(АвансовыйОтчетЗапасы.Всего * АвансовыйОтчетЗапасы.Ссылка.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * АвансовыйОтчетЗапасы.Ссылка.Кратность) КАК ЧИСЛО(15, 2)) КАК Сумма,
	|		АвансовыйОтчетЗапасы.Статья КАК Статья,
	|		&ОприходованиеЗапасов КАК СодержаниеПроводки
	|	ИЗ
	|		Документ.АвансовыйОтчет.Запасы КАК АвансовыйОтчетЗапасы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|					&МоментВремени,
	|					Валюта В
	|						(ВЫБРАТЬ
	|							Константы.ВалютаУчета
	|						ИЗ
	|							Константы КАК Константы)) КАК КурсыВалютУчета
	|			ПО (ИСТИНА)
	|	ГДЕ
	|		АвансовыйОтчетЗапасы.Ссылка = &Ссылка) КАК АвансовыйОтчетЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансовыйОтчетРасходы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	АвансовыйОтчетРасходы.Период КАК Период,
	|	АвансовыйОтчетРасходы.Организация КАК Организация,
	|	АвансовыйОтчетРасходы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	АвансовыйОтчетРасходы.СчетУчета КАК СчетУчета,
	|	АвансовыйОтчетРасходы.Номенклатура КАК Номенклатура,
	|	АвансовыйОтчетРасходы.Сотрудник КАК Сотрудник,
	|	АвансовыйОтчетРасходы.Валюта КАК Валюта,
	|	АвансовыйОтчетРасходы.СчетРасчетовСПодотчетниками КАК СчетРасчетовСПодотчетниками,
	|	АвансовыйОтчетРасходы.СчетРасчетовПоПерерасходу КАК СчетРасчетовПоПерерасходу,
	|	АвансовыйОтчетРасходы.Характеристика КАК Характеристика,
	|	АвансовыйОтчетРасходы.Партия КАК Партия,
	|	АвансовыйОтчетРасходы.Количество КАК Количество,
	|	АвансовыйОтчетРасходы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	АвансовыйОтчетРасходы.Сумма КАК Сумма,
	|	АвансовыйОтчетРасходы.СуммаВал КАК СуммаВал,
	|	АвансовыйОтчетРасходы.СтавкаНДС КАК СтавкаНДС,
	|	АвансовыйОтчетРасходы.СуммаНДС КАК СуммаНДС,
	|	АвансовыйОтчетРасходы.СуммаНДСВал КАК СуммаНДСВал,
	|	АвансовыйОтчетРасходы.СуммаНДСЗакупки КАК СуммаНДСЗакупки,
	|	АвансовыйОтчетРасходы.ТипСчетУчета КАК ТипСчетУчета,
	|	АвансовыйОтчетРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчетРасходы.Статья = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|			ТОГДА &Статья
	|		ИНАЧЕ АвансовыйОтчетРасходы.Статья
	|	КОНЕЦ КАК Статья,
	|	ИСТИНА КАК ФиксированнаяСтоимость,
	|	&Ссылка КАК Документ
	|ПОМЕСТИТЬ ВременнаяТаблицаРасходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		АвансовыйОтчетРасходы.НомерСтроки КАК НомерСтроки,
	|		АвансовыйОтчетРасходы.Ссылка.Дата КАК Период,
	|		&Организация КАК Организация,
	|		АвансовыйОтчетРасходы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		АвансовыйОтчетРасходы.Номенклатура.СчетУчетаЗатрат КАК СчетУчета,
	|		АвансовыйОтчетРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		АвансовыйОтчетРасходы.Номенклатура КАК Номенклатура,
	|		АвансовыйОтчетРасходы.СтавкаНДС КАК СтавкаНДС,
	|		АвансовыйОтчетРасходы.Ссылка.Сотрудник КАК Сотрудник,
	|		АвансовыйОтчетРасходы.Ссылка.ВалютаДокумента КАК Валюта,
	|		АвансовыйОтчетРасходы.Ссылка.Сотрудник.СчетРасчетовСПодотчетниками КАК СчетРасчетовСПодотчетниками,
	|		АвансовыйОтчетРасходы.Ссылка.Сотрудник.СчетРасчетовПоПерерасходу КАК СчетРасчетовПоПерерасходу,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК Партия,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(АвансовыйОтчетРасходы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА АвансовыйОтчетРасходы.Количество
	|			ИНАЧЕ АвансовыйОтчетРасходы.Количество * АвансовыйОтчетРасходы.ЕдиницаИзмерения.Коэффициент
	|		КОНЕЦ КАК Количество,
	|		АвансовыйОтчетРасходы.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ВЫБОР
	|			КОГДА АвансовыйОтчетРасходы.Ссылка.НДСВключатьВСтоимость
	|				ТОГДА 0
	|			ИНАЧЕ АвансовыйОтчетРасходы.СуммаНДС
	|		КОНЕЦ КАК СуммаНДСВал,
	|		ВЫБОР
	|			КОГДА АвансовыйОтчетРасходы.Ссылка.НДСВключатьВСтоимость
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(АвансовыйОтчетРасходы.СуммаНДС * АвансовыйОтчетРасходы.Ссылка.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * АвансовыйОтчетРасходы.Ссылка.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаНДС,
	|		ВЫРАЗИТЬ(АвансовыйОтчетРасходы.СуммаНДС * АвансовыйОтчетРасходы.Ссылка.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * АвансовыйОтчетРасходы.Ссылка.Кратность) КАК ЧИСЛО(15, 2)) КАК СуммаНДСЗакупки,
	|		АвансовыйОтчетРасходы.Всего КАК СуммаВал,
	|		АвансовыйОтчетРасходы.Статья КАК Статья,
	|		ВЫРАЗИТЬ(АвансовыйОтчетРасходы.Всего * АвансовыйОтчетРасходы.Ссылка.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * АвансовыйОтчетРасходы.Ссылка.Кратность) КАК ЧИСЛО(15, 2)) КАК Сумма,
	|		АвансовыйОтчетРасходы.Номенклатура.СчетУчетаЗатрат.ТипСчета КАК ТипСчетУчета
	|	ИЗ
	|		Документ.АвансовыйОтчет.Расходы КАК АвансовыйОтчетРасходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|					&МоментВремени,
	|					Валюта В
	|						(ВЫБРАТЬ
	|							Константы.ВалютаУчета
	|						ИЗ
	|							Константы КАК Константы)) КАК КурсыВалютУчета
	|			ПО (ИСТИНА)
	|	ГДЕ
	|		АвансовыйОтчетРасходы.Ссылка = &Ссылка) КАК АвансовыйОтчетРасходы";
	
	Запрос.ВыполнитьПакет();
	
	СформироватьТаблицаЗапасы(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыНаСкладах(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыКПоступлениюНаСклады(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыСПоставщиками(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыСПодотчетниками(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходы(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗакупки(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаОплатаСчетовИЗаказов(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаПлатежныйКалендарь(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаУправленческий(ДокументСсылкаАвансовыйОтчет, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаАвансовыйОтчет, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если НЕ УправлениеНебольшойФирмойСервер.ВыполнитьКонтрольОстатков() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы содержат записи, необходимо выполнить контроль
	// отрицательных остатков.	
	Если СтруктураВременныеТаблицы.ДвиженияРасчетыСПодотчетникамиИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыНаСкладахИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыСПоставщикамиИзменение Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыНаСкладахИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Ячейка) КАК ЯчейкаПредставление,
		|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыНаСкладахИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия, Ячейка) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыНаСкладахИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыНаСкладахИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК Ячейка
		|					ИЗ
		|						ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение)) КАК ЗапасыНаСкладахОстатки
		|		ПО ДвиженияЗапасыНаСкладахИзменение.Организация = ЗапасыНаСкладахОстатки.Организация
		|			И ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыНаСкладахИзменение.Номенклатура = ЗапасыНаСкладахОстатки.Номенклатура
		|			И ДвиженияЗапасыНаСкладахИзменение.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
		|			И ДвиженияЗапасыНаСкладахИзменение.Партия = ЗапасыНаСкладахОстатки.Партия
		|			И ДвиженияЗапасыНаСкладахИзменение.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.СчетУчета) КАК СчетУчетаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.ЗаказПокупателя) КАК ЗаказПокупателяПредставление,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.СуммаОстаток, 0) КАК СуммаОстатокЗапасы
		|ИЗ
		|	ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыИзменение.СчетУчета КАК СчетУчета,
		|						ДвиженияЗапасыИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыИзменение.ЗаказПокупателя КАК ЗаказПокупателя
		|					ИЗ
		|						ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение)) КАК ЗапасыОстатки
		|		ПО ДвиженияЗапасыИзменение.Организация = ЗапасыОстатки.Организация
		|			И ДвиженияЗапасыИзменение.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыИзменение.СчетУчета = ЗапасыОстатки.СчетУчета
		|			И ДвиженияЗапасыИзменение.Номенклатура = ЗапасыОстатки.Номенклатура
		|			И ДвиженияЗапасыИзменение.Характеристика = ЗапасыОстатки.Характеристика
		|			И ДвиженияЗапасыИзменение.Партия = ЗапасыОстатки.Партия
		|			И ДвиженияЗапасыИзменение.ЗаказПокупателя = ЗапасыОстатки.ЗаказПокупателя
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыСПодотчетникамиИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПодотчетникамиИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПодотчетникамиИзменение.Сотрудник) КАК СотрудникПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПодотчетникамиИзменение.Валюта) КАК ВалютаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПодотчетникамиИзменение.Документ) КАК ДокументПредставление,
		|	ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) КАК ОстатокУПодотчетногоЛица,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалИзменение КАК СуммаВалИзменение
		|ИЗ
		|	ДвиженияРасчетыСПодотчетникамиИзменение КАК ДвиженияРасчетыСПодотчетникамиИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПодотчетниками.Остатки(
		|				&МоментКонтроля,
		|				(Организация, Сотрудник, Валюта, Документ) В
		|					(ВЫБРАТЬ
		|						ДвиженияРасчетыСПодотчетникамиИзменение.Организация КАК Организация,
		|						ДвиженияРасчетыСПодотчетникамиИзменение.Сотрудник КАК Сотрудник,
		|						ДвиженияРасчетыСПодотчетникамиИзменение.Валюта КАК Валюта,
		|						ДвиженияРасчетыСПодотчетникамиИзменение.Документ КАК Документ
		|					ИЗ
		|						ДвиженияРасчетыСПодотчетникамиИзменение КАК ДвиженияРасчетыСПодотчетникамиИзменение)) КАК РасчетыСПодотчетникамиОстатки
		|		ПО ДвиженияРасчетыСПодотчетникамиИзменение.Организация = РасчетыСПодотчетникамиОстатки.Организация
		|			И ДвиженияРасчетыСПодотчетникамиИзменение.Сотрудник = РасчетыСПодотчетникамиОстатки.Сотрудник
		|			И ДвиженияРасчетыСПодотчетникамиИзменение.Валюта = РасчетыСПодотчетникамиОстатки.Валюта
		|			И ДвиженияРасчетыСПодотчетникамиИзменение.Документ = РасчетыСПодотчетникамиОстатки.Документ
		|ГДЕ
		|	(ТИПЗНАЧЕНИЯ(РасчетыСПодотчетникамиОстатки.Документ) = ТИП(Документ.АвансовыйОтчет)
		|				И ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) > 0
		|			ИЛИ ТИПЗНАЧЕНИЯ(РасчетыСПодотчетникамиОстатки.Документ) <> ТИП(Документ.АвансовыйОтчет)
		|				И ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыСПоставщикамиИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Контрагент) КАК КонтрагентПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Договор) КАК ДоговорПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Договор.ВалютаРасчетов) КАК ВалютаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Документ) КАК ДокументПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Заказ) КАК ЗаказПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов) КАК ТипРасчетовПредставление,
		|	ИСТИНА КАК ДвиженияДенежныхДокументов,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) КАК СуммаОстаткаЗадолженности,
		|	-(ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0)) КАК СуммаНепогашенныхАвансов,
		|	ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов КАК ТипРасчетов
		|ИЗ
		|	ДвиженияРасчетыСПоставщикамиИзменение КАК ДвиженияРасчетыСПоставщикамиИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщиками.Остатки(
		|				&МоментКонтроля,
		|				(Организация, Контрагент, Договор, Документ, Заказ, ТипРасчетов) В
		|					(ВЫБРАТЬ
		|						ДвиженияРасчетыСПоставщикамиИзменение.Организация КАК Организация,
		|						ДвиженияРасчетыСПоставщикамиИзменение.Контрагент КАК Контрагент,
		|						ДвиженияРасчетыСПоставщикамиИзменение.Договор КАК Договор,
		|						ДвиженияРасчетыСПоставщикамиИзменение.Документ КАК Документ,
		|						ДвиженияРасчетыСПоставщикамиИзменение.Заказ КАК Заказ,
		|						ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов КАК ТипРасчетов
		|					ИЗ
		|						ДвиженияРасчетыСПоставщикамиИзменение КАК ДвиженияРасчетыСПоставщикамиИзменение)) КАК РасчетыСПоставщикамиОстатки
		|		ПО ДвиженияРасчетыСПоставщикамиИзменение.Организация = РасчетыСПоставщикамиОстатки.Организация
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Контрагент = РасчетыСПоставщикамиОстатки.Контрагент
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Договор = РасчетыСПоставщикамиОстатки.Договор
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Документ = РасчетыСПоставщикамиОстатки.Документ
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Заказ = РасчетыСПоставщикамиОстатки.Заказ
		|			И ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов = РасчетыСПоставщикамиОстатки.ТипРасчетов
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
		|				ТОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) > 0
		|			ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) < 0
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой()
			ИЛИ НЕ МассивРезультатов[1].Пустой()
			ИЛИ НЕ МассивРезультатов[2].Пустой()
			ИЛИ НЕ МассивРезультатов[3].Пустой() Тогда
			ДокументОбъектАвансовыйОтчет = ДокументСсылкаАвансовыйОтчет.ПолучитьОбъект()
		КонецЕсли;
		
		// Отрицательный остаток запасов на складе.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасыНаСкладах(ДокументОбъектАвансовыйОтчет, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток учета запасов и затрат.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасы(ДокументОбъектАвансовыйОтчет, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по расчетам с подотчетными лицами.
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструРасчетыСПодотчетниками(ДокументОбъектАвансовыйОтчет, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по расчетам с поставщиками.
		Если НЕ МассивРезультатов[3].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструРасчетыСПоставщиками(ДокументОбъектАвансовыйОтчет, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

#Область ИнтерфейсПечати

Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АвансовыйОтчет";
	
	ПервыйДокумент = Истина;
	НациональнаяВалюта = Константы.НациональнаяВалюта.Получить();
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	АвансовыйОтчет.Номер,
		|	АвансовыйОтчет.Дата КАК ДатаДокумента,
		|	АвансовыйОтчет.Организация,
		|	АвансовыйОтчет.Организация КАК Руководители,
		|	АвансовыйОтчет.Сотрудник КАК ПодотчетноеЛицо,
		|	АвансовыйОтчет.Сотрудник.Физлицо КАК ФизЛицо,
		|	АвансовыйОтчет.ВалютаДокумента,
		|	АвансовыйОтчет.ВалютаДокумента.Представление КАК ПредставлениеВалюты,
		|	ВЫБОР
		|		КОГДА АвансовыйОтчет.Курс = 0
		|			ТОГДА 1
		|		ИНАЧЕ АвансовыйОтчет.Курс
		|	КОНЕЦ КАК Курс,
		|	ВЫБОР
		|		КОГДА АвансовыйОтчет.Кратность = 0
		|			ТОГДА 1
		|		ИНАЧЕ АвансовыйОтчет.Кратность
		|	КОНЕЦ КАК Кратность,
		|	АвансовыйОтчет.СуммаВключаетНДС,
		|	АвансовыйОтчет.НДСВключатьВСтоимость,
		|	АвансовыйОтчет.СуммаДокумента КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА АвансовыйОтчет.Кратность = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(АвансовыйОтчет.СуммаДокумента * АвансовыйОтчет.Курс / АвансовыйОтчет.Кратность КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК СуммаДокументаВНацВалюте,
		|	АвансовыйОтчет.ВыданныеАвансы.(
		|		Документ,
		|		Сумма
		|	),
		|	АвансовыйОтчет.Запасы.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		Характеристика,
		|		Партия,
		|		ЕдиницаИзмерения,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		СтавкаНДС,
		|		СуммаНДС,
		|		Всего,
		|		ЗаказПокупателя,
		|		СтруктурнаяЕдиница,
		|		Ячейка,
		|		Номенклатура.СчетУчетаЗапасов.Код КАК ДебетСубСчета,
		|		Номенклатура.Артикул КАК Артикул,
		|		ДатаВходящегоДокумента КАК ДокументДата,
		|		НомерВходящегоДокумента КАК ДокументНомер,
		|		ВЫБОР
		|			КОГДА (ВЫРАЗИТЬ(АвансовыйОтчет.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
		|				ТОГДА АвансовыйОтчет.Запасы.Номенклатура.Наименование
		|			ИНАЧЕ ВЫРАЗИТЬ(АвансовыйОтчет.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
		|		КОНЕЦ КАК ЗапасНаименование,
		|		Содержание
		|	),
		|	АвансовыйОтчет.Расходы.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		ЕдиницаИзмерения,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		СтавкаНДС,
		|		СуммаНДС,
		|		Всего,
		|		ЗаказПокупателя,
		|		СтруктурнаяЕдиница,
		|		НаправлениеДеятельности,
		|		Номенклатура.СчетУчетаЗатрат.Код КАК ДебетСубСчета,
		|		Номенклатура.Артикул КАК Артикул,
		|		ДатаВходящегоДокумента КАК ДокументДата,
		|		НомерВходящегоДокумента КАК ДокументНомер,
		|		ВЫБОР
		|			КОГДА (ВЫРАЗИТЬ(АвансовыйОтчет.Расходы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
		|				ТОГДА АвансовыйОтчет.Расходы.Номенклатура.Наименование
		|			ИНАЧЕ ВЫРАЗИТЬ(АвансовыйОтчет.Расходы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
		|		КОНЕЦ КАК РасходНаименование,
		|		Содержание
		|	),
		|	АвансовыйОтчет.Оплаты.(
		|		ДатаВходящегоДокумента КАК ДокументДата,
		|		НомерВходящегоДокумента КАК ДокументНомер,
		|		ВЫБОР
		|			КОГДА АвансовыйОтчет.Оплаты.ПризнакАванса
		|				ТОГДА АвансовыйОтчет.Оплаты.Контрагент.СчетУчетаАвансовПоставщику.Код
		|			ИНАЧЕ АвансовыйОтчет.Оплаты.Контрагент.СчетУчетаРасчетовСПоставщиком.Код
		|		КОНЕЦ КАК ДебетСубСчета,
		|		СуммаПлатежа КАК СуммаПлатежа,
		|		Контрагент
		|	),
		|	АвансовыйОтчет.Сотрудник.СчетРасчетовСПодотчетниками КАК СчетРасчетовСПодотчетниками,
		|	АвансовыйОтчет.Организация.Префикс КАК Префикс
		|ИЗ
		|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
		|ГДЕ
		|	АвансовыйОтчет.Ссылка = &ТекущийДокумент";
		
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АвансовыйОтчет_АвансовыйОтчет";
		
		Если (ИмяМакета = "АвансовыйОтчет") Тогда
			Макет 					= УправлениеПечатью.МакетПечатнойФормы("Документ.АвансовыйОтчет.ПФ_MXL_АвансовыйОтчет");
			
		ИначеЕсли ИмяМакета = "АвансовыйОтчетВВалюте" Тогда
			Макет 					= УправлениеПечатью.МакетПечатнойФормы("Документ.АвансовыйОтчет.ПФ_MXL_АвансовыйОтчетВВалюте");
			
		КонецЕсли;
		
		ВИностраннойВалюте = НЕ (Шапка.ВалютаДокумента = НациональнаяВалюта);
		
		Компания = УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Шапка.Организация);
		
		// ТИТУЛЬНЫЙ ЛИСТ
		ВыданныеАвансы = Шапка.ВыданныеАвансы.Выгрузить();
		МассивАвансовыхДокументов = ВыданныеАвансы.ВыгрузитьКолонку("Документ");
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Сотрудник",  Шапка.ПодотчетноеЛицо);
		Запрос.УстановитьПараметр("Организация", Компания);
		Запрос.УстановитьПараметр("ДатаИтогов", Шапка.ДатаДокумента);
		Запрос.УстановитьПараметр("Валюта", Шапка.ВалютаДокумента);
		Запрос.УстановитьПараметр("МассивАвансовыхДокументов", МассивАвансовыхДокументов);
		Запрос.УстановитьПараметр("ПересчитыватьВнацВалюту",	НЕ ВИностраннойВалюте);
		Запрос.УстановитьПараметр("Курс", 						Шапка.Курс);
		Запрос.УстановитьПараметр("Кратность", 					Шапка.Кратность);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ВложенныйЗапрос.СуммаОстаток) КАК СуммаОстатокВВалюте,
		|	СУММА(ВЫБОР
		|			КОГДА &ПересчитыватьВнацВалюту
		|				ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.СуммаОстаток * &Курс / &Кратность КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ ВложенныйЗапрос.СуммаОстаток
		|		КОНЕЦ) КАК СуммаОстаток
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасчетыСПодотчетникамиОстатки.СуммаВалОстаток КАК СуммаОстаток
		|	ИЗ
		|		РегистрНакопления.РасчетыСПодотчетниками.Остатки(
		|				&ДатаИтогов,
		|				Организация = &Организация
		|					И Сотрудник = &Сотрудник
		|					И Валюта = &Валюта) КАК РасчетыСПодотчетникамиОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА РасчетыСПодотчетниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА ЕСТЬNULL(РасчетыСПодотчетниками.СуммаВал, 0)
		|			ИНАЧЕ -ЕСТЬNULL(РасчетыСПодотчетниками.СуммаВал, 0)
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.РасчетыСПодотчетниками КАК РасчетыСПодотчетниками
		|	ГДЕ
		|		РасчетыСПодотчетниками.Регистратор В(&МассивАвансовыхДокументов)
		|		И РасчетыСПодотчетниками.Период <= &ДатаИтогов) КАК ВложенныйЗапрос";
		ПредыдущийАванс = Запрос.Выполнить().Выбрать();
		ПредыдущийАванс.Следующий();
		
		СуммаДоДокумента		= ?(ЗначениеЗаполнено(ПредыдущийАванс.СуммаОстаток), ПредыдущийАванс.СуммаОстаток, 0);
		СуммаДоДокументаВВалюте	= ?(ЗначениеЗаполнено(ПредыдущийАванс.СуммаОстатокВВалюте), ПредыдущийАванс.СуммаОстатокВВалюте, 0);
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("МассивАвансовыхДокументов", МассивАвансовыхДокументов);
		Запрос.УстановитьПараметр("ПересчитыватьВНацВалюту",	ВИностраннойВалюте);
		Запрос.УстановитьПараметр("Курс", 						Шапка.Курс);
		Запрос.УстановитьПараметр("Кратность", 					Шапка.Кратность);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(РасходИзКассы.СуммаДокумента) КАК СуммаДокументаВВалюте,
		|	СУММА(ВЫБОР
		|			КОГДА &ПересчитыватьВНацВалюту
		|				ТОГДА ВЫРАЗИТЬ(РасходИзКассы.СуммаДокумента * &Курс / &Кратность КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ РасходИзКассы.СуммаДокумента
		|		КОНЕЦ) КАК СуммаДокумента
		|ИЗ
		|	Документ.РасходИзКассы КАК РасходИзКассы
		|ГДЕ
		|	РасходИзКассы.Ссылка В(&МассивАвансовыхДокументов)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходИзКассы.Ссылка";
		Таб = Запрос.Выполнить().Выгрузить();
		Таб = Запрос.Выполнить().Выгрузить();
		ПолученоИзКассы = Число(Таб.Итог("СуммаДокумента"));
		ПолученоИзКассыВВалюте = Число(Таб.Итог("СуммаДокументаВВалюте"));
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("МассивАвансовыхДокументов",	МассивАвансовыхДокументов);
		Запрос.УстановитьПараметр("ПересчитыватьВнацВалюту",	НЕ ВИностраннойВалюте);
		Запрос.УстановитьПараметр("Курс", 						Шапка.Курс);
		Запрос.УстановитьПараметр("Кратность", 					Шапка.Кратность);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(РасходСоСчета.СуммаДокумента) КАК СуммаДокументаВВалюте,
		|	СУММА(ВЫБОР
		|			КОГДА &ПересчитыватьВнацВалюту
		|				ТОГДА ВЫРАЗИТЬ(РасходСоСчета.СуммаДокумента * &Курс / &Кратность КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ РасходСоСчета.СуммаДокумента
		|		КОНЕЦ) КАК СуммаДокумента
		|ИЗ
		|	Документ.РасходСоСчета КАК РасходСоСчета
		|ГДЕ
		|	РасходСоСчета.Ссылка В(&МассивАвансовыхДокументов)";
		
		Таб = Запрос.Выполнить().Выгрузить();
		ПолученоИзКассыПоКартам = Число(Таб.Итог("СуммаДокумента"));
		ПолученоИзКассыПоКартамВВалюте = Число(Таб.Итог("СуммаДокументаВВалюте"));
		
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		
		КурсоваяРазница = 0;
		Если НЕ (Шапка.ВалютаДокумента = НациональнаяВалюта) Тогда
			ОбластьМакета.Параметры.ПредставлениеВалютыДокумента	= Шапка.ПредставлениеВалюты;
			ОбластьМакета.Параметры.ПолученоИзКассыВВалюте			= ПолученоИзКассыВВалюте;
			ОбластьМакета.Параметры.ПолученоИзКассыВВалютеПоКартам	= ПолученоИзКассыПоКартамВВалюте;
		КонецЕсли;
		
		ИтогоПолучено = ПолученоИзКассы + ПолученоИзКассыПоКартам;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СотрудникиСрезПоследних.СтруктурнаяЕдиница,
		|	СотрудникиСрезПоследних.Должность,
		|	СотрудникиСрезПоследних.Сотрудник.Код КАК ТабельныйНомер,
		|	ФИОФизЛиц.Фамилия КАК Фамилия,
		|	ФИОФизЛиц.Имя КАК Имя,
		|	ФИОФизЛиц.Отчество КАК Отчество,
		|	СотрудникиСрезПоследних.Сотрудник.Представление КАК Представление
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПоследних(
		|			&НаДату,
		|			Организация = &Организация
		|				И Сотрудник = &Сотрудник) КАК СотрудникиСрезПоследних,
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&НаДату, ФизЛицо = &ФизЛицо) КАК ФИОФизЛиц");
		
		Запрос.УстановитьПараметр("НаДату", Шапка.ДатаДокумента);
		Запрос.УстановитьПараметр("ФизЛицо", Шапка.ФизЛицо);
		Запрос.УстановитьПараметр("Сотрудник", Шапка.ПодотчетноеЛицо);
		Запрос.УстановитьПараметр("Организация", Компания);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ПодотчетноеЛицо   = Шапка.ПодотчетноеЛицо;
			ПодотчетноеЛицоОт = Шапка.ПодотчетноеЛицо;
			ТабельныйНомер    = Шапка.ПодотчетноеЛицо.Код;
			Подразделение     = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
			Должность         = Справочники.Должности.ПустаяСсылка();
		Иначе
			ДанныеПодотчетногоЛица = РезультатЗапроса.Выгрузить()[0];
			Если ЗначениеЗаполнено(ДанныеПодотчетногоЛица.Фамилия) Тогда
				ПодотчетноеЛицо   = УправлениеНебольшойФирмойСервер.ПолучитьФамилиюИмяОтчество(ДанныеПодотчетногоЛица.Фамилия, ДанныеПодотчетногоЛица.Имя, ДанныеПодотчетногоЛица.Отчество);
			Иначе
				ПодотчетноеЛицо   = ДанныеПодотчетногоЛица.Представление;
			КонецЕсли;
			ПодотчетноеЛицоОт = ПодотчетноеЛицо;
			ТабельныйНомер    = ДанныеПодотчетногоЛица.ТабельныйНомер;
			Подразделение     = ДанныеПодотчетногоЛица.СтруктурнаяЕдиница;
			Должность         = ДанныеПодотчетногоЛица.Должность;
		КонецЕсли; 
		
		Если Шапка.ДатаДокумента < Дата('20110101') Тогда
			НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
		Иначе
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
		КонецЕсли;		
		
		// Выводим титульный лист авансового отчета
		ОбластьМакета.Параметры.Заполнить(Шапка);
		Если ИмяМакета = "АвансовыйОтчетВВалюте" Тогда
			ОбластьМакета.Параметры.ВалютаУчета						= Шапка.ВалютаДокумента;
		КонецЕсли;
		ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица		= ПодотчетноеЛицо;
		ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛицаОт		= ПодотчетноеЛицоОт;
		ОбластьМакета.Параметры.ТабельныйНомер						= ТабельныйНомер;
		ОбластьМакета.Параметры.ПредставлениеПодразделения			= Подразделение;
		ОбластьМакета.Параметры.КодПодразделения					= ?(НЕ ЗначениеЗаполнено(Подразделение), "", Подразделение.Код);
		ОбластьМакета.Параметры.ДолжностьПодотчетногоЛицаПредставление = Должность;
		ОбластьМакета.Параметры.НомерДокумента						= НомерДокумента;
		ОбластьМакета.Параметры.ПолученоИзКассы						= ПолученоИзКассы;
		ОбластьМакета.Параметры.ПолученоИзКассыПоКартам				= ПолученоИзКассыПоКартам;
		
		Если СуммаДоДокумента >= 0 тогда
			ОбластьМакета.Параметры.НачальныйОстаток    =   СуммаДоДокумента;
		Иначе
			ОбластьМакета.Параметры.НачальныйПерерасход = - СуммаДоДокумента;
		КонецЕсли;
		
		ОбластьМакета.Параметры.ИтогоПолучено = ИтогоПолучено;
		Израсходованно = ?(ВИностраннойВалюте, Шапка.СуммаДокументаВНацВалюте, Шапка.СуммаДокумента);
		ОбластьМакета.Параметры.Израсходовано = Израсходованно;
		
		ОстатокНаКонец = СуммаДоДокумента + ИтогоПолучено - Израсходованно;
		Если ОстатокНаКонец >= 0  Тогда
			ОбластьМакета.Параметры.КонечныйОстаток    = ОстатокНаКонец;
		Иначе
			ОбластьМакета.Параметры.КонечныйПерерасход = - ОстатокНаКонец;
		КонецЕсли;
		
		СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
		
		Руководители	= УправлениеНебольшойФирмойСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Руководители, Шапка.ДатаДокумента);
		Руководитель	= Руководители.ФИОРуководителя;
		Бухгалтер		= Руководители.ФИОГлавногоБухгалтера;
		Кассир			= Руководители.ФИОКассира;
		
		Если ИмяМакета = "АвансовыйОтчетВВалюте" Тогда
			
			ДляРасчета 									= Шапка.СуммаДокумента;
			ОбластьМакета.Параметры.ИзрасходованоРуб	= ДляРасчета;
			ДляВалютыПрописью 							= Шапка.ВалютаДокумента;
			
		Иначе
			
			ДляРасчета		= Шапка.СуммаДокументаВНацВалюте;
			
			ИспСумма		= Окр(ДляРасчета, 2, 1);
			ЦелСумма		= Цел(ДляРасчета);
			КопСумма		= 100 * (Окр(ИспСумма - ЦелСумма, 2, 1));
			Если КопСумма = 0 Тогда
				КопСумма = "00";
			КонецЕсли;
			
			ОбластьМакета.Параметры.ИзрасходованоРуб	= ЦелСумма;
			ОбластьМакета.Параметры.ИзрасходованоКоп	= КопСумма;
			
			ОбластьМакета.Параметры.ОрганизацияПоОКПО	= СведенияОбОрганизации.КодПоОКПО;
			ДляВалютыПрописью 							= НациональнаяВалюта;
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ДатаДокумента		= Шапка.ДатаДокумента;
		
		ОбластьМакета.Параметры.Руководитель		= Руководитель;
		ОбластьМакета.Параметры.ГлавныйБухгалтер	= Бухгалтер;
		
		СуммаОтчетаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ДляРасчета, ДляВалютыПрописью);
		Если НЕ ВИностраннойВалюте Тогда
			СуммаОтчетаПрописью = СуммаОтчетаПрописью + " (" + ЦелСумма + " руб. " + КопСумма + " коп.)";
		КонецЕсли;
		
		ОбластьМакета.Параметры.СуммаОтчетаПрописью = СуммаОтчетаПрописью;
		
		ОбластьМакета.Параметры.ПредставлениеОрганизации			= ПредставлениеОрганизации;
		ОбластьМакета.Параметры.ПредставлениеГлавногоБухгалтера		= Бухгалтер;
		ОбластьМакета.Параметры.Кассир								= Кассир;
		ОбластьМакета.Параметры.РуководительПредставление			= Руководитель;
		ОбластьМакета.Параметры.ДолжностьРуководителяПредставление	= Руководители.РуководительДолжность;
		
		Если (НЕ ВИностраннойВалюте И Константы.ВалютаУчета.Получить() = НациональнаяВалюта)
			ИЛИ ВИностраннойВалюте Тогда
		 
			ЗапросПоПроводкам = Новый Запрос();
			ЗапросПоПроводкам.УстановитьПараметр("Ссылка", 					ТекущийДокумент);
			ЗапросПоПроводкам.УстановитьПараметр("ПересчитыватьВнацВалюту",	НЕ ВИностраннойВалюте);
			ЗапросПоПроводкам.УстановитьПараметр("Курс", 					Шапка.Курс);
			ЗапросПоПроводкам.УстановитьПараметр("Кратность", 				Шапка.Кратность);
			ЗапросПоПроводкам.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 8
			|	Управленческий.СчетДт.Код КАК СчетДт,
			|	Управленческий.СчетКт.Код КАК СчетКт,
			|	СУММА(Управленческий.Сумма) КАК СуммаВВалюте,
			|	СУММА(ВЫБОР
			|			КОГДА &ПересчитыватьВнацВалюту
			|				ТОГДА ВЫРАЗИТЬ(Управленческий.Сумма * &Курс / &Кратность КАК ЧИСЛО(15, 2))
			|			ИНАЧЕ Управленческий.Сумма
			|		КОНЕЦ) КАК Сумма,
			|	МИНИМУМ(Управленческий.НомерСтроки) КАК НомерСтроки
			|ИЗ
			|	РегистрБухгалтерии.Управленческий КАК Управленческий
			|ГДЕ
			|	Управленческий.Регистратор = &Ссылка
			|	И НЕ Управленческий.СчетДт.Забалансовый
			|	И Управленческий.СценарийПланирования = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический)
			|
			|СГРУППИРОВАТЬ ПО
			|	Управленческий.СчетДт.Код,
			|	Управленческий.СчетКт.Код
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			ВыборкаПроводок = ЗапросПоПроводкам.Выполнить().Выбрать();
			
			Счетчик = 0;
			Пока ВыборкаПроводок.Следующий() Цикл
				
				ОбластьМакета.Параметры["СубСчетДебет"  + (Счетчик + 1)] = ВыборкаПроводок.СчетДт;
				ОбластьМакета.Параметры["СуммаДебет"    + (Счетчик + 1)] = ВыборкаПроводок.Сумма;
				ОбластьМакета.Параметры["СубСчетКредит" + (Счетчик + 1)] = ВыборкаПроводок.СчетКт;
				ОбластьМакета.Параметры["СуммаКредит"   + (Счетчик + 1)] = ВыборкаПроводок.Сумма;
				
				Счетчик = Счетчик + 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// ОБОРОТНАЯ СТОРОНА
		
		Запасы = Шапка.Запасы.Выбрать();
		Расходы = Шапка.Расходы.Выбрать();
		Оплаты = Шапка.Оплаты.Выбрать();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		Если ИмяМакета = "АвансовыйОтчетВВалюте" Тогда
			ОбластьМакета.Параметры.ВалютаДокумента = Шапка.ВалютаДокумента;
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим табличные части
		ОбластьМакета			= Макет.ПолучитьОбласть("Строка");
		НомерСтроки				= 0;
		ИтогоПоОтчету			= 0;
		ИтогоПоОтчетуВВалюте	= 0;
		
		Пока Запасы.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(Запасы);
			НомерСтроки = НомерСтроки + 1;
			ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
			Если ЗначениеЗаполнено(Запасы.Содержание) Тогда
				ОбластьМакета.Параметры.НаименованиеРасхода = Запасы.Содержание;
			Иначе
				ОбластьМакета.Параметры.НаименованиеРасхода = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
					Запасы.ЗапасНаименование,
					Запасы.Характеристика,
					Запасы.Артикул
				);
			КонецЕсли;
			
			Сумма = ?((НЕ ВИностраннойВалюте) И (НЕ Шапка.ВалютаДокумента = НациональнаяВалюта), 
							Окр(Запасы.Всего * Шапка.Курс / Шапка.Кратность, 2), 
								Запасы.Всего);
			
			ОбластьМакета.Параметры.ПоОтчету = Сумма;
			ОбластьМакета.Параметры.ПоУчету  = Сумма;
			
			ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
			
			Если НЕ (НациональнаяВалюта = Шапка.ВалютаДокумента) Тогда
			
				СуммаВВалюте = Запасы.Всего;
				
				ОбластьМакета.Параметры.ПоУчетуВВалюте  = СуммаВВалюте;
				ОбластьМакета.Параметры.ПоОтчетуВВалюте = СуммаВВалюте;
				
				ИтогоПоОтчетуВВалюте = ИтогоПоОтчетуВВалюте + СуммаВВалюте;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		НомерСтроки = ?(ЗначениеЗаполнено(Запасы.НомерСтроки), Запасы.НомерСтроки, 0);
		
		Пока Расходы.Следующий() Цикл
		
			ОбластьМакета.Параметры.Заполнить(Расходы);
			НомерСтроки = НомерСтроки + 1;
			ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
			Если ЗначениеЗаполнено(Расходы.Содержание) Тогда
				ОбластьМакета.Параметры.НаименованиеРасхода = Расходы.Содержание;
			Иначе
				ОбластьМакета.Параметры.НаименованиеРасхода = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
					Расходы.РасходНаименование,
					,
					Расходы.Артикул
				);
			КонецЕсли;
				
			Сумма = ?((НЕ ВИностраннойВалюте) И (НЕ Шапка.ВалютаДокумента = НациональнаяВалюта), 
							Окр(Расходы.Всего * Шапка.Курс / Шапка.Кратность, 2), 
									Расходы.Всего);
			
			ОбластьМакета.Параметры.ПоОтчету = Сумма;
			ОбластьМакета.Параметры.ПоУчету  = Сумма;
			
			ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
			
			Если НЕ (НациональнаяВалюта = Шапка.ВалютаДокумента) Тогда
			
				СуммаВВалюте = Расходы.Всего;
				
				ОбластьМакета.Параметры.ПоУчетуВВалюте  = СуммаВВалюте;
				ОбластьМакета.Параметры.ПоОтчетуВВалюте = СуммаВВалюте;
				
				ИтогоПоОтчетуВВалюте = ИтогоПоОтчетуВВалюте + СуммаВВалюте;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		Пока Оплаты.Следующий() Цикл
		
			ОбластьМакета.Параметры.Заполнить(Оплаты);
			НомерСтроки = НомерСтроки + 1;
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			Сумма = ?(ВИностраннойВалюте, 
						Окр(Оплаты.СуммаПлатежа * Шапка.Курс / Шапка.Кратность, 2), 
							Оплаты.СуммаПлатежа);
			ОбластьМакета.Параметры.НаименованиеРасхода = НСтр("ru = 'Оплата контрагенту '") + Оплаты.Контрагент;
			
			ОбластьМакета.Параметры.ПоОтчету = Сумма;
			ОбластьМакета.Параметры.ПоУчету  = Сумма;
			
			ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
			
			Если НЕ (НациональнаяВалюта = Шапка.ВалютаДокумента) Тогда
			
				СуммаВВалюте = Оплаты.СуммаПлатежа;
				
				ОбластьМакета.Параметры.ПоУчетуВВалюте  = СуммаВВалюте;
				ОбластьМакета.Параметры.ПоОтчетуВВалюте = СуммаВВалюте;
				
				ИтогоПоОтчетуВВалюте = ИтогоПоОтчетуВВалюте + СуммаВВалюте;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		// Выводим подвал авансовго отчета
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица = ПодотчетноеЛицо;
		ОбластьМакета.Параметры.ИтогоПоОтчету        = ИтогоПоОтчету;
		ОбластьМакета.Параметры.ИтогоПоОтчетувВалюте = ИтогоПоОтчетуВВалюте;
		ОбластьМакета.Параметры.ИтогоПоУчету         = ИтогоПоОтчету;
		ОбластьМакета.Параметры.ИтогоПоУчетувВалюте  = ИтогоПоОтчетуВВалюте;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АвансовыйОтчет", "Авансовый отчет", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "АвансовыйОтчет"));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчетВВалюте") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АвансовыйОтчетВВалюте", "Авансовый отчет (упр.)", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "АвансовыйОтчетВВалюте"));
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	УправлениеНебольшойФирмойСервер.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// АвансовыйОтчет
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АвансовыйОтчет";
	КомандаПечати.Представление = НСтр("ru = 'Авансовый отчет'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
	// АвансовыйОтчет (в валюте)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АвансовыйОтчетВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Авансовый отчет (упр.)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 4;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли