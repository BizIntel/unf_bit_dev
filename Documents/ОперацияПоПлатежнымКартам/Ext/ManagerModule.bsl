#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПокупателями(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОперацияПоПлатежнымКартам);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ВозникновениеАвансаПокупателя", "Возникновение аванса покупателя");
	Запрос.УстановитьПараметр("ПогашениеОбязательствПокупателя", "Погашение обязательств покупателя");
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	Запрос.УстановитьПараметр("ПереводыВПути", ПланыСчетов.Управленческий.ПереводыВПути);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|						ТОГДА &Ссылка
	|					ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|	КОНЕЦ КАК ТипРасчетов,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа) КАК СуммаПлатежа,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета) КАК Сумма,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаРасчетов) КАК СуммаВал,
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета) КАК СуммаДляОстатка,
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаРасчетов) КАК СуммаВалДляОстатка,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.СчетУчетаАвансовПокупателя
	|		ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.СчетУчетаРасчетовСПокупателем
	|	КОНЕЦ КАК СчетУчета,
	|	&ПереводыВПути КАК ПереводыВПути,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов КАК Валюта,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА &ВозникновениеАвансаПокупателя
	|		ИНАЧЕ &ПогашениеОбязательствПокупателя
	|	КОНЕЦ КАК СодержаниеПроводки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ЭквайринговыйТерминалБанковскийСчет КАК БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыСПокупателями
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Договор,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|						ТОГДА &Ссылка
	|					ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.СчетУчетаАвансовПокупателя
	|		ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.СчетУчетаРасчетовСПокупателем
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА &ВозникновениеАвансаПокупателя
	|		ИНАЧЕ &ПогашениеОбязательствПокупателя
	|	КОНЕЦ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ЭквайринговыйТерминалБанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Контрагент,
	|	Договор,
	|	Валюта,
	|	Документ,
	|	Заказ,
	|	ТипРасчетов,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПокупателями.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПокупателями.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыСПокупателями.Договор КАК Договор,
	|	ВременнаяТаблицаРасчетыСПокупателями.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыСПокупателями.ТипРасчетов КАК ТипРасчетов
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПокупателями");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = УправлениеНебольшойФирмойСервер.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПокупателями(Запрос.МенеджерВременныхТаблиц, Ложь, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПокупателями", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПокупателями()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПокупателямиВовзрат(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОперацияПоПлатежнымКартам);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ПогашениеАвансаПокупателя", НСтр("ru='Погашение аванса покупателя'"));
	Запрос.УстановитьПараметр("ВозникновениеОбязательствПокупателя", НСтр("ru='Возникновение обязательств покупателя'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	Запрос.УстановитьПараметр("ПереводыВПути", ПланыСчетов.Управленческий.ПереводыВПути);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|	КОНЕЦ КАК ТипРасчетов,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата КАК Дата,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа) КАК СуммаПлатежа,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета) КАК Сумма,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаРасчетов) КАК СуммаВал,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета) КАК СуммаДляОстатка,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаРасчетов) КАК СуммаВалДляОстатка,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.СчетУчетаАвансовПокупателя
	|		ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.СчетУчетаРасчетовСПокупателем
	|	КОНЕЦ КАК СчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов КАК Валюта,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА &ПогашениеАвансаПокупателя
	|		ИНАЧЕ &ВозникновениеОбязательствПокупателя
	|	КОНЕЦ КАК СодержаниеПроводки,
	|	&ПереводыВПути КАК ПереводыВПути,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыСПокупателями
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Договор,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.СчетУчетаАвансовПокупателя
	|		ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.СчетУчетаРасчетовСПокупателем
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|			ТОГДА &ПогашениеАвансаПокупателя
	|		ИНАЧЕ &ВозникновениеОбязательствПокупателя
	|	КОНЕЦ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Контрагент,
	|	Договор,
	|	Валюта,
	|	Документ,
	|	Заказ,
	|	ТипРасчетов,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПокупателями.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПокупателями.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыСПокупателями.Договор КАК Договор,
	|	ВременнаяТаблицаРасчетыСПокупателями.Документ КАК Документ,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыСПокупателями.Заказ КАК Документ.ЗаказПокупателя), ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)) КАК Заказ,
	|	ВременнаяТаблицаРасчетыСПокупателями.ТипРасчетов КАК ТипРасчетов
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями КАК ВременнаяТаблицаРасчетыСПокупателями";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПокупателями");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = УправлениеНебольшойФирмойСервер.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПокупателями(Запрос.МенеджерВременныхТаблиц, Ложь, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПокупателями", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПокупателями()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаОплатаСчетовИЗаказов(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.СчетНаОплату КАК СчетНаОплату,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ТаблицаДокумента.ПризнакАванса
	|				ТОГДА 0
	|			КОГДА ТаблицаДокумента.ВалютаДенежныхСредств = ТаблицаДокумента.СчетНаОплату.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.ВалютаРасчетов = ТаблицаДокумента.СчетНаОплату.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаРасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютСчета.Кратность / (КурсыВалютСчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) * ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СуммаАванса,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.ПризнакАванса
	|				ТОГДА 0
	|			КОГДА ТаблицаДокумента.ВалютаДенежныхСредств = ТаблицаДокумента.СчетНаОплату.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.ВалютаРасчетов = ТаблицаДокумента.СчетНаОплату.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаРасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютСчета.Кратность / (КурсыВалютСчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) * ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СуммаОплаты
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютСчета
	|		ПО ТаблицаДокумента.СчетНаОплату.ВалютаДокумента = КурсыВалютСчета.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютКассы
	|		ПО ТаблицаДокумента.ВалютаДенежныхСредств = КурсыВалютКассы.Валюта
	|ГДЕ
	|	ТаблицаДокумента.ВестиУчетОплатыПоСчетам
	|	И ТаблицаДокумента.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
	|	И ТаблицаДокумента.СчетНаОплату <> НЕОПРЕДЕЛЕНО
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.СчетНаОплату,
	|	ТаблицаДокумента.ВидОперации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ТаблицаДокумента.Заказ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ТаблицаДокумента.ПризнакАванса
	|				ТОГДА 0
	|			КОГДА ТаблицаДокумента.ВалютаДенежныхСредств = ТаблицаДокумента.Заказ.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.ВалютаРасчетов = ТаблицаДокумента.Заказ.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаРасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютСчета.Кратность / (КурсыВалютСчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) * ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.ПризнакАванса
	|				ТОГДА 0
	|			КОГДА ТаблицаДокумента.ВалютаДенежныхСредств = ТаблицаДокумента.Заказ.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.ВалютаРасчетов = ТаблицаДокумента.Заказ.ВалютаДокумента
	|				ТОГДА ТаблицаДокумента.СуммаРасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютСчета.Кратность / (КурсыВалютСчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) * ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютСчета
	|		ПО ТаблицаДокумента.Заказ.ВалютаДокумента = КурсыВалютСчета.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютКассы
	|		ПО ТаблицаДокумента.ВалютаДенежныхСредств = КурсыВалютКассы.Валюта
	|ГДЕ
	|	ТаблицаДокумента.ВестиУчетОплатыПоСчетам
	|	И (ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПокупателя)
	|				И ТаблицаДокумента.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))
	|	ИЛИ (ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ПриемИПередачаВРемонт)
	|				И ТаблицаДокумента.Заказ <> ЗНАЧЕНИЕ(Документ.ПриемИПередачаВРемонт.ПустаяСсылка))
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Заказ,
	|	ТаблицаДокумента.ВидОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОплатаСчетовИЗаказов", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаОплатаСчетовИЗаказов()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаУправленческий(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	5 КАК Порядок,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ТаблицаДокумента.ПереводыВПути КАК СчетДт,
	|	ТаблицаДокумента.СчетУчета КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ПереводыВПути.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ПереводыВПути.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалКт,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки КАК Содержание
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.ПереводыВПути,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ПереводыВПути.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ПереводыВПути.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента";
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ОтражениеОплатыПлатежнымиКартами", НСтр("ru = 'Оплата платежными картами'"));
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаУправленческий", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаУправленческий()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПлатежныйКалендарь(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОперацияПоПлатежнымКартам);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьПлатежныйКалендарь", Константы.ФункциональнаяОпцияПлатежныйКалендарь.Получить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден) КАК СтатусУтвержденияПлатежа,
	|	ТаблицаДокумента.Касса КАК БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаРасчетов
	|		ИНАЧЕ ТаблицаДокумента.ВалютаДенежныхСредств
	|	КОНЕЦ КАК Валюта,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря КАК СчетНаОплату,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаДокумента.СуммаРасчетов
	|			ИНАЧЕ ТаблицаДокумента.СуммаПлатежа
	|		КОНЕЦ) КАК СуммаОплаты
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Касса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаРасчетов
	|		ИНАЧЕ ТаблицаДокумента.ВалютаДенежныхСредств
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря,
	|	ТаблицаДокумента.Статья
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ТаблицаДокумента.Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден),
	|	ТаблицаДокумента.Касса,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаДокумента.СуммаДокумента
	|ИЗ
	|	Документ.ПоступлениеВКассу КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(ЕСТЬNULL(ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки, 0)) КАК Количество
	|		ИЗ
	|			ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа) КАК ВложенныйЗапрос
	|		ПО (ИСТИНА)
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.Ссылка = &Ссылка
	|	И ВложенныйЗапрос.Количество = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПлатежныйКалендарь", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаПлатежныйКалендарь()

#Область КассовыйМетод

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыКассовыйМетодОплатаОтПокупателяЭквайринг(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОперацияПоПлатежнымКартам);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	//Если ДокументСсылкаОперацияПоПлатежнымКартам.ВидОперации = Перечисления.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя Тогда
		Запрос.УстановитьПараметр("Документ", ДокументСсылкаОперацияПоПлатежнымКартам);
	//Иначе
	//	Запрос.УстановитьПараметр("Документ", ДокументСсылкаОперацияПоПлатежнымКартам.ОперацияПоПлатежнымКартамШапка);
	//КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Документ КАК Документ,
	|	ТаблицаДокумента.ВидОперации КАК ВидОперацииЭквайринга,
	|	ТаблицаДокумента.Дата КАК ДатаПлатежа,
	|	ТаблицаДокумента.ВидПлатежнойКарты КАК ВидПлатежнойКарты,
	|	ТаблицаДокумента.НомерПлатежнойКарты КАК НомерПлатежнойКарты,
	|	ТаблицаДокумента.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|			ТОГДА ТаблицаДокумента.ДоговорОбслуживанияНаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.СуммаУчета КАК СуммаДоходов,
	|	0 КАК СуммаРасходов,
	|	ТаблицаДокумента.СуммаУчетаКомиссииПоДоговору КАК СуммаКомиссииДоходов
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|	И ТаблицаДокумента.ПризнакАванса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Документ,
	|	ТаблицаДокумента.ВидОперации,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.ВидПлатежнойКарты,
	|	ТаблицаДокумента.НомерПлатежнойКарты,
	|	ТаблицаДокумента.ЭквайринговыйТерминал,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|			ТОГДА ТаблицаДокумента.ДоговорОбслуживанияНаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	0,
	|	0,
	|	ТаблицаДокумента.СуммаУчетаКомиссииПоДоговору
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|	И НЕ ТаблицаДокумента.ПризнакАванса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Документ,
	|	ТаблицаДокумента.ВидОперации,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.ВидПлатежнойКарты,
	|	ТаблицаДокумента.НомерПлатежнойКарты,
	|	ТаблицаДокумента.ЭквайринговыйТерминал,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|			ТОГДА ТаблицаДокумента.ДоговорОбслуживанияНаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	-ТаблицаДокумента.СуммаУчета,
	|	0,
	|	ТаблицаДокумента.СуммаУчетаКомиссииПоДоговору
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|	И ТаблицаДокумента.ПризнакАванса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Документ,
	|	ТаблицаДокумента.ВидОперации,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.ВидПлатежнойКарты,
	|	ТаблицаДокумента.НомерПлатежнойКарты,
	|	ТаблицаДокумента.ЭквайринговыйТерминал,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|			ТОГДА ТаблицаДокумента.ДоговорОбслуживанияНаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	-ТаблицаДокумента.СуммаУчета,
	|	0,
	|	ТаблицаДокумента.СуммаУчетаКомиссииПоДоговору
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|	И НЕ ТаблицаДокумента.ПризнакАванса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Документ,
	|	ТаблицаДокумента.ВидОперации,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.ВидПлатежнойКарты,
	|	ТаблицаДокумента.НомерПлатежнойКарты,
	|	ТаблицаДокумента.ЭквайринговыйТерминал,
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Статья,
	|	Таблица.СуммаДоходов,
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Таблица.СуммаДоходов <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Документ,
	|	ТаблицаДокумента.ВидОперации,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.ВидПлатежнойКарты,
	|	ТаблицаДокумента.НомерПлатежнойКарты,
	|	ТаблицаДокумента.ЭквайринговыйТерминал,
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Статья,
	|	0,
	|	0,
	|	-Таблица.СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Таблица.СуммаРасходов > 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетодЭквайринг", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыКассовыйМетод()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыНераспределенныеОплатаОтПокупателя(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОперацияПоПлатежнымКартам);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.СуммаУчета КАК СуммаДоходов,
	|	0 КАК СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И ТаблицаДокумента.ПризнакАванса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	-ТаблицаДокумента.СуммаУчета,
	|	0
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И ТаблицаДокумента.ПризнакАванса
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыНераспределенные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыНераспределенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыОтложенныеОплатаОтПокупателя(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОперацияПоПлатежнымКартам);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	
	// Формирование таблицы с суммами к списанию.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	СУММА(ТаблицаДокумента.СуммаУчета) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И НЕ ТаблицаДокумента.ПризнакАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДоходыИРасходыОтложенные");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Документ", "Документ");
	Блокировка.Заблокировать();
	
	ТаблицаСуммыКСписанию = РезультатЗапроса.Выгрузить();
	
	// Формирование таблицы с остатками.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДоходыИРасходыОтложенныеОстатки.Организация КАК Организация,
	|	ДоходыИРасходыОтложенныеОстатки.Документ КАК Документ,
	|	ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка) КАК Статья,
	|	0 КАК СуммаДоходов,
	|	0 КАК СуммаРасходов,
	|	СУММА(ДоходыИРасходыОтложенныеОстатки.СуммаДоходовОстаток) КАК СуммаДоходовОстаток,
	|	-СУММА(ДоходыИРасходыОтложенныеОстатки.СуммаРасходовОстаток) КАК СуммаРасходовОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоходыИРасходыОтложенныеОстатки.Организация КАК Организация,
	|		ДоходыИРасходыОтложенныеОстатки.Документ КАК Документ,
	|		ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДоходыИРасходыОтложенныеОстатки.СуммаДоходовОстаток КАК СуммаДоходовОстаток,
	|		ДоходыИРасходыОтложенныеОстатки.СуммаРасходовОстаток КАК СуммаРасходовОстаток
	|	ИЗ
	|		РегистрНакопления.ДоходыИРасходыОтложенные.Остатки(
	|				,
	|				Организация = &Организация
	|					И Документ В
	|						(ВЫБРАТЬ
	|							ТаблицаДокумента.Документ
	|						ИЗ
	|							ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|						ГДЕ
	|							(ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|								ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)))) КАК ДоходыИРасходыОтложенныеОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Организация,
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Документ,
	|		ДвиженияДокументаДоходыИРасходыОтложенные.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаДоходыИРасходыОтложенные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаДоходов, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаДоходов, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаДоходыИРасходыОтложенные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаРасходов, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаРасходов, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ДоходыИРасходыОтложенные КАК ДвиженияДокументаДоходыИРасходыОтложенные
	|	ГДЕ
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Регистратор = &Ссылка) КАК ДоходыИРасходыОтложенныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыИРасходыОтложенныеОстатки.Организация,
	|	ДоходыИРасходыОтложенныеОстатки.Документ,
	|	ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ";
	
	ТаблицаСуммыОстатки = Запрос.Выполнить().Выгрузить();

	ТаблицаСуммыОстатки.Индексы.Добавить("Документ");
	
	// Расчет сумм списания.
	Для каждого СтрокаСуммыКСписанию Из ТаблицаСуммыКСписанию Цикл
		СуммаКСписанию = СтрокаСуммыКСписанию.СуммаКСписанию;
		Отбор = Новый Структура("Документ", СтрокаСуммыКСписанию.Документ);
		МассивСтрокСуммыОстатки = ТаблицаСуммыОстатки.НайтиСтроки(Отбор);
		Для каждого СтрокаСуммыОстатки Из МассивСтрокСуммыОстатки Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаСуммыОстатки.СуммаДоходовОстаток < СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаДоходов = СтрокаСуммыОстатки.СуммаДоходовОстаток;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья; 
				СуммаКСписанию = СуммаКСписанию - СтрокаСуммыОстатки.СуммаДоходовОстаток;
			ИначеЕсли СтрокаСуммыОстатки.СуммаДоходовОстаток >= СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаДоходов = СуммаКСписанию;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Формирование таблицы с суммами к списанию.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	СУММА(ТаблицаДокумента.СуммаУчета) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|	И НЕ ТаблицаДокумента.ПризнакАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья"; 
	
	ТаблицаСуммыКСписанию = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаСуммыКСписанию Из ТаблицаСуммыКСписанию Цикл
		СуммаКСписанию = СтрокаСуммыКСписанию.СуммаКСписанию;
		Отбор = Новый Структура("Документ", СтрокаСуммыКСписанию.Документ);
		МассивСтрокСуммыОстатки = ТаблицаСуммыОстатки.НайтиСтроки(Отбор);
		Для каждого СтрокаСуммыОстатки Из МассивСтрокСуммыОстатки Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаСуммыОстатки.СуммаРасходовОстаток < СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаРасходов = СтрокаСуммыОстатки.СуммаРасходовОстаток;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = СуммаКСписанию - СтрокаСуммыОстатки.СуммаРасходовОстаток;
			ИначеЕсли СтрокаСуммыОстатки.СуммаРасходовОстаток >= СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаРасходов = СуммаКСписанию;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Формирование временной таблицы с суммами, статьями и направлениями
	// деятельности. Понадобится для формирования движений по доходам и расходам
	// кассовым методом.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	Таблица.Статья КАК Статья,
	|	Таблица.СуммаДоходов КАК СуммаДоходов,
	|	Таблица.СуммаРасходов КАК СуммаРасходов,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные
	|ИЗ
	|	&Таблица КАК Таблица
	|ГДЕ
	|	(Таблица.СуммаДоходов > 0
	|			ИЛИ Таблица.СуммаРасходов > 0)";
	
	Запрос.УстановитьПараметр("Таблица", ТаблицаСуммыОстатки);
	
	Запрос.Выполнить();
	
	// Формирование таблицы для записи в регистр.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	Таблица.Статья КАК Статья,
	|	Таблица.СуммаДоходов КАК СуммаДоходов,
	|	- Таблица.СуммаРасходов КАК СуммаРасходов,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица";

	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыОтложенные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыНераспределенные()  

#КонецОбласти

#Область Эквайринг

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьРасчетыПоЭквайрингу(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ОплатаПлатежнойКартой", "Оплата платежной картой");
	Запрос.УстановитьПараметр("ВозвратОплатыПокупателю", "Возврат оплаты на карту");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОперацияПоПлатежнымКартам);
	Запрос.УстановитьПараметр("РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям", ПолучитьФункциональнуюОпцию("РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям"));
	Запрос.УстановитьПараметр("ВестиУчетРасчетовСБанкомЭквайрером", ПолучитьФункциональнуюОпцию("ВестиУчетРасчетовСБанкомЭквайрером"));
	
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаОперацияПоПлатежнымКартам.ВалютаДенежныхСредств);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ОперацияПоПлатежнымКартам.ПустаяСсылка)
	|	КОНЕЦ КАК Документ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата КАК Период,
	|	ВЫБОР
	|		КОГДА &РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям
	|			ТОГДА НАЧАЛОПЕРИОДА(ВременнаяТаблицаРасшифровкаПлатежа.Дата, ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА &РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета
	|		ИНАЧЕ -ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа
	|		ИНАЧЕ -ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа
	|	КОНЕЦ КАК СуммаВал,
	|	ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчетаКомиссииПоДоговору КАК Комиссия,
	|	ВременнаяТаблицаРасшифровкаПлатежа.СуммаКомиссииПоДоговору КАК КомиссияВал,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|			ТОГДА &ВозвратОплатыПокупателю
	|		ИНАЧЕ &ОплатаПлатежнойКартой
	|	КОНЕЦ КАК СодержаниеПроводки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ЭквайринговыйТерминал,
	|	ВЫБОР
	|		КОГДА &РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Заказ,
	|	ВЫБОР
	|		КОГДА &РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПустаяСсылка)
	|	КОНЕЦ КАК ВидОперацииЭквайринга,
	|	ВЫБОР
	|		КОГДА &РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.НомерПлатежнойКарты
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерПлатежнойКарты,
	|	ВЫБОР
	|		КОГДА &РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВидПлатежнойКарты
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВидПлатежнойКарты,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств КАК Валюта,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|ГДЕ 
	|	&ВестиУчетРасчетовСБанкомЭквайрером";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Оплата не зачитывает операции возврата, значит можем сразу добавить движения в таблицу. Операции возврата потребуется распределять по остаткам расчетов в документе "ПоступлениеНаСчет" или "РасходСоСчета".
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыПоЭквайрингу", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьРасчетыПоЭквайрингу()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаОплатаПлатежнымиКартами(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОперацияПоПлатежнымКартам);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ДанныеДокумента.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	ТаблицаРасшифровкаПлатежа.ВидПлатежнойКарты КАК ВидПлатежнойКарты,
	|	ТаблицаРасшифровкаПлатежа.НомерПлатежнойКарты КАК НомерПлатежнойКарты,
	|	ТаблицаРасшифровкаПлатежа.Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.СуммаУчета КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаУчетаКомиссииПоДоговору КАК СуммаКомиссииПоДоговору,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|	ТаблицаРасшифровкаПлатежа.СуммаПлатежа КАК СуммаВал,
	|	ТаблицаРасшифровкаПлатежа.СуммаКомиссииПоДоговору КАК СуммаКомиссииПоДоговоруВал
	|ИЗ
	|	Документ.ОперацияПоПлатежнымКартам КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата,
	|	&Организация,
	|	ДанныеДокумента.ЭквайринговыйТерминал,
	|	ТаблицаРасшифровкаПлатежа.ВидПлатежнойКарты,
	|	ТаблицаРасшифровкаПлатежа.НомерПлатежнойКарты,
	|	ТаблицаРасшифровкаПлатежа.Контрагент,
	|	-ТаблицаРасшифровкаПлатежа.СуммаУчета,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЭквайрерБеретКомиссиюЗаВозвратДС
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаУчетаКомиссииПоДоговору
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаРасшифровкаПлатежа.Заказ,
	|	-ТаблицаРасшифровкаПлатежа.СуммаПлатежа,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЭквайрерБеретКомиссиюЗаВозвратДС
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаКомиссииПоДоговору
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	Документ.ОперацияПоПлатежнымКартам КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОплатаПлатежнымиКартами", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаОплатаПлатежнымиКартами()

#КонецОбласти

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОперацияПоПлатежнымКартам);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаОперацияПоПлатежнымКартам.ВалютаДенежныхСредств);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютСрезПоследних
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, Валюта В (&ВалютаУчета, &ВалютаДС)) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ТаблицаДокумента.Ссылка.ВидОперации КАК ВидОперации,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДоговорам КАК ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам КАК ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам КАК ВестиУчетОплатыПоСчетам,
	|	ТаблицаДокумента.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.ЭтоДоговорОбслуживания
	|				И ТаблицаДокумента.Договор.ДоговорОбслуживанияНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиУчетРасходовПоДоговорамОбслуживания,
	|	ТаблицаДокумента.Договор.ДоговорОбслуживанияНаправлениеДеятельности КАК ДоговорОбслуживанияНаправлениеДеятельности,
	|	ТаблицаДокумента.Договор.ВалютаРасчетов КАК ВалютаРасчетов,
	|	ТаблицаДокумента.Ссылка.БанковскийСчет.СчетУчета КАК БанковскийСчетКассаСчетУчета,
	|	ТаблицаДокумента.Ссылка.Статья КАК Статья,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|				И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|				И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|				И ТаблицаДокумента.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|				И ТаблицаДокумента.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДокумента.Заказ
	|	КОНЕЦ КАК Заказ,
	|	ТаблицаДокумента.ПризнакАванса КАК ПризнакАванса,
	|	ТаблицаДокумента.Ссылка.Дата КАК Дата,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаУчета,
	|	СУММА(ТаблицаДокумента.СуммаРасчетов) КАК СуммаРасчетов,
	|	СУММА(ТаблицаДокумента.СуммаПлатежа) КАК СуммаПлатежа,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументПланирования) = ТИП(Документ.ПоступлениеДСПлан)
	|				И ТаблицаДокумента.ДокументПланирования <> ЗНАЧЕНИЕ(Документ.ПоступлениеДСПлан.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ДокументПланирования
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументПланирования) = ТИП(Документ.ПеремещениеДСПлан)
	|				И ТаблицаДокумента.ДокументПланирования <> ЗНАЧЕНИЕ(Документ.ПеремещениеДСПлан.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ДокументПланирования
	|		КОГДА ТаблицаДокумента.СчетНаОплату.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.СчетНаОплату
	|		КОГДА ТаблицаДокумента.Заказ.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетНаОплатуДляПлатежногоКалендаря,
	|	ТаблицаДокумента.СчетНаОплату КАК СчетНаОплату,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПокупателем КАК СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПокупателя КАК СчетУчетаАвансовПокупателя,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПоставщиком КАК СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПоставщику КАК СчетУчетаАвансовПоставщику,
	|	ТаблицаДокумента.Ссылка.ЭквайринговыйТерминал,
	|	ТаблицаДокумента.Ссылка.ЭквайринговыйТерминал.СчетУчета,
	|	ТаблицаДокумента.Ссылка.ЭквайринговыйТерминал.Эквайрер КАК Эквайрер,
	|	ТаблицаДокумента.Ссылка.ВидПлатежнойКарты,
	|	ТаблицаДокумента.Ссылка.НомерПлатежнойКарты,
	|	ТаблицаДокумента.Ссылка.СсылочныйНомер,
	|	ТаблицаДокумента.Ссылка.НомерЧекаЭТ,
	|	СУММА(ТаблицаДокумента.СуммаКомиссии) КАК СуммаКомиссииПоДоговору,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаКомиссии * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаУчетаКомиссииПоДоговору,
	|	ТаблицаДокумента.Ссылка.БанковскийСчет КАК ЭквайринговыйТерминалБанковскийСчет,
	|	ТаблицаДокумента.Ссылка.ОперацияПоПлатежнымКартамШапка
	|	,ТаблицаДокумента.Ссылка.Касса
	|ПОМЕСТИТЬ ВременнаяТаблицаРасшифровкаПлатежа
	|ИЗ
	|	Документ.ОперацияПоПлатежнымКартам.РасшифровкаПлатежа КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
	|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.Ссылка.ВидОперации,
	|	ТаблицаДокумента.Ссылка.Контрагент,
	|	ТаблицаДокумента.Договор,
	|	ТаблицаДокумента.Ссылка.Статья,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|				И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|				И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|				И ТаблицаДокумента.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|				И ТаблицаДокумента.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДокумента.Заказ
	|	КОНЕЦ,
	|	ТаблицаДокумента.ПризнакАванса,
	|	ТаблицаДокумента.Ссылка.Дата,
	|	ТаблицаДокумента.Договор.ВалютаРасчетов,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументПланирования) = ТИП(Документ.ПоступлениеДСПлан)
	|				И ТаблицаДокумента.ДокументПланирования <> ЗНАЧЕНИЕ(Документ.ПоступлениеДСПлан.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ДокументПланирования
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументПланирования) = ТИП(Документ.ПеремещениеДСПлан)
	|				И ТаблицаДокумента.ДокументПланирования <> ЗНАЧЕНИЕ(Документ.ПеремещениеДСПлан.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ДокументПланирования
	|		КОГДА ТаблицаДокумента.СчетНаОплату.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.СчетНаОплату
	|		КОГДА ТаблицаДокумента.Заказ.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплату,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПокупателя,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПоставщику,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам,
	|	ТаблицаДокумента.Ссылка.ЭквайринговыйТерминал,
	|	ТаблицаДокумента.Ссылка.ЭквайринговыйТерминал.СчетУчета,
	|	ТаблицаДокумента.Ссылка.ЭквайринговыйТерминал.Эквайрер,
	|	ТаблицаДокумента.Ссылка.ВидПлатежнойКарты,
	|	ТаблицаДокумента.Ссылка.НомерПлатежнойКарты,
	|	ТаблицаДокумента.Ссылка.СсылочныйНомер,
	|	ТаблицаДокумента.Ссылка.НомерЧекаЭТ,
	|	ТаблицаДокумента.Ссылка.БанковскийСчет,
	|	ТаблицаДокумента.Ссылка.ОперацияПоПлатежнымКартамШапка
	|	,ТаблицаДокумента.Ссылка.Касса,
	|	ТаблицаДокумента.Ссылка.БанковскийСчет.СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ТаблицаДокумента.ВидОперации КАК ВидОперации,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.КассаККМ КАК КассаККМ,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаВал,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаКомиссииПоДоговору * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК Комиссия,
	|	ТаблицаДокумента.СуммаКомиссииПоДоговору КАК КомиссияВал,
	|	ТаблицаДокумента.БанковскийСчет.СчетУчета КАК БанковскийСчетСчетУчета,
	|	ТаблицаДокумента.ЭквайринговыйТерминал,
	|	ТаблицаДокумента.ЭквайринговыйТерминал.СчетУчета,
	|	ТаблицаДокумента.ЭквайринговыйТерминал.Эквайрер КАК Эквайрер,
	|	ТаблицаДокумента.ВидПлатежнойКарты,
	|	ТаблицаДокумента.НомерПлатежнойКарты
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.ОперацияПоПлатежнымКартам КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.ВыполнитьПакет();
	
	// Формирование таблиц движений по разделам учета.
	Если ДокументСсылкаОперацияПоПлатежнымКартам.ВидОперации = Перечисления.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя Тогда
		СформироватьТаблицаРасчетыСПокупателями(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства);
	Иначе
		СформироватьТаблицаРасчетыСПокупателямиВовзрат(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства);
	КонецЕсли;
	
	// Кассовый метод
	СформироватьТаблицаДоходыИРасходыНераспределенныеОплатаОтПокупателя(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыОтложенныеОплатаОтПокупателя(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыКассовыйМетодОплатаОтПокупателяЭквайринг(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства);
	// Конец Кассовый метод
	
	СформироватьТаблицаПлатежныйКалендарь(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства);
	
	СформироватьТаблицаОплатаСчетовИЗаказов(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства);
	
	СформироватьТаблицаУправленческий(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства);
	
	// Эквайринг
	СформироватьТаблицаОплатаПлатежнымиКартами(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства);
	СформироватьРасчетыПоЭквайрингу(ДокументСсылкаОперацияПоПлатежнымКартам, СтруктураДополнительныеСвойства);
	// Конец Эквайринг
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаОперацияПоПлатежнымКартам, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если НЕ Константы.КонтролироватьОстаткиПриПроведении.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы содержат записи, необходимо выполнить контроль
	// отрицательных остатков.
	Если СтруктураВременныеТаблицы.ДвиженияДенежныеСредстваИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыПоЭквайрингуИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыСПокупателямиИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияСуммовойУчетВРозницеИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияДенежныеСредстваВКассахККМИзменение Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОперацияПоПлатежнымКартам.ВидОперации
		|ПОМЕСТИТЬ Шапка
		|ИЗ
		|	Документ.ОперацияПоПлатежнымКартам КАК ОперацияПоПлатежнымКартам
		|ГДЕ
		|	ОперацияПоПлатежнымКартам.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыПоЭквайрингуИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.ВидОперацииЭквайринга КАК ТипДенежныхСредствПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.ЭквайринговыйТерминал.БанковскийСчетЭквайринг.ВалютаДенежныхСредств КАК ВалютаПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.ЭквайринговыйТерминал КАК ЭквайринговыйТерминалПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.ДатаПлатежа КАК ДатаПлатежаПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.Документ КАК ДокументПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.Заказ КАК ЗаказПредставление,
		|	ИСТИНА КАК ДвиженияДенежныхДокументов,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияПередЗаписью КАК КомиссияПередЗаписью,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияПриЗаписи КАК КомиссияПриЗаписи,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияИзменение КАК КомиссияИзменение,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияВалПередЗаписью КАК КомиссияВалПередЗаписью,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияВалПриЗаписи КАК КомиссияВалПриЗаписи,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияВалИзменение КАК КомиссияВалИзменение,
		|	ВЫБОР
		|		КОГДА ДвиженияРасчетыПоЭквайрингуИзменение.ВидОперацииЭквайринга = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
		|			ТОГДА ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.СуммаВалОстаток, 0) + ДвиженияРасчетыПоЭквайрингуИзменение.СуммаВалПриЗаписи
		|		ИНАЧЕ ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.СуммаВалОстаток, 0) - ДвиженияРасчетыПоЭквайрингуИзменение.СуммаВалПриЗаписи
		|	КОНЕЦ КАК СуммаОстаткаЗадолженности,
		|	ВЫБОР
		|		КОГДА ДвиженияРасчетыПоЭквайрингуИзменение.ВидОперацииЭквайринга = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
		|			ТОГДА ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток, 0) + ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияВалПриЗаписи
		|		ИНАЧЕ ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток, 0) - ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияВалПриЗаписи
		|	КОНЕЦ КАК СуммаОстаткаКомиссии,
		|	ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияОстаток, 0) КАК КомиссияОстаток,
		|	ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток, 0) КАК КомиссияВалОстаток,
		|	РасчетыПоЭквайрингуОстатки.ВидПлатежнойКарты КАК ВидПлатежнойКартыПредставление,
		|	РасчетыПоЭквайрингуОстатки.НомерПлатежнойКарты КАК НомерПлатежнойКартыПредставление
		|ИЗ
		|	ДвиженияРасчетыПоЭквайрингуИзменение КАК ДвиженияРасчетыПоЭквайрингуИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоЭквайрингу.Остатки(&МоментКонтроля, ) КАК РасчетыПоЭквайрингуОстатки
		|		ПО ДвиженияРасчетыПоЭквайрингуИзменение.ВидОперацииЭквайринга = РасчетыПоЭквайрингуОстатки.ВидОперацииЭквайринга
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.Организация = РасчетыПоЭквайрингуОстатки.Организация
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.ЭквайринговыйТерминал = РасчетыПоЭквайрингуОстатки.ЭквайринговыйТерминал
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.ДатаПлатежа = РасчетыПоЭквайрингуОстатки.ДатаПлатежа
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.Документ = РасчетыПоЭквайрингуОстатки.Документ
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.Заказ = РасчетыПоЭквайрингуОстатки.Заказ
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.ВидПлатежнойКарты = РасчетыПоЭквайрингуОстатки.ВидПлатежнойКарты
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.НомерПлатежнойКарты = РасчетыПоЭквайрингуОстатки.НомерПлатежнойКарты
		|ГДЕ
		|	(ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.СуммаВалОстаток, 0) < 0
		|			ИЛИ ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыСПокупателямиИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыСПокупателямиИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Контрагент КАК КонтрагентПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Договор КАК ДоговорПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Договор.ВалютаРасчетов КАК ВалютаПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Документ КАК ДокументПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Заказ КАК ЗаказПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов КАК ТипРасчетовПредставление,
		|	ИСТИНА КАК ДвиженияДенежныхДокументов,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаОстаткаЗадолженности,
		|	-(ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0)) КАК СуммаНепогашенныхАвансов,
		|	ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов КАК ТипРасчетов
		|ИЗ
		|	ДвиженияРасчетыСПокупателямиИзменение КАК ДвиженияРасчетыСПокупателямиИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПокупателями.Остатки(&МоментКонтроля, ) КАК РасчетыСПокупателямиОстатки
		|		ПО ДвиженияРасчетыСПокупателямиИзменение.Организация = РасчетыСПокупателямиОстатки.Организация
		|			И ДвиженияРасчетыСПокупателямиИзменение.Контрагент = РасчетыСПокупателямиОстатки.Контрагент
		|			И ДвиженияРасчетыСПокупателямиИзменение.Договор = РасчетыСПокупателямиОстатки.Договор
		|			И ДвиженияРасчетыСПокупателямиИзменение.Документ = РасчетыСПокупателямиОстатки.Документ
		|			И ДвиженияРасчетыСПокупателямиИзменение.Заказ = РасчетыСПокупателямиОстатки.Заказ
		|			И ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов = РасчетыСПокупателямиОстатки.ТипРасчетов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Шапка КАК Шапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
		|				ТОГДА ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) > 0
		|			ИНАЧЕ ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) < 0
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияСуммовойУчетВРозницеИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияСуммовойУчетВРозницеИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница.РозничныйВидЦен.ВалютаЦены КАК ВалютаПредставление,
		|	ЕСТЬNULL(СуммовойУчетВРозницеОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалИзменение + ЕСТЬNULL(СуммовойУчетВРозницеОстатки.СуммаВалОстаток, 0) КАК ОстатокВРознице,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СебестоимостьПередЗаписью КАК СебестоимостьПередЗаписью,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СебестоимостьПриЗаписи КАК СебестоимостьПриЗаписи,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СебестоимостьИзменение КАК СебестоимостьИзменение
		|ИЗ
		|	ДвиженияСуммовойУчетВРозницеИзменение КАК ДвиженияСуммовойУчетВРозницеИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СуммовойУчетВРознице.Остатки(&МоментКонтроля, ) КАК СуммовойУчетВРозницеОстатки
		|		ПО ДвиженияСуммовойУчетВРозницеИзменение.Организация = СуммовойУчетВРозницеОстатки.Организация
		|			И ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница = СуммовойУчетВРозницеОстатки.СтруктурнаяЕдиница
		|ГДЕ
		|	ЕСТЬNULL(СуммовойУчетВРозницеОстатки.СуммаВалОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.КассаККМ КАК КассаККМПредставление,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.КассаККМ.ВалютаДенежныхСредств КАК ВалютаПредставление,
		|	ЕСТЬNULL(ДенежныеСредстваВКассахККМОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(ДенежныеСредстваВКассахККМОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаВалИзменение + ЕСТЬNULL(ДенежныеСредстваВКассахККМОстатки.СуммаВалОстаток, 0) КАК ОстатокДенежныхСредств,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаВалИзменение КАК СуммаВалИзменение
		|ИЗ
		|	ДвиженияДенежныеСредстваВКассахККМИзменение КАК ДвиженияДенежныеСредстваВКассахККМИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваВКассахККМ.Остатки(&МоментКонтроля, ) КАК ДенежныеСредстваВКассахККМОстатки
		|		ПО ДвиженияДенежныеСредстваВКассахККМИзменение.Организация = ДенежныеСредстваВКассахККМОстатки.Организация
		|			И ДвиженияДенежныеСредстваВКассахККМИзменение.КассаККМ = ДенежныеСредстваВКассахККМОстатки.КассаККМ
		|ГДЕ
		|	ЕСТЬNULL(ДенежныеСредстваВКассахККМОстатки.СуммаВалОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОперацияПоПлатежнымКартам);
		Запрос.УстановитьПараметр("ПоступлениеОплатыОтПокупателя", Перечисления.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя);
		Запрос.УстановитьПараметр("ВозвратОплатыПокупателю", Перечисления.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[1].Пустой()
			ИЛИ НЕ МассивРезультатов[2].Пустой()
			ИЛИ НЕ МассивРезультатов[3].Пустой()
			ИЛИ НЕ МассивРезультатов[4].Пустой() Тогда
			ДокументОбъектПоступлениеВКассу = ДокументСсылкаОперацияПоПлатежнымКартам.ПолучитьОбъект()
		КонецЕсли;
		
		// Отрицательный остаток по расчетам по эквайрингу.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструРасчетыПоЭквайрингу(ДокументОбъектПоступлениеВКассу, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по расчетам с покупателями.
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструРасчетыСПокупателями(ДокументОбъектПоступлениеВКассу, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по суммовому учету в рознице.
		Если НЕ МассивРезультатов[3].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструСуммовойУчетВРознице(ДокументОбъектПоступлениеВКассу, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по кассе ККМ.
		Если НЕ МассивРезультатов[4].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструДенежныеСредстваВКассахККМ(ДокументОбъектПоступлениеВКассу, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует поле в том числе для печатной формы.
//
// Параметры:      
//	ВыборкаДляПечати - Выборка из результата запроса.
//
// Возвращаемое значение: 
//  Строка       - текст поля "в том числе".
//
Функция ПолучитьТекстВТомЧисле(ВыборкаДляПечати, РасшифровкаПлатежа = 21)
	
	ТабНДС = РасшифровкаПлатежа.Выгрузить();

	ТабНДС.Свернуть("СтавкаНДС", "СуммаНДС");

	ТекстСуммаНДС = "";
	
	Если ТабНДС.Количество() > 0 Тогда
		
		Для каждого СтрокаНДС ИЗ ТабНДС цикл
			ТекстСуммаНДС = ТекстСуммаНДС
						  + Символы.ПС
						  + "НДС ("
						  + ?(НЕ ЗначениеЗаполнено(СтрокаНДС.СтавкаНДС),
							"без налога",
							СтрокаНДС.СтавкаНДС)
						  + ") "
						  + Формат(СтрокаНДС.СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00")
						  + " "
						  + ВыборкаДляПечати.ВалютаПредставление;
		КонецЦикла;
		
	Иначе
		ТекстСуммаНДС = ТекстСуммаНДС
					  + Символы.ПС
					  + "НДС (без налога) "
					  + Формат(0, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00")
					  + " "
					  + ВыборкаДляПечати.ВалютаПредставление;
	КонецЕсли;

	ТекстСуммаНДС = Сред(ТекстСуммаНДС, 2);
	
	Возврат ТекстСуммаНДС;
	
КонецФункции

// Функция формирует поле СуммаРубКоп для печатной формы.
//
Функция РубКоп(Сумма)
	
	Руб = Цел(Сумма);
	Коп = ОКР(100 * (Сумма - Руб), 0, 1);
	СуммаРубКоп = "" + Руб + " руб. " + Цел(Коп/10) + (Коп - 10 * Цел(Коп / 10)) + " коп.";
	Возврат СуммаРубКоп;
	
КонецФункции // РубКоп()

// Функция формирует печатную форму документа по указанному макету.
//
// Параметры:
//	ТабличныйДокумент - ТабличныйДокумент в который будет выводится печатная
//				   форма.
//  ИмяМакета    - Строка, имя макета печатной формы.
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ПоступлениеВКассу";
	
	ПервыйДокумент = Истина;
	
	Для каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
		
		Если ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя Тогда
			СтрокаКредитСубСчет = "ПоступлениеВКассу.Контрагент.СчетУчетаРасчетовСПокупателем.Код КАК КорСчет,
								  |ПоступлениеВКассу.Контрагент.СчетУчетаАвансовПокупателя.Код КАК КорСчетАвансов";
		Иначе
			СтрокаКредитСубСчет = "ПоступлениеВКассу.Контрагент.СчетУчетаРасчетовСПоставщиком.Код КАК КорСчет,
								  |ПоступлениеВКассу.Контрагент.СчетУчетаАвансовПоставщику.Код КАК КорСчетАвансов";
		КонецЕсли;
		                                                                  
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеВКассу.Ссылка КАК Ссылка,
		|	ПоступлениеВКассу.Номер КАК Номер,
		|	ПоступлениеВКассу.Дата КАК ДатаДокумента,
		|	ПоступлениеВКассу.Организация КАК Организация,
		|	ПоступлениеВКассу.Организация.ЮридическоеФизическоеЛицо КАК ЮрФизЛицо,
		|	ПоступлениеВКассу.Организация.Префикс КАК Префикс,
		|	ПоступлениеВКассу.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
		|	ПоступлениеВКассу.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
		|	ПоступлениеВКассу.Касса.СчетУчета.Код КАК КодДебета,
		|	ПоступлениеВКассу.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеВКассу.ВалютаДенежныхСредств) КАК ВалютаПредставление,
		|	ПоступлениеВКассу.ПринятоОт КАК ПринятоОт,
		|	ПоступлениеВКассу.Основание КАК Основание,
		|	ПоступлениеВКассу.Приложение КАК Приложение,
		|	ПоступлениеВКассу.СуммаДокумента КАК СуммаДокумента,
		|	" + СтрокаКредитСубСчет + "
		|ИЗ
		|	Документ.ОперацияПоПлатежнымКартам КАК ПоступлениеВКассу
		|ГДЕ
		|	ПоступлениеВКассу.Ссылка = &ТекущийДокумент";
		
		ВыборкаДляПечати = Запрос.Выполнить().Выбрать();
		ВыборкаДляПечати.Следующий();
		
		Валютный = ВыборкаДляПечати.ВалютаДенежныхСредств <> Константы.НациональнаяВалюта.Получить();
		
		// Если ВыборкаДляПечати.ДатаДокумента < '20140101' Тогда // Изменения в проекте указания кассовых операций
		Если Истина Тогда
			ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеВКассу_ПоступлениеВКассу";
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОперацияПоПлатежнымКартам.ПФ_MXL_ПКО");
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДляПечати);
			ОбластьМакета.Параметры.Сумма = Формат(ВыборкаДляПечати.СуммаДокумента, "ЧЦ=15; ЧДЦ=2") + ?(Валютный, " " + СокрЛП(ВыборкаДляПечати.ВалютаДенежныхСредств), "");
			ОбластьМакета.Параметры.СубСчет = СокрЛП(ВыборкаДляПечати.КорСчет) + ?(ЗначениеЗаполнено(ВыборкаДляПечати.КорСчетАвансов), "," + СокрЛП(ВыборкаДляПечати.КорСчетАвансов), "");
			Руководители = УправлениеНебольшойФирмойСервер.ОтветственныеЛицаОрганизационнойЕдиницы(ВыборкаДляПечати.Организация, ВыборкаДляПечати.ДатаДокумента);
			ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Руководители.ФИОГлавногоБухгалтера;
			ОбластьМакета.Параметры.ФИОКассира = Руководители.ФИОКассира;
		Иначе
			ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеВКассу_ПоступлениеВКассу2014";
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОперацияПоПлатежнымКартам.ПФ_MXL_ПКО2014");
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДляПечати);
			ПринятоОт = СокрЛП(ВыборкаДляПечати.ПринятоОт);
			Если СтрНайти(ПринятоОт, " ") > 0 И СтрНайти(ПринятоОт, """") = 0 Тогда
				ОбластьМакета.Параметры.ФИОВносителя = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ПринятоОт);
			КонецЕсли;
			Если ВыборкаДляПечати.ЮрФизЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
				ОбластьМакета.Параметры.КодДебета = "";
				ОбластьМакета.Параметры.СубСчет   = "";
			Иначе
				ОбластьМакета.Параметры.СубСчет = СокрЛП(ВыборкаДляПечати.КорСчет) + ?(ЗначениеЗаполнено(ВыборкаДляПечати.КорСчетАвансов), "," + СокрЛП(ВыборкаДляПечати.КорСчетАвансов), "");
			КонецЕсли;
			Руководители = УправлениеНебольшойФирмойСервер.ОтветственныеЛицаОрганизационнойЕдиницы(ВыборкаДляПечати.Организация, ВыборкаДляПечати.ДатаДокумента);
			ОбластьМакета.Параметры.ДолжностьГлавногоБухгалтера = Руководители.ГлавныйБухгалтерДолжность;
			ОбластьМакета.Параметры.ДолжностьКассира            = Руководители.КассирДолжность;
			ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Руководители.ФИОГлавногоБухгалтера);
			ОбластьМакета.Параметры.ФИОКассира = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Руководители.ФИОКассира);
		Конецесли;
		
		Если ВыборкаДляПечати.ДатаДокумента < Дата('20110101') Тогда
			НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(ВыборкаДляПечати.Номер, ВыборкаДляПечати.Префикс);
		Иначе
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДляПечати.Номер, Истина, Истина);
		КонецЕсли;
		
		ОбластьМакета.Параметры.СуммаРубКоп = ?(Валютный, Формат(ВыборкаДляПечати.СуммаДокумента, "ЧЦ=15; ЧДЦ=2") + " " + СокрЛП(ВыборкаДляПечати.ВалютаДенежныхСредств), РубКоп(ВыборкаДляПечати.СуммаДокумента));
		ОбластьМакета.Параметры.НомерДокумента = НомерДокумента;
		
		ОбластьМакета.Параметры.СуммаПрописью = УправлениеНебольшойФирмойСервер.ФорматироватьСуммуПрописьюПлатежногоДокумента(
			ВыборкаДляПечати.СуммаДокумента,
			ВыборкаДляПечати.ВалютаДенежныхСредств,
			Ложь
		);
		
		ОбластьМакета.Параметры.ВТомЧисле = ПолучитьТекстВТомЧисле(ВыборкаДляПечати, ТекущийДокумент.РасшифровкаПлатежа);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляПечати.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПКО") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПКО", "Приходный кассовый ордер", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	УправлениеНебольшойФирмойСервер.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли