#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Процедура заполняет расшифровку платежа.
//
Процедура ЗаполнитьРасшифровкуПлатежа() Экспорт
	
	Компания = УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация);
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = Организация.СтавкаНДСПоУмолчанию;
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
	Иначе
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
	КонецЕсли;
	
	СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ВалютаДенежныхСредств));
	
	КурсВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Курс
	);
	КратностьВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Кратность
	);
	
	// Заполнение расшифровки расчетов по умолчанию.
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	РасчетыСПокупателямиОстатки.Организация КАК Организация,
	|	РасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|	РасчетыСПокупателямиОстатки.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПокупателямиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	РасчетыСПокупателямиОстатки.ТипРасчетов КАК ТипРасчетов,
	|	СУММА(РасчетыСПокупателямиОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(РасчетыСПокупателямиОстатки.СуммаВалОстаток) КАК СуммаВалОстаток,
	|	РасчетыСПокупателямиОстатки.Документ.Дата КАК ДокументДата,
	|	СУММА(ВЫРАЗИТЬ(РасчетыСПокупателямиОстатки.СуммаВалОстаток * КурсыВалютРасчетов.Курс * КурсыВалютДокумента.Кратность / (КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаВалДокумента,
	|	КурсыВалютДокумента.Курс КАК КурсДенежныхСредств,
	|	КурсыВалютДокумента.Кратность КАК КратностьДенежныхСредств,
	|	КурсыВалютРасчетов.Курс КАК Курс,
	|	КурсыВалютРасчетов.Кратность КАК Кратность
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыСПокупателямиОстатки.Организация КАК Организация,
	|		РасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|		РасчетыСПокупателямиОстатки.Договор КАК Договор,
	|		РасчетыСПокупателямиОстатки.Документ КАК Документ,
	|		РасчетыСПокупателямиОстатки.Заказ КАК Заказ,
	|		РасчетыСПокупателямиОстатки.ТипРасчетов КАК ТипРасчетов,
	|		ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|		ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями.Остатки(
	|				,
	|				Организация = &Организация
	|					И Контрагент = &Контрагент
	|					// ТекстДоговорОтбор
	|					И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПокупателямиОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаРасчетыСПокупателями.Организация,
	|		ДвиженияДокументаРасчетыСПокупателями.Контрагент,
	|		ДвиженияДокументаРасчетыСПокупателями.Договор,
	|		ДвиженияДокументаРасчетыСПокупателями.Документ,
	|		ДвиженияДокументаРасчетыСПокупателями.Заказ,
	|		ДвиженияДокументаРасчетыСПокупателями.ТипРасчетов,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.Сумма, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.Сумма, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.СуммаВал, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.СуммаВал, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями КАК ДвиженияДокументаРасчетыСПокупателями
	|	ГДЕ
	|		ДвиженияДокументаРасчетыСПокупателями.Регистратор = &Ссылка
	|		И ДвиженияДокументаРасчетыСПокупателями.Период <= &Период
	|		И ДвиженияДокументаРасчетыСПокупателями.Организация = &Организация
	|		И ДвиженияДокументаРасчетыСПокупателями.Контрагент = &Контрагент
	|		И ДвиженияДокументаРасчетыСПокупателями.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПокупателямиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютДокумента
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсыВалютРасчетов
	|		ПО РасчетыСПокупателямиОстатки.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|ГДЕ
	|	РасчетыСПокупателямиОстатки.СуммаВалОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПокупателямиОстатки.Организация,
	|	РасчетыСПокупателямиОстатки.Контрагент,
	|	РасчетыСПокупателямиОстатки.Договор,
	|	РасчетыСПокупателямиОстатки.Документ,
	|	РасчетыСПокупателямиОстатки.Заказ,
	|	РасчетыСПокупателямиОстатки.ТипРасчетов,
	|	РасчетыСПокупателямиОстатки.Документ.Дата,
	|	КурсыВалютДокумента.Курс,
	|	КурсыВалютДокумента.Кратность,
	|	КурсыВалютРасчетов.Курс,
	|	КурсыВалютРасчетов.Кратность,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПокупателямиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.Заказпокупателя.ПустаяСсылка)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументДата";
		
	Запрос.УстановитьПараметр("Организация", Компания);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Валюта", ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	НуженОтборПоДоговорам = УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов();
	СписокВидовДоговоров = Справочники.ДоговорыКонтрагентов.ПолучитьСписокВидовДоговораДляДокумента(Ссылка, ВидОперации);
	Если НуженОтборПоДоговорам
	   И Контрагент.ВестиРасчетыПоДоговорам Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "// ТекстДоговорОтбор", "И Договор.ВидДоговора В (&СписокВидовДоговоров)");
		Запрос.УстановитьПараметр("СписокВидовДоговоров", СписокВидовДоговоров);
	КонецЕсли;
	
	ДоговорПоУмолчанию = Справочники.ДоговорыКонтрагентов.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(
		Контрагент,
		Организация,
		СписокВидовДоговоров
	);
	
	СтруктураКурсВалютыДоговораПоУмолчанию = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(
		Дата,
		Новый Структура("Валюта", ДоговорПоУмолчанию.ВалютаРасчетов)
	);
	
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	
	РасшифровкаПлатежа.Очистить();
	
	СуммаОсталосьРаспределить = СуммаДокумента;
	
	Пока СуммаОсталосьРаспределить > 0 Цикл
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
			
			Если ВыборкаРезультатаЗапроса.СуммаВалДокумента <= СуммаОсталосьРаспределить Тогда // сумма остатка меньше или равна чем осталось распределить
				
				НоваяСтрока.СуммаРасчетов = ВыборкаРезультатаЗапроса.СуммаВалОстаток;
				НоваяСтрока.СуммаПлатежа = ВыборкаРезультатаЗапроса.СуммаВалДокумента;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = СуммаОсталосьРаспределить - ВыборкаРезультатаЗапроса.СуммаВалДокумента;
				
			Иначе // сумма остатка больше чем нужно распределить
				
				НоваяСтрока.СуммаРасчетов = УправлениеНебольшойФирмойСервер.ПересчитатьИзВалютыВВалюту(
					СуммаОсталосьРаспределить,
					ВыборкаРезультатаЗапроса.КурсДенежныхСредств,
					ВыборкаРезультатаЗапроса.Курс,
					ВыборкаРезультатаЗапроса.КратностьДенежныхСредств,
					ВыборкаРезультатаЗапроса.Кратность
				);
				НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = 0;
				
			КонецЕсли;
			
		Иначе
			
			НоваяСтрока.Договор = ДоговорПоУмолчанию;
			НоваяСтрока.Курс = ?(
				СтруктураКурсВалютыДоговораПоУмолчанию.Курс = 0,
				1,
				СтруктураКурсВалютыДоговораПоУмолчанию.Курс
			);
			НоваяСтрока.Кратность = ?(
				СтруктураКурсВалютыДоговораПоУмолчанию.Кратность = 0,
				1,
				СтруктураКурсВалютыДоговораПоУмолчанию.Кратность
			);
			НоваяСтрока.СуммаРасчетов = УправлениеНебольшойФирмойСервер.ПересчитатьИзВалютыВВалюту(
				СуммаОсталосьРаспределить,
				Курс,
				НоваяСтрока.Курс,
				Кратность,
				НоваяСтрока.Кратность
			);
			НоваяСтрока.ПризнакАванса = Истина;
			НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
			НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
			НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
			СуммаОсталосьРаспределить = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		РасшифровкаПлатежа.Добавить();
		РасшифровкаПлатежа[0].СуммаПлатежа = СуммаДокумента;
	КонецЕсли;
	
	СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьРасшифровкуПлатежа()

// Обработчик заполнения на основании документа ОперацияПоПлатежнымКартам.
//
// Параметры:
//	ДокументСсылкаОперацияПоПлатежнымКартам - ДокументСсылка.ОперацияПоПлатежнымКартам.
//	
Процедура ЗаполнитьПоОперацияПоПлатежнымКартам(ДокументСсылкаОперацияПоПлатежнымКартам) Экспорт
	
	ДокументСсылкаОперацияПоПлатежнымКартамВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
	ДокументСсылкаОперацияПоПлатежнымКартам,
	"ВидОперации");
	
	Если ДокументСсылкаОперацияПоПлатежнымКартамВидОперации = Перечисления.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю Тогда
		ВызватьИсключение НСтр("ru = 'Эквайринговая операция не может вводиться на основании эквайринговой операции на возврат'");
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументСсылкаОперацияПоПлатежнымКартам, , "Номер, Дата, РасшифровкаПлатежа, ДополнительныеРеквизиты, ОперацияПоПлатежнымКартамШапка, НомерЧекаККМ");
	РасшифровкаПлатежа.Загрузить(ДокументСсылкаОперацияПоПлатежнымКартам.РасшифровкаПлатежа.Выгрузить());
	ДополнительныеРеквизиты.Загрузить(ДокументСсылкаОперацияПоПлатежнымКартам.ДополнительныеРеквизиты.Выгрузить());
	Если ДокументСсылкаОперацияПоПлатежнымКартамВидОперации = Перечисления.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя Тогда
		ОперацияПоПлатежнымКартамШапка = ДокументСсылкаОперацияПоПлатежнымКартам;
		Для Каждого ТекущаяСтрока Из РасшифровкаПлатежа Цикл
			Если Не ЗначениеЗаполнено(ТекущаяСтрока.Документ) Тогда
				ТекущаяСтрока.Документ = ДокументСсылкаОперацияПоПлатежнымКартам;
				ТекущаяСтрока.ПризнакАванса = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ВидОперации = Перечисления.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю;
	
КонецПроцедуры

// Получает договор по умолчанить в зависимости от способа ведения расчетов.
//
Функция ПолучитьДоговорПоУмолчанию(Документ, Контрагент, Организация, ВидОперации)
	
	Если НЕ Контрагент.ВестиРасчетыПоДоговорам Тогда
		Возврат Контрагент.ДоговорПоУмолчанию;
	КонецЕсли;
	
	МенеджерСправочника = Справочники.ДоговорыКонтрагентов;
	
	СписокВидовДоговоров = МенеджерСправочника.ПолучитьСписокВидовДоговораДляДокумента(Документ, ВидОперации);
	ДоговорПоУмолчанию = МенеджерСправочника.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(Контрагент, Организация, СписокВидовДоговоров);
	
	Возврат ДоговорПоУмолчанию;
	
КонецФункции

// Обработчик заполнения на основании переданной структуры.
//
// Параметры:
//  ДанныеЗаполнения - Структура.
//
Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("Основание") Тогда
		Если ДанныеЗаполнения.Свойство("УчитыватьОстатки") 
			И ТипЗнч(ДанныеЗаполнения.Основание)= Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьПоЗаказуПокупателяСУчетомОстатковКОплате(ДанныеЗаполнения.Основание);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание)= Тип("ДокументСсылка.СчетНаОплату") Тогда
			ЗаполнитьПоСчетНаОплату(ДанныеЗаполнения, ДанныеЗаполнения.НомерСтроки);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание)= Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьПоЗаказПокупателя(ДанныеЗаполнения, ДанныеЗаполнения.НомерСтроки);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ПоступлениеДСПлан") Тогда
			ЗаполнитьПоПоступлениеДСПлан(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
		КонецЕсли;
	ИначеЕсли ДанныеЗаполнения.Свойство("Документ") Тогда
		Если ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.СчетНаОплату") Тогда
			ЗаполнитьПоСчетНаОплату(ДанныеЗаполнения.Документ, Неопределено, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьПоЗаказПокупателя(ДанныеЗаполнения.Документ, Неопределено, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ПоступлениеДСПлан") Тогда
			ЗаполнитьПоПоступлениеДСПлан(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ПеремещениеДСПлан") Тогда
			ЗаполнитьПоПеремещениеДСПлан(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ЧекККМ") Тогда
			ЗаполнитьПоЧекККМ(ДанныеЗаполнения.Документ, ДанныеЗаполнения.НомерСтроки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик заполнения на основании документа ЧекККМ.
//
// Параметры:
//	ДокументСсылкаЧекККМ - ДокументСсылка.ЧекККМ.
//	
Процедура ЗаполнитьПоЧекККМ(ДокументСсылкаЧекККМ, НомерСтроки = 0)
	
	Если Не ЗначениеЗаполнено(ДокументСсылкаЧекККМ) ИЛИ ДокументСсылкаЧекККМ.ОплатаПлатежнымиКартами.Количество() <= НомерСтроки Тогда
		Возврат;
	КонецЕсли;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = Организация.СтавкаНДСПоУмолчанию;
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
	Иначе
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
	КонецЕсли;
	
	ТекущаяСтрокаОплатыКартой = ДокументСсылкаЧекККМ.ОплатаПлатежнымиКартами[НомерСтроки];
	
	Если ТипЗнч(ДокументСсылкаЧекККМ) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументСсылкаЧекККМ, "ЭквайринговыйТерминал");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТекущаяСтрокаОплатыКартой, "ВидПлатежнойКарты, НомерПлатежнойКарты");
		СуммаДокумента = ТекущаяСтрокаОплатыКартой.Сумма;
		
	Иначе
		
		РасшифровкаПлатежа.Очистить();
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументСсылкаЧекККМ, "ЭквайринговыйТерминал");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТекущаяСтрокаОплатыКартой, "ВидПлатежнойКарты, НомерПлатежнойКарты, СсылочныйНомер, НомерЧекаЭТ");
		
		ОперацияПоПлатежнымКартамШапка = ДокументСсылкаЧекККМ;
		
		ДоговорПоУмолчанию = ПолучитьДоговорПоУмолчанию(Ссылка, Контрагент, Организация, ВидОперации);
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		НоваяСтрока.Договор = ДоговорПоУмолчанию;
		
		Если НоваяСтрока.Договор.Пустая() Тогда
			НоваяСтрока.СуммаПлатежа = ТекущаяСтрокаОплатыКартой.Сумма;
			НоваяСтрока.СуммаРасчетов = ТекущаяСтрокаОплатыКартой.Сумма;
			
			НоваяСтрока.Курс = 1;
			НоваяСтрока.Кратность = 1;
		Иначе
			НоваяСтрока.СуммаПлатежа = ТекущаяСтрокаОплатыКартой.Сумма;
			
			ДоговорВалютаКурсКратность = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата,
				Новый Структура("Валюта", НоваяСтрока.Договор.ВалютаРасчетов)
			);
			
			НоваяСтрока.Курс = ?(ДоговорВалютаКурсКратность.Курс = 0, 1, ДоговорВалютаКурсКратность.Курс);
			НоваяСтрока.Кратность = ?(ДоговорВалютаКурсКратность.Кратность = 0, 1, ДоговорВалютаКурсКратность.Кратность);
			
			НоваяСтрока.СуммаРасчетов = ТекущаяСтрокаОплатыКартой.Сумма * НоваяСтрока.Кратность / НоваяСтрока.Курс;
		КонецЕсли;
		
		НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
		НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
		
		СуммаДокумента = ТекущаяСтрокаОплатыКартой.Сумма;
		
	КонецЕсли;
	
	ВидОперации = Перечисления.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю;
	
КонецПроцедуры

// Обработчик заполнения на основании документа ПриходнаяНакладная.
//
// Параметры:
//	ДокументСсылкаПриходнаяНакладная - ДокументСсылка.ПриходнаяНакладная.
//	
Процедура ЗаполнитьПоПриходнаяНакладная(ДокументСсылкаПриходнаяНакладная) Экспорт
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылкаПриходнаяНакладная, "ВидОперации")
		<> Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя Тогда
		ВызватьИсключение НСтр("ru = 'Эквайринговую операцию можно вводить только на основании приходной накладной на возврат от покупателя'");
	КонецЕсли;
	
	ВидОперации = Перечисления.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю) КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.Прочее) КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию КАК Касса,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|						ТОГДА ВложенныйЗапрос.ЗаказПокупателя
	|					ИНАЧЕ ВложенныйЗапрос.ЗаказПоставщику
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							И ВложенныйЗапрос.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					ИНАЧЕ ВложенныйЗапрос.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаРасчетов, 0)) КАК СуммаРасчетов,
	|	ВложенныйЗапрос.Курс КАК Курс,
	|	ВложенныйЗапрос.Кратность КАК Кратность,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаПлатежа, 0)) КАК СуммаПлатежа,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|						ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПокупателя)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|				ИНАЧЕ ТаблицаДокумента.Заказ
	|			КОНЕЦ КАК ЗаказПоставщику,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|						ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ИНАЧЕ ТаблицаДокумента.Заказ
	|			КОНЕЦ КАК ЗаказПокупателя,
	|			ТаблицаДокумента.Ссылка.ДокументОснование КАК ДокументОснование,
	|			&Ссылка КАК Документ,
	|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ТаблицаДокумента.Ссылка.Кратность / (ТаблицаДокумента.Ссылка.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Курс
	|				ИНАЧЕ КурсыВалютыРасчетов.Курс
	|			КОНЕЦ КАК Курс,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Кратность
	|				ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|			КОНЕЦ КАК Кратность,
	|			ТаблицаДокумента.Всего КАК СуммаПлатежа,
	|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|			ТаблицаДокумента.СуммаНДС КАК СуммаНДС
	|		ИЗ
	|			Документ.ПриходнаяНакладная.Запасы КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|						&Дата,
	|						Валюта В
	|							(ВЫБРАТЬ
	|								КонстантаНациональнаяВалюта.Значение
	|							ИЗ
	|								Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|				ПО (ИСТИНА)
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта,
	|			Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаДокумента.ЗаказПоставщику,
	|			ТаблицаДокумента.Заказ,
	|			ТаблицаДокумента.Ссылка.ДокументОснование,
	|			&Ссылка,
	|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ТаблицаДокумента.Ссылка.Кратность / (ТаблицаДокумента.Ссылка.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)),
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Курс
	|				ИНАЧЕ КурсыВалютыРасчетов.Курс
	|			КОНЕЦ,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Кратность
	|				ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|			КОНЕЦ,
	|			ТаблицаДокумента.Всего,
	|			ТаблицаДокумента.СтавкаНДС,
	|			ТаблицаДокумента.СуммаНДС
	|		ИЗ
	|			Документ.ПриходнаяНакладная.Расходы КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|						&Дата,
	|						Валюта В
	|							(ВЫБРАТЬ
	|								КонстантаНациональнаяВалюта.Значение
	|							ИЗ
	|								Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|				ПО (ИСТИНА)
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта,
	|			Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.Ссылка = ВложенныйЗапрос.Документ
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|						ТОГДА ВложенныйЗапрос.ЗаказПокупателя
	|					ИНАЧЕ ВложенныйЗапрос.ЗаказПоставщику
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ШапкаДокумента.Договор,
	|	ВложенныйЗапрос.Документ,
	|	ВложенныйЗапрос.Курс,
	|	ВложенныйЗапрос.Кратность,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							И ВложенныйЗапрос.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					ИНАЧЕ ВложенныйЗапрос.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПриходнаяНакладная);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	РасшифровкаПлатежа.Очистить();
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоПриходнаяНакладная()

// Обработчик заполнения на основании документа ПоступлениеДСПлан.
//
// Параметры:
//	ДокументСсылкаПоступлениеДСПлан - ДокументСсылка.ПоступлениеДСПлан.
//	
Процедура ЗаполнитьПоПоступлениеДСПлан(ДокументСсылкаПоступлениеДСПлан, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеДСПлан);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Сумма", Сумма);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ТаблицаДокумента.БанковскийСчет
		|		КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ КАК БанковскийСчет,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Договор КАК Договор,
		|	&Сумма КАК СуммаДокумента,
		|	&Сумма КАК СуммаПлатежа,
		|	ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ТаблицаДокумента.ВалютаДокумента <> ТаблицаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.ПоступлениеДСПлан КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
		|			БанковскиеСчета.Владелец КАК Владелец,
		|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
		|		ИЗ
		|			Документ.ПоступлениеДСПлан КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
		|		ПО ТаблицаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
		|			И ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ТаблицаДокумента.БанковскийСчет
		|		КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ КАК БанковскийСчет,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Договор КАК Договор,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
		|	ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * ВЫБОР
		|			КОГДА ТаблицаДокумента.ВалютаДокумента <> ТаблицаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.ПоступлениеДСПлан КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
		|			БанковскиеСчета.Владелец КАК Владелец,
		|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
		|		ИЗ
		|			Документ.ПоступлениеДСПлан КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
		|		ПО ТаблицаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
		|			И ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	НалогообложениеНДС = УправлениеНебольшойФирмойСервер.НалогообложениеНДС(Организация, , Дата);
	
	РасшифровкаПлатежа.Очистить();
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	НоваяСтрока.ПризнакАванса = Истина;
	НоваяСтрока.ДокументПланирования = ДокументСсылкаПоступлениеДСПлан;
	
	Если ЗначениеЗаполнено(ДокументСсылкаПоступлениеДСПлан.ДокументОснование)
		И ТипЗнч(ДокументСсылкаПоступлениеДСПлан.ДокументОснование) = Тип("ДокументСсылка.ЗаказПокупателя")
		И Контрагент.ВестиРасчетыПоЗаказам Тогда
		
		НоваяСтрока.Заказ = ДокументСсылкаПоступлениеДСПлан.ДокументОснование;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПоступлениеДСПлан()

// Обработчик заполнения на основании документа ПеремещениеДСПлан.
//
// Параметры:
//	ДокументСсылкаПеремещениеДСПлан - ДокументСсылка.ПеремещениеДСПлан.
//	
Процедура ЗаполнитьПоПеремещениеДСПлан(ДокументСсылкаПеремещениеДСПлан, Сумма = Неопределено) Экспорт
	
	Если ДокументСсылкаПеремещениеДСПлан.СтатусУтвержденияПлатежа = Перечисления.СтатусыУтвержденияПлатежей.НеУтвержден Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести перемещение денег на основании неутвержденного планового документа!'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПеремещениеДСПлан);
	
	// Заполним данные шапки документа.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДС) КАК НалогообложениеНДС,
	|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
	|	ТаблицаДокумента.БанковскийСчетПолучатель КАК БанковскийСчет,
	|	ТаблицаДокумента.БанковскийСчетПолучатель.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа
	|ИЗ
	|	Документ.ПеремещениеДСПлан КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	НалогообложениеНДС = УправлениеНебольшойФирмойСервер.НалогообложениеНДС(Организация, , Дата);
	Если Сумма <> Неопределено Тогда
		ЭтотОбъект.СуммаДокумента = Сумма;
	КонецЕсли;
	РасшифровкаПлатежа.Очистить();
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	НоваяСтрока.ДокументПланирования = ДокументСсылкаПеремещениеДСПлан;
	
КонецПроцедуры // ЗаполнитьПоПоступлениеДСПлан()

// Обработчик заполнения на основании документа СчетНаОплату.
//
// Параметры:
//	ДокументСсылкаСчетНаОплату - ДокументСсылка.СчетНаОплату.
//	
Процедура ЗаполнитьПоСчетНаОплату(ДокументСсылкаСчетНаОплату, НомерСтроки = Неопределено, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСчетНаОплату);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Сумма", Сумма);
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд))
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента
		|ИЗ
		|	Документ.СчетНаОплату КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплату.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.СчетНаОплату КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|	И ЕСТЬNULL(ТаблицаДокумента.НомерСтроки, 1) = 1";
		
	ИначеЕсли НомерСтроки = Неопределено Тогда
		
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСчетНаОплату);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд))
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|						И КурсыВалютРасчетов.Курс <> 0
		|						И КурсыВалютДокумента.Кратность <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаПлатежа,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента
		|ИЗ
		|	Документ.СчетНаОплату КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплату.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.СчетНаОплату КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ШапкаДокумента.Организация,
		|	ШапкаДокумента.НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента,
		|	ШапкаДокумента.Контрагент,
		|	ШапкаДокумента.Договор,
		|	ШапкаДокумента.ДокументОснование,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет,
		|	ТаблицаДокумента.СтавкаНДС,
		|	КурсыВалютРасчетов.Курс,
		|	КурсыВалютРасчетов.Кратность,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд))
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ШапкаДокумента.БанковскийСчет
		|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ";
		
	Иначе
	
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСчетНаОплату.Основание);
		Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		
		// Заполним данные шапки документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
		|	ТаблицаДокумента.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ТаблицаДокумента.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ТаблицаДокумента.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ТаблицаДокумента.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ТаблицаДокумента.Ссылка.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ТаблицаДокумента.Ссылка.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд))
		|			ТОГДА ТаблицаДокумента.Ссылка.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ТаблицаДокумента.Ссылка.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ЕСТЬNULL(ТаблицаДокументаСтавкиНДС.СтавкаНДС, СтавкиНДС.СтавкаНДС) КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДСОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента
		|ИЗ
		|	Документ.СчетНаОплату.ПлатежныйКалендарь КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			СтавкиНДС.Ссылка КАК СтавкаНДС
		|		ИЗ
		|			Справочник.СтавкиНДС КАК СтавкиНДС
		|		ГДЕ
		|			СтавкиНДС.Ставка = 18
		|			И СтавкиНДС.ПометкаУдаления = ЛОЖЬ
		|			И СтавкиНДС.Расчетная = ЛОЖЬ) КАК СтавкиНДС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ТаблицаДокумента.Ссылка КАК Ссылка,
		|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
		|		ИЗ
		|			Документ.СчетНаОплату.Запасы КАК ТаблицаДокумента
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаСтавкиНДС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.СчетНаОплату КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ТаблицаДокумента.Ссылка.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И ТаблицаДокумента.НомерСтроки = &НомерСтроки";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	РасшифровкаПлатежа.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
			ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоСчетНаОплату()

// Обработчик заполнения на основании документа ЗаказПокупателя.
//
// Параметры:
//	ДокументСсылкаЗаказПокупателя - ДокументСсылка.ЗаказПокупателя.
//	
Процедура ЗаполнитьПоЗаказПокупателя(ДокументСсылкаЗаказПокупателя, НомерСтроки = Неопределено, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПокупателя);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Сумма", Сумма);
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.ЗаказПокупателя КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ШапкаДокумента.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ШапкаДокумента.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|	И ЕСТЬNULL(ТаблицаДокумента.НомерСтроки, 1) = 1";
		
	ИначеЕсли НомерСтроки = Неопределено Тогда
		
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПокупателя);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	БанковскиеСчетаВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	&Ссылка КАК СчетНаОплату,
		|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	СУММА(ВЫРАЗИТЬ(ВложенныйЗапрос.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|						И КурсыВалютРасчетов.Курс <> 0
		|						И КурсыВалютДокумента.Кратность <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
		|	СУММА(ВЫРАЗИТЬ(ВложенныйЗапрос.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаПлатежа,
		|	СУММА(ВЫРАЗИТЬ(ВложенныйЗапрос.СуммаНДС * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
		|	СУММА(ВЫРАЗИТЬ(ВложенныйЗапрос.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			&Ссылка КАК ДокументОснование,
		|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|			ТаблицаДокумента.Всего КАК Всего,
		|			ТаблицаДокумента.СуммаНДС КАК СуммаНДС
		|		ИЗ
		|			Документ.ЗаказПокупателя.Запасы КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|				ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			&Ссылка,
		|			ТаблицаДокумента.СтавкаНДС,
		|			ТаблицаДокумента.Всего,
		|			ТаблицаДокумента.СуммаНДС
		|		ИЗ
		|			Документ.ЗаказПокупателя.Работы КАК ТаблицаДокумента
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|		ПО ШапкаДокумента.Ссылка = ВложенныйЗапрос.ДокументОснование
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.ЗаказПокупателя КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК БанковскиеСчетаВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = БанковскиеСчетаВложенныйЗапрос.Владелец
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ШапкаДокумента.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ШапкаДокумента.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ШапкаДокумента.Организация,
		|	ШапкаДокумента.НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента,
		|	ШапкаДокумента.Контрагент,
		|	ШапкаДокумента.Договор,
		|	ВложенныйЗапрос.СтавкаНДС,
		|	КурсыВалютРасчетов.Курс,
		|	КурсыВалютРасчетов.Кратность,
		|	БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств,
		|	БанковскиеСчетаВложенныйЗапрос.БанковскийСчет,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ШапкаДокумента.БанковскийСчет
		|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ БанковскиеСчетаВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ";
		
	Иначе
	
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПокупателя.Основание);
		Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		
		// Заполним данные шапки документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
		|	ТаблицаДокумента.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ТаблицаДокумента.Ссылка КАК СчетНаОплату,
		|	ЕСТЬNULL(ТаблицаДокументаСтавкиНДС.СтавкаНДС, СтавкиНДС.СтавкаНДС) КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДСОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ
		|ИЗ
		|	Документ.ЗаказПокупателя.ПлатежныйКалендарь КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			СтавкиНДС.Ссылка КАК СтавкаНДС
		|		ИЗ
		|			Справочник.СтавкиНДС КАК СтавкиНДС
		|		ГДЕ
		|			СтавкиНДС.Ставка = 18
		|			И СтавкиНДС.ПометкаУдаления = ЛОЖЬ
		|			И СтавкиНДС.Расчетная = ЛОЖЬ) КАК СтавкиНДС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ТаблицаДокументаСтавкиНДС.Ссылка КАК Ссылка,
		|			ТаблицаДокументаСтавкиНДС.СтавкаНДС КАК СтавкаНДС
		|		ИЗ
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ТаблицаДокумента.Ссылка КАК Ссылка,
		|				ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
		|			ИЗ
		|				Документ.ЗаказПокупателя.Запасы КАК ТаблицаДокумента
		|			ГДЕ
		|				ТаблицаДокумента.Ссылка = &Ссылка
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ ПЕРВЫЕ 1
		|				ТаблицаДокумента.Ссылка,
		|				ТаблицаДокумента.СтавкаНДС
		|			ИЗ
		|				Документ.ЗаказПокупателя.Работы КАК ТаблицаДокумента
		|			ГДЕ
		|				ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС) КАК ТаблицаДокументаСтавкиНДС
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаСтавкиНДС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.ЗаказПокупателя КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ТаблицаДокумента.Ссылка.Организация = ВложенныйЗапрос.Владелец
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ТаблицаДокумента.Ссылка.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ТаблицаДокумента.Ссылка.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И ТаблицаДокумента.НомерСтроки = &НомерСтроки";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	РасшифровкаПлатежа.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
			ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоЗаказПокупателя()

// Обработчик заполнения на основании документа ЗаказПокупателя с учетом остатков к оплате.
//
// Параметры:
//	ДокументСсылкаЗаказПокупателя - ДокументСсылка.ЗаказПокупателя.
//
Процедура ЗаполнитьПоЗаказуПокупателяСУчетомОстатковКОплате(ДокументСсылкаЗаказПокупателя)
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПокупателя);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	// Заполним данные табличных частей документа.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
	|	&Дата КАК Дата,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	БанковскиеСчетаВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
	|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	&Ссылка КАК СчетНаОплату,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1) КАК Кратность,
	|	ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот КАК Всего,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента1,
	|	БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств1,
	|	КурсыВалютДокумента.Курс КАК Курс1,
	|	КурсыВалютРасчетов.Курс КАК Курс2,
	|	КурсыВалютБанковскогоСчета.Курс КАК Курс3,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
	|					И КурсыВалютРасчетов.Курс <> 0
	|					И КурсыВалютДокумента.Кратность <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * (1 - 1 / ((ЕСТЬNULL(ВложенныйЗапрос.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ТаблицаДокументаСтавкиНДС.Ссылка КАК Ссылка,
	|			ТаблицаДокументаСтавкиНДС.СтавкаНДС КАК СтавкаНДС
	|		ИЗ
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				&Ссылка КАК Ссылка,
	|				ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
	|			ИЗ
	|				Документ.ЗаказПокупателя.Запасы КАК ТаблицаДокумента
	|			ГДЕ
	|				ТаблицаДокумента.Ссылка = &Ссылка
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ТаблицаДокумента.Ссылка,
	|				ТаблицаДокумента.СтавкаНДС
	|			ИЗ
	|				Документ.ЗаказПокупателя.Работы КАК ТаблицаДокумента
	|			ГДЕ
	|				ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.Ссылка = ВложенныйЗапрос.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОплатаСчетовИЗаказов.Обороты КАК ОплатаСчетовИЗаказовОбороты
	|		ПО ШапкаДокумента.Ссылка = ОплатаСчетовИЗаказовОбороты.СчетНаОплату
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.Ссылка
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|			КОНЕЦ КАК БанковскийСчет,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|			КОНЕЦ КАК ВалютаДенежныхСредств,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.Ссылка.Владелец
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
	|			КОНЕЦ КАК Владелец
	|		ИЗ
	|			Документ.ЗаказПокупателя КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК БанковскиеСчетаВложенныйЗапрос
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|			ПО БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|		ПО ШапкаДокумента.Организация = БанковскиеСчетаВложенныйЗапрос.Владелец
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
	|		ПО ШапкаДокумента.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
	|			И ШапкаДокумента.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
			ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоЗаказуПокупателяСУчетомОстатковКОплате()

// Обработчик заполнения на основании документа РасходнаяНакладная.
//
// Параметры:
//	ДокументСсылкаРасходнаяНакладная - ДокументСсылка.РасходнаяНакладная.
//	
Процедура ЗаполнитьПоРасходнаяНакладная(ДокументСсылкаРасходнаяНакладная) Экспорт
	
	ДокументСсылкаРасходнаяНакладнаяВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
	ДокументСсылкаРасходнаяНакладная,
	"ВидОперации");
	
	Если ДокументСсылкаРасходнаяНакладнаяВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ПередачаВПереработку Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Невозможен ввод документа на основании операции - ""%1""!'"),
		ДокументСсылкаРасходнаяНакладнаяВидОперации);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходнаяНакладная);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|	КОНЕЦ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|	КОНЕЦ КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.РасходнаяНакладная КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.Запасы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.РасходнаяНакладная КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|	КОНЕЦ,
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	РасшифровкаПлатежа.Очистить();
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоРасходнаяНакладная()

// Обработчик заполнения на основании документа АктВыполненныхРабот.
//
// Параметры:
//	ДокументСсылкаАктВыполненныхРабот - ДокументСсылка.АктВыполненныхРабот.
//	
Процедура ЗаполнитьПоАктВыполненныхРабот(ДокументСсылкаАктВыполненныхРабот) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаАктВыполненныхРабот);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.АктВыполненныхРабот КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктВыполненныхРабот.РаботыИУслуги КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.АктВыполненныхРабот КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ТаблицаДокумента.ЗаказПокупателя,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	РасшифровкаПлатежа.Очистить();
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоАктВыполненныхРабот()

// Обработчик заполнения на основании документа ПередачаВА.
//
// Параметры:
//	ДокументСсылкаПередачаВА - ДокументСсылка.ПередачаВА.
//	
Процедура ЗаполнитьПоПередачаВА(ДокументСсылкаПередачаВА) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаВА);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.ПередачаВА КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаВА.ВнеоборотныеАктивы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ПередачаВА КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	РасшифровкаПлатежа.Очистить();
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоПередачаВА()

// Обработчик заполнения на основании документа АктВыполненныхРабот.
//
// Параметры:
//	ДокументСсылкаАктВыполненныхРабот - ДокументСсылка.АктВыполненныхРабот.
//	
Процедура ЗаполнитьПоПриемИПередачаВРемонт(ДокументСсылкаПриемИПередачаВРемонт) Экспорт
	
	Если ДокументСсылкаПриемИПередачаВРемонт.ВариантРемонта = Перечисления.ВариантыРемонта.НашаМастерскаяМногоэтапныйРемонт Тогда
		ВызватьИсключение НСтр("ru = 'Для выбранного варианта ремонта вводите оплаты на основании подчиненных документов - Заказ-наряд, Расходная, Акт'");
	КонецЕсли;
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПриемИПередачаВРемонт);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	// Заполним данные табличных частей документа.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
	|	&Дата КАК Дата,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию КАК БанковскийСчет,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.РемонтВыполнен
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.РемонтВыполнен
	|			ТОГДА ШапкаДокумента.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ШапкаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1) КАК Кратность,
	|	ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот КАК Всего,
	|	КурсыВалютДокумента.Курс КАК Курс1,
	|	КурсыВалютРасчетов.Курс КАК Курс2,
	|	КурсыВалютБанковскогоСчета.Курс КАК Курс3,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
	|					И КурсыВалютРасчетов.Курс <> 0
	|					И КурсыВалютДокумента.Кратность <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * (1 - 1 / ((ЕСТЬNULL(ШапкаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВариантРемонта = ЗНАЧЕНИЕ(Перечисление.ВариантыРемонта.НашаМастерскаяМногоэтапныйРемонт)
	|						ТОГДА ЗНАЧЕНИЕ(Документ.ПриемИПередачаВРемонт.ПустаяСсылка)
	|					ИНАЧЕ &Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ПриемИПередачаВРемонт.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ
	|ИЗ
	|	Документ.ПриемИПередачаВРемонт КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОплатаСчетовИЗаказов.Обороты КАК ОплатаСчетовИЗаказовОбороты
	|		ПО ШапкаДокумента.Ссылка = ОплатаСчетовИЗаказовОбороты.СчетНаОплату
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта,
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|		ПО ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
			ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоАктВыполненныхРабот()

// Заполняет Ставку НДС в табличной части по системе налогообложения.
//
Процедура ЗаполнитьСтавкуНДСПоНалогообложениеНДС(СтрокаТабличнойЧасти)
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда	
		СтрокаТабличнойЧасти.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
		СтрокаТабличнойЧасти.СуммаНДС = 0;
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НаЭкспорт Тогда	
		СтрокаТабличнойЧасти.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
		СтрокаТабличнойЧасти.СуммаНДС = 0;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьСтавкуНДСПоНалогообложениеНДС()

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события При копировании.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	НомерЧекаККМ = "";
	Телефон = "";
	АдресЭП = "";
	
КонецПроцедуры // ПриКопировании()

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимНаправлениямДеятельности.Получить() Тогда
		
		Если ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.РозничнаяВыручкаСуммовойУчет Тогда
			
			НаправлениеДеятельности = Справочники.НаправленияДеятельности.ОсновноеНаправление;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю И НЕ ЭквайрерБеретКомиссиюЗаВозвратДС Тогда
		СуммаКомиссииПоДоговору = 0;
	КонецЕсли;
	
	НомераКарт = "";
	Для каждого СтрокаТЧ Из РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(Контрагент)
		И НЕ Контрагент.ВестиРасчетыПоДоговорам
		И НЕ ЗначениеЗаполнено(СтрокаТЧ.Договор) Тогда
			СтрокаТЧ.Договор = Контрагент.ДоговорПоУмолчанию;
		КонецЕсли;
		
		// Заполним реквизит СуммаКомиссииПоДоговору в табличной части РасшифровкаПлатежа.
		Если ВидОперации = Перечисления.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя ИЛИ
			ЭквайрерБеретКомиссиюЗаВозвратДС Тогда
			СтрокаТЧ.СуммаКомиссии = ПроцентКомиссии * СтрокаТЧ.СуммаРасчетов / 100;
		Иначе
			СтрокаТЧ.СуммаКомиссии = 0;
		КонецЕсли;
			
	КонецЦикла;
	
	Если РасшифровкаПлатежа.Количество() > 0 И СуммаКомиссииПоДоговору <> РасшифровкаПлатежа.Итог("СуммаКомиссии") Тогда
		
		СуммаКомиссииПоследнейСтроки = РасшифровкаПлатежа[РасшифровкаПлатежа.Количество()-1].СуммаКомиссии;
		РасшифровкаПлатежа[РасшифровкаПлатежа.Количество()-1].СуммаКомиссии = СуммаКомиссииПоследнейСтроки + (СуммаКомиссииПоДоговору - РасшифровкаПлатежа.Итог("СуммаКомиссии"));
		
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре";
	СтратегияЗаполнения[Тип("ДокументСсылка.СчетНаОплату")] = "ЗаполнитьПоСчетНаОплату";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПоступлениеДСПлан")] = "ЗаполнитьПоПоступлениеДСПлан";
	СтратегияЗаполнения[Тип("ДокументСсылка.РасходнаяНакладная")] = "ЗаполнитьПоРасходнаяНакладная";
	СтратегияЗаполнения[Тип("ДокументСсылка.АктВыполненныхРабот")] = "ЗаполнитьПоАктВыполненныхРабот";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПередачаВА")] = "ЗаполнитьПоПередачаВА";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриходнаяНакладная")] = "ЗаполнитьПоПриходнаяНакладная";
	СтратегияЗаполнения[Тип("ДокументСсылка.ОперацияПоПлатежнымКартам")] = "ЗаполнитьПоОперацияПоПлатежнымКартам";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриемИПередачаВРемонт")] = "ЗаполнитьПоПриемИПередачаВРемонт";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭквайринговыйТерминал) Тогда
		ТекстСообщения = НСтр("ru = 'Эквайринговый терминал должен быть выбран.'");
			
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			"ЭквайринговыйТерминал",
			Отказ
		);
		ПроверяемыеРеквизиты.Очистить();
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(ЭквайринговыйТерминал.Касса) ИЛИ
		Не ЗначениеЗаполнено(ЭквайринговыйТерминал.БанковскийСчетЭквайринг) ИЛИ
		Не ЗначениеЗаполнено(ЭквайринговыйТерминал.Эквайрер) ИЛИ
		Не ЗначениеЗаполнено(ЭквайринговыйТерминал.СчетЗатрат) Тогда
		ТекстСообщения = НСтр("ru = 'В карточке эквайрингового терминала заполнены не все реквизиты. 
			|Откройте карточку эквайрингового терминала и проверьте реквизиты ""Эквайрер"", ""Касса"", ""Банковский счет"" и ""Счет затрат"" (команда ""Счета учета""). 
			|Далее очистите поле эквайрингового терминала, а потом выберите его еще раз.'");
			
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			"ЭквайринговыйТерминал",
			Отказ
		);
		ПроверяемыеРеквизиты.Очистить();
		Возврат;
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя Тогда
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ОперацияПоПлатежнымКартамШапка");
		
		Если НЕ ЭквайринговыйТерминал.ИспользоватьБезПодключенияОборудования Тогда
			УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидПлатежнойКарты");
			УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НомерПлатежнойКарты");
		КонецЕсли;
	КонецЕсли;
	
	УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
	УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КассаККМ");
	УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
	УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
	УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
	
	Если Контрагент.ВестиРасчетыПоДокументам Тогда
		Для каждого СтрокаРасшифровкаПлатежа Из РасшифровкаПлатежа Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаРасшифровкаПлатежа.Документ)
				И (ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПоставщика
			   ИЛИ (ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя
			   И НЕ СтрокаРасшифровкаПлатежа.ПризнакАванса)) Тогда
				Если РасшифровкаПлатежа.Количество() = 1 Тогда
					Если ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя Тогда
						ТекстСообщения = НСтр("ru = 'Укажите документ отгрузки или признак аванса платежа.'");
					Иначе
						ТекстСообщения = НСтр("ru = 'Укажите документ расчетов.'");
					КонецЕсли;
				Иначе
					Если ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя Тогда
						ТекстСообщения = НСтр("ru = 'Укажите документ отгрузки или признак оплаты в строке %НомерСтроки% списка ""Расшифровка платежа"".'");
					Иначе
						ТекстСообщения = НСтр("ru = 'Укажите документ расчетов в строке %НомерСтроки% списка ""Расшифровка платежа"".'");
					КонецЕсли;
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка(СтрокаРасшифровкаПлатежа.НомерСтроки));
				КонецЕсли;
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
					ЭтотОбъект,
					ТекстСообщения,
					"РасшифровкаПлатежа",
					СтрокаРасшифровкаПлатежа.НомерСтроки,
					"Документ",
					Отказ
				);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	Если СуммаПлатежа <> СуммаДокумента Тогда
		ТекстСообщения = НСтр("ru = 'Сумма документа: %СуммаДокумента% %ВалютаДенежныхСредств%, не соответствует сумме разнесенных платежей в табличной части: %СуммаПлатежа% %ВалютаДенежныхСредств%!'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаДокумента%", Строка(СуммаДокумента));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаПлатежа%", Строка(СуммаПлатежа));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаДенежныхСредств%", СокрЛП(Строка(ВалютаДенежныхСредств)));
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			"СуммаДокумента",
			Отказ
		);
	КонецЕсли;
	
	Если НЕ Контрагент.ВестиРасчетыПоДоговорам Тогда
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.ОперацияПоПлатежнымКартам.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	УправлениеНебольшойФирмойСервер.ОтразитьРасчетыСПокупателями(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьПлатежныйКалендарь(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьОплатаСчетовИЗаказов(ДополнительныеСвойства, Движения, Отказ);
	// Эквайринг
	УправлениеНебольшойФирмойСервер.ОтразитьОплатаПлатежнымиКартами(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьРасчетыПоЭквайрингу(ДополнительныеСвойства, Движения, Отказ);
	// Эквайринг. Кассовый метод
	УправлениеНебольшойФирмойСервер.ОтразитьДоходыИРасходыКассовыйМетодЭквайринг(ДополнительныеСвойства, Движения, Отказ);
	// Конец Эквайринг
	УправлениеНебольшойФирмойСервер.ОтразитьДоходыИРасходыНераспределенные(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьДоходыИРасходыОтложенные(ДополнительныеСвойства, Движения, Отказ);
	// Конец Кассовый метод
	УправлениеНебольшойФирмойСервер.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.ОперацияПоПлатежнымКартам.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа.
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей.
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.ОперацияПоПлатежнымКартам.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
	// Подчиненная счет-фактура
	Если НЕ Отказ Тогда
		
		КонтрольПодчиненнойСчетФактуры();
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Распроводит счет фактуру при отмене проведения документа.
//
Процедура КонтрольПодчиненнойСчетФактуры()
	
	СтруктураСчетаФактуры = УправлениеНебольшойФирмойСервер.ПолучитьПодчиненныйСчетФактуру(Ссылка);
	Если СтруктураСчетаФактуры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СчетФактура	 = СтруктураСчетаФактуры.Ссылка;
	Если Не СчетФактура.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru = 'В связи с отсутствием движений у документа %ПредставлениеТекущегоДокумента% распроводится счет фактура %ПредставлениеСчетФактуры%.'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТекущегоДокумента%", """Поступление ДС на счет  № " + Номер + " от " + Формат(Дата, "ДФ=dd.MM.yyyy") + """");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеСчетФактуры%", """Счет фактура (выданная) № " + СтруктураСчетаФактуры.Номер + " от " + СтруктураСчетаФактуры.Дата + """");
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
	СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
	СчетФактураОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	
КонецПроцедуры //КонтрольПодчиненнойСчетФактуры()

#КонецОбласти

#КонецЕсли