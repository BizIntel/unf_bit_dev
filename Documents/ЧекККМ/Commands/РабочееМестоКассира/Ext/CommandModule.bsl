#Область СлужебныеПроцедурыИФункции

// Функция определяет кассу кассу по умолчанию.
//
// Возвращает кассу ККМ, если найдена одна касса.
// Возвращает Неопределено, если касса не найдена или касс больше одной.
//
// Возвращаемое значение:
//	СправочникСсылка.КассыККМ - Найденная касса ККМ
//
&НаСервере
Функция ПолучитьКассуККМИТерминалПоУмолчанию() Экспорт
	
	СтруктураПараметров = Новый Структура("КассаККМ, ЭквайринговыйТерминал, КоличествоЭквайринговыхТерминалов, Организация, СтруктурнаяЕдиница", 
		Справочники.КассыККМ.ПустаяСсылка(), Справочники.ЭквайринговыеТерминалы.ПустаяСсылка(), 0);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	КассыККМ.Ссылка КАК КассаККМ,
	|	КассыККМ.СтруктурнаяЕдиница,
	|	КассыККМ.Владелец КАК Организация
	|ПОМЕСТИТЬ КассыККМ
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	НЕ КассыККМ.ПометкаУдаления
	|	И КассыККМ.ТипКассы = &ТипКассы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭквайринговыеТерминалы.Ссылка КАК ЭквайринговыйТерминал,
	|	ЭквайринговыеТерминалы.Касса
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КассыККМ КАК КассыККМ
	|		ПО ЭквайринговыеТерминалы.Касса = КассыККМ.КассаККМ
	|ГДЕ
	|	НЕ ЭквайринговыеТерминалы.ПометкаУдаления
	|	И ЭквайринговыеТерминалы.Касса.ТипКассы = &ТипКассы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КассыККМ.КассаККМ,
	|	КассыККМ.СтруктурнаяЕдиница,
	|	КассыККМ.Организация
	|ИЗ
	|	КассыККМ КАК КассыККМ");
	
	Запрос.УстановитьПараметр("ТипКассы", Перечисления.ТипыКассККМ.ФискальныйРегистратор);
	
	МРезультатов = Запрос.ВыполнитьПакет();
	Выборка = МРезультатов[2].Выбрать();
	КоличествоКассККМ = Выборка.Количество();
	Если КоличествоКассККМ = 1 
	   И Выборка.Следующий() Тогда
	
		СтруктураПараметров.КассаККМ = Выборка.КассаККМ;
		СтруктураПараметров.СтруктурнаяЕдиница = Выборка.СтруктурнаяЕдиница;
		СтруктураПараметров.Организация = Выборка.Организация;
		
	Иначе
		
		СтруктураПараметров.КассаККМ = Неопределено;
		
	КонецЕсли;
	
	Если КоличествоКассККМ = 1 Тогда
		ТЗ_ЭТ = МРезультатов[1].Выгрузить();
		
		ЭТКассыПоУмолчанию = ТЗ_ЭТ.НайтиСтроки(Новый Структура("Касса", СтруктураПараметров.КассаККМ));
		
		СтруктураПараметров.КоличествоЭквайринговыхТерминалов = ЭТКассыПоУмолчанию.Количество();
		Если ЭТКассыПоУмолчанию.Количество() = 1 Тогда
			
			СтруктураПараметров.ЭквайринговыйТерминал = ЭТКассыПоУмолчанию[0].ЭквайринговыйТерминал;
			
		Иначе
			
			СтруктураПараметров.ЭквайринговыйТерминал = Неопределено;
			
		КонецЕсли;
	Иначе
		СтруктураПараметров.ЭквайринговыйТерминал = Неопределено;
	КонецЕсли;
	
	Возврат СтруктураПараметров;

КонецФункции // ПолучитьКассуПоУмолчанию()

#КонецОбласти

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ЗначенияЗаполнения = ПолучитьКассуККМИТерминалПоУмолчанию();
	
	МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента();
	
	Если ТребуетсяОткрытьОкноВыбораКассы(ЗначенияЗаполнения) Тогда
		ОткрытьФорму("Документ.ЧекККМ.Форма.ФормаДокумента_РМК_ОкноВыбораКассы", 
		Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения),
		ПараметрыВыполненияКоманды.Источник,
		ПараметрыВыполненияКоманды.Уникальность,
		ПараметрыВыполненияКоманды.Окно,
		ПараметрыВыполненияКоманды.НавигационнаяСсылка);
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
	"Документ.ЧекККМ.Форма.ФормаДокумента_РМК",
	Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения));
	
КонецПроцедуры

&НаКлиенте
Функция ТребуетсяОткрытьОкноВыбораКассы(ЗначенияЗаполнения)
	
	Если Не ЗначениеЗаполнено(ЗначенияЗаполнения.КассаККМ) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначенияЗаполнения.КоличествоЭквайринговыхТерминалов)
		И Не ЗначениеЗаполнено(ЗначенияЗаполнения.ЭквайринговыйТерминал) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции
