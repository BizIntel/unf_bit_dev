&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Элементы.Подразделение.Видимость = ИнтеграцияГИСМ.ИспользоватьПодразделения();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	ИнтеграцияГИСМПереопределяемый.ЗаполнитьПодменюОтчеты(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("Основание", Объект.Основание);
	Оповестить("Запись_УведомлениеОбИмпортеМаркированныхТоваровГИСМ", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьСтатусГИСМ();
	ОбновитьИндексыКартинокНомераКиЗ();
	ИнтеграцияГИСМПереопределяемый.ЗаполнитьСлужебныеРеквизитыТабличнойЧастиУведомлениеОбИмпорте(Объект.Товары);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеСостоянияГИСМ"
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		ОбновитьСтатусГИСМ();
		
	КонецЕсли;
	
	Если ИмяСобытия = "ВыполненОбменГИСМ"
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусГИСМФормахВДокументах)) Тогда
		
		ОбновитьСтатусГИСМ();
		
	КонецЕсли;
	
	Если ИмяСобытия = "ЗаполнениеНомеровКиЗПоДиапазону" Тогда
		
		Если Параметр <> Неопределено Тогда
			ЗаполнитьНомераКиЗПоДиапазону(Параметр);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() И НЕ ТолькоПросмотр Тогда
		Если ИмяСобытия = "ScanData" Тогда
			
			ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
			
			Если ТекущиеДанные = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			ТекущаяСтрока = Новый Структура();
			ТекущаяСтрока.Вставить("КлючСвязи", ТекущиеДанные.КлючСвязи);
			ТекущаяСтрока.Вставить("Количество", ТекущиеДанные.Количество);
			ОбработатьШтрихкоды(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр), ТекущаяСтрока);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтатусГИСМОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусГИСМОбработкаНавигационнойСсылкиЗавершение",
		                                                    ЭтотОбъект,
		                                                    Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ТекстВопроса = НСтр("ru = 'Уведомление об импорте маркированных товаров было изменено. Записать?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусГИСМОбработкаНавигационнойСсылкиЗавершение",
		                                                    ЭтотОбъект,
		                                                    Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ТекстВопроса = НСтр("ru = 'Уведомление об импорте маркированных товаров не записано. Записать?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПередатьДанные" Тогда
		
		СтандартнаяОбработка = Ложь;
		ИнтеграцияГИСМКлиент.ПодготовитьСообщениеКПередаче(
			Объект.Ссылка,
			ПредопределенноеЗначение("Перечисление.ОперацииОбменаГИСМ.ПередачаДанных"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусГИСМОбработкаНавигационнойСсылкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		 Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Записать();
	КонецЕсли;
	
	Если Не Модифицированность И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбработатьНажатиеНавигационнойСсылки(ДополнительныеПараметры.НавигационнаяСсылкаФорматированнойСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусГИСМ()

	СтатусГИСМ         = Перечисления.СтатусыИнформированияГИСМ.Черновик;
	ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПустаяСсылка();
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Статусы.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПустаяСсылка)
		|		ИНАЧЕ Статусы.ДальнейшееДействие
		|	КОНЕЦ КАК ДальнейшееДействие
		|ИЗ
		|	РегистрСведений.СтатусыИнформированияГИСМ КАК Статусы
		|ГДЕ
		|	Статусы.ТекущееУведомление = &УведомлениеОбВвозе";
		
		Запрос.УстановитьПараметр("УведомлениеОбВвозе", Объект.Ссылка);
		Запрос.УстановитьПараметр("МассивДальнейшиеДействия", ИнтеграцияГИСМ.НеотображаемыеВДокументахДальнейшиеДействия());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			СтатусГИСМ         = Выборка.Статус;
			ДальнейшееДействие = Выборка.ДальнейшееДействие;
			
		КонецЕсли;
		
	Иначе
		
		ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
		
	КонецЕсли;
	
	СтатусГИСМПредставление = ИнтеграцияГИСМ.ПредставлениеСтатусаГИСМ(
		СтатусГИСМ,
		ДальнейшееДействие,
		Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ПараметрыОтбора = Новый ФиксированнаяСтруктура("КлючСвязи", ТекущиеДанные.КлючСвязи);
		Элементы.НомераКиЗ.ОтборСтрок = ПараметрыОтбора;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент = Элементы.ТоварыНоменклатура Тогда
		
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
			ПоказатьЗначение(Неопределено, ТекущиеДанные.Номенклатура);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НомераКиЗПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьИндексКартинкиВСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура НомераКиЗПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru='Не выбрана строка с товаром'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("КлючСвязи", ТекущиеДанные.КлючСвязи);
	СтрокиКиЗ = Объект.НомераКиЗ.НайтиСтроки(ПараметрыОтбора);
	
	Если ТекущиеДанные.Количество <= СтрокиКиЗ.Количество() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ФлагРекурсии Тогда
		ФлагРекурсии = Ложь;
		Возврат;
	КонецЕсли;
	
	Отказ        = Истина;
	ФлагРекурсии = Истина;
	
	Элементы.НомераКиЗ.ДобавитьСтроку();
	
	НоваяСтрока = Элементы.НомераКиЗ.ТекущиеДанные;
	
	Если Не НоваяСтрока = Неопределено Тогда
		НоваяСтрока.КлючСвязи = ТекущиеДанные.КлючСвязи;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НомераКиЗПослеУдаления(Элемент)
	
	ОбновитьИндексКартинкиВСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураКиЗПриИзменении(Элемент)
	
	ИнтеграцияГИСМКлиентПереопределяемый.ТоварыУведомлениеОбИмпортеНоменклатураКиЗПриИзменении(Элементы.Товары.ТекущиеДанные, КэшированныеЗначения);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОформитьМаркировкуТоваров(Команда)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ОформитьМаркировкуТоваровОбработкаНавигационнойСсылкиЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Уведомление об импорте маркированных товаров ГИСМ было изменено. Записать?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ОформитьМаркировкуТоваровОбработкаНавигационнойСсылкиЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Уведомление об импорте маркированных товаров ГИСМ не записано. Записать?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбработатьНажатиеОформитьМаркировкуТоваров();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьМаркировкуТоваровОбработкаНавигационнойСсылкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		 Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Записать();
	КонецЕсли;
	
	Если Не Модифицированность И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбработатьНажатиеОформитьМаркировкуТоваров();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеОформитьМаркировкуТоваров()
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Основание", Объект.Ссылка);
	
	ОткрытьФорму("Документ.МаркировкаТоваровГИСМ.ФормаОбъекта", ПараметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомераКиЗ(Команда)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru='Не выбрана строка с товаром'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.НоменклатураКиЗ) Тогда
		ТекстПредупреждения = НСтр("ru='В строке не заполнена номенклатура КиЗ'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ХарактеристикиИспользуются И Не ЗначениеЗаполнено(ТекущиеДанные.ХарактеристикаКиЗ) Тогда
		ТекстПредупреждения = НСтр("ru='В строке не заполнена характеристика КиЗ'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	КоличествоКиЗ = РассчитатьКоличествоНезаполненныхКиЗПоНоменклатуреКиЗ(ТекущиеДанные.НоменклатураКиЗ, ТекущиеДанные.ХарактеристикаКиЗ);
	
	Если ЗначениеЗаполнено(ТекущиеДанные.НоменклатураКиЗ) Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("НоменклатураКиЗ", ТекущиеДанные.НоменклатураКиЗ);
		ПараметрыОткрытия.Вставить("ХарактеристикаКиЗ", ТекущиеДанные.ХарактеристикаКиЗ);
		ПараметрыОткрытия.Вставить("КоличествоКиЗ", КоличествоКиЗ);
		
		ОткрытьФорму("Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Форма.ФормаЗаполненияНомеровКиЗПоДиапазону", ПараметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВидМеха(Команда)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru='Не выбрана строка с товаром'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	КодТНВЭД = ТекущиеДанные.КодТНВЭД;
	
	ПараметрыОткрытия = Новый Структура("КодТНВЭД", КодТНВЭД);
	ОткрытьФорму("Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Форма.ФормаЗаполнениеВидаМеха", 
		ПараметрыОткрытия,ЭтаФорма,,,, 
		Новый ОписаниеОповещения("ЗаполнитьВидМехаЗавершение", 
			ЭтотОбъект,
			Новый Структура("МассивСтрок, КодТНВЭД", Элементы.Товары.ВыделенныеСтроки, КодТНВЭД)));
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВидМехаЗавершение(ВидМеха, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(ВидМеха) Тогда
		
		ЗаполнитьВидМехаНаСервере(ВидМеха, ДополнительныеПараметры.КодТНВЭД, ДополнительныеПараметры.МассивСтрок);
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Вид меха заполнен'"),
			,
			СтрЗаменить(НСтр("ru='Для выделенных строк заполнен вид меха ""%ВидМеха%""'"), "%ВидМеха%", ВидМеха),
			БиблиотекаКартинок.Информация32);
	
	КонецЕсли;
КонецПроцедуры

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	ИнтеграцияГИСМКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ИнтеграцияГИСМПереопределяемый.ДополнитьУсловноеОформлениеУведомлениеОбИмпорте(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	Элементы.ОформитьМаркировкуТоваров.Видимость = ПравоДоступа("Добавление", Метаданные.Документы.МаркировкаТоваровГИСМ);
	
	ОбновитьСтатусГИСМ();
	ОбновитьИндексыКартинокНомераКиЗ();
	
	ИнтеграцияГИСМПереопределяемый.ЗаполнитьСлужебныеРеквизитыТабличнойЧастиУведомлениеОбИмпорте(Объект.Товары);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИндексыКартинокНомераКиЗ()
	
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		
		ПараметрыОтбора = Новый Структура("КлючСвязи", СтрокаТЧ.КлючСвязи);
		СтрокиКиЗ = Объект.НомераКиЗ.НайтиСтроки(ПараметрыОтбора);
		Если СтрокиКиЗ.Количество() = СтрокаТЧ.Количество Тогда
			СтрокаТЧ.ИндексКартинки = 1;
		Иначе
			СтрокаТЧ.ИндексКартинки = 0;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИндексКартинкиВСтроке()
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("КлючСвязи", ТекущиеДанные.КлючСвязи);
	СтрокиКиЗ = Объект.НомераКиЗ.НайтиСтроки(ПараметрыОтбора);
	
	Если СтрокиКиЗ.Количество() = ТекущиеДанные.Количество Тогда
		ТекущиеДанные.ИндексКартинки = 1;
	Иначе
		ТекущиеДанные.ИндексКартинки = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РассчитатьКоличествоНезаполненныхКиЗПоНоменклатуреКиЗ(НоменклатураКиЗ, ХарактеристикаКиЗ)
	
	КоличествоВсегоКиЗ = 0;
	КоличествоЗаполненныхКиЗ = 0;
	 
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		
		Если СтрокаТЧ.НоменклатураКиЗ = НоменклатураКиЗ И 
			СтрокаТЧ.ХарактеристикаКиЗ = СтрокаТЧ.ХарактеристикаКиЗ Тогда
			
			КоличествоВсегоКиЗ = КоличествоВсегоКиЗ + СтрокаТЧ.Количество;
			
			ПараметрыОтбора = Новый Структура("КлючСвязи", СтрокаТЧ.КлючСвязи);
			СтрокиКиЗ = Объект.НомераКиЗ.НайтиСтроки(ПараметрыОтбора);
			
			Для Каждого СтрокаКиЗ Из СтрокиКиЗ Цикл
				Если ЗначениеЗаполнено(СтрокаКиЗ.НомерКиЗ) Тогда
					КоличествоЗаполненныхКиЗ = КоличествоЗаполненныхКиЗ + 1;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КоличествоВсегоКиЗ - КоличествоЗаполненныхКиЗ;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНомераКиЗПоДиапазону(ПараметрыЗаполнения)
	
	Если Не ЗначениеЗаполнено(ПараметрыЗаполнения.НомерНачалоСтроковаяЧасть)
		Или Не ЗначениеЗаполнено(ПараметрыЗаполнения.НомерОкончаниеСтроковаяЧасть)
		Или Не ЗначениеЗаполнено(ПараметрыЗаполнения.НомерНачалоЦифроваяЧасть)
		Или Не ЗначениеЗаполнено(ПараметрыЗаполнения.НомерОкончаниеЦифроваяЧасть)
		Или Не ЗначениеЗаполнено(ПараметрыЗаполнения.КоличествоНомеров)
		Или ПараметрыЗаполнения.НомерНачалоСтроковаяЧасть <> ПараметрыЗаполнения.НомерОкончаниеСтроковаяЧасть Тогда
		
		Возврат;
	КонецЕсли;
	
	КоличествоЗаполненныхКиЗ = 0;
	ТекущийНомерКиЗ = ПараметрыЗаполнения.НомерНачалоЦифроваяЧасть;
	
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		
		Если СтрокаТЧ.НоменклатураКиЗ = ПараметрыЗаполнения.НоменклатураКиЗ И 
			СтрокаТЧ.ХарактеристикаКиЗ = ПараметрыЗаполнения.ХарактеристикаКиЗ Тогда
			
			ПараметрыОтбора = Новый Структура("КлючСвязи", СтрокаТЧ.КлючСвязи);
			СтрокиКиЗ = Объект.НомераКиЗ.НайтиСтроки(ПараметрыОтбора);
			КоличествоКиЗКЗаполнению = СтрокаТЧ.Количество - СтрокиКиЗ.Количество();
			
			Если КоличествоЗаполненныхКиЗ >= ПараметрыЗаполнения.КоличествоНомеров Тогда
				Прервать;
			КонецЕсли;
			
			Пока КоличествоКиЗКЗаполнению > 0 Цикл
				
				Если КоличествоЗаполненныхКиЗ >= ПараметрыЗаполнения.КоличествоНомеров Тогда
					Прервать;
				КонецЕсли;
				
				СтрокаКиЗ = Объект.НомераКиЗ.Добавить();
				СтрокаКиЗ.КлючСвязи = СтрокаТЧ.КлючСвязи;
				СтрокаКиЗ.НомерКиЗ = ПараметрыЗаполнения.НомерНачалоСтроковаяЧасть + Формат(ТекущийНомерКиЗ, "ЧН=0; ЧГ=0");
				ТекущийНомерКиЗ = ТекущийНомерКиЗ + 1;
				КоличествоЗаполненныхКиЗ = КоличествоЗаполненныхКиЗ + 1;
				КоличествоКиЗКЗаполнению = КоличествоКиЗКЗаполнению - 1;
				
			КонецЦикла;
			
			ПараметрыОтбора = Новый Структура("КлючСвязи", СтрокаТЧ.КлючСвязи);
			СтрокиКиЗ = Объект.НомераКиЗ.НайтиСтроки(ПараметрыОтбора);
			Если СтрокиКиЗ.Количество() = СтрокаТЧ.Количество Тогда
				СтрокаТЧ.ИндексКартинки = 1;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбновитьИндексыКартинокНомераКиЗ();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьШтрихкоды(ДанныеШтрихкодов, ТекущаяСтрока)
	
	ШтрихкодыПоТипам = ИнтеграцияГИСМКлиентСервер.РазложитьПоТипамШтрихкодов(ДанныеШтрихкодов);
	
	Если ШтрихкодыПоТипам.КиЗ.Количество() > 0 Тогда
		
		Для Каждого Штрихкод из ШтрихкодыПоТипам.КиЗ Цикл
			
			ПараметрыОтбора = Новый Структура("КлючСвязи", ТекущаяСтрока.КлючСвязи);
			СтрокиКиЗ = Объект.НомераКиЗ.НайтиСтроки(ПараметрыОтбора);
			
			Если ТекущаяСтрока.Количество <= СтрокиКиЗ.Количество() Тогда
				ТекстСообщения = НСтр("ru = 'Для текущей строки введены все номера КиЗ.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Возврат;
			КонецЕсли;
			
			Если Не ИнтеграцияГИСМВызовСервера.ЭтоНомерКиЗ(Штрихкод.ШтрихКод) Тогда
				ТекстСообщения = НСтр("ru = 'Введенные данные не являются номером КиЗ.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаКиЗ = Объект.НомераКиЗ.Добавить();
			НоваяСтрокаКиЗ.КлючСвязи = ТекущаяСтрока.КлючСвязи;
			НоваяСтрокаКиЗ.НомерКиЗ = Штрихкод.ШтрихКод;
			
		КонецЦикла;
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'Введенные данные не являются номером КиЗ.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидМехаНаСервере(ВидМеха, КодТНВЭД, ВыделенныеСтроки)
	
	МассивСтрок = Новый Массив;
	Для Каждого Строка Из ВыделенныеСтроки Цикл
		МассивСтрок.Добавить(Объект.Товары.НайтиПоИдентификатору(Строка));
	КонецЦикла;
	
	Для каждого ВыделеннаяСтрока Из МассивСтрок Цикл
		Если ВыделеннаяСтрока.КодТНВЭД = КодТНВЭД Тогда
			ВыделеннаяСтрока.ВидМеха = ВидМеха;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
