
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДата();
	КонецЕсли;
	
	Компания = УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Объект.Организация);
	
	ОтчетыУНФ.ПриСозданииНаСервереФормыСвязанногоОбъекта(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаВажныеКоманды);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры // ПриЧтенииНаСервере()

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновлениеСостоянийВнеоборотныхАктивов");
	
КонецПроцедуры // ПослеЗаписи()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

// В процедуре определяется ситуация, когда при изменении своей даты документ 
// оказывается в другом периоде нумерации документов, и в этом случае
// присваивает документу новый уникальный номер.
// Переопределяет соответствующий параметр формы.
//
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	// Обработка события изменения даты.
	ДатаПередИзменением = ДатаДокумента;
	ДатаДокумента = Объект.Дата;
	Если Объект.Дата <> ДатаПередИзменением Тогда
		СтруктураДанные = ПолучитьДанныеДатаПриИзменении(Объект.Ссылка, Объект.Дата, ДатаПередИзменением);
		Если СтруктураДанные.РазностьДат <> 0 Тогда
			Объект.Номер = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДатаПриИзменении()

// В процедуре осуществляется очистка номера документа,
// а также производится установка параметров функциональных опций формы.
// Переопределяет соответствующий параметр формы.
//
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	// Обработка события изменения организации.
	Объект.Номер = "";
	СтруктураДанные = ПолучитьДанныеОрганизацияПриИзменении(Объект.Организация);
	Компания = СтруктураДанные.Компания;
	
КонецПроцедуры // ОрганизацияПриИзменении()

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВнеоборотныеАктивы

&НаКлиенте
Процедура ВнеоборотныеАктивыСтоимостьПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ВнеоборотныеАктивы.ТекущиеДанные;
	СтрокаТабличнойЧасти.ОстаточнаяСтоимость = СтрокаТабличнойЧасти.Стоимость - СтрокаТабличнойЧасти.Амортизация;
	
КонецПроцедуры // ВнеоборотныеАктивыСтоимостьПриИзменении()

&НаКлиенте
Процедура ВнеоборотныеАктивыАмортизацияПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ВнеоборотныеАктивы.ТекущиеДанные;
	СтрокаТабличнойЧасти.Амортизация = ?(
		СтрокаТабличнойЧасти.Амортизация > СтрокаТабличнойЧасти.Стоимость,
		СтрокаТабличнойЧасти.Стоимость,
		СтрокаТабличнойЧасти.Амортизация
	);
	СтрокаТабличнойЧасти.ОстаточнаяСтоимость = СтрокаТабличнойЧасти.Стоимость - СтрокаТабличнойЧасти.Амортизация;
	АмортизацияЗаТекущийМесяцМакс = СтрокаТабличнойЧасти.Стоимость - СтрокаТабличнойЧасти.Амортизация;
	СтрокаТабличнойЧасти.АмортизацияЗаМесяц = ?(
		СтрокаТабличнойЧасти.АмортизацияЗаМесяц > АмортизацияЗаТекущийМесяцМакс,
		АмортизацияЗаТекущийМесяцМакс,
		СтрокаТабличнойЧасти.АмортизацияЗаМесяц
	);
	
КонецПроцедуры // ВнеоборотныеАктивыАмортизацияПриИзменении()

&НаКлиенте
Процедура ВнеоборотныеАктивыОстаточнаяСтоимостьПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ВнеоборотныеАктивы.ТекущиеДанные;
	СтрокаТабличнойЧасти.ОстаточнаяСтоимость = ?(
		СтрокаТабличнойЧасти.ОстаточнаяСтоимость > СтрокаТабличнойЧасти.Стоимость,
		СтрокаТабличнойЧасти.Стоимость,
		СтрокаТабличнойЧасти.ОстаточнаяСтоимость
	);
	СтрокаТабличнойЧасти.Амортизация = СтрокаТабличнойЧасти.Стоимость - СтрокаТабличнойЧасти.ОстаточнаяСтоимость;
	АмортизацияЗаТекущийМесяцМакс = СтрокаТабличнойЧасти.Стоимость - СтрокаТабличнойЧасти.Амортизация;
	СтрокаТабличнойЧасти.АмортизацияЗаМесяц = ?(
		СтрокаТабличнойЧасти.АмортизацияЗаМесяц > АмортизацияЗаТекущийМесяцМакс,
		АмортизацияЗаТекущийМесяцМакс,
		СтрокаТабличнойЧасти.АмортизацияЗаМесяц
	);
	
КонецПроцедуры // ВнеоборотныеАктивыОстаточнаяСтоимостьПриИзменении()

&НаКлиенте
Процедура ВнеоборотныеАктивыАмортизацияЗаМесяцПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ВнеоборотныеАктивы.ТекущиеДанные;
	АмортизацияЗаТекущийМесяцМакс = СтрокаТабличнойЧасти.Стоимость - СтрокаТабличнойЧасти.Амортизация;
	СтрокаТабличнойЧасти.АмортизацияЗаМесяц = ?(
		СтрокаТабличнойЧасти.АмортизацияЗаМесяц > АмортизацияЗаТекущийМесяцМакс,
		АмортизацияЗаТекущийМесяцМакс,
		СтрокаТабличнойЧасти.АмортизацияЗаМесяц
	);
	
КонецПроцедуры // ВнеоборотныеАктивыАмортизацияЗаМесяцПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Рассчитать(Команда)
	
	Если Объект.Проведен Тогда
		ПоказатьПредупреждение(Неопределено,НСтр("ru='Рассчет амортизации возможен только в непроведенном документе.'"));
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("РассчитатьЗавершение", ЭтотОбъект), НСтр("ru='Введенные данные будут пересчитаны! Продолжить?'"),РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если Объект.ВнеоборотныеАктивы.Количество() > 0
        И Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    АдресВнеоборотныеАктивыВХранилище = ПоместитьВнеоборотныеАктивыВХранилище();
    РассчитатьАмортизацию(АдресВнеоборотныеАктивыВХранилище, Объект.Дата, Компания);
    ПолучитьВнеоборотныеАктивыИзХранилища(АдресВнеоборотныеАктивыВХранилище);

КонецПроцедуры // Рассчитать()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеДатаПриИзменении(ДокументСсылка, ДатаНовая, ДатаПередИзменением)
	
	РазностьДат = УправлениеНебольшойФирмойСервер.ПроверитьНомерДокумента(ДокументСсылка, ДатаНовая, ДатаПередИзменением);
	
	СтруктураДанные = Новый Структура();
	
	СтруктураДанные.Вставить(
		"РазностьДат",
		РазностьДат
	);
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеДатаПриИзменении()

&НаСервереБезКонтекста
Функция ПолучитьДанныеОрганизацияПриИзменении(Организация)
	
	СтруктураДанные = Новый Структура();
	
	СтруктураДанные.Вставить(
		"Компания",
		УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация)		
	);
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеОрганизацияПриИзменении()

// Рассчитывает амортизацию имущества.
//
&НаСервереБезКонтекста
Процедура РассчитатьАмортизацию(АдресВнеоборотныеАктивыВХранилище, Дата, Организация)
	
	ТаблицаВнеоборотныеАктивы = ПолучитьИзВременногоХранилища(АдресВнеоборотныеАктивыВХранилище);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Дата));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("СписокВнеоборотныхАктивов", ТаблицаВнеоборотныеАктивы.ВыгрузитьКолонку("ВнеоборотныйАктив"));
	Запрос.УстановитьПараметр("ТаблицаВнеоборотныеАктивы", ТаблицаВнеоборотныеАктивы);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокАмортизируемыхВА.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ПРЕДСТАВЛЕНИЕ(СписокАмортизируемыхВА.ВнеоборотныйАктив) КАК ВнеоборотныйАктивПредставление,
	|	СписокАмортизируемыхВА.ВнеоборотныйАктив.Код КАК Код,
	|	СписокАмортизируемыхВА.НачалоНачислятьАмортизацию КАК НачалоНачислятьАмортизацию,
	|	СписокАмортизируемыхВА.КонецНачислятьАмортизацию КАК КонецНачислятьАмортизацию,
	|	СписокАмортизируемыхВА.КонецНачислятьВТекущемМесяце КАК КонецНачислятьВТекущемМесяце,
	|	ЕСТЬNULL(СтоимостьВА.АмортизацияКонечныйОстаток, 0) КАК АмортизацияКонечныйОстаток,
	|	ЕСТЬNULL(СтоимостьВА.АмортизацияОборот, 0) КАК АмортизацияОборот,
	|	ЕСТЬNULL(СтоимостьВА.СтоимостьКонечныйОстаток, 0) КАК БалансоваяСтоимость,
	|	ЕСТЬNULL(СтоимостьВА.СтоимостьНачальныйОстаток, 0) КАК СтоимостьНачальныйОстаток,
	|	ЕСТЬNULL(АмортизацияОстаткиИОбороты.СтоимостьНачальныйОстаток, 0) - ЕСТЬNULL(АмортизацияОстаткиИОбороты.АмортизацияНачальныйОстаток, 0) КАК СтоимостьНаНачалоГода,
	|	ЕСТЬNULL(СписокАмортизируемыхВА.ВнеоборотныйАктив.СпособАмортизации, 0) КАК СпособНачисленияАмортизации,
	|	ЕСТЬNULL(СписокАмортизируемыхВА.ВнеоборотныйАктив.НачальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(ПараметрыАмортизацииСрезПоследних.ПрименитьВТекущемМесяце, 0) КАК ПрименитьВТекущемМесяце,
	|	ПараметрыАмортизацииСрезПоследних.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ПараметрыАмортизацииСрезПоследних.ПрименитьВТекущемМесяце
	|			ТОГДА ЕСТЬNULL(ПараметрыАмортизацииСрезПоследних.СрокИспользованияДляВычисленияАмортизации, 0)
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыАмортизацииСрезПоследнихНачалоМесяца.СрокИспользованияДляВычисленияАмортизации, 0)
	|	КОНЕЦ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ВЫБОР
	|		КОГДА ПараметрыАмортизацииСрезПоследних.ПрименитьВТекущемМесяце
	|			ТОГДА ЕСТЬNULL(ПараметрыАмортизацииСрезПоследних.СтоимостьДляВычисленияАмортизации, 0)
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыАмортизацииСрезПоследнихНачалоМесяца.СтоимостьДляВычисленияАмортизации, 0)
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|	ЕСТЬNULL(ИзменениеПризнакаАмортизации.ИзменениеНачислАморт, ЛОЖЬ) КАК ИзменениеНачислАморт,
	|	ЕСТЬNULL(ИзменениеПризнакаАмортизации.НачислятьВТекМесяце, ЛОЖЬ) КАК НачислятьВТекМесяце,
	|	ЕСТЬNULL(ВыработкаВнеоборотногоАктиваОбороты.КоличествоОборот, 0) КАК ОбъемВыработки,
	|	ВЫБОР
	|		КОГДА ПараметрыАмортизацииСрезПоследних.ПрименитьВТекущемМесяце
	|			ТОГДА ЕСТЬNULL(ПараметрыАмортизацииСрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации, 0)
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыАмортизацииСрезПоследнихНачалоМесяца.ОбъемПродукцииРаботДляВычисленияАмортизации, 0)
	|	КОНЕЦ КАК ОбъемПродукцииРаботДляВычисленияАмортизации
	|ПОМЕСТИТЬ ВременнаяТаблицаДляРасчетаАмортизации
	|ИЗ
	|	(ВЫБРАТЬ
	|		СрезПервых.НачислятьАмортизацию КАК НачалоНачислятьАмортизацию,
	|		СрезПоследних.НачислятьАмортизацию КАК КонецНачислятьАмортизацию,
	|		СрезПоследних.НачислятьАмортизациюВТекущемМесяце КАК КонецНачислятьВТекущемМесяце,
	|		СрезПоследних.ВнеоборотныйАктив КАК ВнеоборотныйАктив
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СостояниеВнеоборотногоАктиваСрезПервых.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|			СостояниеВнеоборотногоАктиваСрезПервых.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|			СостояниеВнеоборотногоАктиваСрезПервых.НачислятьАмортизациюВТекущемМесяце КАК НачислятьАмортизациюВТекущемМесяце,
	|			СостояниеВнеоборотногоАктиваСрезПервых.Период КАК Период
	|		ИЗ
	|			РегистрСведений.СостоянияВнеоборотныхАктивов.СрезПоследних(
	|					&НачалоПериода,
	|					Организация = &Организация
	|						И ВнеоборотныйАктив В (&СписокВнеоборотныхАктивов)) КАК СостояниеВнеоборотногоАктиваСрезПервых) КАК СрезПервых
	|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СостояниеВнеоборотногоАктиваСрезПоследних.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|				СостояниеВнеоборотногоАктиваСрезПоследних.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|				СостояниеВнеоборотногоАктиваСрезПоследних.НачислятьАмортизациюВТекущемМесяце КАК НачислятьАмортизациюВТекущемМесяце,
	|				СостояниеВнеоборотногоАктиваСрезПоследних.Период КАК Период
	|			ИЗ
	|				РегистрСведений.СостоянияВнеоборотныхАктивов.СрезПоследних(
	|						&КонецПериода,
	|						Организация = &Организация
	|							И ВнеоборотныйАктив В (&СписокВнеоборотныхАктивов)) КАК СостояниеВнеоборотногоАктиваСрезПоследних) КАК СрезПоследних
	|			ПО СрезПервых.ВнеоборотныйАктив = СрезПоследних.ВнеоборотныйАктив) КАК СписокАмортизируемыхВА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВнеоборотныеАктивы.ОстаткиИОбороты(
	|				&НачалоГода,
	|				,
	|				,
	|				,
	|				Организация = &Организация
	|					И ВнеоборотныйАктив В (&СписокВнеоборотныхАктивов)) КАК АмортизацияОстаткиИОбороты
	|		ПО СписокАмортизируемыхВА.ВнеоборотныйАктив = АмортизацияОстаткиИОбороты.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВнеоборотныеАктивы.ОстаткиИОбороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				,
	|				Организация = &Организация
	|					И ВнеоборотныйАктив В (&СписокВнеоборотныхАктивов)) КАК СтоимостьВА
	|		ПО СписокАмортизируемыхВА.ВнеоборотныйАктив = СтоимостьВА.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыВнеоборотныхАктивов.СрезПоследних(
	|				&КонецПериода,
	|				Организация = &Организация
	|					И ВнеоборотныйАктив В (&СписокВнеоборотныхАктивов)) КАК ПараметрыАмортизацииСрезПоследних
	|		ПО СписокАмортизируемыхВА.ВнеоборотныйАктив = ПараметрыАмортизацииСрезПоследних.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыВнеоборотныхАктивов.СрезПоследних(
	|				&НачалоПериода,
	|				Организация = &Организация
	|					И ВнеоборотныйАктив В (&СписокВнеоборотныхАктивов)) КАК ПараметрыАмортизацииСрезПоследнихНачалоМесяца
	|		ПО СписокАмортизируемыхВА.ВнеоборотныйАктив = ПараметрыАмортизацииСрезПоследнихНачалоМесяца.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИСТИНА) КАК ИзменениеНачислАморт,
	|			СостояниеВнеоборотногоАктива.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|			СостояниеВнеоборотногоАктиваСрезПоследних.НачислятьАмортизациюВТекущемМесяце КАК НачислятьВТекМесяце
	|		ИЗ
	|			РегистрСведений.СостоянияВнеоборотныхАктивов КАК СостояниеВнеоборотногоАктива
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияВнеоборотныхАктивов.СрезПоследних(
	|						&КонецПериода,
	|						Организация = &Организация
	|							И ВнеоборотныйАктив В (&СписокВнеоборотныхАктивов)) КАК СостояниеВнеоборотногоАктиваСрезПоследних
	|				ПО СостояниеВнеоборотногоАктива.ВнеоборотныйАктив = СостояниеВнеоборотногоАктиваСрезПоследних.ВнеоборотныйАктив
	|		ГДЕ
	|			СостояниеВнеоборотногоАктива.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И СостояниеВнеоборотногоАктива.Организация = &Организация
	|			И СостояниеВнеоборотногоАктива.ВнеоборотныйАктив В(&СписокВнеоборотныхАктивов)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СостояниеВнеоборотногоАктива.ВнеоборотныйАктив,
	|			СостояниеВнеоборотногоАктиваСрезПоследних.НачислятьАмортизациюВТекущемМесяце) КАК ИзменениеПризнакаАмортизации
	|		ПО СписокАмортизируемыхВА.ВнеоборотныйАктив = ИзменениеПризнакаАмортизации.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыработкаВнеоборотныхАктивов.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				Организация = &Организация
	|					И ВнеоборотныйАктив В (&СписокВнеоборотныхАктивов)) КАК ВыработкаВнеоборотногоАктиваОбороты
	|		ПО СписокАмортизируемыхВА.ВнеоборотныйАктив = ВыработкаВнеоборотногоАктиваОбороты.ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Период КАК Период,
	|	Таблица.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	Таблица.ВнеоборотныйАктивПредставление КАК ВнеоборотныйАктивПредставление,
	|	Таблица.Код КАК Код,
	|	Таблица.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	Таблица.БалансоваяСтоимость КАК БалансоваяСтоимость,
	|	0 КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА Таблица.СуммаАмортизации < Таблица.ВсегоОсталосьСписать
	|					ТОГДА Таблица.СуммаАмортизации
	|				ИНАЧЕ Таблица.ВсегоОсталосьСписать
	|			КОНЕЦ > 0
	|			ТОГДА ВЫБОР
	|					КОГДА Таблица.СуммаАмортизации < Таблица.ВсегоОсталосьСписать
	|						ТОГДА Таблица.СуммаАмортизации
	|					ИНАЧЕ Таблица.ВсегоОсталосьСписать
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Амортизация
	|ПОМЕСТИТЬ ТаблицаРасчетаАмортизации
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА Таблица.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииВнеоборотныхАктивов.Линейный)
	|				ТОГДА Таблица.СтоимостьДляВычисленияАмортизации / ВЫБОР
	|						КОГДА Таблица.СрокИспользованияДляВычисленияАмортизации = 0
	|							ТОГДА 1
	|						ИНАЧЕ Таблица.СрокИспользованияДляВычисленияАмортизации
	|					КОНЕЦ
	|			КОГДА Таблица.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииВнеоборотныхАктивов.ПропорциональноОбъемуПродукции)
	|				ТОГДА Таблица.СтоимостьДляВычисленияАмортизации * Таблица.ОбъемВыработки / ВЫБОР
	|						КОГДА Таблица.ОбъемПродукцииРаботДляВычисленияАмортизации = 0
	|							ТОГДА 1
	|						ИНАЧЕ Таблица.ОбъемПродукцииРаботДляВычисленияАмортизации
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаАмортизации,
	|		Таблица.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|		Таблица.ВнеоборотныйАктивПредставление КАК ВнеоборотныйАктивПредставление,
	|		Таблица.Код КАК Код,
	|		Таблица.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|		Таблица.БалансоваяСтоимость КАК БалансоваяСтоимость,
	|		Таблица.БалансоваяСтоимость - Таблица.АмортизацияКонечныйОстаток КАК ВсегоОсталосьСписать
	|	ИЗ
	|		ВременнаяТаблицаДляРасчетаАмортизации КАК Таблица) КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВременнаяТаблицаДляРасчетаАмортизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВнеоборотныеАктивы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВнеоборотныеАктивы.ВнеоборотныйАктив КАК ВнеоборотныйАктив
	|ПОМЕСТИТЬ ТаблицаВнеоборотныеАктивы
	|ИЗ
	|	&ТаблицаВнеоборотныеАктивы КАК ТаблицаВнеоборотныеАктивы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВнеоборотныеАктивы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВнеоборотныеАктивы.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ТаблицаРасчетаАмортизации.БалансоваяСтоимость КАК Стоимость,
	|	ТаблицаРасчетаАмортизации.Амортизация КАК АмортизацияЗаМесяц,
	|	ТаблицаРасчетаАмортизации.АмортизацияКонечныйОстаток КАК Амортизация,
	|	ТаблицаРасчетаАмортизации.БалансоваяСтоимость - ТаблицаРасчетаАмортизации.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость
	|ИЗ
	|	ТаблицаВнеоборотныеАктивы КАК ТаблицаВнеоборотныеАктивы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасчетаАмортизации КАК ТаблицаРасчетаАмортизации
	|		ПО ТаблицаВнеоборотныеАктивы.ВнеоборотныйАктив = ТаблицаРасчетаАмортизации.ВнеоборотныйАктив
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВнеоборотныеАктивы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРасчетаАмортизации";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаАмортизации = РезультатЗапроса[4].Выгрузить();
	
	ПоместитьВоВременноеХранилище(ТаблицаАмортизации, АдресВнеоборотныеАктивыВХранилище);
	
КонецПроцедуры // РассчитатьАмортизацию()

// Функция помещает табличную часть ВнеоборотныеАктивы во временное хранилище
// и возвращает адрес
//
&НаСервере
Функция ПоместитьВнеоборотныеАктивыВХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(
		Объект.ВнеоборотныеАктивы.Выгрузить(,
			"НомерСтроки,
			|ВнеоборотныйАктив"
		),
		УникальныйИдентификатор
	);
	
КонецФункции // ПоместитьВнеоборотныеАктивыВХранилище()

// Функция получает табличную часть ВнеоборотныеАктивы из временного хранилища.
//
&НаСервере
Процедура ПолучитьВнеоборотныеАктивыИзХранилища(АдресВнеоборотныеАктивыВХранилище)
	
	ТаблицаВнеоборотныеАктивы = ПолучитьИзВременногоХранилища(АдресВнеоборотныеАктивыВХранилище);
	Объект.ВнеоборотныеАктивы.Очистить();
	Для каждого СтрокаВнеоборотныеАктивы Из ТаблицаВнеоборотныеАктивы Цикл
		Строка = Объект.ВнеоборотныеАктивы.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаВнеоборотныеАктивы);
	КонецЦикла;
	
КонецПроцедуры // ПолучитьВнеоборотныеАктивыИзХранилища()

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти