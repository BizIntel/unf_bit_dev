#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта()Экспорт
	СоответствиеРеквизитовПутиВФормеОбъекта = Новый Структура;
	
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("СтраховойНомерПФР", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Фамилия", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Имя", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("АдресДляИнформирования", "");
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
КонецФункции

Функция ПолучитьСоответствиеПроверяемыхРеквизитовОткрываемымОбъектам(ДокументСсылка, ДанныеДляПроверки)Экспорт
	Возврат Новый Структура;
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// Процедуры получения данных для заполнения и проведения документа.

Функция СформироватьЗапросПоЗаписямСтажаДляПечати(Документ)Экспорт 	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.НомерСтроки,
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР,
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка КАК Ссылка,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформированияПредставление
	|ПОМЕСТИТЬ ВТСотрудникДокумента
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка В (&Документ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.НомерСтроки КАК НомерСтрокиСтаж,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	РеестрСЗВ_6_2Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР,
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка КАК Ссылка,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформированияПредставление
	|ИЗ
	|	ВТСотрудникДокумента КАК РеестрСЗВ_6_2Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.ЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО РеестрСЗВ_6_2Сотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|			И РеестрСЗВ_6_2Сотрудники.Ссылка = ЗаписиОСтаже.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтрокиСотрудник,
	|	НомерСтрокиСтаж";
	
	Возврат Запрос.Выполнить();
КонецФункции	

Функция СформироватьЗапросПоСпискуЗастрахованныхЛицДляПечати(Документ)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка КАК Ссылка,
	|	РеестрСЗВ_6_2Сотрудники.НомерСтроки КАК НомерСтроки,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка =&Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции	

Функция СформироватьЗапросПоШапкеДляПечати(Документ)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2.Ссылка КАК Ссылка,
	|	РеестрСЗВ_6_2.Организация.РегистрационныйНомерПФР КАК РегНомерПФР,
	|	РеестрСЗВ_6_2.Организация.ИНН КАК ИНН,
	|	РеестрСЗВ_6_2.Организация.КПП КАК КПП,
	|	РеестрСЗВ_6_2.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2.ОтчетныйПериод,
	|	РеестрСЗВ_6_2.ТипСведенийСЗВ,
	|	РеестрСЗВ_6_2.КорректируемыйПериод,
	|	РеестрСЗВ_6_2.Руководитель КАК Руководитель,
	|	РеестрСЗВ_6_2.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	РеестрСЗВ_6_2.Дата,
	|	РеестрСЗВ_6_2.НомерПачки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РеестрСЗВ_6_2Сотрудники.Сотрудник) КАК КоличествоЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2.Организация
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2 КАК РеестрСЗВ_6_2
	|		ПО РеестрСЗВ_6_2Сотрудники.Ссылка = РеестрСЗВ_6_2.Ссылка
	|ГДЕ
	|	РеестрСЗВ_6_2.Ссылка В (&Документ)
	|
	|СГРУППИРОВАТЬ ПО
	|	РеестрСЗВ_6_2.Ссылка,
	|	РеестрСЗВ_6_2.Организация.РегистрационныйНомерПФР,
	|	РеестрСЗВ_6_2.Организация.ИНН,
	|	РеестрСЗВ_6_2.Организация.КПП,
	|	РеестрСЗВ_6_2.КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2.ОтчетныйПериод,
	|	РеестрСЗВ_6_2.ТипСведенийСЗВ,
	|	РеестрСЗВ_6_2.КорректируемыйПериод,
	|	РеестрСЗВ_6_2.Руководитель,
	|	РеестрСЗВ_6_2.ДолжностьРуководителя,
	|	РеестрСЗВ_6_2.Дата,
	|	РеестрСЗВ_6_2.НомерПачки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Руководитель";
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2.Ссылка КАК Ссылка,
	|	РеестрСЗВ_6_2.РегНомерПФР КАК РегНомерПФР,
	|	РеестрСЗВ_6_2.ИНН КАК ИНН,
	|	РеестрСЗВ_6_2.КПП КАК КПП,
	|	РеестрСЗВ_6_2.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2.ОтчетныйПериод,
	|	РеестрСЗВ_6_2.ТипСведенийСЗВ,
	|	РеестрСЗВ_6_2.КорректируемыйПериод,
	|	РеестрСЗВ_6_2.Руководитель КАК Руководитель,
	|	РеестрСЗВ_6_2.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	РеестрСЗВ_6_2.Дата,
	|	РеестрСЗВ_6_2.НомерПачки,
	|	Организации.КодПоОКПО КАК ОКПО,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(255))) = """"
	|			ТОГДА Организации.Наименование
	|		ИНАЧЕ Организации.НаименованиеПолное
	|	КОНЕЦ КАК НаименованиеОрганизации,
	|	РеестрСЗВ_6_2.КоличествоЗастрахованныхЛиц
	|ИЗ
	|	ВТДанныеДокументов КАК РеестрСЗВ_6_2
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО РеестрСЗВ_6_2.Организация = Организации.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Для обеспечения формирования выходного файла

Функция СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа, КоличествоДокументов)
	
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70_2010XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();

	ДеревоФормата = СправкиПоНДФЛ.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ДатаЗаполнения 			= ВыборкаПоШапкеДокумента.Дата;
	ТипФормДокументов		= ВыборкаПоШапкеДокумента.ТипФормДокументов;
	НомерПачки				= ВыборкаПоШапкеДокумента.НомерПачки;
		
	////////////////////////////////////////////////////////////////////////////////////////////
	//ФОРМИРУЕМ ФАЙЛ СВЕДЕНИЙ
	
	// Список стран
	СписокСтран = Новый Соответствие;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтраныМира.Наименование,
	|	СтраныМира.Код
	|ИЗ
	|	Справочник.СтраныМира КАК СтраныМира";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокСтран.Вставить(СокрЛП(Выборка.Наименование), Строка(Выборка.Код));
	КонецЦикла;	
	
	ТипДокументовПачки = "СВЕДЕНИЯ_О_СТРАХОВЫХ_ВЗНОСАХ_И_СТРАХОВОМ_СТАЖЕ_ЗЛ";
	
	// Создаем начальное дерево
	ДеревоВыгрузки = СправкиПоНДФЛ.СоздатьДеревоXML();
	УзелПФР = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ФайлПФР", "", );
	УчетСтраховыхВзносов.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
	// Добавляем ветки ПачкаВходящихДокументов и ВходящаяОпись
	НаборЗаписейВходящаяОпись = "";
	УзелПачкаВходящихДокументов = "";
	УзелПачкаВходящихДокументов = УчетСтраховыхВзносов.ЗаполнитьНаборЗаписейВходящаяОписьСЗВ6(УзелПФР, ДеревоФормата, ТипДокументовПачки, ВыборкаПоШапкеДокумента, КоличествоДокументов, 1, ,НаборЗаписейВходящаяОпись);
	
	ДанныеВходящейОписи = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(НаборЗаписейВходящаяОпись);
	
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ",""), НаборЗаписейВходящаяОпись);
	
	ФорматСЗВ6 = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СЗВ_6");
	
	Если ТипФормДокументов = "СЗВ-6-2" Тогда
		ФорматСЗВ6.СтажевыйПериод.Значение.Удалить("КоличествоЛьготныхСоставляющих");
		ФорматСЗВ6.СтажевыйПериод.Значение.Удалить("ЛьготныйСтаж");
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ФорматСЗВ6.Удалить("КорректируемыйОтчетныйПериод");
	ИначеЕсли ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		ФорматСЗВ6.Удалить("СуммаВзносовНаСтраховую");
		ФорматСЗВ6.Удалить("СуммаВзносовНаНакопительную");
		ФорматСЗВ6.Удалить("СтажевыйПериод");
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ОрганизацияЮрФизЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		
		ФорматСЗВ6.Удалить("КПП");
		ТаблицаПолей = ФорматСЗВ6.НалоговыйНомер.Поля;
		ТаблицаПолей.Индексы.Добавить("ИмяПоля");
		СтрокаКПП = ТаблицаПолей.Найти("КПП", "ИмяПоля");
		Если СтрокаКПП <> Неопределено Тогда
			ТаблицаПолей.Удалить(СтрокаКПП);
		КонецЕсли;
	КонецЕсли;
	
	ФорматИностранныйАдрес = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АдресОбщий", 3);
	ФорматНеструктурированныйАдрес = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АдресОбщий", 2);
	
	НомерДокументаВПачке = 1;
	ВыборкаПоСотрудникам	= РезультатЗапросаПоЗаписямСтажа.Выбрать();
	рез = РезультатЗапросаПоЗаписямСтажа.выгрузить();
	Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерСтрокиСотрудник")	Цикл
		
		НаборЗаписейСЗВ6 = ФорматСЗВ6;
		
		// Общие данные пачки - берем их из описи
		НаборЗаписейСЗВ6.ВидФормы.Значение = ВыборкаПоШапкеДокумента.ТипФормДокументов;
		НаборЗаписейСЗВ6.ТипСведений.Значение = ДанныеВходящейОписи.ТипСведений.Значение;
		НаборЗаписейСЗВ6.РегистрационныйНомер.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.РегистрационныйНомер.Значение;
		НаборЗаписейСЗВ6.НаименованиеКраткое.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.НаименованиеКраткое.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.НалоговыйНомер.Значение, ДанныеВходящейОписи.СоставительПачки.Значение.НалоговыйНомер.Значение);
		НаборЗаписейСЗВ6.КодКатегории.Значение = ДанныеВходящейОписи.КодКатегории.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.ОтчетныйПериод.Значение,ДанныеВходящейОписи.ОтчетныйПериод.Значение);
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.КорректируемыйОтчетныйПериод.Значение,ДанныеВходящейОписи.КорректируемыйОтчетныйПериод.Значение);
		КонецЕсли;
		НаборЗаписейСЗВ6.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
		
		// Данные физлица
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		Фамилия = СокрЛП(ВыборкаПоСотрудникам.Фамилия);
		Имя = СокрЛП(ВыборкаПоСотрудникам.Имя);
		Отчество = СокрЛП(ВыборкаПоСотрудникам.Отчество);
		
		НаборЗаписейСЗВ6.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейСЗВ6.СтраховойНомер.Значение = ВыборкаПоСотрудникам.СтраховойНомерПФР;
		НаборЗаписейФИО = НаборЗаписейСЗВ6.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(Фамилия);
		НаборЗаписейФИО.Имя = ВРег(Имя);
		НаборЗаписейФИО.Отчество = ВРег(Отчество);
		
		// Заполняем адрес застрахованного лица, если он есть.
		Если СокрЛП(СтрЗаменить(ВыборкаПоСотрудникам.АдресДляИнформирования, ",","")) <> "" Тогда
			АдресДляИнформирования = ВыборкаПоСотрудникам.АдресДляИнформирования;
		Иначе	
			АдресДляИнформирования = "";	
		КонецЕсли; 
		Если ЗначениеЗаполнено(ВыборкаПоСотрудникам.АдресДляИнформирования) И Не ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
			НаборЗаписейАдресЗЛ = НаборЗаписейСЗВ6.АдресЗЛ.Значение;
			УчетСтраховыхВзносов.ЗаполнитьАдрес(НаборЗаписейАдресЗЛ, ВыборкаПоСотрудникам.АдресДляИнформирования, СписокСтран, ФорматНеструктурированныйАдрес, ФорматИностранныйАдрес);
		Иначе
			НаборЗаписейСЗВ6.АдресЗЛ.НеВыводитьВФайл = Истина; 	
		КонецЕсли;

				
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда // заполнение отменяющей формы завершено
			УзелСЗВ61 = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
			СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСЗВ61, НаборЗаписейСЗВ6);
			Продолжить;
		КонецЕсли;
		
		УчетСтраховыхВзносов.ВписатьВзносыВНаборДанных(НаборЗаписейСЗВ6, ВыборкаПоСотрудникам.НачисленоСтраховая, ВыборкаПоСотрудникам.УплаченоСтраховая, ВыборкаПоСотрудникам.НачисленоНакопительная, ВыборкаПоСотрудникам.УплаченоНакопительная);
		
		// Выводим стаж
		
		ФорматСтажевыйПериод = НаборЗаписейСЗВ6.СтажевыйПериод.Значение;
		НаборЗаписейСЗВ6.СтажевыйПериод.НеВыводитьВФайл = Истина; 
		
		УзелСЗВ61 = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
		СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСЗВ61, НаборЗаписейСЗВ6);
					
		ЧислоОсновныхЗаписейОСтаже = 0;
		СотрудникОрганизацииИмеетЛьготныйСтаж = Ложь;
		
		НомерСтроки = 0;	
		Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерСтрокиСтаж")	Цикл
			
			Если ЗначениеЗаполнено(ВыборкаПоСотрудникам.ДатаНачалаПериода) И ЗначениеЗаполнено(ВыборкаПоСотрудникам.ДатаОкончанияПериода) Тогда
				НомерСтроки = НомерСтроки + 1;
				
				ФорматСтажевыйПериод.НомерСтроки.Значение = НомерСтроки;
				ФорматСтажевыйПериод.ДатаНачалаПериода.Значение = ВыборкаПоСотрудникам.ДатаНачалаПериода;
				ФорматСтажевыйПериод.ДатаКонцаПериода.Значение = ВыборкаПоСотрудникам.ДатаОкончанияПериода;
				
				УзелСтажевыйПериод = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСЗВ61, "СтажевыйПериод","");
				СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСтажевыйПериод, ФорматСтажевыйПериод);
											
			КонецЕсли;
			
		КонецЦикла;									
	
	КонецЦикла;
		
	// Преобразуем дерево в строковое описание XML
	ТекстФайла ="";
	ТекстФайла = УчетСтраховыхВзносов.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	Возврат ТекстФайла;
	
КонецФункции

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Ссылка) Экспорт 

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Застрахованные.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(Застрахованные.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(Застрахованные.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(Застрахованные.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	КОЛИЧЕСТВО(Застрахованные.НомерСтроки) КАК Количество
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрСЗВ_6_2.Ссылка,
	|	РеестрСЗВ_6_2.Номер,
	|	РеестрСЗВ_6_2.Дата,
	|	РеестрСЗВ_6_2.Проведен,
	|	РеестрСЗВ_6_2.Организация,
	|	РеестрСЗВ_6_2.КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2.ОтчетныйПериод,
	|	РеестрСЗВ_6_2.ТипСведенийСЗВ,
	|	ВЫБОР
	|		КОГДА РеестрСЗВ_6_2.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ РеестрСЗВ_6_2.КорректируемыйПериод
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	РеестрСЗВ_6_2.НомерПачки,
	|	РеестрСЗВ_6_2.ДокументПринятВПФР,
	|	РеестрСЗВ_6_2.Ответственный,
	|	РеестрСЗВ_6_2.ДолжностьРуководителя КАК РуководительДолжность,
	|	РеестрСЗВ_6_2.Организация.Наименование,
	|	РеестрСЗВ_6_2.Организация.ЮридическоеФизическоеЛицо КАК ОрганизацияЮрФизЛицо,
	|	РеестрСЗВ_6_2.Организация.ОГРН,
	|	ВЫБОР
	|		КОГДА РеестрСЗВ_6_2.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(РеестрСЗВ_6_2.Организация.КодПоОКПО,1,8)
	|		ИНАЧЕ РеестрСЗВ_6_2.Организация.КодПоОКПО
	|	КОНЕЦ КАК ОрганизацияКодПоОКПО,
	|	РеестрСЗВ_6_2.Организация.НаименованиеПолное,
	|	РеестрСЗВ_6_2.Организация.Наименование КАК НаименованиеСокращенное,
	|	РеестрСЗВ_6_2.Организация.РегистрационныйНомерПФР,
	|	ВЫБОР
	|		КОГДА РеестрСЗВ_6_2.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(РеестрСЗВ_6_2.Организация.ИНН,1,10)
	|		ИНАЧЕ РеестрСЗВ_6_2.Организация.ИНН
	|	КОНЕЦ КАК ОрганизацияИНН,
	|	РеестрСЗВ_6_2.Организация.КПП,
	|	ВЫБОР
	|		КОГДА РеестрСЗВ_6_2.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РеестрСЗВ_6_2.Организация
	|		ИНАЧЕ РеестрСЗВ_6_2.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ГОД(РеестрСЗВ_6_2.ОтчетныйПериод) КАК Год,
	|	ВЫБОР
	|		КОГДА РеестрСЗВ_6_2.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(РеестрСЗВ_6_2.Организация.КодПоОКПО,1,8)
	|		ИНАЧЕ РеестрСЗВ_6_2.Организация.КодПоОКПО
	|	КОНЕЦ КАК ОКПО,
	|	""СЗВ-6-2"" КАК ТипФормДокументов,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоСтраховая, 0) КАК УплаченоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоНакопительная, 0) КАК НачисленоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоНакопительная, 0) КАК УплаченоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.Количество, 0) КАК Количество,
	|	РеестрСЗВ_6_2.ИмяФайлаДляПФР
	|ИЗ
	|	Документ.РеестрСЗВ_6_2 КАК РеестрСЗВ_6_2
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО РеестрСЗВ_6_2.Организация.ГоловнаяОрганизация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ИтогиПоВзносам
	|		ПО (ИСТИНА)
	|ГДЕ
	|	РеестрСЗВ_6_2.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();

КонецФункции

Функция СформироватьЗапросПоЗаписямСтажа(Ссылка)Экспорт 
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР,
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоНакопительная
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.НомерСтроки КАК НомерСтрокиСтаж,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	РеестрСЗВ_6_2Сотрудники.НомерСтрокиСотрудник,
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР,
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоНакопительная
	|ИЗ
	|	ВТСотрудникиДокумента КАК РеестрСЗВ_6_2Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.ЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО РеестрСЗВ_6_2Сотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|			И (ЗаписиОСтаже.Ссылка = &Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеестрСЗВ_6_2Сотрудники.НомерСтрокиСотрудник,
	|	НомерСтрокиСтаж";
	
	Возврат Запрос.Выполнить();
	
	
КонецФункции	

Функция СформироватьФайлСЗВ(Объект, ИмяФайла)Экспорт
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке(Объект.Ссылка).Выбрать();
	РезультатЗапросаПоЗаписямСтажа = СформироватьЗапросПоЗаписямСтажа(Объект.Ссылка);
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	ТекстФайла = СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа, ВыборкаПоШапкеДокумента.Количество);
	
	ИмяФайла =  ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР;
	
	Возврат ТекстФайла;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции печати.

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета формировать табличный документ
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаСЗВ_6_2") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ФормаСЗВ_6_2",
			"Форма СЗВ-6-2", СформироватьПечатнуюФормуСЗВ_6_2(МассивОбъектов[0], ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокЗастрахованныхЛиц") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СписокЗастрахованныхЛиц",
			"Список застрахованных лиц", СформироватьПечатнуюФормуСписокЗастрахованныхЛиц(МассивОбъектов[0], ОбъектыПечати));
	КонецЕсли;

КонецПроцедуры


Функция СформироватьПечатнуюФормуСЗВ_6_2(Документ, ОбъектыПечати)Экспорт
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрСЗВ_6_2_Форма_СЗВ_6_2";
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = Документы.РеестрСЗВ_6_2.ПолучитьМакет("ФормаСЗВ_6_2");
	
	ВыборкаДокументов = СформироватьЗапросПоШапкеДляПечати(Документ).Выбрать();
	
	ВыборкаЗаписейСтажа = СформироватьЗапросПоЗаписямСтажаДляПечати(Документ).Выбрать();
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Ссылка") Цикл
		ИтогУплаченоНакопительная = 0;
		ИтогУплаченоСтраховая = 0;
		ИтогНачисленоНакопительная = 0;
		ИтогНачисленоСтраховая = 0;
		
		ВыборкаЗаписейСтажа.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		
		Если ВыборкаЗаписейСтажа.НайтиСледующий(СтруктураПоиска) Тогда 
			ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ВыборкаДокументов, "РегНомерПФР, ИНН, КПП, ОКПО");
			
			ОбластьШапка.Параметры.НаименованиеОрганизации = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаДокументов.НаименованиеОрганизации);
			
			ОбластьШапка.Параметры.КодКатегории = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаДокументов.КатегорияЗастрахованныхЛиц);
			
			ОтчетныйПериод = ВыборкаДокументов.ОтчетныйПериод;
			КорректируемыйПериод = ВыборкаДокументов.КорректируемыйПериод;
			
			ОбластьШапка.Параметры.ЭтоКварталОтчетногоГода   = Месяц(ОтчетныйПериод) = 1;
			ОбластьШапка.Параметры.ЭтоПолугодиеОтчетногоГода = Месяц(ОтчетныйПериод) = 4;
			ОбластьШапка.Параметры.Это9МесяцевОтчетногоГода  = Месяц(ОтчетныйПериод) = 7;
			ОбластьШапка.Параметры.ЭтоВесьОтчетныйГод        = Месяц(ОтчетныйПериод) = 10;
			
			ОбластьШапка.Параметры.ОтчетныйГод = Формат(Год(ОтчетныйПериод), "ЧГ=");
			
			Если ВыборкаДокументов.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда 
				ОбластьШапка.Параметры.ЭтоКварталКорректируемогоГода   = Месяц(КорректируемыйПериод) = 1;
				ОбластьШапка.Параметры.ЭтоПолугодиеКорректируемогоГода = Месяц(КорректируемыйПериод) = 4;
				ОбластьШапка.Параметры.Это9МесяцевКорректируемогоГода  = Месяц(КорректируемыйПериод) = 7;
				ОбластьШапка.Параметры.ЭтоВесьКорректируемыйГод        = Месяц(КорректируемыйПериод) = 10;
				
				ОбластьШапка.Параметры.ЭтоКорректирующийДокумент = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
				ОбластьШапка.Параметры.ЭтоОтменяющийДокумент     = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ;
				
				ОбластьШапка.Параметры.КорректируемыйГод = Год(КорректируемыйПериод);
			Иначе
				ОбластьШапка.Параметры.ЭтоИсходныйДокумент = Истина;
			КонецЕсли;	
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ОбластьШапка.Параметры.Количество = Формат(ВыборкаДокументов.КоличествоЗастрахованныхЛиц, "ЧГ=0");
			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			Если ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("Ссылка") Тогда 
				
				КоличествоЗастрахованыхЛиц = 0;
				Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
					ИтогНачисленоНакопительная = ИтогНачисленоНакопительная + ВыборкаЗаписейСтажа.НачисленоНакопительная;
					ИтогНачисленоСтраховая = ИтогНачисленоСтраховая + ВыборкаЗаписейСтажа.НачисленоСтраховая;
					ИтогУплаченоНакопительная = ИтогУплаченоНакопительная + ВыборкаЗаписейСтажа.УплаченоНакопительная;
					ИтогУплаченоСтраховая = ИтогУплаченоСтраховая + ВыборкаЗаписейСтажа.УплаченоСтраховая;
					
					КоличествоЗастрахованыхЛиц = КоличествоЗастрахованыхЛиц + 1;
					Если ЗначениеЗаполнено(ВыборкаЗаписейСтажа.НомерСтрокиСтаж) Тогда
					
						НомерСтроки = 0;
						Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерСтрокиСтаж") Цикл
							НомерСтроки = НомерСтроки + 1;
							
							Если НомерСтроки = 1 Тогда
								ОбластьСтрока.Параметры.НомерСтроки = ВыборкаЗаписейСтажа.НомерСтрокиСотрудник;
								ОбластьСтрока.Параметры.ФИО = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.Фамилия + " " + ВыборкаЗаписейСтажа.Имя + " " + ВыборкаЗаписейСтажа.Отчество);					
								ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаЗаписейСтажа.СтраховойНомерПФР;
								ОбластьСтрока.Параметры.Адрес             = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.АдресДляИнформированияПредставление);
								
								ОбластьСтрока.Параметры.НачисленоНакопительная = ВыборкаЗаписейСтажа.НачисленоНакопительная;
								ОбластьСтрока.Параметры.УплаченоНакопительная  = ВыборкаЗаписейСтажа.УплаченоНакопительная;
								ОбластьСтрока.Параметры.НачисленоСтраховая     = ВыборкаЗаписейСтажа.НачисленоСтраховая;
								ОбластьСтрока.Параметры.УплаченоСтраховая      = ВыборкаЗаписейСтажа.УплаченоСтраховая;	
							Иначе 
								ОбластьСтрока.Параметры.НомерСтроки = "";
								ОбластьСтрока.Параметры.ФИО = "";					
								ОбластьСтрока.Параметры.СтраховойНомерПФР = "";
								ОбластьСтрока.Параметры.Адрес             = "";
								
								ОбластьСтрока.Параметры.НачисленоНакопительная = 0;
								ОбластьСтрока.Параметры.УплаченоНакопительная  = 0;
								ОбластьСтрока.Параметры.НачисленоСтраховая     = 0;
								ОбластьСтрока.Параметры.УплаченоСтраховая      = 0;		
							КонецЕсли;	
							
							ОбластьСтрока.Параметры.ДатаНачалаПериода = ВыборкаЗаписейСтажа.ДатаНачалаПериода;
							ОбластьСтрока.Параметры.ДатаОкончанияПериода = ВыборкаЗаписейСтажа.ДатаОкончанияПериода;
								
							ТабличныйДокумент.Вывести(ОбластьСтрока);														   
						КонецЦикла;	
					Иначе
						ОбластьСтрока.Параметры.НомерСтроки = ВыборкаЗаписейСтажа.НомерСтрокиСотрудник;
						ОбластьСтрока.Параметры.ФИО = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.Фамилия + " " + ВыборкаЗаписейСтажа.Имя + " " + ВыборкаЗаписейСтажа.Отчество);					
						ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаЗаписейСтажа.СтраховойНомерПФР;
						ОбластьСтрока.Параметры.Адрес             = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.АдресДляИнформированияПредставление);
						
						ОбластьСтрока.Параметры.НачисленоНакопительная = ВыборкаЗаписейСтажа.НачисленоНакопительная;
						ОбластьСтрока.Параметры.УплаченоНакопительная  = ВыборкаЗаписейСтажа.УплаченоНакопительная;
						ОбластьСтрока.Параметры.НачисленоСтраховая     = ВыборкаЗаписейСтажа.НачисленоСтраховая;
						ОбластьСтрока.Параметры.УплаченоСтраховая      = ВыборкаЗаписейСтажа.УплаченоСтраховая;
						ОбластьСтрока.Параметры.ДатаНачалаПериода = "";
						ОбластьСтрока.Параметры.ДатаОкончанияПериода = "";
						
						ТабличныйДокумент.Вывести(ОбластьСтрока);
					КонецЕсли;	
					
				КонецЦикла;	
								
			КонецЕсли;	
						
			ОбластьПодвал.Параметры.НачисленоСтраховая = ИтогНачисленоСтраховая;
			ОбластьПодвал.Параметры.УплаченоСтраховая = ИтогУплаченоСтраховая;
			ОбластьПодвал.Параметры.НачисленоНакопительная = ИтогНачисленоНакопительная;
			ОбластьПодвал.Параметры.УплаченоНакопительная = ИтогУплаченоНакопительная;
			ОбластьПодвал.Параметры.Руководитель = ВыборкаДокументов.Руководитель;
			ОбластьПодвал.Параметры.РуководительДолжность = ВыборкаДокументов.ДолжностьРуководителя;
			ОбластьПодвал.Параметры.ДатаСоставленияОписи  =  ВыборкаДокументов.Дата;
			
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

Функция СформироватьПечатнуюФормуСписокЗастрахованныхЛиц(Документ, ОбъектыПечати)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрСЗВ_6_2_СписокЗастрахованныхЛиц";
	
	Макет = Документы.РеестрСЗВ_6_2.ПолучитьМакет("СписокЗастрахованныхЛиц");	
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьПовторятьПриПечати   = Макет.ПолучитьОбласть("ПовторятьПриПечати");
	
	ВыборкаДокументов = СформироватьЗапросПоШапкеДляПечати(Документ).Выбрать();
	
	ВыборкаПоЗЛ = СформироватьЗапросПоСпискуЗастрахованныхЛицДляПечати(Документ).Выбрать();
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Ссылка") Цикл
		ВыборкаПоЗЛ.Сбросить();
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		
		ОбластьШапка.Параметры.РегистрационныйНомерПФР = ВыборкаДокументов.РегНомерПФР;
		ОбластьШапка.Параметры.НаименованиеСокращенное = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаДокументов.НаименованиеОрганизации);
		ОбластьШапка.Параметры.РасчетныйПериод = УчетСтраховыхВзносов.ПредставлениеОтчетногоПериода(ВыборкаДокументов.ОтчетныйПериод);
		ОбластьШапка.Параметры.НомерПачкиРаботодателя = ВыборкаДокументов.НомерПачки;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Если ВыборкаПоЗЛ.НайтиСледующий(СтруктураПоиска) Тогда
			 Если ВыборкаПоЗЛ.СледующийПоЗначениюПоля("Ссылка") Тогда
				Пока ВыборкаПоЗЛ.СледующийПоЗначениюПоля("НомерСтроки") Цикл
					ОбластьСтрока.Параметры.НомерСтроки = ВыборкаПоЗЛ.НомерСтроки;
					ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаПоЗЛ.СтраховойНомерПФР;
					ОбластьСтрока.Параметры.ФИО = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаПоЗЛ.Фамилия + " " + ВыборкаПоЗЛ.Имя + " " + ВыборкаПоЗЛ.Отчество);
					
					ТабличныйДокумент.Вывести(ОбластьСтрока);
				КонецЦикла;
			КонецЕсли;	
		КонецЕсли;		
		ОбластьПодвал.Параметры.Руководитель = ВыборкаДокументов.Руководитель;
		ОбластьПодвал.Параметры.РуководительДолжность = ВыборкаДокументов.ДолжностьРуководителя;
		ОбластьПодвал.Параметры.ДатаСоставленияОписи  = ВыборкаДокументов.Дата;//УчетСтраховыхВзносов.ДатаВОтчет(ВыборкаДокументов.Дата);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
 КонецФункции	

// Задать область печати объекта в табличном документе.
// Применяется для связывания области в табличном документе, с объектом печати (ссылка).
// Необходимо вызывать при формировании очередной области печатной формы в табличном
// документе.
// Параметры:
//  ТабличныйДокумент - табличный документ - табличный документ печатной формы
//  НомерСтрокиНачало - число - позиция начала очередной области в документе
//  ОбъектыПечати - СписокЗначений - список объектов печати
//  Ссылка - ссылка на объект ИБ - объект печати
//
Процедура ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка) Экспорт
	
	Элемент = ОбъектыПечати.НайтиПоЗначению(Ссылка);
	Если Элемент = Неопределено Тогда
		ИмяОбласти = "Документ_" + Формат(ОбъектыПечати.Количество() + 1, "ЧН=; ЧГ=");
		ОбъектыПечати.Добавить(Ссылка, ИмяОбласти);
	Иначе
		ИмяОбласти = Элемент.Представление;
	КонецЕсли;
	
	НомерСтрокиОкончание = ТабличныйДокумент.ВысотаТаблицы;
	ТабличныйДокумент.Область(НомерСтрокиНачало, , НомерСтрокиОкончание, ).Имя = ИмяОбласти;

КонецПроцедуры

Функция ТабличныеДокументыФормСЗВ_6_2(МассивОбъектов, ОбъектыПечати = Неопределено) Экспорт
	
	
	Результаты = Новый Массив;
	
	Макет = ПолучитьМакет("ФормаСЗВ_6_2");
	
	ВыборкаДокументов = СформироватьЗапросПоШапкеДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаЗаписейСтажа = СформироватьЗапросПоЗаписямСтажаДляПечати(МассивОбъектов).Выбрать();
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Ссылка") Цикл
		ТабличныйДокумент = Новый ТабличныйДокумент;
	
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрСЗВ_6_2_Форма_СЗВ_6_2";
		
		Справочники.КомплектыОтчетностиПерсучета.ДобавитьТабличныйДокументВКоллекциюПечатуемыхОбъектов(Результаты, ТабличныйДокумент, ВыборкаДокументов);
		
		ИтогУплаченоНакопительная = 0;
		ИтогУплаченоСтраховая = 0;
		ИтогНачисленоНакопительная = 0;
		ИтогНачисленоСтраховая = 0;
		
		ВыборкаЗаписейСтажа.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		
		Если ВыборкаЗаписейСтажа.НайтиСледующий(СтруктураПоиска) Тогда 
			ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ВыборкаДокументов, "РегНомерПФР, ИНН, КПП, ОКПО");
			
			ОбластьШапка.Параметры.НаименованиеОрганизации = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаДокументов.НаименованиеОрганиазции);
			
			ОбластьШапка.Параметры.КодКатегории = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаДокументов.КатегорияЗастрахованныхЛиц);
			
			ОтчетныйПериод = ВыборкаДокументов.ОтчетныйПериод;
			КорректируемыйПериод = ВыборкаДокументов.КорректируемыйПериод;
			
			ОбластьШапка.Параметры.ЭтоКварталОтчетногоГода   = Месяц(ОтчетныйПериод) = 1;
			ОбластьШапка.Параметры.ЭтоПолугодиеОтчетногоГода = Месяц(ОтчетныйПериод) = 4;
			ОбластьШапка.Параметры.Это9МесяцевОтчетногоГода  = Месяц(ОтчетныйПериод) = 7;
			ОбластьШапка.Параметры.ЭтоВесьОтчетныйГод        = Месяц(ОтчетныйПериод) = 10;
			
			ОбластьШапка.Параметры.ОтчетныйГод = Формат(Год(ОтчетныйПериод), "ЧГ=");
			
			Если ВыборкаДокументов.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда 
				ОбластьШапка.Параметры.ЭтоКварталКорректируемогоГода   = Месяц(КорректируемыйПериод) = 1;
				ОбластьШапка.Параметры.ЭтоПолугодиеКорректируемогоГода = Месяц(КорректируемыйПериод) = 4;
				ОбластьШапка.Параметры.Это9МесяцевКорректируемогоГода  = Месяц(КорректируемыйПериод) = 7;
				ОбластьШапка.Параметры.ЭтоВесьКорректируемыйГод        = Месяц(КорректируемыйПериод) = 10;
				
				ОбластьШапка.Параметры.ЭтоКорректирующийДокумент = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
				ОбластьШапка.Параметры.ЭтоОтменяющийДокумент     = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ;
				
				ОбластьШапка.Параметры.КорректируемыйГод = Формат(Год(КорректируемыйПериод), "ЧГ=");
			Иначе
				ОбластьШапка.Параметры.ЭтоИсходныйДокумент = Истина;
			КонецЕсли;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ОбластьШапка.Параметры.Количество = Формат(ВыборкаДокументов.КоличествоЗастрахованныхЛиц, "ЧГ=0");
			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			Если ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("Ссылка") Тогда 
				
				КоличествоЗастрахованыхЛиц = 0;
				Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
					ИтогНачисленоНакопительная = ИтогНачисленоНакопительная + ВыборкаЗаписейСтажа.НачисленоНакопительная;
					ИтогНачисленоСтраховая = ИтогНачисленоСтраховая + ВыборкаЗаписейСтажа.НачисленоСтраховая;
					ИтогУплаченоНакопительная = ИтогУплаченоНакопительная + ВыборкаЗаписейСтажа.УплаченоНакопительная;
					ИтогУплаченоСтраховая = ИтогУплаченоСтраховая + ВыборкаЗаписейСтажа.УплаченоСтраховая;
					
					КоличествоЗастрахованыхЛиц = КоличествоЗастрахованыхЛиц + 1;
					Если ЗначениеЗаполнено(ВыборкаЗаписейСтажа.НомерСтрокиСтаж) Тогда
					
						НомерСтроки = 0;
						Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерСтрокиСтаж") Цикл
							НомерСтроки = НомерСтроки + 1;
							
							Если НомерСтроки = 1 Тогда
								ОбластьСтрока.Параметры.НомерСтроки = ВыборкаЗаписейСтажа.НомерСтрокиСотрудник;
								ОбластьСтрока.Параметры.ФИО = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.Фамилия + " " + ВыборкаЗаписейСтажа.Имя + " " + ВыборкаЗаписейСтажа.Отчество);
								ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаЗаписейСтажа.СтраховойНомерПФР;
								ОбластьСтрока.Параметры.Адрес             = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.АдресДляИнформированияПредставление);
								
								ОбластьСтрока.Параметры.НачисленоНакопительная = ВыборкаЗаписейСтажа.НачисленоНакопительная;
								ОбластьСтрока.Параметры.УплаченоНакопительная  = ВыборкаЗаписейСтажа.УплаченоНакопительная;
								ОбластьСтрока.Параметры.НачисленоСтраховая     = ВыборкаЗаписейСтажа.НачисленоСтраховая;
								ОбластьСтрока.Параметры.УплаченоСтраховая      = ВыборкаЗаписейСтажа.УплаченоСтраховая;	
							Иначе 
								ОбластьСтрока.Параметры.НомерСтроки = "";
								ОбластьСтрока.Параметры.ФИО = "";
								ОбластьСтрока.Параметры.СтраховойНомерПФР = "";
								ОбластьСтрока.Параметры.Адрес             = "";
								
								ОбластьСтрока.Параметры.НачисленоНакопительная = 0;
								ОбластьСтрока.Параметры.УплаченоНакопительная  = 0;
								ОбластьСтрока.Параметры.НачисленоСтраховая     = 0;
								ОбластьСтрока.Параметры.УплаченоСтраховая      = 0;
							КонецЕсли;
							
							ОбластьСтрока.Параметры.ДатаНачалаПериода = ВыборкаЗаписейСтажа.ДатаНачалаПериода;
							ОбластьСтрока.Параметры.ДатаОкончанияПериода = ВыборкаЗаписейСтажа.ДатаОкончанияПериода;
							
							ТабличныйДокумент.Вывести(ОбластьСтрока);
						КонецЦикла;
					Иначе
						ОбластьСтрока.Параметры.НомерСтроки = ВыборкаЗаписейСтажа.НомерСтрокиСотрудник;
						ОбластьСтрока.Параметры.ФИО = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.Фамилия + " " + ВыборкаЗаписейСтажа.Имя + " " + ВыборкаЗаписейСтажа.Отчество);
						ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаЗаписейСтажа.СтраховойНомерПФР;
						ОбластьСтрока.Параметры.Адрес             = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.АдресДляИнформированияПредставление);
						
						ОбластьСтрока.Параметры.НачисленоНакопительная = ВыборкаЗаписейСтажа.НачисленоНакопительная;
						ОбластьСтрока.Параметры.УплаченоНакопительная  = ВыборкаЗаписейСтажа.УплаченоНакопительная;
						ОбластьСтрока.Параметры.НачисленоСтраховая     = ВыборкаЗаписейСтажа.НачисленоСтраховая;
						ОбластьСтрока.Параметры.УплаченоСтраховая      = ВыборкаЗаписейСтажа.УплаченоСтраховая;
						ОбластьСтрока.Параметры.ДатаНачалаПериода = "";
						ОбластьСтрока.Параметры.ДатаОкончанияПериода = "";
						
						ТабличныйДокумент.Вывести(ОбластьСтрока);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			ОбластьПодвал.Параметры.НачисленоСтраховая = ИтогНачисленоСтраховая;
			ОбластьПодвал.Параметры.УплаченоСтраховая = ИтогУплаченоСтраховая;
			ОбластьПодвал.Параметры.НачисленоНакопительная = ИтогНачисленоНакопительная;
			ОбластьПодвал.Параметры.УплаченоНакопительная = ИтогУплаченоНакопительная;
			ОбластьПодвал.Параметры.Руководитель = ВыборкаДокументов.Руководитель;
			ОбластьПодвал.Параметры.РуководительДолжность = ВыборкаДокументов.ДолжностьРуководителя;
			ОбластьПодвал.Параметры.ДатаСоставленияОписи  = УчетСтраховыхВзносов.ДатаВОтчет(ВыборкаДокументов.Дата);
			
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			Если ОбъектыПечати <> Неопределено Тогда
				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
			КонецЕсли;	

		КонецЕсли;
	КонецЦикла;
		
	Возврат Результаты;
	
КонецФункции	

#КонецЕсли