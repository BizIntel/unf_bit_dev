#Область ПроцедурыИФункцииОбщегоНазначения

// Процедура заполняет таблицу договоров данными из ТЧ Начисления документа НачисленияПоКредитамИЗаймам.
//
&НаСервере
Процедура ЗаполнитьТаблицуДоговоров()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачисленияПоКредитамИЗаймамНачисления.Сотрудник,
		|	НачисленияПоКредитамИЗаймамНачисления.Контрагент,
		|	НачисленияПоКредитамИЗаймамНачисления.ДоговорКредитаЗайма,
		|	НачисленияПоКредитамИЗаймамНачисления.ВалютаРасчетов,
		|	СУММА(ВЫБОР
		|			КОГДА НачисленияПоКредитамИЗаймамНачисления.ТипСуммы = &ТипСуммыПроценты
		|				ТОГДА НачисленияПоКредитамИЗаймамНачисления.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Проценты,
		|	СУММА(ВЫБОР
		|			КОГДА НачисленияПоКредитамИЗаймамНачисления.ТипСуммы = &ТипСуммыПроценты
		|				ТОГДА 0
		|			ИНАЧЕ НачисленияПоКредитамИЗаймамНачисления.Сумма
		|		КОНЕЦ) КАК Комиссия,
		|	ИСТИНА КАК Отметка
		|ИЗ
		|	Документ.НачисленияПоКредитамИЗаймам.Начисления КАК НачисленияПоКредитамИЗаймамНачисления
		|ГДЕ
		|	НачисленияПоКредитамИЗаймамНачисления.Ссылка = &ДокументНачисления
		|
		|СГРУППИРОВАТЬ ПО
		|	НачисленияПоКредитамИЗаймамНачисления.ДоговорКредитаЗайма,
		|	НачисленияПоКредитамИЗаймамНачисления.ВалютаРасчетов,
		|	НачисленияПоКредитамИЗаймамНачисления.Контрагент,
		|	НачисленияПоКредитамИЗаймамНачисления.Сотрудник";
	
	Запрос.УстановитьПараметр("ДокументНачисления", ДокументНачисления);
	Запрос.УстановитьПараметр("ТипСуммыПроценты", Перечисления.ТипыСуммГрафикаКредитовИЗаймов.Проценты);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДоговорыКредитаИЗайма.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументНачисления = Параметры.ДокументНачисления;
	Если Не ЗначениеЗаполнено(ДокументНачисления) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ДокументНачисления.ВидОперации = Перечисления.ВидыОперацийНачисленияПоКредитамИЗаймам.НачисленияПоКредитам Тогда
		Заголовок = Заголовок + " по кредитам";
		
		Элементы.ГруппаКнопкиРасходаДС.Видимость = Истина;
		Элементы.ФормаВвестиРасходСоСчета.КнопкаПоУмолчанию = Истина;
		
		Элементы.ГруппаКнопкиПоступленияДС.Видимость = Ложь;
		Элементы.ФормаВвестиПоступлениеВКассу.КнопкаПоУмолчанию = Ложь;
	Иначе
		Заголовок = Заголовок + " по займам";
		
		Элементы.ГруппаКнопкиРасходаДС.Видимость = Ложь;
		Элементы.ФормаВвестиРасходСоСчета.КнопкаПоУмолчанию = Ложь;
		
		Элементы.ГруппаКнопкиПоступленияДС.Видимость = Истина;
		Элементы.ФормаВвестиПоступлениеВКассу.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	ЗаполнитьТаблицуДоговоров();
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыДействияКоманд

// Процедура - обработчик команды ВвестиФактическийПлатеж.
//
&НаКлиенте
Процедура ВвестиФактическийПлатеж(ВидДокумента)
	
	ЕстьОтметка = Ложь;
	Для Каждого ТекущаяСтрока Из ДоговорыКредитаИЗайма Цикл
		Если ТекущаяСтрока.Отметка Тогда
			ЕстьОтметка = Истина;
			
			ПараметрыКредитовИЗаймов = Новый Структура("Документ, ДоговорКредитаЗайма, ВалютаРасчетов, Сотрудник, Контрагент", 
				ДокументНачисления, 
				ТекущаяСтрока.ДоговорКредитаЗайма,
				ТекущаяСтрока.ВалютаРасчетов,
				ТекущаяСтрока.Сотрудник,
				ТекущаяСтрока.Контрагент
			);
			ПараметрыЗаполнения = Новый Структура("Основание", ПараметрыКредитовИЗаймов);
			
			ОткрытьФорму("Документ."+ВидДокумента+".ФормаОбъекта", ПараметрыЗаполнения, , ТекущаяСтрока.ДоговорКредитаЗайма);
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьОтметка Тогда
		ПоказатьПредупреждение(Неопределено, "Не отмечено ни одной строки. Установите флаги в первой колонке и снова нажмите кнопку.");
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик команды ВвестиРасходИзКассы.
//
&НаКлиенте
Процедура ВвестиРасходИзКассы(Команда)
	
	ВвестиФактическийПлатеж("РасходИзКассы");
	Закрыть();
	
КонецПроцедуры

// Процедура - обработчик команды ВвестиПриходВКассу.
//
&НаКлиенте
Процедура ВвестиПриходВКассу(Команда)
	
	ВвестиФактическийПлатеж("ПоступлениеВКассу");
	Закрыть();
	
КонецПроцедуры

// Процедура - обработчик команды ВвестиРасходСоСчета.
//
&НаКлиенте
Процедура ВвестиРасходСоСчета(Команда)
	
	ВвестиФактическийПлатеж("РасходСоСчета");
	Закрыть();
	
КонецПроцедуры

// Процедура - обработчик команды ВвестиПоступлениеНаСчет.
//
&НаКлиенте
Процедура ВвестиПоступлениеНаСчет(Команда)
	
	ВвестиФактическийПлатеж("ПоступлениеНаСчет");
	Закрыть();
	
КонецПроцедуры

#КонецОбласти
