#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияЕГАИСПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзТорговогоЗала Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.СправкаБ");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Идентификатор) Тогда
		Идентификатор = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ТаблицаДвижений = ПолучитьТаблицуДвижений();
	
	РегистрыНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.ЗаписатьТаблицуДвижений(ТаблицаДвижений, Движения, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СтатусОбработки = Перечисления.СтатусыОбработкиАктаСписанияЕГАИС.Новый;
	
	ИдентификаторЕГАИС = "";
	ДатаРегистрацииДвижений = '00010101';
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуДвижений()
	
	СтатусыДвижений = Новый Массив;
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиАктаСписанияЕГАИС.ПередаетсяВЕГАИС);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиАктаСписанияЕГАИС.ПереданВЕГАИС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СтатусыДвижений", СтатусыДвижений);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	АктСписанияЕГАИСТовары.Ссылка.Дата КАК Период,
	|	АктСписанияЕГАИСТовары.Ссылка КАК Регистратор,
	|	АктСписанияЕГАИСТовары.НомерСтроки КАК НомерСтроки,
	|	АктСписанияЕГАИСТовары.Ссылка.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	АктСписанияЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	АктСписанияЕГАИСТовары.СправкаБ КАК СправкаБ,
	|	АктСписанияЕГАИСТовары.Количество КАК СвободныйОстаток,
	|	0 КАК Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК АктСписанияЕГАИСТовары
	|ГДЕ
	|	АктСписанияЕГАИСТовары.Ссылка.СтатусОбработки В(&СтатусыДвижений)
	|	И АктСписанияЕГАИСТовары.Ссылка = &Ссылка
	|	И АктСписанияЕГАИСТовары.Ссылка.ОрганизацияЕГАИС.УчитыватьОстаткиАлкогольнойПродукции
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	АктСписанияЕГАИСТовары.Ссылка.ДатаРегистрацииДвижений,
	|	АктСписанияЕГАИСТовары.Ссылка,
	|	АктСписанияЕГАИСТовары.НомерСтроки,
	|	АктСписанияЕГАИСТовары.Ссылка.ОрганизацияЕГАИС,
	|	АктСписанияЕГАИСТовары.АлкогольнаяПродукция,
	|	АктСписанияЕГАИСТовары.СправкаБ,
	|	0,
	|	АктСписанияЕГАИСТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК АктСписанияЕГАИСТовары
	|ГДЕ
	|	АктСписанияЕГАИСТовары.Ссылка.СтатусОбработки = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиАктаСписанияЕГАИС.ПереданВЕГАИС)
	|	И АктСписанияЕГАИСТовары.Ссылка = &Ссылка
	|	И АктСписанияЕГАИСТовары.Ссылка.ОрганизацияЕГАИС.УчитыватьОстаткиАлкогольнойПродукции
	|	И АктСписанияЕГАИСТовары.Ссылка.ДатаРегистрацииДвижений <> &ПустаяДата
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли
