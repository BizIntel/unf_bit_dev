#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Процедура заполнения назначения платежа в документе
//
Процедура ЗаполнитьНазначениеПлатежа()
	
	ТекстПлатежа = "";
	
	Если ЗначениеЗаполнено(СчетКонтрагента) Тогда
		Если ЗначениеЗаполнено(СчетКонтрагента.ТекстКорреспондента) Тогда
			ТекстПолучателя = СчетКонтрагента.ТекстКорреспондента;
		КонецЕсли;
		ТекстПлатежа = СчетКонтрагента.ТекстНазначения;
	ИначеЕсли ЗначениеЗаполнено(Контрагент) Тогда
		ТекстПолучателя = Контрагент.НаименованиеПолное;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстПлатежа)
		И ЗначениеЗаполнено(ДокументОснование)
		И (ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СчетНаОплатуПоставщика")
		И ЗначениеЗаполнено(ДокументОснование.НомерВходящегоДокумента) ИЛИ
		
		ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РасходДСПлан")
		И ЗначениеЗаполнено(ДокументОснование.ДокументОснование)
		И ЗначениеЗаполнено(ДокументОснование.ДокументОснование.НомерВходящегоДокумента))
		
		Тогда
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
			ТекНомер = ДокументОснование.НомерВходящегоДокумента;
			ТекДата = ДокументОснование.ДатаВходящегоДокумента;
		Иначе
			ТекНомер = ДокументОснование.ДокументОснование.НомерВходящегоДокумента;
			ТекДата = ДокументОснование.ДокументОснование.ДатаВходящегоДокумента;
		КонецЕсли;
		
		ТекстПлатежа = НСтр("ru='Оплата по счету N %НомерСчета%'");
		ТекстПлатежа = СтрЗаменить(ТекстПлатежа, "%НомерСчета%", СокрЛП(Строка(ТекНомер)));
		Если ЗначениеЗаполнено(ТекДата) Тогда
			ТекстПлатежа = ТекстПлатежа + " от " + СокрЛП(Строка(Формат(ТекДата, "ДФ='dd MMMM yyyy'"))) + " г.";
		КонецЕсли;
	КонецЕсли;
	
	ТекстНДС = "";
	БезНалогаНДС = Истина;
	
	Если ЗначениеЗаполнено(СтавкаНДС)
	И НЕ СтавкаНДС.НеОблагается Тогда
		ТекстНДС = НСтр("ru = 'НДС(%СтавкаНДС%) %СуммаНДС%'");
		ТекстНДС = СтрЗаменить(ТекстНДС, "%СтавкаНДС%", Строка(СтавкаНДС));
		ТекстНДС = СтрЗаменить(ТекстНДС, "%СуммаНДС%", Строка(Формат(СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00; ЧГ=")));
		БезНалогаНДС = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СуммаНДС)
	И НЕ ЗначениеЗаполнено(СтавкаНДС) Тогда
		ТекстНДС = НСтр("ru = 'НДС %СуммаНДС%'");
		ТекстНДС = СтрЗаменить(ТекстНДС, "%СуммаНДС%", Строка(Формат(СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00; ЧГ=")));
		БезНалогаНДС = Ложь;
	КонецЕсли;
	
	ТекстСумма = Строка(Формат(СуммаДокумента, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00; ЧГ="));
	
	ТекстНазначениеПлатежа = НСтр(
		"ru = '%ТекстНазначение%
		|Сумма %ТекстСумма%
		|%ЗначениеСтавкиНДС% %ТекстНДС%'"
	);
	
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ТекстНазначение%", ТекстПлатежа);
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ТекстСумма%", ТекстСумма);
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ЗначениеСтавкиНДС%", ?(БезНалогаНДС, НСтр("ru = 'Без налога (НДС)'"), НСтр("ru = 'В т.ч.'")));
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ТекстНДС%", ТекстНДС);
	
	НазначениеПлатежа = ТекстНазначениеПлатежа;
	
КонецПроцедуры // ЗаполнитьНазначениеПлатежа()

// Обработчик заполнения документа на основании структуры
//
// Параметры:
// ДанныеЗаполнения - Структура - параметр, переданный в обработчик ОбработкаЗаполнения.
//
Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт
	
	Если Не ДанныеЗаполнения.Свойство("Документ") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
		ЗаполнитьПоСчетНаОплатуПоставщика(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ЗаполнитьПоЗаказПоставщику(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.РасходДСПлан") Тогда
		ЗаполнитьПоРасходДСПлан(ДанныеЗаполнения.Документ);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоСтруктуре()

// Обработчик заполнения на основании документа ЗаказПоставщику
//
// Параметры:
//	ДокументСсылкаЗаказПоставщику - ДокументСсылка.ЗаказПоставщику.
//	
Процедура ЗаполнитьПоЗаказПоставщику(ДокументСсылкаЗаказПоставщику, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПоставщику);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Оплата) КАК ВидОперации,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	БанкСчета.ОрганизацияБанковскийСчет КАК БанковскийСчет,
	|	БанкСчета.ВалютаДокумента КАК ВалютаДокумента,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Ссылка.Организация.ИНН КАК ИННПлательщика,
	|	ВЫБОР
	|		КОГДА БанкСчета.ОрганизацияБанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|			ТОГДА ТаблицаДокумента.Ссылка.Организация.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КПППлательщика,
	|	ТаблицаДокумента.Ссылка.Контрагент.ИНН КАК ИННПолучателя,
	|	ТаблицаДокумента.Ссылка.Контрагент.КПП КАК КПППолучателя,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстКорреспондента КАК СТРОКА(1000)) КАК ТекстКорреспондента,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстНазначения КАК СТРОКА(1000)) КАК ТекстНазначения,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеПолное,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА СтавкаНДСИзДокумента.КоличествоРазличныхСтавок = 1
	|			ТОГДА ТаблицаДокумента.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДС,
	|	СтавкаНДСИзДокумента.КоличествоРазличныхСтавок КАК КоличествоРазличныхСтавок,
	|	ТаблицаДокумента.Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Ссылка.Договор
	|ИЗ
	|	Документ.ЗаказПоставщику.Запасы КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказПоставщикуЗапасы.СтавкаНДС) КАК КоличествоРазличныхСтавок,
	|			ЗаказПоставщикуЗапасы.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы
	|		ГДЕ
	|			ЗаказПоставщикуЗапасы.Ссылка = &Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаказПоставщикуЗапасы.Ссылка) КАК СтавкаНДСИзДокумента
	|		ПО ТаблицаДокумента.Ссылка = СтавкаНДСИзДокумента.Ссылка,
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ВЫБОР
	|			КОГДА ЗаказПоставщику.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА ЗаказПоставщику.БанковскийСчет
	|			КОГДА ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ЗаказПоставщику.Договор.ВалютаРасчетов
	|				ТОГДА ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию
	|			КОГДА ЕСТЬNULL(БанковскиеСчетаОрганизации.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА БанковскиеСчетаОрганизации.Ссылка
	|			ИНАЧЕ ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию
	|		КОНЕЦ КАК ОрганизацияБанковскийСчет,
	|		ВЫБОР
	|			КОГДА ЗаказПоставщику.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА ЗаказПоставщику.БанковскийСчет.ВалютаДенежныхСредств
	|			КОГДА ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ЗаказПоставщику.Договор.ВалютаРасчетов
	|				ТОГДА ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|			КОГДА ЕСТЬNULL(БанковскиеСчетаОрганизации.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА БанковскиеСчетаОрганизации.ВалютаДенежныхСредств
	|			ИНАЧЕ ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|		КОНЕЦ КАК ВалютаДокумента
	|	ИЗ
	|		Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчетаОрганизации
	|			ПО ЗаказПоставщику.Организация = БанковскиеСчетаОрганизации.Владелец
	|				И ЗаказПоставщику.ВалютаДокумента = БанковскиеСчетаОрганизации.ВалютаДенежныхСредств
	|				И (БанковскиеСчетаОрганизации.ПометкаУдаления = ЛОЖЬ)
	|	ГДЕ
	|		ЗаказПоставщику.Ссылка = &Ссылка) КАК БанкСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|		ПО БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СтавкаНДСИзДокумента.КоличествоРазличныхСтавок = 1
	|			ТОГДА ТаблицаДокумента.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Ссылка.Организация,
	|	ТаблицаДокумента.Ссылка.Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.ИНН,
	|	ТаблицаДокумента.Ссылка.Контрагент.КПП,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстКорреспондента КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстНазначения КАК СТРОКА(1000)),
	|	СтавкаНДСИзДокумента.КоличествоРазличныхСтавок,
	|	БанкСчета.ОрганизацияБанковскийСчет,
	|	БанкСчета.ВалютаДокумента,
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Ссылка.Организация.ИНН,
	|	ВЫБОР
	|		КОГДА БанкСчета.ОрганизацияБанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|			ТОГДА ТаблицаДокумента.Ссылка.Организация.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ТаблицаДокумента.Ссылка.Договор";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	ЗаполнитьНазначениеПлатежа();
	
	Если Не ЗначениеЗаполнено(ВалютаДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат;
	КонецЕсли;
	
	Если Контрагент.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ВалютаДокумента Тогда
		СчетКонтрагента = Контрагент.БанковскийСчетПоУмолчанию;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	БанковскиеСчетаКонтрагента.Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчетаКонтрагента
	|ГДЕ
	|	БанковскиеСчетаКонтрагента.ВалютаДенежныхСредств = &ВалютаДокумента
	|	И БанковскиеСчетаКонтрагента.Владелец = &Контрагент
	|	И БанковскиеСчетаКонтрагента.ПометкаУдаления = ЛОЖЬ");
	Запрос.УстановитьПараметр("ВалютаДокумента", ВалютаДокумента);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		СчетКонтрагента = ВыборкаРезультатаЗапроса.Ссылка;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоЗаказПоставщику()

// Обработчик заполнения на основании документа СчетНаОплатуПоставщика
//
// Параметры:
//	ДокументСсылкаСчетНаОплатуПоставщика - ДокументСсылка.СчетНаОплатуПоставщика.
//	
Процедура ЗаполнитьПоСчетНаОплатуПоставщика(ДокументСсылкаСчетНаОплатуПоставщика, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСчетНаОплатуПоставщика);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Оплата) КАК ВидОперации,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	БанкСчета.ОрганизацияБанковскийСчет КАК БанковскийСчет,
	|	БанкСчета.ВалютаДокумента КАК ВалютаДокумента,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	БанкСчета.КонтрагентБанковскийСчет КАК СчетКонтрагента,
	|	ТаблицаДокумента.Ссылка.Организация.ИНН КАК ИННПлательщика,
	|	ВЫБОР
	|		КОГДА БанкСчета.ОрганизацияБанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|			ТОГДА ТаблицаДокумента.Ссылка.Организация.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КПППлательщика,
	|	ТаблицаДокумента.Ссылка.Контрагент.ИНН КАК ИННПолучателя,
	|	ТаблицаДокумента.Ссылка.Контрагент.КПП КАК КПППолучателя,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстКорреспондента КАК СТРОКА(1000)) КАК ТекстКорреспондента,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстНазначения КАК СТРОКА(1000)) КАК ТекстНазначения,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеПолное,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА СтавкаНДСИзДокумента.КоличествоРазличныхСтавок = 1
	|			ТОГДА ТаблицаДокумента.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДС,
	|	СтавкаНДСИзДокумента.КоличествоРазличныхСтавок КАК КоличествоРазличныхСтавок,
	|	ТаблицаДокумента.Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Ссылка.Договор
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.Запасы КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СчетНаОплатуПоставщикаЗапасы.СтавкаНДС) КАК КоличествоРазличныхСтавок,
	|			СчетНаОплатуПоставщикаЗапасы.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.СчетНаОплатуПоставщика.Запасы КАК СчетНаОплатуПоставщикаЗапасы
	|		ГДЕ
	|			СчетНаОплатуПоставщикаЗапасы.Ссылка = &Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СчетНаОплатуПоставщикаЗапасы.Ссылка) КАК СтавкаНДСИзДокумента
	|		ПО ТаблицаДокумента.Ссылка = СтавкаНДСИзДокумента.Ссылка,
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ВЫБОР
	|			КОГДА СчетНаОплатуПоставщика.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА СчетНаОплатуПоставщика.БанковскийСчет
	|			КОГДА СчетНаОплатуПоставщика.ВалютаДокумента = СчетНаОплатуПоставщика.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|				ТОГДА СчетНаОплатуПоставщика.Организация.БанковскийСчетПоУмолчанию
	|			ИНАЧЕ БанковскиеСчетаОрганизации.Ссылка
	|		КОНЕЦ КАК ОрганизацияБанковскийСчет,
	|		ВЫБОР
	|			КОГДА СчетНаОплатуПоставщика.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА СчетНаОплатуПоставщика.БанковскийСчет.ВалютаДенежныхСредств
	|			КОГДА СчетНаОплатуПоставщика.ВалютаДокумента = СчетНаОплатуПоставщика.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|				ТОГДА СчетНаОплатуПоставщика.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|			КОГДА БанковскиеСчетаОрганизации.Ссылка <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА БанковскиеСчетаОрганизации.Ссылка.ВалютаДенежныхСредств
	|			ИНАЧЕ СчетНаОплатуПоставщика.ВалютаДокумента
	|		КОНЕЦ КАК ВалютаДокумента,
	|		ВЫБОР
	|			КОГДА СчетНаОплатуПоставщика.ВалютаДокумента = СчетНаОплатуПоставщика.Контрагент.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|				ТОГДА СчетНаОплатуПоставщика.Контрагент.БанковскийСчетПоУмолчанию
	|			ИНАЧЕ БанковскиеСчетаКонтрагента.Ссылка
	|		КОНЕЦ КАК КонтрагентБанковскийСчет
	|	ИЗ
	|		Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчетаКонтрагента
	|			ПО СчетНаОплатуПоставщика.ВалютаДокумента = БанковскиеСчетаКонтрагента.ВалютаДенежныхСредств
	|				И СчетНаОплатуПоставщика.Контрагент = БанковскиеСчетаКонтрагента.Владелец
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчетаОрганизации
	|			ПО СчетНаОплатуПоставщика.Организация = БанковскиеСчетаОрганизации.Владелец
	|				И СчетНаОплатуПоставщика.ВалютаДокумента = БанковскиеСчетаОрганизации.ВалютаДенежныхСредств
	|	ГДЕ
	|		СчетНаОплатуПоставщика.Ссылка = &Ссылка) КАК БанкСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|		ПО БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СтавкаНДСИзДокумента.КоличествоРазличныхСтавок = 1
	|			ТОГДА ТаблицаДокумента.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Ссылка.Организация,
	|	ТаблицаДокумента.Ссылка.Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.ИНН,
	|	ТаблицаДокумента.Ссылка.Контрагент.КПП,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстКорреспондента КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстНазначения КАК СТРОКА(1000)),
	|	СтавкаНДСИзДокумента.КоличествоРазличныхСтавок,
	|	БанкСчета.ОрганизацияБанковскийСчет,
	|	БанкСчета.ВалютаДокумента,
	|	БанкСчета.КонтрагентБанковскийСчет,
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Ссылка.Организация.ИНН,
	|	ВЫБОР
	|		КОГДА БанкСчета.ОрганизацияБанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|			ТОГДА ТаблицаДокумента.Ссылка.Организация.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	ЗаполнитьНазначениеПлатежа();
	
КонецПроцедуры // ЗаполнитьПоСчетНаОплатуПоставщика()

// Обработчик заполнения на основании документа РасходДСПлан.
//
// Параметры:
//	ДокументСсылкаРасходДСПлан - ДокументСсылка.РасходДСПлан.
//	
Процедура ЗаполнитьПоРасходДСПлан(ДокументСсылкаРасходДСПлан) Экспорт
	
	Если ДокументСсылкаРасходДСПлан.СтатусУтвержденияПлатежа = Перечисления.СтатусыУтвержденияПлатежей.НеУтвержден Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести платежное поручение на основании неутвержденной заявки!'");
	КонецЕсли;
	
	Если ДокументСсылкаРасходДСПлан.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Наличные Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести платежное поручение. В заявке указан неверный способ оплаты (тип денежных средств)!'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаРасходДСПлан);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Оплата) КАК ВидОперации,
	|	&ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ДокументОснование ССЫЛКА Документ.СчетНаОплатуПоставщика
	|			ТОГДА ТаблицаДокумента.ДокументОснование
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|	КОНЕЦ КАК СчетНаОплату,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ДокументОснование ССЫЛКА Документ.СчетНаОплатуПоставщика
	|				ИЛИ ТаблицаДокумента.ДокументОснование ССЫЛКА Документ.ЗаказПоставщику
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПризнакАванса,
	|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
	|	ТаблицаДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ВложенныйЗапрос.КонтрагентБанковскийСчет КАК СчетКонтрагента,
	|	ТаблицаДокумента.Организация.ИНН КАК ИННПлательщика,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|			ТОГДА ТаблицаДокумента.Организация.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КПППлательщика,
	|	ТаблицаДокумента.Контрагент.ИНН КАК ИННПолучателя,
	|	ТаблицаДокумента.Контрагент.КПП КАК КПППолучателя,
	|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ТаблицаДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Договор КАК Договор,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
	|	ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * ВЫБОР
	|			КОГДА ТаблицаДокумента.ВалютаДокумента <> ТаблицаДокумента.Договор.ВалютаРасчетов
	|					И КурсыВалютРасчетов.Курс <> 0
	|					И КурсыВалютДокумента.Кратность <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ТаблицаДокумента.Договор КАК Договор1
	|ИЗ
	|	Документ.РасходДСПлан КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ТаблицаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.ВалютаДокумента = ТаблицаДокумента.Контрагент.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					ТОГДА ТаблицаДокумента.Контрагент.БанковскийСчетПоУмолчанию
	|				ИНАЧЕ БанковскиеСчетаКонтрагента.Ссылка
	|			КОНЕЦ КАК КонтрагентБанковскийСчет
	|		ИЗ
	|			Документ.РасходДСПлан КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчетаКонтрагента
	|				ПО ТаблицаДокумента.ВалютаДокумента = БанковскиеСчетаКонтрагента.ВалютаДенежныхСредств
	|					И ТаблицаДокумента.Контрагент = БанковскиеСчетаКонтрагента.Владелец
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &ДокументОснование
	|			И БанковскиеСчетаКонтрагента.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &ДокументОснование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	Если ДокументОснование.ВалютаДокумента = Контрагент.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств Тогда
		СчетКонтрагента = Контрагент.БанковскийСчетПоУмолчанию;
	КонецЕсли;
	
	ЗаполнитьНазначениеПлатежа();
	
КонецПроцедуры //ЗаполнитьПоРасходДСПлан()

// Процедура заполнения документа на основании начисления налогов.
//
// Параметры:
//	ДокументОснование - ДокументСсылка.ПриходДенежныхСредствПлан - Плановый платеж
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоНачислениеНалогов(ДокументОснование) Экспорт
	
	Если ДокументОснование.ВидОперации <> Перечисления.ВидыОперацийНачислениеНалогов.Начисление Тогда
		ВызватьИсключение НСтр("ru='Расход со счета можно ввести только на основании начисления налогов, а не возмещения.'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("КонстантаНациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("КонстантаВалютаУчета", Константы.ВалютаУчета.Получить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	Организации.КодПоОКАТО,
	|	Организации.КодПоОКТМО,
	|	Организации.КодНалоговогоОрганаПолучателя КАК КодНалоговогоОрганаПолучателя,
	|	Организации.КодОрганаПФР КАК КодОрганаПФР,
	|	Организации.КодОрганаФСС КАК КодОрганаФСС,
	|	Организации.РегистрационныйНомерПФР_ИП,
	|	Организации.РегистрационныйНомерПФР,
	|	Организации.РегистрационныйНомерФСС,
	|	Организации.ИНН КАК ИННПлательщика,
	|	Организации.НаименованиеПлательщикаПриПеречисленииНалогов,
	|	ВЫБОР
	|		КОГДА Организации.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = &КонстантаНациональнаяВалюта
	|			ТОГДА ВЫБОР
	|					КОГДА Организации.БанковскийСчетПоУмолчанию.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|						ТОГДА Организации.КПП
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВложенныйЗапрос.БанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|					ТОГДА Организации.КПП
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК КПППлательщика,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = &КонстантаНациональнаяВалюта
	|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	&КонстантаНациональнаяВалюта КАК ВалютаДокумента,
	|	ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию КАК СтавкаНДС,
	|	1 КАК Курс,
	|	1 КАК Кратность,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * КурсыВалютУчета.Курс * 1 / (1 * ЕСТЬNULL(КурсыВалютУчета.Кратность, 1)) КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
	|	ТаблицаДокументаНалоги.ВидНалога КАК ВидНалога,
	|	ТаблицаДокументаНалоги.КодОКТМОДокумента КАК КодОКТМОДокумента,
	|	ТаблицаДокументаНалоги.КодИФНСДокумента КАК КодИФНСДокумента,
	|	ТаблицаДокументаНалоги.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДокументаНалоги.СрокУплаты
	|ИЗ
	|	Документ.НачислениеНалогов КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ТаблицаДокумента.Ссылка КАК Ссылка,
	|			ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|			ТаблицаДокумента.СрокУплаты КАК СрокУплаты,
	|			ТаблицаДокумента.КодПоОКАТО КодОКТМОДокумента,
	|			ТаблицаДокумента.КодИФНС КодИФНСДокумента,
	|			ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности
	|		ИЗ
	|			Документ.НачислениеНалогов.Налоги КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаНалоги
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаНалоги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &КонстантаВалютаУчета) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.НачислениеНалогов КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И (БанковскиеСчета.ВалютаДенежныхСредств = &КонстантаНациональнаяВалюта)
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО (Организации.Ссылка = ТаблицаДокумента.Организация)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		НалогообложениеНДС = УправлениеНебольшойФирмойСервер.НалогообложениеНДС(Организация, , Дата);
		
		Если Выборка.СрокУплаты <= ТекущаяДатаСеанса() Тогда
			ПоказательОснования = "ЗД";
		КонецЕсли;
		
		Если Выборка.ВидНалога = Справочники.ВидыНалогов.АвансовыйПлатежПриУСН
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ЕдиныйНалогПриУСН Тогда
			КодБК = РегламентированнаяОтчетностьУСН.ПолучитьКБКУплаты(ЭтотОбъект.Организация, ДокументОснование.Дата, Выборка.ВидНалога);
		Иначе
			КодБК = РегламентированнаяОтчетностьУСН.ПолучитьКБКУплаты(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Выборка.ВидНалога);
		КонецЕсли;
		
		ПоказательПериода = РегламентированнаяОтчетностьУСН.ПолучитьПоказательПериода(ДокументОснование, Выборка.ВидНалога);
		
		Если Выборка.ВидНалога = Справочники.ВидыНалогов.ЕНВД
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.Патент 
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ТорговыйСбор  Тогда
			КодОКАТО = Выборка.КодОКТМОДокумента;
		Иначе
			Если Год(Дата) > 2013 Тогда
				КодОКАТО = Выборка.КодПоОКТМО;
			Иначе
				КодОКАТО = Выборка.КодПоОКАТО;
			КонецЕсли;
		КонецЕсли;
		
		ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
		КодОргана = "";
		ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж;
		
		Если Выборка.ВидНалога = Справочники.ВидыНалогов.АвансовыйПлатежПриУСН
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ЕдиныйНалогПриУСН
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.НДФЛСотрудники Тогда
			
			ПоказательТипа = "0";
			СтатусСоставителя =   "01";
			
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
			КодОргана = Выборка.КодНалоговогоОрганаПолучателя;
			
		ИначеЕсли Выборка.ВидНалога = Справочники.ВидыНалогов.ЕНВД Тогда
			
			ПоказательТипа = "0";
			СтатусСоставителя =   "01";
			
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
			КодОргана = Выборка.КодИФНСДокумента;
			
		ИначеЕсли Выборка.ВидНалога = Справочники.ВидыНалогов.ТорговыйСбор Тогда
			
			ПоказательТипа = "0";
			СтатусСоставителя =   "01";
			ПоказательОснования = "ТП";
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
			КодОргана = Выборка.КодИФНСДокумента;

		ИначеЕсли Выборка.ВидНалога = Справочники.ВидыНалогов.Патент Тогда
			
			ПоказательТипа = "0";
			ПоказательОснования = "ТП";
			СтатусСоставителя =   "09";
			
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
			КодОргана = Выборка.КодИФНСДокумента;
			
		ИначеЕсли  Выборка.ВидНалога = Справочники.ВидыНалогов.ФССТравматизмСотрудники Тогда
			ПоказательТипа = "0";
			СтатусСоставителя =   "08";
			ПоказательОснования = "0";
			ПоказательПериода =   "0";
			ПоказательНомера =    "0";
			
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.ОрганФСС;
			КодОргана = Выборка.КодОрганаФСС;
			ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ИнойПлатеж;
			
		ИначеЕсли Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРНакопительная
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСвыше300тр
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСтраховая
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСтраховаяСотрудники
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ТФОМС
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ФФОМС
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ФОМССотрудники 
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ФСССотрудники Тогда
			
			Если Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники
				ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСтраховаяСотрудники
				ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ФОМССотрудники 
				ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ФСССотрудники Тогда
				СтатусСоставителя =   "14";
			Иначе
				СтатусСоставителя =   "09";
			КонецЕсли;
			
			ПоказательТипа = "0";
			
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
			КодОргана = Выборка.КодНалоговогоОрганаПолучателя;
		КонецЕсли;
		ИдентификаторПлатежа = "0";
		ПоказательТипа = "0";
		
		Если Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРНакопительная
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСтраховая
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСвыше300тр
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ТФОМС
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ФФОМС Тогда
			Назначение = РегламентированнаяОтчетностьУСНКлиентСервер.ПолучитьТекстНазначенияПлатежаНалогаПоДате(
				ДокументОснование.Дата,
				Выборка.ВидНалога,
				Выборка.РегистрационныйНомерПФР_ИП);
		Иначе
			Назначение = РегламентированнаяОтчетностьУСНКлиентСервер.ПолучитьТекстНазначенияПлатежаНалогаПоДате(
				ДокументОснование.Дата,
				Выборка.ВидНалога,
				Выборка.РегистрационныйНомерПФР,
				Выборка.РегистрационныйНомерФСС);
		КонецЕсли;
		НазначениеПлатежа = Назначение;
		ТекстПлательщика = Выборка.НаименованиеПлательщикаПриПеречисленииНалогов;
		
		Если ЗначениеЗаполнено(ВидГосОргана) Тогда
			ГосОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(ВидГосОргана, КодОргана);
			Контрагент = ГосОрган.Ссылка;
			ИННПолучателя = ГосОрган.ИНН;
			КПППолучателя = ГосОрган.КПП;
			ТекстПолучателя = ГосОрган.ПлатежныеРеквизиты.ПолучательПлатежа;
			СчетКонтрагента = ГосОрган.ПлатежныеРеквизиты.БанковскийСчет;
		КонецЕсли;
		
		ДокументОснование = ДокументОснование;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоНачислениеНалогов()

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидОперации <> Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога Тогда
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидПеречисленияВБюджет");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КодБК");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КодОКАТО");
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПоставщику")] = "ЗаполнитьПоЗаказПоставщику";
	СтратегияЗаполнения[Тип("ДокументСсылка.СчетНаОплатуПоставщика")] = "ЗаполнитьПоСчетНаОплатуПоставщика";
	СтратегияЗаполнения[Тип("ДокументСсылка.РасходДСПлан")] = "ЗаполнитьПоРасходДСПлан";
	СтратегияЗаполнения[Тип("ДокументСсылка.НачислениеНалогов")] = "ЗаполнитьПоНачислениеНалогов";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПриКопировании(ОбъектКопирования)
	
	#Если НЕ ВнешнееСоединение Тогда
		
	Если ЗначениеЗаполнено(ОбъектКопирования.Ссылка)
		И ОбъектКопирования.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога")
		И ((УправлениеНебольшойФирмойКлиентСервер.ДействуютНовыеПравилаРеквизитовПлатежаВБюджет(ОбъектКопирования.Дата)
		И НЕ УправлениеНебольшойФирмойКлиентСервер.ДействуютНовыеПравилаРеквизитовПлатежаВБюджет(ТекущаяДатаСеанса()))
		ИЛИ (НЕ УправлениеНебольшойФирмойКлиентСервер.ДействуютНовыеПравилаРеквизитовПлатежаВБюджет(ОбъектКопирования.Дата)
		И УправлениеНебольшойФирмойКлиентСервер.ДействуютНовыеПравилаРеквизитовПлатежаВБюджет(Дата))) Тогда
		КодОКАТО = "";
		ИдентификаторПлатежа = "";
	КонецЕсли;
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли