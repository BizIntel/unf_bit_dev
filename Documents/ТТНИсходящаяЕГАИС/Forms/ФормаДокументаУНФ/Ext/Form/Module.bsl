
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Документы.ТТНИсходящаяЕГАИС.УстановитьУсловноеОформлениеСтатусаОбработки(ЭтотОбъект, "СтатусОбработки", "Объект.СтатусОбработки");
	
	ПроверитьИнформациюОбОшибке();
	
	ДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПроверитьИнформациюОбОшибке();
	
	ДоступностьЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьТТН(Команда)
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ не сохранен.'"));
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура();
	
	Если НЕ Объект.Проведен Тогда
		Если НЕ Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)) Тогда
			Возврат;
		КонецЕсли;
		
		ДополнительныеПараметры.Вставить("ПроведенПередОтправкой", Истина);
	КонецЕсли;
	
	НачатьВыгрузкуДокумента(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ТТН"), ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьАктРасхождений(Команда)
	
	НачатьВыгрузкуДокумента(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ПодтверждениеАктаРасхожденийТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьсяОтАктаРасхождений(Команда)
	
	НачатьВыгрузкуДокумента(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтказОтАктаРасхожденийТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСправкиБ(Команда)
	
	Если Объект.Грузоотправитель.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбран грузоотправитель'"));
		Возврат;
	КонецЕсли;
	
	ПодобратьСправкиБНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	РассчитатьСуммуВСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	РассчитатьСуммуВСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока.Количество <> 0 Тогда
		ТекущаяСтрока.Цена = ТекущаяСтрока.Сумма / ТекущаяСтрока.Количество;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДоступностьЭлементовФормы()
	
	РедактируемыеСтатусы = Новый Массив;
	РедактируемыеСтатусы.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.Новый);
	РедактируемыеСтатусы.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачиВЕГАИС);
	
	ТолькоПросмотр = РедактируемыеСтатусы.Найти(Объект.СтатусОбработки) = Неопределено;
	
	СтатусыПодтвержденияАкта = Новый Массив;
	СтатусыПодтвержденияАкта.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПринятАктРасхождений);
	СтатусыПодтвержденияАкта.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачиПодтвержденияАктаРасхождений);
	СтатусыПодтвержденияАкта.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачиОтказаОтАктаРасхождений);
	
	Элементы.ФормаВыгрузитьТТН.Видимость = РедактируемыеСтатусы.Найти(Объект.СтатусОбработки) <> Неопределено;
	Элементы.ФормаПодтвердитьАктРасхождений.Видимость = СтатусыПодтвержденияАкта.Найти(Объект.СтатусОбработки) <> Неопределено;
	Элементы.ФормаОтказатьсяОтАктаРасхождений.Видимость = СтатусыПодтвержденияАкта.Найти(Объект.СтатусОбработки) <> Неопределено;
	
	Элементы.ТоварыПодобратьСправкиБ.Доступность = НЕ ТолькоПросмотр;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьИнформациюОбОшибке()

	ИнформацияОбОшибке = РегистрыСведений.ПротоколОбменаЕГАИС.ТекстПоследнейОшибки(Объект.Ссылка);
	Элементы.ГруппаИнформацияОбОшибке.Видимость = НЕ ПустаяСтрока(ИнформацияОбОшибке);

КонецПроцедуры

&НаКлиенте
Процедура НачатьВыгрузкуДокумента(ВидДокумента, ДополнительныеПараметры = Неопределено)
	
	Если Модифицированность ИЛИ НЕ Объект.Проведен Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ не проведен.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапроса = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(ВидДокумента);
	ПараметрыЗапроса.ДокументСсылка = Объект.Ссылка;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВидДокумента", ВидДокумента);
	ДополнительныеПараметры.Вставить("ДокументСсылка", ПараметрыЗапроса.ДокументСсылка);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыгрузкаДокумента_Завершение", ЭтотОбъект, ДополнительныеПараметры);
	ИнтеграцияЕГАИСКлиент.НачатьФормированиеИсходящегоЗапроса(
		ОповещениеПриЗавершении,
		ВидДокумента,
		ПараметрыЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаДокумента_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Результат Тогда
		Если ДополнительныеПараметры <> Неопределено
			И ДополнительныеПараметры.Свойство("ВидДокумента")
			И ДополнительныеПараметры.ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтказОтАктаРасхожденийТТН") Тогда
			ЗаписатьРеализациюПриОтказе(ДополнительныеПараметры.ДокументСсылка);
		КонецЕсли;
		
		ЭтотОбъект.Прочитать();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ успешно выгружен в УТМ.'"));
	ИначеЕсли ДополнительныеПараметры.Свойство("ПроведенПередОтправкой") Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьСправкиБНаСервере()
	
	СтрокиСоСправкой = Новый Массив;
	
	СписокАлкогольнойПродукции = Новый Массив;
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		Если СтрокаТЧ.СправкаБ.Пустая() Тогда
			СписокАлкогольнойПродукции.Добавить(СтрокаТЧ.АлкогольнаяПродукция);
		Иначе
			СтрокиСоСправкой.Добавить(СтрокаТЧ);
		КонецЕсли;
	КонецЦикла;
	
	Если СписокАлкогольнойПродукции.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СправкиВДокументе = Объект.Товары.Выгрузить(СтрокиСоСправкой, "АлкогольнаяПродукция, СправкаБ, Количество");
	СправкиВДокументе.Свернуть("АлкогольнаяПродукция, СправкаБ", "Количество");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", Объект.Грузоотправитель);
	Запрос.УстановитьПараметр("СписокАлкогольнойПродукции", СписокАлкогольнойПродукции);
	Запрос.УстановитьПараметр("СправкиВДокументе", СправкиВДокументе);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Запрос.УстановитьПараметр("Период", Новый Граница(Объект.Дата, ВидГраницы.Исключая));
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправкиВДокументе.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СправкиВДокументе.СправкаБ КАК СправкаБ,
	|	СправкиВДокументе.Количество КАК Количество
	|ПОМЕСТИТЬ СправкиВДокументе
	|ИЗ
	|	&СправкиВДокументе КАК СправкиВДокументе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СправкаБ КАК СправкаБ,
	|	ЕСТЬNULL(ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СправкаБ.ДокументОснование.ДатаТТН, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаТТН,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СвободныйОстатокОстаток - ЕСТЬNULL(СправкиВДокументе.Количество, 0) КАК Остаток
	|ИЗ
	|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.Остатки(" + ?(ЗначениеЗаполнено(Объект.Ссылка), "&Период", "") + "
	|			,
	|			ОрганизацияЕГАИС = &ОрганизацияЕГАИС
	|				И АлкогольнаяПродукция В (&СписокАлкогольнойПродукции)) КАК ОстаткиАлкогольнойПродукцииЕГАИСОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СправкиВДокументе КАК СправкиВДокументе
	|		ПО ОстаткиАлкогольнойПродукцииЕГАИСОстатки.АлкогольнаяПродукция = СправкиВДокументе.АлкогольнаяПродукция
	|			И ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СправкаБ = СправкиВДокументе.СправкаБ
	|
	|УПОРЯДОЧИТЬ ПО
	|	АлкогольнаяПродукция,
	|	ДатаТТН
	|ИТОГИ ПО
	|	АлкогольнаяПродукция";
	
	ВыборкаАлкогольнаяПродукция = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаАлкогольнаяПродукция.Следующий() Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("АлкогольнаяПродукция", ВыборкаАлкогольнаяПродукция.АлкогольнаяПродукция);
		Отбор.Вставить("СправкаБ", Справочники.СправкиБЕГАИС.ПустаяСсылка());
		
		Выборка = ВыборкаАлкогольнаяПродукция.Выбрать();
		Пока Выборка.Следующий() Цикл
			ОстатокПоСправке = Выборка.Остаток;
			ЕстьСтрокиДляЗаполнения = Истина;
			
			Пока ОстатокПоСправке > 0 Цикл
				МассивСтрок = Объект.Товары.НайтиСтроки(Отбор);
				Если МассивСтрок.Количество() = 0 Тогда
					ЕстьСтрокиДляЗаполнения = Ложь;
					Прервать;
				КонецЕсли;
				
				Для Каждого СтрокаТЧ Из МассивСтрок Цикл
					СтрокаТЧ.СправкаБ = Выборка.СправкаБ;
					Если СтрокаТЧ.Количество > ОстатокПоСправке Тогда
						РазницаПоКоличеству = СтрокаТЧ.Количество - ОстатокПоСправке;
						РазницаПоСумме = СтрокаТЧ.Сумма - ОстатокПоСправке * СтрокаТЧ.Цена;
						
						СтрокаТЧ.Количество = ОстатокПоСправке;
						СтрокаТЧ.Сумма = ОстатокПоСправке * СтрокаТЧ.Цена;
						
						НоваяСтрока = Объект.Товары.Вставить(Объект.Товары.Индекс(СтрокаТЧ) + 1);
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ, "АлкогольнаяПродукция, ИдентификаторУпаковки, Цена, НомерПартии");
						НоваяСтрока.Количество = РазницаПоКоличеству;
						НоваяСтрока.Сумма = РазницаПоСумме;
					КонецЕсли;
					
					ОстатокПоСправке = ОстатокПоСправке - СтрокаТЧ.Количество;
					Если ОстатокПоСправке <= 0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			Если НЕ ЕстьСтрокиДляЗаполнения Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуВСтроке()
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена * ТекущаяСтрока.Количество;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРеализациюПриОтказе(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходнаяНакладная.Ссылка
	|ИЗ
	|	Документ.РасходнаяНакладная КАК РасходнаяНакладная
	|ГДЕ
	|	РасходнаяНакладная.ТоварноТранспортнаяНакладнаяЕГАИС = &ТоварноТранспортнаяНакладнаяЕГАИС";
	
	Запрос.УстановитьПараметр("ТоварноТранспортнаяНакладнаяЕГАИС", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		РеализацияОбъект = Выборка.Ссылка.ПолучитьОбъект();
		РеализацияОбъект.АктПереданВЕГАИС = Истина;
		
		Если РеализацияОбъект.Проведен Тогда
			РеализацияОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			РеализацияОбъект.Записать();
		КонецЕсли;
		
		РеализацияОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
