#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияЕГАИСПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Идентификатор) Тогда
		Идентификатор = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;
	
	СуммаДокумента = Товары.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ТаблицаДвижений = ПолучитьТаблицуДвижений();
	
	РегистрыНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.ЗаписатьТаблицуДвижений(ТаблицаДвижений, Движения, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СтатусОбработки = Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.Новый;
	
	Идентификатор = "";
	ИдентификаторЕГАИС = "";
	
	ДатаРегистрацииДвижений = '00010101';
	
	Товары.ЗагрузитьКолонку(Новый Массив(Товары.Количество()), "СправкаБ");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуДвижений()
	
	СтатусыРасхождений = Новый Массив;
	СтатусыРасхождений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПередаетсяПодтверждениеАктаРасхождений);
	СтатусыРасхождений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПереданоПодтверждениеАктаРасхождений);
	СтатусыРасхождений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачиПодтвержденияАктаРасхождений);
	
	СтатусыДвижений = Новый Массив;
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПередаетсяВЕГАИС);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПереданВЕГАИС);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПередаетсяАктОтказа);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачиАктаОтказа);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПринятАктПодтверждения);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПринятАктРасхождений);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПередаетсяПодтверждениеАктаРасхождений);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПереданоПодтверждениеАктаРасхождений);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачиПодтвержденияАктаРасхождений);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПередаетсяОтказОтАктаРасхождений);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачиОтказаОтАктаРасхождений);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СтатусыРасхождений", СтатусыРасхождений);
	Запрос.УстановитьПараметр("СтатусыДвижений", СтатусыДвижений);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТТНИсходящаяЕГАИСТовары.Ссылка.Дата КАК Период,
	|	ТТНИсходящаяЕГАИСТовары.Ссылка КАК Регистратор,
	|	ТТНИсходящаяЕГАИСТовары.НомерСтроки КАК НомерСтроки,
	|	ТТНИсходящаяЕГАИСТовары.Ссылка.Грузоотправитель КАК ОрганизацияЕГАИС,
	|	ТТНИсходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТТНИсходящаяЕГАИСТовары.СправкаБ КАК СправкаБ,
	|	ВЫБОР
	|		КОГДА ТТНИсходящаяЕГАИСТовары.Ссылка.СтатусОбработки В (&СтатусыРасхождений)
	|			ТОГДА ТТНИсходящаяЕГАИСТовары.КоличествоФакт
	|		ИНАЧЕ ТТНИсходящаяЕГАИСТовары.Количество
	|	КОНЕЦ КАК СвободныйОстаток,
	|	0 КАК Количество
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТТНИсходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНИсходящаяЕГАИСТовары.Ссылка = &Ссылка
	|	И ТТНИсходящаяЕГАИСТовары.Ссылка.СтатусОбработки В(&СтатусыДвижений)
	|	И ВЫБОР
	|			КОГДА ТТНИсходящаяЕГАИСТовары.Ссылка.СтатусОбработки В (&СтатусыРасхождений)
	|				ТОГДА ТТНИсходящаяЕГАИСТовары.КоличествоФакт <> 0
	|			ИНАЧЕ ТТНИсходящаяЕГАИСТовары.Количество <> 0
	|		КОНЕЦ
	|	И ТТНИсходящаяЕГАИСТовары.Ссылка.Грузоотправитель.УчитыватьОстаткиАлкогольнойПродукции
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТТНИсходящаяЕГАИСТовары.Ссылка.ДатаРегистрацииДвижений,
	|	ТТНИсходящаяЕГАИСТовары.Ссылка,
	|	ТТНИсходящаяЕГАИСТовары.НомерСтроки,
	|	ТТНИсходящаяЕГАИСТовары.Ссылка.Грузоотправитель,
	|	ТТНИсходящаяЕГАИСТовары.АлкогольнаяПродукция,
	|	ТТНИсходящаяЕГАИСТовары.СправкаБ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТТНИсходящаяЕГАИСТовары.Ссылка.СтатусОбработки В (&СтатусыРасхождений)
	|			ТОГДА ТТНИсходящаяЕГАИСТовары.КоличествоФакт
	|		ИНАЧЕ ТТНИсходящаяЕГАИСТовары.Количество
	|	КОНЕЦ
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТТНИсходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНИсходящаяЕГАИСТовары.Ссылка = &Ссылка
	|	И ТТНИсходящаяЕГАИСТовары.Ссылка.СтатусОбработки В (ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНИсходящейЕГАИС.ПринятАктПодтверждения), ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНИсходящейЕГАИС.ПереданоПодтверждениеАктаРасхождений))
	|	И ВЫБОР
	|			КОГДА ТТНИсходящаяЕГАИСТовары.Ссылка.СтатусОбработки В (&СтатусыРасхождений)
	|				ТОГДА ТТНИсходящаяЕГАИСТовары.КоличествоФакт <> 0
	|			ИНАЧЕ ТТНИсходящаяЕГАИСТовары.Количество <> 0
	|		КОНЕЦ
	|	И ТТНИсходящаяЕГАИСТовары.Ссылка.Грузоотправитель.УчитыватьОстаткиАлкогольнойПродукции
	|	И ТТНИсходящаяЕГАИСТовары.Ссылка.ДатаРегистрацииДвижений <> &ПустаяДата
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли
