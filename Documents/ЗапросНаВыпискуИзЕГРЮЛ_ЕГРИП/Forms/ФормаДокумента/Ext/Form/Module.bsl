#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// инициализируем контекст ЭДО - модуль обработки
	ТекстСообщения = "";
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
	Если КонтекстЭДОСервер = Неопределено Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			
			УчетПоВсемОрганизациям = РегламентированнаяОтчетность.ПолучитьПризнакУчетаПоВсемОрганизациям();
			Элементы.Организация.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;
			
			ОргПоУмолчанию = РегламентированнаяОтчетность.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
			Если ЗначениеЗаполнено(ОргПоУмолчанию)
				И ?(КонтекстЭДОСервер = Неопределено, Истина, КонтекстЭДОСервер.СписокДопустимыхОрганизацийВОбъектахОбмена().Найти(ОргПоУмолчанию) <> Неопределено)
				И ((ЗначениеЗаполнено(ОргПоУмолчанию) И НЕ УчетПоВсемОрганизациям)
				ИЛИ (НЕ ЗначениеЗаполнено(Объект.Организация) И УчетПоВсемОрганизациям И (ЗначениеЗаполнено(ОргПоУмолчанию)))) Тогда
				Объект.Организация = ОргПоУмолчанию;
			КонецЕсли;
			
		КонецЕсли;
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура")
			И Параметры.ЗначенияЗаполнения.Свойство("Организация") Тогда
			Объект.Организация = Параметры.ЗначенияЗаполнения.Организация;
		КонецЕсли;
	КонецЕсли;
	
	Если Не Параметры.Ключ.Пустая() Тогда
		ОбновитьЗаголовокФормы(ЭтаФорма);
	КонецЕсли;
	
	// управляем панелью статуса
	УправлениеСтатусомИДоступностью();
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.СкрытьЭлементыФормыПриИспользованииОднойОрганизации(ЭтаФорма, "ДекорацияОрганизация");
	
	ПредставлениеЗапроса = ПолучитьПодсказкуЗначениеПоискаЗапросаЕГР(Объект.ПараметрЗапроса, Объект.Контрагент);
	
	ОбновитьПредставлениеПараметрЗапроса(ЭтаФорма);
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОтметитьКакПрочтенное(Объект.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ДанныеПоследнегоЦиклаОбмена <> Неопределено Тогда
		Оповестить(
			"Чтение сообщения", 
			Новый Структура("Сообщение, ЦиклОбмена", 
				ДанныеПоследнегоЦиклаОбмена.ТранспортноеСообщение, 
				ДанныеПоследнегоЦиклаОбмена.ЦиклОбмена));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьЗаголовокФормы(ЭтаФорма);
	
	Оповестить("Запись_ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП",, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПараметрЗапросаПриИзменении(Элемент)
	
	Объект.ПараметрЗапроса = ПредставлениеЗапроса;
	Объект.Контрагент = Неопределено;
	ОбновитьПредставлениеПараметрЗапроса(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрЗапросаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ПрисвоитьЗначениеПараметруЗапроса", ЭтотОбъект);
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора",ДополнительныеПараметры, ЭтаФорма,,,,
		Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УправлениеСтатусомИДоступностью();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСтатус(Команда)
	
	// управляем панелью статуса
	УправлениеСтатусомИДоступностью();

КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	Если (Модифицированность ИЛИ Параметры.Ключ.Пустая()) 
		И Не Записать() ИЛИ Не ПроверитьЗаполнение() Тогда
		Возврат;	
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДО = Результат.КонтекстЭДО;
	ДополнительныеПараметры = Новый Структура("КонтекстЭДО", КонтекстЭДО);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	КонтекстЭДО.ОтправкаЗапросаНаВыпискуИзЕГР(Объект.Ссылка, Объект.Организация, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДО = ДополнительныеПараметры.КонтекстЭДО;
	КонтекстЭДО.ПредупредитьЕслиСтатусОтправкиВКонверте(Объект.Ссылка, "запрос");
	ЗаявлениеОтправлено = ЗаявлениеОтправлено(Объект.Ссылка);
	
	УправлениеСтатусомИДоступностью();
	
	// Перерисовка статуса отправки в форме Отчетность
	ПараметрыОповещения = Новый Структура(); 
	ПараметрыОповещения.Вставить("Ссылка", Объект.Ссылка);
	ПараметрыОповещения.Вставить("Организация", Объект.Организация);
	Оповестить("Завершение отправки в контролирующий орган", ПараметрыОповещения, Объект.Ссылка);
	
	Если Открыта() И ЗаявлениеОтправлено Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗаголовокФормы(Форма)
	
	Объект = Форма.Объект;
	
	ДлинаСтроки = СтрДлина(Объект.ПараметрЗапроса);
	
	СтрокаПодсказки = "";
	Если ДлинаСтроки = 13 ИЛИ ДлинаСтроки = 15 Тогда
		СтрокаПодсказки = "ОГРН " + Объект.ПараметрЗапроса;
	ИначеЕсли ДлинаСтроки = 10 ИЛИ ДлинаСтроки = 12 Тогда
		СтрокаПодсказки = "ИНН " + Объект.ПараметрЗапроса;
	КонецЕсли;

	
	Если ЗначениеЗаполнено(СтрокаПодсказки) Тогда
		Заголовок = НСтр("ru = 'Запрос на выписку из ЕГРЮЛ/ЕГРИП по %1'");
	Иначе
		Заголовок = НСтр("ru = 'Запрос на выписку из ЕГРЮЛ/ЕГРИП'");
	КонецЕсли;
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Заголовок, СтрокаПодсказки);
		
	Форма.Заголовок = Заголовок;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПредставлениеПараметрЗапроса(Форма)
	
	Форма.ПредставлениеЗапроса = ПолучитьПодсказкуЗначениеПоискаЗапросаЕГР(Форма.Объект.ПараметрЗапроса, Форма.Объект.Контрагент);
	
КонецПроцедуры

&НаСервере
Функция ПрорисоватьСтатус()
	
	ПараметрыПрорисовкиПанелиОтправки = ДокументооборотСКОВызовСервера.ПараметрыПрорисовкиПанелиОтправки(Объект.Ссылка, Объект.Организация);
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ПрименитьПараметрыПрорисовкиПанелиОтправки(ЭтаФорма, ПараметрыПрорисовкиПанелиОтправки);
		
КонецФункции

&НаСервере
Процедура УправлениеСтатусомИДоступностью()
	
	ПрорисоватьСтатус();
	УправлениеЭУОтправка();
		
КонецПроцедуры

&НаСервере
Процедура УправлениеЭУОтправка()
	
	ТекстСообщения = "";
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
	Если КонтекстЭДОСервер = Неопределено Тогда 
		Элементы.Отправить.Видимость = Ложь; // пока отсутствует обработчик
		Возврат;
	КонецЕсли;
	
	ЗаявлениеОтправлено = ЗаявлениеОтправлено(Объект.Ссылка);
	
	Элементы.Отправить.Видимость = Не ЗаявлениеОтправлено;
	Элементы.Записать.Видимость = Не ЗаявлениеОтправлено;
	
	ТолькоПросмотр = ЗаявлениеОтправлено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисвоитьЗначениеПараметруЗапроса(РезультатВыбора, Параметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;   

	ИННКонтрагента = ПолучитьИННКонтрагента(РезультатВыбора);
	
	Если ПустаяСтрока(ИННКонтрагента) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'У контрагента не заполнен ИНН.'"));
		Объект.Контрагент = Неопределено;
		ПредставлениеЗапроса = Неопределено;
		Объект.ПараметрЗапроса = Неопределено;
		Возврат;
	КонецЕсли;
	
	Объект.ПараметрЗапроса 	= ИННКонтрагента;
	Объект.Контрагент 		= РезультатВыбора;
	
	Модифицированность = Истина;
	
	ОбновитьПредставлениеПараметрЗапроса(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПодсказкуЗначениеПоискаЗапросаЕГР(КодПоиска, Контрагент = Неопределено)
	
	КодПоиска = СокрЛП(КодПоиска);
	
	КодПоискаТолькоЦифры = "";
	Для Индекс = 1 По СтрДлина(КодПоиска) Цикл
		Символ = Сред(КодПоиска, Индекс, 1);
		Если Не ЗначениеЗаполнено(Символ) Тогда
			Продолжить;
		КонецЕсли;
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Символ,, Ложь) Тогда
			КодПоискаТолькоЦифры = КодПоискаТолькоЦифры + Символ;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ДлинаСтроки = СтрДлина(КодПоискаТолькоЦифры);
	СтрокаПодсказки = "";
	
	Если ДлинаСтроки = 13 ИЛИ ДлинаСтроки = 15 Тогда
		СтрокаПодсказки = КодПоискаТолькоЦифры + " (ОГРН)";
	ИначеЕсли ДлинаСтроки = 10 ИЛИ ДлинаСтроки = 12 Тогда
		СтрокаПодсказки = КодПоискаТолькоЦифры + " (ИНН)";
	Иначе
		Контрагент = Неопределено;
		СтрокаПодсказки = КодПоискаТолькоЦифры;
	КонецЕсли;
	
	КодПоиска = КодПоискаТолькоЦифры;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		КраткоеНаименование = ПолучитьКраткоеНаименованиеКонтрагента(Контрагент);
		СтрокаПодсказки = СтрокаПодсказки + ", " + КраткоеНаименование;
	КонецЕсли;
	
	Возврат СтрокаПодсказки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКраткоеНаименованиеКонтрагента(Контрагент)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "Наименование");
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИННКонтрагента(КонтрагентСсылка);
	
	ИННКонтрагента = "";
	
	Если НЕ ЗначениеЗаполнено(КонтрагентСсылка) Тогда
		Возврат ИННКонтрагента;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Контрагенты.ИНН
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", КонтрагентСсылка);
	
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		Возврат ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервераПереопределяемый.ИННКонтрагента(КонтрагентСсылка);
	КонецПопытки;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ИННКонтрагента = СокрЛП(Выборка.ИНН);
	КонецЦикла;
	
	Возврат ИННКонтрагента;
	
КонецФункции

&НаСервереБезКонтекста
Функция КонтекстЭДОСервер()
	
	Возврат ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаявлениеОтправлено(Ссылка)
	
	СтатусОтправки = КонтекстЭДОСервер().ПолучитьСтатусОтправкиОбъекта(Ссылка);
	
	ЗаявлениеОтправлено = 
		ЗначениеЗаполнено(СтатусОтправки) И СтатусОтправки <> Перечисления.СтатусыОтправки.ВКонверте;
		
	Возврат ЗаявлениеОтправлено;
	
КонецФункции

#КонецОбласти

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма);
КонецПроцедуры

#КонецОбласти