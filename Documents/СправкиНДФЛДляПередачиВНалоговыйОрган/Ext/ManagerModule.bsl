#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ИнтерфейсПечати

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Справки2НДФЛ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Справки2НДФЛ", "Справка 2-НДФЛ для передачи в ИФНС", СформироватьПечатнуюФорму2НДФЛ(МассивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Реестр2011") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Реестр2011", "Реестр справок о доходах (2-НДФЛ)", СформироватьПечатнуюФормуРеестрСведений(МассивОбъектов,ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой справки 2-НДФЛ
//
// Возвращаемое значение:
//  Табличный документ - печатная форма справки 2-НДФЛ
//
Функция СформироватьПечатнуюФорму2НДФЛ(МассивОбъектов,ОбъектыПечати) Экспорт
	
	ДанныеНА = СправкиПоНДФЛ.СправкиНДФЛДанныеДляПечати(МассивОбъектов);
	ТаблицыДокумента = ПолучитьДанныеПоСправке2НДФЛ(МассивОбъектов);
	Возврат СправкиПоНДФЛ.СформироватьПечатнуюФорму2НДФЛ(ОбъектыПечати, МассивОбъектов, ДанныеНА, ТаблицыДокумента.Сотрудники, ТаблицыДокумента.СведенияОДоходах, ТаблицыДокумента.СведенияОВычетах); 
	
КонецФункции

// Функция формирует табличный документ с печатной формой реестра справок о доходах
//
// Возвращаемое значение:
// Табличный документ - печатная форма реестра справок о доходах
//
Функция СформироватьПечатнуюФормуРеестрСведений(МассивОбъектов,ОбъектыПечати) Экспорт
	
	Документ = МассивОбъектов[0];
	ПакетЗапроса = ПолучитьДанныеПоСправке2НДФЛ(Документ);
	ДанныеПоСотрудникам = ПакетЗапроса.Сотрудники;
	СуммыНалогов = ПакетЗапроса.СведенияОСуммах;
	
	ДанныеДокументов = СправкиПоНДФЛ.СправкиНДФЛДанныеДляПечати(МассивОбъектов, Истина);
	Для Каждого СтруктураДанныхДокумента Из ДанныеДокументов Цикл
		
		ДанныеДокумента = СтруктураДанныхДокумента.Значение;
		
		СтруктураЗаголовка = Новый Структура("ИНН, НаименованиеПолное, КодНалоговогоОргана", ДанныеДокумента.ИННорг, ДанныеДокумента.НаименованиеПолное, ДанныеДокумента.КодНалоговогоОргана);
		
		СтруктураЗаголовка.Вставить("ОбщаяСуммаДохода", ДанныеДокумента.ОбщаяСуммаДохода);	
		СтруктураЗаголовка.Вставить("ОбщаяСуммаДохода", СуммыНалогов.Итог("ОбщаяСуммаДохода"));	
		СтруктураЗаголовка.Вставить("Исчислено", СуммыНалогов.Итог("Исчислено"));	
		СтруктураЗаголовка.Вставить("Удержано", СуммыНалогов.Итог("Удержано"));
		СтруктураЗаголовка.Вставить("Перечислено", СуммыНалогов.Итог("Перечислено"));
		СтруктураЗаголовка.Вставить("ФИОРуководителя", ДанныеДокумента.ФИОПодписавшего);
		СтруктураЗаголовка.Вставить("Год", Формат(ДанныеДокумента.НалоговыйПериод,"ЧЦ=4; ЧДЦ=0; ЧГ=0"));
		СтруктураЗаголовка.Вставить("ДатаСоставления", Формат(ДанныеДокумента.Дата, "ДФ=dd.MM.yyyy"));
		СтруктураЗаголовка.Вставить("НомерРеестра", СправкиПоНДФЛ.НомерПачкиДокумента(ДанныеДокумента.Номер));
		СтруктураЗаголовка.Вставить("Признак", "1");
		СтруктураЗаголовка.Вставить("ИмяФайла", СтруктураДанныхДокумента.Ключ.ИмяФайла);
		СтруктураЗаголовка.Вставить("ОКТМО", ДанныеДокумента.ОКТМО);
		СтруктураЗаголовка.Вставить("ОКАТО", ДанныеДокумента.ОКАТО);
		СтруктураЗаголовка.Вставить("КПП", ДанныеДокумента.КПП);
		СтруктураЗаголовка.Вставить("КоличествоСправок", Формат(ДанныеДокумента.КоличествоСправок,"ЧЦ=4; ЧДЦ=0; ЧГ=0"));
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрСправок2_НДФЛ";
		
		// запоминаем области макета
		Макет = ПолучитьМакет("Реестр2011");
		ОбластьМакетаШапка	= Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
		ОбластьМакетаПодвал	= Макет.ПолучитьОбласть("Подвал");// Подвал документа
		ОбластьМакета 		= Макет.ПолучитьОбласть("Строка"); // область сотрудника
		ОбластьМакетаШапка.Параметры.Заполнить(СтруктураЗаголовка); // Шапка документа.
		// Начинаем формировать выходной документ
		ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
		
		СтруктураПоиска = Новый Структура("НомерСправки");
		// выводим строки по сотрудникам
		Для Каждого Сотрудник Из ДанныеПоСотрудникам Цикл
			
			ОбластьМакета.Параметры.Заполнить(Сотрудник);
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, Сотрудник);
			СтрокиИтогов = СуммыНалогов.Скопировать(СуммыНалогов.НайтиСтроки(СтруктураПоиска));
			Если СтрокиИтогов.Количество() > 0 Тогда
				СтрокиИтогов.Свернуть("НомерСправки", "ОбщаяСуммаДохода,ОблагаемаяСуммаДохода,Исчислено,Удержано,Перечислено,ИзлишнеУдержано,Задолженность");
				ОбластьМакета.Параметры.Заполнить(СтрокиИтогов[0]);
			КонецЕсли;
			ТабДокумент.Вывести(ОбластьМакета);
		
		КонецЦикла;
		
		ОбластьМакетаПодвал.Параметры.Заполнить(СтруктураЗаголовка);
		
		// выводим предварительно подготовленный Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
	КонецЦикла;	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеПоСправке2НДФЛ(Документ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка КАК Ссылка,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.НомерСтроки,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Сотрудник,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.ИНН,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.НомерСправки,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Фамилия,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Имя,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Отчество,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.АдресРФ,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.ВидДокумента,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.СерияДокумента,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.НомерДокумента,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Гражданство,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.ДатаРождения,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.СтатусНалогоплательщика,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.ДатаУведомления,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.НомерУведомления,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.КодНалоговогоОрганаУведомления,
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.АдресЗарубежом,
	|	ЕСТЬNULL(СуммыНалоговСотрудники.ОбщаяСуммаДохода, 0) КАК ОбщаяСуммаДохода,
	|	ЕСТЬNULL(СуммыНалоговСотрудники.ОблагаемаяСуммаДохода, 0) КАК ОблагаемаяСуммаДохода,
	|	ЕСТЬNULL(СуммыНалоговСотрудники.Исчислено, 0) КАК Исчислено,
	|	ЕСТЬNULL(СуммыНалоговСотрудники.Удержано, 0) КАК Удержано,
	|	ЕСТЬNULL(СуммыНалоговСотрудники.Задолженность, 0) КАК Задолженность,
	|	ЕСТЬNULL(СуммыНалоговСотрудники.ИзлишнеУдержано, 0) КАК ИзлишнеУдержано,
	|	ЕСТЬNULL(СуммыНалоговСотрудники.Перечислено, 0) КАК Перечислено
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.СотрудникиОрганизации КАК СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.СуммыНалогов КАК СуммыНалоговСотрудники
	|		ПО (СуммыНалоговСотрудники.Ссылка = СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка)
	|			И (СуммыНалоговСотрудники.НомерСправки = СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.НомерСправки)
	|ГДЕ
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка В(&Документ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОДоходах.Ссылка КАК Ссылка,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОДоходах.НомерСтроки,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОДоходах.Месяц КАК МесяцНалоговогоПериода,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОДоходах.КодДохода,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОДоходах.СуммаДохода,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОДоходах.КодВычета,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОДоходах.СуммаВычета,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОДоходах.НомерСправки
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.СведенияОДоходах КАК СправкаПоНДФЛВНалоговыйОрганСведенияОДоходах
	|ГДЕ
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОДоходах.Ссылка В(&Документ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.Ссылка КАК Ссылка,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.НомерСтроки,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.НомерСправки,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.КодВычета,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.КодВычета.ГруппаВычета КАК ГруппаВычета,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.СуммаВычета
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.СведенияОВычетах КАК СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах
	|ГДЕ
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.Ссылка В(&Документ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.Ссылка,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.НомерСтроки,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.НомерСправки,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.Ставка,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.ОбщаяСуммаДохода,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.ОблагаемаяСуммаДохода,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.Исчислено,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.Удержано,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.Перечислено,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.ИзлишнеУдержано,
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.Задолженность
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.СуммыНалогов КАК СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах
	|ГДЕ
	|	СправкаПоНДФЛВНалоговыйОрганСведенияОВычетах.Ссылка В(&Документ)";
	Запрос.УстановитьПараметр("Документ", Документ);
	Результаты =  Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура("Сотрудники, СведенияОДоходах, СведенияОВычетах, СведенияОСуммах", Результаты[0].Выгрузить(), Результаты[1].Выгрузить(), Результаты[2].Выгрузить(), Результаты[3].Выгрузить());
	
КонецФункции

#КонецОбласти

#КонецЕсли