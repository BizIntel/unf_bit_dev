#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

Процедура ЗаполнитьТабличнуюЧастьПоСпецификации(СтекСпецификацийУзлов, ТаблицаУзлы = Неопределено) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПродукция.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПродукция.Количество КАК Количество,
	|	ТаблицаПродукция.Коэффициент КАК Коэффициент,
	|	ТаблицаПродукция.Спецификация КАК Спецификация
	|ПОМЕСТИТЬ ВременнаяТаблицаПродукция
	|ИЗ
	|	&ТаблицаПродукция КАК ТаблицаПродукция
	|ГДЕ
	|	ТаблицаПродукция.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)";
	
	Если ТаблицаУзлы = Неопределено Тогда
		Запасы.Очистить();
		ТаблицаПродукция = Продукция.Выгрузить();
		Массив = Новый Массив();
		Массив.Добавить(Тип("Число"));
		ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,Новый КвалификаторыЧисла(10,3));
		ТаблицаПродукция.Колонки.Добавить("Коэффициент", ОписаниеТиповЧ);
		Для каждого СтрокаПродукция Из ТаблицаПродукция Цикл
			Если ЗначениеЗаполнено(СтрокаПродукция.ЕдиницаИзмерения)
				И ТипЗнч(СтрокаПродукция.ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
				СтрокаПродукция.Коэффициент = СтрокаПродукция.ЕдиницаИзмерения.Коэффициент;
			Иначе
				СтрокаПродукция.Коэффициент = 1;
			КонецЕсли;
		КонецЦикла;
		ТаблицаУзлы = ТаблицаПродукция.СкопироватьКолонки("НомерСтроки,Количество,Коэффициент,Спецификация");
		Запрос.УстановитьПараметр("ТаблицаПродукция", ТаблицаПродукция);
	Иначе
		Запрос.УстановитьПараметр("ТаблицаПродукция", ТаблицаУзлы);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаПродукция.НомерСтроки) КАК НомерСтрокиПродукции,
	|	ТаблицаПродукция.Спецификация КАК СпецификацияПродукции,
	|	МИНИМУМ(ТаблицаМатериалы.НомерСтроки) КАК НомерСтрокиСостава,
	|	ТаблицаМатериалы.ТипСтрокиСостава КАК ТипСтрокиСостава,
	|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
	|	ТаблицаМатериалы.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ИспользоватьХарактеристики.Значение
	|			ТОГДА ТаблицаМатериалы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	СУММА(ТаблицаМатериалы.Количество / ТаблицаМатериалы.КоличествоПродукции * ТаблицаПродукция.Коэффициент * ТаблицаПродукция.Количество) КАК Количество,
	|	ТаблицаМатериалы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ТипСтрокиСостава = ЗНАЧЕНИЕ(Перечисление.ТипыСтрокСоставаСпецификации.Узел)
	|				И ТИПЗНАЧЕНИЯ(ТаблицаМатериалы.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				И ТаблицаМатериалы.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаМатериалы.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Коэффициент,
	|	ТаблицаМатериалы.ДоляСтоимости КАК ДоляСтоимости,
	|	ТаблицаМатериалы.Спецификация КАК Спецификация
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК ТаблицаМатериалы
	|		ПО ТаблицаПродукция.Спецификация = ТаблицаМатериалы.Ссылка,
	|	Константа.ФункциональнаяОпцияИспользоватьХарактеристики КАК ИспользоватьХарактеристики
	|ГДЕ
	|	ТаблицаМатериалы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПродукция.Спецификация,
	|	ТаблицаМатериалы.ТипСтрокиСостава,
	|	ТаблицаМатериалы.Номенклатура,
	|	ТаблицаМатериалы.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ТипСтрокиСостава = ЗНАЧЕНИЕ(Перечисление.ТипыСтрокСоставаСпецификации.Узел)
	|				И ТИПЗНАЧЕНИЯ(ТаблицаМатериалы.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				И ТаблицаМатериалы.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаМатериалы.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ТаблицаМатериалы.ДоляСтоимости,
	|	ТаблицаМатериалы.Спецификация,
	|	ВЫБОР
	|		КОГДА ИспользоватьХарактеристики.Значение
	|			ТОГДА ТаблицаМатериалы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиПродукции,
	|	НомерСтрокиСостава";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел Тогда
			ТаблицаУзлы.Очистить();
			Если НЕ СтекСпецификацийУзлов.Найти(Выборка.Спецификация) = Неопределено Тогда
				ТекстСообщения = НСтр("ru = 'При попытке заполнить табличную часть Материалы по спецификации,
									|обнаружено рекурсивное вхождение элемента'")+" "+Выборка.Номенклатура+" "+НСтр("ru = 'в спецификации'")+" "+Выборка.СпецификацияПродукции+"
									|Операция не выполнена!";
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
			СтекСпецификацийУзлов.Добавить(Выборка.Спецификация);
			НоваяСтрока = ТаблицаУзлы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЗаполнитьТабличнуюЧастьПоСпецификации(СтекСпецификацийУзлов, ТаблицаУзлы);
		Иначе
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЕсли;
	КонецЦикла;
	
	СтекСпецификацийУзлов.Очистить();
	Запасы.Свернуть("Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Спецификация, ДоляСтоимости, СтранаПроисхождения", "Количество, Резерв");
	
КонецПроцедуры

Процедура ЗаполнитьКолонкуРезервПоРезервам() Экспорт
	
	Запасы.ЗагрузитьКолонку(Новый Массив(Запасы.Количество()), "Резерв");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	&Заказ КАК ЗаказПокупателя
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	&ТаблицаЗапасы КАК ТаблицаЗапасы";
	
	Запрос.УстановитьПараметр("ТаблицаЗапасы", Запасы.Выгрузить());
	Запрос.УстановитьПараметр("Заказ", ?(ЗначениеЗаполнено(ЗаказПокупателя), ЗаказПокупателя, Документы.ЗаказПокупателя.ПустаяСсылка()));
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.Организация КАК Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				,
	|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						&Организация,
	|						&СтруктурнаяЕдиница,
	|						ВЫБОР
	|							КОГДА &ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|								ТОГДА ТаблицаЗапасы.Номенклатура.СчетУчетаЗатрат
	|							ИНАЧЕ ТаблицаЗапасы.Номенклатура.СчетУчетаЗапасов
	|						КОНЕЦ,
	|						ТаблицаЗапасы.Номенклатура,
	|						ТаблицаЗапасы.Характеристика,
	|						ТаблицаЗапасы.Партия,
	|						ТаблицаЗапасы.ЗаказПокупателя
	|					ИЗ
	|						ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|					ГДЕ
	|						ТаблицаЗапасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))) КАК ЗапасыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗапасы.Организация,
	|		ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|		ДвиженияДокументаЗапасы.СчетУчета,
	|		ДвиженияДокументаЗапасы.ЗаказПокупателя,
	|		ДвиженияДокументаЗапасы.Номенклатура,
	|		ДвиженияДокументаЗапасы.Характеристика,
	|		ДвиженияДокументаЗапасы.Партия,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|	ГДЕ
	|		ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		И ДвиженияДокументаЗапасы.Период <= &Период
	|		И ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И ДвиженияДокументаЗапасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.ЗаказПокупателя,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия";
	
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиницаЗапасов);
	Запрос.УстановитьПараметр("ТипСтруктурнойЕдиницы", СтруктурнаяЕдиницаЗапасов.ТипСтруктурнойЕдиницы);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураДляПоиска = Новый Структура;
		СтруктураДляПоиска.Вставить("Номенклатура", Выборка.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", Выборка.Характеристика);
		СтруктураДляПоиска.Вставить("Партия", Выборка.Партия);
		
		ВсегоОстаток = Выборка.КоличествоОстаток;
		МассивСтрокЗапасы = Запасы.НайтиСтроки(СтруктураДляПоиска);
		Для каждого СтрокаЗапасы Из МассивСтрокЗапасы Цикл
			
			ВсегоОстаток = ?(ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения"), ВсегоОстаток, ВсегоОстаток / СтрокаЗапасы.ЕдиницаИзмерения.Коэффициент);
			Если СтрокаЗапасы.Количество >= ВсегоОстаток Тогда
				СтрокаЗапасы.Резерв = ВсегоОстаток;
				ВсегоОстаток = 0;
			Иначе
				СтрокаЗапасы.Резерв = СтрокаЗапасы.Количество;
				ВсегоОстаток = ВсегоОстаток - СтрокаЗапасы.Количество;
				ВсегоОстаток = ?(ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения"), ВсегоОстаток, ВсегоОстаток * СтрокаЗапасы.ЕдиницаИзмерения.Коэффициент);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуНаПроизводство(ДанныеЗаполнения) Экспорт
	
	// Заполнение шапки.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказНаПроизводство.Ссылка КАК ОснованиеСсылка,
	|	ЗаказНаПроизводство.Проведен КАК ОснованиеПроведен,
	|	ЗаказНаПроизводство.СостояниеЗаказа КАК СостояниеЗаказа,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводство.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказНаПроизводство.Сборка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|	КОНЕЦ КАК ВидОперации,
	|	ЗаказНаПроизводство.Старт КАК Старт,
	|	ЗаказНаПроизводство.Финиш КАК Финиш,
	|	ЗаказНаПроизводство.Ссылка КАК ЗаказНаПроизводство,
	|	ЗаказНаПроизводство.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводство.ЗаказПокупателя КАК ДокументОснование,
	|	ЗаказНаПроизводство.Организация КАК Организация,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиницаПродукции,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ЯчейкаПолучателяПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК ЯчейкаПродукции,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказНаПроизводство.СтруктурнаяЕдиница.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ИсточникПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиницаЗапасов,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказНаПроизводство.СтруктурнаяЕдиница.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ЯчейкаИсточникаПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК ЯчейкаЗапасов,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательОтходов КАК СтруктурнаяЕдиницаОтходов,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиница.ЯчейкаПолучателяОтходов КАК ЯчейкаОтходов
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка = &ЗаказНаПроизводство";
	
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗначенияПроверяемыхРеквизитов = Новый Структура("СостояниеЗаказа, Проведен", Выборка.СостояниеЗаказа, Выборка.ОснованиеПроведен);
		Документы.ЗаказНаПроизводство.ПроверитьВозможностьВводаНаОснованииЗаказаНаПроизводство(Выборка.ОснованиеСсылка, ЗначенияПроверяемыхРеквизитов);
	КонецЦикла;
	
	ПромСтруктурнаяЕдиница = СтруктурнаяЕдиница;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	Если ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
			
		Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаПродукции) Тогда
			СтруктурнаяЕдиницаПродукции = СтруктурнаяЕдиница;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаЗапасов) Тогда
			СтруктурнаяЕдиницаЗапасов = СтруктурнаяЕдиница;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаОтходов) Тогда
			СтруктурнаяЕдиницаОтходов = СтруктурнаяЕдиница;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПромСтруктурнаяЕдиница <> СтруктурнаяЕдиница Тогда
		Ячейка = Неопределено;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказыОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыОстатки.Характеристика КАК Характеристика,
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|		ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|		ЗаказыОстатки.Характеристика КАК Характеристика,
	|		ЗаказыОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|				,
	|				ЗаказНаПроизводство = &ЗаказНаПроизводство
	|					И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)) КАК ЗаказыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗаказыНаПроизводство.ЗаказНаПроизводство,
	|		ДвиженияДокументаЗаказыНаПроизводство.Номенклатура,
	|		ДвиженияДокументаЗаказыНаПроизводство.Характеристика,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗаказыНаПроизводство.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗаказыНаПроизводство.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗаказыНаПроизводство.Количество, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПроизводство КАК ДвиженияДокументаЗаказыНаПроизводство
	|	ГДЕ
	|		ДвиженияДокументаЗаказыНаПроизводство.Регистратор = &Ссылка) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.ЗаказНаПроизводство,
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказНаПроизводство.Продукция.(
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|		Характеристика КАК Характеристика,
	|		Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводство.Продукция.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА 1
	|			ИНАЧЕ ЗаказНаПроизводство.Продукция.ЕдиницаИзмерения.Коэффициент
	|		КОНЕЦ КАК Коэффициент,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация
	|	),
	|	ЗаказНаПроизводство.Запасы.(
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|		Характеристика КАК Характеристика,
	|		Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводство.Запасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА 1
	|			ИНАЧЕ ЗаказНаПроизводство.Запасы.ЕдиницаИзмерения.Коэффициент
	|		КОНЕЦ КАК Коэффициент,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация,
	|		1 КАК ДоляСтоимости
	|	)
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка = &ЗаказНаПроизводство";
	
	Запрос.Текст = Запрос.Текст + ";";
	
	Если ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка Тогда
		
		ИмяТабличнойЧасти = "Запасы";
		Запрос.Текст = Запрос.Текст +
		"
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
		|	ЗаказыОстатки.Характеристика КАК Характеристика,
		|	ЗаказыОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЗаказыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ЗаказыОстатки.Спецификация КАК Спецификация,
		|	СУММА(ЗаказыОстатки.Резерв) КАК Резерв,
		|	СУММА(ЗаказыОстатки.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
		|		ЗаказНаПроизводствоПродукция.Характеристика КАК Характеристика,
		|		ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		ЗаказНаПроизводствоПродукция.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
		|		ЗаказНаПроизводствоПродукция.Спецификация КАК Спецификация,
		|		ЗаказНаПроизводствоПродукция.Резерв КАК Резерв,
		|		ЗаказНаПроизводствоПродукция.Количество КАК Количество
		|	ИЗ
		|		Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
		|	ГДЕ
		|		ЗаказНаПроизводствоПродукция.Ссылка = &ЗаказНаПроизводство
		|		И ЗаказНаПроизводствоПродукция.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СборкаЗапасовПродукция.Номенклатура,
		|		СборкаЗапасовПродукция.Характеристика,
		|		СборкаЗапасовПродукция.ЕдиницаИзмерения,
		|		СборкаЗапасовПродукция.Номенклатура.СтранаПроисхождения,
		|		СборкаЗапасовПродукция.Спецификация,
		|		-СборкаЗапасовПродукция.Резерв,
		|		-СборкаЗапасовПродукция.Количество
		|	ИЗ
		|		Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
		|	ГДЕ
		|		СборкаЗапасовПродукция.Ссылка.Проведен
		|		И СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство = &ЗаказНаПроизводство
		|		И НЕ СборкаЗапасовПродукция.Ссылка = &Ссылка) КАК ЗаказыОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыОстатки.Номенклатура,
		|	ЗаказыОстатки.Характеристика,
		|	ЗаказыОстатки.ЕдиницаИзмерения,
		|	ЗаказыОстатки.СтранаПроисхождения,
		|	ЗаказыОстатки.Спецификация
		|
		|ИМЕЮЩИЕ
		|	СУММА(ЗаказыОстатки.Количество) > 0";
		
	Иначе
		
		ИмяТабличнойЧасти = "Продукция";
		Запрос.Текст = Запрос.Текст +
		"
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
		|	ЗаказыОстатки.Характеристика КАК Характеристика,
		|	ЗаказыОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЗаказыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ЗаказыОстатки.Спецификация КАК Спецификация,
		|	СУММА(ЗаказыОстатки.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаказНаПроизводствоЗапасы.Номенклатура КАК Номенклатура,
		|		ЗаказНаПроизводствоЗапасы.Характеристика КАК Характеристика,
		|		ЗаказНаПроизводствоЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		ЗаказНаПроизводствоЗапасы.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
		|		ЗаказНаПроизводствоЗапасы.Спецификация КАК Спецификация,
		|		ЗаказНаПроизводствоЗапасы.Количество КАК Количество
		|	ИЗ
		|		Документ.ЗаказНаПроизводство.Запасы КАК ЗаказНаПроизводствоЗапасы
		|	ГДЕ
		|		ЗаказНаПроизводствоЗапасы.Ссылка = &ЗаказНаПроизводство
		|		И ЗаказНаПроизводствоЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СборкаЗапасовЗапасы.Номенклатура,
		|		СборкаЗапасовЗапасы.Характеристика,
		|		СборкаЗапасовЗапасы.ЕдиницаИзмерения,
		|		СборкаЗапасовЗапасы.Номенклатура.СтранаПроисхождения,
		|		СборкаЗапасовЗапасы.Спецификация,
		|		-СборкаЗапасовЗапасы.Количество
		|	ИЗ
		|		Документ.СборкаЗапасов.Запасы КАК СборкаЗапасовЗапасы
		|	ГДЕ
		|		СборкаЗапасовЗапасы.Ссылка.Проведен
		|		И СборкаЗапасовЗапасы.Ссылка.ЗаказНаПроизводство = &ЗаказНаПроизводство
		|		И НЕ СборкаЗапасовЗапасы.Ссылка = &Ссылка) КАК ЗаказыОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыОстатки.Номенклатура,
		|	ЗаказыОстатки.Характеристика,
		|	ЗаказыОстатки.ЕдиницаИзмерения,
		|	ЗаказыОстатки.СтранаПроисхождения,
		|	ЗаказыОстатки.Спецификация
		|
		|ИМЕЮЩИЕ
		|	СУММА(ЗаказыОстатки.Количество) > 0";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = МассивРезультатов[0].Выгрузить();
	ТаблицаОстатков.Индексы.Добавить("ЗаказНаПроизводство,Номенклатура,Характеристика");
	
	Продукция.Очистить();
	Запасы.Очистить();
	Отходы.Очистить();
	Если ТаблицаОстатков.Количество() > 0 Тогда
		
		Выборка = МассивРезультатов[1].Выбрать();
		Выборка.Следующий();
		Для каждого ВыборкаПродукция Из Выборка[ИмяТабличнойЧасти].Выгрузить() Цикл
			
			Если ВыборкаПродукция.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураДляПоиска = Новый Структура;
			СтруктураДляПоиска.Вставить("ЗаказНаПроизводство", ДанныеЗаполнения);
			СтруктураДляПоиска.Вставить("Номенклатура", ВыборкаПродукция.Номенклатура);
			СтруктураДляПоиска.Вставить("Характеристика", ВыборкаПродукция.Характеристика);
			
			МассивСтрокОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоиска);
			Если МассивСтрокОстатков.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ЭтотОбъект[ИмяТабличнойЧасти].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПродукция);
			
			КоличествоКСписанию = ВыборкаПродукция.Количество * ВыборкаПродукция.Коэффициент;
			МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоКСписанию;
			Если МассивСтрокОстатков[0].КоличествоОстаток < 0 Тогда
				
				НоваяСтрока.Количество = (КоличествоКСписанию + МассивСтрокОстатков[0].КоличествоОстаток) / ВыборкаПродукция.Коэффициент;
				
			КонецЕсли;
			
			Если МассивСтрокОстатков[0].КоличествоОстаток <= 0 Тогда
				ТаблицаОстатков.Удалить(МассивСтрокОстатков[0]);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Продукция.Количество() > 0 Тогда
		Выборка = МассивРезультатов[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	ИначеЕсли Запасы.Количество() > 0 Тогда
		Выборка = МассивРезультатов[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Продукция.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	// Заполнение по спецификации.
	Если Продукция.Количество() > 0 И ДанныеЗаполнения.Запасы.Количество() = 0 Тогда
		СтекСпецификацийУзлов = Новый Массив;
		ЗаполнитьТабличнуюЧастьПоСпецификации(СтекСпецификацийУзлов);
	КонецЕсли;
	
	// Заполнение резервов.
	Если ИмяТабличнойЧасти = "Продукция" И Запасы.Количество() > 0
		И Константы.ФункциональнаяОпцияРезервированиеЗапасов.Получить()
		И ЗначениеЗаполнено(СтруктурнаяЕдиницаЗапасов) Тогда
		ЗаполнитьКолонкуРезервПоРезервам();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения) Экспорт
	
	Если ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
		ИмяТабличнойЧасти = "Запасы";
	Иначе
		ИмяТабличнойЧасти = "Продукция";
	КонецЕсли;
	
	Запрос = Новый Запрос( 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ФункциональнаяОпцияРезервированиеЗапасов.Значение
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	ДОБАВИТЬКДАТЕ(ЗаказПокупателяЗапасы.ДатаОтгрузки, ДЕНЬ, -ЗаказПокупателяЗапасы.Номенклатура.СрокПополнения) КАК Старт,
	|	ЗаказПокупателяЗапасы.ДатаОтгрузки КАК Финиш,
	|	ЗаказПокупателяЗапасы.Ссылка.Организация КАК Организация,
	|	ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаРезерв <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаРезерв
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиницаПродукции,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ЯчейкаПолучателяПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК ЯчейкаПродукции,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиницаЗапасов,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ЯчейкаИсточникаПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК ЯчейкаЗапасов,
	|	ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательОтходов КАК СтруктурнаяЕдиницаОтходов,
	|	ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ЯчейкаПолучателяОтходов КАК ЯчейкаОтходов,
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяЗапасы.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказПокупателяЗапасы.Количество КАК Количество,
	|	ЗаказПокупателяЗапасы.Резерв КАК Резерв,
	|	ЗаказПокупателяЗапасы.Спецификация КАК Спецификация
	|ИЗ
	|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы,
	|	Константа.ФункциональнаяОпцияРезервированиеЗапасов КАК ФункциональнаяОпцияРезервированиеЗапасов
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ЗаказПокупателя");
	
	Запрос.УстановитьПараметр("ЗаказПокупателя", ДанныеЗаполнения);
	
	Продукция.Очистить();
	Запасы.Очистить();
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
		ВыборкаИзРезультатаЗапроса.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаИзРезультатаЗапроса);
		
		Если ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
			
			Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаПродукции) Тогда
				СтруктурнаяЕдиницаПродукции = СтруктурнаяЕдиница;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаЗапасов) Тогда
				СтруктурнаяЕдиницаЗапасов = СтруктурнаяЕдиница;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаОтходов) Тогда
				СтруктурнаяЕдиницаОтходов = СтруктурнаяЕдиница;
			КонецЕсли;
			
		КонецЕсли;
		
		ВыборкаИзРезультатаЗапроса.Сбросить();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
		
			Если ЗначениеЗаполнено(ВыборкаИзРезультатаЗапроса.Номенклатура) Тогда
			
				Если ВыборкаИзРезультатаЗапроса.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = ЭтотОбъект[ИмяТабличнойЧасти].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИзРезультатаЗапроса);
				
				Если НЕ ЗначениеЗаполнено(НоваяСтрока.Спецификация) Тогда
					НоваяСтрока.Спецификация = УправлениеНебольшойФирмойСервер.ПолучитьПоУмолчаниюСпецификацию(НоваяСтрока.Номенклатура, НоваяСтрока.Характеристика);
				КонецЕсли;
				
			КонецЕсли;
		
		КонецЦикла;
		
		Если Продукция.Количество() > 0 Тогда
			СтекСпецификацийУзлов = Новый Массив;
			ЗаполнитьТабличнуюЧастьПоСпецификации(СтекСпецификацийУзлов);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоОтчетуОРозничныхПродажах(ДанныеЗаполнения) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения.Запасы) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Номер КАК НомерВходящегоДокумента,
	|	ТаблицаДокумента.Дата КАК ДатаВходящегоДокумента,
	|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.СтруктурнаяЕдиница,
	|	ТаблицаДокумента.Запасы.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		Номенклатура.Спецификация КАК Спецификация,
	|		Характеристика,
	|		Партия,
	|		ЕдиницаИзмерения,
	|		Количество,
	|		Цена,
	|		Сумма,
	|		СтавкаНДС,
	|		СуммаНДС,
	|		Всего,
	|		СерийныеНомера,
	|		КлючСвязи
	|	)
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.Запасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	Продукция.Загрузить(Выборка.Запасы.Выгрузить());
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДанныеЗаполнения, , , "СерийныеНомераПродукция");
	
	// Заполнение по спецификации.
	Если Продукция.Количество() > 0 Тогда
		СтекСпецификацийУзлов = Новый Массив;
		ЗаполнитьТабличнуюЧастьПоСпецификации(СтекСпецификацийУзлов);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнениеОтветственныхЛиц() Экспорт
	
	СведенияЗапасы = Документы.СборкаЗапасов.ОтветственноеЛицоСтруктурнойЕдиницы(ЭтотОбъект.Организация, ЭтотОбъект.СтруктурнаяЕдиницаЗапасов);
	СведенияПродукция = Документы.СборкаЗапасов.ОтветственноеЛицоСтруктурнойЕдиницы(ЭтотОбъект.Организация, ЭтотОбъект.СтруктурнаяЕдиницаПродукции);
	
	Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
		
		ЭтотОбъект.Отпустил				= СведенияЗапасы.Сотрудник;
		ЭтотОбъект.ОтпустилДолжность	= СведенияЗапасы.Должность;
		
		ЭтотОбъект.Получил 				= СведенияПродукция.Сотрудник;
		ЭтотОбъект.ПолучилДолжность		= СведенияПродукция.Должность;
		
	Иначе
		
		ЭтотОбъект.Отпустил				= СведенияПродукция.Сотрудник;
		ЭтотОбъект.ОтпустилДолжность	= СведенияПродукция.Должность;
		
		ЭтотОбъект.Получил 				= СведенияЗапасы.Сотрудник;
		ЭтотОбъект.ПолучилДолжность		= СведенияЗапасы.Должность;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказуПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказНаПроизводство")] = "ЗаполнитьПоЗаказуНаПроизводство";
	СтратегияЗаполнения[Тип("ДокументСсылка.ОтчетОРозничныхПродажах")] = "ЗаполнитьПоОтчетуОРозничныхПродажах";
	
	Если Константы.ФункциональнаяОпцияРезервированиеЗапасов.Получить() Тогда
		ИсключаяСвойства = "";
	Иначе
		ИсключаяСвойства = "ЗаказПокупателя";
	КонецЕсли;
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения, ИсключаяСвойства);
	
	ЗаполнениеОтветственныхЛиц();
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ПередЗаписью.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СписокНоменклатуры = "";
	ФОИспользоватьХарактеристики = Константы.ФункциональнаяОпцияИспользоватьХарактеристики.Получить();
	Для каждого СтрокаПродукция Из Продукция Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаПродукция.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		ХарактеристикаПредставление = "";
		Если ФОИспользоватьХарактеристики И ЗначениеЗаполнено(СтрокаПродукция.Характеристика) Тогда
			ХарактеристикаПредставление = " (" + СокрЛП(СтрокаПродукция.Характеристика) + ")";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СписокНоменклатуры) Тогда
			СписокНоменклатуры = СписокНоменклатуры + Символы.ПС;
		КонецЕсли;
		СписокНоменклатуры = СписокНоменклатуры + СокрЛП(СтрокаПродукция.Номенклатура) + ХарактеристикаПредставление + ", " + СтрокаПродукция.Количество + " " + СокрЛП(СтрокаПродукция.ЕдиницаИзмерения);
		
	КонецЦикла;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Запасы.Итог("Резерв") > 0 Тогда
		
		Если НЕ ЗначениеЗаполнено(ЗаказПокупателя) Тогда
			
			ТекстСообщения = НСтр("ru = 'Не указан заказ покупателя- источник резерва!'");
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения,,,"ЗаказПокупателя",Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Константы.ФункциональнаяОпцияРезервированиеЗапасов.Получить() Тогда
		
		Если ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
			
			Для каждого СтрокаЗапасы Из Запасы Цикл
				
				Если СтрокаЗапасы.Резерв > СтрокаЗапасы.Количество Тогда
					
					ТекстСообщения = НСтр("ru = 'В строке №%Номер% табл. части ""Запасы"" количество позиций к списанию из резерва превышает общее количество запасов.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номер%", СтрокаЗапасы.НомерСтроки);
					УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
						ЭтотОбъект,
						ТекстСообщения,
						"Запасы",
						СтрокаЗапасы.НомерСтроки,
						"Резерв",
						Отказ
					);
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			Для каждого СтрокаПродукция Из Продукция Цикл
				
				Если СтрокаПродукция.Резерв > СтрокаПродукция.Количество Тогда
					
					ТекстСообщения = НСтр("ru = 'В строке №%Номер% табл. части ""Продукция"" количество позиций к списанию из резерва превышает общее количество продукции.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номер%", СтрокаПродукция.НомерСтроки);
					УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
						ЭтотОбъект,
						ТекстСообщения,
						"Продукция",
						СтрокаПродукция.НомерСтроки,
						"Резерв",
						Отказ
					);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Серийные номера
	Если ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
		Если НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиницаПродукции,"ОрдерныйСклад") = Истина Тогда
			РаботаССерийнымиНомерами.ПроверкаЗаполненияСерийныхНомеров(Отказ, Продукция, СерийныеНомераПродукция, СтруктурнаяЕдиницаПродукции, ЭтотОбъект);
		КонецЕсли;
		РаботаССерийнымиНомерами.ПроверкаЗаполненияСерийныхНомеров(Отказ, Запасы, СерийныеНомера, СтруктурнаяЕдиницаЗапасов, ЭтотОбъект);
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда 
		Если НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиницаЗапасов,"ОрдерныйСклад") = Истина Тогда
			РаботаССерийнымиНомерами.ПроверкаЗаполненияСерийныхНомеров(Отказ, Запасы, СерийныеНомера, СтруктурнаяЕдиницаЗапасов, ЭтотОбъект);
		КонецЕсли;
		РаботаССерийнымиНомерами.ПроверкаЗаполненияСерийныхНомеров(Отказ, Продукция, СерийныеНомераПродукция, СтруктурнаяЕдиницаПродукции, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.СборкаЗапасов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасы(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыВРазрезеГТД(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыКПоступлениюНаСклады(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыКРасходуСоСкладов(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьВыпускПродукции(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыПринятые(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьПотребностьВЗапасах(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗаказыНаПроизводство(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьРазмещениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);
	
	// СерийныеНомера
	УправлениеНебольшойФирмойСервер.ОтразитьСерийныеНомераГарантии(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьСерийныеНомераОстатки(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.СборкаЗапасов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.СборкаЗапасов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

#КонецОбласти

#КонецЕсли