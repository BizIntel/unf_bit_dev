
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияЕГАИСПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ТаблицаДвижений = ПолучитьТаблицуДвижений();
	
	РегистрыНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.ЗаписатьТаблицуДвижений(ТаблицаДвижений, Движения, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуДвижений()
	
	СтатусыДвижений = Новый Массив;
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПереданАктПодтверждения);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятоПодтверждениеАктаРасхождений);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОшибкаПередачиЗапросаНаОтменуПроведения);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СтатусыДвижений", СтатусыДвижений);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТТНВходящаяЕГАИСТовары.Ссылка.Дата КАК Период,
	|	ТТНВходящаяЕГАИСТовары.Ссылка КАК Регистратор,
	|	ТТНВходящаяЕГАИСТовары.НомерСтроки КАК НомерСтроки,
	|	ТТНВходящаяЕГАИСТовары.Ссылка.Грузополучатель КАК ОрганизацияЕГАИС,
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТТНВходящаяЕГАИСТовары.СправкаБ КАК СправкаБ,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИСТовары.Ссылка.СтатусОбработки = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПринятоПодтверждениеАктаРасхождений)
	|			ТОГДА ТТНВходящаяЕГАИСТовары.КоличествоФакт
	|		ИНАЧЕ ТТНВходящаяЕГАИСТовары.Количество
	|	КОНЕЦ КАК СвободныйОстаток,
	|	0 КАК Количество
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &Ссылка
	|	И ТТНВходящаяЕГАИСТовары.Ссылка.СтатусОбработки В(&СтатусыДвижений)
	|	И ВЫБОР
	|			КОГДА ТТНВходящаяЕГАИСТовары.Ссылка.СтатусОбработки = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПринятоПодтверждениеАктаРасхождений)
	|				ТОГДА ТТНВходящаяЕГАИСТовары.КоличествоФакт <> 0
	|			ИНАЧЕ ТТНВходящаяЕГАИСТовары.Количество <> 0
	|		КОНЕЦ
	|	И ТТНВходящаяЕГАИСТовары.Ссылка.Грузополучатель.УчитыватьОстаткиАлкогольнойПродукции
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТТНВходящаяЕГАИСТовары.Ссылка.ДатаРегистрацииДвижений,
	|	ТТНВходящаяЕГАИСТовары.Ссылка,
	|	ТТНВходящаяЕГАИСТовары.НомерСтроки,
	|	ТТНВходящаяЕГАИСТовары.Ссылка.Грузополучатель,
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция,
	|	ТТНВходящаяЕГАИСТовары.СправкаБ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИСТовары.Ссылка.СтатусОбработки = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПринятоПодтверждениеАктаРасхождений)
	|			ТОГДА ТТНВходящаяЕГАИСТовары.КоличествоФакт
	|		ИНАЧЕ ТТНВходящаяЕГАИСТовары.Количество
	|	КОНЕЦ
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &Ссылка
	|	И ТТНВходящаяЕГАИСТовары.Ссылка.СтатусОбработки В(&СтатусыДвижений)
	|	И ВЫБОР
	|			КОГДА ТТНВходящаяЕГАИСТовары.Ссылка.СтатусОбработки = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПринятоПодтверждениеАктаРасхождений)
	|				ТОГДА ТТНВходящаяЕГАИСТовары.КоличествоФакт <> 0
	|			ИНАЧЕ ТТНВходящаяЕГАИСТовары.Количество <> 0
	|		КОНЕЦ
	|	И ТТНВходящаяЕГАИСТовары.Ссылка.Грузополучатель.УчитыватьОстаткиАлкогольнойПродукции
	|	И ТТНВходящаяЕГАИСТовары.Ссылка.ДатаРегистрацииДвижений <> &ПустаяДата
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли