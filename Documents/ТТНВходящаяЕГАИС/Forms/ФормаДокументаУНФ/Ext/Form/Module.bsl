
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Документы.ТТНВходящаяЕГАИС.УстановитьУсловноеОформлениеСтатусаОбработки(ЭтотОбъект, "СтатусОбработки", "Объект.СтатусОбработки");
	
	ПроверитьИнформациюОбОшибке();
	
	ДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПроверитьИнформациюОбОшибке();
	
	ДоступностьЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодтвердитьТТН(Команда)
	
	НачатьВыгрузкуДокумента(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктПодтвержденияТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьТТНСРасхождениями(Команда)
	
	НачатьВыгрузкуДокумента(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктРасхожденийТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьсяОтТТН(Команда)
	
	Если Объект.СтатусОбработки = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПереданАктПодтверждения") Тогда
		СтрокаСообщения = НСтр("ru = 'Накладная уже подветждена актом, отказ не возможен'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		Возврат;
	ИначеЕсли Объект.СтатусОбработки = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПереданАктОтказа") Тогда
		СтрокаСообщения = НСтр("ru = 'Отказ от данных уже передавался в ЕГАИС'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		Возврат;
	Иначе
		ТекстВопроса = НСтр("ru='Вы уверены что хотите передать отказ от накладной в ЕГАИС?'");
		
		ОбработчикОповещения = Новый ОписаниеОповещения("ОтказОтТТН_Подтверждение", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказОтТТН_Подтверждение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		НачатьВыгрузкуДокумента(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктОтказаОтТТН"));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТоварыКоличествоФактПриИзменении(Элемент)
	
	МассивСтрок = Объект.Товары.НайтиСтроки(Новый Структура("КоличествоФакт", 0));
	
	Если МассивСтрок.Количество() = Объект.Товары.Количество() Тогда
		Элементы.ФормаПодтвердитьТТНСРасхождениями.Видимость = Ложь;
		Элементы.ФормаПодтвердитьТТН.Видимость = Истина;
	Иначе
		Элементы.ФормаПодтвердитьТТНСРасхождениями.Видимость = Истина;
		Элементы.ФормаПодтвердитьТТН.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДоступностьЭлементовФормы()
	
	РедактируемыеСтатусы = Новый Массив;
	РедактируемыеСтатусы.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятИзЕГАИС);
	РедактируемыеСтатусы.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОшибкаПередачиАктаПодтверждения);
	РедактируемыеСтатусы.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОшибкаПередачиАктаОтказа);
	РедактируемыеСтатусы.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОшибкаПередачиАктаРасхождений);
	
	ТолькоПросмотр = РедактируемыеСтатусы.Найти(Объект.СтатусОбработки) = Неопределено;
	
	Элементы.ФормаПодтвердитьТТН.Видимость = НЕ ТолькоПросмотр;
	Элементы.ФормаПодтвердитьТТНСРасхождениями.Видимость = НЕ ТолькоПросмотр;
	Элементы.ФормаОтказатьсяОтТТН.Видимость = НЕ ТолькоПросмотр;
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Объект.Товары.НайтиСтроки(Новый Структура("КоличествоФакт", 0));
	
	Если МассивСтрок.Количество() = Объект.Товары.Количество() Тогда
		Элементы.ФормаПодтвердитьТТНСРасхождениями.Видимость = Ложь;
	Иначе
		Элементы.ФормаПодтвердитьТТН.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьВыгрузкуДокумента(ВидДокумента)
	
	Если Модифицированность ИЛИ НЕ Объект.Проведен Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ не проведен.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапроса = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(ВидДокумента);
	ПараметрыЗапроса.ДокументСсылка = Объект.Ссылка;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВидДокумента", ВидДокумента);
	ДополнительныеПараметры.Вставить("ДокументСсылка", ПараметрыЗапроса.ДокументСсылка);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыгрузкаДокумента_Завершение", ЭтотОбъект);
	ИнтеграцияЕГАИСКлиент.НачатьФормированиеИсходящегоЗапроса(
		ОповещениеПриЗавершении,
		ВидДокумента,
		ПараметрыЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаДокумента_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Результат Тогда
		Если ДополнительныеПараметры <> Неопределено
			И ДополнительныеПараметры.Свойство("ВидДокумента")
			И ДополнительныеПараметры.ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктОтказаОтТТН") Тогда
			ЗаписатьПоступлениеПриОтказе(ДополнительныеПараметры.ДокументСсылка);
		КонецЕсли;
		
		ЭтотОбъект.Прочитать();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ успешно подтвержден.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьИнформациюОбОшибке()

	ИнформацияОбОшибке = РегистрыСведений.ПротоколОбменаЕГАИС.ТекстПоследнейОшибки(Объект.Ссылка);
	Элементы.ГруппаИнформацияОбОшибке.Видимость = НЕ ПустаяСтрока(ИнформацияОбОшибке);

КонецПроцедуры

&НаСервере
Процедура ЗаписатьПоступлениеПриОтказе(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходнаяНакладная.Ссылка
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
	|ГДЕ
	|	ПриходнаяНакладная.ТоварноТранспортнаяНакладнаяЕГАИС = &ТоварноТранспортнаяНакладнаяЕГАИС";
	
	Запрос.УстановитьПараметр("ТоварноТранспортнаяНакладнаяЕГАИС", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ПоступлениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ПоступлениеОбъект.АктПереданВЕГАИС = Истина;
		
		Если ПоступлениеОбъект.Проведен Тогда
			ПоступлениеОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			ПоступлениеОбъект.Записать();
		КонецЕсли;
		
		ПоступлениеОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
