
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Элементы.КонтрагентНеЗарегистрированВГИСМ.Видимость = ИнтеграцияГИСМ.ИспользоватьВозможностиВерсии("2.41");
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Элементы.Подразделение.Видимость = ИнтеграцияГИСМ.ИспользоватьПодразделения();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = ИнтеграцияГИСМПереопределяемый.ВалютаРегламентированногоУчета();
	Элементы.НомераКиЗСтоимость.Заголовок = СтрЗаменить(НСтр("ru = 'Стоимость (%Валюта%)'"), "%Валюта%", ВалютаРегламентированногоУчета);
	
	ИнтеграцияГИСМПереопределяемый.ЗаполнитьПодменюОтчеты(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("Основание", Объект.Основание);
	Оповестить("Запись_УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтатусГИСМОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусГИСМОбработкаНавигационнойСсылкиЗавершение",
		                                                    ЭтотОбъект,
		                                                    Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ТекстВопроса = НСтр("ru = 'Уведомление об отгрузке маркированных товаров было изменено. Записать?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусГИСМОбработкаНавигационнойСсылкиЗавершение",
		                                                    ЭтотОбъект,
		                                                    Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ТекстВопроса = НСтр("ru = 'Уведомление об отгрузке маркированных товаров не записано. Записать?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПередатьДанные" Тогда
		
		СтандартнаяОбработка = Ложь;
		ИнтеграцияГИСМКлиент.ПодготовитьСообщениеКПередаче(
			Объект.Ссылка,
			ПредопределенноеЗначение("Перечисление.ОперацииОбменаГИСМ.ПередачаДанных"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусГИСМОбработкаНавигационнойСсылкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		 Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Записать();
	КонецЕсли;
	
	Если Не Модифицированность И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбработатьНажатиеНавигационнойСсылки(ДополнительныеПараметры.НавигационнаяСсылкаФорматированнойСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусГИСМ()
	
	СтатусГИСМ         = Перечисления.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Черновик;
	ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПустаяСсылка();
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Статусы.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПустаяСсылка)
		|		ИНАЧЕ Статусы.ДальнейшееДействие
		|	КОНЕЦ КАК ДальнейшееДействие
		|ИЗ
		|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК Статусы
		|ГДЕ
		|	Статусы.ТекущееУведомлениеОбОтгрузке = &УведомлениеОбОтгрузке";
		
		Запрос.УстановитьПараметр("УведомлениеОбОтгрузке", Объект.Ссылка);
		Запрос.УстановитьПараметр("МассивДальнейшиеДействия", ИнтеграцияГИСМ.НеотображаемыеВДокументахДальнейшиеДействия());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			СтатусГИСМ         = Выборка.Статус;
			ДальнейшееДействие = Выборка.ДальнейшееДействие;
			
		КонецЕсли;
		
	Иначе
		
		ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
		
	КонецЕсли;
	
	СтатусГИСМПредставление = ИнтеграцияГИСМ.ПредставлениеСтатусаГИСМ(
		СтатусГИСМ,
		ДальнейшееДействие,
		Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура НомераКиЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент = Элементы.НомераКиЗНоменклатураПредставление Тогда
		ТекущиеДанные = Элементы.НомераКиЗ.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
			ПоказатьЗначение(Неопределено, ТекущиеДанные.Номенклатура);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПараметрыОперации = ПараметрыОперации(
		Объект.Основание, Объект.ВидОборотаТовара, Объект.Контрагент);
		
	Если ПараметрыОперации.ЭтоВозвратФизическомуЛицуПоКомиссии Тогда
		Объект.GLNКонтрагента                   = Неопределено;
		Объект.КонтрагентНеЗарегистрированВГИСМ = Ложь;
	Иначе
		Объект.GLNКонтрагента = GLNКонтрагента(Объект.Контрагент);
	КонецЕсли;
	
	ОбновитьДоступностьРеквизитов(ЭтотОбъект, ПараметрыОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНеЗарегистрированВГИСМПриИзменении(Элемент)
	
	ПараметрыОперации = ПараметрыОперации(
		Объект.Основание, Объект.ВидОборотаТовара, Объект.Контрагент);
	
	Объект.GLNКонтрагента = Неопределено;
	
	ОбновитьДоступностьРеквизитов(ЭтотОбъект, ПараметрыОперации);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьGLNПоИННКПП(Команда)
	
	ИнтеграцияГИСМКлиент.ПолучитьGLNПоИННКПП(ЭтотОбъект);
	
КонецПроцедуры

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	ИнтеграцияГИСМКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НомераКиЗНоменклатураПредставление.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НомераКиЗ.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаТребуетВниманияГИСМ);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<В основании отсутствует>'"));

КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ОбновитьСтатусГИСМ();
	ИнтеграцияГИСМПереопределяемый.ЗаполнитьПредставлениеТоваровУведомленияПоНомерамКиЗОснования(Объект.Основание, Объект.НомераКиЗ);
	
	ПараметрыОперации = ПараметрыОперации(
		Объект.Основание, Объект.ВидОборотаТовара, Объект.Контрагент);
	
	ОбновитьДоступностьРеквизитов(ЭтотОбъект, ПараметрыОперации);
	
	НомерГИСМ = Формат(Объект.НомерГИСМ, "ЧГ=");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьСтатусГИСМ();
	ИнтеграцияГИСМПереопределяемый.ЗаполнитьПредставлениеТоваровУведомленияПоНомерамКиЗОснования(Объект.Основание, Объект.НомераКиЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеСостоянияГИСМ"
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		ОбновитьСтатусГИСМ();
		
	КонецЕсли;
	
	Если ИмяСобытия = "ВыполненОбменГИСМ"
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусГИСМФормахВДокументах)) Тогда
		
		ОбновитьСтатусГИСМ();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция GLNКонтрагента(Контрагент)
	
	Возврат ИнтеграцияГИСМ.ПоследнийУказанныйВДокументахGLNКонтрагента(Контрагент);
	
КонецФункции

&НаСервереБезКонтекста
Функция ЭтоВозвратФизическомуЛицуПоКомиссии(Основание, ВидОборотаТовара, Контрагент)
	
	РеквизитыКонтрагента = ИнтеграцияГИСМВызовСервера.РеквизитыКонтрагента(Контрагент);
	Если ИнтеграцияГИСМ.ДокументОснованиеВозвратПоставщику(Основание)
		И РеквизитыКонтрагента.ЭтоФизическоеЛицо
		И ВидОборотаТовара = Перечисления.ВидОборотаТовараГИСМ.Комиссия Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьДоступностьРеквизитов(Форма, ПараметрыОперации)
	
	ВидимостьКонтрагентНеЗарегистрированВГИСМ = Не ПараметрыОперации.ЭтоЭкспортВСтраныЕАЭС
	                                          И Не ПараметрыОперации.ЭтоЭкспортЗаПределыЕАЭС
	                                          И Не ПараметрыОперации.ЭтоВозвратФизическомуЛицуПоКомиссии;
	
	Форма.Элементы.КонтрагентНеЗарегистрированВГИСМ.Видимость = ВидимостьКонтрагентНеЗарегистрированВГИСМ;
	
	Форма.Элементы.КодТаможенногоОргана.Видимость = ПараметрыОперации.ЭтоЭкспортЗаПределыЕАЭС;
	Форма.Элементы.ДатаРегистрацииДекларации.Видимость = ПараметрыОперации.ЭтоЭкспортЗаПределыЕАЭС;
	Форма.Элементы.РегистрационныйНомерДекларации.Видимость = ПараметрыОперации.ЭтоЭкспортЗаПределыЕАЭС;
	
	Форма.Элементы.ГруппаGLN.Видимость = Не ПараметрыОперации.ЭтоЭкспортЗаПределыЕАЭС
	                                   И Не ПараметрыОперации.ЭтоЭкспортВСтраныЕАЭС;
	
	Форма.Элементы.ПолучитьGLNПоИННКПП.Видимость = Не ПараметрыОперации.ЭтоВозвратФизическомуЛицуПоКомиссии;
	Форма.Элементы.GLNКонтрагента.Видимость      = Не ПараметрыОперации.ЭтоВозвратФизическомуЛицуПоКомиссии;
	
	Форма.Элементы.GLNКонтрагента.Доступность = Не Форма.Объект.КонтрагентНеЗарегистрированВГИСМ;
	Форма.Элементы.ПолучитьGLNПоИННКПП.Доступность = Не Форма.Объект.КонтрагентНеЗарегистрированВГИСМ;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыОперации(Основание, ВидОборотаТовара, Контрагент)
	
	ЭтоЭкспортВСтраныЕАЭС = (ВидОборотаТовара = ПредопределенноеЗначение("Перечисление.ВидОборотаТовараГИСМ.ЭкспортВСтраныЕАЭС"));
	ЭтоЭкспортЗаПределыЕАЭС = (ВидОборотаТовара = ПредопределенноеЗначение("Перечисление.ВидОборотаТовараГИСМ.ЭкспортЗаПределыЕАЭС"));
	
	ЭтоВозвратФизическомуЛицуПоКомиссии = ЭтоВозвратФизическомуЛицуПоКомиссии(
		Основание, ВидОборотаТовара, Контрагент);
		
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ЭтоЭкспортВСтраныЕАЭС", ЭтоЭкспортВСтраныЕАЭС);
	ВозвращаемоеЗначение.Вставить("ЭтоЭкспортЗаПределыЕАЭС", ЭтоЭкспортЗаПределыЕАЭС);
	ВозвращаемоеЗначение.Вставить("ЭтоВозвратФизическомуЛицуПоКомиссии", ЭтоВозвратФизическомуЛицуПоКомиссии);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаКлиенте
Процедура ВидОборотаТовараПриИзменении(Элемент)
	
	ПараметрыОперации = ПараметрыОперации(
		Объект.Основание, Объект.ВидОборотаТовара, Объект.Контрагент);
	
	Если ПараметрыОперации.ЭтоЭкспортВСтраныЕАЭС
		Или ПараметрыОперации.ЭтоЭкспортЗаПределыЕАЭС
		Или ПараметрыОперации.ЭтоВозвратФизическомуЛицуПоКомиссии Тогда
		Объект.КонтрагентНеЗарегистрированВГИСМ = Ложь;
	КонецЕсли;
	
	Если ПараметрыОперации.ЭтоВозвратФизическомуЛицуПоКомиссии Тогда
		Объект.GLNКонтрагента = Неопределено;
	КонецЕсли;
	
	Если ПараметрыОперации.ЭтоЭкспортЗаПределыЕАЭС Тогда
		Объект.Контрагент = Неопределено;
		Объект.GLNКонтрагента = Неопределено;
	КонецЕсли;
	
	ОбновитьДоступностьРеквизитов(ЭтотОбъект, ПараметрыОперации);
	
КонецПроцедуры

#КонецОбласти
