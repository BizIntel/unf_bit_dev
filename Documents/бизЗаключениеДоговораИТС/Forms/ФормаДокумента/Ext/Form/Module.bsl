
&НаСервере
Процедура ПрограммыНаСопровожденииПриИзмененииНаСервере()
	
КонецПроцедуры

&НаКлиенте
Процедура ПрограммыНаСопровожденииППНаСопровожденииПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ПрограммыНаСопровождении.ТекущиеДанные;
	РегНомер = ПолучитьРегНомерПП1С(ТекущаяСтрока.ППНаСопровождении);
	ТекущаяСтрока.РегНомер = РегНомер;
	ТекущаяСтрока.ВключитьВДоговор = Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьРегНомерПП1С(ПП1С)
	
	Возврат ПП1С.РегНомер;
		
КонецФункции


&НаСервере
Процедура ЗаполнитьТЧПрограммыНаСопровождении()

Запрос = Новый Запрос;
Запрос.Текст =   "ВЫБРАТЬ
                 |	бизПП1С.Ссылка КАК ППНаСопровождении,
                 |	бизПП1С.РегНомер,
                 |	ИСТИНА КАК ВключитьВДоговор
                 |ИЗ
                 |	Справочник.бизПП1С КАК бизПП1С
                 |ГДЕ
                 |	бизПП1С.Владелец = &Владелец" ;
Запрос.УстановитьПараметр("Владелец",Объект.Контрагент);
Объект.ПрограммыНаСопровождении.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры // ЗаполнитьТЧПрограммыНаСопровождении()

&НаСервере
Процедура ЗаполнитьРеквизитыДоговораИТС()

Перем ДолжностьРодПадеж, РуководительРодПадеж;

ДокументОбъект = РеквизитФормыВЗначение("Объект");
ДокументОбъект.Записать();

Запрос = Новый Запрос;
Запрос.Текст =  "ВЫБРАТЬ ПЕРВЫЕ 1
                |	бизЗаключениеДоговораИТС.Ссылка КАК ДоговорИТС,
                |	ОрганизацииКонтактнаяИнформация.Представление КАК ОрганизацияПолное,
                |	бизЗаключениеДоговораИТС.Контрагент.бизПолноеНаименованиеПоУчредительнымДокументам КАК КонтрагентПолное,
                |	ОтветственныеЛицаСрезПоследних.Должность КАК ОрганизацияДолжность,
                |	ОтветственныеЛицаСрезПоследних.Сотрудник КАК ОрганизацияРуководитель,
                |	бизЗаключениеДоговораИТС.Контрагент.КонтактноеЛицо КАК КонтрагентРуководитель,
                |	КонтактныеЛицаРолиКонтактногоЛица.Роль КАК КонтрагентДолжность,
                |	ВЫБОР
                |		КОГДА бизЗаключениеДоговораИТС.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
                |			ТОГДА ""Устава""
                |		ИНАЧЕ """"
                |	КОНЕЦ КАК ДействующегоНаОрганизация,
                |	ВЫБОР
                |		КОГДА бизЗаключениеДоговораИТС.Контрагент.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.ЮридическоеЛицо)
                |			ТОГДА ""Устава""
                |		ИНАЧЕ ""Свидетельства о государственной регистрации, серия "" + бизЗаключениеДоговораИТС.Контрагент.бизСвидетельствоИПСерияНомер + "" от"" + &ПредставлениеДатыСвидетельстваИП + ""г, ОГРНИП №"" + бизЗаключениеДоговораИТС.Контрагент.бизОГРН
                |	КОНЕЦ КАК ДействующегоНаКонтрагент
                |ИЗ
                |	Документ.бизЗаключениеДоговораИТС КАК бизЗаключениеДоговораИТС
                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
                |		ПО бизЗаключениеДоговораИТС.Организация = ОрганизацииКонтактнаяИнформация.Ссылка
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних КАК ОтветственныеЛицаСрезПоследних
                |		ПО бизЗаключениеДоговораИТС.Организация = ОтветственныеЛицаСрезПоследних.Организация
                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛица.Роли КАК КонтактныеЛицаРолиКонтактногоЛица
                |		ПО бизЗаключениеДоговораИТС.Контрагент.КонтактноеЛицо.Ссылка = КонтактныеЛицаРолиКонтактногоЛица.Ссылка
                |ГДЕ
                |	бизЗаключениеДоговораИТС.Ссылка = &Ссылка
                |	И ОрганизацииКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Другое)
                |	И ОтветственныеЛицаСрезПоследних.ТипОтветственногоЛица = ЗНАЧЕНИЕ(Перечисление.ТипыОтветственныхЛиц.Руководитель)";
				
				Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
				Запрос.УстановитьПараметр ("ПредставлениеДатыСвидетельстваИП",Формат(Объект.Контрагент.бизСвидетельствоИПДата,"ДФ=dd.MM.yyyy"));
				
				Выборка = Запрос.Выполнить().Выбрать();
				
				Если Выборка.Следующий() Тогда
					ДокументОбъект.ОрганизацияПолное = Выборка.ОрганизацияПолное;
					ДокументОбъект.КонтрагентПолное = Выборка.КонтрагентПолное;
					ДокументОбъект.ДействующегоНаОрганизация = Выборка.ДействующегоНаОрганизация;
					ДокументОбъект.ДействующегоНаКонтрагент = Выборка.ДействующегоНаКонтрагент;
					ДокументОбъект.ОрганизацияВлице = бизЗаполнениеДокументов.ПросклонятьФразуПоСловам("" + Выборка.ОрганизацияДолжность+" "+Выборка.ОрганизацияРуководитель, 2);
					Если ДокументОбъект.Контрагент.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ЮридическоеЛицо Тогда
						ДокументОбъект.КонтрагентВЛице = бизЗаполнениеДокументов.ПросклонятьФразуПоСловам("" + Выборка.КонтрагентДолжность+" "+Выборка.КонтрагентРуководитель, 2);
					Иначе ДокументОбъект.КонтрагентВЛице = "";	
					КонецЕсли;
				КонецЕсли; 
				
				ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");				

КонецПроцедуры // ЗаполнитьРеквизитыДоговораИТС()
			
&НаКлиенте
Процедура ЗаполнитьПоКонтрагенту(Команда) Экспорт
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПроверитьДокументЗаписан",ЭтаФорма,Новый Структура ("ТребуетсяЗаписьОбъекта", Истина)),"Документ необходимо записать. Продолжить?",РежимДиалогаВопрос.ДаНет) ;	
	
	Иначе  ПроверитьДокументЗаписан(КодВозвратаДиалога.Да, Новый Структура ("ТребуетсяЗаписьОбъекта", Ложь));
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДокументЗаписан(Результат,ДополнительныеПараметры)   Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если ДополнительныеПараметры.ТребуетсяЗаписьОбъекта = Истина Тогда 
			ЭтотОбъект.Записать();
		КонецЕсли;
	
		СоздатьДоговорИТСПриНеобходимости();
		ЗаполнитьТЧПрограммыНаСопровождении();
		ЗаполнитьРеквизитыДоговораИТС();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДоговорКонтрагента(Команда)	
	
		СоздатьДоговорИТСПриНеобходимости();
	
КонецПроцедуры


// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура СоздатьДоговорИТСПриНеобходимости()
	
	Если НЕ Элементы.Контрагент.ТекстРедактирования = "" Тогда
		
		Объект.ДоговорКонтрагента = ПроверитьНаличиеДоговораИТС(Объект.Организация,Объект.Контрагент);
		
		Если НЕ ЗначениеЗаполнено (Объект.ДоговорКонтрагента) Тогда
			ТекстВопроса = "Договор ИТС не найден. Создать новый договор?";
			ПоказатьВопрос(Новый ОписаниеОповещения("ОбработатьРешениеПользователя",ЭтотОбъект),ТекстВопроса,РежимДиалогаВопрос.ДаНет);	 
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // СоздатьДоговорИТСПриНеобходимости()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ОбработатьРешениеПользователя(Результат,ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да  Тогда
		
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("ЗначенияЗаполнения", Новый Структура("Владелец, Организация",Объект.Контрагент,Объект.Организация)); 
		ФормаДоговора = ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта",ПараметрыЗаполнения,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВыполнитьПриЗакрытии",ЭтотОбъект),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		НомерДоговора = ""+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер)+"-ИТС";
		ДатаДоговора = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
		ФормаДоговора.Объект.НомерДоговора = НомерДоговора;	
		ФормаДоговора.Объект.ДатаДоговора = Объект.Дата;
		ФормаДоговора.Объект.Наименование = "Договор №"+ НомерДоговора + " от " + ДатаДоговора;
		
	КонецЕсли;
	

КонецПроцедуры // ОбработатьРешениеПользователя()

&НаКлиенте
Процедура ВыполнитьПриЗакрытии(Результат,ДополнительныеПараметры) Экспорт

	Объект.ДоговорКонтрагента = ПроверитьНаличиеДоговораИТС(Объект.Организация,Объект.Контрагент);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
	
		Объект.Организация = Справочники.Организации.ОсновнаяОрганизация;
	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДоговорКонтрагента)Тогда
	
		Объект.ДоговорКонтрагента = Объект.Контрагент.ДоговорПоУмолчанию;
	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидОперации) Тогда
		
		Объект.ВидОперации = Перечисления.бизВидыОперацийДоговорыИТС.ДоговорИТС;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ВступаетВСилуСДата) Тогда
	
		Объект.ВступаетВСилуСДата = Объект.Дата;
	
	КонецЕсли;
	
	ПоказатьФормуПоВидуОперации();
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ПоказатьФормуПоВидуОперации()

Если НЕ Объект.ВидОперации = Перечисления.бизВидыОперацийДоговорыИТС.ДоговорИТС Тогда

	Элементы.ПрограммыНаСопровождении.Видимость = Ложь;
	Элементы.ДоговорОснование.Видимость = Истина;
	Элементы.Организация.Доступность = Ложь;
	Элементы.Контрагент.Доступность = Ложь;
	Элементы.ДоговорКонтрагента.Доступность = Ложь;
	Элементы.СоСтороныЗаказчика.Доступность = Ложь;
	Элементы.СоСтороныИсполнителя.Доступность = Ложь;
	Элементы.ФормаЗаполнитьПоКонтрагенту.Видимость = Ложь;
	Элементы.ФормаЗаполнитьПоОснованию.Видимость = Истина;
	Элементы.РасчетАбонементнойОплаты.Видимость = Истина;
	
Иначе
	Элементы.ПрограммыНаСопровождении.Видимость = Истина;
	Элементы.ДоговорОснование.Видимость = Ложь;
	Элементы.Организация.Доступность = Истина;
	Элементы.Контрагент.Доступность = Истина;
	Элементы.ДоговорКонтрагента.Доступность = Истина;
	Элементы.СоСтороныЗаказчика.Доступность = Истина;
	Элементы.СоСтороныИсполнителя.Доступность = Истина;
	Элементы.ФормаЗаполнитьПоКонтрагенту.Видимость = Истина;
	Элементы.ФормаЗаполнитьПоОснованию.Видимость = Ложь;
	Элементы.РасчетАбонементнойОплаты.Видимость = Ложь;
КонецЕсли;	

КонецПроцедуры // ПоказатьФормуПоВидуОперации()


&НаКлиенте 
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)	
УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект)
КонецПроцедуры  

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ЗаполнитьПоКонтрагенту(Истина);
КонецПроцедуры

// <Проверить наличие договора ИТС с заказчиком>
//
// Параметры:
//  <ОрганизацияИсполнитель>  - <СправочникСсылка.Организации> 
//  <КонтрагентЗаказчик>  - <СправочникСсылка.Контрагенты> 
// 
// Возвращаемое значение
//<В случае если договор ИТС уже существует возвращает ссылку на элемент справочника "Договоры контрагентов", в противном случае возврат - пустая ссылка>
//
&НаСервереБезКонтекста
Функция ПроверитьНаличиеДоговораИТС(ОрганизацияИсполнитель,КонтрагентЗаказчик)
     //Проверить наименование всех договоров контрагента на наличие подстроки "ИТС"
	 //Если выборка не пустая подобрать договор в поле "Договор"
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ДоговорыКонтрагентов.Ссылка
	                |ИЗ
	                |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	                |ГДЕ
	                |	ДоговорыКонтрагентов.Владелец = &Владелец
	                |	И ДоговорыКонтрагентов.Наименование ПОДОБНО ""%ИТС%""
	                |	И ДоговорыКонтрагентов.Организация = &Организация";
	Запрос.УстановитьПараметр("Владелец",КонтрагентЗаказчик);
	Запрос.УстановитьПараметр("Организация", ОрганизацияИсполнитель);
					
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();		
	Иначе 
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.Ссылка;			
		КонецЦикла;	
	КонецЕсли;
	
КонецФункции // СодатьДоговорИТСПриНеобходимости()

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ЗаполнитьПоКонтрагенту(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	ПоказатьФормуПоВидуОперации();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОснованиюНаСервере()
		 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	бизЗаключениеДоговораИТС.Ссылка,
		|	бизЗаключениеДоговораИТС.ВерсияДанных,
		|	бизЗаключениеДоговораИТС.ПометкаУдаления,
		|	бизЗаключениеДоговораИТС.Проведен,
		|	бизЗаключениеДоговораИТС.Организация,
		|	бизЗаключениеДоговораИТС.Контрагент,
		|	бизЗаключениеДоговораИТС.ДоговорКонтрагента,
		|	бизЗаключениеДоговораИТС.КонтрагентПолное,
		|	бизЗаключениеДоговораИТС.КонтрагентВЛице,
		|	бизЗаключениеДоговораИТС.ДействующегоНаКонтрагент,
		|	бизЗаключениеДоговораИТС.ОрганизацияПолное,
		|	бизЗаключениеДоговораИТС.ОрганизацияВлице,
		|	бизЗаключениеДоговораИТС.ДействующегоНаОрганизация
		|ИЗ
		|	Документ.бизЗаключениеДоговораИТС КАК бизЗаключениеДоговораИТС
		|ГДЕ
		|	бизЗаключениеДоговораИТС.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.ДоговорОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		 //Заполнить сведения об Организации-исполнителе
		 Объект.Организация = ВыборкаДетальныеЗаписи.Организация;
		 Объект.ДоговорКонтрагента = ВыборкаДетальныеЗаписи.ДоговорКонтрагента;
		 Объект.ОрганизацияПолное  =   ВыборкаДетальныеЗаписи.ОрганизацияПолное;
		 Объект.ОрганизацияВлице = ВыборкаДетальныеЗаписи.ОрганизацияВЛице;
 		 Объект.ДействующегоНаОрганизация = ВыборкаДетальныеЗаписи.ДействующегоНаОрганизация;
		 
		 //Заполнить сведения о контрагенте-заказчике
		 Объект.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
		 Объект.КонтрагентПолное = ВыборкаДетальныеЗаписи.КонтрагентПолное;
		 Объект.КонтрагентВЛице =  ВыборкаДетальныеЗаписи.КонтрагентВЛице;
		 Объект.ДействующегоНаКонтрагент = ВыборкаДетальныеЗаписи.ДействующегоНаКонтрагент;

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОснованию(Команда)
	ЗаполнитьПоОснованиюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДоговорОснованиеПриИзменении(Элемент)
	ЗаполнитьПоОснованию(Истина)
КонецПроцедуры

&НаКлиенте
Процедура ТарифАбонементаПриИзменении(Элемент)
	ПолучитьСуммуАбонПлаты();
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ПолучитьСуммуАбонПлаты()

	 Объект.СуммаАбонемента = Объект.ТарифАбонемента*Объект.КоличествоЧасовАбонемента;

КонецПроцедуры // ПолучитьСуммуАбонПлаты()

&НаКлиенте
Процедура КоличествоЧасовАбонементаПриИзменении(Элемент)
	ПолучитьСуммуАбонПлаты();
КонецПроцедуры







