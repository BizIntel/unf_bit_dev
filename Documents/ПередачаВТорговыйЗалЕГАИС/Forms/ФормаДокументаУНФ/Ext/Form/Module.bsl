
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Документы.ПередачаВТорговыйЗалЕГАИС.УстановитьУсловноеОформлениеСтатусаОбработки(ЭтотОбъект, "СтатусОбработки", "Объект.СтатусОбработки");
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПроверитьИнформациюОбОшибке();
		
		ДоступностьЭлементовФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПроверитьИнформациюОбОшибке();
	
	ДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.ОрганизацияЕГАИС) Тогда
		ТекущийОбъект.ОрганизацияЕГАИС = ИнтеграцияЕГАИСУНФ.ОрганизацияЕГАИСИзНастроек(ТекущийОбъект.Организация, ТекущийОбъект.Магазин);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.ОрганизацияЕГАИС) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось идентифицировать организацию по классификатору ЕГАИС. Проверьте наличие настроек ЕГАИС для выбранной организации.'"),,"Объект.Организация",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТоварыСправкаБАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрыПолученияДанных.Отбор.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСправкаБПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.СправкаБ) Тогда
			ТекущиеДанные.АлкогольнаяПродукция = ИнтеграцияЕГАИСВызовСервера.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СправкаБ, "АлкогольнаяПродукция");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияМагазинПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	ОрганизацияМагазинПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОрганизацияМагазинПриИзмененииНаСервере()
	Объект.ОрганизацияЕГАИС = ИнтеграцияЕГАИСУНФ.ОрганизацияЕГАИСИзНастроек(Объект.Организация, Объект.Магазин);
КонецПроцедуры

// Получает набор данных с сервера для процедуры НоменклатураПриИзменении.
//
&НаСервереБезКонтекста
Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	СтруктураДанные.Вставить("ЕдиницаИзмерения", СтруктураДанные.Номенклатура.ЕдиницаИзмерения);
	СтруктураДанные.Вставить("ЭтоАлкогольнаяПродукция", СтруктураДанные.Номенклатура.АлкогольнаяПродукция);
	СтруктураДанные.Вставить("АлкогольнаяПродукция", ИнтеграцияЕГАИСУНФ.НоменклатураПоКлассификаторуЕГАИС(СтруктураДанные.Номенклатура, СтруктураДанные.Характеристика));
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("Номенклатура", ТекущиеДанные.Номенклатура);
	СтруктураДанные.Вставить("Характеристика", ТекущиеДанные.Характеристика);
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	ТекущиеДанные.ЕдиницаИзмерения = СтруктураДанные.ЕдиницаИзмерения;
	ТекущиеДанные.АлкогольнаяПродукция = СтруктураДанные.АлкогольнаяПродукция;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьВЕГАИС(Команда)
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ не сохранен.'"));
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура();
	
	Если НЕ Объект.Проведен Тогда
		Если НЕ Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)) Тогда
			Возврат;
		КонецЕсли;
		
		ДополнительныеПараметры.Вставить("ПроведенПередОтправкой", Истина);
	КонецЕсли;
	
	ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ПередачаВТорговыйЗал");
	
	ПараметрыЗапроса = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(ВидДокумента);
	ПараметрыЗапроса.ДокументСсылка = Объект.Ссылка;
	
	ИнтеграцияЕГАИСКлиент.НачатьФормированиеИсходящегоЗапроса(
		Новый ОписаниеОповещения("ОтправкаВЕГАИС_Завершение", ЭтотОбъект, ДополнительныеПараметры),
		ВидДокумента,
		ПараметрыЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСправкиБ(Команда)
	
	Если Объект.ОрганизацияЕГАИС.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбрана организация ЕГАИС'"));
		Возврат;
	КонецЕсли;
	
	ПодобратьСправкиБНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьИнформациюОбОшибке()

	ИнформацияОбОшибке = РегистрыСведений.ПротоколОбменаЕГАИС.ТекстПоследнейОшибки(Объект.Ссылка);
	Элементы.ИнформацияОбОшибке.Видимость = НЕ ПустаяСтрока(ИнформацияОбОшибке);

КонецПроцедуры

&НаСервере
Процедура ДоступностьЭлементовФормы()
	
	ТолькоПросмотр =
		Объект.СтатусОбработки <> Перечисления.СтатусыОбработкиПередачиВТорговыйЗалЕГАИС.Новый
		И Объект.СтатусОбработки <> Перечисления.СтатусыОбработкиПередачиВТорговыйЗалЕГАИС.ОшибкаПередачиВЕГАИС;
		
	Элементы.ФормаОтправитьВЕГАИС.Видимость = НЕ ТолькоПросмотр;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправкаВЕГАИС_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Результат Тогда
		ЭтотОбъект.Прочитать();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ успешно выгружен.'"));
	ИначеЕсли ДополнительныеПараметры.Свойство("ПроведенПередОтправкой") Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьСправкиБНаСервере()
	
	ДатаОстатков = ?(ЗначениеЗаполнено(Объект.Ссылка), Новый Граница(Объект.Дата, ВидГраницы.Исключая), Неопределено);
	
	ИнтеграцияЕГАИС.ПодобратьСправкиБДляСписания(Объект.Товары, Объект.ОрганизацияЕГАИС, ДатаОстатков);
	
КонецПроцедуры

#КонецОбласти
