
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияЕГАИСПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Идентификатор) Тогда
		Идентификатор = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СтатусОбработки = Перечисления.СтатусыОбработкиПередачиВТорговыйЗалЕГАИС.Новый;
	
	Идентификатор = "";
	ИдентификаторЕГАИС = "";
	ДатаРегистрацииДвижений = '00010101';
	
	Товары.ЗагрузитьКолонку(Новый Массив(Товары.Количество()), "СправкаБ");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ТаблицаДвижений = ПолучитьТаблицуДвижений();
	
	РегистрыНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.ЗаписатьТаблицуДвижений(ТаблицаДвижений, Движения, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуДвижений()
	
	СтатусыДвижений = Новый Массив;
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиПередачиВТорговыйЗалЕГАИС.ПередаетсяВЕГАИС);
	СтатусыДвижений.Добавить(Перечисления.СтатусыОбработкиПередачиВТорговыйЗалЕГАИС.ПереданВЕГАИС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СтатусыДвижений", СтатусыДвижений);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаВТорговыйЗалЕГАИСТовары.Ссылка.Дата КАК Дата,
	|	ПередачаВТорговыйЗалЕГАИСТовары.Ссылка.ДатаРегистрацииДвижений КАК ДатаРегистрацииДвижений,
	|	ПередачаВТорговыйЗалЕГАИСТовары.Ссылка КАК Регистратор,
	|	ПередачаВТорговыйЗалЕГАИСТовары.Ссылка.СтатусОбработки КАК СтатусОбработки,
	|	ПередачаВТорговыйЗалЕГАИСТовары.Ссылка.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ПередачаВТорговыйЗалЕГАИСТовары.НомерСтроки КАК НомерСтроки,
	|	ПередачаВТорговыйЗалЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ПередачаВТорговыйЗалЕГАИСТовары.СправкаБ КАК СправкаБ,
	|	ПередачаВТорговыйЗалЕГАИСТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПередачаВТорговыйЗалЕГАИС.Товары КАК ПередачаВТорговыйЗалЕГАИСТовары
	|ГДЕ
	|	ПередачаВТорговыйЗалЕГАИСТовары.Ссылка = &Ссылка
	|	И ПередачаВТорговыйЗалЕГАИСТовары.Количество <> 0
	|	И ПередачаВТорговыйЗалЕГАИСТовары.Ссылка.ОрганизацияЕГАИС.УчитыватьОстаткиАлкогольнойПродукции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаТоваров.Дата КАК Период,
	|	ТаблицаТоваров.Регистратор КАК Регистратор,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.ОрганизацияЕГАИС,
	|	ТаблицаТоваров.АлкогольнаяПродукция,
	|	ТаблицаТоваров.СправкаБ,
	|	ТаблицаТоваров.Количество КАК СвободныйОстаток,
	|	0 КАК Количество
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.СтатусОбработки В(&СтатусыДвижений)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаТоваров.ДатаРегистрацииДвижений,
	|	ТаблицаТоваров.Регистратор,
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.ОрганизацияЕГАИС,
	|	ТаблицаТоваров.АлкогольнаяПродукция,
	|	ТаблицаТоваров.СправкаБ,
	|	0,
	|	ТаблицаТоваров.Количество
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.СтатусОбработки = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиПередачиВТорговыйЗалЕГАИС.ПереданВЕГАИС)
	|	И ТаблицаТоваров.ДатаРегистрацииДвижений <> &ПустаяДата
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли