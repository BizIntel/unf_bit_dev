#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Осуществляет проверку возможности ввода на основании.
//
Процедура ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения, ЗначенияРеквизитов)
	
	Если ЗначенияРеквизитов.Свойство("ВидОперации") Тогда
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.ВидОперации)
			И НЕ ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
				ТекстИсключения = НСтр("ru = 'Расходный ордер можно ввести только на основании заказ-наряда!'");
				ВызватьИсключение ТекстИсключения;
		КонецЕсли;
	КонецЕсли;
	
	Отказ = Ложь;
	Если ЗначенияРеквизитов.Свойство("СтруктурнаяЕдиница") Тогда
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.СтруктурнаяЕдиница)
			И НЕ ЗначенияРеквизитов.СтруктурнаяЕдиница.ОрдерныйСклад Тогда
			Отказ = Истина;
		КонецЕсли;
	ИначеЕсли ЗначенияРеквизитов.Свойство("СтруктурнаяЕдиницаРезерв") Тогда
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.СтруктурнаяЕдиницаРезерв)
			И НЕ ЗначенияРеквизитов.СтруктурнаяЕдиницаРезерв.ОрдерныйСклад Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		ТекстИсключения = НСтр("ru = 'Невозможен ввод операции ""Расход с ордерного склада"".
								|Документ ""%ДокументСсылка"" не имеет ордерного склада!'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ДокументСсылка", ДанныеЗаполнения.Ссылка);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьВозможностьВводаНаОсновании()

// Обработчик заполнения на основании документа ОтчетОПереработке.
//
// Параметры:
//  ДокументСсылкаОтчетОПереработке - ДокументСсылка.ОтчетОПереработке.
//
Процедура ЗаполнитьПоОтчетОПереработке(ДокументСсылкаОтчетОПереработке) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаОтчетОПереработке;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаОтчетОПереработке, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаОтчетОПереработке, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ОтчетОПереработке.НомерСтроки) КАК НомерСтроки,
	|	ОтчетОПереработке.Номенклатура КАК Номенклатура,
	|	ОтчетОПереработке.Характеристика КАК Характеристика,
	|	ОтчетОПереработке.Партия КАК Партия,
	|	ОтчетОПереработке.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ОтчетОПереработке.Количество) КАК Количество,
	|	ОтчетОПереработке.СерийныеНомера,
	|	ОтчетОПереработке.КлючСвязи
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтчетОПереработкеПродукция.НомерСтроки КАК НомерСтроки,
	|		ОтчетОПереработкеПродукция.Номенклатура КАК Номенклатура,
	|		ОтчетОПереработкеПродукция.Характеристика КАК Характеристика,
	|		ОтчетОПереработкеПродукция.Партия КАК Партия,
	|		ОтчетОПереработкеПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ОтчетОПереработкеПродукция.Количество КАК Количество,
	|		ОтчетОПереработкеПродукция.СерийныеНомера КАК СерийныеНомера,
	|		ОтчетОПереработкеПродукция.КлючСвязи КАК КлючСвязи
	|	ИЗ
	|		Документ.ОтчетОПереработке.Продукция КАК ОтчетОПереработкеПродукция
	|	ГДЕ
	|		ОтчетОПереработкеПродукция.Ссылка = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОтчетОПереработкеОтходы.НомерСтроки,
	|		ОтчетОПереработкеОтходы.Номенклатура,
	|		ОтчетОПереработкеОтходы.Характеристика,
	|		ОтчетОПереработкеОтходы.Партия,
	|		ОтчетОПереработкеОтходы.ЕдиницаИзмерения,
	|		ОтчетОПереработкеОтходы.Количество,
	|		NULL,
	|		NULL
	|	ИЗ
	|		Документ.ОтчетОПереработке.Отходы КАК ОтчетОПереработкеОтходы
	|	ГДЕ
	|		ОтчетОПереработкеОтходы.Ссылка = &ДокументОснование) КАК ОтчетОПереработке
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОПереработке.Номенклатура,
	|	ОтчетОПереработке.Характеристика,
	|	ОтчетОПереработке.Партия,
	|	ОтчетОПереработке.ЕдиницаИзмерения,
	|	ОтчетОПереработке.СерийныеНомера,
	|	ОтчетОПереработке.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаОтчетОПереработке);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаОтчетОПереработке, "Продукция");
	
КонецПроцедуры // ЗаполнитьПоОтчетОПереработке()

// Обработчик заполнения на основании документа РасходнаяНакладная.
//
// Параметры:
//  ДокументСсылкаРасходнаяНакладная - ДокументСсылка.РасходнаяНакладная.
//
Процедура ЗаполнитьПоРасходнаяНакладная(ДокументСсылкаРасходнаяНакладная) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаРасходнаяНакладная;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаРасходнаяНакладная, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаРасходнаяНакладная, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(РасходнаяНакладнаяЗапасы.НомерСтроки) КАК НомерСтроки,
	|	РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
	|	РасходнаяНакладнаяЗапасы.Партия КАК Партия,
	|	РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(РасходнаяНакладнаяЗапасы.Количество) КАК Количество,
	|	РасходнаяНакладнаяЗапасы.СерийныеНомера,
	|	РасходнаяНакладнаяЗапасы.КлючСвязи
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка = &ДокументОснование
	|	И РасходнаяНакладнаяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяЗапасы.Номенклатура,
	|	РасходнаяНакладнаяЗапасы.Характеристика,
	|	РасходнаяНакладнаяЗапасы.Партия,
	|	РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения,
	|	РасходнаяНакладнаяЗапасы.СерийныеНомера,
	|	РасходнаяНакладнаяЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаРасходнаяНакладная);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаРасходнаяНакладная);
	
КонецПроцедуры // ЗаполнитьПоРасходнаяНакладная()

// Обработчик заполнения на основании документа ЗаказПокупателя.
//
// Параметры:
//  ДокументСсылкаЗаказПокупателя	 - ДокументСсылка.ЗаказПокупателя.
//
Процедура ЗаполнитьПоЗаказПокупателя(ДокументСсылкаЗаказПокупателя) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаЗаказПокупателя;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаЗаказПокупателя, Новый Структура("Организация, ВидОперации, СтруктурнаяЕдиницаРезерв, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаЗаказПокупателя, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаРезерв;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ЗаказПокупателяЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяЗапасы.Партия КАК Партия,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ЗаказПокупателяЗапасы.Количество) КАК Количество,
	|	ЗаказПокупателяЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ДокументОснование
	|	И ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяЗапасы.Номенклатура,
	|	ЗаказПокупателяЗапасы.Характеристика,
	|	ЗаказПокупателяЗапасы.Партия,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПокупателяЗапасы.СерийныйНомер КАК СерийныйНомер,
	|	ЗаказПокупателяЗапасы.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	Документ.ЗаказПокупателя.СерийныеНомера КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ЗаказПокупателяЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяЗапасы.Партия КАК Партия,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ЗаказПокупателяЗапасы.Количество) КАК Количество,
	|	ЗаказПокупателяЗапасы.КлючСвязиСерийныеНомера КАК КлючСвязи
	|ИЗ
	|	Документ.ЗаказПокупателя.Материалы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ДокументОснование
	|	И ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяЗапасы.Номенклатура,
	|	ЗаказПокупателяЗапасы.Характеристика,
	|	ЗаказПокупателяЗапасы.Партия,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.КлючСвязиСерийныеНомера
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПокупателяЗапасы.СерийныйНомер КАК СерийныйНомер,
	|	ЗаказПокупателяЗапасы.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	Документ.ЗаказПокупателя.СерийныеНомераМатериалы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ДокументОснование";	
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказПокупателя);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	//Запасы
	Если НЕ РезультатЗапроса[0].Пустой() Тогда
		Выборка = РезультатЗапроса[0].Выбрать();
		ВыборкаСерийныеНомера = РезультатЗапроса[1].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			НоваяСтрока.СерийныеНомера = РаботаССерийнымиНомерами.СтрокаСерийныеНомераИзВыборки(ВыборкаСерийныеНомера, НоваяСтрока.КлючСвязи);
		КонецЦикла;
		
		СерийныеНомера.Загрузить(РезультатЗапроса[1].Выгрузить());
		
	КонецЕсли;
	
	СписокЗначений = Новый СписокЗначений;
	Для каждого СтрокаТЧ Из Запасы Цикл
        СписокЗначений.Добавить(СтрокаТЧ.КлючСвязи);
	КонецЦикла;
    Если СписокЗначений.Количество() = 0 Тогда
		МаксимальныйКлючСвязи = 1;
	Иначе
		СписокЗначений.СортироватьПоЗначению();
		МаксимальныйКлючСвязи = СписокЗначений.Получить(СписокЗначений.Количество() - 1).Значение + 1;
	КонецЕсли;
	
	//Материалы
	Если НЕ РезультатЗапроса[2].Пустой() Тогда
		Выборка = РезультатЗапроса[2].Выбрать();
		ВыборкаСерийныеНомера = РезультатЗапроса[3].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			СтарыйКлючСвязи = Выборка.КлючСвязи;
			НоваяСтрока.КлючСвязи = МаксимальныйКлючСвязи;
			
			НоваяСтрока.СерийныеНомера = РаботаССерийнымиНомерами.СтрокаСерийныеНомераИзВыборки(ВыборкаСерийныеНомера, СтарыйКлючСвязи);
			
			СтруктураПоиска = Новый Структура("КлючСвязи", СтарыйКлючСвязи);
			Пока ВыборкаСерийныеНомера.НайтиСледующий(СтруктураПоиска) Цикл
				НоваяСтрокаСерийныеНомера = СерийныеНомера.Добавить();
				НоваяСтрокаСерийныеНомера.КлючСвязи = НоваяСтрока.КлючСвязи;
				НоваяСтрокаСерийныеНомера.СерийныйНомер = ВыборкаСерийныеНомера.СерийныйНомер;
			КонецЦикла;
			
			МаксимальныйКлючСвязи = МаксимальныйКлючСвязи+1;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоЗаказПокупателя()

// Обработчик заполнения на основании документа СписаниеЗапасов.
//
// Параметры:
//  ДокументСсылкаСписаниеЗапасов	 - ДокументСсылка.СписаниеЗапасов.
//
Процедура ЗаполнитьПоСписаниеЗапасов(ДокументСсылкаСписаниеЗапасов) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаСписаниеЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаСписаниеЗапасов, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаСписаниеЗапасов, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(СписаниеЗапасовЗапасы.НомерСтроки) КАК НомерСтроки,
	|	СписаниеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	СписаниеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	СписаниеЗапасовЗапасы.Партия КАК Партия,
	|	СписаниеЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(СписаниеЗапасовЗапасы.Количество) КАК Количество,
	|	СписаниеЗапасовЗапасы.СерийныеНомера,
	|	СписаниеЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.СписаниеЗапасов.Запасы КАК СписаниеЗапасовЗапасы
	|ГДЕ
	|	СписаниеЗапасовЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеЗапасовЗапасы.Номенклатура,
	|	СписаниеЗапасовЗапасы.Характеристика,
	|	СписаниеЗапасовЗапасы.Партия,
	|	СписаниеЗапасовЗапасы.ЕдиницаИзмерения,
	|	СписаниеЗапасовЗапасы.СерийныеНомера,
	|	СписаниеЗапасовЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаСписаниеЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаСписаниеЗапасов);
	
КонецПроцедуры // ЗаполнитьПоСписаниеЗапасов()

// Обработчик заполнения на основании документа СписаниеЗапасов.
//
// Параметры:
//  ДокументСсылкаСписаниеЗапасов	 - ДокументСсылка.СписаниеЗапасов.
//
Процедура ЗаполнитьПоПересортицаЗапасов(ДокументСсылкаПересортицаЗапасов) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаПересортицаЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаПересортицаЗапасов, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПересортицаЗапасов, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ПересортицаЗапасовЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ПересортицаЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПересортицаЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПересортицаЗапасовЗапасы.Партия КАК Партия,
	|	ПересортицаЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ПересортицаЗапасовЗапасы.Количество) КАК Количество,
	|	ПересортицаЗапасовЗапасы.СерийныеНомера,
	|	ПересортицаЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|ГДЕ
	|	ПересортицаЗапасовЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПересортицаЗапасовЗапасы.Номенклатура,
	|	ПересортицаЗапасовЗапасы.Характеристика,
	|	ПересортицаЗапасовЗапасы.Партия,
	|	ПересортицаЗапасовЗапасы.ЕдиницаИзмерения,
	|	ПересортицаЗапасовЗапасы.СерийныеНомера,
	|	ПересортицаЗапасовЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПересортицаЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаПересортицаЗапасов);
	
КонецПроцедуры // ЗаполнитьПоПересортицаЗапасов()

// Обработчик заполнения на основании документа ПеремещениеЗапасов.
//
// Параметры:
//  ДокументСсылкаПеремещениеЗапасов - ДокументСсылка.ПеремещениеЗапасов.
//
Процедура ЗаполнитьПоПеремещениеЗапасов(ДокументСсылкаПеремещениеЗапасов) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаПеремещениеЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
	ДокументСсылкаПеремещениеЗапасов,
	Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПеремещениеЗапасов, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ПеремещениеЗапасовЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ПеремещениеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПеремещениеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия КАК Партия,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ПеремещениеЗапасовЗапасы.Количество) КАК Количество,
	|	ПеремещениеЗапасовЗапасы.СерийныеНомера,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|ГДЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеЗапасовЗапасы.Номенклатура,
	|	ПеремещениеЗапасовЗапасы.Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения,
	|	ПеремещениеЗапасовЗапасы.СерийныеНомера,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПеремещениеЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаПеремещениеЗапасов);
	
КонецПроцедуры // ЗаполнитьПоПеремещениеЗапасов()

// Обработчик заполнения на основании документа ПриходныйОрдер.
//
// Параметры:
//  ДокументСсылкаПриходныйОрдер - ДокументСсылка.ПриходныйОрдер.
//
Процедура ЗаполнитьПоПриходныйОрдер(ДокументСсылкаПриходныйОрдер) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаПриходныйОрдер;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаПриходныйОрдер, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПриходныйОрдер, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ПриходныйОрдерЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ПриходныйОрдерЗапасы.Номенклатура КАК Номенклатура,
	|	ПриходныйОрдерЗапасы.Характеристика КАК Характеристика,
	|	ПриходныйОрдерЗапасы.Партия КАК Партия,
	|	ПриходныйОрдерЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ПриходныйОрдерЗапасы.Количество) КАК Количество,
	|	ПриходныйОрдерЗапасы.СерийныеНомера,
	|	ПриходныйОрдерЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПриходныйОрдер.Запасы КАК ПриходныйОрдерЗапасы
	|ГДЕ
	|	ПриходныйОрдерЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходныйОрдерЗапасы.Номенклатура,
	|	ПриходныйОрдерЗапасы.Характеристика,
	|	ПриходныйОрдерЗапасы.Партия,
	|	ПриходныйОрдерЗапасы.ЕдиницаИзмерения,
	|	ПриходныйОрдерЗапасы.СерийныеНомера,
	|	ПриходныйОрдерЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПриходныйОрдер);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаПриходныйОрдер);
	
КонецПроцедуры // ЗаполнитьПоПриходныйОрдер()

// Обработчик заполнения на основании документа ПринятиеКУчетуВА.
//
// Параметры:
//  ДокументСсылкаПринятиеКУчетуВА	 - ДокументСсылка.ПринятиеКУчетуВА.
//
Процедура ЗаполнитьПоПринятиеКУчетуВА(ДокументСсылкаПринятиеКУчетуВА) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаПринятиеКУчетуВА;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаПринятиеКУчетуВА, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПринятиеКУчетуВА, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПринятиеКУчетуВА.Номенклатура КАК Номенклатура,
	|	ПринятиеКУчетуВА.Партия КАК Партия,
	|	ПринятиеКУчетуВА.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПринятиеКУчетуВА.Количество КАК Количество
	|ИЗ
	|	Документ.ПринятиеКУчетуВА КАК ПринятиеКУчетуВА
	|ГДЕ
	|	ПринятиеКУчетуВА.Ссылка = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПринятиеКУчетуВА);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПринятиеКУчетуВА()

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ОтчетОПереработке")] = "ЗаполнитьПоОтчетОПереработке";
	СтратегияЗаполнения[Тип("ДокументСсылка.РасходнаяНакладная")] = "ЗаполнитьПоРасходнаяНакладная";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.СписаниеЗапасов")] = "ЗаполнитьПоСписаниеЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПересортицаЗапасов")] = "ЗаполнитьПоПересортицаЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПеремещениеЗапасов")] = "ЗаполнитьПоПеремещениеЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриходныйОрдер")] = "ЗаполнитьПоПриходныйОрдер";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПринятиеКУчетуВА")] = "ЗаполнитьПоПринятиеКУчетуВА";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.РасходныйОрдер.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыКРасходуСоСкладов(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыНаСкладах(ДополнительныеСвойства, Движения, Отказ);

	// СерийныеНомера
	УправлениеНебольшойФирмойСервер.ОтразитьСерийныеНомераГарантии(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьСерийныеНомераОстатки(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.РасходныйОрдер.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.РасходныйОрдер.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Серийные номера
	РаботаССерийнымиНомерами.ПроверкаЗаполненияСерийныхНомеров(Отказ, Запасы, СерийныеНомера, СтруктурнаяЕдиница, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли