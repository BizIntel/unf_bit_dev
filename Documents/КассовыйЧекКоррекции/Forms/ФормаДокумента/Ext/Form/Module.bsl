
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеВопросПроведениеПередПечатьюЧека(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Попытка
			Если ЭтотОбъект.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)) Тогда
				НапечататьЧекКоррекцииКлиент();
			КонецЕсли;
		Исключение
			ПоказатьПредупреждение(,НСтр("ru = 'Не удалось выполнить проведение документа'"));
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УстановитьРеквизитыФормы()
	КонецЕсли;
	
	КассовыйЧекКоррекцииПереопределяемый.ПриСозданииНаСервере(Объект, ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	УстановитьДоступностьЭлементовИФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьРеквизитыФормы();
	
	КассовыйЧекКоррекцииПереопределяемый.ПриЧтенииНаСервере(Объект, ЭтотОбъект, ТекущийОбъект);
	
	УстановитьДоступностьЭлементовИФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьДоступностьЭлементовИФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	КассовыйЧекКоррекцииПереопределяемый.ПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.КассаККМ = "";
	
КонецПроцедуры

&НаКлиенте
Процедура КассаККМПриИзменении(Элемент)
	
	КассаККМПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеДляКоррекцииПриИзменении(Элемент)
	
	Если НЕ ОснованиеДляКоррекцииЗаданоТолькоСтрокой 
		И ЗначениеЗаполнено(Объект.ОснованиеДляКоррекции) Тогда
		
		ОснованиеДляКоррекцииПриИзмененииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура выполняет печать чека на фискальном регистраторе.
//
&НаКлиенте
Процедура НапечататьЧекКоррекции(Команда)
	
	Если Объект.ПробитЧек Тогда
		ТекстСообщения = НСтр("ru = 'Чек уже пробит на фискальном устройстве!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеВопросПроведениеПередПечатьюЧека", ЭтотОбъект);
	
	Если КассовыйЧекКоррекцииКлиентПереопределяемый.ПроверитьВозможностьПечатиЧека(ОбработчикОповещения, ЭтотОбъект) Тогда
		НапечататьЧекКоррекцииКлиент();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедуры

#Область СлужебныеПроцедурыКлеинт

&НаКлиенте
Процедура НапечататьЧекКоррекцииКлиент()
	
	Перем Отказ, ИдентификаторУстройства, ИспользоватьКассуБезПодключенияОборудования;
	
	ПодготовитьИПроверитьПечатьЧека(Отказ, ИдентификаторУстройства, ИспользоватьКассуБезПодключенияОборудования);
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	Если НЕ ИспользоватьПодключаемоеОборудование ИЛИ ИспользоватьКассуБезПодключенияОборудования Тогда
		
		Объект.НомерЧекаККМ  = КассовыйЧекКоррекцииКлиентПереопределяемый.ПорядковыйНомерПродажи();
		Объект.ПробитЧек     = Истина;
		
		Модифицированность = Истина;
		
		РезультатЗаписи = Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
		
		Если РезультатЗаписи = Истина Тогда
			КассовыйЧекКоррекцииКлиентПереопределяемый.УвеличитьПорядковыйНомерПродажи();
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Если ИдентификаторУстройства <> Неопределено Тогда
		
		ЭтаФорма.Доступность = Ложь;
		
		Контекст = Новый Структура("ИдентификаторУстройства", ИдентификаторУстройства);
		
		РеквизитыКассир = ПолучитьРеквизитыКассира();

		ПараметрыЧека = МенеджерОборудованияКлиентСервер.ПараметрыОперацииЧекаКоррекции();
		
		ПараметрыЧека.ТипРасчета 	= Объект.ТипРасчета;
		ПараметрыЧека.Кассир		= РеквизитыКассир.Наименование; // Должность и фамилия лица, осуществившего расчет с покупателем (клиентом), оформившего кассовый чек.
		ПараметрыЧека.КассирИНН		= РеквизитыКассир.ИНН; // Идентификационный номер налогоплательщика кассира, при наличии.
		ПараметрыЧека.ТипОплаты		= 0;            // Наличные
		ПараметрыЧека.Сумма			= Объект.СуммаДокумента;
		
		ПараметрыЧека.НаименованиеОснования		= Объект.ОснованиеДляКоррекции;  // Наименование документа основания для коррекции
		ПараметрыЧека.ДатаДокументаОснования	= Объект.ДатаДокументаОснования; // Дата документа основания для коррекции
		ПараметрыЧека.НомерДокументаОснования	= Объект.НомерДокументаОснования; // Номер документа основания для коррекции

		Оповещение = Новый ОписаниеОповещения("НапечататьЧекКоррекцииЗавершение", ЭтотОбъект, Контекст);
		МенеджерОборудованияКлиент.НачатьФормированиеЧекаКоррекцииНаФискальномУстройстве(Оповещение, УникальныйИдентификатор, ПараметрыЧека, ИдентификаторУстройства); 
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НапечататьЧекКоррекцииЗавершение(РезультатВыполнения, ПараметрыОперации) Экспорт
	
	ЭтаФорма.Доступность = Истина;
	
	Если РезультатВыполнения.Результат Тогда
		
		// Установить полученное значение номера чека реквизиту документа.
		Объект.НомерЧекаККМ = РезультатВыполнения.ВыходныеПараметры[1];
		Объект.ПробитЧек    = Истина;
		Модифицированность  = Истина;
		РезультатЗаписи = Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
		
		Если РезультатЗаписи = Истина Тогда
			КассовыйЧекКоррекцииКлиентПереопределяемый.УвеличитьПорядковыйНомерПродажи();
		КонецЕсли;
		
	Иначе
		ТекстСообщения = НСтр("ru = 'При печати чека коррекции произошла ошибка.
									|Чек коррекции не напечатан на фискальном устройстве.
									|Дополнительное описание: %ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыСервер

&НаСервере
Процедура УстановитьРеквизитыФормы()
	
	КвалификаторСтроки = Новый КвалификаторыСтроки(10);
	КассаККМОтсутствуетВКонфигурации = Метаданные.ОпределяемыеТипы.КассаБПО.Тип = Новый ОписаниеТипов("Строка",,КвалификаторСтроки);
	КвалификаторСтроки = Новый КвалификаторыСтроки(50);
	ОснованиеДляКоррекцииЗаданоТолькоСтрокой = Метаданные.ОпределяемыеТипы.ОснованиеКассовогоЧекаКоррекцииБПО.Тип = Новый ОписаниеТипов("Строка",, КвалификаторСтроки);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементовИФормы()
	
	ТолькоПросмотр = ТолькоПросмотр 
								ИЛИ Объект.ПробитЧек;
	
	ТолькоПросмотр = ТолькоПросмотр ИЛИ ЗначениеЗаполнено(Объект.НомерЧекаККМ);
	
	Элементы.НапечататьЧек.Доступность = НЕ ТолькоПросмотр;
	
	КассовыйЧекКоррекцииПереопределяемый.УстановитьДоступностьЭлементовИФормы(Объект, ЭтотОбъект);
	
	Элементы.КассаККМ.Видимость = НЕ КассаККМОтсутствуетВКонфигурации;
	Элементы.ПодключаемоеОборудование.Видимость = КассаККМОтсутствуетВКонфигурации;
	
КонецПроцедуры

&НаСервере
Процедура КассаККМПриИзмененииНаСервере()
	
	КассовыйЧекКоррекцииПереопределяемый.КассаККМПриИзменении(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ОснованиеДляКоррекцииПриИзмененииНаСервере()
	
	КассовыйЧекКоррекцииПереопределяемый.ОснованиеДляКоррекцииПриИзменении(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьИПроверитьПечатьЧека(Отказ, 
										  ИдентификаторУстройства, 
										  ИспользоватьКассуБезПодключенияОборудования)
	
	КассовыйЧекКоррекцииПереопределяемый.ПодготовитьИПроверитьПечатьЧека(Объект,
											Отказ, 
											ИдентификаторУстройства, 
											ИспользоватьКассуБезПодключенияОборудования);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитыКассира()
	
	РеквизитыКассир = КассовыйЧекКоррекцииПереопределяемый.ПолучитьРеквизитыКассира(Объект);
	
	Возврат РеквизитыКассир;
	
КонецФункции

#КонецОбласти

#КонецОбласти