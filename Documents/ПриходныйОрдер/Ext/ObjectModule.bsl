#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Осуществляет проверку возможности ввода на основании.
//
Процедура ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения, ЗначенияРеквизитов)
	
	Отказ = Ложь;
	Если ЗначенияРеквизитов.Свойство("СтруктурнаяЕдиница") Тогда
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.СтруктурнаяЕдиница)
			И НЕ ЗначенияРеквизитов.СтруктурнаяЕдиница.ОрдерныйСклад Тогда
			Отказ = Истина;
		КонецЕсли;
	ИначеЕсли ЗначенияРеквизитов.Свойство("СтруктурнаяЕдиницаПолучатель") Тогда
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.СтруктурнаяЕдиницаПолучатель)
			И НЕ ЗначенияРеквизитов.СтруктурнаяЕдиницаПолучатель.ОрдерныйСклад Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		ТекстИсключения = НСтр("ru = 'Невозможен ввод операции ""Поступления на ордерный склад"".
								|Документ ""%ДокументСсылка"" не имеет ордерного склада!'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ДокументСсылка", ДанныеЗаполнения.Ссылка);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьВозможностьВводаНаОсновании()

// Обработчик заполнения на основании документа РасходныйОрдер.
//
// Параметры:
//  ДокументСсылкаРасходныйОрдер - ДокументСсылка.РасходныйОрдер.
//
Процедура ЗаполнитьПоРасходныйОрдер(ДокументСсылкаРасходныйОрдер) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаРасходныйОрдер;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаРасходныйОрдер, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(РасходныйОрдерЗапасы.НомерСтроки) КАК НомерСтроки,
	|	РасходныйОрдерЗапасы.Номенклатура КАК Номенклатура,
	|	РасходныйОрдерЗапасы.Характеристика КАК Характеристика,
	|	РасходныйОрдерЗапасы.Партия КАК Партия,
	|	РасходныйОрдерЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(РасходныйОрдерЗапасы.Количество) КАК Количество,
	|	РасходныйОрдерЗапасы.СерийныеНомера,
	|	РасходныйОрдерЗапасы.КлючСвязи
	|ИЗ
	|	Документ.РасходныйОрдер.Запасы КАК РасходныйОрдерЗапасы
	|ГДЕ
	|	РасходныйОрдерЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерЗапасы.Номенклатура,
	|	РасходныйОрдерЗапасы.Характеристика,
	|	РасходныйОрдерЗапасы.Партия,
	|	РасходныйОрдерЗапасы.ЕдиницаИзмерения,
	|	РасходныйОрдерЗапасы.СерийныеНомера,
	|	РасходныйОрдерЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаРасходныйОрдер);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаРасходныйОрдер);
	
КонецПроцедуры // ЗаполнитьПоСчетНаОплату()

// Обработчик заполнения на основании документа ПриходнаяНакладная.
//
// Параметры:
//  ДокументСсылкаПриходнаяНакладная - ДокументСсылка.ПриходнаяНакладная.
//
Процедура ЗаполнитьПоПриходнаяНакладная(ДокументСсылкаПриходнаяНакладная) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаПриходнаяНакладная;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаПриходнаяНакладная, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПриходнаяНакладная, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ПриходнаяНакладнаяЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ПриходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	ПриходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
	|	ПриходнаяНакладнаяЗапасы.Партия КАК Партия,
	|	ПриходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ПриходнаяНакладнаяЗапасы.Количество) КАК Количество,
	|	ПриходнаяНакладнаяЗапасы.СерийныеНомера,
	|	ПриходнаяНакладнаяЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|ГДЕ
	|	ПриходнаяНакладнаяЗапасы.Ссылка = &ДокументОснование
	|	И ПриходнаяНакладнаяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходнаяНакладнаяЗапасы.Номенклатура,
	|	ПриходнаяНакладнаяЗапасы.Характеристика,
	|	ПриходнаяНакладнаяЗапасы.Партия,
	|	ПриходнаяНакладнаяЗапасы.ЕдиницаИзмерения,
	|	ПриходнаяНакладнаяЗапасы.СерийныеНомера,
	|	ПриходнаяНакладнаяЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПриходнаяНакладная);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаПриходнаяНакладная);
	
КонецПроцедуры // ЗаполнитьПоПриходнаяНакладная()

// Обработчик заполнения на основании документа ОприходованиеЗапасов.
//
// Параметры:
//  ДокументСсылкаОприходованиеЗапасов	 - ДокументСсылка.ОприходованиеЗапасов.
//
Процедура ЗаполнитьПоОприходованиеЗапасов(ДокументСсылкаОприходованиеЗапасов) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаОприходованиеЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаОприходованиеЗапасов, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаОприходованиеЗапасов, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ОприходованиеЗапасовЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ОприходованиеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ОприходованиеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ОприходованиеЗапасовЗапасы.Партия КАК Партия,
	|	ОприходованиеЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ОприходованиеЗапасовЗапасы.Количество) КАК Количество,
	|	ОприходованиеЗапасовЗапасы.СерийныеНомера,
	|	ОприходованиеЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ОприходованиеЗапасов.Запасы КАК ОприходованиеЗапасовЗапасы
	|ГДЕ
	|	ОприходованиеЗапасовЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ОприходованиеЗапасовЗапасы.Номенклатура,
	|	ОприходованиеЗапасовЗапасы.Характеристика,
	|	ОприходованиеЗапасовЗапасы.Партия,
	|	ОприходованиеЗапасовЗапасы.ЕдиницаИзмерения,
	|	ОприходованиеЗапасовЗапасы.СерийныеНомера,
	|	ОприходованиеЗапасовЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаОприходованиеЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаОприходованиеЗапасов);
	
КонецПроцедуры // ЗаполнитьПоОприходованиеЗапасов()

// Обработчик заполнения на основании документа ОприходованиеЗапасов.
//
// Параметры:
//  ДокументСсылкаПересортицаЗапасов	 - ДокументСсылка.ПересортицаЗапасов.
//
Процедура ЗаполнитьПоПересортицаЗапасов(ДокументСсылкаПересортицаЗапасов) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаПересортицаЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаПересортицаЗапасов, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПересортицаЗапасов, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ПересортицаЗапасовЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ПересортицаЗапасовЗапасы.НоменклатураОприходование КАК Номенклатура,
	|	ПересортицаЗапасовЗапасы.ХарактеристикаОприходование КАК Характеристика,
	|	ПересортицаЗапасовЗапасы.ПартияОприходование КАК Партия,
	|	ПересортицаЗапасовЗапасы.ЕдиницаИзмеренияОприходование КАК ЕдиницаИзмерения,
	|	СУММА(ПересортицаЗапасовЗапасы.Количество) КАК Количество,
	|	ПересортицаЗапасовЗапасы.СерийныеНомераОприходование КАК СерийныеНомера,
	|	ПересортицаЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|ГДЕ
	|	ПересортицаЗапасовЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПересортицаЗапасовЗапасы.НоменклатураОприходование,
	|	ПересортицаЗапасовЗапасы.ХарактеристикаОприходование,
	|	ПересортицаЗапасовЗапасы.ПартияОприходование,
	|	ПересортицаЗапасовЗапасы.ЕдиницаИзмеренияОприходование,
	|	ПересортицаЗапасовЗапасы.СерийныеНомераОприходование,
	|	ПересортицаЗапасовЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПересортицаЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаПересортицаЗапасов,, "СерийныеНомераОприходование");
	
КонецПроцедуры // ЗаполнитьПоПересортицаЗапасов()

// Обработчик заполнения на основании документа ПеремещениеЗапасов
//
// Параметры:
//  ДокументСсылкаПеремещениеЗапасов - ДокументСсылка.ПеремещениеЗапасов.
//
Процедура ЗаполнитьПоПеремещениеЗапасов(ДокументСсылкаПеремещениеЗапасов) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаПеремещениеЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаПеремещениеЗапасов, Новый Структура("Организация, СтруктурнаяЕдиницаПолучатель, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаПеремещениеЗапасов, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаПолучатель;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ПеремещениеЗапасовЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ПеремещениеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПеремещениеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия КАК Партия,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ПеремещениеЗапасовЗапасы.Количество) КАК Количество,
	|	ПеремещениеЗапасовЗапасы.СерийныеНомера,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|ГДЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеЗапасовЗапасы.Номенклатура,
	|	ПеремещениеЗапасовЗапасы.Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения,
	|	ПеремещениеЗапасовЗапасы.СерийныеНомера,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаПеремещениеЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаПеремещениеЗапасов);
	
КонецПроцедуры // ЗаполнитьПоПеремещениеЗапасов()

// Обработчик заполнения на основании документа ОтчетПереработчика.
//
// Параметры:
//  ДокументСсылкаОтчетПереработчика - ДокументСсылка.ОтчетПереработчика.
//
Процедура ЗаполнитьПоОтчетПереработчика(ДокументСсылкаОтчетПереработчика) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаОтчетПереработчика;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаОтчетПереработчика, Новый Структура("Организация, СтруктурнаяЕдиница, Ячейка"));
	
	ПроверитьВозможностьВводаНаОсновании(ДокументСсылкаОтчетПереработчика, ЗначенияРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ОтчетПереработчика.НомерСтроки) КАК НомерСтроки,
	|	ОтчетПереработчика.Номенклатура КАК Номенклатура,
	|	ОтчетПереработчика.Характеристика КАК Характеристика,
	|	ОтчетПереработчика.Партия КАК Партия,
	|	ОтчетПереработчика.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ОтчетПереработчика.Количество) КАК Количество,
	|	ОтчетПереработчика.СерийныеНомера,
	|	ОтчетПереработчика.КлючСвязи
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтчетПереработчикаПродукция.НомерСтроки КАК НомерСтроки,
	|		ОтчетПереработчикаПродукция.Номенклатура КАК Номенклатура,
	|		ОтчетПереработчикаПродукция.Характеристика КАК Характеристика,
	|		ОтчетПереработчикаПродукция.Партия КАК Партия,
	|		ОтчетПереработчикаПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ОтчетПереработчикаПродукция.Количество КАК Количество,
	|		ОтчетПереработчикаПродукция.СерийныеНомера КАК СерийныеНомера,
	|		ОтчетПереработчикаПродукция.КлючСвязи КАК КлючСвязи
	|	ИЗ
	|		Документ.ОтчетПереработчика.Продукция КАК ОтчетПереработчикаПродукция
	|	ГДЕ
	|		ОтчетПереработчикаПродукция.Ссылка = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОтчетПереработчикаОтходы.НомерСтроки,
	|		ОтчетПереработчикаОтходы.Номенклатура,
	|		ОтчетПереработчикаОтходы.Характеристика,
	|		ОтчетПереработчикаОтходы.Партия,
	|		ОтчетПереработчикаОтходы.ЕдиницаИзмерения,
	|		ОтчетПереработчикаОтходы.Количество,
	|		NULL,
	|		NULL
	|	ИЗ
	|		Документ.ОтчетПереработчика.Отходы КАК ОтчетПереработчикаОтходы
	|	ГДЕ
	|		ОтчетПереработчикаОтходы.Ссылка = &ДокументОснование) КАК ОтчетПереработчика
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетПереработчика.Номенклатура,
	|	ОтчетПереработчика.Характеристика,
	|	ОтчетПереработчика.Партия,
	|	ОтчетПереработчика.ЕдиницаИзмерения,
	|	ОтчетПереработчика.СерийныеНомера,
	|	ОтчетПереработчика.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаОтчетПереработчика);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	ЭтотОбъект.СерийныеНомера.Загрузить(ДокументСсылкаОтчетПереработчика.СерийныеНомера.Выгрузить());
	
КонецПроцедуры // ЗаполнитьПоОтчетПереработчика()

// Обработчик заполнения на основании документа ЗаказПоставщику.
//
// Параметры:
//  ДокументСсылкаЗаказПоставщику	 - ДокументСсылка.ЗаказПоставщику.
//
Процедура ЗаполнитьПоЗаказПоставщику(ДокументСсылкаЗаказПоставщику) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаЗаказПоставщику;
	Организация = ДокументСсылкаЗаказПоставщику.Организация;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ЗаказПоставщикуЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗаказПоставщикуЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПоставщикуЗапасы.Характеристика КАК Характеристика,
	|	ЗаказПоставщикуЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ЗаказПоставщикуЗапасы.Количество) КАК Количество
	|ИЗ
	|	Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы
	|ГДЕ
	|	ЗаказПоставщикуЗапасы.Ссылка = &ДокументОснование
	|	И ЗаказПоставщикуЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщикуЗапасы.Номенклатура,
	|	ЗаказПоставщикуЗапасы.Характеристика,
	|	ЗаказПоставщикуЗапасы.ЕдиницаИзмерения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказПоставщику);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоЗаказПоставщику()

// Обработчик заполнения на основании документа СборкаЗапасов.
//
// Параметры:
//  ДокументСсылкаСборкаЗапасов	 - ДокументСсылка.СборкаЗапасов.
//
Процедура ЗаполнитьПоСборкаЗапасов(ДокументСсылкаСборкаЗапасов) Экспорт
	
	// Заполнение шапки.
	ЭтотОбъект.ДокументОснование = ДокументСсылкаСборкаЗапасов;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаСборкаЗапасов,
			Новый Структура("Организация, ВидОперации, СтруктурнаяЕдиница, Ячейка, СтруктурнаяЕдиницаПродукции, ЯчейкаПродукции, СтруктурнаяЕдиницаОтходов, ЯчейкаОтходов"));
		
	Организация = ЗначенияРеквизитов.Организация;
	
	МассивТЧОрдер = Новый Массив;
	Если ЗначенияРеквизитов.СтруктурнаяЕдиница.ОрдерныйСклад Тогда
		
		Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
			МассивТЧОрдер.Добавить("Запасы");
			МассивТЧОрдер.Добавить("Отходы");
		Иначе
			МассивТЧОрдер.Добавить("Продукция");
			МассивТЧОрдер.Добавить("Отходы");
		КонецЕсли;
		
		СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиница;
		Ячейка = ЗначенияРеквизитов.Ячейка;
		
	Иначе
		
		Если ЗначенияРеквизитов.СтруктурнаяЕдиницаОтходов.ОрдерныйСклад Тогда
			МассивТЧОрдер.Добавить("Отходы");
			
			СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаОтходов;
			Ячейка = ЗначенияРеквизитов.ЯчейкаОтходов;
			
		КонецЕсли;
		
		Если ЗначенияРеквизитов.СтруктурнаяЕдиницаПродукции.ОрдерныйСклад Тогда
			
			Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
				МассивТЧОрдер.Добавить("Запасы");
			Иначе
				МассивТЧОрдер.Добавить("Продукция");
			КонецЕсли;
			
			СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаПродукции;
			Ячейка = ЗначенияРеквизитов.ЯчейкаПродукции;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивТЧОрдер.Количество() = 0 Тогда
		ТекстИсключения = НСтр("ru = 'Невозможен ввод операции ""Поступления на ордерный склад"".
								|Документ ""%ДокументСсылка"" не имеет ордерного склада!'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ДокументСсылка", ДокументСсылкаСборкаЗапасов.Ссылка);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СборкаЗапасов.Продукция.(
	|		Номенклатура,
	|		Характеристика,
	|		Партия,
	|		Количество,
	|		ЕдиницаИзмерения,
	|		СерийныеНомера,
	|		КлючСвязи
	|	),
	|	СборкаЗапасов.Запасы.(
	|		Номенклатура,
	|		Характеристика,
	|		Партия,
	|		Количество,
	|		ЕдиницаИзмерения,
	|		СерийныеНомера,
	|		КлючСвязи
	|	),
	|	СборкаЗапасов.Отходы.(
	|		Номенклатура,
	|		Характеристика,
	|		Партия,
	|		Количество,
	|		ЕдиницаИзмерения
	|	)
	|ИЗ
	|	Документ.СборкаЗапасов КАК СборкаЗапасов
	|ГДЕ
	|	СборкаЗапасов.Ссылка = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаСборкаЗапасов);
	
	Запасы.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Для каждого ИмяТабличнойЧасти Из МассивТЧОрдер Цикл
		Для каждого СтрокаТаблицы Из Выборка[ИмяТабличнойЧасти].Выгрузить() Цикл
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЦикла;
	КонецЦикла;
	
	Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
		РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаСборкаЗапасов);
	Иначе
		РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаСборкаЗапасов, "Продукция", "СерийныеНомераПродукция");
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоСборкаЗапасов()

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.РасходныйОрдер")] = "ЗаполнитьПоРасходныйОрдер";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриходнаяНакладная")] = "ЗаполнитьПоПриходнаяНакладная";
	СтратегияЗаполнения[Тип("ДокументСсылка.ОприходованиеЗапасов")] = "ЗаполнитьПоОприходованиеЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПересортицаЗапасов")] = "ЗаполнитьПоПересортицаЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПеремещениеЗапасов")] = "ЗаполнитьПоПеремещениеЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ОтчетПереработчика")] = "ЗаполнитьПоОтчетПереработчика";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПоставщику")] = "ЗаполнитьПоЗаказПоставщику";
	СтратегияЗаполнения[Тип("ДокументСсылка.СборкаЗапасов")] = "ЗаполнитьПоСборкаЗапасов";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.ПриходныйОрдер.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыКПоступлениюНаСклады(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	
	// СерийныеНомера
	УправлениеНебольшойФирмойСервер.ОтразитьСерийныеНомераГарантии(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьСерийныеНомераОстатки(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.ПриходныйОрдер.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.ПриходныйОрдер.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Серийные номера
	РаботаССерийнымиНомерами.ПроверкаЗаполненияСерийныхНомеров(Отказ, Запасы, СерийныеНомера, СтруктурнаяЕдиница, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли