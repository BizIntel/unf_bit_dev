#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаПриходныйОрдер, СтруктураДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПриходныйОрдерЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ПриходныйОрдерЗапасы.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ПриходныйОрдерЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА &УчетПоЯчейкам
	|			ТОГДА ПриходныйОрдерЗапасы.Ссылка.Ячейка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Ячейка,
	|	ПриходныйОрдерЗапасы.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ПриходныйОрдерЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ПриходныйОрдерЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПриходныйОрдерЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ПриходныйОрдерЗапасы.Количество
	|		ИНАЧЕ ПриходныйОрдерЗапасы.Количество * ПриходныйОрдерЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	Документ.ПриходныйОрдер.Запасы КАК ПриходныйОрдерЗапасы
	|ГДЕ
	|	ПриходныйОрдерЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Ссылка.Дата КАК ДатаСобытия,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийныхНомеров.Приход) КАК Операция,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	&Организация КАК Организация,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Ссылка.Ячейка КАК Ячейка,
	|	1 КАК Количество
	|ИЗ
	|	Документ.ПриходныйОрдер.Запасы КАК ТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдер.СерийныеНомера КАК ТаблицаСерийныеНомера
	|		ПО ТаблицаЗапасы.Ссылка = ТаблицаСерийныеНомера.Ссылка
	|			И ТаблицаЗапасы.КлючСвязи = ТаблицаСерийныеНомера.КлючСвязи
	|ГДЕ
	|	ТаблицаСерийныеНомера.Ссылка = &Ссылка
	|	И &ИспользоватьСерийныеНомера
	|	И ТаблицаЗапасы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПриходныйОрдер);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.Дляпроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	
	Запрос.УстановитьПараметр("ИспользоватьСерийныеНомера", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерийныеНомера);
	
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", МассивРезультатов[0].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКПоступлениюНаСклады", МассивРезультатов[0].Выгрузить());
	
	// Серийные номера
	РезультатЗапроса1 = МассивРезультатов[1].Выгрузить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераГарантии", РезультатЗапроса1);
	Если СтруктураДополнительныеСвойства.УчетнаяПолитика.ОстаткиСерийныхНомеров Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераОстатки", РезультатЗапроса1);
	Иначе
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераОстатки", Новый ТаблицаЗначений);
	КонецЕсли; 
	
	// Формирование проводок документа.
	УправлениеНебольшойФирмойСервер.СформироватьТаблицуПроводок(ДокументСсылкаПриходныйОрдер, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаПриходныйОрдер, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если Не УправлениеНебольшойФирмойСервер.ВыполнитьКонтрольОстатков() Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы "ДвиженияЗапасыНаСкладахИзменение", "ДвиженияЗапасыИзменение"
	// содержат записи, необходимо выполнить контроль реализации товаров.
	
	Если СтруктураВременныеТаблицы.ДвиженияЗапасыНаСкладахИзменение Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыНаСкладахИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Ячейка) КАК ЯчейкаПредставление,
		|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыНаСкладахИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия, Ячейка) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыНаСкладахИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыНаСкладахИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК Ячейка
		|					ИЗ
		|						ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение)) КАК ЗапасыНаСкладахОстатки
		|		ПО ДвиженияЗапасыНаСкладахИзменение.Организация = ЗапасыНаСкладахОстатки.Организация
		|			И ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыНаСкладахИзменение.Номенклатура = ЗапасыНаСкладахОстатки.Номенклатура
		|			И ДвиженияЗапасыНаСкладахИзменение.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
		|			И ДвиженияЗапасыНаСкладахИзменение.Партия = ЗапасыНаСкладахОстатки.Партия
		|			И ДвиженияЗапасыНаСкладахИзменение.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		// Отрицательный остаток запасов на складе.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ДокументОбъектПриходныйОрдер = ДокументСсылкаПриходныйОрдер.ПолучитьОбъект();
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасыНаСкладах(ДокументОбъектПриходныйОрдер, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ВыполнитьКонтроль()

#Область ИнтерфейсПечати

// Функция формирует печатную форму документа по указанному макету.
//
// Параметры:
//	ТабличныйДокумент - ТабличныйДокумент в который будет выводится печатная
//				   форма.
//  ИмяМакета    - Строка, имя макета печатной формы.
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ПриходныйОрдер";

	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ИмяМакета = "ПриходныйОрдер" Тогда
		
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриходныйОрдер.Дата КАК ДатаДокумента,
			|	ПриходныйОрдер.Организация КАК Организация,
			|	ПриходныйОрдер.Номер,
			|	ПриходныйОрдер.Организация.Префикс КАК Префикс,
			|	ПриходныйОрдер.Запасы.(
			|		НомерСтроки КАК НомерСтроки,
			|		Номенклатура.НаименованиеПолное КАК Запас,
			|		Номенклатура.Артикул КАК Артикул,
			|		Номенклатура.Код КАК Код,
			|		ЕдиницаИзмерения КАК ЕдиницаХранения,
			|		Количество КАК Количество,
			|		Характеристика,
			|		КлючСвязи
			|	),
			|	ПриходныйОрдер.СерийныеНомера.(
			|		ПРЕДСТАВЛЕНИЕ(ПриходныйОрдер.СерийныеНомера.СерийныйНомер) КАК СерийныйНомер,
			|		КлючСвязи
			|	)
			|ИЗ
			|	Документ.ПриходныйОрдер КАК ПриходныйОрдер
			|ГДЕ
			|	ПриходныйОрдер.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();
			ВыборкаСтрокСерийныеНомера = Шапка.СерийныеНомера.Выбрать();

			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриходныйОрдер_ПриходныйОрдер";
                                          
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриходныйОрдер.ПФ_MXL_ПриходныйОрдер");
						СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, ,);

			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;		
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ТекстЗаголовка = "Приходный ордер № "
													+ НомерДокумента
													+ " от "
													+ Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
													
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
			ОбластьМакета.Параметры.ПредставлениеПолучателя = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
			ТабличныйДокумент.Вывести(ОбластьМакета);

			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			Количество = 0;

			Пока ВыборкаСтрокЗапасы.Следующий() Цикл

				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				
				СтрокаСерийныеНомера = РаботаССерийнымиНомерами.СтрокаСерийныеНомераИзВыборки(ВыборкаСтрокСерийныеНомера, ВыборкаСтрокЗапасы.КлючСвязи);
				ОбластьМакета.Параметры.Запас = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, 
					ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул, СтрокаСерийныеНомера);
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Количество = Количество + 1;
				
			КонецЦикла;

			ОбластьМакета = Макет.ПолучитьОбласть("Итого");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		ИначеЕсли ИмяМакета = "М4" Тогда
		
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриходныйОрдер.Дата КАК ДатаДокумента,
			|	ПриходныйОрдер.Организация КАК Организация,
			|	ПриходныйОрдер.СтруктурнаяЕдиница.Наименование КАК СкладНаименование,
			|	ПриходныйОрдер.Номер,
			|	ПриходныйОрдер.Организация.Префикс КАК Префикс,
			|	ПриходныйОрдер.Запасы.(
			|		НомерСтроки КАК НомерСтроки,
			|		Номенклатура.НаименованиеПолное КАК Запас,
			|		Номенклатура.Артикул КАК Артикул,
			|		Номенклатура.Код КАК Код,
			|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		Количество КАК Количество,
			|		Характеристика,
			|		ЕдиницаИзмерения.Код
			|	)
			|ИЗ
			|	Документ.ПриходныйОрдер КАК ПриходныйОрдер
			|ГДЕ
			|	ПриходныйОрдер.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();

			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриходныйОрдер_М4";
                                          
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриходныйОрдер.ПФ_MXL_М4");
						СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, ,);
            			
			ОбластьМакетаШапка              = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакетаЗаголовокДокумента = Макет.ПолучитьОбласть("ЗаголовокДокумента");
			ОбластьМакетаЗаголовокТаблицы   = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьМакетаСтрока             = Макет.ПолучитьОбласть("Строка");
			ОбластьМакетаПодвалСтрок        = Макет.ПолучитьОбласть("ПодвалСтрок");
			ОбластьМакетаИтого              = Макет.ПолучитьОбласть("Итого");
			ОбластьМакетаПодвал             = Макет.ПолучитьОбласть("Подвал");
	
			// Выводим общие реквизиты шапки
			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;		
			
			ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
			ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации);
			ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
			ОбластьМакетаШапка.Параметры.НомерДокумента           = НомерДокумента;
	
			ТабличныйДокумент.Вывести(ОбластьМакетаШапка);

			// Выводим заголовок докмента
			ОбластьМакетаЗаголовокДокумента.Параметры.Заполнить(Шапка);
			ОбластьМакетаЗаголовокДокумента.Параметры.ДатаСоставления = Шапка.ДатаДокумента;
			ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокДокумента);
	
			// Выводим заголовок таблицы
			ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

			// Инициализация итогов в документе
			ИтогоКоличествоПринято = 0;
			Ном                    = 0;

			// Инициализация счетчиков страниц и строк
			НомерСтраницы   = 1;
			НомерСтроки     = 0;
			КоличествоСтрок = Шапка.Запасы.Выгрузить().Количество();
	
			// Выводим многострочную часть докмента
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл

				НомерСтроки = НомерСтроки + 1;

				ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокЗапасы);

				ОбластьМакетаСтрока.Параметры.ТоварНаименование = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул);

				// Проверим вывод
				СтрокаСПодвалом = Новый Массив;
				Если НомерСтроки = 1 Тогда
					СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы); // если первая строка, то должен
				КонецЕсли;                                                   // помещаться заголовок
				СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
				Если НомерСтроки = КоличествоСтрок Тогда           // если последняя строка, должен
					СтрокаСПодвалом.Добавить(ОбластьМакетаИтого);  // помещаться и подвал документа
					СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
				Иначе                                              // иначе - только подвал строк
					СтрокаСПодвалом.Добавить(ОбластьМакетаПодвалСтрок);
				КонецЕсли;

				Если НомерСтроки <> 1 И НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Выведем заголовок таблицы
					НомерСтраницы = НомерСтраницы + 1;
					ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);

				ИтогоКоличествоПринято = ИтогоКоличествоПринято + ВыборкаСтрокЗапасы.Количество;

			КонецЦикла;

			// Выводим итоги по документу
			ОбластьМакетаИтого.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
			ТабличныйДокумент.Вывести(ОбластьМакетаИтого);

			// Выводим итоги по документу
			ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
			
		ИначеЕсли ИмяМакета = "ТОРГ4" Тогда
		
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриходныйОрдер.Дата КАК ДатаДокумента,
			|	ПриходныйОрдер.Организация КАК Организация,
			|	ПриходныйОрдер.СтруктурнаяЕдиница.Наименование КАК СкладНаименование,
			|	ПриходныйОрдер.СтруктурнаяЕдиница.МОЛ КАК МОЛ,
			|	ПриходныйОрдер.Номер,
			|	ПриходныйОрдер.Организация.Префикс КАК Префикс,
			|	ПриходныйОрдер.Запасы.(
			|		НомерСтроки КАК НомерСтроки,
			|		Номенклатура.НаименованиеПолное КАК Запас,
			|		Номенклатура.Артикул КАК Артикул,
			|		Номенклатура.Код КАК Код,
			|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
			|		ВЫБОР
			|			КОГДА ПриходныйОрдер.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				ТОГДА ПриходныйОрдер.Запасы.ЕдиницаИзмерения.Коэффициент
			|			ИНАЧЕ 1
			|		КОНЕЦ КАК КоличествоВОдномМесте,
			|		ВЫБОР
			|			КОГДА ПриходныйОрдер.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				ТОГДА ПриходныйОрдер.Запасы.Количество * ПриходныйОрдер.Запасы.ЕдиницаИзмерения.Коэффициент
			|			ИНАЧЕ ПриходныйОрдер.Запасы.Количество
			|		КОНЕЦ КАК КоличествоШтук,
			|		Количество КАК Количество,
			|		Характеристика
			|	)
			|ИЗ
			|	Документ.ПриходныйОрдер КАК ПриходныйОрдер
			|ГДЕ
			|	ПриходныйОрдер.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();

			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриходныйОрдер_ТОРГ4";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриходныйОрдер.ПФ_MXL_ТОРГ4");
			
			ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, ,);
            			
			ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
			ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогиПоСтранице");
			ОбластьМакетаВсего            = Макет.ПолучитьОбласть("Всего");
			ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");
	
			// Выводим общие реквизиты шапки
			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;		
			
			ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
			ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации);
			ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
			ОбластьМакетаШапка.Параметры.НомерДокумента           = НомерДокумента;
	        ОбластьМакетаШапка.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	
			Руководители = УправлениеНебольшойФирмойСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Организация, Шапка.ДатаДокумента);
	
			ОбластьМакетаШапка.Параметры.ФИОРуководителя       = Руководители.ФИОРуководителя;
			ОбластьМакетаШапка.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;

			ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
	
			// Инициализация счетчика страниц
			НомерСтраницы = 1;
			
			// Инициализация счетчика строк
			НомерСтроки     = 0;
			КоличествоСтрок = Шапка.Запасы.Выгрузить().Количество();
			
			// инициализация итогов по странице
			ИтогоШтукПоСтранице     = 0;
			ИтогоПоСтранице        	= 0;
			
			// инициализация итогов по документу
			ИтогоШтук        = 0;
			Итого	         = 0;
			Ном              = 0;
			
			// Выводим многострочную часть докмента
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				
				ОбластьМакетаСтрока.Параметры.ЗапасНаименование = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул);
			
				// Проверим вывод
				СтрокаСПодвалом = Новый Массив;
				Если НомерСтроки = 1 Тогда
					СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы); // если первая строка, то должен
				КонецЕсли;                                                   // помещаться заголовок
				СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
				СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
				Если НомерСтроки = КоличествоСтрок Тогда           // если последняя строка, должен
					СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);  // помещаться и повал документа
					СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
				КонецЕсли;

				Если НомерСтроки <> 1 И НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
					
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоШтукПоСтранице        = ИтогоШтукПоСтранице;				
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоПоСтранице        	  = ИтогоПоСтранице;				
					ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Очистим итоги по странице
					ИтогоШтукПоСтранице        = 0;
					ИтогоПоСтранице        = 0;
					
					// Выведем заголовок таблицы
					НомерСтраницы = НомерСтраницы + 1;
					ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				ИначеЕсли НомерСтроки = 1 Тогда // первая срока, все помещается
					
					ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);

				// Обновим итоги по странице
				ИтогоШтукПоСтранице = ИтогоШтукПоСтранице + ВыборкаСтрокЗапасы.КоличествоШтук;
				ИтогоПоСтранице = ИтогоПоСтранице + ВыборкаСтрокЗапасы.Количество;
				// Обновим итогов по документу		
				ИтогоШтук = ИтогоШтук + ВыборкаСтрокЗапасы.КоличествоШтук;		
				Итого = Итого + ВыборкаСтрокЗапасы.Количество;

			КонецЦикла;

			// Выводим итоги по документу
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоШтукПоСтранице        = ИтогоШтукПоСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоПоСтранице	        = ИтогоПоСтранице;
			ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);

			// Выводим итоги по документу
			ОбластьМакетаВсего.Параметры.ИтогоШтук        = ИтогоШтук;
			ОбластьМакетаВсего.Параметры.Итого        = Итого;
			ТабличныйДокумент.Вывести(ОбластьМакетаВсего);
			
			// Выводим подписи
			ДанныеОФизЛице = УправлениеНебольшойФирмойСервер.ДанныеФизЛица(УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Шапка.Организация), Шапка.МОЛ, Шапка.ДатаДокумента);
		                                                                    
			ОбластьМакетаПодвал.Параметры.ФИОМОЛ = ДанныеОФизЛице.Представление;
			ОбластьМакетаПодвал.Параметры.ДолжностьМОЛ = СокрЛП(ДанныеОФизЛице.Должность);
			
			ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
			
		ИначеЕсли ИмяМакета = "БланкТоварногоНаполнения" Тогда
			
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриходныйОрдер.Дата КАК ДатаДокумента,
			|	ПриходныйОрдер.СтруктурнаяЕдиница КАК ПредставлениеСклада,
			|	ПриходныйОрдер.Ячейка КАК ПредставлениеЯчейки,
			|	ПриходныйОрдер.Номер,
			|	ПриходныйОрдер.Организация.Префикс КАК Префикс,
			|	ПриходныйОрдер.Запасы.(
			|		НомерСтроки КАК НомерСтроки,
			|		Номенклатура.Склад КАК Склад,
			|		Номенклатура.Ячейка КАК Ячейка,
			|		ВЫБОР
			|			КОГДА (ВЫРАЗИТЬ(ПриходныйОрдер.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(100))) = """"
			|				ТОГДА ПриходныйОрдер.Запасы.Номенклатура.Наименование
			|			ИНАЧЕ ПриходныйОрдер.Запасы.Номенклатура.НаименованиеПолное
			|		КОНЕЦ КАК Запас,
			|		Номенклатура.Артикул КАК Артикул,
			|		Номенклатура.Код КАК Код,
			|		ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
			|		Количество КАК Количество,
			|		Характеристика,
			|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
			|		КлючСвязи
			|	),
			|	ПриходныйОрдер.СерийныеНомера.(
			|		СерийныйНомер,
			|		КлючСвязи
			|	)
			|ИЗ
			|	Документ.ПриходныйОрдер КАК ПриходныйОрдер
			|ГДЕ
			|	ПриходныйОрдер.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();
			ВыборкаСтрокСерийныеНомера = Шапка.СерийныеНомера.Выбрать();

			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриходныйОрдер_БланкТоварногоНаполнения";
                                          
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриходныйОрдер.ПФ_MXL_БланкТоварногоНаполнения");
			
			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;		
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ТекстЗаголовка = "Приходный ордер № "
													+ НомерДокумента
													+ " от "
													+ Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
													
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Склад");
			ОбластьМакета.Параметры.ПредставлениеСклада = Шапка.ПредставлениеСклада;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Если Константы.ФункциональнаяОпцияУчетПоЯчейкам.Получить() Тогда
				
				ОбластьМакета = Макет.ПолучитьОбласть("Ячейка");
				ОбластьМакета.Параметры.ПредставлениеЯчейки = Шапка.ПредставлениеЯчейки;
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("ВремяПечати");
			ОбластьМакета.Параметры.ВремяПечати = "Дата и время печати: "
												 	+ ТекущаяДата()
													+ ". Пользователь: "
													+ Пользователи.ТекущийПользователь();
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ТабличныйДокумент.Вывести(ОбластьМакета);			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл

				Если НЕ ВыборкаСтрокЗапасы.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас Тогда
					Продолжить;
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);

				СтрокаСерийныеНомера = РаботаССерийнымиНомерами.СтрокаСерийныеНомераИзВыборки(ВыборкаСтрокСерийныеНомера, ВыборкаСтрокЗапасы.КлючСвязи);
				ОбластьМакета.Параметры.Запас = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, 
					ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул, СтрокаСерийныеНомера);
																		
				ТабличныйДокумент.Вывести(ОбластьМакета);
								
			КонецЦикла;

			ОбластьМакета = Макет.ПолучитьОбласть("Итого");
			ТабличныйДокумент.Вывести(ОбластьМакета);			
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриходныйОрдер") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПриходныйОрдер", "Приходный ордер", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ПриходныйОрдер"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М4", "М-4", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "М4"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ4") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ4", "Т-4", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ТОРГ4"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БланкТоварногоНаполнения") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "БланкТоварногоНаполнения", "Бланк товарного наполнения", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "БланкТоварногоНаполнения"));
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	УправлениеНебольшойФирмойСервер.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М4";
	КомандаПечати.Представление = НСтр("ru = 'М4 (Приходный ордер)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ4";
	КомандаПечати.Представление = НСтр("ru = 'ТОРГ4 (Акт о приемке товара)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриходныйОрдер";
	КомандаПечати.Представление = НСтр("ru = 'Приходный ордер'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 7;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БланкТоварногоНаполнения";
	КомандаПечати.Представление = НСтр("ru = 'Бланк товарного наполнения'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли