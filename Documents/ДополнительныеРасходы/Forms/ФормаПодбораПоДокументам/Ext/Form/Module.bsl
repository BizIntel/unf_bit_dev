
&НаСервере
// Функция помещает результаты подбора в хранилище
//
Функция ЗаписатьПодборВХранилище() 
	
	Возврат ПоместитьВоВременноеХранилище(ОтобранныеЗапасы.Выгрузить(ОтобранныеЗапасы.НайтиСтроки(Новый Структура("Отметка", Истина))), УникальныйИдентификаторФормыВладельца);
	
КонецФункции //ЗаписатьПодборВХранилище() 

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период 				= Параметры.Период;
	Организация 		= Параметры.Организация;
	УчетПоКомпании		= Константы.УчетПоКомпании.Получить();
	
	Если Параметры.Свойство("АдресЗапасовДокумента") Тогда
		
		ТаблицаЗапасов = ПолучитьИзВременногоХранилища(Параметры.АдресЗапасовДокумента);
		
		ТаблицаЗапасов.Колонки.Добавить("Отметка", Новый ОписаниеТипов("Булево"));
		ТаблицаЗапасов.ЗаполнитьЗначения(Истина, "Отметка");
		
		Для каждого СтрокаТЧ Из ТаблицаЗапасов Цикл
			
			ЗаполнитьЗначенияСвойств(ОтобранныеЗапасы.Добавить(), СтрокаТЧ);
			
		КонецЦикла;
		
	КонецЕсли; 
	
	Если Параметры.Свойство("НалогообложениеНДС") Тогда
		НалогообложениеНДС = Параметры.НалогообложениеНДС;
	Иначе
		НалогообложениеНДС = Неопределено;
	КонецЕСли;
	
	Если Параметры.Свойство("СуммаВключаетНДС") Тогда
		СуммаВключаетНДС		= Параметры.СуммаВключаетНДС;
		ИспользуетсяНДС 		= Истина;
		ОрганизацияДокумента	= Параметры.ОрганизацияДокумента;
	Иначе
		ИспользуетсяНДС 		= Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ТипНоменклатуры") Тогда
		Если ЗначениеЗаполнено(Параметры.ТипНоменклатуры)  Тогда
			ТипНоменклатуры = Параметры.ТипНоменклатуры;
			
			МассивТипНоменклатуры = Новый Массив();
			Для каждого ЭлементТипНоменклатуры Из ТипНоменклатуры Цикл
				Если Параметры.Свойство("ИсключитьТипНоменклатурыРабота") 
					И ЭлементТипНоменклатуры.Значение = Перечисления.ТипыНоменклатуры.Работа Тогда
					Продолжить;
				КонецЕсли;
				МассивТипНоменклатуры.Добавить(ЭлементТипНоменклатуры.Значение);
			КонецЦикла;
			
			МассивОграниченияТипНоменклатуры = Новый ФиксированныйМассив(МассивТипНоменклатуры);
			НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипНоменклатуры", МассивОграниченияТипНоменклатуры);
			НовыйПараметр2 = Новый ПараметрВыбора("Дополнительно.ОграничениеТипа", МассивОграниченияТипНоменклатуры);
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НовыйПараметр);
			НовыйМассив.Добавить(НовыйПараметр2);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элементы.ОтобранныеЗапасыНоменклатура.ПараметрыВыбора = НовыеПараметры;
		Иначе
			ТипНоменклатуры = Неопределено;
		КонецЕсли;
	Иначе
		ТипНоменклатуры = Неопределено;
	КонецЕсли;
	
	ИспользуютсяХарактеристики 	= Константы.ФункциональнаяОпцияИспользоватьХарактеристики.Получить();
	ИспользуютсяПартии 			= Константы.ФункциональнаяОпцияИспользоватьПартии.Получить();
	
	Если Параметры.Свойство("Контрагент") Тогда
		
		Контрагент = Параметры.Контрагент;
		
	КонецЕсли;
	
	Параметры.Свойство("УникальныйИдентификаторФормыВладельца", УникальныйИдентификаторФормыВладельца);
	
КонецПроцедуры //ПриСозданииНаСервере()

&НаСервере
// Процедура заполняет табличную часть Номенклатура отобранная -
// Параметры:
// 		МассивДокументов - массив документов, по которым происходит заполнение
//							в зависимости от способа заполнения:
//							по всем документам, по одному, по отмеченным
Процедура ЗаполнитьСписокНоменклатуры(МассивДокументов)
	
	Запрос			= Новый Запрос;
	
	Запрос.Текст	= 
	"ВЫБРАТЬ
	|	ИСТИНА КАК Отметка,
	|	АвансовыйОтчетЗапасы.Ссылка КАК ДокументПоступления,
	|	АвансовыйОтчетЗапасы.Номенклатура,
	|	АвансовыйОтчетЗапасы.Характеристика,
	|	АвансовыйОтчетЗапасы.Партия,
	|	АвансовыйОтчетЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	АвансовыйОтчетЗапасы.Количество,
	|	АвансовыйОтчетЗапасы.Цена,
	|	АвансовыйОтчетЗапасы.Сумма,
	|	АвансовыйОтчетЗапасы.СтавкаНДС,
	|	АвансовыйОтчетЗапасы.СуммаНДС,
	|	АвансовыйОтчетЗапасы.Всего,
	|	АвансовыйОтчетЗапасы.ЗаказПокупателя,
	|	1 КАК Коэффициент,
	|	АвансовыйОтчетЗапасы.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	АвансовыйОтчетЗапасы.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.АвансовыйОтчет.Запасы КАК АвансовыйОтчетЗапасы
	|ГДЕ
	|	АвансовыйОтчетЗапасы.Ссылка В(&МассивДокументов)
	|	И &УсловиеОтбораНоменклатурыДляАвансовогоОтчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ПриходнаяНакладнаяЗапасы.Ссылка,
	|	ПриходнаяНакладнаяЗапасы.Номенклатура,
	|	ПриходнаяНакладнаяЗапасы.Характеристика,
	|	ПриходнаяНакладнаяЗапасы.Партия,
	|	ПриходнаяНакладнаяЗапасы.ЕдиницаИзмерения,
	|	ПриходнаяНакладнаяЗапасы.Количество,
	|	ПриходнаяНакладнаяЗапасы.Цена,
	|	ПриходнаяНакладнаяЗапасы.Сумма,
	|	ПриходнаяНакладнаяЗапасы.СтавкаНДС,
	|	ПриходнаяНакладнаяЗапасы.СуммаНДС,
	|	ПриходнаяНакладнаяЗапасы.Всего,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяЗапасы.Заказ ССЫЛКА Документ.ЗаказПоставщику
	|			ТОГДА ПриходнаяНакладнаяЗапасы.Заказ.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	1,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.НалогообложениеНДС,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.СуммаВключаетНДС
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|ГДЕ
	|	ПриходнаяНакладнаяЗапасы.Ссылка В(&МассивДокументов)
	|	И &УсловиеОтбораНоменклатурыДляПриходнойНакладной"; 
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Если ЗаполнятьТолькоПоУказаннойНоменклатуре Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораНоменклатурыДляАвансовогоОтчета",	"АвансовыйОтчетЗапасы.Номенклатура В(&МассивНоменклатуры)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораНоменклатурыДляПриходнойНакладной",	"ПриходнаяНакладнаяЗапасы.Номенклатура В(&МассивНоменклатуры)");
		Запрос.УстановитьПараметр("МассивНоменклатуры", ОтобраннаяНоменклатура.Выгрузить());
		
	Иначе
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораНоменклатурыДляАвансовогоОтчета",	"Истина");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораНоменклатурыДляПриходнойНакладной",	"Истина");
		
	КонецЕсли;
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		Если ДобавлятьНовыеПозицииВПодвалТаблицы Тогда 
			
			ЗаполнитьЗначенияСвойств(ОтобранныеЗапасы.Добавить(), ВыборкаЗапроса);
			
		Иначе
			
			Цена = ВыборкаЗапроса.Цена;
			Если ВыборкаЗапроса.СуммаВключаетНДС <> СуммаВключаетНДС Тогда
				
				Цена = Окр(УправлениеНебольшойФирмойСервер.ПересчитатьСуммуПриИзмененииФлаговНДС(Цена, СуммаВключаетНДС, ВыборкаЗапроса.СтавкаНДС), 2);
				
			КонецЕсли;
			
			СтруктураПоиска = Новый Структура("ДокументПоступления, Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, СтавкаНДС, Цена",
				ВыборкаЗапроса.ДокументПоступления,
				ВыборкаЗапроса.Номенклатура,
				ВыборкаЗапроса.Характеристика,
				ВыборкаЗапроса.Партия,
				ВыборкаЗапроса.ЕдиницаИзмерения,
				ВыборкаЗапроса.СтавкаНДС,
				Цена); //Цена должна совпадать, иначе две строки и пусть определяют нужную цену для долей распределения
				
			СтрокаДубликата	= ОтобранныеЗапасы.НайтиСтроки(СтруктураПоиска);
			
			//Пользователь руками может создать дубл. строку
			//мешать не будим, ведь это не ведет к ошибочным действиям
			//просто добавим данные в первую найденную строку
			Если СтрокаДубликата.Количество() > 0 Тогда 
				
				//Подсчет на сервере, не уходя на клиента
				СтрокаДубликата[0].Количество = СтрокаДубликата[0].Количество + ВыборкаЗапроса.Количество;
				
				Если ВыборкаЗапроса.СуммаВключаетНДС = СуммаВключаетНДС Тогда
					
					СтрокаДубликата[0].Сумма = СтрокаДубликата[0].Количество * СтрокаДубликата[0].Цена;
					
				ИначеЕсли ВыборкаЗапроса.СуммаВключаетНДС И НЕ СуммаВключаетНДС Тогда
					
					СтрокаДубликата[0].Сумма = СтрокаДубликата[0].Сумма + Окр((ВыборкаЗапроса.Сумма / ((ВыборкаЗапроса.СтавкаНДС.Ставка + 100) / 100)), 2);
					
				ИначеЕсли ВыборкаЗапроса.СуммаВключаетНДС И НЕ СуммаВключаетНДС Тогда
					
					СтрокаДубликата[0].Сумма = СтрокаДубликата[0].Сумма + Окр((ВыборкаЗапроса.Сумма - ВыборкаЗапроса.Сумма / ((ВыборкаЗапроса.СтавкаНДС.Ставка + 100) / 100)), 2);
					
				КонецЕсли;
				
				СтрокаДубликата[0].СуммаНДС = СтрокаДубликата[0].СуммаНДС + ВыборкаЗапроса.СуммаНДС;
				СтрокаДубликата[0].Всего = СтрокаДубликата[0].Всего + ВыборкаЗапроса.Всего;
				
			Иначе
				
				// Новая строка
				НоваяСтрока = ОтобранныеЗапасы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗапроса, "ДокументПоступления, Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Количество, СтавкаНДС");
				
				НоваяСтрока.Отметка = Истина;
				Если ВыборкаЗапроса.СуммаВключаетНДС = СуммаВключаетНДС Тогда
					
					НоваяСтрока.Цена		= Цена;
					НоваяСтрока.Сумма		= ВыборкаЗапроса.Сумма;
					НоваяСтрока.СуммаНДС	= ВыборкаЗапроса.СуммаНДС;
					НоваяСтрока.Всего		= ВыборкаЗапроса.Всего;
					
				ИначеЕсли ВыборкаЗапроса.СуммаВключаетНДС И НЕ СуммаВключаетНДС Тогда
					
					НоваяСтрока.Цена		= Цена;
					НоваяСтрока.Сумма		= Окр(ВыборкаЗапроса.Сумма / ((ВыборкаЗапроса.СтавкаНДС.Ставка + 100) / 100), 2);
					НоваяСтрока.СуммаНДС	= ВыборкаЗапроса.СуммаНДС;
					НоваяСтрока.Всего		= ВыборкаЗапроса.Всего;
					
				ИначеЕсли НЕ ВыборкаЗапроса.СуммаВключаетНДС И СуммаВключаетНДС Тогда
					
					НоваяСтрока.Цена		= Цена;
					НоваяСтрока.Сумма		= Окр(ВыборкаЗапроса.Сумма + (ВыборкаЗапроса.Сумма * ВыборкаЗапроса.Номенклатура.СтавкаНДС.Ставка / 100), 2);
					НоваяСтрока.СуммаНДС	= ВыборкаЗапроса.СуммаНДС;
					НоваяСтрока.Всего		= ВыборкаЗапроса.Всего;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ЗаполнитьСписокНоменклатуры()

&НаКлиенте
//Процедура обработка подбора по команде Добавить
//
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если НЕ ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		
		МассивВыбранныхДокументов	= Новый Массив;
		МассивВыбранныхДокументов.Добавить(ВыбранноеЗначение);
		
	Иначе
		
		МассивВыбранныхДокументов	= ВыбранноеЗначение;
		
	КонецЕсли;
	
	
	Для каждого ДокументПоступления Из МассивВыбранныхДокументов Цикл
		
		МассивНайденныхДокументов = ОтобранныеДокументы.НайтиСтроки(Новый Структура("ДокументПоступления", ДокументПоступления));
		
		Если МассивНайденныхДокументов.Количество() > 0 Тогда
			
			ТекстСообщения = НСтр("ru = 'Документ %ПредставлениеДокумента% уже присутствует в списке выбранных документов.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеДокумента%", ДокументПоступления);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока 					= ОтобранныеДокументы.Добавить();
		НоваяСтрока.Отметка 			= Истина;
		НоваяСтрока.ДокументПоступления	= ДокументПоступления;
		
	КонецЦикла;
	
КонецПроцедуры //ОбработкаВыбора()

&НаКлиенте
//Процедура изменяет видимость строк в табличном поле Отобранная номенклатура
//
Процедура УстановитьВидимостьОтобранныхЗапасов(ТекущиеДанные)
	
	Если ТекущиеДанные = Неопределено 
		ИЛИ НЕ ОтображатьНоменклатуруТолькоДляТекущегоДокумента Тогда
		
		Элементы.ОтобранныеЗапасы.ОтборСтрок = Новый ФиксированнаяСтруктура();
		Элементы.ОтобранныеЗапасы.Обновить();
		
	Иначе
		
		Элементы.ОтобранныеЗапасы.ОтборСтрок = Новый ФиксированнаяСтруктура("ДокументПоступления", ТекущиеДанные.ДокументПоступления);
		
	КонецЕсли;

КонецПроцедуры //УстановитьВидимостьОтобранныхЗапасов()

&НаКлиенте
// Процедура открытия множественного подбора по документа
//
Процедура МножественныйПодборДокументов(Команда)
	
	// 1. Тут определить тип добавляемого документа
	// 2. Открыть список для выбора
	
	СписокТиповДокументов = Новый СписокЗначений();
	СписокТиповДокументов.Добавить("АвансовыйОтчет", "Авансовый отчет");
	СписокТиповДокументов.Добавить("ПриходнаяНакладная", "Приходная накладная");
	
	Оповещение = Новый ОписаниеОповещения("МножественныйПодборДокументовЗавершение", ЭтаФорма);
	СписокТиповДокументов.ПоказатьВыборЭлемента(Оповещение, "Выберите тип документа для добавления");
	
	Отказ = Истина;
	
КонецПроцедуры //МножественныйПодборДокументов()

&НаКлиенте
Процедура МножественныйПодборДокументовЗавершение(ВыбЭлемент,Параметры) Экспорт
	
	Если НЕ ВыбЭлемент = Неопределено Тогда 
		
		ПараметрыВыбора = Новый Структура;
		ПараметрыВыбора.Вставить("МножественныйВыбор", Истина);
		ПараметрыВыбора.Вставить("ЗакрыватьПриВыборе", Ложь);
		
		Если НЕ УчетПоКомпании Тогда
			
			ПараметрыВыбора.Вставить("Отбор", Новый Структура("Организация", ОрганизацияДокумента));
			
		КонецЕсли;
		
		ОткрытьФорму("Документ." + ВыбЭлемент.Значение + ".ФормаВыбора", ПараметрыВыбора, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КНОПОК ФОРМЫ

&НаКлиенте
//Процедура обработчик события включения/выключения опции
// Отображать Номенклатуру Только Для ТекущегоДокумента
//
Процедура ОтображатьНоменклатуруТолькоДляТекущегоДокументаПриИзменении(Элемент)
	
	УстановитьВидимостьОтобранныхЗапасов(Элементы.ОтобранныеДокументы.ТекущиеДанные);

КонецПроцедуры //ОтображатьНоменклатуруТолькоДляТекущегоДокументаПриИзменении()

&НаКлиенте
//Процедура - обработчик нажатия кнопки ОК.
//
Процедура ОК(Команда)
	
	АдресЗапасовВХранилище = ЗаписатьПодборВХранилище();
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("АдресЗапасовВХранилище", АдресЗапасовВХранилище);
	ПараметрыПодбора.Вставить("ДобавлятьНовыеПозицииВПодвалТаблицы", ДобавлятьНовыеПозицииВПодвалТаблицы);
	
	Оповестить("ПодборПоДокументамПроизведен", ПараметрыПодбора, УникальныйИдентификаторФормыВладельца);
	
	Закрыть();
	
КонецПроцедуры //ОК()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНЫХ ЧАСТЕЙ

&НаКлиенте
// Процедура заполняет массив документов отмеченными 
// и передает его в процедуру заполнения таблчиного поля
// Отобранные запасы
Процедура ЗаполнитьПоОтобраннымДокументам(Команда)
	
	Если ОтобранныеЗапасы.Количество() > 0 Тогда
		
		ТекстВопроса = Нстр("ru = 'Табличная часть будит очищена и повторно заполнена. Продолжить?'");
		
		Ответ = Неопределено;
		
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоОтобраннымДокументамЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьПоОтобраннымДокументамФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОтобраннымДокументамЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Ответ = Результат; 
    
    Если НЕ Ответ = КодВозвратаДиалога.Да Тогда
        
        Возврат;
        
    КонецЕсли;
    
    
    ЗаполнитьПоОтобраннымДокументамФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОтобраннымДокументамФрагмент()
	Перем МассивДокументов, СтрокаДокументаПоступления;
	
	ОтобранныеЗапасы.Очистить();
	
	МассивДокументов = Новый Массив;
	Для каждого СтрокаДокументаПоступления Из ОтобранныеДокументы Цикл
		
		Если НЕ СтрокаДокументаПоступления.Отметка Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		МассивДокументов.Добавить(СтрокаДокументаПоступления.ДокументПоступления);
		
	КонецЦикла;
	
	ЗаполнитьСписокНоменклатуры(МассивДокументов);
	
КонецПроцедуры //ЗаполнитьПоОтобраннымДокументам()

&НаКлиенте
// Процедура заполняет массив документов текущим документов,
// вне зависимости от отметки, и передает массив в 
// процедуру заполнения табличного поля 
// Отобранные запасы
Процедура ЗаполнитьПоТекущемуДокументу(Команда)
	
	ТекущаяСтрокаДокументовПоступлений	= Элементы.ОтобранныеДокументы.ТекущиеДанные;
	
	Если ТекущаяСтрокаДокументовПоступлений = Неопределено Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Нстр("ru = 'Выделите строку с документом и повторите попытку заполнить'"),
			,
			"ОтобранныеДокументы",
			,
			);
			
		Возврат;
		
	КонецЕсли;
	
	МассивДокументов = Новый Массив;
	МассивДокументов.Добавить(ТекущаяСтрокаДокументовПоступлений.ДокументПоступления);
	
	ЗаполнитьСписокНоменклатуры(МассивДокументов);
	
КонецПроцедуры //ЗаполнитьПоТекущемуДокументу()

&НаКлиенте
//Процедура очищает табличное поле Отобранные запасы
//
Процедура ОчиститьОтобранныеЗапасы(Команда)
	
	ОтобранныеЗапасы.Очистить();
	
КонецПроцедуры //ОчиститьОтобранныеЗапасы()

&НаКлиенте
// Процедура добавления документа в список значений
// выбранных документов
//
Процедура СписокДокументовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	// 1. Тут определить тип добавляемого документа
	// 2. Открыть список для выбора
	
	СписокТиповДокументов = Новый СписокЗначений();
	СписокТиповДокументов.Добавить("АвансовыйОтчет", "Авансовый отчет");
	СписокТиповДокументов.Добавить("ПриходнаяНакладная", "Приходная накладная");
	
	Оповещение = Новый ОписаниеОповещения("СписокДокументовПередНачаломДобавленияЗавершение",ЭтаФорма);
	СписокТиповДокументов.ПоказатьВыборЭлемента(Оповещение,"Выберите тип документа для добавления");
	
	Отказ = Истина;
	
КонецПроцедуры //СписокДокументовПередНачаломДобавления()

&НаКлиенте
Процедура СписокДокументовПередНачаломДобавленияЗавершение(ВыбЭлемент,Параметры) Экспорт
	
	Если НЕ ВыбЭлемент = Неопределено Тогда
		
		ПараметрыВыбора = Новый Структура;
		
		Если НЕ УчетПоКомпании Тогда
			
			ПараметрыВыбора.Вставить("Отбор", Новый Структура("Организация", ОрганизацияДокумента));
			
		КонецЕсли;
		
		ОткрытьФорму("Документ." + ВыбЭлемент.Значение + ".ФормаВыбора", ПараметрыВыбора, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Рассчитывается сумма НДС в строке табличной части.
//
Процедура РассчитатьСуммуНДС(СтрокаТабличнойЧасти)
	
	СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
	
	СтрокаТабличнойЧасти.СуммаНДС = ?(
		СуммаВключаетНДС,
		СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
		СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
	
КонецПроцедуры // РассчитатьСуммуНДС()

&НаКлиенте
// Процедура рассчитывает сумму в строке табличной части.
//
Процедура РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти = Неопределено)
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		СтрокаТабличнойЧасти = Элементы.ОтобранныеЗапасы.ТекущиеДанные;
	КонецЕсли;
	
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);
	
КонецПроцедуры // РассчитатьСуммуВСтрокеТабличнойЧасти()

&НаКлиенте
//Процедура расчитывает сумму по строке в зависимости
//от устуновленного количества
Процедура ОтобранныеЗапасыКоличествоПриИзменении(Элемент)
	
	РассчитатьСуммуВСтрокеТабличнойЧасти("Запасы");
	
КонецПроцедуры //ОтобранныеЗапасыКоличествоПриИзменении()

&НаКлиенте
//Процедура расчитывает сумму по строке в зависимости
//от устуновленной цены
Процедура ОтобранныеЗапасыЦенаПриИзменении(Элемент)
	
	РассчитатьСуммуВСтрокеТабличнойЧасти();
	
КонецПроцедуры //ОтобранныеЗапасыЦенаПриИзменении()

&НаКлиенте
//Процедура расчитывает цену по строке в зависимости
//от устуновленной суммы
Процедура ОтобранныеЗапасыСуммаПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ОтобранныеЗапасы.ТекущиеДанные;
	
	Если СтрокаТабличнойЧасти.Количество <> 0 Тогда
		СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Сумма / СтрокаТабличнойЧасти.Количество;
	КонецЕсли;
	
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);

КонецПроцедуры //ОтобранныеЗапасыСуммаПриИзменении()

&НаКлиенте
//Процедура пересчитывает сумму НДС в зависимости
//от измененной ставки НДС
Процедура ОтобранныеЗапасыСтавкаНДСПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ОтобранныеЗапасы.ТекущиеДанные;
	
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);

КонецПроцедуры //ОтобранныеЗапасыСтавкаНДСПриИзменении()

&НаКлиенте
//Процедура пересчитывает итоговую сумму в зависимости
//от измененной суммы НДС
Процедура ОтобранныеЗапасыСуммаНДСПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ОтобранныеЗапасы.ТекущиеДанные;
	
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);

КонецПроцедуры //ОтобранныеЗапасыСуммаНДСПриИзменении()

&НаКлиенте
//Процедура обработчик события активизации строки 
//в списке отобранных документов
//
Процедура ОтобранныеДокументыПриАктивизацииСтроки(Элемент)
	
	УстановитьВидимостьОтобранныхЗапасов(Элементы.ОтобранныеДокументы.ТекущиеДанные);
	
КонецПроцедуры //ОтобранныеДокументыПриАктивизацииСтроки()

&НаКлиенте
//Процедура установки флажка во всех строках
//табличного поля Отобранные запасы
//
Процедура ВыделитьВсеПозиции(Команда)
	
	Для каждого Строчка Из ОтобранныеЗапасы Цикл
		
		Строчка.Отметка = Истина;
		
	КонецЦикла;
	
КонецПроцедуры //ВыделитьВсеПозиции()

&НаКлиенте
//Процедура снятия флажка со всех строк
//табличного поля Отобранные запасы
//
Процедура СнятьВыделениеСоВсехПозиций(Команда)
	
	Для каждого Строчка Из ОтобранныеЗапасы Цикл
		
		Строчка.Отметка = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры //СнятьВыделениеСоВсехПозиций()

&НаКлиенте
// Процедура - обработчик события ОбработкаВыбора табличного поля ОтобранныеДокументы
//
Процедура ОтобранныеДокументыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	
	Для каждого ЭлементМассива Из ВыбранноеЗначение Цикл
		
		СтруктураПоиска = Новый Структура("ДокументПоступления", ЭлементМассива);
		
		МассивНайденныхСтрок = ОтобранныеДокументы.НайтиСтроки(СтруктураПоиска);
		
		Если МассивНайденныхСтрок.Количество() < 1 Тогда 
			
			ОтобранныеДокументы.Добавить(ЭлементМассива, , Истина);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ОтобранныеДокументыОбработкаВыбора()

&НаКлиенте
// Процедура - обработчик события "Выбор" табличного поля "ОтобранныеЗапасы"
//
Процедура ОтобранныеЗапасыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрокаТабличнойЧасти = Элементы.ОтобранныеЗапасы.ТекущиеДанные;
	
	Если НЕ ТекущаяСтрокаТабличнойЧасти = Неопределено Тогда
		
		Если ТипЗнч(ТекущаяСтрокаТабличнойЧасти.ДокументПоступления) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
			
			ОткрытьФорму("Документ.ПриходнаяНакладная.ФормаОбъекта", Новый Структура("Ключ", ТекущаяСтрокаТабличнойЧасти.ДокументПоступления));
			
		ИначеЕсли ТипЗнч(ТекущаяСтрокаТабличнойЧасти.ДокументПоступления) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			
			ОткрытьФорму("Документ.АвансовыйОтчет.ФормаОбъекта", Новый Структура("Ключ", ТекущаяСтрокаТабличнойЧасти.ДокументПоступления));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры //ОтобранныеЗапасыВыбор()
