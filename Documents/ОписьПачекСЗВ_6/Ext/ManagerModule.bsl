#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции получения данных для заполнения и проведения документа.


Функция СформироватьЗапросПоШапкеДокумента(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Дата, Руководитель");
	
	МассивНеобходимыхДанных = Новый Массив;
	МассивНеобходимыхДанных.Добавить("Фамилия");
	МассивНеобходимыхДанных.Добавить("Имя");
	МассивНеобходимыхДанных.Добавить("Отчество");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пачки.ПачкаДокументов КАК Документ
	|ПОМЕСТИТЬ ВТДокументыСЗВ
	|ИЗ
	|	Документ.ОписьПачекСЗВ_6.ПачкиДокументов КАК Пачки
	|ГДЕ
	|	Пачки.Ссылка = &ДокументСсылка
	|;
	|                                  	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ФормыСЗВ.КоличествоФизлиц) КАК КоличествоФизлиц,
	|	СУММА(ФормыСЗВ.КоличествоИсходных) КАК КоличествоИсходных,
	|	СУММА(ФормыСЗВ.КоличествоКорректирующих) КАК КоличествоКорректирующих,
	|	СУММА(ФормыСЗВ.НачисленоСтраховаяИсходных) КАК НачисленоСтраховаяИсходных,
	|	СУММА(ФормыСЗВ.НачисленоСтраховаяКорректирующих) КАК НачисленоСтраховаяКорректирующих,
	|	СУММА(ФормыСЗВ.НачисленоНакопительнаяИсходных) КАК НачисленоНакопительнаяИсходных,
	|	СУММА(ФормыСЗВ.НачисленоНакопительнаяКорректирующих) КАК НачисленоНакопительнаяКорректирующих,
	|	СУММА(ФормыСЗВ.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(ФормыСЗВ.УплаченоНакопительная) КАК УплаченоНакопительная
	|ПОМЕСТИТЬ ВТКоличествоФизлиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		ФормыСЗВ6_2.Сотрудник КАК КоличествоФизлиц,
	|		ВЫБОР
	|			КОГДА ФормыСЗВ6_2.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КоличествоИсходных,
	|		ВЫБОР
	|			КОГДА ФормыСЗВ6_2.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК КоличествоКорректирующих,
	|		ВЫБОР
	|			КОГДА ФормыСЗВ6_2.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА ФормыСЗВ6_2.НачисленоСтраховая
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НачисленоСтраховаяИсходных,
	|		ВЫБОР
	|			КОГДА ФормыСЗВ6_2.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|				ТОГДА ФормыСЗВ6_2.НачисленоСтраховая
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НачисленоСтраховаяКорректирующих,
	|		ВЫБОР
	|			КОГДА ФормыСЗВ6_2.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА ФормыСЗВ6_2.НачисленоНакопительная
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НачисленоНакопительнаяИсходных,
	|		ВЫБОР
	|			КОГДА ФормыСЗВ6_2.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|				ТОГДА ФормыСЗВ6_2.НачисленоНакопительная
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НачисленоНакопительнаяКорректирующих,
	|		ВЫБОР
	|			КОГДА ФормыСЗВ6_2.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА ФормыСЗВ6_2.УплаченоСтраховая
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК УплаченоСтраховая,
	|		ВЫБОР
	|			КОГДА ФормыСЗВ6_2.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА ФормыСЗВ6_2.УплаченоНакопительная
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК УплаченоНакопительная
	|	ИЗ
	|		ВТДокументыСЗВ КАК ДокументыСЗВ
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.Сотрудники КАК ФормыСЗВ6_2
	|			ПО ДокументыСЗВ.Документ = ФормыСЗВ6_2.Ссылка) КАК ФормыСЗВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ДокументыСЗВ.Документ.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоКорректирующих,
	|	СУММА(ВЫБОР
	|			КОГДА ДокументыСЗВ.Документ.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоИсходных
	|ПОМЕСТИТЬ ВТКоличествоПачек
	|ИЗ
	|	ВТДокументыСЗВ КАК ДокументыСЗВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Док.Номер,
	|	Док.Дата,
	|	Док.Организация,
	|	Док.Организация.ЮридическоеФизическоеЛицо КАК ОрганизацияЮрФизЛицо,
	|	Док.Организация.ОГРН,
	|	Док.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	|	Док.Организация.Наименование КАК ОрганизацияНаименованиеСокращенное,
	|	Док.Организация.Наименование,
	|	Док.Организация.РегистрационныйНомерПФР,
	|	ВЫБОР
	|		КОГДА Док.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(Док.Организация.КодПоОКПО,1,8)
	|		ИНАЧЕ Док.Организация.КодПоОКПО
	|	КОНЕЦ КАК ОрганизацияКодПоОКПО,
	|	ВЫБОР
	|		КОГДА Док.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(Док.Организация.ИНН,1,10)
	|		ИНАЧЕ Док.Организация.ИНН
	|	КОНЕЦ КАК ОрганизацияИНН,
	|	Док.Организация.КПП,
	|	Док.Организация.КодПоОКПО КАК ОКПО,
	|	ГОД(Док.Дата) КАК Год,
	|	Док.Ответственный,
	|	Док.Комментарий,
	|	Док.ДолжностьРуководителя КАК РуководительДолжность,
	|	Док.Руководитель КАК Руководитель,
	|	ЕСТЬNULL(ДанныеПоФизлицам.КоличествоФизлиц, 0) КАК ЧислоЗастрахованныхЛиц,
	|	ЕСТЬNULL(ДанныеПоФизлицам.КоличествоИсходных, 0) КАК КолЗЛИсходных,
	|	ЕСТЬNULL(ДанныеПоФизлицам.КоличествоКорректирующих, 0) КАК КолЗЛКорректирующих,
	|	""Р"" КАК ПризнакТарифа,
	|	Док.НомерПачки,
	|	Док.ОтчетныйПериод,
	|	ЕСТЬNULL(КоличествоПачек.КоличествоКорректирующих, 0) КАК КолКорректирующихПачек,
	|	ЕСТЬNULL(КоличествоПачек.КоличествоИсходных, 0) КАК КолИсходныхПачек,
	|	ДанныеПоФизлицам.НачисленоСтраховаяИсходных,
	|	ДанныеПоФизлицам.НачисленоСтраховаяКорректирующих,
	|	ДанныеПоФизлицам.НачисленоНакопительнаяИсходных,
	|	ДанныеПоФизлицам.НачисленоНакопительнаяКорректирующих,
	|	ДанныеПоФизлицам.УплаченоСтраховая,
	|	ДанныеПоФизлицам.УплаченоНакопительная,
	|	Док.ИмяФайлаДляПФР КАК ИмяФайла
	|ИЗ
	|	Документ.ОписьПачекСЗВ_6 КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоФизлиц КАК ДанныеПоФизлицам
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО Док.Организация.ГоловнаяОрганизация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоПачек КАК КоличествоПачек
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоПачкам(Ссылка)
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пачки.ПачкаДокументов КАК Документ
	|ПОМЕСТИТЬ ВТДокументыСЗВ
	|ИЗ
	|	Документ.ОписьПачекСЗВ_6.ПачкиДокументов КАК Пачки
	|ГДЕ
	|	Пачки.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ФормыСЗВ.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Таблица,
	|	ФормыСЗВ.Ссылка,
	|	ФормыСЗВ.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ФормыСЗВ.НомерПачки КАК НомерПачки,
	|	СУММА(ФормыСЗВ.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(ФормыСЗВ.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(ФормыСЗВ.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(ФормыСЗВ.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ФормыСЗВ.КолЗЛ) КАК КолЗЛ,
	|	ФормыСЗВ.РегистрационныйНомерПФР,
	|	СУММА(ФормыСЗВ.ДоначисленоСтраховая) КАК ДоначисленоСтраховая,
	|	СУММА(ФормыСЗВ.ДоначисленоНакопительная) КАК ДоначисленоНакопительная,
	|	ФормыСЗВ.ИмяФайла,
	|	СУММА(ФормыСЗВ.ДоУплаченоНакопительная) КАК ДоУплаченоНакопительная,
	|	СУММА(ФормыСЗВ.ДоУплаченоСтраховая) КАК ДоУплаченоСтраховая
	|ИЗ
	|	(ВЫБРАТЬ
	|		ФормыСЗВ6_2.Ссылка.ТипСведенийСЗВ КАК ТипСведенийСЗВ,
	|		ФормыСЗВ6_2.Ссылка КАК Ссылка,
	|		ФормыСЗВ6_2.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|		ФормыСЗВ6_2.Ссылка.НомерПачки КАК НомерПачки,
	|		ФормыСЗВ6_2.Сотрудник КАК КолЗЛ,
	|		ФормыСЗВ6_2.НачисленоСтраховая КАК НачисленоСтраховая,
	|		ФормыСЗВ6_2.УплаченоСтраховая КАК УплаченоСтраховая,
	|		ФормыСЗВ6_2.НачисленоНакопительная КАК НачисленоНакопительная,
	|		ФормыСЗВ6_2.УплаченоНакопительная КАК УплаченоНакопительная,
	|		ФормыСЗВ6_2.ДоначисленоСтраховая КАК ДоначисленоСтраховая,
	|		ФормыСЗВ6_2.ДоначисленоНакопительная КАК ДоначисленоНакопительная,
	|		ФормыСЗВ6_2.Ссылка.Организация.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|		ФормыСЗВ6_2.Ссылка.ИмяФайлаДляПФР КАК ИмяФайла,
	|		ФормыСЗВ6_2.ДоУплаченоНакопительная КАК ДоУплаченоНакопительная,
	|		ФормыСЗВ6_2.ДоУплаченоСтраховая КАК ДоУплаченоСтраховая
	|	ИЗ
	|		ВТДокументыСЗВ КАК ДокументыСЗВ
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.Сотрудники КАК ФормыСЗВ6_2
	|			ПО ДокументыСЗВ.Документ = ФормыСЗВ6_2.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ФормыСЗВ6_4.Ссылка.ТипСведенийСЗВ,
	|		ФормыСЗВ6_4.Ссылка,
	|		ФормыСЗВ6_4.Ссылка.КатегорияЗастрахованныхЛиц,
	|		ФормыСЗВ6_4.Ссылка.НомерПачки,
	|		ФормыСЗВ6_4.Сотрудник,
	|		ФормыСЗВ6_4.НачисленоСтраховая,
	|		ФормыСЗВ6_4.УплаченоСтраховая,
	|		ФормыСЗВ6_4.НачисленоНакопительная,
	|		ФормыСЗВ6_4.УплаченоНакопительная,
	|		ФормыСЗВ6_4.ДоначисленоСтраховая,
	|		ФормыСЗВ6_4.ДоначисленоНакопительная,
	|		ФормыСЗВ6_4.Ссылка.Организация.РегистрационныйНомерПФР,
	|		ФормыСЗВ6_4.Ссылка.ИмяФайлаДляПФР,
	|		ФормыСЗВ6_4.ДоУплаченоНакопительная,
	|		ФормыСЗВ6_4.ДоУплаченоСтраховая
	|	ИЗ
	|		ВТДокументыСЗВ КАК ДокументыСЗВ
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ФормыСЗВ6_4
	|			ПО ДокументыСЗВ.Документ = ФормыСЗВ6_4.Ссылка) КАК ФормыСЗВ
	|
	|СГРУППИРОВАТЬ ПО
	|	ФормыСЗВ.Ссылка,
	|	ФормыСЗВ.КатегорияЗастрахованныхЛиц,
	|	ФормыСЗВ.НомерПачки,
	|	ФормыСЗВ.РегистрационныйНомерПФР,
	|	ФормыСЗВ.ИмяФайла,
	|	ВЫБОР
	|		КОГДА ФормыСЗВ.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Таблица,
	|	КатегорияЗастрахованныхЛиц,
	|	НомерПачки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции	

Процедура ЗаполнитьДаннныеОВзносах(Дата, ОтчетныйПериод, Организация, СписокДокументов)Экспорт
	
	
КонецПроцедуры	

////////////////////////////////////////////////////////////////////////////////
// Для обеспечения формирования выходного файла

Функция СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПоПачкам)
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70_2010XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = СправкиПоНДФЛ.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);

	ТипДокументовПачки = "ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ";
	
	// Создаем начальное дерево
	ДеревоВыгрузки = СправкиПоНДФЛ.СоздатьДеревоXML();
	УзелПФР = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ФайлПФР", "", );
	УчетСтраховыхВзносов.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайла);
	// Добавляем ветки ПачкаВходящихДокументов и ВходящаяОпись
	НаборВходящейОписи = "";
	УзелПачкаВходящихДокументов = УчетСтраховыхВзносов.ЗаполнитьНаборЗаписейВходящаяОписьСЗВ6(УзелПФР, ДеревоФормата, ТипДокументовПачки, ВыборкаПоШапкеДокумента, 1, 1, "ВХОДЯЩАЯ_ОПИСЬ_ДЛЯ_ОПИСИ",НаборВходящейОписи);
	
	ДанныеВходящейОписи = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(НаборВходящейОписи);
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ",""), НаборВходящейОписи);
	
	
	ФорматОписи = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "ОПИСЬ_СВЕДЕНИЙ");
	
	ФорматОписи.НомерВПачке.Значение = 2;
	ФорматОписи.Страхователь.Значение = ДанныеВходящейОписи.СоставительПачки.Значение;
	ЗаполнитьЗначенияСвойств(ФорматОписи.ОтчетныйПериод.Значение,УчетСтраховыхВзносов.ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.ОтчетныйПериод));
	ФорматОписи.ЧислоИсходныхПачек.Значение = ВыборкаПоШапкеДокумента.КолИсходныхПачек;
	ФорматОписи.ЧислоКорректирующихПачек.Значение = ВыборкаПоШапкеДокумента.КолКорректирующихПачек;
	ФорматОписи.ДатаЗаполнения.Значение = ДанныеВходящейОписи.ДатаСоставления.Значение;
	
	ФорматСведенияОбИсходныхСведениях = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматОписи.СведенияОбИсходныхСведениях.Значение);
	ФорматОписи.Удалить("СведенияОбИсходныхСведениях");
	
	ФорматСведенияОКорректирующихСведениях = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматОписи.СведенияОКорректирующихСведениях.Значение);
	ФорматОписи.Удалить("СведенияОКорректирующихСведениях");
	
	УзелОписи = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелОписи, ФорматОписи);
	
	
	Пока ВыборкаПоПачкам.СледующийПоЗначениюПоля("Таблица") Цикл
		
		ФорматБлока = ?(ВыборкаПоПачкам.Таблица = 1,ФорматСведенияОбИсходныхСведениях,ФорматСведенияОКорректирующихСведениях);
		ТегБлока = ?(ВыборкаПоПачкам.Таблица = 1,"СведенияОбИсходныхСведениях","СведенияОкорректирующихСведениях");
		
		КоличествоЗЛСтрахователя = 0;
		НачисленоСтраховаяСтрахователя = 0;
		НачисленоНакопительнаяСтрахователя = 0;
		ДоначисленоСтраховаяСтрахователя = 0;
		ДоначисленоНакопительнаяСтрахователя = 0;
		УплаченоСтраховаяСтрахователя = 0;
		УплаченоНакопительнаяСтрахователя = 0;
		ДоУплаченоСтраховаяСтрахователя = 0;
		ДоУплаченоНакопительнаяСтрахователя = 0;
		НомерСтроки = 0;
		
		Пока ВыборкаПоПачкам.СледующийПоЗначениюПоля("КатегорияЗастрахованныхЛиц") Цикл
			КоличествоЗЛКатегории = 0;
			НачисленоСтраховаяКатегории = 0;
			ДоначисленоСтраховаяКатегории = 0;
			НачисленоНакопительнаяКатегории = 0;
			ДоначисленоНакопительнаяКатегории = 0;
			УплаченоСтраховаяКатегории = 0;
			УплаченоНакопительнаяКатегории = 0;
			ДоУплаченоСтраховаяКатегории = 0;
			ДоУплаченоНакопительнаяКатегории = 0;

			Пока ВыборкаПоПачкам.Следующий() Цикл
				
				НаборЗаписей = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматБлока);
				НомерСтроки = НомерСтроки + 1;
				
				НаборЗаписей.ПорядковыйНомер.Значение = НомерСтроки;
				НаборЗаписей.ТипСтрокиОсведениях.Значение = "ПО ПАЧКЕ";
				НаборЗаписей.ИмяФайла.Значение = ВыборкаПоПачкам.ИмяФайла;
				НаборЗаписей.КодКатегории.Значение = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоПачкам.КатегорияЗастрахованныхЛиц);
				НаборЗаписей.КоличествоЗЛ.Значение = ВыборкаПоПачкам.КолЗЛ;
				
				НачисленоСтраховая = ВыборкаПоПачкам.НачисленоСтраховая;
				НачисленоНакопительная = ВыборкаПоПачкам.НачисленоНакопительная;
				ДоначисленоСтраховая = ВыборкаПоПачкам.ДоначисленоСтраховая;
				ДоначисленоНакопительная = ВыборкаПоПачкам.ДоначисленоНакопительная;
				УплаченоСтраховая = ВыборкаПоПачкам.УплаченоСтраховая;
				УплаченоНакопительная = ВыборкаПоПачкам.УплаченоНакопительная;
				ДоУплаченоСтраховая = ВыборкаПоПачкам.ДоУплаченоСтраховая;
				ДоУплаченоНакопительная = ВыборкаПоПачкам.ДоУплаченоНакопительная;

				
				Если ВыборкаПоПачкам.Таблица = 1 Тогда
					УчетСтраховыхВзносов.ВписатьВзносыВНаборДанных(НаборЗаписей, НачисленоСтраховая, УплаченоСтраховая, НачисленоНакопительная, УплаченоНакопительная);
				Иначе
					НаборЗаписей.ДоначисленоНаСтраховую.Значение = ДоначисленоСтраховая;
					НаборЗаписей.ДоначисленоНаНакопительную.Значение = ДоначисленоНакопительная;
					НаборЗаписей.ДоуплаченоНаСтраховую.Значение = ДоУплаченоСтраховая;
					НаборЗаписей.ДоуплаченоНаНакопительную.Значение = ДоУплаченоНакопительная;
				КонецЕсли;
				
				СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелОписи, ТегБлока,""), НаборЗаписей);
				
				КоличествоЗЛКатегории = КоличествоЗЛКатегории + ВыборкаПоПачкам.КолЗЛ;
				КоличествоЗЛСтрахователя = КоличествоЗЛСтрахователя + ВыборкаПоПачкам.КолЗЛ;
				НачисленоСтраховаяСтрахователя = НачисленоСтраховаяСтрахователя + НачисленоСтраховая;
				НачисленоНакопительнаяСтрахователя = НачисленоНакопительнаяСтрахователя + НачисленоНакопительная;
				НачисленоСтраховаяКатегории = НачисленоСтраховаяКатегории + НачисленоСтраховая;
				НачисленоНакопительнаяКатегории = НачисленоНакопительнаяКатегории + НачисленоНакопительная;
				УплаченоСтраховаяСтрахователя = УплаченоСтраховаяСтрахователя + УплаченоСтраховая;
				УплаченоНакопительнаяСтрахователя = УплаченоНакопительнаяСтрахователя + УплаченоНакопительная;
				УплаченоСтраховаяКатегории = УплаченоСтраховаяКатегории + УплаченоСтраховая;
				УплаченоНакопительнаяКатегории = УплаченоНакопительнаяКатегории + УплаченоНакопительная;
				ДоначисленоСтраховаяСтрахователя = ДоначисленоСтраховаяСтрахователя + ДоначисленоСтраховая;
				ДоначисленоСтраховаяКатегории = ДоначисленоСтраховаяКатегории + ДоначисленоСтраховая;
				ДоначисленоНакопительнаяСтрахователя = ДоначисленоНакопительнаяСтрахователя + ДоначисленоНакопительная;
				ДоначисленоНакопительнаяКатегории = ДоначисленоНакопительнаяКатегории + ДоначисленоНакопительная;
				ДоУплаченоСтраховаяСтрахователя = ДоУплаченоСтраховаяСтрахователя + ДоУплаченоСтраховая;
				ДоУплаченоНакопительнаяСтрахователя = ДоУплаченоНакопительнаяСтрахователя + ДоУплаченоНакопительная;
				ДоУплаченоСтраховаяКатегории = ДоУплаченоСтраховаяКатегории + ДоУплаченоСтраховая;
				ДоУплаченоНакопительнаяКатегории = ДоУплаченоНакопительнаяКатегории + ДоУплаченоНакопительная;
				
			КонецЦикла;
			
			// Итоги по категории
			НаборЗаписей = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматБлока);
			НаборЗаписей.Удалить("ИмяФайла");
			
			НомерСтроки = НомерСтроки + 1;
			
			НаборЗаписей.ПорядковыйНомер.Значение = НомерСтроки;
			НаборЗаписей.ТипСтрокиОсведениях.Значение = "ПО КАТЕГОРИИ";
			НаборЗаписей.КодКатегории.Значение = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоПачкам.КатегорияЗастрахованныхЛиц);
			НаборЗаписей.КоличествоЗЛ.Значение = КоличествоЗЛКатегории;
			
			Если ВыборкаПоПачкам.Таблица = 1 Тогда
				УчетСтраховыхВзносов.ВписатьВзносыВНаборДанных(НаборЗаписей, НачисленоСтраховаяКатегории, УплаченоСтраховаяКатегории, НачисленоНакопительнаяКатегории, УплаченоНакопительнаяКатегории);
			Иначе
				НаборЗаписей.ДоначисленоНаСтраховую.Значение = ДоначисленоСтраховаяКатегории;
				НаборЗаписей.ДоначисленоНаНакопительную.Значение = ДоначисленоНакопительнаяКатегории;
				НаборЗаписей.ДоуплаченоНаСтраховую.Значение = ДоУплаченоСтраховаяКатегории;
				НаборЗаписей.ДоуплаченоНаНакопительную.Значение = ДоУплаченоНакопительнаяКатегории;
			КонецЕсли;
			
			СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелОписи, ТегБлока,""), НаборЗаписей);
			
		КонецЦикла;
		
		// Итоги по страхователю
		
		НаборЗаписей = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматБлока);
		НаборЗаписей.Удалить("ИмяФайла");
		НаборЗаписей.Удалить("КодКатегории");
		
		НомерСтроки = НомерСтроки + 1;
		
		НаборЗаписей.ПорядковыйНомер.Значение = НомерСтроки;
		НаборЗаписей.ТипСтрокиОсведениях.Значение = "ПО СТРАХОВАТЕЛЮ";
		НаборЗаписей.КоличествоЗЛ.Значение = КоличествоЗЛСтрахователя;
		
		Если ВыборкаПоПачкам.Таблица = 1 Тогда
			УчетСтраховыхВзносов.ВписатьВзносыВНаборДанных(НаборЗаписей, НачисленоСтраховаяСтрахователя, УплаченоСтраховаяСтрахователя, НачисленоНакопительнаяСтрахователя, УплаченоНакопительнаяСтрахователя);
		Иначе
			НаборЗаписей.ДоначисленоНаСтраховую.Значение = ДоначисленоСтраховаяСтрахователя;
			НаборЗаписей.ДоначисленоНаНакопительную.Значение = ДоначисленоНакопительнаяСтрахователя;
			НаборЗаписей.ДоуплаченоНаСтраховую.Значение = ДоУплаченоСтраховаяСтрахователя;
			НаборЗаписей.ДоуплаченоНаНакопительную.Значение = ДоУплаченоНакопительнаяСтрахователя;
		КонецЕсли;
		
		СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелОписи, ТегБлока,""), НаборЗаписей);
		
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML
	ТекстФайла = УчетСтраховыхВзносов.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	
	Возврат ТекстФайла
	
КонецФункции

Функция СформироватьФайлАДВ(Объект, ИмяФайла)Экспорт
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокумента(Объект.Ссылка).Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыборкаПоПачкам = СформироватьЗапросПоПачкам(Объект.Ссылка).Выбрать();
	
	ТекстФайла = СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПоПачкам);
	
	ИмяФайла = ВыборкаПоШапкеДокумента.ИмяФайла;
	
	Возврат ТекстФайла;
	
КонецФункции
///////////////////////////////////////////////////////////////////////////////
// Процедуры печати документа.

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета формировать табличный документ
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаАДВ_6_2") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ФормаАДВ_6_2",
			"Форма АДВ-6-2", СформироватьПечатнуюФормуАДВ6_2(МассивОбъектов[0], ОбъектыПечати));
	КонецЕсли;

КонецПроцедуры


Функция СформироватьПечатнуюФормуАДВ6_2(Документ, ОбъектыПечати)Экспорт
		
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокумента(Документ).Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	Макет = Документы.ОписьПачекСЗВ_6.ПолучитьМакет("ФормаАДВ_6_2");
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Опись_АДВ_6_2";
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.АвтоМасштаб = Истина;
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьСередина = Макет.ПолучитьОбласть("Середина");
	ОбластьСтрокаИсходных = Макет.ПолучитьОбласть("СтрокаИсходных");
	ОбластьСтрокаКорректирующих = Макет.ПолучитьОбласть("СтрокаКорректирующих");
	ОбластьПустаяТаблицаИсходных = Макет.ПолучитьОбласть("ПустаяТаблицаИсходных");
	ОбластьПустаяТаблицаКорректирующих = Макет.ПолучитьОбласть("ПустаяТаблицаКорректирующих");
	
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
	
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ВыборкаПоШапкеДокумента);
	ОбластьШапка.Параметры.ОрганизацияНаименованиеСокращенное = ВРег(ОбластьШапка.Параметры.ОрганизацияНаименованиеСокращенное);
	ЗаполнитьЗначенияСвойств(ОбластьСередина.Параметры, ВыборкаПоШапкеДокумента);
	ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ВыборкаПоШапкеДокумента);
	
	ОтчетныйПериод = ВыборкаПоШапкеДокумента.ОтчетныйПериод;
	
	ОбластьШапка.Параметры.ЭтоКварталОтчетногоГода   = Месяц(ОтчетныйПериод) = 1;
	ОбластьШапка.Параметры.ЭтоПолугодиеОтчетногоГода = Месяц(ОтчетныйПериод) = 4;
	ОбластьШапка.Параметры.Это9МесяцевОтчетногоГода  = Месяц(ОтчетныйПериод) = 7;
	ОбластьШапка.Параметры.ЭтоВесьОтчетныйГод        = Месяц(ОтчетныйПериод) = 10;
	
	ОбластьШапка.Параметры.ОтчетныйГод = Год(ОтчетныйПериод);
	
	ДокументРезультат.Вывести(ОбластьШапка);

	ВыборкаПоПачкам = СформироватьЗапросПоПачкам(Документ).Выбрать();
	
	Если ВыборкаПоШапкеДокумента.КолИсходныхПачек = 0 Тогда
		ДокументРезультат.Вывести(ОбластьПустаяТаблицаИсходных);
	КонецЕсли;

	НачисленоСтраховаяСтрахователя = 0;
	НачисленоНакопительнаяСтрахователя = 0;
	ДоначисленоСтраховаяСтрахователя = 0;
	ДоначисленоНакопительнаяСтрахователя = 0;
	УплаченоСтраховаяСтрахователя = 0;
	УплаченоНакопительнаяСтрахователя = 0;
	
	Пока ВыборкаПоПачкам.СледующийПоЗначениюПоля("Таблица") Цикл
		
		ВыводимаяОбласть = ?(ВыборкаПоПачкам.Таблица = 1, ОбластьСтрокаИсходных, ОбластьСтрокаКорректирующих);
		Если ВыборкаПоПачкам.Таблица = 2 Тогда
			ОбластьСередина.Параметры.НачисленоСтраховая = НачисленоСтраховаяСтрахователя;
			ОбластьСередина.Параметры.НачисленоНакопительная = НачисленоНакопительнаяСтрахователя;
			ОбластьСередина.Параметры.УплаченоСтраховая = УплаченоСтраховаяСтрахователя;
			ОбластьСередина.Параметры.УплаченоНакопительная = УплаченоНакопительнаяСтрахователя;
			ДокументРезультат.Вывести(ОбластьСередина);
			НачисленоСтраховаяСтрахователя = 0;
			НачисленоНакопительнаяСтрахователя = 0;
			ДоначисленоСтраховаяСтрахователя = 0;
			ДоначисленоНакопительнаяСтрахователя = 0;
			УплаченоСтраховаяСтрахователя = 0;
			УплаченоНакопительнаяСтрахователя = 0;
		КонецЕсли;
		
		
		НомерСтроки = 0;
		Пока ВыборкаПоПачкам.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(ВыводимаяОбласть.Параметры, ВыборкаПоПачкам, "КолЗЛ");
			
			НачисленоСтраховая = ВыборкаПоПачкам.НачисленоСтраховая;
			НачисленоНакопительная = ВыборкаПоПачкам.НачисленоНакопительная;
			ДоначисленоСтраховая = ВыборкаПоПачкам.ДоначисленоСтраховая;
			ДоначисленоНакопительная = ВыборкаПоПачкам.ДоначисленоНакопительная;
			УплаченоСтраховая = ВыборкаПоПачкам.УплаченоСтраховая;
			УплаченоНакопительная = ВыборкаПоПачкам.УплаченоНакопительная;
			
			Если ВыборкаПоПачкам.Таблица = 1 Тогда
				ВыводимаяОбласть.Параметры.НачисленоСтраховая = НачисленоСтраховая;
				ВыводимаяОбласть.Параметры.НачисленоНакопительная = НачисленоНакопительная;
				ВыводимаяОбласть.Параметры.УплаченоСтраховая = УплаченоСтраховая;
				ВыводимаяОбласть.Параметры.УплаченоНакопительная = УплаченоНакопительная;
			Иначе
				ВыводимаяОбласть.Параметры.ДоНачисленоСтраховая = ДоначисленоСтраховая;
				ВыводимаяОбласть.Параметры.ДоНачисленоНакопительная = ДоначисленоНакопительная;
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			ВыводимаяОбласть.Параметры.НомерСтроки = НомерСтроки;
			ВыводимаяОбласть.Параметры.ИмяФайла = ВыборкаПоПачкам.ИмяФайла;
			ВыводимаяОбласть.Параметры.КодКатегории = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоПачкам.КатегорияЗастрахованныхЛиц);
			ДокументРезультат.Вывести(ВыводимаяОбласть);
			
			НачисленоСтраховаяСтрахователя = НачисленоСтраховаяСтрахователя + НачисленоСтраховая;
			НачисленоНакопительнаяСтрахователя = НачисленоНакопительнаяСтрахователя + НачисленоНакопительная;
			УплаченоСтраховаяСтрахователя = УплаченоСтраховаяСтрахователя + УплаченоСтраховая;
			УплаченоНакопительнаяСтрахователя = УплаченоНакопительнаяСтрахователя + УплаченоНакопительная;
			ДоначисленоСтраховаяСтрахователя = ДоначисленоСтраховаяСтрахователя + ДоначисленоСтраховая;
			ДоначисленоНакопительнаяСтрахователя = ДоначисленоНакопительнаяСтрахователя + ДоначисленоНакопительная;
		КонецЦикла;
	КонецЦикла;
	
	Если ВыборкаПоШапкеДокумента.КолКорректирующихПачек = 0 Тогда
		ОбластьСередина.Параметры.НачисленоСтраховая = НачисленоСтраховаяСтрахователя;
		ОбластьСередина.Параметры.НачисленоНакопительная = НачисленоНакопительнаяСтрахователя;
		ОбластьСередина.Параметры.УплаченоСтраховая = УплаченоСтраховаяСтрахователя;
		ОбластьСередина.Параметры.УплаченоНакопительная = УплаченоНакопительнаяСтрахователя;
		ДокументРезультат.Вывести(ОбластьСередина);
		ДокументРезультат.Вывести(ОбластьПустаяТаблицаКорректирующих);
	Иначе
		ОбластьПодвал.Параметры.ДоНачисленоСтраховая = ДоначисленоСтраховаяСтрахователя;
		ОбластьПодвал.Параметры.ДоНачисленоНакопительная = ДоначисленоНакопительнаяСтрахователя;
	КонецЕсли;
		
	ДокументРезультат.Вывести(ОбластьПодвал);
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, Документ);
	
	Возврат ДокументРезультат;
КонецФункции		
	
Процедура ЗаполнитьСпискиПечатуемыхДокументов(ОписьСсылка, МассивСЗВ6_2)Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ОписьСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов
	|ИЗ
	|	Документ.ОписьПачекСЗВ_6.ПачкиДокументов КАК ОписьПачекСЗВ_6ПачкиДокументов
	|ГДЕ
	|	ОписьПачекСЗВ_6ПачкиДокументов.Ссылка = &Ссылка
	|	И ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов ССЫЛКА Документ.РеестрСЗВ_6_2";
	МассивСЗВ6_2 =  Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПачкаДокументов");
	
КонецПроцедуры	


Функция ДокументыОписи(Опись, ТипСведенийСЗВ = Неопределено, СписокКорректируемыхПериодов = Неопределено) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Опись);
	Запрос.УстановитьПараметр("ТипСведений", ТипСведенийСЗВ);
	Запрос.УстановитьПараметр("СписокКорректируемыхПериодов", СписокКорректируемыхПериодов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов КАК Ссылка
	|ИЗ
	|	Документ.ОписьПачекСЗВ_6.ПачкиДокументов КАК КомплектыОтчетностиПерсучетаСписокПачекСЗВ
	|ГДЕ
	|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.Ссылка = &Ссылка
	|	И &Условие";
	
	СтрокаУсловие = "";
	Если ТипСведенийСЗВ <> Неопределено Тогда
		СтрокаУсловие = СтрокаУсловие + " И КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов.ТипСведенийСЗВ = &ТипСведений";
	КонецЕсли;
	
	Если СписокКорректируемыхПериодов <> Неопределено Тогда 
		СтрокаУсловие = СтрокаУсловие + " И КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов.КорректируемыйПериод В (&СписокКорректируемыхПериодов)";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &Условие", СтрокаУсловие);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивСсылок = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		МассивСсылок.Добавить(Выборка.Ссылка);		
	КонецЦикла;	
	
	Возврат МассивСсылок;
	
КонецФункции		

#КонецЕсли