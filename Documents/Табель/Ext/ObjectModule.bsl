#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.Табель.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	УправлениеНебольшойФирмойСервер.ОтразитьТабель(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивИсключений = Новый Массив;
	МассивИсключений.Добавить(Справочники.ВидыРабочегоВремени.ВыходныеДни);
	МассивИсключений.Добавить(Справочники.ВидыРабочегоВремени.ОсновнойОтпуск);
	
	Если СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ПоДням Тогда
		
		Для каждого СтрокаТЧ Из ОтработанноеВремяПоДням Цикл
			
			Для Счетчик = 1 По 31 Цикл
			
				Если ЗначениеЗаполнено(СтрокаТЧ["ПервыйВидВремени" + Счетчик])
					И НЕ ЗначениеЗаполнено(СтрокаТЧ["ПервыйЧасы" + Счетчик]) Тогда
					
					Если МассивИсключений.Найти(СтрокаТЧ["ПервыйВидВремени" + Счетчик]) = Неопределено Тогда 
					
						УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, 
						"Не указано количество часов по виду времени.",
						"ОтработанноеВремяПоДням",
						СтрокаТЧ.НомерСтроки,
						"ПервыйЧасы" + Счетчик,
						Отказ);
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаТЧ["ВторойВидВремени" + Счетчик])
					И НЕ ЗначениеЗаполнено(СтрокаТЧ["ВторойЧасы" + Счетчик]) Тогда
					
					Если МассивИсключений.Найти(СтрокаТЧ["ВторойВидВремени" + Счетчик]) = Неопределено Тогда 
					
						УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, 
						"Не указано количество часов по виду времени.",
						"ОтработанноеВремяПоДням",
						СтрокаТЧ.НомерСтроки,
						"ВторойЧасы" + Счетчик,
						Отказ);
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаТЧ["ТретийВидВремени" + Счетчик])
					И НЕ ЗначениеЗаполнено(СтрокаТЧ["ТретийЧасы" + Счетчик]) Тогда
					
					Если МассивИсключений.Найти(СтрокаТЧ["ТретийВидВремени" + Счетчик]) = Неопределено Тогда 
					
						УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, 
						"Не указано количество часов по виду времени.",
						"ОтработанноеВремяПоДням",
						СтрокаТЧ.НомерСтроки,
						"ТретийЧасы" + Счетчик,
						Отказ);
						
					КонецЕсли;
					
				КонецЕсли;
			
			КонецЦикла;		
			
		КонецЦикла; 
		
	Иначе	
		
		Для каждого СтрокаТЧ Из ОтработанноеВремяЗаПериод Цикл
			Для Счетчик = 1 По 6 Цикл
			
				Если ЗначениеЗаполнено(СтрокаТЧ["ВидВремени" + Счетчик])
					И НЕ ЗначениеЗаполнено(СтрокаТЧ["Дней" + Счетчик])
					И НЕ ЗначениеЗаполнено(СтрокаТЧ["Часов" + Счетчик]) Тогда
					УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, 
					"Не указано количество дней и часов по виду времени.",
					"ОтработанноеВремяЗаПериод",
					СтрокаТЧ.НомерСтроки,
					"ВидВремени" + Счетчик,
					Отказ);
				КонецЕсли;
			
			КонецЦикла;		
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли