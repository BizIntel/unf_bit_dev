#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Проведение

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаПланПродаж, СтруктураДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПланПродажЗапасы.ДатаПланирования КАК Период,
	|	ПланПродажЗапасы.Ссылка.СценарийПланирования КАК СценарийПланирования,
	|	ПланПродажЗапасы.ОбъектПланирования КАК ОбъектПланирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ПланПродажЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	&Организация КАК Организация,
	|	ПланПродажЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПланПродажЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ПланПродажЗапасы.Ссылка КАК ДокументПланирования,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПланПродажЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ПланПродажЗапасы.Количество
	|		ИНАЧЕ ПланПродажЗапасы.Количество * ПланПродажЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	ВЫРАЗИТЬ(ПланПродажЗапасы.Сумма * КурсыВалютДокумента.Курс * КурсВалютыУчета.Кратность / (КурсВалютыУчета.Курс * КурсыВалютДокумента.Кратность) КАК ЧИСЛО(15, 2)) КАК Сумма
	|ИЗ
	|	Документ.ПланПродаж.Запасы КАК ПланПродажЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютДокумента
	|		ПО ПланПродажЗапасы.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта = &Валюта) КАК КурсВалютыУчета
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ПланПродажЗапасы.Ссылка = &Ссылка
	|	И (ПланПродажЗапасы.Количество > 0
	|			ИЛИ ПланПродажЗапасы.Сумма > 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланПродажЗапасы.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПланПродаж);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("Валюта", Константы.ВалютаУчета.Получить());
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПланыПродаж", Результат);
	
КонецПроцедуры

#КонецОбласти

#Область ФоновоеЗаполнение

Процедура ПолучитьДанныеЗаполнения(Параметры, АдресРезультата) Экспорт
	
	СКД = Документы.ПланПродаж.ПолучитьМакет(Параметры.ИмяМакетаСКД);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Параметры.НастройкиКомпоновкиДанных,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);

	Результат = Новый ТаблицаЗначений;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли