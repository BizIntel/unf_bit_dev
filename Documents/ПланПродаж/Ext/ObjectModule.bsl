#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	
	ДозаполнитьПоУмолчанию();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = Запасы.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.ПланПродаж.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	УправлениеНебольшойФирмойСервер.ОтразитьПланыПродаж(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДозаполнитьПоУмолчанию()
	
	Если Не ЗначениеЗаполнено(СценарийПланирования) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	ПланПродаж.СценарийПланирования КАК Сценарий,
			|	ПланПродаж.Дата КАК Дата,
			|	NULL КАК Наименование
			|ИЗ
			|	Документ.ПланПродаж КАК ПланПродаж
			|ГДЕ
			|	ПланПродаж.СценарийПланирования <> ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический)
			|	И ПланПродаж.ПометкаУдаления = ЛОЖЬ
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	СценарииПланирования.Ссылка,
			|	NULL,
			|	СценарииПланирования.Наименование
			|ИЗ
			|	Справочник.СценарииПланирования КАК СценарииПланирования
			|ГДЕ
			|	СценарииПланирования.Ссылка <> ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический)
			|	И СценарииПланирования.ПометкаУдаления = ЛОЖЬ
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата УБЫВ,
			|	Наименование";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			СценарийПланирования = Выборка.Сценарий;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СценарийПланирования) Тогда
		
		Периодичность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СценарийПланирования, "Периодичность");
		ПланированиеКлиентСервер.УстановитьНачалоОкончаниеПериодаПланирования(Периодичность, НачалоПланирования, ОкончаниеПланирования);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли