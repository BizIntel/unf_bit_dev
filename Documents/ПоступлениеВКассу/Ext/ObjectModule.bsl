#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Процедура заполняет расшифровку платежа.
//
Процедура ЗаполнитьРасшифровкуПлатежа(ОстаткиПолучатьНаДатуДокумента = Ложь) Экспорт
	
	Компания = УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация);
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = Организация.СтавкаНДСПоУмолчанию;
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
	Иначе
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
	КонецЕсли;
	
	СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ВалютаДенежныхСредств));
	
	КурсВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Курс
	);
	КратностьВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Кратность
	);
	
	// Заполнение расшифровки расчетов по умолчанию.
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	РасчетыСПокупателямиОстатки.Организация КАК Организация,
	|	РасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|	РасчетыСПокупателямиОстатки.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПокупателямиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	РасчетыСПокупателямиОстатки.ТипРасчетов КАК ТипРасчетов,
	|	СУММА(РасчетыСПокупателямиОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(РасчетыСПокупателямиОстатки.СуммаВалОстаток) КАК СуммаВалОстаток,
	|	РасчетыСПокупателямиОстатки.Документ.Дата КАК ДокументДата,
	|	СУММА(ВЫРАЗИТЬ(РасчетыСПокупателямиОстатки.СуммаВалОстаток * КурсыВалютРасчетов.Курс * КурсыВалютДокумента.Кратность / (КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаВалДокумента,
	|	КурсыВалютДокумента.Курс КАК КурсДенежныхСредств,
	|	КурсыВалютДокумента.Кратность КАК КратностьДенежныхСредств,
	|	КурсыВалютРасчетов.Курс КАК Курс,
	|	КурсыВалютРасчетов.Кратность КАК Кратность,
	|	РасчетыСПокупателямиОстатки.Договор.СтатьяДДСПоУмолчанию КАК СтатьяДДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыСПокупателямиОстатки.Организация КАК Организация,
	|		РасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|		РасчетыСПокупателямиОстатки.Договор КАК Договор,
	|		РасчетыСПокупателямиОстатки.Документ КАК Документ,
	|		РасчетыСПокупателямиОстатки.Заказ КАК Заказ,
	|		РасчетыСПокупателямиОстатки.ТипРасчетов КАК ТипРасчетов,
	|		ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|		ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями.Остатки(
	|				&ПериодОстатков,
	|				Организация = &Организация
	|					И Контрагент = &Контрагент
	|					И (НЕ &НуженОтборПоВидуДоговора
	|						ИЛИ &НуженОтборПоВидуДоговора
	|							И Договор.ВидДоговора В (&СписокВидовДоговоров))
	|					И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПокупателямиОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаРасчетыСПокупателями.Организация,
	|		ДвиженияДокументаРасчетыСПокупателями.Контрагент,
	|		ДвиженияДокументаРасчетыСПокупателями.Договор,
	|		ДвиженияДокументаРасчетыСПокупателями.Документ,
	|		ДвиженияДокументаРасчетыСПокупателями.Заказ,
	|		ДвиженияДокументаРасчетыСПокупателями.ТипРасчетов,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.Сумма, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.Сумма, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.СуммаВал, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.СуммаВал, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями КАК ДвиженияДокументаРасчетыСПокупателями
	|	ГДЕ
	|		ДвиженияДокументаРасчетыСПокупателями.Регистратор = &Ссылка
	|		И ДвиженияДокументаРасчетыСПокупателями.Период <= &Период
	|		И ДвиженияДокументаРасчетыСПокупателями.Организация = &Организация
	|		И ДвиженияДокументаРасчетыСПокупателями.Контрагент = &Контрагент
	|		И ДвиженияДокументаРасчетыСПокупателями.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПокупателямиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютДокумента
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсыВалютРасчетов
	|		ПО РасчетыСПокупателямиОстатки.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|ГДЕ
	|	РасчетыСПокупателямиОстатки.СуммаВалОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПокупателямиОстатки.Организация,
	|	РасчетыСПокупателямиОстатки.Контрагент,
	|	РасчетыСПокупателямиОстатки.Договор,
	|	РасчетыСПокупателямиОстатки.Документ,
	|	РасчетыСПокупателямиОстатки.Заказ,
	|	РасчетыСПокупателямиОстатки.ТипРасчетов,
	|	РасчетыСПокупателямиОстатки.Документ.Дата,
	|	КурсыВалютДокумента.Курс,
	|	КурсыВалютДокумента.Кратность,
	|	КурсыВалютРасчетов.Курс,
	|	КурсыВалютРасчетов.Кратность,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПокупателямиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.Заказпокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	РасчетыСПокупателямиОстатки.Договор.СтатьяДДСПоУмолчанию,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументДата";
		
	Запрос.УстановитьПараметр("Организация", Компания);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Валюта", ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПериодОстатков", ?(ОстаткиПолучатьНаДатуДокумента, Новый Граница(КонецДня(Дата), ВидГраницы.Включая), Неопределено));
	
	НуженОтборПоДоговорам = УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов();
	СписокВидовДоговоров = Справочники.ДоговорыКонтрагентов.ПолучитьСписокВидовДоговораДляДокумента(Ссылка, ВидОперации);
	Запрос.УстановитьПараметр("СписокВидовДоговоров", СписокВидовДоговоров);
	Запрос.УстановитьПараметр("НуженОтборПоВидуДоговора", (НуженОтборПоДоговорам И Контрагент.ВестиРасчетыПоДоговорам));
	
	ДоговорПоУмолчанию = Справочники.ДоговорыКонтрагентов.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(
		Контрагент,
		Организация,
		СписокВидовДоговоров
	);
	
	СтруктураКурсВалютыДоговораПоУмолчанию = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(
		Дата,
		Новый Структура("Валюта", ДоговорПоУмолчанию.ВалютаРасчетов)
	);
	
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	
	РасшифровкаПлатежа.Очистить();
	
	СуммаОсталосьРаспределить = СуммаДокумента;
	
	Пока СуммаОсталосьРаспределить > 0 Цикл
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
			
			Если ВыборкаРезультатаЗапроса.СуммаВалДокумента <= СуммаОсталосьРаспределить Тогда // сумма остатка меньше или равна чем осталось распределить
				
				НоваяСтрока.СуммаРасчетов = ВыборкаРезультатаЗапроса.СуммаВалОстаток;
				НоваяСтрока.СуммаПлатежа = ВыборкаРезультатаЗапроса.СуммаВалДокумента;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = СуммаОсталосьРаспределить - ВыборкаРезультатаЗапроса.СуммаВалДокумента;
				
			Иначе // сумма остатка больше чем нужно распределить
				
				НоваяСтрока.СуммаРасчетов = УправлениеНебольшойФирмойСервер.ПересчитатьИзВалютыВВалюту(
					СуммаОсталосьРаспределить,
					ВыборкаРезультатаЗапроса.КурсДенежныхСредств,
					ВыборкаРезультатаЗапроса.Курс,
					ВыборкаРезультатаЗапроса.КратностьДенежныхСредств,
					ВыборкаРезультатаЗапроса.Кратность
				);
				НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = 0;
				
			КонецЕсли;
			
		Иначе
			
			НоваяСтрока.Договор = ДоговорПоУмолчанию;
			НоваяСтрока.Курс = ?(
				СтруктураКурсВалютыДоговораПоУмолчанию.Курс = 0,
				1,
				СтруктураКурсВалютыДоговораПоУмолчанию.Курс
			);
			НоваяСтрока.Кратность = ?(
				СтруктураКурсВалютыДоговораПоУмолчанию.Кратность = 0,
				1,
				СтруктураКурсВалютыДоговораПоУмолчанию.Кратность
			);
			НоваяСтрока.СуммаРасчетов = УправлениеНебольшойФирмойСервер.ПересчитатьИзВалютыВВалюту(
				СуммаОсталосьРаспределить,
				КратностьВалютыДС,
				НоваяСтрока.Курс,
				КратностьВалютыДС,
				НоваяСтрока.Кратность
			);
			НоваяСтрока.ПризнакАванса = Истина;
			НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
			НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
			НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
			СуммаОсталосьРаспределить = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		РасшифровкаПлатежа.Добавить();
		РасшифровкаПлатежа[0].СуммаПлатежа = СуммаДокумента;
	КонецЕсли;
	
	СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьРасшифровкуПлатежа()

// Процедура заполняет расшифровку платежа.
//
Процедура ЗаполнитьРасшифровкуПлатежаАвтоЗачетДолгов() Экспорт
	
	ОстаткиПолучатьНаДатуДокумента = ДополнительныеСвойства.Свойство("ЭтоРеструктуризацияВзаиморасчетов") И ДополнительныеСвойства.ЭтоРеструктуризацияВзаиморасчетов;
	
	Компания = УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация);
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = Организация.СтавкаНДСПоУмолчанию;
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
	Иначе
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
	КонецЕсли;
	
	СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ВалютаДенежныхСредств));
	
	КурсВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Курс
	);
	КратностьВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Кратность
	);
	
	// Заполнение расшифровки расчетов по умолчанию.
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	РасходСоСчетаДоговорыАвтоЗачетаДолгов.Договор,
	|	РасходСоСчетаДоговорыАвтоЗачетаДолгов.СуммаПлатежа КАК СуммаПлатежа
	|ПОМЕСТИТЬ ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная
	|ИЗ
	|	&ДоговорыАвтоЗачетаДолгов КАК РасходСоСчетаДоговорыАвтоЗачетаДолгов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор,
	|	СУММА(ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.СуммаПлатежа) КАК СуммаПлатежа
	|ПОМЕСТИТЬ ВременнаяТаблицаДоговорыАвтоЗачета
	|ИЗ
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная КАК ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная
	|ГДЕ
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор <> Неопределено
	|	И ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор <> Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПокупателямиОстатки.Организация КАК Организация,
	|	РасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|	РасчетыСПокупателямиОстатки.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПокупателямиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	РасчетыСПокупателямиОстатки.ТипРасчетов КАК ТипРасчетов,
	|	СУММА(ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0)) КАК СуммаОстаток,
	|	СУММА(ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0)) КАК СуммаВалОстаток,
	|	РасчетыСПокупателямиОстатки.Документ.Дата КАК ДокументДата,
	|	СУММА(ВЫРАЗИТЬ(РасчетыСПокупателямиОстатки.СуммаВалОстаток * КурсыВалютРасчетов.Курс * КурсыВалютДокумента.Кратность / (КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаВалДокумента,
	|	КурсыВалютДокумента.Курс КАК КурсДенежныхСредств,
	|	КурсыВалютДокумента.Кратность КАК КратностьДенежныхСредств,
	|	КурсыВалютРасчетов.Курс КАК Курс,
	|	КурсыВалютРасчетов.Кратность КАК Кратность,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.СуммаПлатежа КАК СуммаПлатежаАвто,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.Договор КАК ДоговорАвто
	|ИЗ
	|	ВременнаяТаблицаДоговорыАвтоЗачета КАК ВременнаяТаблицаДоговорыАвтоЗачета
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		РасчетыСПокупателямиОстатки.Организация КАК Организация,
	|		РасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|		РасчетыСПокупателямиОстатки.Договор КАК Договор,
	|		РасчетыСПокупателямиОстатки.Документ КАК Документ,
	|		РасчетыСПокупателямиОстатки.Заказ КАК Заказ,
	|		РасчетыСПокупателямиОстатки.ТипРасчетов КАК ТипРасчетов,
	|		ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|		ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями.Остатки(
	|				&ПериодОстатков,
	|				Организация = &Организация
	|					И Контрагент = &Контрагент
	|					// ТекстДоговорОтбор
	|					// ТекстДоговорАвтозаполнениеОтбор
	|					И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПокупателямиОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаРасчетыСПоставщиками.Организация,
	|		ДвиженияДокументаРасчетыСПоставщиками.Контрагент,
	|		ДвиженияДокументаРасчетыСПоставщиками.Договор,
	|		ДвиженияДокументаРасчетыСПоставщиками.Документ,
	|		ДвиженияДокументаРасчетыСПоставщиками.Заказ,
	|		ДвиженияДокументаРасчетыСПоставщиками.ТипРасчетов,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.Сумма, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.Сумма, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.СуммаВал, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.СуммаВал, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями КАК ДвиженияДокументаРасчетыСПоставщиками
	|	ГДЕ
	|		ДвиженияДокументаРасчетыСПоставщиками.Регистратор = &Ссылка
	|		И ДвиженияДокументаРасчетыСПоставщиками.Период <= &Период
	|		И ДвиженияДокументаРасчетыСПоставщиками.Организация = &Организация
	|		И ДвиженияДокументаРасчетыСПоставщиками.Контрагент = &Контрагент
	|		// ТекстДоговорДвиженийАвтозаполнениеОтбор
	|		И ДвиженияДокументаРасчетыСПоставщиками.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПокупателямиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютДокумента
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсыВалютРасчетов
	|		ПО РасчетыСПокупателямиОстатки.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|	ПО ВременнаяТаблицаДоговорыАвтоЗачета.Договор = РасчетыСПокупателямиОстатки.Договор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПокупателямиОстатки.Организация,
	|	РасчетыСПокупателямиОстатки.Контрагент,
	|	РасчетыСПокупателямиОстатки.Договор,
	|	РасчетыСПокупателямиОстатки.Документ,
	|	РасчетыСПокупателямиОстатки.Заказ,
	|	РасчетыСПокупателямиОстатки.ТипРасчетов,
	|	РасчетыСПокупателямиОстатки.Документ.Дата,
	|	КурсыВалютДокумента.Курс,
	|	КурсыВалютДокумента.Кратность,
	|	КурсыВалютРасчетов.Курс,
	|	КурсыВалютРасчетов.Кратность,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПокупателямиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.Договор,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.СуммаПлатежа
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументДата
	|ИТОГИ
	|	СУММА(СуммаОстаток),
	|	СУММА(СуммаВалОстаток),
	|	СУММА(СуммаВалДокумента),
	|	МАКСИМУМ(СуммаПлатежаАвто)
	|ПО
	|	ДоговорАвто";
		
	Запрос.УстановитьПараметр("Организация", Компания);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Валюта", ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДоговорыАвтоЗачетаДолгов", ДоговорыАвтоЗачетаДолгов.Выгрузить());
	
	НуженОтборПоДоговорам = УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов();
	СписокВидовДоговоров = Справочники.ДоговорыКонтрагентов.ПолучитьСписокВидовДоговораДляДокумента(Ссылка, ВидОперации);
	Если НуженОтборПоДоговорам
	   И Контрагент.ВестиРасчетыПоДоговорам Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "// ТекстДоговорОтбор", "И Договор.ВидДоговора В (&СписокВидовДоговоров)");
		Запрос.УстановитьПараметр("СписокВидовДоговоров", СписокВидовДоговоров);
	КонецЕсли;
	
	Если Контрагент.ВестиРасчетыПоДоговорам Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "// ТекстДоговорАвтозаполнениеОтбор", "И Договор В (&ТаблицаДоговоровАвтоЗачета)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "// ТекстДоговорДвиженийАвтозаполнениеОтбор", "И ДвиженияДокументаРасчетыСПоставщиками.Договор В (&ТаблицаДоговоровАвтоЗачета)");
		Запрос.УстановитьПараметр("ТаблицаДоговоровАвтоЗачета", ДоговорыАвтоЗачетаДолгов.ВыгрузитьКолонку("Договор"));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПериодОстатков", ?(ОстаткиПолучатьНаДатуДокумента, Новый Граница(КонецДня(Дата), ВидГраницы.Включая), Неопределено));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РасшифровкаПлатежа.Очистить();
	
	ВыборкаИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИтоги.Следующий() Цикл
		
		ТекущийДоговор = ВыборкаИтоги.ДоговорАвто;
		
		СтруктураКурсВалютыДоговораПоУмолчанию = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(
			Дата,
			Новый Структура("Валюта", ТекущийДоговор.ВалютаРасчетов)
		);
		
		ВыборкаРезультатаЗапроса = ВыборкаИтоги.Выбрать();
		
		СуммаОсталосьРаспределить = ВыборкаИтоги.СуммаПлатежаАвто;
		
		Пока СуммаОсталосьРаспределить > 0 Цикл
			
			Если ВыборкаРезультатаЗапроса.Следующий() Тогда
				
				Если ВыборкаРезультатаЗапроса.СуммаВалОстаток <= 0 Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
				
				Если ВыборкаРезультатаЗапроса.СуммаВалДокумента <= СуммаОсталосьРаспределить Тогда // сумма остатка меньше или равна чем осталось распределить
					
					НоваяСтрока.СуммаРасчетов = ВыборкаРезультатаЗапроса.СуммаВалОстаток;
					НоваяСтрока.СуммаПлатежа = ВыборкаРезультатаЗапроса.СуммаВалДокумента;
					НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
					НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
					СуммаОсталосьРаспределить = СуммаОсталосьРаспределить - ВыборкаРезультатаЗапроса.СуммаВалДокумента;
					
				Иначе // сумма остатка больше чем нужно распределить
					
					НоваяСтрока.СуммаРасчетов = УправлениеНебольшойФирмойСервер.ПересчитатьИзВалютыВВалюту(
						СуммаОсталосьРаспределить,
						ВыборкаРезультатаЗапроса.КурсДенежныхСредств,
						ВыборкаРезультатаЗапроса.Курс,
						ВыборкаРезультатаЗапроса.КратностьДенежныхСредств,
						ВыборкаРезультатаЗапроса.Кратность
					);
					НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
					НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
					НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
					СуммаОсталосьРаспределить = 0;
					
				КонецЕсли;
				
			Иначе
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.Договор = ТекущийДоговор;
				
				НоваяСтрока.Курс = ?(
					СтруктураКурсВалютыДоговораПоУмолчанию.Курс = 0,
					1,
					СтруктураКурсВалютыДоговораПоУмолчанию.Курс
				);
				НоваяСтрока.Кратность = ?(
					СтруктураКурсВалютыДоговораПоУмолчанию.Кратность = 0,
					1,
					СтруктураКурсВалютыДоговораПоУмолчанию.Кратность
				);
				НоваяСтрока.СуммаРасчетов = УправлениеНебольшойФирмойСервер.ПересчитатьИзВалютыВВалюту(
					СуммаОсталосьРаспределить,
					КурсВалютыДС,
					НоваяСтрока.Курс,
					КратностьВалютыДС,
					НоваяСтрока.Кратность
				);
				НоваяСтрока.ПризнакАванса = Истина;
				НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла; // Пока ВыборкаИтоги.Следующий() Цикл
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		РасшифровкаПлатежа.Добавить();
		РасшифровкаПлатежа[0].СуммаПлатежа = СуммаДокумента;
	КонецЕсли;
	
	СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьРасшифровкуПлатежа()

Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("Основание") Тогда
		Если ДанныеЗаполнения.Свойство("УчитыватьОстатки") 
			И ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьПоЗаказуПокупателяСУчетомОстатковКОплате(ДанныеЗаполнения.Основание);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.СчетНаОплату") Тогда
			ЗаполнитьПоСчетуНаОплату(ДанныеЗаполнения, ДанныеЗаполнения.НомерСтроки);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения, ДанныеЗаполнения.НомерСтроки);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ПоступлениеДСПлан") Тогда
			ЗаполнитьПоПоступлениюДСПлан(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
		КонецЕсли;
	ИначеЕсли ДанныеЗаполнения.Свойство("Документ") Тогда
		Если ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.СчетНаОплату") Тогда
			ЗаполнитьПоСчетуНаОплату(ДанныеЗаполнения.Документ, Неопределено, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения.Документ, Неопределено, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ПоступлениеДСПлан") Тогда
			ЗаполнитьПоПоступлениюДСПлан(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ПеремещениеДСПлан") Тогда
			ЗаполнитьПоПеремещениюДСПлан(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.НачисленияПоКредитамИЗаймам") Тогда
			ЗаполнитьПоНачисленияПоКредитамИЗаймам(ДанныеЗаполнения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПоступлениюДСПлан(ДокументОснование, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Сумма", Сумма);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
		|	ТаблицаДокумента.Касса КАК Касса,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Договор КАК Договор,
		|	&Сумма КАК СуммаДокумента,
		|	&Сумма КАК СуммаПлатежа,
		|	ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ТаблицаДокумента.ВалютаДокумента <> ТаблицаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС
		|ИЗ
		|	Документ.ПоступлениеДСПлан КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
		|	ТаблицаДокумента.Касса КАК Касса,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Договор КАК Договор,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
		|	ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * ВЫБОР
		|			КОГДА ТаблицаДокумента.ВалютаДокумента <> ТаблицаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС
		|ИЗ
		|	Документ.ПоступлениеДСПлан КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
		НалогообложениеНДС = УправлениеНебольшойФирмойСервер.НалогообложениеНДС(Организация, , Дата);
		
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
			ЭтотОбъект.Касса = Справочники.Кассы.ПолучитьКассуСУчетомПравДоступаНаУровнеЗаписей(Выборка.Касса);
		КонецЕсли;
		НоваяСтрока.ПризнакАванса = Истина;
		НоваяСтрока.ДокументПланирования = ДокументОснование;
		
		Если ЗначениеЗаполнено(ДокументОснование.ДокументОснование)
		   И ТипЗнч(ДокументОснование.ДокументОснование) = Тип("ДокументСсылка.ЗаказПокупателя")
		   И Контрагент.ВестиРасчетыПоЗаказам Тогда
			
			НоваяСтрока.Заказ = ДокументОснование.ДокументОснование;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПоступлениеДСПлан()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПеремещениюДСПлан(ДокументОснование, Сумма = Неопределено) Экспорт
	
	Если ДокументОснование.СтатусУтвержденияПлатежа = Перечисления.СтатусыУтвержденияПлатежей.НеУтвержден Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести перемещение денег на основании неутвержденного планового документа!'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	// Заполним данные шапки документа.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|				И ТаблицаДокумента.ТипДенежныхСредствПолучатель = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ПолучениеНаличныхВБанке)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.Прочее)
	|	КОНЕЦ КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДС) КАК НалогообложениеНДС,
	|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
	|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.КассаПолучатель КАК Касса,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаДокумента.БанковскийСчет КАК СчетОрганизации,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС
	|ИЗ
	|	Документ.ПеремещениеДСПлан КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
			ЭтотОбъект.Касса = Справочники.Кассы.ПолучитьКассуСУчетомПравДоступаНаУровнеЗаписей(Выборка.Касса);
		КонецЕсли;
		НалогообложениеНДС = УправлениеНебольшойФирмойСервер.НалогообложениеНДС(Организация, , Дата);
		Если Сумма <> Неопределено Тогда
			ЭтотОбъект.СуммаДокумента = Сумма;
		КонецЕсли;
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.ДокументПланирования = ДокументОснование;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПеремещениеДСПлан()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоСчетуНаОплату(ДанныеЗаполнения, НомерСтроки = Неопределено, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		Запрос.УстановитьПараметр("Сумма", Сумма);
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ШапкаДокумента.Касса КАК Касса,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд))
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	&Сумма КАК СуммаДокумента,
		|	&Сумма КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.СчетНаОплату КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплату.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|	И ЕСТЬNULL(ТаблицаДокумента.НомерСтроки, 1) = 1";
		
	ИначеЕсли НомерСтроки = Неопределено Тогда
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ШапкаДокумента.Касса КАК Касса,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд))
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	СУММА(ТаблицаДокумента.Всего) КАК СуммаДокумента,
		|	СУММА(ТаблицаДокумента.Всего) КАК СуммаПлатежа,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|						И КурсыВалютРасчетов.Курс <> 0
		|						И КурсыВалютДокумента.Кратность <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2))) КАК СуммаНДС
		|ИЗ
		|	Документ.СчетНаОплату КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплату.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ШапкаДокумента.Организация,
		|	ШапкаДокумента.НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента,
		|	ШапкаДокумента.Касса,
		|	ШапкаДокумента.Контрагент,
		|	ШапкаДокумента.Договор,
		|	ШапкаДокумента.ДокументОснование,
		|	ТаблицаДокумента.СтавкаНДС,
		|	КурсыВалютРасчетов.Курс,
		|	КурсыВалютРасчетов.Кратность,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд))
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ";
		
	Иначе
	
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Основание);
		Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		
		// Заполним данные шапки документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ТаблицаДокумента.Ссылка.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Ссылка.Касса КАК Касса,
		|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ТаблицаДокумента.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ТаблицаДокумента.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ТаблицаДокумента.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ТаблицаДокумента.Ссылка.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ТаблицаДокумента.Ссылка.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд))
		|			ТОГДА ТаблицаДокумента.Ссылка.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ТаблицаДокумента.Ссылка.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА ТаблицаДокумента.Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ЕСТЬNULL(ТаблицаДокументаСтавкиНДС.СтавкаНДС, СтавкиНДС.СтавкаНДС) КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ТаблицаДокумента.СуммаОплаты КАК СуммаДокумента,
		|	ТаблицаДокумента.СуммаОплаты КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * (1 - 1 / ((ЕСТЬNULL(СтавкиНДС.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.СчетНаОплату.ПлатежныйКалендарь КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			СтавкиНДС.Ссылка КАК СтавкаНДС
		|		ИЗ
		|			Справочник.СтавкиНДС КАК СтавкиНДС
		|		ГДЕ
		|			СтавкиНДС.Ставка = 18
		|			И СтавкиНДС.ПометкаУдаления = ЛОЖЬ
		|			И СтавкиНДС.Расчетная = ЛОЖЬ) КАК СтавкиНДС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ТаблицаДокумента.Ссылка КАК Ссылка,
		|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
		|		ИЗ
		|			Документ.СчетНаОплату.Запасы КАК ТаблицаДокумента
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаСтавкиНДС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И ТаблицаДокумента.НомерСтроки = &НомерСтроки";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	РасшифровкаПлатежа.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
			ЭтотОбъект.Касса = Справочники.Кассы.ПолучитьКассуСУчетомПравДоступаНаУровнеЗаписей(Выборка.Касса);
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоСчетНаОплату()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения, НомерСтроки = Неопределено, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		Запрос.УстановитьПараметр("Сумма", Сумма);
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ШапкаДокумента.Касса КАК Касса,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	&Сумма КАК СуммаДокумента,
		|	&Сумма КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ШапкаДокумента.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ШапкаДокумента.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|	И ЕСТЬNULL(ТаблицаДокумента.НомерСтроки, 1) = 1";
		
	ИначеЕсли НомерСтроки = Неопределено Тогда
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ШапкаДокумента.Касса КАК Касса,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ,
		|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
		|	ЕСТЬNULL(ВложенныйЗапрос.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(ВложенныйЗапрос.Кратность, 1) КАК Кратность,
		|	СУММА(ВложенныйЗапрос.СуммаДокумента) КАК СуммаДокумента,
		|	СУММА(ВложенныйЗапрос.СуммаПлатежа) КАК СуммаПлатежа,
		|	СУММА(ВложенныйЗапрос.СуммаРасчетов) КАК СуммаРасчетов,
		|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			&Ссылка КАК ДокументОснование,
		|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|			КурсыВалютРасчетов.Курс КАК Курс,
		|			КурсыВалютРасчетов.Кратность КАК Кратность,
		|			ТаблицаДокумента.Всего КАК СуммаДокумента,
		|			ТаблицаДокумента.Всего КАК СуммаПлатежа,
		|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|					КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов
		|							И КурсыВалютРасчетов.Курс <> 0
		|							И КурсыВалютДокумента.Кратность <> 0
		|						ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|					ИНАЧЕ 1
		|				КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|		ИЗ
		|			Документ.ЗаказПокупателя.Запасы КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|				ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			&Ссылка,
		|			ТаблицаДокумента.СтавкаНДС,
		|			КурсыВалютРасчетов.Курс,
		|			КурсыВалютРасчетов.Кратность,
		|			ТаблицаДокумента.Всего,
		|			ТаблицаДокумента.Всего,
		|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|					КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов
		|							И КурсыВалютРасчетов.Курс <> 0
		|							И КурсыВалютДокумента.Кратность <> 0
		|						ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|					ИНАЧЕ 1
		|				КОНЕЦ КАК ЧИСЛО(15, 2)),
		|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2))
		|		ИЗ
		|			Документ.ЗаказПокупателя.Работы КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|				ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|		ПО ШапкаДокумента.Ссылка = ВложенныйЗапрос.ДокументОснование
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ШапкаДокумента.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ШапкаДокумента.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ШапкаДокумента.Организация,
		|	ШапкаДокумента.НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента,
		|	ШапкаДокумента.Касса,
		|	ШапкаДокумента.Контрагент,
		|	ШапкаДокумента.Договор,
		|	ВложенныйЗапрос.СтавкаНДС,
		|	ВложенныйЗапрос.Курс,
		|	ВложенныйЗапрос.Кратность,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ";
		
	Иначе
	
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Основание);
		Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		
		// Заполним данные шапки документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ТаблицаДокумента.Ссылка.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Ссылка.Касса КАК Касса,
		|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ЕСТЬNULL(ТаблицаДокументаСтавкиНДС.СтавкаНДС, СтавкиНДС.СтавкаНДС) КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ТаблицаДокумента.СуммаОплаты КАК СуммаДокумента,
		|	ТаблицаДокумента.СуммаОплаты КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * (1 - 1 / ((ЕСТЬNULL(СтавкиНДС.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ
		|ИЗ
		|	Документ.ЗаказПокупателя.ПлатежныйКалендарь КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			СтавкиНДС.Ссылка КАК СтавкаНДС
		|		ИЗ
		|			Справочник.СтавкиНДС КАК СтавкиНДС
		|		ГДЕ
		|			СтавкиНДС.Ставка = 18
		|			И СтавкиНДС.ПометкаУдаления = ЛОЖЬ
		|			И СтавкиНДС.Расчетная = ЛОЖЬ) КАК СтавкиНДС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ТаблицаДокументаСтавкиНДС.Ссылка КАК Ссылка,
		|			ТаблицаДокументаСтавкиНДС.СтавкаНДС КАК СтавкаНДС
		|		ИЗ
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ТаблицаДокумента.Ссылка КАК Ссылка,
		|				ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
		|			ИЗ
		|				Документ.ЗаказПокупателя.Запасы КАК ТаблицаДокумента
		|			ГДЕ
		|				ТаблицаДокумента.Ссылка = &Ссылка
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ ПЕРВЫЕ 1
		|				ТаблицаДокумента.Ссылка,
		|				ТаблицаДокумента.СтавкаНДС
		|			ИЗ
		|				Документ.ЗаказПокупателя.Работы КАК ТаблицаДокумента
		|			ГДЕ
		|				ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС) КАК ТаблицаДокументаСтавкиНДС
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаСтавкиНДС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ТаблицаДокумента.Ссылка.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ТаблицаДокумента.Ссылка.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И ТаблицаДокумента.НомерСтроки = &НомерСтроки";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	РасшифровкаПлатежа.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
			ЭтотОбъект.Касса = Справочники.Кассы.ПолучитьКассуСУчетомПравДоступаНаУровнеЗаписей(Выборка.Касса);
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоЗаказПокупателя()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//
Процедура ЗаполнитьПоЗаказуПокупателяСУчетомОстатковКОплате(ДанныеЗаполнения)
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
	|	&Дата КАК Дата,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ШапкаДокумента.Касса КАК Касса,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
	|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
	|	ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот КАК СуммаДокумента,
	|	ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот КАК СуммаПлатежа,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
	|					И КурсыВалютРасчетов.Курс <> 0
	|					И КурсыВалютДокумента.Кратность <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * (1 - 1 / ((ЕСТЬNULL(ВложенныйЗапрос.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ТаблицаДокументаСтавкиНДС.Ссылка КАК Ссылка,
	|			ТаблицаДокументаСтавкиНДС.СтавкаНДС КАК СтавкаНДС
	|		ИЗ
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				&Ссылка КАК Ссылка,
	|				ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
	|			ИЗ
	|				Документ.ЗаказПокупателя.Запасы КАК ТаблицаДокумента
	|			ГДЕ
	|				ТаблицаДокумента.Ссылка = &Ссылка
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ТаблицаДокумента.Ссылка,
	|				ТаблицаДокумента.СтавкаНДС
	|			ИЗ
	|				Документ.ЗаказПокупателя.Работы КАК ТаблицаДокумента
	|			ГДЕ
	|				ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.Ссылка = ВложенныйЗапрос.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОплатаСчетовИЗаказов.Обороты КАК ОплатаСчетовИЗаказовОбороты
	|		ПО ШапкаДокумента.Ссылка = ОплатаСчетовИЗаказовОбороты.СчетНаОплату
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
	|		ПО ШапкаДокумента.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
	|			И ШапкаДокумента.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
			ЭтотОбъект.Касса = Справочники.Кассы.ПолучитьКассуСУчетомПравДоступаНаУровнеЗаписей(Выборка.Касса);
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоЗаказуПокупателяСУчетомОстатковКОплате()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоРасходнойНакладной(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ПередачаВПереработку Тогда
		ТекстИсключения = НСтр("ru = 'Невозможен ввод документа на основании операции - ""%ВидОперации""!'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ВидОперации", ДанныеЗаполнения.ВидОперации);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПоставщика)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя)
	|	КОНЕЦ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|	КОНЕЦ КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫРАЗИТЬ(ШапкаДокумента.Контрагент.НаименованиеПолное КАК Строка(1024)) КАК ПринятоОт,
	|	ПРЕДСТАВЛЕНИЕ(ШапкаДокумента.Контрагент) КАК ПредставлениеКонтрагента,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию КАК Касса,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.РасходнаяНакладная КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.Запасы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПоставщика)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|	КОНЕЦ,
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ТаблицаДокумента.Заказ,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
			ЭтотОбъект.Касса = Справочники.Кассы.ПолучитьКассуСУчетомПравДоступаНаУровнеЗаписей(Выборка.Касса);
		КонецЕсли;
		Если ПустаяСтрока(ПринятоОт) Тогда
			ПринятоОт = Выборка.ПредставлениеКонтрагента;
		КонецЕсли;
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоРасходнаяНакладная()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоАктуВыполненныхРабот(ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫРАЗИТЬ(ШапкаДокумента.Контрагент.НаименованиеПолное КАК Строка(1024)) КАК ПринятоОт,
	|	ПРЕДСТАВЛЕНИЕ(ШапкаДокумента.Контрагент) КАК ПредставлениеКонтрагента,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию КАК Касса,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.АктВыполненныхРабот КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктВыполненныхРабот.РаботыИУслуги КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ТаблицаДокумента.ЗаказПокупателя,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если ПустаяСтрока(ПринятоОт) Тогда
			ПринятоОт = Выборка.ПредставлениеКонтрагента;
		КонецЕсли;
		Если ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
			ЭтотОбъект.Касса = Справочники.Кассы.ПолучитьКассуСУчетомПравДоступаНаУровнеЗаписей(Выборка.Касса);
		КонецЕсли;
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоАктВыполненныхРабот()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПередачеВА(ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ОтПокупателя) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫРАЗИТЬ(ШапкаДокумента.Контрагент.НаименованиеПолное КАК Строка(1024)) КАК ПринятоОт,
	|	ПРЕДСТАВЛЕНИЕ(ШапкаДокумента.Контрагент) КАК ПредставлениеКонтрагента,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию КАК Касса,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.ПередачаВА КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаВА.ВнеоборотныеАктивы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если ПустаяСтрока(ПринятоОт) Тогда
			ПринятоОт = Выборка.ПредставлениеКонтрагента;
		КонецЕсли;
		Если ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
			ЭтотОбъект.Касса = Справочники.Кассы.ПолучитьКассуСУчетомПравДоступаНаУровнеЗаписей(Выборка.Касса);
		КонецЕсли;
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПередачаВА()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоОтчетуОРозничныхПродажах(ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.РозничнаяВыручка) КАК ВидОперации,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.КассаККМ КАК КассаККМ,
	|	ШапкаДокумента.Статья КАК Статья,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	&Ссылка КАК ДокументОснование
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Запасы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.СтавкаНДС,
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.КассаККМ,
	|	ШапкаДокумента.Статья,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.ВалютаДокумента";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СуммаОсталосьРаспределить = ДанныеЗаполнения.ОплатаПлатежнымиКартами.Итог("Сумма");
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		РасшифровкаПлатежа.Очистить();
		
		Если Выборка.СуммаПлатежа - СуммаОсталосьРаспределить > 0 Тогда
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.СуммаПлатежа = Выборка.СуммаПлатежа - СуммаОсталосьРаспределить;
			НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((НоваяСтрока.СтавкаНДС.Ставка + 100) / 100);
			ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа - СуммаОсталосьРаспределить;
			СуммаОсталосьРаспределить = 0;
		Иначе
			СуммаОсталосьРаспределить = СуммаОсталосьРаспределить - Выборка.СуммаПлатежа;
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.СуммаПлатежа - СуммаОсталосьРаспределить > 0 Тогда
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.СуммаПлатежа = Выборка.СуммаПлатежа - СуммаОсталосьРаспределить;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((НоваяСтрока.СтавкаНДС.Ставка + 100) / 100);
				ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа - СуммаОсталосьРаспределить;
				СуммаОсталосьРаспределить = 0;
			Иначе
				СуммаОсталосьРаспределить = СуммаОсталосьРаспределить - Выборка.СуммаПлатежа;
			КонецЕсли;
		КонецЦикла;
		
		Если РасшифровкаПлатежа.Количество() = 0 Тогда
			РасшифровкаПлатежа.Добавить();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоОтчетОРозничныхПродажах()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПриемуВРемонт(ДокументСсылкаПриемИПередачаВРемонт) Экспорт
	
	Если ДокументСсылкаПриемИПередачаВРемонт.ВариантРемонта = Перечисления.ВариантыРемонта.НашаМастерскаяМногоэтапныйРемонт Тогда
		ВызватьИсключение НСтр("ru = 'Для выбранного варианта ремонта вводите оплаты на основании подчиненных документов - Заказ-наряд, Расходная, Акт'");
	КонецЕсли;
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПриемИПередачаВРемонт);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	// Заполним данные табличных частей документа.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
	|	&Дата КАК Дата,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию КАК БанковскийСчет,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию КАК Касса,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.РемонтВыполнен
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.РемонтВыполнен
	|			ТОГДА ШапкаДокумента.Ссылка
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ КАК Документ,
	|	ШапкаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1) КАК Кратность,
	|	ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот КАК Всего,
	|	КурсыВалютДокумента.Курс КАК Курс1,
	|	КурсыВалютРасчетов.Курс КАК Курс2,
	|	КурсыВалютБанковскогоСчета.Курс КАК Курс3,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
	|					И КурсыВалютРасчетов.Курс <> 0
	|					И КурсыВалютДокумента.Кратность <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * (1 - 1 / ((ЕСТЬNULL(ШапкаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВариантРемонта = ЗНАЧЕНИЕ(Перечисление.ВариантыРемонта.НашаМастерскаяМногоэтапныйРемонт)
	|						ТОГДА ЗНАЧЕНИЕ(Документ.ПриемИПередачаВРемонт.ПустаяСсылка)
	|					ИНАЧЕ &Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ПриемИПередачаВРемонт.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ
	|ИЗ
	|	Документ.ПриемИПередачаВРемонт КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОплатаСчетовИЗаказов.Обороты КАК ОплатаСчетовИЗаказовОбороты
	|		ПО ШапкаДокумента.Ссылка = ОплатаСчетовИЗаказовОбороты.СчетНаОплату
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта,
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|		ПО ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
			ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");	
		
КонецПроцедуры // ЗаполнитьПоОтчетОРозничныхПродажах()

// Процедура заполняет Ставку НДС в табличной части по системе налогообложения.
// 
Процедура ЗаполнитьСтавкуНДСПоНалогообложениеНДС(СтрокаТабличнойЧасти)
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
		СтрокаТабличнойЧасти.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
		СтрокаТабличнойЧасти.СуммаНДС = 0;
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НаЭкспорт Тогда
		СтрокаТабличнойЧасти.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
		СтрокаТабличнойЧасти.СуммаНДС = 0;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьСтавкуНДСПоНалогообложениеНДС()	

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события При копировании.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	НомерЧекаККМ = "";
	Телефон = "";
	АдресЭП = "";
	
КонецПроцедуры // ПриКопировании()

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимНаправлениямДеятельности.Получить() Тогда
		
		Если ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.РозничнаяВыручкаСуммовойУчет Тогда
			
			НаправлениеДеятельности = Справочники.НаправленияДеятельности.ОсновноеНаправление;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Для каждого СтрокаТЧ Из РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(Контрагент)
			И ВидОперации <> Перечисления.ВидыОперацийПоступлениеВКассу.ПолучениеНаличныхВБанке
			И НЕ Контрагент.ВестиРасчетыПоДоговорам
			И НЕ ЗначениеЗаполнено(СтрокаТЧ.Договор) Тогда
			СтрокаТЧ.Договор = Контрагент.ДоговорПоУмолчанию;
		КонецЕсли;
		
		// Прочие расчеты
		Если (ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ПрочиеРасчеты
			ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ВозвратЗаймаСотрудником)
			И СтрокаТЧ.СтавкаНДС.Пустая() Тогда
			СтрокаТЧ.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
			СтрокаТЧ.СуммаНДС = 0;
		КонецЕсли;
		// Конец Прочие расчеты
	КонецЦикла;
	
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ПолучениеНаличныхВБанке Тогда
		Если РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(Дата,УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация)) Тогда
			Корреспонденция = ПланыСчетов.Управленческий.ПереводыВПути;
		Иначе
			Корреспонденция = ПланыСчетов.Управленческий.Банк;
		КонецЕсли;
	КонецЕсли;
	
	// Зачет долгов. Авто
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И
		ВариантЗаполненияРасшифровки = Перечисления.ВариантыЗаполненияРасшифровкиПлатежа.Автоматически И
		ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя Тогда
		
		РасшифровкаПлатежа.Очистить();
		ЗаполнитьРасшифровкуПлатежаАвтоЗачетДолгов();
		
	КонецЕсли;
	// Конец Зачет долгов. Авто
	
	// МобильноеПриложение
	Если МобильноеПриложениеВызовСервера.НужноОграничитьФункциональность()
		И НЕ ПометкаУдаления Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	// Конец МобильноеПриложение
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре";
	СтратегияЗаполнения[Тип("ДокументСсылка.СчетНаОплату")] = "ЗаполнитьПоСчетуНаОплату";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПоступлениеДСПлан")] = "ЗаполнитьПоПоступлениюДСПлан";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПеремещениеДСПлан")] = "ЗаполнитьПоПеремещениюДСПлан";
	СтратегияЗаполнения[Тип("ДокументСсылка.РасходнаяНакладная")] = "ЗаполнитьПоРасходнойНакладной";
	СтратегияЗаполнения[Тип("ДокументСсылка.ОтчетОРозничныхПродажах")] = "ЗаполнитьПоОтчетуОРозничныхПродажах";
	СтратегияЗаполнения[Тип("ДокументСсылка.АктВыполненныхРабот")] = "ЗаполнитьПоАктуВыполненныхРабот";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПередачаВА")] = "ЗаполнитьПоПередачеВА";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказуПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.ДоговорКредитаИЗайма")] = "ЗаполнитьПоДоговоруКредитаЗайма";
	СтратегияЗаполнения[Тип("ДокументСсылка.НачисленияПоКредитамИЗаймам")] = "ЗаполнитьПоНачисленияПоКредитамИЗаймам";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриемИПередачаВРемонт")] = "ЗаполнитьПоПриемуВРемонт";
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеДСПлан") Тогда
		ИсключаяСвойства = "Касса, АналитикаПрочихДоходовИРасходов";
	Иначе
		ИсключаяСвойства = "АналитикаПрочихДоходовИРасходов";
	КонецЕсли;
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения, ИсключаяСвойства);
	
	ЗаполнитьПолеПринятоОт();
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ЗаполнитьПолеПринятоОт()
	
	Если ЗначениеЗаполнено(ПринятоОт) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидОперации <> Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя
		И ВидОперации <> Перечисления.ВидыОперацийПоступлениеВКассу.ОтПоставщика Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент.НаименованиеПолное) Тогда
		ПринятоОт = Контрагент.НаименованиеПолное;
	Иначе
		ПринятоОт = Контрагент.Наименование;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверитьДокументыПланирования = Истина;
	
	// Удаление проверяемых реквизитов из структуры, в зависимости от вида
	// операции.
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПоставщика
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя Тогда
	 
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КассаККМ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СтруктурнаяЕдиница");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СчетОрганизации");
		
		Если НЕ (ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя И
			ВариантЗаполненияРасшифровки = Перечисления.ВариантыЗаполненияРасшифровкиПлатежа.СПомощником) Тогда
			УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		Иначе
			// Если нет строки с авансом, то и договор аванса заполнять не нужно.
			ЕстьАванс = Ложь;
			Для Каждого ТекущаяСтрока Из РасшифровкаПлатежа Цикл
				Если ТекущаяСтрока.ПризнакАванса Тогда
					ЕстьАванс = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НЕ ЕстьАванс Тогда
				УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
			КонецЕсли;
		КонецЕсли;
		
		ПогашатьАвтоматически = (ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя И 
			ВариантЗаполненияРасшифровки = Перечисления.ВариантыЗаполненияРасшифровкиПлатежа.Автоматически);
			
		Если Не ПогашатьАвтоматически Тогда
			
			УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
			
			Если Контрагент.ВестиРасчетыПоДокументам Тогда
				Для каждого СтрокаРасшифровкаПлатежа Из РасшифровкаПлатежа Цикл
					Если НЕ ЗначениеЗаполнено(СтрокаРасшифровкаПлатежа.Документ)
						И (ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПоставщика
					   ИЛИ (ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя
					   И НЕ СтрокаРасшифровкаПлатежа.ПризнакАванса)) Тогда
						Если РасшифровкаПлатежа.Количество() = 1 Тогда
							Если ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя Тогда
								ТекстСообщения = НСтр("ru = 'Укажите документ отгрузки или признак аванса платежа.'");
							Иначе
								ТекстСообщения = НСтр("ru = 'Укажите документ расчетов.'");
							КонецЕсли;
						Иначе
							Если ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя Тогда
								ТекстСообщения = НСтр("ru = 'Укажите документ отгрузки или признак оплаты в строке %НомерСтроки% списка ""Расшифровка платежа"".'");
							Иначе
								ТекстСообщения = НСтр("ru = 'Укажите документ расчетов в строке %НомерСтроки% списка ""Расшифровка платежа"".'");
							КонецЕсли;
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка(СтрокаРасшифровкаПлатежа.НомерСтроки));
						КонецЕсли;
						УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
							ЭтотОбъект,
							ТекстСообщения,
							"РасшифровкаПлатежа",
							СтрокаРасшифровкаПлатежа.НомерСтроки,
							"Документ",
							Отказ
						);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			
			УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
			УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
			УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
			УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
			
			Для каждого СтрокаДоговоры Из ДоговорыАвтоЗачетаДолгов Цикл
				
				Если (СтрокаДоговоры.Договор.Пустая() И СтрокаДоговоры.СуммаПлатежа > 0) ИЛИ
					(НЕ СтрокаДоговоры.Договор.Пустая() И СтрокаДоговоры.СуммаПлатежа = 0) Тогда
					
					ТекстСообщения = НСтр("ru = 'Для договора под №%НомерСтроки% нужно очистить сумму или выбрать договор.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка(СтрокаДоговоры.НомерСтроки));
					УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
						ЭтотОбъект,
						ТекстСообщения,
						"РасшифровкаПлатежа",
						СтрокаДоговоры.НомерСтроки,
						"Документ",
						Отказ
					);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		ПогашатьАвтоматическиСРазнесениемПоДоговорам = (ПогашатьАвтоматически И (ДоговорыАвтоЗачетаДолгов.Количество() > 1));
		СуммаПлатежа = ?(ПогашатьАвтоматическиСРазнесениемПоДоговорам, ДоговорыАвтоЗачетаДолгов.Итог("СуммаПлатежа"), РасшифровкаПлатежа.Итог("СуммаПлатежа"));
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = ?(ПогашатьАвтоматическиСРазнесениемПоДоговорам,
			    НСтр("ru = 'Сумма документа: %СуммаДокумента% %ВалютаДенежныхСредств%, не соответствует сумме разнесенных платежей по договорам: %СуммаПлатежа% %ВалютаДенежныхСредств%!'"),
				НСтр("ru = 'Сумма документа: %СуммаДокумента% %ВалютаДенежныхСредств%, не соответствует сумме разнесенных платежей в табличной части: %СуммаПлатежа% %ВалютаДенежныхСредств%!'")
			);
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаДокумента%", Строка(СуммаДокумента));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаПлатежа%", Строка(СуммаПлатежа));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаДенежныхСредств%", СокрЛП(Строка(ВалютаДенежныхСредств)));
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				,
				,
				"СуммаДокумента",
				Отказ
			);
		КонецЕсли;
		
		Если НЕ Контрагент.ВестиРасчетыПоДоговорам Тогда
			УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПодотчетника Тогда
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КассаККМ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СтруктурнаяЕдиница");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СчетОрганизации");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.РозничнаяВыручка Тогда
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СтруктурнаяЕдиница");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СчетОрганизации");
		
		СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = НСтр("ru = 'Сумма документа: %СуммаДокумента% %ВалютаДенежныхСредств%, не соответствует сумме разнесенных платежей в табличной части: %СуммаПлатежа% %ВалютаДенежныхСредств%!'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаДокумента%", Строка(СуммаДокумента));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаПлатежа%", Строка(СуммаПлатежа));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаДенежныхСредств%", СокрЛП(Строка(ВалютаДенежныхСредств)));
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				,
				,
				"СуммаДокумента",
				Отказ
			);
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.РозничнаяВыручкаСуммовойУчет Тогда
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КассаККМ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СчетОрганизации");
		
		СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = НСтр("ru = 'Сумма документа: %СуммаДокумента% %ВалютаДенежныхСредств%, не соответствует сумме разнесенных платежей в табличной части: %СуммаПлатежа% %ВалютаДенежныхСредств%!'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаДокумента%", Строка(СуммаДокумента));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаПлатежа%", Строка(СуммаПлатежа));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаДенежныхСредств%", СокрЛП(Строка(ВалютаДенежныхСредств)));
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				,
				,
				"СуммаДокумента",
				Отказ
			);
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.Прочее Тогда
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КассаККМ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СтруктурнаяЕдиница");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СчетОрганизации");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ПокупкаВалюты Тогда
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КассаККМ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СтруктурнаяЕдиница");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СчетОрганизации");
		
	// Прочие расчеты
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ПрочиеРасчеты Тогда
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КассаККМ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СтруктурнаяЕдиница");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СчетОрганизации");
		
		СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = НСтр("ru = 'Сумма документа: %СуммаДокумента% %ВалютаДенежныхСредств%, не соответствует сумме разнесенных платежей в табличной части: %СуммаПлатежа% %ВалютаДенежныхСредств%!'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаДокумента%", Строка(СуммаДокумента));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаПлатежа%", Строка(СуммаПлатежа));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаДенежныхСредств%", СокрЛП(Строка(ВалютаДенежныхСредств)));
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				,
				,
				"СуммаДокумента",
				Отказ
			);
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ВозвратЗаймаСотрудником Тогда
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КассаККМ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СтруктурнаяЕдиница");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СчетОрганизации");
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		Если Подотчетник.Пустая() Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Сотрудник"" не заполнено'");
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				,
				,
				"Подотчетник",
				Отказ
			);
		КонецЕсли;
		
		СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = НСтр("ru = 'Сумма документа: %СуммаДокумента% %ВалютаДенежныхСредств%, не соответствует сумме разнесенных платежей в табличной части: %СуммаПлатежа% %ВалютаДенежныхСредств%!'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаДокумента%", Строка(СуммаДокумента));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаПлатежа%", Строка(СуммаПлатежа));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаДенежныхСредств%", СокрЛП(Строка(ВалютаДенежныхСредств)));
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				,
				,
				"СуммаДокумента",
				Отказ
			);
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.РасчетыПоКредитам Тогда
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КассаККМ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СтруктурнаяЕдиница");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СчетОрганизации");
		
	// Конец Прочие расчеты
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ПолучениеНаличныхВБанке Тогда
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КассаККМ");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СтруктурнаяЕдиница");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
		СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	КонецЕсли;
	
	// Платежный календарь
	Если ПроверитьДокументыПланирования Тогда
		Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
			
			ЕстьОшибка = Ложь;
			СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
			СуммаДляСообщения = 0;
			
			Если СуммаПлатежа > СуммаДокумента Тогда
				ЕстьОшибка = Истина;
				СуммаДляСообщения = СуммаПлатежа;
			КонецЕсли;
			
			Если ЕстьОшибка Тогда
				ТекстСообщения = НСтр("ru = 'Сумма документа: %СуммаДокумента% %ВалютаДенежныхСредств% меньше суммы разнесенных платежей в табличной части: %СуммаПлатежа% %ВалютаДенежныхСредств%!'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаДокумента%", Строка(СуммаДокумента));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаПлатежа%", Строка(СуммаДляСообщения));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаДенежныхСредств%", СокрЛП(Строка(ВалютаДенежныхСредств)));
				
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
					ЭтотОбъект,
					ТекстСообщения,
					,
					,
					"СуммаДокумента",
					Отказ
				);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.ПоступлениеВКассу.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	УправлениеНебольшойФирмойСервер.ОтразитьДенежныеСредства(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьДенежныеСредстваВКассахККМ(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьРасчетыСПодотчетниками(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьРасчетыСПокупателями(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьРасчетыСПоставщиками(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьПлатежныйКалендарь(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьОплатаСчетовИЗаказов(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьДоходыИРасходы(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьДоходыИРасходыКассовыйМетод(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьДоходыИРасходыНераспределенные(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьДоходыИРасходыОтложенные(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьСуммовойУчетВРознице(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);
	// Прочие расчеты
	УправлениеНебольшойФирмойСервер.ОтразитьРасчетыСПрочимиКонтрагентами(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьРасчетыПоКредитамИЗаймам(ДополнительныеСвойства, Движения, Отказ);
	// Конец Прочие расчеты
	
	// Запись наборов записей.
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.ПоступлениеВКассу.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа.
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей.
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.ПоступлениеВКассу.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
	// Подчиненная счет-фактура
	Если НЕ Отказ Тогда
		
		КонтрольПодчиненнойСчетФактуры();
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

#КонецОбласти

#Область ПрочиеРасчеты

// Процедура заполнения документа на основании договора кредита (займа).
//
// Параметры:
//	ДокументОснование - ДокументСсылка.ДоговорКредитаИЗайма - условия получения кредита (выдачи займа).
//	Сумма - Число - сумма документа. Заполняется, когда процедура вызывается из формы документа.
//	
Процедура ЗаполнитьПоДоговоруКредитаЗайма(ДокументОснование, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Сумма", Сумма);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.КредитПолученный)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.РасчетыПоКредитам)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ВозвратЗаймаСотрудником)
		|	КОНЕЦ КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.ВалютаРасчетов КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Сотрудник КАК Подотчетник,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	&Ссылка КАК ДоговорКредитаЗайма,
		|	&Сумма КАК СуммаДокумента,
		|	&Сумма КАК СуммаПлатежа,
		|	ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.ДоговорКредитаИЗайма КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.КредитПолученный)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.РасчетыПоКредитам)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ВозвратЗаймаСотрудником)
		|	КОНЕЦ КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.ВалютаРасчетов КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Сотрудник КАК Подотчетник,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	&Ссылка КАК ДоговорКредитаЗайма,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
		|	ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.Организация.СтавкаНДСПоУмолчанию.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.ДоговорКредитаИЗайма КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
		НалогообложениеНДС = УправлениеНебольшойФирмойСервер.НалогообложениеНДС(Организация, , Дата);
		
		РасшифровкаПлатежа.Очистить();
		Если ДокументОснование.ВидДоговора = Перечисления.ВидыДоговоровКредитаИЗайма.КредитПолученный Тогда
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Иначе
			СуммаДокумента = 0;
		КонецЕсли;
		
		Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Организация);
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПоступлениеДСПлан()

// Процедура заполнения документа на основании договора кредита (займа).
//
// Параметры:
//	ДокументОснование - ДокументСсылка.ДоговорКредитаИЗайма - условия получения кредита (выдачи займа).
//	Сумма - Число - сумма документа. Заполняется, когда процедура вызывается из формы документа.
//	
Процедура ЗаполнитьПоНачисленияПоКредитамИЗаймам(ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Документ);
		Запрос.УстановитьПараметр("Сотрудник", ДанныеЗаполнения.Сотрудник);
		Запрос.УстановитьПараметр("Контрагент", ДанныеЗаполнения.Контрагент);
		Запрос.УстановитьПараметр("ДоговорКредитаЗайма", ДанныеЗаполнения.ДоговорКредитаЗайма);
		Запрос.УстановитьПараметр("ВалютаРасчетов", ДанныеЗаполнения.ВалютаРасчетов);
	ИначеЕсли ДанныеЗаполнения.Начисления.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Сотрудник", ДанныеЗаполнения.Начисления[0].Сотрудник);
		Запрос.УстановитьПараметр("Контрагент", ДанныеЗаполнения.Начисления[0].Контрагент);
		Запрос.УстановитьПараметр("ДоговорКредитаЗайма", ДанныеЗаполнения.Начисления[0].ДоговорКредитаЗайма);
		Запрос.УстановитьПараметр("ВалютаРасчетов", ДанныеЗаполнения.Начисления[0].ВалютаРасчетов);
	Иначе
		Возврат;
	КонецЕсли;
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВКассу.ВозвратЗаймаСотрудником) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.ВалютаРасчетов КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Сотрудник КАК Подотчетник,
	|	ТаблицаДокумента.ДоговорКредитаЗайма КАК ДоговорКредитаЗайма,
	|	ТаблицаДокумента.ТипСуммы КАК ТипСуммы,
	|	ТаблицаДокумента.Сумма КАК СуммаПлатежа,
	|	ТаблицаДокумента.Ссылка.Организация.СтавкаНДСПоУмолчанию КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Сумма КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.Ссылка.Организация.СтавкаНДСПоУмолчанию.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
	|ИЗ
	|	Документ.НачисленияПоКредитамИЗаймам.Начисления КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ТаблицаДокумента.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.ДоговорКредитаЗайма = &ДоговорКредитаЗайма
	|	И ТаблицаДокумента.ВалютаРасчетов = &ВалютаРасчетов
	|	И ТаблицаДокумента.Контрагент = &Контрагент
	|	И ТаблицаДокумента.Сотрудник = &Сотрудник";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
		НалогообложениеНДС = УправлениеНебольшойФирмойСервер.НалогообложениеНДС(Организация, , Дата);
		
		РасшифровкаПлатежа.Очистить();
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
		
		Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Организация);
		СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПоступлениеДСПлан()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура отмены проведения у подченненой счет фактуры
//
Процедура КонтрольПодчиненнойСчетФактуры()
	
	СтруктураСчетаФактуры = УправлениеНебольшойФирмойСервер.ПолучитьПодчиненныйСчетФактуру(Ссылка);
	Если СтруктураСчетаФактуры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СчетФактура	 = СтруктураСчетаФактуры.Ссылка;
	Если Не СчетФактура.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru = 'В связи с отсутствием движений у документа %ПредставлениеТекущегоДокумента% распроводится счет фактура %ПредставлениеСчетФактуры%.'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТекущегоДокумента%", """Поступление ДС в кассу № " + Номер + " от " + Формат(Дата, "ДФ=dd.MM.yyyy") + """");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеСчетФактуры%", """Счет фактура (выданная) № " + СтруктураСчетаФактуры.Номер + " от " + СтруктураСчетаФактуры.Дата + """");
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
	СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
	СчетФактураОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	
КонецПроцедуры //КонтрольПодчиненнойСчетФактуры()

#КонецОбласти

#КонецЕсли