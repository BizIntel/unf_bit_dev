#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Обработчик заполнения на основании документа ИнвентаризацияЗапасов.
//
// Параметры:
//  ДокументСсылкаИнвентаризацияЗапасов	 - ДокументСсылка.ИнвентаризацияЗапасов
//
Процедура ЗаполнитьПоИнвентаризацииЗапасов(ДокументСсылкаИнвентаризацияЗапасов) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументСсылкаИнвентаризацияЗапасов) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.ДокументОснование = ДокументСсылкаИнвентаризацияЗапасов.Ссылка;
	Организация = ДокументСсылкаИнвентаризацияЗапасов.Организация;
	СтруктурнаяЕдиница = ДокументСсылкаИнвентаризацияЗапасов.СтруктурнаяЕдиница;
	Ячейка = ДокументСсылкаИнвентаризацияЗапасов.Ячейка;
	
	// ФО Использовать подсистему Производство.
	Если Не Константы.ФункциональнаяОпцияИспользоватьПодсистемуПроизводство.Получить()
		И СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести Оприходование запасов на основании инвентеризации запасов, т.к. недоступен вид деятельности Производство!'");
	КонецЕсли;
	
	Запасы.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ИнвентаризацияЗапасов.НомерСтроки) КАК НомерСтроки,
	|	ИнвентаризацияЗапасов.Номенклатура КАК Номенклатура,
	|	ИнвентаризацияЗапасов.Характеристика КАК Характеристика,
	|	ИнвентаризацияЗапасов.Партия КАК Партия,
	|	ИнвентаризацияЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(ИнвентаризацияЗапасов.Количество - ИнвентаризацияЗапасов.КоличествоУчет) КАК КоличествоОтклонениеИнвентаризации,
	|	СУММА(ВЫБОР
	|			КОГДА ОприходованиеЗапасов.Количество ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ ОприходованиеЗапасов.Количество
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПересортицаЗапасовОприходование.Количество ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ ПересортицаЗапасовОприходование.Количество
	|		КОНЕЦ) КАК КоличествоОприходованное,
	|	ИнвентаризацияЗапасов.Цена
	|ИЗ
	|	Документ.ИнвентаризацияЗапасов.Запасы КАК ИнвентаризацияЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОприходованиеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|			ОприходованиеЗапасовЗапасы.Характеристика КАК Характеристика,
	|			ОприходованиеЗапасовЗапасы.Партия КАК Партия,
	|			СУММА(ОприходованиеЗапасовЗапасы.Количество) КАК Количество
	|		ИЗ
	|			Документ.ОприходованиеЗапасов.Запасы КАК ОприходованиеЗапасовЗапасы
	|		ГДЕ
	|			ОприходованиеЗапасовЗапасы.Ссылка.ДокументОснование = &ДокументОснование
	|			И ОприходованиеЗапасовЗапасы.Ссылка.Проведен
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОприходованиеЗапасовЗапасы.Номенклатура,
	|			ОприходованиеЗапасовЗапасы.Характеристика,
	|			ОприходованиеЗапасовЗапасы.Партия) КАК ОприходованиеЗапасов
	|		ПО ИнвентаризацияЗапасов.Номенклатура = ОприходованиеЗапасов.Номенклатура
	|			И ИнвентаризацияЗапасов.Характеристика = ОприходованиеЗапасов.Характеристика
	|			И ИнвентаризацияЗапасов.Партия = ОприходованиеЗапасов.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПересортицаЗапасовЗапасы.НоменклатураОприходование КАК НоменклатураОприходование,
	|			ПересортицаЗапасовЗапасы.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|			ПересортицаЗапасовЗапасы.ПартияОприходование КАК ПартияОприходование,
	|			СУММА(ПересортицаЗапасовЗапасы.Количество) КАК Количество
	|		ИЗ
	|			Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|		ГДЕ
	|			ПересортицаЗапасовЗапасы.Ссылка.ДокументОснование = &ДокументОснование
	|			И ПересортицаЗапасовЗапасы.Ссылка.Проведен
	|			И ПересортицаЗапасовЗапасы.Ссылка <> &ДокументСсылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПересортицаЗапасовЗапасы.НоменклатураОприходование,
	|			ПересортицаЗапасовЗапасы.ХарактеристикаОприходование,
	|			ПересортицаЗапасовЗапасы.ПартияОприходование) КАК ПересортицаЗапасовОприходование
	|		ПО ИнвентаризацияЗапасов.Номенклатура = ПересортицаЗапасовОприходование.НоменклатураОприходование
	|			И ИнвентаризацияЗапасов.Характеристика = ПересортицаЗапасовОприходование.ХарактеристикаОприходование
	|			И ИнвентаризацияЗапасов.Партия = ПересортицаЗапасовОприходование.ПартияОприходование
	|ГДЕ
	|	ИнвентаризацияЗапасов.Ссылка = &ДокументОснование
	|	И ИнвентаризацияЗапасов.Количество - ИнвентаризацияЗапасов.КоличествоУчет > 0
	|	И ВЫБОР
	|			КОГДА ИнвентаризацияЗапасов.Партия <> ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИнвентаризацияЗапасов.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.СобственныеЗапасы)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияЗапасов.Номенклатура,
	|	ИнвентаризацияЗапасов.Характеристика,
	|	ИнвентаризацияЗапасов.Партия,
	|	ИнвентаризацияЗапасов.ЕдиницаИзмерения,
	|	ИнвентаризацияЗапасов.Цена
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаИнвентаризацияЗапасов);
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ВызватьИсключение НСтр("ru = 'Нет данных для оформления оприходования!'");
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		КоличествоОприходовать = Выборка.КоличествоОтклонениеИнвентаризации - Выборка.КоличествоОприходованное;
		Если КоличествоОприходовать <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
		
		СтрокаТабличнойЧасти.Количество = КоличествоОприходовать;
		СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
		
	КонецЦикла;
	
	Если Запасы.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Нет данных для оформления оприходования!'");
	КонецЕсли;
	
КонецПроцедуры

// Обработчик заполнения на основании документа ПриходныйОрдер.
//
// Параметры:
//  ДокументСсылкаПриходныйОрдер	 - ДокументСсылка.ПриходныйОрдер
//
Процедура ЗаполнитьПоПриходномуОрдеру(ДокументСсылкаПриходныйОрдер) Экспорт
	
	Организация = ДокументСсылкаПриходныйОрдер.Организация;
	СтруктурнаяЕдиница = ДокументСсылкаПриходныйОрдер.СтруктурнаяЕдиница;
	Ячейка = ДокументСсылкаПриходныйОрдер.Ячейка;
	
	Для Каждого ТекСтрокаЗапасы Из ДокументСсылкаПриходныйОрдер.Запасы Цикл
		НоваяСтрока = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаЗапасы);
	КонецЦикла;
	
	РаботаССерийнымиНомерами.ЗаполнитьТЧСерийныеНомераПоКлючуСвязи(ЭтотОбъект, ДокументСсылкаПриходныйОрдер);
	
КонецПроцедуры

// Обработчик заполнения на основании документа ПриходныйОрдер.
//
// Параметры:
//  ДокументСсылкаПриходныйОрдер	 - ДокументСсылка.ПриходныйОрдер
//
Процедура ЗаполнитьПоПриемИПередачаВРемонт(ДокументСсылкаПриемИПередачаВРемонт) Экспорт
	
	Организация = ДокументСсылкаПриемИПередачаВРемонт.Организация;
	СтруктурнаяЕдиница = ДокументСсылкаПриемИПередачаВРемонт.СтруктурнаяЕдиница;
	ДокументОснование = ДокументСсылкаПриемИПередачаВРемонт;
	
	НоваяСтрока = Запасы.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДокументСсылкаПриемИПередачаВРемонт);
	НоваяСтрока.КлючСвязи = 1;
	НоваяСтрока.Количество = 1;
	НоваяСтрока.ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура, "ЕдиницаИзмерения");
	
	Если ЗначениеЗаполнено(ДокументСсылкаПриемИПередачаВРемонт.СерийныйНомер) Тогда
		НоваяСтрокаСН = СерийныеНомера.Добавить();
		НоваяСтрокаСН.СерийныйНомер = ДокументСсылкаПриемИПередачаВРемонт.СерийныйНомер;
		НоваяСтрокаСН.КлючСвязи = НоваяСтрока.КлючСвязи;
		
		НоваяСтрока.СерийныеНомера = РаботаССерийнымиНомерамиКлиентСервер.СтроковоеПредставлениеСерийныхНомеровСтроки(СерийныеНомера, НоваяСтрокаСН.КлючСвязи);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура проверяет наличие розничной цены.
//
Процедура ПроверитьНаличиеРозничнойЦены(Отказ)
	
	Если СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
	 ИЛИ СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
	 
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("ТаблицаДокумента", Запасы);
		Запрос.УстановитьПараметр("РозничныйВидЦен", СтруктурнаяЕдиница.РозничныйВидЦен);
		Запрос.УстановитьПараметр("СписокНоменклатура", Запасы.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("СписокХарактеристика", Запасы.ВыгрузитьКолонку("Характеристика"));
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Характеристика КАК Характеристика,
		|	ТаблицаДокумента.Партия КАК Партия
		|ПОМЕСТИТЬ ПеремещениеЗапасовЗапасы
		|ИЗ
		|	&ТаблицаДокумента КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПеремещениеЗапасовЗапасы.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕ(ПеремещениеЗапасовЗапасы.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ПеремещениеЗапасовЗапасы.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ПеремещениеЗапасовЗапасы.Партия) КАК ПартияПредставление
		|ИЗ
		|	ПеремещениеЗапасовЗапасы КАК ПеремещениеЗапасовЗапасы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|				&Дата,
		|				ВидЦен = &РозничныйВидЦен
		|					И Номенклатура В (&СписокНоменклатура)
		|					И Характеристика В (&СписокХарактеристика)) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО ПеремещениеЗапасовЗапасы.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И ПеремещениеЗапасовЗапасы.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		|ГДЕ
		|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) = 0";
		
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
			
			ТекстСообщения = НСтр("ru = 'Для номенклатуры %ПредставлениеНоменклатуры% в строке %НомерСтроки% списка ""Запасы"" не установлена розничная цена!'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка(ВыборкаРезультатаЗапроса.НомерСтроки));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%",  УправлениеНебольшойФирмойСервер.ПредставлениеНоменклатуры(ВыборкаРезультатаЗапроса.НоменклатураПредставление, ВыборкаРезультатаЗапроса.ХарактеристикаПредставление, ВыборкаРезультатаЗапроса.ПартияПредставление));
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				"Запасы",
				ВыборкаРезультатаЗапроса.НомерСтроки,
				"Номенклатура",
				Отказ
			);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьНаличиеРозничнойЦены()

#КонецОбласти

#Область ОбработчикиСобытий

// В обработчике события ОбработкаЗаполнения документа выполняется
// - заполнение документа по инвентаризации запасов на складе.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ИнвентаризацияЗапасов")] = "ЗаполнитьПоИнвентаризацииЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриходныйОрдер")] = "ЗаполнитьПоПриходномуОрдеру";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриемИПередачаВРемонт")] = "ЗаполнитьПоПриемИПередачаВРемонт";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Проверка наличия розничной цены.
	ПроверитьНаличиеРозничнойЦены(Отказ);
	
	// Серийные номера
	Если НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница,"ОрдерныйСклад") = Истина Тогда
		РаботаССерийнымиНомерами.ПроверкаЗаполненияСерийныхНомеров(Отказ, Запасы, СерийныеНомера, СтруктурнаяЕдиница, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Запасы.Итог("Сумма");
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.ОприходованиеЗапасов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыКПоступлениюНаСклады(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасы(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыВРазрезеГТД(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьДоходыИРасходы(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);

	// СерийныеНомера
	УправлениеНебольшойФирмойСервер.ОтразитьСерийныеНомераГарантии(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьСерийныеНомераОстатки(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.ОприходованиеЗапасов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.ОприходованиеЗапасов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли