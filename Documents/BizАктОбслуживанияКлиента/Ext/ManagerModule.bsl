////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УслугиИТС,ОтгрузкаИТС,АктЗаказНаряд,АктРасходнаяНакладная,СчетЗаказНаряд,СчетЗаказНаПродажу";
	КомандаПечати.Представление = НСтр("ru = 'Настраиваемый комплект документов'");
	КомандаПечати.СписокФорм = "ФормаДокумента";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Картинка =  БиблиотекаКартинок.ПечатьСразу;
	КомандаПечати.Порядок = 1;

	// Отгрузочные документы на ИТС
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.BizАктОбслуживанияКлиента";
	КомандаПечати.Идентификатор = "УслугиИТС";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг (ИТС)'");
	КомандаПечати.СписокФорм    = "ФормаДокумента";
	КомандаПечати.Картинка =  БиблиотекаКартинок.ФорматMXL;
	КомандаПечати.Порядок = 2;
	
	//Расходная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.BizАктОбслуживанияКлиента";
	КомандаПечати.Идентификатор = "ОтгрузкаИТС";
	КомандаПечати.Представление = НСтр("ru = 'Складская накладная (ИТС)'");
	КомандаПечати.СписокФорм    = "ФормаДокумента";
	КомандаПечати.Картинка =  БиблиотекаКартинок.ФорматMXL;
	КомандаПечати.Порядок = 3;
	// ПФ из документа Заказ-наряд
	//Акт
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.BizАктОбслуживанияКлиента";
	КомандаПечати.Идентификатор = "АктЗаказНаряд";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг сопровождения (Заказ-наряд)'");
	КомандаПечати.СписокФорм    = "ФормаДокумента";
	КомандаПечати.Картинка =  БиблиотекаКартинок.ФорматMXL;
	КомандаПечати.Порядок = 5;
	
	//Счет из документа Заказ-наряд
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.BizАктОбслуживанияКлиента";
	КомандаПечати.Идентификатор = "СчетЗаказНаряд";
	КомандаПечати.Представление = НСтр("ru = 'Счет на оплату услуг сопровождения (Заказ-наряд)'");
	КомандаПечати.СписокФорм    = "ФормаДокумента";
	КомандаПечати.Картинка =  БиблиотекаКартинок.ФорматMXL;
	КомандаПечати.Порядок = 4;
	
	
	//ПФ из документа Заказ на продажу
	//Счет на оплату
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.BizАктОбслуживанияКлиента";
	КомандаПечати.Идентификатор = "СчетЗаказНаПродажу";
	КомандаПечати.Представление = НСтр("ru = 'Счет на оплату (Заказ на продажу)'");
	КомандаПечати.СписокФорм    = "ФормаДокумента";
	КомандаПечати.Картинка =  БиблиотекаКартинок.ФорматMXL;
	КомандаПечати.Порядок = 6;
	
	//ПФ из документа Расходная накладная
	//Акт об оказании услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.BizАктОбслуживанияКлиента";
	КомандаПечати.Идентификатор = "АктРасходнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг сопровождения (Заказ на продажу)'");
	КомандаПечати.СписокФорм    = "ФормаДокумента";
	КомандаПечати.Картинка =  БиблиотекаКартинок.ФорматMXL;
	КомандаПечати.Порядок = 7;



КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт 	
	
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УслугиИТС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "УслугиИТС", "Акт об оказании услуг ИТС", 
		СформироватьАктОбОказанииУслугИТС(МассивОбъектов, ОбъектыПечати),БиблиотекаКартинок.ФорматMXL,"Документ.BizАктОбслуживанияКлиента.бизАктОбОказанииУслуг");
		
	ИначеЕсли 
		УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтгрузкаИТС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтгрузкаИТС", "Отгрузка комплектов ИТС", 
		СформироватьРасходнуюНакладную(МассивОбъектов, ОбъектыПечати),БиблиотекаКартинок.ФорматMXL,"ОбщийМакет.ПФ_MXL_Накладная");
		
	ИначеЕсли 
		УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктЗаказНаряд") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктЗаказНаряд", "Акт об оказании услуг сопровождения (Заказ-наряд)", 
		бизЗаполнениеДокументов.СформироватьАктОбОказанииУслугЗаказНаряд(МассивОбъектов, ОбъектыПечати, Перечисления.БизВидыДокументов.ЗаказНаряд),БиблиотекаКартинок.ФорматMXL,"Документ.BizАктОбслуживанияКлиента.бизАктОбОказанииУслугЗаказНаряд");	
	ИначеЕсли 
		УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктРасходнаяНакладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктРасходнаяНакладная", "Акт об оказании услуг сопровождения (Заказ на продажу)", 
		СформироватьАктОбОказанииУслугРасходнаяНакладная(МассивОбъектов, ОбъектыПечати, Перечисления.БизВидыДокументов.РасходнаяНакладная),БиблиотекаКартинок.ФорматMXL,"Документ.BizАктОбслуживанияКлиента.бизАктОбОказанииУслугЗаказНаряд");		
		
	ИначеЕсли 
		УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетЗаказНаряд") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетЗаказНаряд", "Счет на оплату услуг сопровождения (Заказ-наряд)", 
		СформироватьСчетНаОплатуЗаказНаряд(МассивОбъектов, ОбъектыПечати,"СчетНаОплату",Перечисления.БизВидыДокументов.ЗаказНаряд),БиблиотекаКартинок.ФорматMXL,"Документ.ЗаказПокупателя.ПФ_MXL_СчетНаОплату");
		
	ИначеЕсли 
		УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетЗаказНаПродажу") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетЗаказНаПродажу", "Счет на оплату (Заказ на продажу)", 
		СформироватьСчетНаОплатуЗаказНаряд(МассивОбъектов, ОбъектыПечати,"СчетНаОплату",Перечисления.БизВидыДокументов.ЗаказНаПродажу),БиблиотекаКартинок.ФорматMXL,"Документ.ЗаказПокупателя.ПФ_MXL_СчетНаОплату");	
	КонецЕсли;
	
КонецПроцедуры 


// Функция формирует печатную форму документа.
//
// Параметры:
// Тип - Строка - тип печатной формы: Заказ или Счет
// МассивОбъектов - Массив - массив документов для печати
// ОбъектыПечати - СписокЗначений
//
// Возвращаемое значение:
// ТабличныйДокумент
//
Функция  СформироватьАктОбОказанииУслугИТС(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
		
	Для Каждого АктОбслуживанияИТС Из МассивОбъектов Цикл
		ТекущийДокумент  = АктОбслуживанияИТС.ДокументОтгрузкиИТС;
		
		Если ТекущийДокумент = Документы.РасходнаяНакладная.ПустаяСсылка() Тогда
		
			Возврат ТабличныйДокумент;
		
		КонецЕсли;

		Если ПривилегированныйРежим() Тогда
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасходнаяНакладная.Дата КАК ДатаДокумента,
		|	РасходнаяНакладная.Номер КАК Номер,
		|	РасходнаяНакладная.Организация КАК Руководители,
		|	РасходнаяНакладная.Организация.Префикс КАК Префикс,
		|	РасходнаяНакладная.Организация КАК Организация,
		|	РасходнаяНакладная.БанковскийСчет КАК БанковскийСчет,
		|	РасходнаяНакладная.Контрагент КАК Контрагент,
		|	РасходнаяНакладная.Организация КАК Поставщик,
		|	ВЫБОР
		|		КОГДА РасходнаяНакладная.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА РасходнаяНакладная.Контрагент
		|		ИНАЧЕ РасходнаяНакладная.Грузополучатель
		|	КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР
		|		КОГДА РасходнаяНакладная.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА РасходнаяНакладная.Организация
		|		ИНАЧЕ РасходнаяНакладная.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|	РасходнаяНакладная.Контрагент КАК Плательщик,
		|	РасходнаяНакладная.Договор.Представление КАК Основание,
		|	РасходнаяНакладная.ВалютаДокумента,
		|	РасходнаяНакладная.СуммаВключаетНДС,
		|	РасходнаяНакладная.НДСВключатьВСтоимость,
		|	РасходнаяНакладная.Курс,
		|	РасходнаяНакладная.Кратность
		|ИЗ
		|	Документ.РасходнаяНакладная КАК РасходнаяНакладная
		|ГДЕ
		|	РасходнаяНакладная.Ссылка = &ТекущийДокумент";
		Шапка = Запрос.Выполнить().Выбрать();
		
		Шапка.Следующий();
		
		ИспользоватьПересчет = (НЕ Шапка.ВалютаДокумента = Константы.НациональнаяВалюта.Получить());
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Содержание КАК Содержание,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
		|			ТОГДА ВложенныйЗапрос.Номенклатура.Наименование
		|		ИНАЧЕ ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
		|	КОНЕЦ КАК ЗапасНаименование,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Номенклатура.Код КАК ЗапасКод,
		|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
		|	ВложенныйЗапрос.ЕдиницаИзмеренияДляПечати.Наименование КАК БазоваяЕдиницаНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмеренияДляПечати.Код КАК БазоваяЕдиницаКодПоОКЕИ,
		|	ВложенныйЗапрос.ЕдиницаИзмеренияДокумент КАК ЕдиницаИзмеренияДокумент,
		|	ВложенныйЗапрос.ЕдиницаИзмеренияДокумент КАК ВидУпаковки,
		|	0 КАК КоличествоВОдномМесте,
		|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
		|	&Цена_Параметр КАК Цена,
		|	ВложенныйЗапрос.Количество КАК Количество,
		|	0 КАК КоличествоМест,
		|	&Сумма_Параметр КАК Сумма,
		|	&СуммаНДС_Параметр КАК СуммаНДС,
		|	&Всего_Параметр КАК Всего,
		|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
		|	1 КАК ID
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
		|		РасходнаяНакладнаяЗапасы.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДляПечати,
		|		РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДокумент,
		|		РасходнаяНакладнаяЗапасы.СтавкаНДС КАК СтавкаНДС,
		|		РасходнаяНакладнаяЗапасы.Цена КАК Цена,
		|		СУММА(РасходнаяНакладнаяЗапасы.Количество) КАК Количество,
		|		СУММА(РасходнаяНакладнаяЗапасы.Сумма) КАК Сумма,
		|		СУММА(РасходнаяНакладнаяЗапасы.СуммаНДС) КАК СуммаНДС,
		|		СУММА(РасходнаяНакладнаяЗапасы.Всего) КАК Всего,
		|		МИНИМУМ(РасходнаяНакладнаяЗапасы.НомерСтроки) КАК НомерСтроки,
		|		РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
		|		ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.Содержание КАК СТРОКА(1000)) КАК Содержание
		|	ИЗ
		|		Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
		|	ГДЕ
		|		РасходнаяНакладнаяЗапасы.Ссылка = &ТекущийДокумент
		|	
		|	СГРУППИРОВАТЬ ПО
		|		РасходнаяНакладнаяЗапасы.Номенклатура,
		|		РасходнаяНакладнаяЗапасы.Номенклатура.ЕдиницаИзмерения,
		|		РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения,
		|		РасходнаяНакладнаяЗапасы.СтавкаНДС,
		|		РасходнаяНакладнаяЗапасы.Цена,
		|		РасходнаяНакладнаяЗапасы.Характеристика,
		|		ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.Содержание КАК СТРОКА(1000))) КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|   ИЛИ ВложенныйЗапрос.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ID,
		|	НомерСтроки";
		
		Если ИспользоватьПересчет Тогда
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Цена_Параметр", 		"Выразить(ВложенныйЗапрос.Цена * &Курс / &Кратность КАК Число(15,2))");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Сумма_Параметр", 	"Выразить(ВложенныйЗапрос.Сумма * &Курс / &Кратность КАК Число(15,2))");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СуммаНДС_Параметр", 	"Выразить(ВложенныйЗапрос.СуммаНДС * &Курс / &Кратность КАК Число(15,2))");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Всего_Параметр", 	"Выразить(ВложенныйЗапрос.Всего * &Курс / &Кратность КАК Число(15,2))");
			
			Запрос.УстановитьПараметр("Курс",		Шапка.Курс);
			Запрос.УстановитьПараметр("Кратность",	Шапка.Кратность);
			
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Цена_Параметр", 		"ВложенныйЗапрос.Цена");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Сумма_Параметр", 	"ВложенныйЗапрос.Сумма");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СуммаНДС_Параметр", 	"ВложенныйЗапрос.СуммаНДС");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Всего_Параметр", 	"ВложенныйЗапрос.Всего");
			
		КонецЕсли;
		
		ЗапросЗапасы = Запрос.Выполнить().Выгрузить();
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходнаяНакладная_ТОРГ12";
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.BizАктОбслуживанияКлиента.бизАктОбОказанииУслуг");
		
		ОбластьМакетаШапка				= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаЗаголовокТаблицы	= Макет.ПолучитьОбласть("ЗаголовокТаб");
		ОбластьМакетаСтрока				= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогоПоСтранице	= Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьМакетаВсего				= Макет.ПолучитьОбласть("Всего");
		ОбластьМакетаПодвал				= Макет.ПолучитьОбласть("Подвал");
		
		// Выводим общие реквизиты шапки
		
		СведенияОПоставщике			= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация,		Шапка.ДатаДокумента, , Шапка.БанковскийСчет);
		СведенияОГрузоотправителе	= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Грузоотправитель,Шапка.ДатаДокумента, ,);
		СведенияОПокупателе			= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Контрагент,		Шапка.ДатаДокумента, ,);
		СведенияОГрузополучателе	= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Грузополучатель,	Шапка.ДатаДокумента, ,);
		
		ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
		
		Если Шапка.ДатаДокумента < Дата('20110101') Тогда
			НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
		Иначе
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Истина, Истина);
		КонецЕсли;
		
		ОбластьМакетаШапка.Параметры.НомерДокумента = НомерДокумента;
		ОбластьМакетаШапка.Параметры.ДатаДокумента  = Шапка.ДатаДокумента;
		
		Если Шапка.Организация = Шапка.Грузоотправитель Тогда
			ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет");
		Иначе
			ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет");
		КонецЕсли;
		
		ОбластьМакетаШапка.Параметры.ПредставлениеГрузополучателя = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе,"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		//ОбластьМакетаШапка.Параметры.ПредставлениеПоставщика      = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПоставщике);
		ОбластьМакетаШапка.Параметры.ПредставлениеПлательщика     = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПокупателе);
		
		// Выводим всевозможные коды
		//ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО     = СведенияОГрузоотправителе.КодПоОКПО;
		//ОбластьМакетаШапка.Параметры.ВидДеятельностиПоОКДП = "";
		//ОбластьМакетаШапка.Параметры.ГрузополучательПоОКПО = СведенияОГрузополучателе.КодПоОКПО;
		//ОбластьМакетаШапка.Параметры.ПоставщикПоОКПО  = СведенияОПоставщике.КодПоОКПО;
		//ОбластьМакетаШапка.Параметры.ПлательщикПоОКПО = СведенияОПокупателе.КодПоОКПО;
		//ОбластьМакетаШапка.Параметры.ОснованиеНомер   = "";
		//ОбластьМакетаШапка.Параметры.ОснованиеДата    = "";
		//ОбластьМакетаШапка.Параметры.ТранспортнаяНакладнаяНомер = "";
		//ОбластьМакетаШапка.Параметры.ТранспортнаяНакладнаяДата  = "";
		
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		
		// Инициализация счетчика страниц
		НомерСтраницы = 1;
		
		// Инициализация итогов по странице
		ИтогоМестНаСтранице       = 0;
		ИтогоКоличествоНаСтранице = 0;
		ИтогоСуммаНаСтранице      = 0;
		ИтогоНДСНаСтранице        = 0;
		ИтогоСуммаСНДСНаСтранице  = 0;
		
		// Инициализация итогов по документу
		ИтогоМест       = 0;
		ИтогоКоличество = 0;
		ИтогоСуммаСНДС  = 0;
		ИтогоСумма      = 0;
		ИтогоНДС        = 0;
		
		// Инициализация счетчика строк
		НомерСтроки     = 0;
		КоличествоСтрок = ЗапросЗапасы.Количество();
		
		Лицензиар = ТекущийДокумент.Организация;
		Лицензиат = ТекущийДокумент.Контрагент;
		
		ВидКонтактнойИнформацииКонтрагента = Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Полное наименование контрагента");
		ВидКонтактнойИнформацииОрганизации = Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Полное наименование Организации");
		
		ПолноеНаименованиеОрганизации = Лицензиар.КонтактнаяИнформация.Найти(ВидКонтактнойИнформацииОрганизации, "Вид");
		ПолноеНаименованиеКонтрагента = Лицензиат.КонтактнаяИнформация.Найти(ВидКонтактнойИнформацииКонтрагента, "Вид");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "";
				
		Если ЗначениеЗаполнено(ПолноеНаименованиеКонтрагента) Тогда
		
			ЛицензиатПолное = СокрЛП(ПолноеНаименованиеКонтрагента.Представление);	
		
		Иначе
			
			Сообщение.Текст = "Невозможно получить наименование для печати из контактной информации, будет использованно ""Полное наименование контрагента""";
			Сообщение.Сообщить();
			ЛицензиатПолное = Лицензиат.НаименованиеПолное;
		
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПолноеНаименованиеОрганизации) Тогда
		
			ЛицензиарПолное = СокрЛП(ПолноеНаименованиеОрганизации.Представление);	
		
		Иначе
			
			Сообщение.Текст = "Невозможно получить наименование организации для печати из контактной информации, будет использованно ""Полное наименование организации""";
			Сообщение.Сообщить();
			ЛицензиарПолное = ЛицензиарПолное.НаименованиеПолное;
		
		КонецЕсли;

		
		ОбластьМакетаЗаголовокТаблицы.Параметры.СодержаниеАкта = 
			ЛицензиарПолное + 
			", далее Исполнитель, и " 
			+ ЛицензиатПолное + 
			", далее Заказчик, составили и подписали настоящий Акт сдачи-приемки о том, что Исполнитель выполнил, а  Заказчик принял следующие работы (услуги):";
			
		
		// Выводим заголовок многострочной части
		ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
		
		// Выводим многострочную часть докмента
		Для Каждого ВыборкаСтрок Из ЗапросЗапасы Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
			
			ОбластьМакетаСтрока.Параметры.Номер = НомерСтроки;
			
			//Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.КоличествоМест) Тогда
			//	
			//	ОбластьМакетаСтрока.Параметры.ВидУпаковки 			= "";
			//	ОбластьМакетаСтрока.Параметры.КоличествоВОдномМесте	= "";
			//	
			//КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаСтрок.Содержание) Тогда
				ОбластьМакетаСтрока.Параметры.ТоварНаименование = ВыборкаСтрок.Содержание;
			Иначе
				ОбластьМакетаСтрока.Параметры.ТоварНаименование = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрок.ЗапасНаименование, 
				ВыборкаСтрок.Характеристика, ВыборкаСтрок.Артикул);
			КонецЕсли;
			
			СуммаСНДС = ВыборкаСтрок.Всего;
			
			КоличествоМест	= ВыборкаСтрок.КоличествоМест;
			
			Коэффициент = 1;
			Если ТипЗнч(ВыборкаСтрок.ЕдиницаИзмеренияДокумент) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
				
				Коэффициент = ВыборкаСтрок.ЕдиницаИзмеренияДокумент.Коэффициент;
				
			КонецЕсли;
			
			Количество		= ВыборкаСтрок.Количество * Коэффициент;
			ОбластьМакетаСтрока.Параметры.Количество = Количество;
			
			СуммаНДС		= ВыборкаСтрок.СуммаНДС;
			СуммаБезНДС		= ВыборкаСтрок.Сумма - ?(Шапка.СуммаВключаетНДС, ВыборкаСтрок.СуммаНДС, 0);
			
			ОбластьМакетаСтрока.Параметры.СуммаСНДС   = СуммаСНДС;
			ОбластьМакетаСтрока.Параметры.СуммаНДС    = СуммаНДС;
			ОбластьМакетаСтрока.Параметры.СтавкаНДС   = ВыборкаСтрок.СтавкаНДС;
			ОбластьМакетаСтрока.Параметры.СуммаБезНДС = СуммаБезНДС;
			ОбластьМакетаСтрока.Параметры.Цена        = СуммаБезНДС / ?(Количество = 0, 1, Количество);
			
			// Проверим вывод
			СтрокаСПодвалом = Новый Массив;
			Если НомерСтроки = 1 Тогда
				СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы);// если первая строка, то должен
			КонецЕсли;													// помещаться заголовок
			СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
			Если НомерСтроки = КоличествоСтрок Тогда			// если последняя строка, должен
				СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);	// помещаться и подвал документа
				СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			КонецЕсли;
			
			Если НомерСтроки <> 1 И НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
				
				// Выводим итоги по странице
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогМестПоСтранице       = ИтогоМестНаСтранице;
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогКоличествоПоСтранице = ИтогоКоличествоНаСтранице;
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтранице      = ИтогоСуммаНаСтранице;
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогНДСПоСтранице        = ИтогоНДСНаСтранице;
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице  = ИтогоСуммаСНДСНаСтранице;
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				// Очистим итоги по странице
				ИтогоМестНаСтранице       = 0;
				ИтогоКоличествоНаСтранице = 0;
				ИтогоСуммаНаСтранице      = 0;
				ИтогоНДСНаСтранице        = 0;
				ИтогоСуммаСНДСНаСтранице  = 0;
				
				// Выведем заголовок таблицы
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			
			// Увеличим итоги по странице
			ИтогоМестНаСтранице       = ИтогоМестНаСтранице       + КоличествоМест;
			ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
			ИтогоСуммаНаСтранице      = ИтогоСуммаНаСтранице      + СуммаБезНДС;
			ИтогоНДСНаСтранице        = ИтогоНДСНаСтранице        + СуммаНДС;
			ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
			
			// Увеличим итоги по документу
			ИтогоМест       = ИтогоМест       + КоличествоМест;
			ИтогоКоличество = ИтогоКоличество + Количество;
			ИтогоСумма      = ИтогоСумма      + СуммаБезНДС;
			ИтогоНДС        = ИтогоНДС        + СуммаНДС;
			ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
			
		КонецЦикла;
		
		// Выводим итоги по странице
		//ОбластьМакетаИтогоПоСтранице.Параметры.ИтогМестПоСтранице       = ИтогоМестНаСтранице;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогКоличествоПоСтранице = ИтогоКоличествоНаСтранице;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтранице      = ИтогоСуммаНаСтранице;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогНДСПоСтранице        = ИтогоНДСНаСтранице;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице  = ИтогоСуммаСНДСНаСтранице;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
		
		// Выводим итоги по документу в целом
		//ОбластьМакетаВсего.Параметры.ИтогМест       = ИтогоМест;
		ОбластьМакетаВсего.Параметры.ИтогКоличество = ИтогоКоличество;
		ОбластьМакетаВсего.Параметры.ИтогСуммы      = ИтогоСумма;
		ОбластьМакетаВсего.Параметры.ИтогНДС        = ИтогоНДС;
		ОбластьМакетаВсего.Параметры.ИтогСуммыСНДС  = ИтогоСуммаСНДС;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаВсего);
		
		// Выводим подвал документа
		// Выводим подвал документа
		ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();		
		Руководители = бизЗаполнениеДокументов.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Руководители,
						ПользовательИБ.УникальныйИдентификатор, Шапка.ДатаДокумента);
						
		Если Прав(Строка(НомерСтраницы), 1) = "1" Тогда
			ПредставлениеЛиста = "Листе";
		Иначе 
			ПредставлениеЛиста = "Листах";
		КонецЕсли;
		
			
		ОбластьМакетаПодвал.Параметры.КоличествоЛистовВАкте = "" + НомерСтраницы + " " + ПредставлениеЛиста;
		ОбластьМакетаПодвал.Параметры.ФИОРуководителя		= Руководители.ФИОРуководителя;
		ОбластьМакетаПодвал.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
		ОбластьМакетаПодвал.Параметры.ПредставлениеПодписанта = Руководители.ПредставлениеПодписантаРуководителя;

		
		ОбластьМакетаПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
		//ОбластьМакетаПодвал.Параметры.ВсегоМестПрописью							= ?(ИтогоМест = 0, "", ЧислоПрописью(ИтогоМест, ,",,,С,,,,,0")); 
		ОбластьМакетаПодвал.Параметры.СуммаПрописью								= РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.НациональнаяВалюта.Получить());
		
		ПолнаяДатаДокумента = Формат(Шапка.ДатаДокумента, "ДФ=""дд ММММ гггг """"года""""""");
		ДлинаСтроки			= СтрДлина(ПолнаяДатаДокумента);
		ПервыйРазделитель	= Найти(ПолнаяДатаДокумента," ");
		ВторойРазделитель	= Найти(Прав(ПолнаяДатаДокумента,ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
		
		ОбластьМакетаПодвал.Параметры.ДатаДокументаДень	 = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель - 1) + """";
		ОбластьМакетаПодвал.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
		ОбластьМакетаПодвал.Параметры.ДатаДокументаГод	 = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);	
		
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		НомерСтрокиНачало = 1;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
	КонецЦикла;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции // СформироватьПечатнуюФорму()
Функция СформироватьРасходнуюНакладную(МассивОбъектов,ОбъектыПечати)
	
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_РасходнаяНакладная";
	
	ПервыйДокумент = Истина;
	
	Для Каждого АктОбслуживания Из МассивОбъектов Цикл
		ТекущийДокумент = АктОбслуживания.ДокументОтгрузкиИТС;
			
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗапросОрганизации = Новый Запрос;
		ЗапросОрганизации.Текст = "ВЫБРАТЬ
		                          |	бизПодписки.Организация
		                          |ИЗ
		                          |	РегистрСведений.бизПодписки КАК бизПодписки
		                          |ГДЕ
		                          |	бизПодписки.Контрагент = &Контрагент
		                          |	И бизПодписки.ДатаНачалаПодписки <= &Дата
		                          |	И бизПодписки.ДатаОкончанияПодписки >= &Дата";
		ЗапросОрганизации.УстановитьПараметр("Контрагент", АктОбслуживания.Контрагент);
		ЗапросОрганизации.УстановитьПараметр("Дата",АктОбслуживания.Дата);
		
		РезультатЗАпроса = ЗапросОрганизации.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий()Цикл
			
			ОрганизацияИТС = Выборка.Организация;
			
		КонецЦикла;
		
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("АктОбслуживания", АктОбслуживания);
		Запрос.Текст = "ВЫБРАТЬ
		               |	BizАктОбслуживанияКлиента.Дата КАК ДатаДокумента,
		               |	&ОрганизацияИТС КАК Организация,
		               |	BizАктОбслуживанияКлиента.Контрагент,
		               |	BizАктОбслуживанияКлиента.Исполнитель КАК Отпустил,
		               |	BizАктОбслуживанияКлиента.Организация.Префикс,
		               |	BizАктОбслуживанияКлиента.Номер
		               |ИЗ
		               |	Документ.BizАктОбслуживанияКлиента КАК BizАктОбслуживанияКлиента
		               |ГДЕ
		               |	BizАктОбслуживанияКлиента.Ссылка = &АктОбслуживания
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	BizАктОбслуживанияКлиентаПодпискиИТС.Ссылка,
		               |	BizАктОбслуживанияКлиентаПодпискиИТС.НомерСтроки,
		               |	""Комплект "" + BizАктОбслуживанияКлиентаПодпискиИТС.ВидПодписки.Наименование + "". "" + BizАктОбслуживанияКлиентаПодпискиИТС.ПериодПодписки.Наименование КАК Запас,
		               |	BizАктОбслуживанияКлиентаПодпискиИТС.Количество,
		               |	""-"" КАК Цена,
		               |	""-"" КАК Сумма
		               |ИЗ
		               |	Документ.BizАктОбслуживанияКлиента.ПодпискиИТС КАК BizАктОбслуживанияКлиентаПодпискиИТС
		               |ГДЕ
		               |	BizАктОбслуживанияКлиентаПодпискиИТС.Ссылка = &АктОбслуживания";				
				
		Запрос.УстановитьПараметр("ОрганизацияИТС",ОрганизацияИТС);			   
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		Шапка = РезультатЗапроса[0].Выбрать();
	    Шапка.Следующий(); 
		
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходнаяНакладная_Накладная";
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_Накладная");
		СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, ,);
		СведенияОбКонтрагенте = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента, ,);
		
		Если Шапка.ДатаДокумента < Дата('20110101') Тогда
			НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
		Иначе
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Истина, Истина);
		КонецЕсли;		
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = "Расходная накладная № "
		+ НомерДокумента
		+ " от "
		+ Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
		
		//ОбластьМакета.Параметры.ВидОперации = Шапка.ВидОперации;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ФактическийАдрес");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбКонтрагенте, "ПолноеНаименование,ФактическийАдрес");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
		
		
		Сумма		= 0;
		СуммаНДС	= 0;
		Всего		= 0;
		Количество	= 0;
		
		ВыборкаСтрокЗапасы = РезультатЗапроса[1].Выбрать();
				
		Пока ВыборкаСтрокЗапасы.Следующий() Цикл
									
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);				
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Сумма		= 0; //Сумма		+ ВыборкаСтрокЗапасы.Сумма;
			//СуммаНДС	= СуммаНДС	+ ВыборкаСтрокЗапасы.СуммаНДС;
			//Всего		= Всего		+ ВыборкаСтрокЗапасы.Всего;
			Количество	= Количество+ 1;
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = УправлениеНебольшойФирмойСервер.ФорматСумм(Сумма);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		
		СуммаНДС = 0 ;
		Если СуммаНДС = 0 Тогда
			ОбластьМакета.Параметры.НДС = "Без налога (НДС)";
			ОбластьМакета.Параметры.ВсегоНДС = "-";
		Иначе
			ОбластьМакета.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
			ОбластьМакета.Параметры.ВсегоНДС = УправлениеНебольшойФирмойСервер.ФорматСумм(СуммаНДС);
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Всего;
		ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований "
		+ Строка(Количество)
		+ ", на сумму "
		+ УправлениеНебольшойФирмойСервер.ФорматСумм(СуммаКПрописи, Константы.ВалютаУчета.Получить());
		
		ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, Константы.ВалютаУчета.Получить());
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		ФИООтпускПроизвел = "";
		УправлениеНебольшойФирмойСервер.ФамилияИнициалыПоНаименованию(ФИООтпускПроизвел, Строка(Шапка.Отпустил));
		СтруктураЗначенийПараметров = Новый Структура("ОтветственныйПредставление", ФИООтпускПроизвел);
		
		ОбластьМакета.Параметры.Заполнить(СтруктураЗначенийПараметров);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтрокиНачало = 1;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);

		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	Возврат ТабличныйДокумент;
	
	
	
КонецФункции // СформироватьРасходнуюНакладную()
 // СформироватьАктОбОказанииУслугЗаказНаряд(МассивОбъектов, ОбъектыПечати)
Функция ПолучитьВыборкуДокументов(ТекущийДокумент,ВидОперации)

	// Получить выборку ссыллк на все отмеченные (Пометка = Истина) заказ-наряды в ТЧ ДокументыНаПечать
		// Выполнить обход выборки, на каждом витке цикла сформировать Табличный документ
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	BizАктОбслуживанияКлиентаДокументыНаПечать.Документ
		               |ИЗ
		               |	Документ.BizАктОбслуживанияКлиента.ДокументыНаПечать КАК BizАктОбслуживанияКлиентаДокументыНаПечать
		               |ГДЕ
		               |	BizАктОбслуживанияКлиентаДокументыНаПечать.Пометка = ИСТИНА
		               |	И BizАктОбслуживанияКлиентаДокументыНаПечать.Ссылка = &ТекущийДокумент
		               |	И BizАктОбслуживанияКлиентаДокументыНаПечать.ВидДокумента = &ВидОперации";
		Запрос.УстановитьПараметр("ТекущийДокумент",ТекущийДокумент);
		Запрос.УстановитьПараметр("ВидОперации",ВидОперации);
		РезультатЗапроса = Запрос.Выполнить();
		
				
		Выборка = РезультатЗапроса.Выбрать();
		
		Возврат Выборка;


КонецФункции // ПолучитьВыборкуДокументов()
Функция СформироватьСчетНаОплатуЗаказНаряд(МассивОбъектов, ОбъектыПечати, ИмяМакета,ВидОперации)
	
	Перем Ошибки;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Выборка = ПолучитьВыборкуДокументов(МассивОбъектов[0],ВидОперации);
	
	Если Выборка.Количество() = 0 Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	МассивОбъектов.Очистить();
	Пока Выборка.Следующий() Цикл
		МассивОбъектов.Добавить(Выборка.Документ);
	КонецЦикла;
		
		
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Ссылка,
	|	ЗаказПокупателя.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ЗаказПокупателя.ВалютаДокумента КАК ВалютаДокумента,
	|	ЗаказПокупателя.Дата КАК ДатаДокумента,
	|	ЗаказПокупателя.Номер КАК Номер,
	|	ЗаказПокупателя.БанковскийСчет КАК БанковскийСчет,
	|	ЗаказПокупателя.Контрагент КАК Контрагент,
	|	ЗаказПокупателя.Организация КАК Организация,
	|	ЗаказПокупателя.Организация.Префикс КАК Префикс,
	|	ЗаказПокупателя.Работы.(
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(ЗаказПокупателя.Работы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|				ТОГДА ЗаказПокупателя.Работы.Номенклатура.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(ЗаказПокупателя.Работы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		КОНЕЦ КАК Запас,
	|		Номенклатура.Артикул КАК Артикул,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма,
	|		СуммаНДС КАК СуммаНДС,
	|		Всего КАК Всего,
	|		ЗаказПокупателя.Работы.Количество * ЗаказПокупателя.Работы.Коэффициент * ЗаказПокупателя.Работы.Кратность КАК Количество,
	|		Характеристика,
	|		Содержание,
	|		ПроцентСкидкиНаценки,
	|		ВЫБОР
	|			КОГДА ЗаказПокупателя.Работы.ПроцентСкидкиНаценки <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЕстьСкидка,
	|		НомерСтроки КАК НомерСтроки
	|	),
	|	ЗаказПокупателя.Запасы.(
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(ЗаказПокупателя.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|				ТОГДА ЗаказПокупателя.Запасы.Номенклатура.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(ЗаказПокупателя.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		КОНЕЦ КАК Запас,
	|		Номенклатура.Артикул КАК Артикул,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма,
	|		СуммаНДС КАК СуммаНДС,
	|		Всего КАК Всего,
	|		Количество КАК Количество,
	|		Характеристика,
	|		Содержание,
	|		ПроцентСкидкиНаценки,
	|		ВЫБОР
	|			КОГДА ЗаказПокупателя.Запасы.ПроцентСкидкиНаценки <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЕстьСкидка,
	|		НомерСтроки КАК НомерСтроки
	|	),
	|	ЗаказПокупателя.ПлатежныйКалендарь.(
	|		ПроцентОплаты,
	|		СуммаОплаты,
	|		СуммаНДСОплаты
	|	)
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий() Цикл
		
		ОтчетОУдаленныхСоединениях = ШАпка.Ссылка.BizОтчетTW;
		
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();
		ВыборкаСтрокРаботы = Шапка.Работы.Выбрать();
		ТаблицаПредоплаты = Шапка.ПлатежныйКалендарь.Выгрузить(); 
				
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетНаОплату_СчетНаОплату";
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаказПокупателя.ПФ_MXL_СчетНаОплату");
		
		СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, ,Шапка.БанковскийСчет);
		СведенияОбКонтрагенте = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента, ,);
		
		//Если используется пользовательский макет - этих секций не было
		Если Макет.Области.Найти("ЗаглавиеСЛоготипом") <> Неопределено
			И Макет.Области.Найти("ЗаглавиеБезЛоготипа") <> Неопределено Тогда
			
			Если ЗначениеЗаполнено(Шапка.Организация.ФайлЛоготип) Тогда
				
				ОбластьМакета = Макет.ПолучитьОбласть("ЗаглавиеСЛоготипом");
				
				ДанныеКартинки = ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(Шапка.Организация.ФайлЛоготип);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					
					ОбластьМакета.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
					
				КонецЕсли;
				
			Иначе // Если картинки не выбраны печатаем обычный заголовок
				
				ОбластьМакета = Макет.ПолучитьОбласть("ЗаглавиеБезЛоготипа");
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		Иначе
			
			ТекстСообщения = НСтр("ru ='ВНИМАНИЕ! Возможно используется пользовательский макет. Штатный механизм печати счетов может работать некоректно.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстСообщения);
			
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчета");
		Если ЗначениеЗаполнено(СведенияОбОрганизации.Банк) Тогда
			ОбластьМакета.Параметры.БанкПолучателяПредставление = СведенияОбОрганизации.Банк.Наименование;
		КонецЕсли; 
		ОбластьМакета.Параметры.ИНН = СведенияОбОрганизации.ИНН;
		ОбластьМакета.Параметры.КПП = СведенияОбОрганизации.КПП;
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ?(ПустаяСтрока(СведенияОбОрганизации.ТекстКорреспондента), СведенияОбОрганизации.ПолноеНаименование, СведенияОбОрганизации.ТекстКорреспондента);
		ОбластьМакета.Параметры.БИКБанкаПолучателя = СведенияОбОрганизации.БИК;
		ОбластьМакета.Параметры.СчетБанкаПолучателяПредставление = СведенияОбОрганизации.КоррСчет;
		ОбластьМакета.Параметры.СчетПолучателяПредставление = СведенияОбОрганизации.НомерСчета;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если Шапка.ДатаДокумента < Дата('20110101') Тогда
			НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
		Иначе
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Истина, Истина);
		КонецЕсли;		
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = "Счет на оплату № "
												+ НомерДокумента
												+ " от "
												+ Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
												
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбКонтрагенте, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ЕстьСкидки = (Шапка.Запасы.Выгрузить().Итог("ЕстьСкидка") + Шапка.Работы.Выгрузить().Итог("ЕстьСкидка")) <> 0;
		
		Если ЕстьСкидки Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСоСкидкой");
			
		Иначе
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
		КонецЕсли;
		
		Сумма		= 0;
		СуммаНДС	= 0;
		Всего		= 0;
		Количество	= 0;

		Пока ВыборкаСтрокРаботы.Следующий() Цикл
			
			Количество = Количество + 1;
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокРаботы);
			ОбластьМакета.Параметры.НомерСтроки = Количество;
			
			Если ЗначениеЗаполнено(ВыборкаСтрокРаботы.Содержание) Тогда
				ОбластьМакета.Параметры.Запас = ВыборкаСтрокРаботы.Содержание;
			Иначе
				ОбластьМакета.Параметры.Запас = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокРаботы.Запас, 
																	ВыборкаСтрокРаботы.Характеристика, ВыборкаСтрокРаботы.Артикул);
			КонецЕсли;
						
			Если ЕстьСкидки Тогда
				Если ВыборкаСтрокРаботы.ПроцентСкидкиНаценки = 100 Тогда
					Скидка = ВыборкаСтрокРаботы.Цена * ВыборкаСтрокРаботы.Количество;
					ОбластьМакета.Параметры.Скидка         = Скидка;
					ОбластьМакета.Параметры.СуммаБезСкидки = Скидка;
				ИначеЕсли ВыборкаСтрокРаботы.ПроцентСкидкиНаценки = 0 Тогда
					ОбластьМакета.Параметры.Скидка         = 0;
					ОбластьМакета.Параметры.СуммаБезСкидки = ВыборкаСтрокРаботы.Сумма;
				Иначе
					Скидка = ВыборкаСтрокРаботы.Сумма * ВыборкаСтрокРаботы.ПроцентСкидкиНаценки / (100 - ВыборкаСтрокРаботы.ПроцентСкидкиНаценки);
					ОбластьМакета.Параметры.Скидка         = Скидка;
					ОбластьМакета.Параметры.СуммаБезСкидки = ВыборкаСтрокРаботы.Сумма + Скидка;
				КонецЕсли;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Сумма	= Сумма 	+ ВыборкаСтрокРаботы.Сумма;
			СуммаНДС= СуммаНДС	+ ВыборкаСтрокРаботы.СуммаНДС;
			Всего	= Всего		+ ВыборкаСтрокРаботы.Всего;
			
		КонецЦикла;
		
		Пока ВыборкаСтрокЗапасы.Следующий() Цикл
			
			Количество = Количество + 1;
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
			ОбластьМакета.Параметры.НомерСтроки = Количество;
			
			Если ЗначениеЗаполнено(ВыборкаСтрокЗапасы.Содержание) Тогда
				ОбластьМакета.Параметры.Запас = ВыборкаСтрокЗапасы.Содержание;
			Иначе
				ОбластьМакета.Параметры.Запас = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, 
																	ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул);
			КонецЕсли;
																
			Если ЕстьСкидки Тогда
				Если ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки = 100 Тогда
					Скидка = ВыборкаСтрокЗапасы.Цена * ВыборкаСтрокЗапасы.Количество;
					ОбластьМакета.Параметры.Скидка         = Скидка;
					ОбластьМакета.Параметры.СуммаБезСкидки = Скидка;
				ИначеЕсли ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки = 0 Тогда
					ОбластьМакета.Параметры.Скидка         = 0;
					ОбластьМакета.Параметры.СуммаБезСкидки = ВыборкаСтрокЗапасы.Сумма;
				Иначе
					Скидка = ВыборкаСтрокЗапасы.Сумма * ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки / (100 - ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки);
					ОбластьМакета.Параметры.Скидка         = Скидка;
					ОбластьМакета.Параметры.СуммаБезСкидки = ВыборкаСтрокЗапасы.Сумма + Скидка;
				КонецЕсли;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Сумма	= Сумма		+ ВыборкаСтрокЗапасы.Сумма;
			СуммаНДС= СуммаНДС	+ ВыборкаСтрокЗапасы.СуммаНДС;
			Всего	= Всего		+ ВыборкаСтрокЗапасы.Всего;
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = УправлениеНебольшойФирмойСервер.ФорматСумм(Сумма);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		Если СуммаНДС = 0 Тогда
			ОбластьМакета.Параметры.НДС = "Без налога (НДС)";
			ОбластьМакета.Параметры.ВсегоНДС = "-";
		Иначе
			ОбластьМакета.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
			ОбластьМакета.Параметры.ВсегоНДС = УправлениеНебольшойФирмойСервер.ФорматСумм(СуммаНДС);
		КонецЕсли; 
		
		Если ИмяМакета = "СчетНаЧастичнуюОплату" Тогда
			Если СуммаНДС = 0 Тогда
				ОбластьМакета.Параметры.НДСкОплате = "Без налога (НДС)";
				ОбластьМакета.Параметры.ВсегоНДСкОплате = "-";
			Иначе
				ОбластьМакета.Параметры.НДСкОплате = ?(Шапка.СуммаВключаетНДС, "В том числе НДС оплаты:", "Сумма НДС оплаты:");
				Если ТаблицаПредоплаты.Итог("ПроцентОплаты") > 0 Тогда
					ОбластьМакета.Параметры.ВсегоНДСкОплате = УправлениеНебольшойФирмойСервер.ФорматСумм(ТаблицаПредоплаты.Итог("СуммаНДСОплаты"));
				Иначе
					ОбластьМакета.Параметры.ВсегоНДСкОплате = "-";
				КонецЕсли;
			КонецЕсли; 
			Если ТаблицаПредоплаты.Итог("ПроцентОплаты") > 0 Тогда
				ОбластьМакета.Параметры.ВсегоКОплате = УправлениеНебольшойФирмойСервер.ФорматСумм(ТаблицаПредоплаты.Итог("СуммаОплаты"));
				ОбластьМакета.Параметры.ПроцентОплаты = ТаблицаПредоплаты.Итог("ПроцентОплаты");
			Иначе
				ОбластьМакета.Параметры.ВсегоКОплате = "-";
				ОбластьМакета.Параметры.ПроцентОплаты = "-";
			КонецЕсли;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если Макет.Области.Найти("ИтогоКОплате") = Неопределено Тогда
			
			ТекстСообщения = НСтр("ru ='ВНИМАНИЕ! Не обнаружена область макета ""Итог к оплате"". Возможно используется пользовательский макет.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстСообщения);
			
		Иначе
			
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоКОплате");
			ОбластьМакета.Параметры.Заполнить(Новый Структура("ИтогоКОплате", УправлениеНебольшойФирмойСервер.ФорматСумм(Всего)));
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Всего;
		ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований "
												+ Строка(Количество)
												+ ", на сумму "
												+ УправлениеНебольшойФирмойСервер.ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента);
		
		ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета");
		
		ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
		Руководители = бизЗаполнениеДокументов.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Организация,
		ПользовательИБ.УникальныйИдентификатор, Шапка.ДатаДокумента);
		
		ОбластьМакета.Параметры.ФИОРуководителя		= Руководители.ФИОРуководителя;
		ОбластьМакета.Параметры.ФИОБухгалтера   = Руководители.ФИОГлавногоБухгалтера;
		ОбластьМакета.Параметры.ПредставлениеПодписанта = Руководители.ПредставлениеПодписантаРуководителя;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если ЗначениеЗаполнено(ОтчетОУдаленныхСоединениях) Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ОбъОтчетОУдаленныхСоединениях = ОтчетОУдаленныхСоединениях.ПолучитьОбъект();
			ОбъОтчетОУдаленныхСоединениях.ПечатьОтчетаОудаленыхСоединениях(ТабличныйДокумент, Шапка.Ссылка);
			ОтчетОУдаленныхСоединениях = Неопределено;
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		

	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;

КонецФункции // ПечатьСчетНаОплату()

// Функция формирует печатную форму документа.
//
// Параметры:
// Тип - Строка - тип печатной формы: Заказ или Счет
// МассивОбъектов - Массив - массив документов для печати
// ОбъектыПечати - СписокЗначений
//
// Возвращаемое значение:
// ТабличныйДокумент
//
Функция  СформироватьАктОбОказанииУслугРасходнаяНакладная(МассивОбъектов, ОбъектыПечати, ВидОперации)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ПервыйДокумент = Истина;
		
		Выборка = ПолучитьВыборкуДокументов(ТекущийДокумент,ВидОперации);
		
		Если Выборка.Количество() = 0 Тогда
			Возврат ТабличныйДокумент;
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			ТекущийДокумент = Выборка.Документ;
			
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	РасходнаяНакладная.Дата КАК ДатаДокумента,
			|	РасходнаяНакладная.Номер КАК Номер,
			|	РасходнаяНакладная.Организация КАК Руководители,
			|	РасходнаяНакладная.Организация.Префикс КАК Префикс,
			|	РасходнаяНакладная.Организация КАК Организация,
			|	РасходнаяНакладная.БанковскийСчет КАК БанковскийСчет,
			|	РасходнаяНакладная.Контрагент КАК Контрагент,
			|	РасходнаяНакладная.Организация КАК Поставщик,
			|	ВЫБОР
			|		КОГДА РасходнаяНакладная.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|			ТОГДА РасходнаяНакладная.Контрагент
			|		ИНАЧЕ РасходнаяНакладная.Грузополучатель
			|	КОНЕЦ КАК Грузополучатель,
			|	ВЫБОР
			|		КОГДА РасходнаяНакладная.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|			ТОГДА РасходнаяНакладная.Организация
			|		ИНАЧЕ РасходнаяНакладная.Грузоотправитель
			|	КОНЕЦ КАК Грузоотправитель,
			|	РасходнаяНакладная.Контрагент КАК Плательщик,
			|	РасходнаяНакладная.Договор.Представление КАК Основание,
			|	РасходнаяНакладная.ВалютаДокумента,
			|	РасходнаяНакладная.СуммаВключаетНДС,
			|	РасходнаяНакладная.НДСВключатьВСтоимость,
			|	РасходнаяНакладная.Курс,
			|	РасходнаяНакладная.Кратность
			|ИЗ
			|	Документ.РасходнаяНакладная КАК РасходнаяНакладная
			|ГДЕ
			|	РасходнаяНакладная.Ссылка = &ТекущийДокумент";
			Шапка = Запрос.Выполнить().Выбрать();
			
			Шапка.Следующий();
			
			ИспользоватьПересчет = (НЕ Шапка.ВалютаДокумента = Константы.НациональнаяВалюта.Получить());
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	ВложенныйЗапрос.Содержание КАК Содержание,
			|	ВЫБОР
			|		КОГДА (ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
			|			ТОГДА ВложенныйЗапрос.Номенклатура.Наименование
			|		ИНАЧЕ ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
			|	КОНЕЦ КАК ЗапасНаименование,
			|	ВложенныйЗапрос.Характеристика,
			|	ВложенныйЗапрос.Номенклатура.Код КАК ЗапасКод,
			|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
			|	ВложенныйЗапрос.ЕдиницаИзмеренияДляПечати.Наименование КАК БазоваяЕдиницаНаименование,
			|	ВложенныйЗапрос.ЕдиницаИзмеренияДляПечати.Код КАК БазоваяЕдиницаКодПоОКЕИ,
			|	ВложенныйЗапрос.ЕдиницаИзмеренияДокумент КАК ЕдиницаИзмеренияДокумент,
			|	ВложенныйЗапрос.ЕдиницаИзмеренияДокумент КАК ВидУпаковки,
			|	0 КАК КоличествоВОдномМесте,
			|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
			|	&Цена_Параметр КАК Цена,
			|	ВложенныйЗапрос.Количество КАК Количество,
			|	0 КАК КоличествоМест,
			|	&Сумма_Параметр КАК Сумма,
			|	&СуммаНДС_Параметр КАК СуммаНДС,
			|	&Всего_Параметр КАК Всего,
			|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
			|	1 КАК ID
			|ИЗ
			|	(ВЫБРАТЬ
			|		РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
			|		РасходнаяНакладнаяЗапасы.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДляПечати,
			|		РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДокумент,
			|		РасходнаяНакладнаяЗапасы.СтавкаНДС КАК СтавкаНДС,
			|		РасходнаяНакладнаяЗапасы.Цена КАК Цена,
			|		СУММА(РасходнаяНакладнаяЗапасы.Количество) КАК Количество,
			|		СУММА(РасходнаяНакладнаяЗапасы.Сумма) КАК Сумма,
			|		СУММА(РасходнаяНакладнаяЗапасы.СуммаНДС) КАК СуммаНДС,
			|		СУММА(РасходнаяНакладнаяЗапасы.Всего) КАК Всего,
			|		МИНИМУМ(РасходнаяНакладнаяЗапасы.НомерСтроки) КАК НомерСтроки,
			|		РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
			|		ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.Содержание КАК СТРОКА(1000)) КАК Содержание
			|	ИЗ
			|		Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
			|	ГДЕ
			|		РасходнаяНакладнаяЗапасы.Ссылка = &ТекущийДокумент
			|	
			|	СГРУППИРОВАТЬ ПО
			|		РасходнаяНакладнаяЗапасы.Номенклатура,
			|		РасходнаяНакладнаяЗапасы.Номенклатура.ЕдиницаИзмерения,
			|		РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения,
			|		РасходнаяНакладнаяЗапасы.СтавкаНДС,
			|		РасходнаяНакладнаяЗапасы.Цена,
			|		РасходнаяНакладнаяЗапасы.Характеристика,
			|		ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.Содержание КАК СТРОКА(1000))) КАК ВложенныйЗапрос
			|ГДЕ
			|	ВложенныйЗапрос.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|   ИЛИ ВложенныйЗапрос.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ID,
			|	НомерСтроки";
			
			Если ИспользоватьПересчет Тогда
				
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Цена_Параметр", 		"Выразить(ВложенныйЗапрос.Цена * &Курс / &Кратность КАК Число(15,2))");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Сумма_Параметр", 	"Выразить(ВложенныйЗапрос.Сумма * &Курс / &Кратность КАК Число(15,2))");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СуммаНДС_Параметр", 	"Выразить(ВложенныйЗапрос.СуммаНДС * &Курс / &Кратность КАК Число(15,2))");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Всего_Параметр", 	"Выразить(ВложенныйЗапрос.Всего * &Курс / &Кратность КАК Число(15,2))");
				
				Запрос.УстановитьПараметр("Курс",		Шапка.Курс);
				Запрос.УстановитьПараметр("Кратность",	Шапка.Кратность);
				
			Иначе
				
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Цена_Параметр", 		"ВложенныйЗапрос.Цена");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Сумма_Параметр", 	"ВложенныйЗапрос.Сумма");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СуммаНДС_Параметр", 	"ВложенныйЗапрос.СуммаНДС");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Всего_Параметр", 	"ВложенныйЗапрос.Всего");
				
			КонецЕсли;
			
			ЗапросЗапасы = Запрос.Выполнить().Выгрузить();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходнаяНакладная_ТОРГ12";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.BizАктОбслуживанияКлиента.бизАктОбОказанииУслуг");
			
			ОбластьМакетаШапка				= Макет.ПолучитьОбласть("Шапка");
			ОбластьМакетаЗаголовокТаблицы	= Макет.ПолучитьОбласть("ЗаголовокТаб");
			ОбластьМакетаСтрока				= Макет.ПолучитьОбласть("Строка");
			ОбластьМакетаИтогоПоСтранице	= Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьМакетаВсего				= Макет.ПолучитьОбласть("Всего");
			ОбластьМакетаПодвал				= Макет.ПолучитьОбласть("Подвал");
			
			// Выводим общие реквизиты шапки
			
			СведенияОПоставщике			= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация,		Шапка.ДатаДокумента, , Шапка.БанковскийСчет);
			СведенияОГрузоотправителе	= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Грузоотправитель,Шапка.ДатаДокумента, ,);
			СведенияОПокупателе			= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Контрагент,		Шапка.ДатаДокумента, ,);
			СведенияОГрузополучателе	= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Грузополучатель,	Шапка.ДатаДокумента, ,);
			
			ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
			
			Если Шапка.ДатаДокумента < Дата('20110101') Тогда
				НомерДокумента = УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Префикс);
			Иначе
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Истина, Истина);
			КонецЕсли;
			
			ОбластьМакетаШапка.Параметры.НомерДокумента = НомерДокумента;
			ОбластьМакетаШапка.Параметры.ДатаДокумента  = Шапка.ДатаДокумента;
			
			Если Шапка.Организация = Шапка.Грузоотправитель Тогда
				ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет");
			Иначе
				ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет");
			КонецЕсли;
			
			ОбластьМакетаШапка.Параметры.ПредставлениеГрузополучателя = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе,"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			//ОбластьМакетаШапка.Параметры.ПредставлениеПоставщика      = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПоставщике);
			ОбластьМакетаШапка.Параметры.ПредставлениеПлательщика     = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПокупателе);
			
			// Выводим всевозможные коды
			//ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО     = СведенияОГрузоотправителе.КодПоОКПО;
			//ОбластьМакетаШапка.Параметры.ВидДеятельностиПоОКДП = "";
			//ОбластьМакетаШапка.Параметры.ГрузополучательПоОКПО = СведенияОГрузополучателе.КодПоОКПО;
			//ОбластьМакетаШапка.Параметры.ПоставщикПоОКПО  = СведенияОПоставщике.КодПоОКПО;
			//ОбластьМакетаШапка.Параметры.ПлательщикПоОКПО = СведенияОПокупателе.КодПоОКПО;
			//ОбластьМакетаШапка.Параметры.ОснованиеНомер   = "";
			//ОбластьМакетаШапка.Параметры.ОснованиеДата    = "";
			//ОбластьМакетаШапка.Параметры.ТранспортнаяНакладнаяНомер = "";
			//ОбластьМакетаШапка.Параметры.ТранспортнаяНакладнаяДата  = "";
			
			ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
			
			// Инициализация счетчика страниц
			НомерСтраницы = 1;
			
			// Инициализация итогов по странице
			ИтогоМестНаСтранице       = 0;
			ИтогоКоличествоНаСтранице = 0;
			ИтогоСуммаНаСтранице      = 0;
			ИтогоНДСНаСтранице        = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;
			
			// Инициализация итогов по документу
			ИтогоМест       = 0;
			ИтогоКоличество = 0;
			ИтогоСуммаСНДС  = 0;
			ИтогоСумма      = 0;
			ИтогоНДС        = 0;
			
			// Инициализация счетчика строк
			НомерСтроки     = 0;
			КоличествоСтрок = ЗапросЗапасы.Количество();
			
			Лицензиар = ТекущийДокумент.Организация;
			Лицензиат = ТекущийДокумент.Контрагент;
			
			ВидКонтактнойИнформацииКонтрагента = Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Полное наименование контрагента");
			ВидКонтактнойИнформацииОрганизации = Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Полное наименование Организации");
			
			ПолноеНаименованиеОрганизации = Лицензиар.КонтактнаяИнформация.Найти(ВидКонтактнойИнформацииОрганизации, "Вид");
			ПолноеНаименованиеКонтрагента = Лицензиат.КонтактнаяИнформация.Найти(ВидКонтактнойИнформацииКонтрагента, "Вид");
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "";
			
			Если ЗначениеЗаполнено(ПолноеНаименованиеКонтрагента) Тогда
				
				ЛицензиатПолное = СокрЛП(ПолноеНаименованиеКонтрагента.Представление);	
				
			Иначе
				
				Сообщение.Текст = "Невозможно получить наименование для печати из контактной информации, будет использованно ""Полное наименование контрагента""";
				Сообщение.Сообщить();
				ЛицензиатПолное = Лицензиат.НаименованиеПолное;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПолноеНаименованиеОрганизации) Тогда
				
				ЛицензиарПолное = СокрЛП(ПолноеНаименованиеОрганизации.Представление);	
				
			Иначе
				
				Сообщение.Текст = "Невозможно получить наименование организации для печати из контактной информации, будет использованно ""Полное наименование организации""";
				Сообщение.Сообщить();
				ЛицензиарПолное = ЛицензиарПолное.НаименованиеПолное;
				
			КонецЕсли;
			
			
			ОбластьМакетаЗаголовокТаблицы.Параметры.СодержаниеАкта = 
			ЛицензиарПолное + 
			", далее Исполнитель, и " 
			+ ЛицензиатПолное + 
			", далее Заказчик, составили и подписали настоящий Акт сдачи-приемки о том, что Исполнитель выполнил, а  Заказчик принял следующие работы (услуги):";
			
			
			// Выводим заголовок многострочной части
			ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
			
			// Выводим многострочную часть докмента
			Для Каждого ВыборкаСтрок Из ЗапросЗапасы Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
				
				ОбластьМакетаСтрока.Параметры.Номер = НомерСтроки;
				
				//Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.КоличествоМест) Тогда
				//	
				//	ОбластьМакетаСтрока.Параметры.ВидУпаковки 			= "";
				//	ОбластьМакетаСтрока.Параметры.КоличествоВОдномМесте	= "";
				//	
				//КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаСтрок.Содержание) Тогда
					ОбластьМакетаСтрока.Параметры.ТоварНаименование = ВыборкаСтрок.Содержание;
				Иначе
					ОбластьМакетаСтрока.Параметры.ТоварНаименование = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрок.ЗапасНаименование, 
					ВыборкаСтрок.Характеристика, ВыборкаСтрок.Артикул);
				КонецЕсли;
				
				СуммаСНДС = ВыборкаСтрок.Всего;
				
				КоличествоМест	= ВыборкаСтрок.КоличествоМест;
				
				Коэффициент = 1;
				Если ТипЗнч(ВыборкаСтрок.ЕдиницаИзмеренияДокумент) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
					
					Коэффициент = ВыборкаСтрок.ЕдиницаИзмеренияДокумент.Коэффициент;
					
				КонецЕсли;
				
				Количество		= ВыборкаСтрок.Количество * Коэффициент;
				ОбластьМакетаСтрока.Параметры.Количество = Количество;
				
				СуммаНДС		= ВыборкаСтрок.СуммаНДС;
				СуммаБезНДС		= ВыборкаСтрок.Сумма - ?(Шапка.СуммаВключаетНДС, ВыборкаСтрок.СуммаНДС, 0);
				
				ОбластьМакетаСтрока.Параметры.СуммаСНДС   = СуммаСНДС;
				ОбластьМакетаСтрока.Параметры.СуммаНДС    = СуммаНДС;
				ОбластьМакетаСтрока.Параметры.СтавкаНДС   = ВыборкаСтрок.СтавкаНДС;
				ОбластьМакетаСтрока.Параметры.СуммаБезНДС = СуммаБезНДС;
				ОбластьМакетаСтрока.Параметры.Цена        = СуммаБезНДС / ?(Количество = 0, 1, Количество);
				
				// Проверим вывод
				СтрокаСПодвалом = Новый Массив;
				Если НомерСтроки = 1 Тогда
					СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы);// если первая строка, то должен
				КонецЕсли;													// помещаться заголовок
				СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
				СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
				Если НомерСтроки = КоличествоСтрок Тогда			// если последняя строка, должен
					СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);	// помещаться и подвал документа
					СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
				КонецЕсли;
				
				Если НомерСтроки <> 1 И НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
					
					// Выводим итоги по странице
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогМестПоСтранице       = ИтогоМестНаСтранице;
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогКоличествоПоСтранице = ИтогоКоличествоНаСтранице;
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтранице      = ИтогоСуммаНаСтранице;
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогНДСПоСтранице        = ИтогоНДСНаСтранице;
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице  = ИтогоСуммаСНДСНаСтранице;
					ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Очистим итоги по странице
					ИтогоМестНаСтранице       = 0;
					ИтогоКоличествоНаСтранице = 0;
					ИтогоСуммаНаСтранице      = 0;
					ИтогоНДСНаСтранице        = 0;
					ИтогоСуммаСНДСНаСтранице  = 0;
					
					// Выведем заголовок таблицы
					НомерСтраницы = НомерСтраницы + 1;
					ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
				
				// Увеличим итоги по странице
				ИтогоМестНаСтранице       = ИтогоМестНаСтранице       + КоличествоМест;
				ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
				ИтогоСуммаНаСтранице      = ИтогоСуммаНаСтранице      + СуммаБезНДС;
				ИтогоНДСНаСтранице        = ИтогоНДСНаСтранице        + СуммаНДС;
				ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
				
				// Увеличим итоги по документу
				ИтогоМест       = ИтогоМест       + КоличествоМест;
				ИтогоКоличество = ИтогоКоличество + Количество;
				ИтогоСумма      = ИтогоСумма      + СуммаБезНДС;
				ИтогоНДС        = ИтогоНДС        + СуммаНДС;
				ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
				
			КонецЦикла;
			
			// Выводим итоги по странице
			//ОбластьМакетаИтогоПоСтранице.Параметры.ИтогМестПоСтранице       = ИтогоМестНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогКоличествоПоСтранице = ИтогоКоличествоНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтранице      = ИтогоСуммаНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогНДСПоСтранице        = ИтогоНДСНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице  = ИтогоСуммаСНДСНаСтранице;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
			
			// Выводим итоги по документу в целом
			//ОбластьМакетаВсего.Параметры.ИтогМест       = ИтогоМест;
			ОбластьМакетаВсего.Параметры.ИтогКоличество = ИтогоКоличество;
			ОбластьМакетаВсего.Параметры.ИтогСуммы      = ИтогоСумма;
			ОбластьМакетаВсего.Параметры.ИтогНДС        = ИтогоНДС;
			ОбластьМакетаВсего.Параметры.ИтогСуммыСНДС  = ИтогоСуммаСНДС;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаВсего);
			
			// Выводим подвал документа
			// Выводим подвал документа
			ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();		
			Руководители = бизЗаполнениеДокументов.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Руководители,
			ПользовательИБ.УникальныйИдентификатор, Шапка.ДатаДокумента);
			
			Если Прав(Строка(НомерСтраницы), 1) = "1" Тогда
				ПредставлениеЛиста = "Листе";
			Иначе 
				ПредставлениеЛиста = "Листах";
			КонецЕсли;
			
			
			ОбластьМакетаПодвал.Параметры.КоличествоЛистовВАкте = "" + НомерСтраницы + " " + ПредставлениеЛиста;
			ОбластьМакетаПодвал.Параметры.ФИОРуководителя		= Руководители.ФИОРуководителя;
			ОбластьМакетаПодвал.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
			ОбластьМакетаПодвал.Параметры.ПредставлениеПодписанта = Руководители.ПредставлениеПодписантаРуководителя;
			
			
			ОбластьМакетаПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
			//ОбластьМакетаПодвал.Параметры.ВсегоМестПрописью							= ?(ИтогоМест = 0, "", ЧислоПрописью(ИтогоМест, ,",,,С,,,,,0")); 
			ОбластьМакетаПодвал.Параметры.СуммаПрописью								= РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.НациональнаяВалюта.Получить());
			
			ПолнаяДатаДокумента = Формат(Шапка.ДатаДокумента, "ДФ=""дд ММММ гггг """"года""""""");
			ДлинаСтроки			= СтрДлина(ПолнаяДатаДокумента);
			ПервыйРазделитель	= Найти(ПолнаяДатаДокумента," ");
			ВторойРазделитель	= Найти(Прав(ПолнаяДатаДокумента,ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
			
			ОбластьМакетаПодвал.Параметры.ДатаДокументаДень	 = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель - 1) + """";
			ОбластьМакетаПодвал.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
			ОбластьМакетаПодвал.Параметры.ДатаДокументаГод	 = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);	
			
			ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
			НомерСтрокиНачало = 1;
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		КонецЦикла;
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	Возврат ТабличныйДокумент;
	
	
КонецФункции // СформироватьПечатнуюФорму()





