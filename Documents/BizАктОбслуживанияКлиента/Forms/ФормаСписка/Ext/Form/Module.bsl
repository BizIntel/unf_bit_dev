

&НаКлиенте
Процедура ОтборСтатусПриИзменении(Элемент) 
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораСписка(Список, "Статус", ОтборСтатус, ЗначениеЗаполнено(ОтборСтатус));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусДокументов(Команда)
	
	ИмяКоманды = Команда.Имя;	
	ДокументыДляИзменения = Элементы.Список.ВыделенныеСтроки;
	
   	УстановитьСтатусДокументовСервер(ИмяКоманды, ДокументыДляИзменения);
	Элементы.Список.Обновить();
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСтатусДокументовСервер(ИмяКоманды, ДокументыДляИзменения)
	
	Если ИмяКоманды = "УстановитьСтатусВРаботе" Тогда
	
		ЗначениеСтатуса = Перечисления.BizСтатусОбслуживанияКлиента.ВРаботе;	
	
	ИначеЕсли ИмяКоманды = "УстановитьСтатусКОплате" Тогда
		
		ЗначениеСтатуса = Перечисления.BizСтатусОбслуживанияКлиента.КОплате;
		
	ИначеЕсли ИмяКоманды = "УстановитьСтатусЗавершен" Тогда
		
		ЗначениеСтатуса = Перечисления.BizСтатусОбслуживанияКлиента.Завершен;
		
	ИначеЕсли ИмяКоманды = "УстановитьСтатусОтклонен" Тогда
		
		ЗначениеСтатуса = Перечисления.BizСтатусОбслуживанияКлиента.Отклонен;
		
	ИначеЕсли ИмяКоманды = "УстановитьСтатусНаИсправление" Тогда
		
		ЗначениеСтатуса = Перечисления.BizСтатусОбслуживанияКлиента.НаИсправление;
		
	КонецЕсли;
              	
	Для каждого Документ Из ДокументыДляИзменения Цикл
	
		ДокументОбъект = Документ.ПолучитьОбъект();
		ДокументОбъект.Статус = ЗначениеСтатуса;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	КонецЦикла;	

КонецПроцедуры // ИменитьСтатусДокументов()

&НаКлиенте
Процедура ЖурналОказанныхУслуг(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПериодОтчета = Элементы.Список.Период;
	ПараметрыФормы.Вставить("ПериодОтчета", ПериодОтчета);
	
	Если ЗначениеЗаполнено(ОтборКонтрагент) Тогда
		ПараметрыФормы.Вставить("Контрагент", ОтборКонтрагент);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборСтатус) Тогда
		ПараметрыФормы.Вставить("Статус", ОтборСтатус);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборИсполнитель) Тогда
		ПараметрыФормы.Вставить("Исполнитель", ОтборИсполнитель);
	КонецЕсли;
		
	ФормаОтчета = ПолучитьФорму("Отчет.BizЖурналОказанныхУслуг.Форма.ФормаОтчета", ПараметрыФормы);
		
	ФормаОтчета.Открыть();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	УстановитьОтборПоЗначениюТекущейСтраницы("ПодпискиИТС");
КонецПроцедуры

&НаКлиенте 
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)	
УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
КонецПроцедуры 

&НаКлиенте
Процедура ГруппаВидовОперацийПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.ГруппаСопровождениеПП Тогда
		УстановитьОтборПоЗначениюТекущейСтраницы("УслугиСопровожденияПП");
	Иначе УстановитьОтборПоЗначениюТекущейСтраницы("ПодпискиИТС");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура  УстановитьОтборПоЗначениюТекущейСтраницы(ВидОперации)
	
	    ЭлементыОтбора = Список.Отбор.Элементы;
		
		Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидОперации") Тогда
				ЭлементыОтбора.Удалить(ЭлементОтбора);				
			КонецЕсли	
		КонецЦикла;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("ВидОперации");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ПравоеЗначение =  Перечисления.бизВидыСопровожденияКлиентов[ВидОперации];
	
	
		
   	Исполнитель = ПолучитьСведенияОПолномочияхПользователя();
	Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.Пользователи") Тогда
		ОтборИсполнитель = Исполнитель;
				Элементы.ОтборИсполнитель.Доступность = Ложь;
		Элементы.Список.ПодчиненныеЭлементы.Исполнитель.Видимость = Ложь;
		Элементы.Список1.ПодчиненныеЭлементы.Исполнитель1.Видимость = Ложь;
	КонецЕсли;
		
	УправлениеНебольшойФирмойКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Исполнитель", ОтборИсполнитель, ЗначениеЗаполнено(ОтборИсполнитель));
	УправлениеНебольшойФирмойКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Контрагент", ОтборКонтрагент, ЗначениеЗаполнено(ОтборКонтрагент));
	
	Если НЕ ЗначениеЗаполнено(ОтборПериод) Тогда
		ОтборПериод.ДатаНачала = НачалоМесяца(ТекущаяДата());
		ОтборПериод.ДатаОкончания = КонецМесяца(ТекущаяДата());		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСведенияОПолномочияхПользователя()
	Если НЕ РольДоступна("ПолныеПрава") Тогда
		ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
		Исполнитель = Справочники.Пользователи.НайтиПоРеквизиту("ИдентификаторПользователяИБ",ПользовательИБ.УникальныйИдентификатор);
		Возврат Исполнитель;  
	Иначе Возврат Неопределено;	
	КонецЕсли;
КонецФункции // УстановитьОтборПоРолиТекущегоПользователя()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораСписка(Список, "Дата",ОтборПериод, ЗначениеЗаполнено(ОтборПериод),,Истина);
КонецПроцедуры


///ОБРАБОТЧИКИ СОБЫТИЙ ИЗМЕНЕНИЯ ПОЛЕЙ ОБОРОВ ПО ПЕРИОДУ,ИСПОЛНИТЕЛЮ,КОНТРАГЕНТУ
&НаКлиенте
Процедура ОтборПериодПриИзменении(Элемент)
УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораСписка(Список, "Дата",ОтборПериод, ЗначениеЗаполнено(ОтборПериод),,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораСписка(Список, "Контрагент", ОтборКонтрагент, ЗначениеЗаполнено(ОтборКонтрагент));
КонецПроцедуры

&НаКлиенте
Процедура ОтборИсполнительПриИзменении(Элемент)
УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораСписка(Список, "Исполнитель", ОтборИсполнитель, ЗначениеЗаполнено(ОтборИсполнитель));
КонецПроцедуры






