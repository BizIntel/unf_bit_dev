#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаНачислениеНалогов, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачислениеНалогов.Начисление)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|	ТаблицаДокумента.ВидНалога.СчетУчета КАК СчетУчета,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СрокУплаты,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачислениеНалогов.Начисление)
	|			ТОГДА &НачисленНалог
	|		ИНАЧЕ &ВозмещенНалог
	|	КОНЕЦ КАК СодержаниеПроводки
	|ИЗ
	|	Документ.НачислениеНалогов.Налоги КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеРасходы)
	|				ИЛИ ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеДоходы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее)
	|		ИНАЧЕ ТаблицаДокумента.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеРасходы)
	|				ИЛИ ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеДоходы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДокумента.Подразделение
	|	КОНЕЦ КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.Корреспонденция КАК СчетУчета,
	|	ТаблицаДокумента.ВидНалога КАК Аналитика,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеРасходы)
	|				ИЛИ ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеДоходы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаДокумента.ЗаказПокупателя
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачислениеНалогов.Начисление)
	|			ТОГДА &Расходы
	|		ИНАЧЕ &Доходы
	|	КОНЕЦ КАК СодержаниеПроводки,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачислениеНалогов.Начисление)
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаДокумента.Сумма
	|	КОНЕЦ КАК СуммаДоходов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачислениеНалогов.Начисление)
	|			ТОГДА ТаблицаДокумента.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасходов,
	|	ТаблицаДокумента.Сумма КАК Сумма
	|ИЗ
	|	Документ.НачислениеНалогов.Налоги КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И (ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)
	|			ИЛИ ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеРасходы)
	|			ИЛИ ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Доходы)
	|			ИЛИ ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеДоходы))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачислениеНалогов.Начисление)
	|			ТОГДА ТаблицаДокумента.Корреспонденция
	|		ИНАЧЕ ТаблицаДокумента.ВидНалога.СчетУчетаКВозмещению
	|	КОНЕЦ КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	0 КАК СуммаВалДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачислениеНалогов.Начисление)
	|			ТОГДА ТаблицаДокумента.ВидНалога.СчетУчета
	|		ИНАЧЕ ТаблицаДокумента.Корреспонденция
	|	КОНЕЦ КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	0 КАК СуммаВалКт,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачислениеНалогов.Начисление)
	|			ТОГДА &НачисленНалог
	|		ИНАЧЕ &ВозмещенНалог
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	Документ.НачислениеНалогов.Налоги КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачислениеНалогов.Начисление)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Подразделение КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.Корреспонденция КАК СчетУчета,
	|	ТаблицаДокумента.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ИСТИНА КАК ФиксированнаяСтоимость,
	|	&НачисленНалог КАК СодержаниеПроводки
	|ИЗ
	|	Документ.НачислениеНалогов.Налоги КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И (ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.НезавершенноеПроизводство)
	|			ИЛИ ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.КосвенныеЗатраты))");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаНачислениеНалогов);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("НачисленНалог", НСтр("ru = 'Начислен налог'"));
	Запрос.УстановитьПараметр("ВозмещенНалог", НСтр("ru = 'Возмещен налог'"));
	Запрос.УстановитьПараметр("Доходы", НСтр("ru = 'Доходы'")); 
	Запрос.УстановитьПараметр("Расходы", НСтр("ru = 'Расходы'")); 
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыПоНалогам", МассивРезультатов[0].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", МассивРезультатов[1].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаУправленческий", МассивРезультатов[2].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", МассивРезультатов[3].Выгрузить());
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти


Функция СформироватьКвитанцию(Данные) Экспорт
	
	Макет = Документы.НачислениеНалогов.ПолучитьМакет("КвитанцияСбербанка");
	Область = Макет.ПолучитьОбласть("Печатается");
	Результат = Новый ТабличныйДокумент;
	ЭтоДокумент = ТипЗнч(Данные) = Тип("ДокументСсылка.НачислениеНалогов");
	
	Если ЭтоДокумент Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Налоги.ВидНалога
		|ИЗ
		|	Документ.НачислениеНалогов.Налоги КАК Налоги
		|ГДЕ
		|	Налоги.Ссылка = &Документ");
		
		Запрос.УстановитьПараметр("Документ", Данные);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			ВидВзаиморасчетов = Выборка.ВидНалога;
		Иначе
			ВидВзаиморасчетов = Справочники.ВидыНалогов.ПустаяСсылка();
		КонецЕсли;
	Иначе
		ВидВзаиморасчетов = Данные.ВидНалога;
	КонецЕсли;
	
	Если ВидВзаиморасчетов = Справочники.ВидыНалогов.АвансовыйПлатежПриУСН
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ЕдиныйНалогПриУСН
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.НДФЛСотрудники  Тогда
		
		СформироватьПлатежкуВНалоговую(Данные, Область, Результат, ВидВзаиморасчетов);
		
	ИначеЕсли ВидВзаиморасчетов = Справочники.ВидыНалогов.ЕНВД 
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ТорговыйСбор  Тогда
		
		СформироватьПлатежкуЕНВД(Данные, Область, Результат);
		
	ИначеЕсли ВидВзаиморасчетов = Справочники.ВидыНалогов.ПФРНакопительная
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ПФРСтраховая
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ПФРСвыше300тр
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ТФОМС
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ФФОМС
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники 
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ПФРСтраховаяСотрудники 
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ФОМССотрудники Тогда
		СформироватьПлатежкуПоСтраховымВзносамВПФР(Данные, Область, Результат, ВидВзаиморасчетов);
	ИначеЕсли ВидВзаиморасчетов = Справочники.ВидыНалогов.ФСССотрудники 
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ФССТравматизмСотрудники Тогда
		СформироватьПлатежкуПоСтраховымВзносамВФСС(Данные, Область, Результат, ВидВзаиморасчетов);
	ИначеЕсли ВидВзаиморасчетов = Справочники.ВидыНалогов.Патент Тогда
		СформироватьПлатежкуПатент(Данные, Область, Результат);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции



Процедура СформироватьПлатежкуВНалоговую(Данные, ОбластьМакета, ТабличныйДокумент, ВидВзаиморасчетов) 
	
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(Данные) = Тип("ДокументСсылка.НачислениеНалогов") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НачислениеНалогов.Организация.КодПоОКАТО КАК ОКАТО,
		|	НачислениеНалогов.Организация.КодПоОКТМО КАК ОКТМО,
		|	НачислениеНалогов.Организация.НаименованиеПолное КАК Плательщик,
		|	НачислениеНалогов.Организация КАК Организация,
		|	НачислениеНалогов.Дата КАК ДатаДокумента,
		|	ОрганизацииКонтактнаяИнформация.Представление КАК АдресПлательщика,
		|	НачислениеНалогов.Организация.ИНН КАК ИННПлательщика,
		|	ЕСТЬNULL(НачислениеНалоговНалоги.Сумма, 0) КАК СуммаВзаиморасчетов,
		|	НачислениеНалогов.Организация.КодНалоговогоОрганаПолучателя КАК КодНалоговогоОрганаПолучателя
		|ИЗ
		|	Документ.НачислениеНалогов КАК НачислениеНалогов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеНалогов.Налоги КАК НачислениеНалоговНалоги
		|		ПО (НачислениеНалоговНалоги.Ссылка = НачислениеНалогов.Ссылка)
		|			И (НачислениеНалоговНалоги.ВидНалога = &ВидНалога)
		|			И (НачислениеНалоговНалоги.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|		ПО НачислениеНалогов.Организация.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
		|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|ГДЕ
		|	НачислениеНалогов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Данные);
		Запрос.УстановитьПараметр("ВидНалога", ВидВзаиморасчетов);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.КодПоОКАТО КАК ОКАТО,
		|	Организации.КодПоОКТМО КАК ОКТМО,
		|	Организации.НаименованиеПолное КАК Плательщик,
		|	Организации.Ссылка КАК Организация,
		|	&Период КАК ДатаДокумента,
		|	ОрганизацииКонтактнаяИнформация.Представление КАК АдресПлательщика,
		|	Организации.ИНН КАК ИННПлательщика,
		|	&Сумма КАК СуммаВзаиморасчетов,
		|	Организации.КодНалоговогоОрганаПолучателя КАК КодНалоговогоОрганаПолучателя
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|		ПО Организации.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
		|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|ГДЕ
		|	Организации.Ссылка = &Организация";
		Запрос.УстановитьПараметр("Организация", Данные.Организация);
		Запрос.УстановитьПараметр("Сумма", Данные.СуммаДокумента);
		Запрос.УстановитьПараметр("Период", Данные.Период);
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ОбластьМакета.Параметры.Заполнить(Выборка);
	ОбластьМакета.Параметры.ОКАТО = Выборка.ОКТМО;
	ГосОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган, Выборка.КодНалоговогоОрганаПолучателя);
	ОбластьМакета.Параметры.НаименованиеПолучателяПлатежа = ГосОрган.ПлатежныеРеквизиты.ПолучательПлатежа;
	ОбластьМакета.Параметры.СокращенноеНаименованиеПолучателя = ГосОрган.ПолноеНаименование;
	ОбластьМакета.Параметры.ИННПолучателя = ГосОрган.ИНН;
	ОбластьМакета.Параметры.КПППолучателя = ГосОрган.КПП;
	ОбластьМакета.Параметры.НомерСчетаПолучателя = ГосОрган.ПлатежныеРеквизиты.РасчетныйСчет;
	ОбластьМакета.Параметры.БикБанкаПолучателя = ГосОрган.ПлатежныеРеквизиты.БИК;
	ОбластьМакета.Параметры.НаименованиеБанкаПолучателя = ГосОрган.ПлатежныеРеквизиты.Банк;
	
	
	Рубли = Цел(Выборка.СуммаВзаиморасчетов);
	ОбластьМакета.Параметры["Сумма"] = Рубли;
	
	Копейки = Окр(100 * (Выборка.СуммаВзаиморасчетов - Рубли), 0, 1);
	ОбластьМакета.Параметры["СуммаКопейки"] = Копейки;
	
	ОбластьМакета.Параметры["КБКПлатежа"] = РегламентированнаяОтчетностьУСН.ПолучитьКБКУплаты(Выборка.Организация, Выборка.ДатаДокумента, ВидВзаиморасчетов);
	
	ОбластьМакета.Параметры["НаименованиеПлатежа"] = 
		РегламентированнаяОтчетностьУСНКлиентСервер.ПолучитьТекстНазначенияПлатежаНалогаПоДате(
			Выборка.ДатаДокумента, 
			ВидВзаиморасчетов);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура СформироватьПлатежкуПоСтраховымВзносамВПФР(Данные, ОбластьМакета, ТабличныйДокумент, ВидВзаиморасчетов)
	
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(Данные) = Тип("ДокументСсылка.НачислениеНалогов") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НачислениеНалогов.Организация.КодПоОКАТО КАК ОКАТО,
		|	НачислениеНалогов.Организация.КодПоОКТМО КАК ОКТМО,
		|	НачислениеНалогов.Организация.НаименованиеПолное КАК Плательщик,
		|	НачислениеНалогов.Организация КАК Организация,
		|	НачислениеНалогов.Дата КАК ДатаДокумента,
		|	ОрганизацииКонтактнаяИнформация.Представление КАК АдресПлательщика,
		|	НачислениеНалогов.Организация.ИНН КАК ИННПлательщика,
		|	ЕСТЬNULL(НачислениеНалоговНалоги.Сумма, 0) КАК СуммаВзаиморасчетов,
		|	НачислениеНалогов.Организация.КодОрганаПФР КАК КодОрганаПФР,
		|	НачислениеНалогов.Организация.РегистрационныйНомерПФР_ИП КАК РегНомерПФРИП,
		|	НачислениеНалогов.Организация.РегистрационныйНомерПФР КАК РегНомерПФР
		|ИЗ
		|	Документ.НачислениеНалогов КАК НачислениеНалогов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеНалогов.Налоги КАК НачислениеНалоговНалоги
		|		ПО (НачислениеНалоговНалоги.Ссылка = НачислениеНалогов.Ссылка)
		|			И (НачислениеНалоговНалоги.ВидНалога = &ВидНалога)
		|			И (НачислениеНалоговНалоги.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|		ПО НачислениеНалогов.Организация.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
		|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|ГДЕ
		|	НачислениеНалогов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Данные);
		Запрос.УстановитьПараметр("ВидНалога", ВидВзаиморасчетов);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.КодПоОКАТО КАК ОКАТО,
		|	Организации.КодПоОКТМО КАК ОКТМО,
		|	Организации.НаименованиеПолное КАК Плательщик,
		|	Организации.Ссылка КАК Организация,
		|	&Период КАК ДатаДокумента,
		|	ОрганизацииКонтактнаяИнформация.Представление КАК АдресПлательщика,
		|	Организации.ИНН КАК ИННПлательщика,
		|	&Сумма КАК СуммаВзаиморасчетов,
		|	Организации.КодОрганаПФР КАК КодОрганаПФР,
		|	Организации.РегистрационныйНомерПФР_ИП КАК РегНомерПФРИП,
		|	Организации.РегистрационныйНомерПФР КАК РегНомерПФР
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|		ПО Организации.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
		|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|ГДЕ
		|	Организации.Ссылка = &Организация";
		
		Запрос.УстановитьПараметр("Организация", Данные.Организация);
		Запрос.УстановитьПараметр("Сумма", Данные.СуммаДокумента);
		Запрос.УстановитьПараметр("Период", Данные.Период);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ОбластьМакета.Параметры.Заполнить(Выборка);
	ОбластьМакета.Параметры.ОКАТО = Выборка.ОКТМО;
	
	ГосОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(Перечисления.ВидыГосударственныхОрганов.ОрганПФР, Выборка.КодОрганаПФР);
	ОбластьМакета.Параметры.НаименованиеПолучателяПлатежа = ГосОрган.ПлатежныеРеквизиты.ПолучательПлатежа;
	ОбластьМакета.Параметры.СокращенноеНаименованиеПолучателя = ГосОрган.ПолноеНаименование;
	ОбластьМакета.Параметры.ИННПолучателя = ГосОрган.ИНН;
	ОбластьМакета.Параметры.КПППолучателя = ГосОрган.КПП;
	ОбластьМакета.Параметры.НомерСчетаПолучателя = ГосОрган.ПлатежныеРеквизиты.РасчетныйСчет;
	ОбластьМакета.Параметры.БикБанкаПолучателя = ГосОрган.ПлатежныеРеквизиты.БИК;
	ОбластьМакета.Параметры.НаименованиеБанкаПолучателя = ГосОрган.ПлатежныеРеквизиты.Банк;
	
	
	Рубли = Цел(Выборка.СуммаВзаиморасчетов);
	ОбластьМакета.Параметры["Сумма"] = Рубли;
	
	Копейки = Окр(100 * (Выборка.СуммаВзаиморасчетов - Рубли), 0, 1);
	ОбластьМакета.Параметры["СуммаКопейки"] = Копейки;
	
	Если ВидВзаиморасчетов = Справочники.ВидыНалогов.ПФРНакопительная
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ПФРСтраховая
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ПФРСвыше300тр
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ТФОМС
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ФФОМС Тогда
		ОбластьМакета.Параметры["НомерЛС"] = Выборка.РегНомерПФРИП;
		ОбластьМакета.Параметры["НаименованиеПлатежа"] = 
			РегламентированнаяОтчетностьУСН.ПолучитьТекстНазначенияПлатежаНалогаПоСтраховымВзносам(Выборка.ДатаДокумента, ВидВзаиморасчетов);
		
	КонецЕсли;
	
	Если ВидВзаиморасчетов = Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ПФРСтраховаяСотрудники
		ИЛИ ВидВзаиморасчетов = Справочники.ВидыНалогов.ФОМССотрудники Тогда
		ОбластьМакета.Параметры["НомерЛС"] = Выборка.РегНомерПФР;
		ОбластьМакета.Параметры["НаименованиеПлатежа"] = 
			РегламентированнаяОтчетностьУСНКлиентСервер.ПолучитьТекстНазначенияПлатежаНалогаПоДате(
				Выборка.ДатаДокумента,
				ВидВзаиморасчетов, Выборка.РегНомерПФР);
	КонецЕсли;
	
	ОбластьМакета.Параметры["КБКПлатежа"] = РегламентированнаяОтчетностьУСН.ПолучитьКБКУплаты(Выборка.Организация, Выборка.ДатаДокумента, ВидВзаиморасчетов);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура СформироватьПлатежкуПоСтраховымВзносамВФСС(Данные, ОбластьМакета, ТабличныйДокумент, ВидВзаиморасчетов)
	
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(Данные) = Тип("ДокументСсылка.НачислениеНалогов") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НачислениеНалогов.Организация.КодПоОКАТО КАК ОКАТО,
		|	НачислениеНалогов.Организация.КодПоОКТМО КАК ОКТМО,
		|	НачислениеНалогов.Организация.НаименованиеПолное КАК Плательщик,
		|	НачислениеНалогов.Организация КАК Организация,
		|	НачислениеНалогов.Дата КАК ДатаДокумента,
		|	ОрганизацииКонтактнаяИнформация.Представление КАК АдресПлательщика,
		|	НачислениеНалогов.Организация.ИНН КАК ИННПлательщика,
		|	ЕСТЬNULL(НачислениеНалоговНалоги.Сумма, 0) КАК СуммаВзаиморасчетов,
		|	НачислениеНалогов.Организация.КодОрганаФСС КАК КодОрганаФСС,
		|	НачислениеНалогов.Организация.РегистрационныйНомерФСС КАК РегНомерФСС
		|ИЗ
		|	Документ.НачислениеНалогов КАК НачислениеНалогов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеНалогов.Налоги КАК НачислениеНалоговНалоги
		|		ПО (НачислениеНалоговНалоги.Ссылка = НачислениеНалогов.Ссылка)
		|			И (НачислениеНалоговНалоги.ВидНалога = &ВидНалога)
		|			И (НачислениеНалоговНалоги.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|		ПО НачислениеНалогов.Организация.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
		|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|ГДЕ
		|	НачислениеНалогов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Данные);
		Запрос.УстановитьПараметр("Травматизм", ВидВзаиморасчетов = Справочники.ВидыНалогов.ФССТравматизмСотрудники);
		Запрос.УстановитьПараметр("ВидНалога", ВидВзаиморасчетов);
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.КодПоОКАТО КАК ОКАТО,
		|	Организации.КодПоОКТМО КАК ОКТМО,
		|	Организации.НаименованиеПолное КАК Плательщик,
		|	Организации.Ссылка КАК Организация,
		|	&Период КАК ДатаДокумента,
		|	ОрганизацииКонтактнаяИнформация.Представление КАК АдресПлательщика,
		|	Организации.ИНН КАК ИННПлательщика,
		|	&Сумма КАК СуммаВзаиморасчетов,
		|	Организации.КодОрганаФСС КАК КодОрганаФСС,
		|	Организации.РегистрационныйНомерФСС КАК РегНомерФСС
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|		ПО Организации.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
		|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|ГДЕ
		|	Организации.Ссылка = &Организация";
		
		Запрос.УстановитьПараметр("Организация", Данные.Организация);
		Запрос.УстановитьПараметр("Сумма", Данные.СуммаДокумента);
		Запрос.УстановитьПараметр("Период", Данные.Период);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	
	ОбластьМакета.Параметры.Заполнить(Выборка);
	ОбластьМакета.Параметры.ОКАТО = Выборка.ОКТМО;
	
	ГосОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(Перечисления.ВидыГосударственныхОрганов.ОрганФСС, Выборка.КодОрганаФСС);
	ОбластьМакета.Параметры.НаименованиеПолучателяПлатежа = ГосОрган.ПлатежныеРеквизиты.ПолучательПлатежа;
	ОбластьМакета.Параметры.СокращенноеНаименованиеПолучателя = ГосОрган.ПолноеНаименование;
	ОбластьМакета.Параметры.ИННПолучателя = ГосОрган.ИНН;
	ОбластьМакета.Параметры.КПППолучателя = ГосОрган.КПП;
	ОбластьМакета.Параметры.НомерСчетаПолучателя = ГосОрган.ПлатежныеРеквизиты.РасчетныйСчет;
	ОбластьМакета.Параметры.БикБанкаПолучателя = ГосОрган.ПлатежныеРеквизиты.БИК;
	ОбластьМакета.Параметры.НаименованиеБанкаПолучателя = ГосОрган.ПлатежныеРеквизиты.Банк;
	
	Рубли = Цел(Выборка.СуммаВзаиморасчетов);
	ОбластьМакета.Параметры["Сумма"] = Рубли;
	
	Копейки = Окр(100 * (Выборка.СуммаВзаиморасчетов - Рубли), 0, 1);
	ОбластьМакета.Параметры["СуммаКопейки"] = Копейки;
	
	ОбластьМакета.Параметры["НомерЛС"] = Выборка.РегНомерФСС;
	
	
	ОбластьМакета.Параметры["КБКПлатежа"] = РегламентированнаяОтчетностьУСН.ПолучитьКБКУплаты(Выборка.Организация, Выборка.ДатаДокумента, ВидВзаиморасчетов);
	
	ОбластьМакета.Параметры["НаименованиеПлатежа"] = 
		РегламентированнаяОтчетностьУСНКлиентСервер.ПолучитьТекстНазначенияПлатежаНалогаПоДате(
			Выборка.ДатаДокумента, 
			ВидВзаиморасчетов,,Выборка.РегНомерФСС);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);

	
КонецПроцедуры


Процедура СформироватьПлатежкуЕНВД(Данные, ОбластьМакета, ТабличныйДокумент) 
	
		
	Запрос = Новый Запрос;
	Если ТипЗнч(Данные) = Тип("ДокументСсылка.НачислениеНалогов") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НачислениеНалоговНалоги.КодИФНС КАК КодИФНС,
		|	НачислениеНалоговНалоги.КодПоОКАТО КАК ОКАТО,
		|	НачислениеНалогов.Организация.НаименованиеПолное КАК Плательщик,
		|	НачислениеНалогов.Организация КАК Организация,
		|	НачислениеНалогов.Дата КАК ДатаДокумента,
		|	ОрганизацииКонтактнаяИнформация.Представление КАК АдресПлательщика,
		|	НачислениеНалогов.Организация.ИНН КАК ИННПлательщика,
		|	ЕСТЬNULL(НачислениеНалоговНалоги.Сумма, 0) КАК СуммаВзаиморасчетов
		|ИЗ
		|	Документ.НачислениеНалогов КАК НачислениеНалогов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеНалогов.Налоги КАК НачислениеНалоговНалоги
		|		ПО (НачислениеНалоговНалоги.Ссылка = НачислениеНалогов.Ссылка)
		|			И (НачислениеНалоговНалоги.ВидНалога = &ВидНалога)
		|			И (НачислениеНалоговНалоги.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|		ПО НачислениеНалогов.Организация.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
		|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|ГДЕ
		|	НачислениеНалогов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Данные);
		Запрос.УстановитьПараметр("ВидНалога", Справочники.ВидыНалогов.ЕНВД);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	&КодИФНС КАК КодИФНС,
		|	&КодПоОКАТО КАК ОКАТО,
		|	Организации.НаименованиеПолное КАК Плательщик,
		|	Организации.Ссылка КАК Организация,
		|	&Период КАК ДатаДокумента,
		|	ОрганизацииКонтактнаяИнформация.Представление КАК АдресПлательщика,
		|	Организации.ИНН КАК ИННПлательщика,
		|	&Сумма КАК СуммаВзаиморасчетов
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|		ПО Организации.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
		|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|ГДЕ
		|	Организации.Ссылка = &Организация";
		
		Запрос.УстановитьПараметр("Организация", Данные.Организация);
		Запрос.УстановитьПараметр("Сумма", Данные.СуммаДокумента);
		Запрос.УстановитьПараметр("Период", Данные.Период);
		Запрос.УстановитьПараметр("КодИФНС", Данные.КодИФНСДокумента);
		Запрос.УстановитьПараметр("КодПоОКАТО", Данные.КодОКТМОДокумента);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	
	ОбластьМакета.Параметры.Заполнить(Выборка);
	
	ГосОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган, Выборка.КодИФНС);
	ОбластьМакета.Параметры.НаименованиеПолучателяПлатежа = ГосОрган.ПлатежныеРеквизиты.ПолучательПлатежа;
	ОбластьМакета.Параметры.СокращенноеНаименованиеПолучателя = ГосОрган.ПолноеНаименование;
	ОбластьМакета.Параметры.ИННПолучателя = ГосОрган.ИНН;
	ОбластьМакета.Параметры.КПППолучателя = ГосОрган.КПП;
	ОбластьМакета.Параметры.НомерСчетаПолучателя = ГосОрган.ПлатежныеРеквизиты.РасчетныйСчет;
	ОбластьМакета.Параметры.БикБанкаПолучателя = ГосОрган.ПлатежныеРеквизиты.БИК;
	ОбластьМакета.Параметры.НаименованиеБанкаПолучателя = ГосОрган.ПлатежныеРеквизиты.Банк;
	
	Рубли = Цел(Выборка.СуммаВзаиморасчетов);
	ОбластьМакета.Параметры["Сумма"] = Рубли;
	
	Копейки = Окр(100 * (Выборка.СуммаВзаиморасчетов - Рубли), 0, 1);
	ОбластьМакета.Параметры["СуммаКопейки"] = Копейки;
	
	ОбластьМакета.Параметры["КБКПлатежа"] = РегламентированнаяОтчетностьУСН.ПолучитьКБКУплаты(Выборка.Организация, Выборка.ДатаДокумента, Справочники.ВидыНалогов.ЕНВД);
	
	ОбластьМакета.Параметры["НаименованиеПлатежа"] = 
		РегламентированнаяОтчетностьУСНКлиентСервер.ПолучитьТекстНазначенияПлатежаНалогаПоДате(
			Выборка.ДатаДокумента, 
			Справочники.ВидыНалогов.ЕНВД);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);

	
КонецПроцедуры

Процедура СформироватьПлатежкуПатент(Данные, ОбластьМакета, ТабличныйДокумент) 
	
		
	Запрос = Новый Запрос;
	Если ТипЗнч(Данные) = Тип("ДокументСсылка.НачислениеНалогов") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НачислениеНалоговНалоги.КодИФНС КАК КодИФНС,
		|	НачислениеНалоговНалоги.КодПоОКАТО КАК ОКАТО,
		|	НачислениеНалогов.Организация.НаименованиеПолное КАК Плательщик,
		|	НачислениеНалогов.Организация КАК Организация,
		|	НачислениеНалогов.Дата КАК ДатаДокумента,
		|	ОрганизацииКонтактнаяИнформация.Представление КАК АдресПлательщика,
		|	НачислениеНалогов.Организация.ИНН КАК ИННПлательщика,
		|	ЕСТЬNULL(НачислениеНалоговНалоги.Сумма, 0) КАК СуммаВзаиморасчетов,
		|	ЕСТЬNULL(Патент.КБК, """") КАК КБК,
		|	ЕСТЬNULL(Патент.НомерПатента, """") КАК НомерПатента
		|ИЗ
		|	Документ.НачислениеНалогов КАК НачислениеНалогов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеНалогов.Налоги КАК НачислениеНалоговНалоги
		|		ПО (НачислениеНалоговНалоги.Ссылка = НачислениеНалогов.Ссылка)
		|			И (НачислениеНалоговНалоги.ВидНалога = &ВидНалога)
		|			И (НачислениеНалоговНалоги.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|		ПО НачислениеНалогов.Организация.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
		|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыСобытийКалендаряОтчетности КАК ДокументыСобытийКалендаряОтчетности
		|		ПО (ДокументыСобытийКалендаряОтчетности.СвязанныйДокумент = &Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Патенты КАК Патент
		|		ПО (Патент.Ссылка = ДокументыСобытийКалендаряОтчетности.Событие.Основание)
		|ГДЕ
		|	НачислениеНалогов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Данные);
		Запрос.УстановитьПараметр("ВидНалога", Справочники.ВидыНалогов.Патент);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	&КодИФНС КАК КодИФНС,
		|	&КодПоОКАТО КАК ОКАТО,
		|	Организации.НаименованиеПолное КАК Плательщик,
		|	Организации.Ссылка КАК Организация,
		|	&Период КАК ДатаДокумента,
		|	ОрганизацииКонтактнаяИнформация.Представление КАК АдресПлательщика,
		|	Организации.ИНН КАК ИННПлательщика,
		|	&Сумма КАК СуммаВзаиморасчетов,
		|	"""" КАК КБК,
		|	"""" КАК НомерПатента
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|		ПО Организации.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
		|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|ГДЕ
		|	Организации.Ссылка = &Организация";
		
		Запрос.УстановитьПараметр("Организация", Данные.Организация);
		Запрос.УстановитьПараметр("Сумма", Данные.СуммаДокумента);
		Запрос.УстановитьПараметр("Период", Данные.Период);
		Запрос.УстановитьПараметр("КодИФНС", Данные.КодИФНСДокумента);
		Запрос.УстановитьПараметр("КодПоОКАТО", Данные.КодОКТМОДокумента);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	
	ОбластьМакета.Параметры.Заполнить(Выборка);
	
	ГосОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган, Выборка.КодИФНС);
	ОбластьМакета.Параметры.НаименованиеПолучателяПлатежа = ГосОрган.ПлатежныеРеквизиты.ПолучательПлатежа;
	ОбластьМакета.Параметры.СокращенноеНаименованиеПолучателя = ГосОрган.ПолноеНаименование;
	ОбластьМакета.Параметры.ИННПолучателя = ГосОрган.ИНН;
	ОбластьМакета.Параметры.КПППолучателя = ГосОрган.КПП;
	ОбластьМакета.Параметры.НомерСчетаПолучателя = ГосОрган.ПлатежныеРеквизиты.РасчетныйСчет;
	ОбластьМакета.Параметры.БикБанкаПолучателя = ГосОрган.ПлатежныеРеквизиты.БИК;
	ОбластьМакета.Параметры.НаименованиеБанкаПолучателя = ГосОрган.ПлатежныеРеквизиты.Банк;
	
	Рубли = Цел(Выборка.СуммаВзаиморасчетов);
	ОбластьМакета.Параметры["Сумма"] = Рубли;
	
	Копейки = Окр(100 * (Выборка.СуммаВзаиморасчетов - Рубли), 0, 1);
	ОбластьМакета.Параметры["СуммаКопейки"] = Копейки;
	
	ОбластьМакета.Параметры["КБКПлатежа"] = Выборка.КБК;
	
	ОбластьМакета.Параметры["НаименованиеПлатежа"] = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Уплата налога, взимаемого в связи с применением патентной системы налогообложения, зачисляемого в бюджеты %1, № %2,  НДС не облагается'"),
			Справочники.Патенты.НаправлениеПОКБК(Выборка.КБК),
			Выборка.НомерПатента);
	
	
	ТабличныйДокумент.Вывести(ОбластьМакета);

	
КонецПроцедуры

#КонецЕсли