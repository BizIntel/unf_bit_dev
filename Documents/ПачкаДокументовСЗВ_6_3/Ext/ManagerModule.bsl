#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// Процедуры получения данных для заполнения и проведения документа.

Функция ПолучитьДанныеФизическихЛиц(Организация, ОтчетныйПериод, КатегорияЗастрахованныхЛиц, ТипДоговора, СписокФизЛиц)Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДатаНачалаОтчетногоПериода = Дата(ОтчетныйПериод, 1, 1);
	
	УчетСтраховыхВзносов.СформироватьТаблицуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, СписокФизЛиц, Ложь, ДатаНачалаОтчетногоПериода);
	
	СформироватьВТСведенияОДоходах(Организация, ДатаНачалаОтчетногоПериода, Запрос.МенеджерВременныхТаблиц, КатегорияЗастрахованныхЛиц, ТипДоговора, СписокФизЛиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеДанныеФизЛиц.ФизическоеЛицо КАК Сотрудник,
	|	КадровыеДанныеФизЛиц.Фамилия КАК Фамилия,
	|	КадровыеДанныеФизЛиц.Имя,
	|	КадровыеДанныеФизЛиц.Отчество,
	|	КадровыеДанныеФизЛиц.СтраховойНомерПФР
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Фамилия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОДоходах.ФизическоеЛицо КАК Сотрудник,
	|	ДанныеОДоходах.Месяц КАК Месяц,
	|	ДанныеОДоходах.Заработок,
	|	ДанныеОДоходах.ОблагаетсяВзносами
	|ИЗ
	|	ВТДанныеОДоходах КАК ДанныеОДоходах
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Месяц";
	
	Результаты = Запрос.ВыполнитьПакет();
		
	ДанныеДляЗаполнения = Новый Структура("СведенияОФизЛицах, СведенияОЗаработке");
	
	ДанныеДляЗаполнения.СведенияОФизЛицах =  Результаты[0].Выгрузить();
	
	ДанныеДляЗаполнения.СведенияОЗаработке = Результаты[1].Выгрузить();
		
	Возврат ДанныеДляЗаполнения;
	
КонецФункции	

Функция ПолучитьСведенияОЗаработке(Организация, ОтчетныйПериод, КатегорияЗастрахованныхЛиц, ТипДоговора, СписокФизЛиц)Экспорт
	ДатаНачалаОтчетногоПериода = Дата(ОтчетныйПериод, 1, 1);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СформироватьВТСведенияОДоходах(Организация, ДатаНачалаОтчетногоПериода, Запрос.МенеджерВременныхТаблиц, КатегорияЗастрахованныхЛиц, ТипДоговора, СписокФизЛиц);	
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ДанныеОДоходах.ФизическоеЛицо КАК Сотрудник,
	|	ДанныеОДоходах.Месяц,
	|	ДанныеОДоходах.Заработок,
	|	ДанныеОДоходах.ОблагаетсяВзносами
	|ИЗ
	|	ВТДанныеОДоходах КАК ДанныеОДоходах";
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции	

Процедура СформироватьВТСведенияОДоходах(Организация, ОтчетныйПериод, МенеджерВременныхТаблиц, КатегорияЗастрахованныхЛиц = Неопределено, ТипДоговора = Неопределено, МассивФизлиц = Неопределено)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ГоловнаяОрганизация = Справочники.Организации.ПустаяСсылка();
	Иначе	
		ГоловнаяОрганизация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ГоловнаяОрганизация");
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КатегорияЗастрахованныхЛиц", КатегорияЗастрахованныхЛиц);
	Запрос.УстановитьПараметр("ТипДоговора", ТипДоговора);
	Запрос.УстановитьПараметр("НеОтбиратьПоТипуДоговора", ТипДоговора = Неопределено);
	Запрос.УстановитьПараметр("НеОтбиратьПоКатегории", КатегорияЗастрахованныхЛиц = Неопределено);
	Запрос.УстановитьПараметр("СписокНестрахуемыхДоходов", УчетСтраховыхВзносов.СписокНестрахуемыхВидовДохода());
	
	НачалоПериода = НачалоМесяца(ОтчетныйПериод);
	ОкончаниеПериода = КонецГода(ОтчетныйПериод);
	
	Если МассивФизлиц = Неопределено Тогда
		
		УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(ОтчетныйПериод, ОкончаниеПериода, Организация, Запрос.МенеджерВременныхТаблиц);
		
	Иначе
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ФизЛица", МассивФизлиц);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
		|	&Организация КАК Организация,
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&ФизЛица)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация";
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
			
		УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(НачалоПериода, ОкончаниеПериода, Организация, Запрос.МенеджерВременныхТаблиц); // только для ПФР
	КонецЕсли;
	
	УчетСтраховыхВзносов.СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(Запрос.МенеджерВременныхТаблиц);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Месяц,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ТипДоговора,
	|	СУММА(СведенияОДоходах.НачисленоВсего) КАК НачисленоВсего,
	|	СУММА(СведенияОДоходах.ОблагаемаяБазаПФР) КАК ОблагаемаяБазаПФР
	|ПОМЕСТИТЬ ВТДоходыПоТарифамДоговорам
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		МЕСЯЦ(СведенияОДоходах.Период) КАК Месяц,
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|		ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.Трудовой) КАК ТипДоговора,
	|		СведенияОДоходах.СуммаПоТрудовомуДоговору КАК НачисленоВсего,
	|		СведенияОДоходах.БазаПФРПоТрудовомуДоговору - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору КАК ОблагаемаяБазаПФР
	|	ИЗ
	|		ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.Организация = &Организация
	|		И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо,
	|		СведенияОДоходах.Период,
	|		МЕСЯЦ(СведенияОДоходах.Период),
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|		ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ГражданскоПравовой),
	|		СведенияОДоходах.Сумма - СведенияОДоходах.СуммаПоТрудовомуДоговору,
	|		СведенияОДоходах.БазаПФР - СведенияОДоходах.СуммаПревысившаяПределПФР - (СведенияОДоходах.БазаПФРПоТрудовомуДоговору - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору)
	|	ИЗ
	|		ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.Организация = &Организация
	|		И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)) КАК СведенияОДоходах
	|ГДЕ
	|	&НеОтбиратьПоТипуДоговора
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Месяц,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ТипДоговора
	|
	|ИМЕЮЩИЕ
	|	СУММА(СведенияОДоходах.НачисленоВсего) * СУММА(СведенияОДоходах.НачисленоВсего) + СУММА(СведенияОДоходах.ОблагаемаяБазаПФР) * СУММА(СведенияОДоходах.ОблагаемаяБазаПФР) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.Месяц КАК Месяц,
	|	СУММА(Доходы.НачисленоВсего) КАК Заработок,
	|	СУММА(Доходы.ОблагаемаяБазаПФР) КАК ОблагаетсяВзносами,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	Доходы.ТипДоговора
	|ПОМЕСТИТЬ ВТДанныеОДоходах
	|ИЗ
	|	ВТДоходыПоТарифамДоговорам КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|		ПО Доходы.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
	|			И (ГОД(Доходы.Период) МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо)
	|ГДЕ
	|	&НеОтбиратьПоКатегории
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.Месяц,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	Доходы.ТипДоговора";	
	
	Если ТипДоговора = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НеОтбиратьПоТипуДоговора", "Истина")
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НеОтбиратьПоТипуДоговора", "СведенияОДоходах.ТипДоговора = &ТипДоговора")
	КонецЕсли;
			   
	Если КатегорияЗастрахованныхЛиц = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НеОтбиратьПоКатегории", "Истина")
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НеОтбиратьПоКатегории", "СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц = &КатегорияЗастрахованныхЛиц")
	КонецЕсли;
			     	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры	

Функция СформироватьПачкиСЗВ_6_3(Организация, 
							ОтчетныйПериод, 
							КорректирующиеСведения = Ложь, 
							УчитыватьИсправления = Ложь, 
							МассивПачекСИсправлениями = Неопределено,
							МассивПачекСЗВ6_3 = Неопределено)Экспорт
									
	НомерПачки = УчетСтраховыхВзносов.ПолучитьСледующийНомерПачки(Организация, Дата(ОтчетныйПериод, 1, 1));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДатаНачалаОтчетногоПериода = Дата(ОтчетныйПериод, 1, 1);
	
	СформироватьВТСведенияОДоходах(Организация, ДатаНачалаОтчетногоПериода, Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ДанныеОДоходах.ФизическоеЛицо ИЗ ВТДанныеОДоходах КАК ДанныеОДоходах";

	СписокФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
	УчетСтраховыхВзносов.СформироватьТаблицуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, СписокФизическихЛиц, Ложь, КонецГода(ДатаНачалаОтчетногоПериода));
	
	Запрос.УстановитьПараметр("СписокПачек", МассивПачекСЗВ6_3);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеДанныеФизЛиц.ФизическоеЛицо КАК Сотрудник,
	|	КадровыеДанныеФизЛиц.Наименование КАК Наименование,
	|	КадровыеДанныеФизЛиц.Фамилия КАК Фамилия,
	|	КадровыеДанныеФизЛиц.Имя,
	|	КадровыеДанныеФизЛиц.Отчество,
	|	КадровыеДанныеФизЛиц.СтраховойНомерПФР,
	|	ДанныеОДоходах.Месяц КАК Месяц,
	|	ДанныеОДоходах.Заработок,
	|	ДанныеОДоходах.ОблагаетсяВзносами,
	|	ДанныеОДоходах.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ДанныеОДоходах.ТипДоговора КАК ТипДоговора,
	|	ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПодобранДокумент,
	|	КадровыеДанныеФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОДоходах КАК ДанныеОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_3.Сотрудники КАК ПачкаДокументовСЗВ_6_3Сотрудники
	|			ПО (ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка В (&СписокПачек))
	|				И ДанныеОДоходах.ФизическоеЛицо = ПачкаДокументовСЗВ_6_3Сотрудники.Сотрудник
	|				И ДанныеОДоходах.КатегорияЗастрахованныхЛиц = ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц
	|				И ДанныеОДоходах.ТипДоговора = ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка.ТипДоговора
	|		ПО КадровыеДанныеФизЛиц.ФизическоеЛицо = ДанныеОДоходах.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодобранДокумент УБЫВ,
	|	КатегорияЗастрахованныхЛиц,
	|	ТипДоговора,
	|	Ссылка,
	|	Наименование,
	|	ФизическоеЛицо,
	|	Месяц";	
	Результаты = Запрос.ВыполнитьПакет();
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если МассивПачекСЗВ6_3 = Неопределено Тогда 
		МассивПачекСЗВ6_3 = Новый Массив;
	КонецЕсли;	
	
	МассивСформированныхПачек = Новый Массив;
	
	Пока Выборка.СледующийПоЗначениюПоля("ПодобранДокумент") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("КатегорияЗастрахованныхЛиц") Цикл
			Пока Выборка.СледующийПоЗначениюПоля("ТипДоговора") Цикл
				Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
					СчСотрудников = 0;
					
					ПачкаОбъект = ПолучитьПачкуСЗВ_6_3(Выборка.Ссылка, МассивПачекСЗВ6_3);
					ЗаполнитьРеквизитыДокумента(ПачкаОбъект, Организация, ОтчетныйПериод, Выборка.КатегорияЗастрахованныхЛиц, Выборка.ТипДоговора, КорректирующиеСведения);
					УчетСтраховыхВзносов.ПроставитьНомерПачки(ПачкаОбъект);
					НомерПачки = НомерПачки + 1;
					//
					ЗаполнитьЗначенияСвойств(ПачкаОбъект, СправкиПоНДФЛ.ДанныеПодписывающихЛиц(Организация, ДатаНачалаОтчетногоПериода,,Истина));
					Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
						Если СчСотрудников = 200 Тогда
							ПачкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
							МассивСформированныхПачек.Добавить(ПачкаОбъект.Ссылка);
							
							ПачкаОбъект = ПолучитьПачкуСЗВ_6_3(Выборка.Ссылка, МассивПачекСЗВ6_3);
							ЗаполнитьРеквизитыДокумента(ПачкаОбъект, Организация, ОтчетныйПериод, Выборка.КатегорияЗастрахованныхЛиц, Выборка.ТипДоговора, КорректирующиеСведения);
							ПачкаОбъект.НомерПачки = НомерПачки;
							НомерПачки = НомерПачки + 1;	
						КонецЕсли;
						СтрокаСотрудик = ПачкаОбъект.Сотрудники.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСотрудик, Выборка);
						Пока Выборка.Следующий() Цикл
							СтрокаЗаработок = ПачкаОбъект.СведенияОЗаработке.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаЗаработок, Выборка);
						КонецЦикла;
					КонецЦикла;	
					ПачкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
					МассивСформированныхПачек.Добавить(ПачкаОбъект.Ссылка);
				КонецЦикла;				
			КонецЦикла;
		КонецЦикла;	
	КонецЦикла;	
	
	Возврат МассивСформированныхПачек;
КонецФункции	

Функция ПолучитьПачкуСЗВ_6_3(ПачкаСсылка, МассивПачекСЗВ)
	Если ЗначениеЗаполнено(ПачкаСсылка) Тогда
		ПачкаОбъект = ПачкаСсылка.ПолучитьОбъект();
		Индекс = МассивПачекСЗВ.Найти(ПачкаСсылка);
		Если Индекс <> Неопределено Тогда
			МассивПачекСЗВ.Удалить(Индекс);
		КонецЕсли;	
		ПачкаОбъект.Сотрудники.Очистить();
		ПачкаОбъект.СведенияОЗаработке.Очистить();
		
		Возврат ПачкаОбъект;
	КонецЕсли;
	
	Если МассивПачекСЗВ.Количество() > 0 Тогда
		ПачкаОбъект = МассивПачекСЗВ[0].ПолучитьОбъект();
		
		ПачкаОбъект.Сотрудники.Очистить();
		ПачкаОбъект.СведенияОЗаработке.Очистить();
		
		МассивПачекСЗВ.Удалить(0);
		
		Возврат ПачкаОбъект;
	КонецЕсли;
	
	Возврат Документы.ПачкаДокументовСЗВ_6_3.СоздатьДокумент();	
КонецФункции	

Процедура ЗаполнитьРеквизитыДокумента(ДокументОбъект, Организация, ОтчетныйПериод, КатегорияЗастрахованныхЛиц, ТипДоговора, КорректирующиеСведения)
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.ОтчетныйПериод = ОтчетныйПериод;
	ДокументОбъект.КатегорияЗастрахованныхЛиц = КатегорияЗастрахованныхЛиц;
	ДокументОбъект.ТипСведенийСЗВ = ?(КорректирующиеСведения, Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ, Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);
	ДокументОбъект.ТипДоговора = ТипДоговора;
	Если Не ЗначениеЗаполнено(ДокументОбъект.Дата) Тогда
		ДокументОбъект.Дата = ТекущаяДатаСеанса();
	КонецЕсли;
КонецПроцедуры



///////////////////////////////////////////////////////////////////////////////
// Для обеспечения формирования выходного файла

Функция ПолучитьДанныеДляФормированияФайла(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц  = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Застрахованные.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Застрахованные.НомерСтроки) КАК Количество
	|ПОМЕСТИТЬ ВТКоличествоСотрудников
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.Сотрудники КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка В(&ДокументСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_3.Ссылка КАК Ссылка,
	|	СУММА(ПачкаДокументовСЗВ_6_3.Заработок) КАК Заработок,
	|	СУММА(ПачкаДокументовСЗВ_6_3.ОблагаетсяВзносами) КАК ОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.СведенияОЗаработке КАК ПачкаДокументовСЗВ_6_3
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_3.Ссылка В(&ДокументСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаДокументовСЗВ_6_3.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОНачисленномЗаработке.Ссылка КАК Ссылка,
	|	СведенияОНачисленномЗаработке.Дата КАК Дата,
	|	СведенияОНачисленномЗаработке.Дата КАК ДатаСоставленияОписи,
	|	СведенияОНачисленномЗаработке.Номер КАК Номер,
	|	СведенияОНачисленномЗаработке.Организация КАК Организация,
	|	СведенияОНачисленномЗаработке.НомерПачки,
	|	СведенияОНачисленномЗаработке.ОтчетныйПериод,
	|	СведенияОНачисленномЗаработке.Руководитель,
	|	СведенияОНачисленномЗаработке.КатегорияЗастрахованныхЛиц,
	|	""СЗВ-6-3"" КАК ТипФормДокументов,
	|	СведенияОНачисленномЗаработке.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	СведенияОНачисленномЗаработке.Организация.Наименование,
	|	СведенияОНачисленномЗаработке.Организация.ЮридическоеФизическоеЛицо КАК ОрганизацияЮрФизЛицо,
	|	СведенияОНачисленномЗаработке.Организация.ОГРН КАК ОрганизацияОГРН,
	|	СведенияОНачисленномЗаработке.Организация.НаименованиеПолное,
	|	СведенияОНачисленномЗаработке.Организация.Наименование КАК НаименованиеСокращенное,
	|	СведенияОНачисленномЗаработке.Организация.РегистрационныйНомерПФР,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(СведенияОНачисленномЗаработке.Организация.КодПоОКПО,1,8)
	|		ИНАЧЕ СведенияОНачисленномЗаработке.Организация.КодПоОКПО
	|	КОНЕЦ КАК ОКПО,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(СведенияОНачисленномЗаработке.Организация.ИНН,1,10)
	|		ИНАЧЕ СведенияОНачисленномЗаработке.Организация.ИНН
	|	КОНЕЦ КАК ОрганизацияИНН,
	|	СведенияОНачисленномЗаработке.Организация.КПП,
	|	СведенияОНачисленномЗаработке.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СведенияОНачисленномЗаработке.ОтчетныйПериод КАК Год,
	|	СведенияОНачисленномЗаработке.ТипСведенийСЗВ,
	|	СведенияОНачисленномЗаработке.ТипДоговора,
	|	СведенияОНачисленномЗаработке.Организация.РегистрационныйНомерПФР,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(СведенияОНачисленномЗаработке.Организация.КодПоОКПО,1,8)
	|		ИНАЧЕ СведенияОНачисленномЗаработке.Организация.КодПоОКПО
	|	КОНЕЦ КАК ОрганизацияКодПоОКПО,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.Трудовой)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТрудовойДоговор,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ГражданскоПравовой)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоДоговорГПХ,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоИсходныйДокумент,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКорректирующийДокумент,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоОтменяющийДокумент,
	|	СведенияОНачисленномЗаработке.Руководитель,
	|	СведенияОНачисленномЗаработке.ИмяФайлаДляПФР
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3 КАК СведенияОНачисленномЗаработке
	|ГДЕ
	|	СведенияОНачисленномЗаработке.Ссылка В(&ДокументСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Ссылка,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Месяц,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Заработок,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ОблагаетсяВзносами,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Сотрудник,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.НомерСтроки
	|ПОМЕСТИТЬ ВТСтрокиЗаработкаЗастрахованных
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.СведенияОЗаработке КАК СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке
	|ГДЕ
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Ссылка В(&ДокументСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗастрахованныеЛица.Ссылка КАК Ссылка,
	|	ЗастрахованныеЛица.Сотрудник КАК Сотрудник,
	|	ЗастрахованныеЛица.НомерСтроки КАК НомерСтроки,
	|	ЗастрахованныеЛица.СтраховойНомерПФР,
	|	ЗастрахованныеЛица.Фамилия,
	|	ЗастрахованныеЛица.Имя,
	|	ЗастрахованныеЛица.Отчество,
	|	ЗастрахованныеЛица.Ссылка.Организация,
	|	ЗастрахованныеЛица.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ЗастрахованныеЛица.Ссылка.ОтчетныйПериод
	|ПОМЕСТИТЬ ВТЗастрахованныеЛица
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.Сотрудники КАК ЗастрахованныеЛица
	|ГДЕ
	|	ЗастрахованныеЛица.Ссылка В(&ДокументСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки,
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Ссылка,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Сотрудник,
	|	СУММА(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ОблагаетсяВзносами) КАК ОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТЗаработокЗастрахованных
	|ИЗ
	|	ВТСтрокиЗаработкаЗастрахованных КАК СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Ссылка,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Сотрудник";
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	УчетСтраховыхВзносов.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СведенияОНачисленномЗаработке.Ссылка КАК Ссылка,
	|	СведенияОНачисленномЗаработке.Дата КАК Дата,
	|	СведенияОНачисленномЗаработке.Дата КАК ДатаСоставленияОписи,
	|	СведенияОНачисленномЗаработке.Номер КАК Номер,
	|	СведенияОНачисленномЗаработке.Организация КАК Организация,
	|	СведенияОНачисленномЗаработке.НомерПачки,
	|	СведенияОНачисленномЗаработке.ОтчетныйПериод,
	|	СведенияОНачисленномЗаработке.КатегорияЗастрахованныхЛиц,
	|	""СЗВ-6-3"" КАК ТипФормДокументов,
	|	СведенияОНачисленномЗаработке.РуководительДолжность,
	|	СведенияОНачисленномЗаработке.ОрганизацияНаименование,
	|	СведенияОНачисленномЗаработке.ОрганизацияЮрФизЛицо,
	|	СведенияОНачисленномЗаработке.ОрганизацияОГРН,
	|	СведенияОНачисленномЗаработке.ОрганизацияНаименованиеПолное,
	|	СведенияОНачисленномЗаработке.НаименованиеСокращенное КАК ОрганизацияНаименованиеСокращенное,
	|	СведенияОНачисленномЗаработке.ОрганизацияРегистрационныйНомерПФР,
	|	СведенияОНачисленномЗаработке.ОрганизацияИНН,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ОрганизацияЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ВидыОрганизаций.Организация)
	|		ТОГДА ПОДСТРОКА(СведенияОНачисленномЗаработке.Организация.ИНН,1,10)
	|		ИНАЧЕ СведенияОНачисленномЗаработке.Организация.ИНН
	|	КОНЕЦ КАК ОрганизацияИНН,
	|	СведенияОНачисленномЗаработке.ОрганизацияКПП,
	|	СведенияОНачисленномЗаработке.ОКПО,
	|	СведенияОНачисленномЗаработке.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СведенияОНачисленномЗаработке.ОтчетныйПериод КАК Год,
	|	СведенияОНачисленномЗаработке.ТипСведенийСЗВ,
	|	СведенияОНачисленномЗаработке.ТипДоговора,
	|	СведенияОНачисленномЗаработке.ОрганизацияКодПоОКПО КАК ОрганизацияКодПоОКПО,
	|	СведенияОНачисленномЗаработке.ЭтоТрудовойДоговор,
	|	СведенияОНачисленномЗаработке.ЭтоДоговорГПХ,
	|	СведенияОНачисленномЗаработке.ЭтоИсходныйДокумент,
	|	СведенияОНачисленномЗаработке.ЭтоКорректирующийДокумент,
	|	СведенияОНачисленномЗаработке.ЭтоОтменяющийДокумент,
	|	СведенияОНачисленномЗаработке.Руководитель КАК Руководитель,
	|	СведенияОНачисленномЗаработке.ИмяФайлаДляПФР,
	|	ВсегоЗаработка.Заработок,
	|	ВсегоЗаработка.ОблагаетсяВзносами,
	|	КоличествоСотрудников.Количество
	|ИЗ
	|	ВТДанныеДокументов КАК СведенияОНачисленномЗаработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ВсегоЗаработка
	|		ПО СведенияОНачисленномЗаработке.Ссылка = ВсегоЗаработка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоСотрудников КАК КоличествоСотрудников
	|		ПО СведенияОНачисленномЗаработке.Ссылка = КоличествоСотрудников.Ссылка
	|ГДЕ
	|	СведенияОНачисленномЗаработке.Ссылка В(&ДокументСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПерваяТаблица.Ссылка КАК Ссылка,
	|	ПерваяТаблица.Сотрудник,
	|	ПерваяТаблица.НомерСтроки КАК НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.Организация,
	|	ПерваяТаблица.КатегорияЗастрахованныхЛиц,
	|	ПерваяТаблица.ОтчетныйПериод,
	|	ЗаработокПоМесяцам.Месяц КАК Месяц,
	|	ЗаработокПоМесяцам.Заработок КАК Заработок,
	|	ЗаработокПоМесяцам.ОблагаетсяВзносами,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.Заработок, 0) КАК ВсегоЗаработка,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.ОблагаетсяВзносами, 0) КАК ВсегоОблагаетсяВзносами
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ПерваяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиЗаработкаЗастрахованных КАК ЗаработокПоМесяцам
	|		ПО ПерваяТаблица.Ссылка = ЗаработокПоМесяцам.Ссылка
	|			И ПерваяТаблица.Сотрудник = ЗаработокПоМесяцам.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаработокЗастрахованных КАК ЗаработокЗастрахованных
	|		ПО ПерваяТаблица.Ссылка = ЗаработокЗастрахованных.Ссылка
	|			И ПерваяТаблица.Сотрудник = ЗаработокЗастрахованных.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	Месяц";	
	
	Возврат  Запрос.ВыполнитьПакет();
КонецФункции	

Функция СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)
	////////////////////////////////////////////////////////////////////////////////////////////
	//ФОРМИРУЕМ ФАЙЛ СВЕДЕНИЙ
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70_2010XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = СправкиПоНДФЛ.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);

	ТипДокументовПачки = "СВЕДЕНИЯ_О_СУММЕ_ВЫПЛАТ_И_ВОЗНАГРАЖДЕНИЙ";
	
	// Создаем начальное дерево
	ДеревоВыгрузки = СправкиПоНДФЛ.СоздатьДеревоXML();
	УзелПФР = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ФайлПФР", "", );
	УчетСтраховыхВзносов.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
	// Добавляем ветки ПачкаВходящихДокументов и ВходящаяОпись
	НаборВходящаяОпись = "";
	УзелПачкаВходящихДокументов = УчетСтраховыхВзносов.ЗаполнитьНаборЗаписейВходящаяОписьСЗВ6(УзелПФР, ДеревоФормата, ТипДокументовПачки, ВыборкаПоШапкеДокумента, ВыборкаПоШапкеДокумента.Количество, 1, "ОПИСЬ_ВЫПЛАТ", НаборВходящаяОпись, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ");
	ДанныеВходящейОписи = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(НаборВходящаяОпись);
	
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ",""), НаборВходящаяОпись);
	
	ФорматСЗВ6 = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СЗВ_6_3");
	ФорматСуммаВыплатИвознаграждений = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СуммаВыплатИтоговая");
	
	Если ВыборкаПоШапкеДокумента.ОрганизацияЮрФизЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		ФорматСЗВ6.Удалить("КПП");
		ТаблицаПолей = ФорматСЗВ6.НалоговыйНомер.Поля;
		ТаблицаПолей.Индексы.Добавить("ИмяПоля");
		СтрокаКПП = ТаблицаПолей.Найти("КПП", "ИмяПоля");
		Если СтрокаКПП <> Неопределено Тогда
			ТаблицаПолей.Удалить(СтрокаКПП);
		КонецЕсли;
	КонецЕсли;
	
	НомерДокументаВПачке = 1;
	Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("НомерСтроки") Цикл
		
		// Общие данные пачки - берем их из описи
		ФорматСЗВ6.ТипСведений.Значение = ДанныеВходящейОписи.ТипСведений.Значение;
		ФорматСЗВ6.РегистрационныйНомер.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.РегистрационныйНомер.Значение;
		ФорматСЗВ6.НаименованиеКраткое.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.НаименованиеКраткое.Значение;
		ЗаполнитьЗначенияСвойств(ФорматСЗВ6.НалоговыйНомер.Значение, ДанныеВходящейОписи.СоставительПачки.Значение.НалоговыйНомер.Значение);
		ФорматСЗВ6.КодКатегории.Значение = ДанныеВходящейОписи.КодКатегории.Значение;
		ФорматСЗВ6.ТипДоговора.Значение = ДанныеВходящейОписи.ТипДоговора.Значение;
		ФорматСЗВ6.ОтчетныйГод.Значение = ДанныеВходящейОписи.ОтчетныйГод.Значение;
		ФорматСЗВ6.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
		
		// Данные физлица
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		Фамилия = СокрЛП(ВыборкаПоСтрокамДокумента.Фамилия);
		Имя = СокрЛП(ВыборкаПоСтрокамДокумента.Имя);
		Отчество = СокрЛП(ВыборкаПоСтрокамДокумента.Отчество);
		
		ФорматСЗВ6.НомерВПачке.Значение = НомерДокументаВПачке;
		ФорматСЗВ6.СтраховойНомер.Значение = ВыборкаПоСтрокамДокумента.СтраховойНомерПФР;
		НаборЗаписейФИО = ФорматСЗВ6.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(Фамилия);
		НаборЗаписейФИО.Имя = ВРег(Имя);
		НаборЗаписейФИО.Отчество = ВРег(Отчество);
		
		НаборЗаписейСуммаВыплатИвознаграждений = ФорматСЗВ6.СуммаВыплатИвознаграждений.Значение;
		
		ФорматСЗВ6.СуммаВыплатИвознаграждений.НеВыводитьВФайл = Истина;
		
		УзелСЗВ6 = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
		СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСЗВ6, ФорматСЗВ6);
		
		Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("Месяц") Цикл
			
			НаборЗаписейСуммаВыплатИвознаграждений.Месяц.Значение = ВыборкаПоСтрокамДокумента.Месяц;
			НаборЗаписейСуммаВыплатИвознаграждений.ТипСтроки.Значение = "МЕСЯЦ";
			НаборЗаписейСуммаВыплатИвознаграждений.СуммаВыплатВсего.Значение = ВыборкаПоСтрокамДокумента.Заработок;
			НаборЗаписейСуммаВыплатИвознаграждений.СуммаВыплатНачисленыСтраховыеВзносы.Значение = ВыборкаПоСтрокамДокумента.ОблагаетсяВзносами;
			
			УзелЗаработка = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСЗВ6, "СуммаВыплатИвознаграждений","");
			СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелЗаработка, НаборЗаписейСуммаВыплатИвознаграждений);
			
		КонецЦикла;
		
		ФорматСуммаВыплатИвознаграждений.ТипСтроки.Значение = "ИТОГО";
		ФорматСуммаВыплатИвознаграждений.СуммаВыплатВсего.Значение = ВыборкаПоСтрокамДокумента.ВсегоЗаработка;
		ФорматСуммаВыплатИвознаграждений.СуммаВыплатНачисленыСтраховыеВзносы.Значение = ВыборкаПоСтрокамДокумента.ВсегоОблагаетсяВзносами;
		
		УзелЗаработка = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСЗВ6, "СуммаВыплатИвознаграждений","");
		СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелЗаработка, ФорматСуммаВыплатИвознаграждений);
		
	КонецЦикла;
	
	ТекстФайла = УчетСтраховыхВзносов.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	
	Возврат ТекстФайла
КонецФункции	

Функция СформироватьФайлСЗВ63(Объект, ИмяФайла)Экспорт
	
	ДанныеДляФормированияФайла = ПолучитьДанныеДляФормированияФайла(Объект.Ссылка);
	КоличествоРезультатов = ДанныеДляФормированияФайла.Количество();
	ВыборкаПоШапкеДокумента = ДанныеДляФормированияФайла[КоличествоРезультатов - 2].Выбрать();
	ВыборкаПоСтрокамДокумента = ДанныеДляФормированияФайла[КоличествоРезультатов - 1].Выбрать();
	
	ВыборкаПоШапкеДокумента.Следующий();

	ТекстФайла = СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
	
	ИмяФайла =  ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР;
	
	Возврат ТекстФайла;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции печати.

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Проверяем, нужно ли для макета формировать табличный документ
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаСЗВ_6_3") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ФормаСЗВ_6_3",
			"Форма СЗВ-6-3", СформироватьПечатнуюФормуСВВ6_3(МассивОбъектов[0], ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаАДВ_6_4") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ФормаАДВ_6_4",
			"ФормаАДВ-6-4", СформироватьПечатнуюФормуАДВ6_4(МассивОбъектов[0], ОбъектыПечати));
	КонецЕсли;

КонецПроцедуры


Функция СформироватьПечатнуюФормуСВВ6_3(Документ, ОбъектыПечати)
	
	ДанныеДляПечати = ПолучитьДанныеДляФормированияФайла(Документ);
	
	КоличествоРезультатов = ДанныеДляПечати.Количество();
	
	ВыборкаПоШапкеДокумента   = ДанныеДляПечати[КоличествоРезультатов - 2].Выбрать();
	ВыборкаПоСтрокамДокумента = ДанныеДляПечати[КоличествоРезультатов - 1].Выбрать();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СЗВ6_6_3";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет = ПолучитьМакет("ФормаСЗВ_6_3");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка"); // строка работника
	ОбластьМакетаПустаяСтрока = Макет.ПолучитьОбласть("Строка"); // строка работника
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	
	Пока ВыборкаПоШапкеДокумента.СледующийПоЗначениюПоля("Ссылка") Цикл
	
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаПоШапкеДокумента); // Шапка документа.
		ОбластьМакетаШапка.Параметры.КодКатегории = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаПоШапкеДокумента); // Подвал документа.
		
		СоответствиеМесяцев = Новый Соответствие;
		Для Сч = 1 По 12 Цикл
			СоответствиеМесяцев.Вставить(Сч, Формат(Дата(ВыборкаПоШапкеДокумента.ОтчетныйПериод, сч, 1),"ДФ=ММММ"))
		КонецЦикла; 
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаПоШапкеДокумента.Ссылка);
		ВыборкаПоСтрокамДокумента.Сбросить();
		Если ВыборкаПоСтрокамДокумента.НайтиСледующий(СтруктураПоиска) Тогда
			
			Если ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("Ссылка") Тогда
				Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("НомерСтроки") Цикл
					НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
					Если ТабДокумент.ВысотаТаблицы > 0 Тогда
						ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаПоСтрокамДокумента); // Шапка документа.
					ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаПоСтрокамДокумента); // Шапка документа.
				
					ТабДокумент.Вывести(ОбластьМакетаШапка);
					
					ПоследнийМесяц = 0;
					Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("Месяц") Цикл
						Для Сч = ПоследнийМесяц + 1 По ВыборкаПоСтрокамДокумента.Месяц - 1 Цикл
							ОбластьМакетаПустаяСтрока.Параметры.Месяц = СоответствиеМесяцев[Сч];
							ТабДокумент.Вывести(ОбластьМакетаПустаяСтрока);
						КонецЦикла;
						ПоследнийМесяц = ВыборкаПоСтрокамДокумента.Месяц;
						ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаПоСтрокамДокумента); 
						ОбластьМакетаСтрока.Параметры.Месяц = СоответствиеМесяцев[ПоследнийМесяц];
						ОбластьМакетаСтрока.Параметры.Месяц = СоответствиеМесяцев[ПоследнийМесяц];
						ТабДокумент.Вывести(ОбластьМакетаСтрока);
					КонецЦикла;
					Для Сч = ПоследнийМесяц + 1 По 12 Цикл
						ОбластьМакетаПустаяСтрока.Параметры.Месяц = СоответствиеМесяцев[Сч];
						ТабДокумент.Вывести(ОбластьМакетаПустаяСтрока);
					КонецЦикла;
					
					ТабДокумент.Вывести(ОбластьМакетаПодвал);
					УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
						НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоШапкеДокумента.Ссылка);
				КонецЦикла;
			КонецЕсли;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЦикла;
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуАДВ6_4(Документ, ОбъектыПечати)
	
	ДанныеДляПечати = ПолучитьДанныеДляФормированияФайла(Документ);
	ДокументОписи = Новый ТабличныйДокумент;
	ДокументОписи.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОписьАДВ_6_4";
	ДокументОписи.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	МакетОписи = ПолучитьМакет("ФормаАДВ_6_4");
	СекцияОпись = МакетОписи.ПолучитьОбласть("Опись");
	
	КоличествоРезультатов = ДанныеДляПечати.Количество();
	
	ВыборкаПоШапкеДокумента   = ДанныеДляПечати[КоличествоРезультатов - 2].Выбрать();
		
	Пока ВыборкаПоШапкеДокумента.СледующийПоЗначениюПоля("Ссылка") Цикл
		НомерСтрокиНачало = ДокументОписи.ВысотаТаблицы + 1;
		ЗаполнитьЗначенияСвойств(СекцияОпись.Параметры, ВыборкаПоШапкеДокумента);
		СекцияОпись.Параметры.КодКатегории = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		ДокументОписи.Вывести(СекцияОпись);
		
		ДокументОписи.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументОписи, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоШапкеДокумента.Ссылка);
	КонецЦикла;
	
	ДокументОписи.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ДокументОписи;
	
КонецФункции

#КонецЕсли