#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Проведение

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаУправленческий(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ЗачетПредоплаты", НСтр("ru = 'Зачет предоплаты'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	Запрос.УстановитьПараметр("ПоложительнаяКурсоваяРазницаСчетУчета", ПланыСчетов.Управленческий.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ОтрицательнаяКурсоваяРазницаСчетУчета", ПланыСчетов.Управленческий.ПрочиеРасходы);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	1 КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ТаблицаДокумента.СчетУчетаРасчетовСПоставщиком КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаРасчетовСПоставщикомВалютный
	|			ТОГДА ТаблицаДокумента.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаРасчетовСПоставщикомВалютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалДт,
	|	ТаблицаДокумента.СчетУчетаАвансовПоставщику КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаАвансовПоставщикуВалютный
	|			ТОГДА ТаблицаДокумента.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаАвансовПоставщикуВалютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалКт,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	&ЗачетПредоплаты КАК Содержание
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокумента.Период КАК Период,
	|		ТаблицаДокумента.Организация КАК Организация,
	|		ТаблицаДокумента.СчетУчетаАвансовПоставщику КАК СчетУчетаАвансовПоставщику,
	|		ТаблицаДокумента.СчетУчетаАвансовПоставщикуВалютный КАК СчетУчетаАвансовПоставщикуВалютный,
	|		ТаблицаДокумента.СчетУчетаРасчетовСПоставщиком КАК СчетУчетаРасчетовСПоставщиком,
	|		ТаблицаДокумента.СчетУчетаРасчетовСПоставщикомВалютный КАК СчетУчетаРасчетовСПоставщикомВалютный,
	|		ТаблицаДокумента.ВалютаРасчетов КАК ВалютаРасчетов,
	|		СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВал,
	|		СУММА(ТаблицаДокумента.Сумма) КАК Сумма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДокумента.Период КАК Период,
	|			ТаблицаДокумента.Организация КАК Организация,
	|			ТаблицаДокумента.СчетУчетаАвансовПоставщику КАК СчетУчетаАвансовПоставщику,
	|			ТаблицаДокумента.СчетУчетаАвансовПоставщику.Валютный КАК СчетУчетаАвансовПоставщикуВалютный,
	|			ТаблицаДокумента.СчетУчетаРасчетовСПоставщиком КАК СчетУчетаРасчетовСПоставщиком,
	|			ТаблицаДокумента.СчетУчетаРасчетовСПоставщиком.Валютный КАК СчетУчетаРасчетовСПоставщикомВалютный,
	|			ТаблицаДокумента.ВалютаРасчетов КАК ВалютаРасчетов,
	|			ТаблицаДокумента.СуммаВал КАК СуммаВал,
	|			ТаблицаДокумента.Сумма КАК Сумма
	|		ИЗ
	|			ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаДокумента.Дата,
	|			ТаблицаДокумента.Организация,
	|			ТаблицаДокумента.Контрагент.СчетУчетаАвансовПоставщику,
	|			ТаблицаДокумента.Контрагент.СчетУчетаАвансовПоставщику.Валютный,
	|			ТаблицаДокумента.Контрагент.СчетУчетаРасчетовСПоставщиком,
	|			ТаблицаДокумента.Контрагент.СчетУчетаРасчетовСПоставщиком.Валютный,
	|			ТаблицаДокумента.Валюта,
	|			0,
	|			ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)) КАК ТаблицаДокумента
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.Организация,
	|		ТаблицаДокумента.СчетУчетаАвансовПоставщику,
	|		ТаблицаДокумента.СчетУчетаАвансовПоставщикуВалютный,
	|		ТаблицаДокумента.СчетУчетаРасчетовСПоставщиком,
	|		ТаблицаДокумента.СчетУчетаРасчетовСПоставщикомВалютный,
	|		ТаблицаДокумента.ВалютаРасчетов
	|	
	|	ИМЕЮЩИЕ
	|		(СУММА(ТаблицаДокумента.Сумма) >= 0.005
	|			ИЛИ СУММА(ТаблицаДокумента.Сумма) <= -0.005
	|			ИЛИ СУММА(ТаблицаДокумента.СуммаВал) >= 0.005
	|			ИЛИ СУММА(ТаблицаДокумента.СуммаВал) <= -0.005)) КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	1,
	|	ТаблицаУправленческий.Дата,
	|	ТаблицаУправленческий.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СуммаКурсовойРазницы > 0
	|			ТОГДА &ОтрицательнаяКурсоваяРазницаСчетУчета
	|		ИНАЧЕ ТаблицаУправленческий.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СуммаКурсовойРазницы < 0
	|				И ТаблицаУправленческий.СчетУчетаВалютный
	|			ТОГДА ТаблицаУправленческий.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаУправленческий.СчетУчета
	|		ИНАЧЕ &ПоложительнаяКурсоваяРазницаСчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СуммаКурсовойРазницы > 0
	|				И ТаблицаУправленческий.СчетУчетаВалютный
	|			ТОГДА ТаблицаУправленческий.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаУправленческий.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаУправленческий.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Дата КАК Дата,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Организация КАК Организация,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.СчетУчета КАК СчетУчета,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.СчетУчетаВалютный КАК СчетУчетаВалютный,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Валюта КАК Валюта,
	|		СУММА(ТаблицаКурсовыхРазницРасчетыСПоставщиками.СуммаКурсовойРазницы) КАК СуммаКурсовойРазницы
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДокумента.Дата КАК Дата,
	|			ТаблицаДокумента.Организация КАК Организация,
	|			ТаблицаДокумента.СчетУчета КАК СчетУчета,
	|			ТаблицаДокумента.СчетУчета.Валютный КАК СчетУчетаВалютный,
	|			ТаблицаДокумента.Валюта КАК Валюта,
	|			ТаблицаДокумента.СуммаКурсовойРазницы КАК СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаДокумента.Дата,
	|			ТаблицаДокумента.Организация,
	|			ТаблицаДокумента.СчетУчета,
	|			ТаблицаДокумента.СчетУчета.Валютный,
	|			ТаблицаДокумента.Валюта,
	|			ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)) КАК ТаблицаКурсовыхРазницРасчетыСПоставщиками
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Дата,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Организация,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.СчетУчета,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.СчетУчетаВалютный,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Валюта
	|	
	|	ИМЕЮЩИЕ
	|		(СУММА(ТаблицаКурсовыхРазницРасчетыСПоставщиками.СуммаКурсовойРазницы) >= 0.005
	|			ИЛИ СУММА(ТаблицаКурсовыхРазницРасчетыСПоставщиками.СуммаКурсовойРазницы) <= -0.005)) КАК ТаблицаУправленческий";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяПроводка = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяПроводка, Выборка);
	КонецЦикла;
	
КонецПроцедуры // СформироватьТаблицаУправленческий()

#КонецОбласти

#Область Услуги

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыУслуга(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, СуммаУслуги)
	
	Для н = 0 По СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыУслуга.Количество() - 1 Цикл
		
		СтрокаТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыУслуга[н];
		
		// Сформируем проводки.
		Если СтрокаТаблицаЗапасы.Сумма > 0 Тогда
			СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
		КонецЕсли;
		
		// Если это производство, тогда необходимо отнести полученные затраты НЗП на себестоимость продукции.
		Если СтрокаТаблицаЗапасы.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
				
			// Приход услуг в НЗП.
			СтрокаТаблицыПриход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
				
			СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
			
			СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = Неопределено;
			СтрокаТаблицыПриход.КоррСчетУчета = Неопределено;
			СтрокаТаблицыПриход.КоррНоменклатура = Неопределено;
			СтрокаТаблицыПриход.КоррХарактеристика = Неопределено;
			СтрокаТаблицыПриход.КоррПартия = Неопределено;
			СтрокаТаблицыПриход.КоррСпецификация = Неопределено;
			СтрокаТаблицыПриход.КоррЗаказПокупателя  = Неопределено;
			СтрокаТаблицыПриход.ФиксированнаяСтоимость = Истина;
			
			// Списание затрат.
			// Сформируем проводки.
			Если СтрокаТаблицаЗапасы.Сумма > 0 Тогда
				СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
				СтрокаТаблицаУправленческий.СчетКт = СтрокаТаблицаУправленческий.СчетДт;
				СтрокаТаблицаУправленческий.ВалютаКт = Неопределено;
				СтрокаТаблицаУправленческий.СуммаВалКт = 0;
				СтрокаТаблицаУправленческий.СчетДт = СтрокаТаблицаЗапасы.КоррСчетУчета;
			КонецЕсли;
		
			СтрокаТаблицыРасход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасы);
				
			СтрокаТаблицыРасход.ВидДвижения = ВидДвиженияНакопления.Расход;
			
			СтрокаТаблицыРасход.КоррОрганизация = СтрокаТаблицаЗапасы.КоррОрганизация;
			СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
			СтрокаТаблицыРасход.КоррСчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
			СтрокаТаблицыРасход.КоррНоменклатура = СтрокаТаблицаЗапасы.КоррНоменклатура;
			СтрокаТаблицыРасход.КоррХарактеристика = СтрокаТаблицаЗапасы.КоррХарактеристика;
			СтрокаТаблицыРасход.КоррПартия = СтрокаТаблицаЗапасы.КоррПартия;
			СтрокаТаблицыРасход.КоррСпецификация = СтрокаТаблицаЗапасы.КоррСпецификация;
			
 			СтрокаТаблицыРасход.КоррЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
				
			СтрокаТаблицыРасход.СчетУчета = СтрокаТаблицаЗапасы.СчетУчета;
		    СтрокаТаблицыРасход.ФиксированнаяСтоимость = Ложь;
			СтрокаТаблицыРасход.ЗатратыНаВыпуск = Истина;
				
			// Отнесение затрат на себестоимость.
			СтрокаТаблицыПриход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
				
			СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
						
			СтрокаТаблицыПриход.Организация = СтрокаТаблицаЗапасы.КоррОрганизация;
			СтрокаТаблицыПриход.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
			СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
			СтрокаТаблицыПриход.Номенклатура = СтрокаТаблицаЗапасы.КоррНоменклатура;
			СтрокаТаблицыПриход.Характеристика = СтрокаТаблицаЗапасы.КоррХарактеристика;
			СтрокаТаблицыПриход.Партия = СтрокаТаблицаЗапасы.КоррПартия;
			СтрокаТаблицыПриход.Спецификация = СтрокаТаблицаЗапасы.КоррСпецификация;
			
			СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
			
			СтрокаТаблицыПриход.КоррОрганизация = СтрокаТаблицаЗапасы.Организация;
			СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасы.СтруктурнаяЕдиница;
			СтрокаТаблицыПриход.КоррСчетУчета = СтрокаТаблицаЗапасы.СчетУчета;
			СтрокаТаблицыПриход.КоррНоменклатура = СтрокаТаблицаЗапасы.Номенклатура;
			СтрокаТаблицыПриход.КоррХарактеристика = СтрокаТаблицаЗапасы.Характеристика;
			СтрокаТаблицыПриход.КоррПартия = СтрокаТаблицаЗапасы.Партия;
			СтрокаТаблицыПриход.КоррСпецификация = СтрокаТаблицаЗапасы.Спецификация;
			
			СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
		    СтрокаТаблицыПриход.ФиксированнаяСтоимость = Ложь;
			
			СуммаУслуги = СуммаУслуги + СтрокаТаблицаЗапасы.Сумма;
				
		Иначе
			
			// Отнесение затрат на себестоимость.
			СтрокаТаблицыПриход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
				
			СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
			
			
			СтрокаТаблицыПриход.Организация = СтрокаТаблицаЗапасы.КоррОрганизация;
			СтрокаТаблицыПриход.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
			СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
			СтрокаТаблицыПриход.Номенклатура = СтрокаТаблицаЗапасы.КоррНоменклатура;
			СтрокаТаблицыПриход.Характеристика = СтрокаТаблицаЗапасы.КоррХарактеристика;
			СтрокаТаблицыПриход.Партия = СтрокаТаблицаЗапасы.КоррПартия;
			СтрокаТаблицыПриход.Спецификация = СтрокаТаблицаЗапасы.КоррСпецификация;
			СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
			
			СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = Неопределено;
			СтрокаТаблицыПриход.КоррСчетУчета = Неопределено;
			СтрокаТаблицыПриход.КоррНоменклатура = Неопределено;
			СтрокаТаблицыПриход.КоррХарактеристика = Неопределено;
			СтрокаТаблицыПриход.КоррПартия = Неопределено;
			СтрокаТаблицыПриход.КоррСпецификация = Неопределено;
		    СтрокаТаблицыПриход.КоррЗаказПокупателя  = Неопределено;
		    СтрокаТаблицыПриход.ФиксированнаяСтоимость = Истина;
			
			СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
			
			СуммаУслуги = СуммаУслуги + СтрокаТаблицаЗапасы.Сумма;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // СформироватьТаблицаЗапасыЗапасы()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеПоУслуге(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, СуммаУслуги) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ОтчетПереработчикаПродукция.Количество) КАК КоличествоПродукции
	|ПОМЕСТИТЬ ВТКоличествоПродукции
	|ИЗ
	|	Документ.ОтчетПереработчика.Продукция КАК ОтчетПереработчикаПродукция
	|ГДЕ
	|	ОтчетПереработчикаПродукция.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ОтчетПереработчика.Ссылка.Дата КАК Период,
	|	ОтчетПереработчика.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	&Организация КАК Организация,
	|	&Организация КАК КоррОрганизация,
	|	ОтчетПереработчика.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОтчетПереработчика.Ссылка.СтруктурнаяЕдиница КАК КоррСтруктурнаяЕдиница,
	|	ОтчетПереработчика.Ссылка.Расход.СчетУчетаЗатрат КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ОтчетПереработчика.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|			ТОГДА ОтчетПереработчика.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ОтчетПереработчика.Номенклатура.СчетУчетаЗатрат
	|	КОНЕЦ КАК КоррСчетУчета,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ОтчетПереработчика.Номенклатура КАК КоррНоменклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ОтчетПереработчика.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК КоррХарактеристика,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК Партия,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ОтчетПереработчика.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК КоррПартия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК Спецификация,
	|	ОтчетПереработчика.Спецификация КАК КоррСпецификация,
	|	ОтчетПереработчика.Ссылка.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ОтчетПереработчика.Ссылка.ЗаказПокупателя КАК КоррЗаказПокупателя,
	|	0 КАК Количество,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ОтчетПереработчика.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|				ТОГДА ОтчетПереработчика.Ссылка.Всего * ОтчетПереработчика.Количество / ВТКоличествоПродукции.КоличествоПродукции * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ОтчетПереработчика.Ссылка.Всего * ОтчетПереработчика.Количество / ВТКоличествоПродукции.КоличествоПродукции * ОтчетПереработчика.Ссылка.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ОтчетПереработчика.Ссылка.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ОтчетПереработчика.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|				ТОГДА ОтчетПереработчика.Ссылка.Всего * ОтчетПереработчика.Количество / ВТКоличествоПродукции.КоличествоПродукции * КурсыРегВалюты.Курс * ОтчетПереработчика.Ссылка.Кратность / (ОтчетПереработчика.Ссылка.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ОтчетПереработчика.Ссылка.Всего * ОтчетПереработчика.Количество / ВТКоличествоПродукции.КоличествоПродукции
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаВал,
	|	ВЫБОР
	|		КОГДА ОтчетПереработчика.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ОтчетПереработчика.Ссылка.Расход.СчетУчетаЗатрат
	|		ИНАЧЕ ОтчетПереработчика.Номенклатура.СчетУчетаЗапасов
	|	КОНЕЦ КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	0 КАК СуммаВалДт,
	|	ОтчетПереработчика.Ссылка.Контрагент.СчетУчетаРасчетовСПоставщиком КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ОтчетПереработчика.Ссылка.Контрагент.СчетУчетаРасчетовСПоставщиком.Валютный
	|			ТОГДА ОтчетПереработчика.Ссылка.Договор.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА ОтчетПереработчика.Ссылка.Контрагент.СчетУчетаРасчетовСПоставщиком.Валютный
	|			ТОГДА ВЫРАЗИТЬ(ВЫБОР
	|						КОГДА ОтчетПереработчика.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|							ТОГДА ОтчетПереработчика.Ссылка.Всего * ОтчетПереработчика.Количество / ВТКоличествоПродукции.КоличествоПродукции * КурсыРегВалюты.Курс * ОтчетПереработчика.Ссылка.Кратность / (ОтчетПереработчика.Ссылка.Курс * КурсыРегВалюты.Кратность)
	|						ИНАЧЕ ОтчетПереработчика.Ссылка.Всего * ОтчетПереработчика.Количество / ВТКоличествоПродукции.КоличествоПродукции
	|					КОНЕЦ КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалКт,
	|	&ОтражениеРасходовПоПереработке КАК Содержание,
	|	&ОтражениеРасходовПоПереработке КАК СодержаниеПроводки
	|ИЗ
	|	Документ.ОтчетПереработчика.Продукция КАК ОтчетПереработчика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаВалютаУчета.Значение
	|					ИЗ
	|						Константа.ВалютаУчета КАК КонстантаВалютаУчета)) КАК КурсыУпрВалюты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалюты
	|		ПО (ИСТИНА),
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта,
	|	ВТКоличествоПродукции КАК ВТКоличествоПродукции
	|ГДЕ
	|	ОтчетПереработчика.Ссылка = &Ссылка
	|	И ОтчетПереработчика.Ссылка.Всего > 0";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("МоментКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	Запрос.УстановитьПараметр("ОтражениеРасходовПоПереработке", НСтр("ru = 'Отражение расходов по переработке'"));
	
	Результат = Запрос.Выполнить();
	
	// Определим таблицу для учета запасов.
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыУслуга", Результат.Выгрузить());

	// Сформируем таблицу для учета запасов.
	СформироватьТаблицаЗапасыУслуга(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, СуммаУслуги);
	
КонецПроцедуры // ИнициализироватьДанныеПоУслуге()

#КонецОбласти

#Область Отходы

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыОтходы(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства)
	
	Для н = 0 По СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыОтходы.Количество() - 1 Цикл
		
		СтрокаТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыОтходы[н];
				
		СтрокаТаблицыПриход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
		
	КонецЦикла;
	
КонецПроцедуры // СформироватьТаблицаЗапасыОтходы()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеПоОтходам(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетПереработчикаОтходы.НомерСтроки КАК НомерСтроки,
	|	ОтчетПереработчикаОтходы.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ОтчетПереработчикаОтходы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА &УчетПоЯчейкам
	|			ТОГДА ОтчетПереработчикаОтходы.Ссылка.Ячейка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК Ячейка,
	|	ОтчетПереработчикаОтходы.Номенклатура.СчетУчетаЗапасов КАК СчетУчета,
	|	ОтчетПереработчикаОтходы.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ОтчетПереработчикаОтходы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ОтчетПереработчикаОтходы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ОтчетПереработчикаОтходы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ОтчетПереработчикаОтходы.Количество
	|		ИНАЧЕ ОтчетПереработчикаОтходы.Количество * ОтчетПереработчикаОтходы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	0 КАК Сумма,
	|	&ВозвратныеОтходы КАК СодержаниеПроводки
	|ИЗ
	|	Документ.ОтчетПереработчика.Отходы КАК ОтчетПереработчикаОтходы
	|ГДЕ
	|	ОтчетПереработчикаОтходы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетПереработчикаОтходы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ОтчетПереработчикаОтходы.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ОтчетПереработчикаОтходы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА &УчетПоЯчейкам
	|			ТОГДА ОтчетПереработчикаОтходы.Ссылка.Ячейка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Ячейка,
	|	ОтчетПереработчикаОтходы.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ОтчетПереработчикаОтходы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ОтчетПереработчикаОтходы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ОтчетПереработчикаОтходы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ОтчетПереработчикаОтходы.Количество
	|		ИНАЧЕ ОтчетПереработчикаОтходы.Количество * ОтчетПереработчикаОтходы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	Документ.ОтчетПереработчика.Отходы КАК ОтчетПереработчикаОтходы
	|ГДЕ
	|	ОтчетПереработчикаОтходы.Ссылка = &Ссылка
	|	И (НЕ ОтчетПереработчикаОтходы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад)";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("МоментКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	Запрос.УстановитьПараметр("ВозвратныеОтходы", НСтр("ru = 'Возвратные отходы'"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Определим таблицу для учета запасов.
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыОтходы", МассивРезультатов[0].Выгрузить());

	// Сформируем таблицу для учета запасов.
	СформироватьТаблицаЗапасыОтходы(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);

	// Дополним таблицу для запасов.
	ВыборкаРезультатов = МассивРезультатов[1].Выбрать();
	Пока ВыборкаРезультатов.Следующий() Цикл
		СтрокаТаблицыРасход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыНаСкладах.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, ВыборкаРезультатов);
	КонецЦикла;

КонецПроцедуры // ИнициализироватьДанныеПоОтходам()

#КонецОбласти

#Область Запасы

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыЗапасы(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, СуммаСборки)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	// Установка исключительной блокировки контролируемых остатков запасов.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.ЗаказПокупателя";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Запасы");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;

	Для каждого КолонкаРезультатЗапроса из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков запасов по стоимости.
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.Организация КАК Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|		СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				&МоментКонтроля,
	|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						ТаблицаЗапасы.Организация,
	|						ТаблицаЗапасы.СтруктурнаяЕдиница,
	|						ТаблицаЗапасы.СчетУчета,
	|						ТаблицаЗапасы.Номенклатура,
	|						ТаблицаЗапасы.Характеристика,
	|						ТаблицаЗапасы.Партия,
	|						ТаблицаЗапасы.ЗаказПокупателя
	|					ИЗ
	|						ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы)) КАК ЗапасыОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗапасыОстатки.Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета,
	|		ЗапасыОстатки.Номенклатура,
	|		ЗапасыОстатки.Характеристика,
	|		ЗапасыОстатки.Партия,
	|		ЗапасыОстатки.ЗаказПокупателя
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗапасы.Организация,
	|		ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|		ДвиженияДокументаЗапасы.СчетУчета,
	|		ДвиженияДокументаЗапасы.Номенклатура,
	|		ДвиженияДокументаЗапасы.Характеристика,
	|		ДвиженияДокументаЗапасы.Партия,
	|		ДвиженияДокументаЗапасы.ЗаказПокупателя,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|	ГДЕ
	|		ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		И ДвиженияДокументаЗапасы.Период <= &ПериодКонтроля) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.ЗаказПокупателя";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("МоментКонтроля", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаЗапасыОстатки = РезультатЗапроса.Выгрузить();
	ТаблицаЗапасыОстатки.Индексы.Добавить("Организация,СтруктурнаяЕдиница,СчетУчета,Номенклатура,Характеристика,Партия,ЗаказПокупателя");
	
	Для н = 0 По СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыЗапасы.Количество() - 1 Цикл
		
		СтрокаТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыЗапасы[н];
		
		СтруктураДляПоиска = Новый Структура;
		СтруктураДляПоиска.Вставить("Организация", СтрокаТаблицаЗапасы.Организация);
		СтруктураДляПоиска.Вставить("СтруктурнаяЕдиница", СтрокаТаблицаЗапасы.СтруктурнаяЕдиница);
		СтруктураДляПоиска.Вставить("СчетУчета", СтрокаТаблицаЗапасы.СчетУчета);
		СтруктураДляПоиска.Вставить("Номенклатура", СтрокаТаблицаЗапасы.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", СтрокаТаблицаЗапасы.Характеристика);
		СтруктураДляПоиска.Вставить("Партия", СтрокаТаблицаЗапасы.Партия);
		СтруктураДляПоиска.Вставить("ЗаказПокупателя", СтрокаТаблицаЗапасы.ЗаказПокупателя);
		
		КоличествоТребуетсяСвободныйОстаток = СтрокаТаблицаЗапасы.Количество;
						
		Если КоличествоТребуетсяСвободныйОстаток > 0 Тогда
								
			МассивСтрокОстатков = ТаблицаЗапасыОстатки.НайтиСтроки(СтруктураДляПоиска);
			
			КоличествоОстаток = 0;
			СуммаОстаток = 0;
			
			Если МассивСтрокОстатков.Количество() > 0 Тогда
				КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток;
				СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток;
			КонецЕсли;
			
			Если КоличествоОстаток > 0 И КоличествоОстаток > КоличествоТребуетсяСвободныйОстаток Тогда

				СуммаКСписанию = Окр(СуммаОстаток * КоличествоТребуетсяСвободныйОстаток / КоличествоОстаток , 2, 1);

				МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоТребуетсяСвободныйОстаток;
				МассивСтрокОстатков[0].СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток - СуммаКСписанию;

			ИначеЕсли КоличествоОстаток = КоличествоТребуетсяСвободныйОстаток Тогда

				СуммаКСписанию = СуммаОстаток;

				МассивСтрокОстатков[0].КоличествоОстаток = 0;
				МассивСтрокОстатков[0].СуммаОстаток = 0;

			Иначе
				СуммаКСписанию = 0;	
			КонецЕсли;
			
			СуммаСборки = СуммаСборки + СуммаКСписанию;
	
			// Расход.
			СтрокаТаблицыРасход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасы);
			
			СтрокаТаблицыРасход.Сумма = СуммаКСписанию;
			СтрокаТаблицыРасход.Количество = КоличествоТребуетсяСвободныйОстаток;
			СтрокаТаблицыРасход.ЗатратыНаВыпуск = Истина;
			
			// Приход.
			Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
				
				СтрокаТаблицыПриход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
					
				СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
								
				СтрокаТаблицыПриход.Организация = СтрокаТаблицаЗапасы.КоррОрганизация;
				СтрокаТаблицыПриход.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
				СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
				СтрокаТаблицыПриход.Номенклатура = СтрокаТаблицаЗапасы.КоррНоменклатура;
				СтрокаТаблицыПриход.Характеристика = СтрокаТаблицаЗапасы.КоррХарактеристика;
				СтрокаТаблицыПриход.Партия = СтрокаТаблицаЗапасы.КоррПартия;
				СтрокаТаблицыПриход.Спецификация = СтрокаТаблицаЗапасы.КоррСпецификация;
				
				СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
				
				СтрокаТаблицыПриход.КоррОрганизация = СтрокаТаблицаЗапасы.Организация;
				СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасы.СтруктурнаяЕдиница;
				СтрокаТаблицыПриход.КоррСчетУчета = СтрокаТаблицаЗапасы.СчетУчета;
				СтрокаТаблицыПриход.КоррНоменклатура = СтрокаТаблицаЗапасы.Номенклатура;
				СтрокаТаблицыПриход.КоррХарактеристика = СтрокаТаблицаЗапасы.Характеристика;
				СтрокаТаблицыПриход.КоррПартия = СтрокаТаблицаЗапасы.Партия;
				СтрокаТаблицыПриход.КоррСпецификация = СтрокаТаблицаЗапасы.Спецификация;
 						
				СтрокаТаблицыПриход.Сумма = СуммаКСписанию;
				СтрокаТаблицыПриход.Количество = 0;
					
				СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
				
				// Сформируем проводки.
				Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
					СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицыПриход);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // СформироватьТаблицаЗапасов()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеПоЗапасам(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, СуммаСборки) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетПереработчикаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ОтчетПереработчикаЗапасы.Период КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	&Организация КАК КоррОрганизация,
	|	ОтчетПереработчикаЗапасы.Контрагент КАК СтруктурнаяЕдиница,
	|	ОтчетПереработчикаЗапасы.СтруктурнаяЕдиница КАК КоррСтруктурнаяЕдиница,
	|	ОтчетПереработчикаЗапасы.ОрдерныйСклад КАК ОрдерныйСклад,
	|	ОтчетПереработчикаЗапасы.Ячейка КАК Ячейка,
	|	ОтчетПереработчикаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаЗапасов,
	|	ОтчетПереработчикаЗапасы.СтруктурнаяЕдиницаЗапасовНаСклад КАК СтруктурнаяЕдиницаЗапасовНаСклад,
	|	ОтчетПереработчикаЗапасы.ОрдерныйСкладЗапасов КАК ОрдерныйСкладЗапасов,
	|	ОтчетПереработчикаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПродукции,
	|	ОтчетПереработчикаЗапасы.Ячейка КАК ЯчейкаЗапасов,
	|	ОтчетПереработчикаЗапасы.СчетУчета КАК СчетУчета,
	|	ОтчетПереработчикаЗапасы.СчетУчетаЗапасов КАК СчетУчетаЗапасов,
	|	ОтчетПереработчикаЗапасы.КоррСчетУчета КАК КоррСчетУчета,
	|	ОтчетПереработчикаЗапасы.СчетУчетаПродукции КАК СчетУчетаПродукции,
	|	ОтчетПереработчикаЗапасы.Номенклатура КАК Номенклатура,
	|	ОтчетПереработчикаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОтчетПереработчикаЗапасы.НомерГТД КАК НомерГТД,
	|	ОтчетПереработчикаЗапасы.КоррНоменклатура КАК КоррНоменклатура,
	|	ОтчетПереработчикаЗапасы.Характеристика КАК Характеристика,
	|	ОтчетПереработчикаЗапасы.КоррХарактеристика КАК КоррХарактеристика,
	|	ОтчетПереработчикаЗапасы.Партия КАК Партия,
	|	ОтчетПереработчикаЗапасы.ПартияСтатус КАК ПартияСтатус,
	|	ОтчетПереработчикаЗапасы.КоррПартия КАК КоррПартия,
	|	ОтчетПереработчикаЗапасы.Спецификация КАК Спецификация,
	|	ОтчетПереработчикаЗапасы.КоррСпецификация КАК КоррСпецификация,
	|	ОтчетПереработчикаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ОтчетПереработчикаЗапасы.ЗаказПокупателя КАК КоррЗаказПокупателя,
	|	ОтчетПереработчикаЗапасы.ДокументОснование КАК ДокументОснование,
	|	ОтчетПереработчикаЗапасы.Контрагент КАК Контрагент,
	|	ОтчетПереработчикаЗапасы.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ОтчетПереработчикаЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ОтчетПереработчикаЗапасы.Количество
	|		ИНАЧЕ ОтчетПереработчикаЗапасы.Количество * ОтчетПереработчикаЗапасы.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	0 КАК Сумма,
	|	ОтчетПереработчикаЗапасы.Всего КАК Всего,
	|	ОтчетПереработчикаЗапасы.Курс КАК Курс,
	|	ОтчетПереработчикаЗапасы.Кратность КАК Кратность,
	|	ОтчетПереработчикаЗапасы.ВалютаДокумента КАК ВалютаДокумента,
	|	ОтчетПереработчикаЗапасы.СчетДт КАК СчетДт,
	|	ОтчетПереработчикаЗапасы.СчетДтПродукции КАК СчетДтПродукции,
	|	ОтчетПереработчикаЗапасы.СчетКт КАК СчетКт,
	|	ОтчетПереработчикаЗапасы.СчетКтПродукции КАК СчетКтПродукции,
	|	ВЫРАЗИТЬ(&РаспределениеЗапасов КАК СТРОКА(100)) КАК СодержаниеПроводки,
	|	ВЫРАЗИТЬ(&РаспределениеЗапасов КАК СТРОКА(100)) КАК Содержание
	|ПОМЕСТИТЬ 	ВТТаблицаРаспределенияМатериаловСборка
	|ИЗ
	|	&ТаблицаРаспределенияМатериаловСборка КАК ОтчетПереработчикаЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетПереработчикаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ОтчетПереработчикаЗапасы.Период КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	&Организация КАК КоррОрганизация,
	|	ОтчетПереработчикаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОтчетПереработчикаЗапасы.КоррСтруктурнаяЕдиница КАК КоррСтруктурнаяЕдиница,
	|	ОтчетПереработчикаЗапасы.ОрдерныйСклад КАК ОрдерныйСклад,
	|	ОтчетПереработчикаЗапасы.Ячейка КАК Ячейка,
	|	ОтчетПереработчикаЗапасы.СтруктурнаяЕдиницаЗапасов КАК СтруктурнаяЕдиницаЗапасов,
	|	ОтчетПереработчикаЗапасы.СтруктурнаяЕдиницаЗапасовНаСклад КАК СтруктурнаяЕдиницаЗапасовНаСклад,
	|	ОтчетПереработчикаЗапасы.ОрдерныйСкладЗапасов КАК ОрдерныйСкладЗапасов,
	|	ОтчетПереработчикаЗапасы.СтруктурнаяЕдиницаПродукции КАК СтруктурнаяЕдиницаПродукции,
	|	ОтчетПереработчикаЗапасы.Ячейка КАК ЯчейкаЗапасов,
	|	ОтчетПереработчикаЗапасы.СчетУчета КАК СчетУчета,
	|	ОтчетПереработчикаЗапасы.СчетУчетаЗапасов КАК СчетУчетаЗапасов,
	|	ОтчетПереработчикаЗапасы.КоррСчетУчета КАК КоррСчетУчета,
	|	ОтчетПереработчикаЗапасы.СчетУчетаПродукции КАК СчетУчетаПродукции,
	|	ОтчетПереработчикаЗапасы.Номенклатура КАК Номенклатура,
	|	ОтчетПереработчикаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОтчетПереработчикаЗапасы.НомерГТД КАК НомерГТД,
	|	ОтчетПереработчикаЗапасы.КоррНоменклатура КАК КоррНоменклатура,
	|	ОтчетПереработчикаЗапасы.Характеристика КАК Характеристика,
	|	ОтчетПереработчикаЗапасы.КоррХарактеристика КАК КоррХарактеристика,
	|	ОтчетПереработчикаЗапасы.Партия КАК Партия,
	|	ОтчетПереработчикаЗапасы.ПартияСтатус КАК ПартияСтатус,
	|	ОтчетПереработчикаЗапасы.КоррПартия КАК КоррПартия,
	|	ОтчетПереработчикаЗапасы.Спецификация КАК Спецификация,
	|	ОтчетПереработчикаЗапасы.КоррСпецификация КАК КоррСпецификация,
	|	ОтчетПереработчикаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ОтчетПереработчикаЗапасы.КоррЗаказПокупателя КАК КоррЗаказПокупателя,
	|	ОтчетПереработчикаЗапасы.ДокументОснование КАК ЗаказПередчи,
	|	ОтчетПереработчикаЗапасы.Контрагент КАК Контрагент,
	|	ОтчетПереработчикаЗапасы.Договор КАК Договор,
	|	ОтчетПереработчикаЗапасы.Количество,
	|	0 КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ОтчетПереработчикаЗапасы.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|				ТОГДА ОтчетПереработчикаЗапасы.Всего * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ОтчетПереработчикаЗапасы.Всего * ОтчетПереработчикаЗапасы.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ОтчетПереработчикаЗапасы.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ОтчетПереработчикаЗапасы.Всего КАК СуммаРасчетовПереданные,
	|	ОтчетПереработчикаЗапасы.СчетДт КАК СчетДт,
	|	ОтчетПереработчикаЗапасы.СчетДтПродукции КАК СчетДтПродукции,
	|	ОтчетПереработчикаЗапасы.СчетКт КАК СчетКт,
	|	ОтчетПереработчикаЗапасы.СчетКтПродукции КАК СчетКтПродукции,
	|	ВЫРАЗИТЬ(&РаспределениеЗапасов КАК СТРОКА(100)) КАК СодержаниеПроводки,
	|	ВЫРАЗИТЬ(&РаспределениеЗапасов КАК СТРОКА(100)) КАК Содержание
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	ВТТаблицаРаспределенияМатериаловСборка КАК ОтчетПереработчикаЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаВалютаУчета.Значение
	|					ИЗ
	|						Константа.ВалютаУчета КАК КонстантаВалютаУчета)) КАК КурсыУпрВалюты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалюты
	|		ПО (ИСТИНА),
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СценарийПланирования КАК СценарийПланирования,
	|	ТаблицаЗапасы.КоррОрганизация КАК КоррОрганизация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница КАК КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.КоррСчетУчета КАК КоррСчетУчета,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.КоррНоменклатура КАК КоррНоменклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.КоррХарактеристика КАК КоррХарактеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.КоррПартия КАК КоррПартия,
	|	ТаблицаЗапасы.Спецификация КАК Спецификация,
	|	ТаблицаЗапасы.КоррСпецификация КАК КоррСпецификация,
	|	ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаЗапасы.КоррЗаказПокупателя КАК КоррЗаказПокупателя,
	|	ТаблицаЗапасы.КоррСчетУчета КАК СчетДт,
	|	ТаблицаЗапасы.СчетУчета КАК СчетКт,
	|	ТаблицаЗапасы.СодержаниеПроводки КАК Содержание,
	|	ТаблицаЗапасы.СодержаниеПроводки КАК СодержаниеПроводки,
	|	ЛОЖЬ КАК ЗатратыНаВыпуск,
	|	СУММА(ТаблицаЗапасы.Количество) КАК Количество,
	|	0 КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.СценарийПланирования,
	|	ТаблицаЗапасы.КоррОрганизация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.КоррСчетУчета,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.КоррНоменклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.КоррХарактеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.КоррПартия,
	|	ТаблицаЗапасы.Спецификация,
	|	ТаблицаЗапасы.КоррСпецификация,
	|	ТаблицаЗапасы.ЗаказПокупателя,
	|	ТаблицаЗапасы.КоррЗаказПокупателя,
	|	ТаблицаЗапасы.СодержаниеПроводки,
	|	ТаблицаЗапасы.КоррСчетУчета,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.СодержаниеПроводки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыПереданные.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗапасыПереданные.Период КАК Период,
	|	ТаблицаЗапасыПереданные.Организация КАК Организация,
	|	ТаблицаЗапасыПереданные.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасыПереданные.Характеристика КАК Характеристика,
	|	ТаблицаЗапасыПереданные.Партия КАК Партия,
	|	ТаблицаЗапасыПереданные.Контрагент КАК Контрагент,
	|	ТаблицаЗапасыПереданные.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасыПереданные.ЗаказПередчи <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			ТОГДА ТаблицаЗапасыПереданные.ЗаказПередчи
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Заказ,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПриемаПередачиТоваров.ПередачаВПереработку) КАК ТипПриемаПередачи,
	|	СУММА(ТаблицаЗапасыПереданные.Количество) КАК Количество,
	|	СУММА(ТаблицаЗапасыПереданные.СуммаРасчетовПереданные) КАК СуммаРасчетов
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасыПереданные
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасыПереданные.Период,
	|	ТаблицаЗапасыПереданные.Организация,
	|	ТаблицаЗапасыПереданные.Номенклатура,
	|	ТаблицаЗапасыПереданные.Характеристика,
	|	ТаблицаЗапасыПереданные.Партия,
	|	ТаблицаЗапасыПереданные.Контрагент,
	|	ТаблицаЗапасыПереданные.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасыПереданные.ЗаказПередчи <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			ТОГДА ТаблицаЗапасыПереданные.ЗаказПередчи
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("МоментКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	Запрос.УстановитьПараметр("ТаблицаРаспределенияМатериаловСборка", СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРаспределенияМатериаловСборка);
	Запрос.УстановитьПараметр("РаспределениеЗапасов", НСтр("ru = 'Распределение запасов'"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Определим таблицу для учета запасов.
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыЗапасы", МассивРезультатов[2].Выгрузить());
	
	// Сформируем таблицу для учета запасов.
	СформироватьТаблицаЗапасыЗапасы(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, СуммаСборки);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыПереданные", МассивРезультатов[3].Выгрузить());
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Удалить("ТаблицаРаспределенияМатериаловСборка");
	
КонецПроцедуры // ИнициализироватьДанныеПоЗапасам()

#КонецОбласти

#Область Продукция

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыКПоступлениюНаСклады(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ОтчетПереработчикаПродукция.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ОтчетПереработчикаПродукция.Период КАК Период,
	|	ОтчетПереработчикаПродукция.Организация КАК Организация,
	|	ОтчетПереработчикаПродукция.Номенклатура КАК Номенклатура,
	|	ОтчетПереработчикаПродукция.Характеристика КАК Характеристика,
	|	ОтчетПереработчикаПродукция.Партия КАК Партия,
	|	ОтчетПереработчикаПродукция.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ОтчетПереработчикаПродукция.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ОтчетПереработчикаПродукция
	|ГДЕ
	|	ОтчетПереработчикаПродукция.ОрдерныйСклад
	|	И ОтчетПереработчикаПродукция.Период >= ОтчетПереработчикаПродукция.ДатаОбновленияНаРелиз_1_2_1
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетПереработчикаПродукция.Номенклатура,
	|	ОтчетПереработчикаПродукция.Характеристика,
	|	ОтчетПереработчикаПродукция.Партия,
	|	ОтчетПереработчикаПродукция.Период,
	|	ОтчетПереработчикаПродукция.Организация,
	|	ОтчетПереработчикаПродукция.СтруктурнаяЕдиница
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ОтчетПереработчикаОтходы.НомерСтроки),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ОтчетПереработчикаОтходы.Ссылка.Дата,
	|	ОтчетПереработчикаОтходы.Ссылка.Организация,
	|	ОтчетПереработчикаОтходы.Номенклатура,
	|	ОтчетПереработчикаОтходы.Характеристика,
	|	ОтчетПереработчикаОтходы.Партия,
	|	ОтчетПереработчикаОтходы.Ссылка.СтруктурнаяЕдиница,
	|	СУММА(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ОтчетПереработчикаОтходы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА ОтчетПереработчикаОтходы.Количество
	|			ИНАЧЕ ОтчетПереработчикаОтходы.Количество * ОтчетПереработчикаОтходы.ЕдиницаИзмерения.Коэффициент
	|		КОНЕЦ)
	|ИЗ
	|	Документ.ОтчетПереработчика.Отходы КАК ОтчетПереработчикаОтходы
	|ГДЕ
	|	ОтчетПереработчикаОтходы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад
	|	И ОтчетПереработчикаОтходы.Ссылка = &Ссылка
	|	И ОтчетПереработчикаОтходы.Ссылка.Дата >= &ДатаОбновленияНаРелиз_1_2_1
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетПереработчикаОтходы.Ссылка,
	|	ОтчетПереработчикаОтходы.Номенклатура,
	|	ОтчетПереработчикаОтходы.Характеристика,
	|	ОтчетПереработчикаОтходы.Партия,
	|	ОтчетПереработчикаОтходы.Ссылка.Дата,
	|	ОтчетПереработчикаОтходы.Ссылка.Организация,
	|	ОтчетПереработчикаОтходы.Ссылка.СтруктурнаяЕдиница";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	
	// Временно: изменение движений по ордерному складу.
	Запрос.УстановитьПараметр("ДатаОбновленияНаРелиз_1_2_1", Константы.ДатаОбновленияНаРелиз_1_2_1.Получить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКПоступлениюНаСклады", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыКПоступлениюНаСклады()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыПродукция(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, СуммаСборки)
	
	Для н = 0 По СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыПродукция.Количество() - 1 Цикл
		
		СтрокаТаблицаЗапасыПродукция = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыПродукция[н];
		
		// Сформируем выпуск продукции в количественном выражении. Если заказ покупателя указан - под заказ
		// покупателя, если нет - то под пустой заказ.
		СтрокаТаблицыПриход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасыПродукция);
		
		// Если заказ на производство заполнен, а заказ покупателя нет, то необходимо проверить,
		// есть ли размещенные заказы покупателей в заказе поставщику.
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицаЗапасыПродукция.ЗаказПокупателя) 
		   И ЗначениеЗаполнено(СтрокаТаблицаЗапасыПродукция.ЗаказПоставщику) Тогда
		 
			// Потом приход либо в свободный остаток либо в размещенные в заказе заказы поставщику.
			СтоимостьВыхода = СуммаСборки;
			КоличествоВыхода = СтрокаТаблицаЗапасыПродукция.Количество;
			
			КоличествоВыходаВРезерв = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРазмещениеЗаказов.Итог("Количество");

			Если КоличествоВыхода = КоличествоВыходаВРезерв Тогда
				СтоимостьВыходаВРезерв = СтоимостьВыхода;
			Иначе
				СтоимостьВыходаВРезерв = Окр(СтоимостьВыхода * КоличествоВыходаВРезерв / КоличествоВыхода, 2, 1);
			КонецЕсли;

			Если КоличествоВыходаВРезерв > 0 Тогда	

				ВсегоСуммаКСписаниюПоЗаказу = 0;
					
				Для Индекс = 0 по СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРазмещениеЗаказов.Количество() - 1 Цикл

					СтрокаТаблицаРазмещенныхЗаказов = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРазмещениеЗаказов[Индекс];
						
					СуммаКСписаниюПоЗаказу = Окр(СтоимостьВыходаВРезерв * СтрокаТаблицаРазмещенныхЗаказов.Количество / КоличествоВыходаВРезерв, 2, 1);
					ВсегоСуммаКСписаниюПоЗаказу = ВсегоСуммаКСписаниюПоЗаказу + СуммаКСписаниюПоЗаказу;
						
					Если Индекс = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРазмещениеЗаказов.Количество() - 1 Тогда // Это последняя строка, необходимо скорректировать сумму.
						СуммаКСписаниюПоЗаказу = СуммаКСписаниюПоЗаказу + (СтоимостьВыходаВРезерв - ВсегоСуммаКСписаниюПоЗаказу);
					КонецЕсли;

					СтрокаТаблицыРасход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасыПродукция);
					
					СтрокаТаблицыРасход.ВидДвижения = ВидДвиженияНакопления.Расход;
					
					СтрокаТаблицыРасход.КоррОрганизация = СтрокаТаблицаЗапасыПродукция.Организация;
					СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасыПродукция.СтруктурнаяЕдиница;
					СтрокаТаблицыРасход.КоррСчетУчета = СтрокаТаблицаЗапасыПродукция.СчетУчета;
					СтрокаТаблицыРасход.КоррНоменклатура = СтрокаТаблицаЗапасыПродукция.Номенклатура;
					СтрокаТаблицыРасход.КоррХарактеристика = СтрокаТаблицаЗапасыПродукция.Характеристика;
					СтрокаТаблицыРасход.КоррПартия = СтрокаТаблицаЗапасыПродукция.Партия;
					СтрокаТаблицыРасход.КоррСпецификация = СтрокаТаблицаЗапасыПродукция.Спецификация;
 									
					СтрокаТаблицыРасход.КоррЗаказПокупателя = СтрокаТаблицаРазмещенныхЗаказов.ЗаказПокупателя;
					СтрокаТаблицыРасход.Количество = СтрокаТаблицаРазмещенныхЗаказов.Количество;
					СтрокаТаблицыРасход.Сумма = СуммаКСписаниюПоЗаказу;
					
					СтрокаТаблицыПриход = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасыПродукция);
									
					СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
									
					СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаРазмещенныхЗаказов.ЗаказПокупателя;
									
					СтрокаТаблицыРасход.КоррОрганизация = СтрокаТаблицаЗапасыПродукция.Организация;
					СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасыПродукция.СтруктурнаяЕдиница;
					СтрокаТаблицыРасход.КоррСчетУчета = СтрокаТаблицаЗапасыПродукция.СчетУчета;
					СтрокаТаблицыРасход.КоррНоменклатура = СтрокаТаблицаЗапасыПродукция.Номенклатура;
					СтрокаТаблицыРасход.КоррХарактеристика = СтрокаТаблицаЗапасыПродукция.Характеристика;
					СтрокаТаблицыРасход.КоррПартия = СтрокаТаблицаЗапасыПродукция.Партия;
					СтрокаТаблицыРасход.КоррСпецификация = СтрокаТаблицаЗапасыПродукция.Спецификация;

					СтрокаТаблицыПриход.КоррЗаказПокупателя = СтрокаТаблицаЗапасыПродукция.ЗаказПокупателя;
					СтрокаТаблицыПриход.Количество = СтрокаТаблицаРазмещенныхЗаказов.Количество;
					СтрокаТаблицыПриход.Сумма = СуммаКСписаниюПоЗаказу;
					
				КонецЦикла;
			
			КонецЕсли;			

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // СформироватьТаблицаЗапасыПродукция()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРазмещениеЗаказов(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	// Установка исключительной блокировки контролируемых размещений заказов.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПродукция.Организация КАК Организация,
	|	ТаблицаПродукция.Номенклатура КАК Номенклатура,
	|	ТаблицаПродукция.Характеристика КАК Характеристика,
	|	ТаблицаПродукция.ИсточникОбеспечения КАК ИсточникОбеспечения
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаПродукция
	|ГДЕ
	|	ТаблицаПродукция.ИсточникОбеспечения <> Неопределено
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПродукция.Организация,
	|	ТаблицаПродукция.Номенклатура,
	|	ТаблицаПродукция.Характеристика,
	|	ТаблицаПродукция.ИсточникОбеспечения";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РазмещениеЗаказов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;

	Для каждого КолонкаРезультатЗапроса из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков.
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаПродукция.Период КАК Период,
	|	ТаблицаПродукция.Организация КАК Организация,
	|	РазмещениеЗаказовОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаПродукция.Номенклатура КАК Номенклатура,
	|	ТаблицаПродукция.Характеристика КАК Характеристика,
	|	ТаблицаПродукция.ИсточникОбеспечения КАК ИсточникОбеспечения,
	|	ВЫБОР
	|		КОГДА ТаблицаПродукция.Количество > ЕСТЬNULL(РазмещениеЗаказовОстатки.Количество, 0)
	|			ТОГДА ЕСТЬNULL(РазмещениеЗаказовОстатки.Количество, 0)
	|		КОГДА ТаблицаПродукция.Количество <= ЕСТЬNULL(РазмещениеЗаказовОстатки.Количество, 0)
	|			ТОГДА ТаблицаПродукция.Количество
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РазмещениеЗаказовОстатки.Организация КАК Организация,
	|			РазмещениеЗаказовОстатки.Номенклатура КАК Номенклатура,
	|			РазмещениеЗаказовОстатки.Характеристика КАК Характеристика,
	|			РазмещениеЗаказовОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|			РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения,
	|			СУММА(РазмещениеЗаказовОстатки.КоличествоОстаток) КАК Количество
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РазмещениеЗаказовОстатки.Организация КАК Организация,
	|				РазмещениеЗаказовОстатки.Номенклатура КАК Номенклатура,
	|				РазмещениеЗаказовОстатки.Характеристика КАК Характеристика,
	|				РазмещениеЗаказовОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|				РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения,
	|				РазмещениеЗаказовОстатки.КоличествоОстаток КАК КоличествоОстаток
	|			ИЗ
	|				РегистрНакопления.РазмещениеЗаказов.Остатки(
	|						&МоментКонтроля,
	|						(Организация, Номенклатура, Характеристика, ИсточникОбеспечения) В
	|							(ВЫБРАТЬ
	|								ТаблицаПродукция.Организация КАК Организация,
	|								ТаблицаПродукция.Номенклатура КАК Номенклатура,
	|								ТаблицаПродукция.Характеристика КАК Характеристика,
	|								ТаблицаПродукция.ИсточникОбеспечения КАК ИсточникОбеспечения
	|							ИЗ
	|								ВременнаяТаблицаПродукция КАК ТаблицаПродукция
	|							ГДЕ
	|								ТаблицаПродукция.ИсточникОбеспечения <> НЕОПРЕДЕЛЕНО)) КАК РазмещениеЗаказовОстатки
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ДвиженияДокументаРазмещениеЗаказов.Организация,
	|				ДвиженияДокументаРазмещениеЗаказов.Номенклатура,
	|				ДвиженияДокументаРазмещениеЗаказов.Характеристика,
	|				ДвиженияДокументаРазмещениеЗаказов.ЗаказПокупателя,
	|				ДвиженияДокументаРазмещениеЗаказов.ИсточникОбеспечения,
	|				ВЫБОР
	|					КОГДА ДвиженияДокументаРазмещениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|						ТОГДА ЕСТЬNULL(ДвиженияДокументаРазмещениеЗаказов.Количество, 0)
	|					ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаРазмещениеЗаказов.Количество, 0)
	|				КОНЕЦ
	|			ИЗ
	|				РегистрНакопления.РазмещениеЗаказов КАК ДвиженияДокументаРазмещениеЗаказов
	|			ГДЕ
	|				ДвиженияДокументаРазмещениеЗаказов.Регистратор = &Ссылка
	|				И ДвиженияДокументаРазмещениеЗаказов.Период <= &ПериодКонтроля) КАК РазмещениеЗаказовОстатки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РазмещениеЗаказовОстатки.Организация,
	|			РазмещениеЗаказовОстатки.Номенклатура,
	|			РазмещениеЗаказовОстатки.Характеристика,
	|			РазмещениеЗаказовОстатки.ЗаказПокупателя,
	|			РазмещениеЗаказовОстатки.ИсточникОбеспечения) КАК РазмещениеЗаказовОстатки
	|		ПО ТаблицаПродукция.Организация = РазмещениеЗаказовОстатки.Организация
	|			И ТаблицаПродукция.Номенклатура = РазмещениеЗаказовОстатки.Номенклатура
	|			И ТаблицаПродукция.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|			И ТаблицаПродукция.ИсточникОбеспечения = РазмещениеЗаказовОстатки.ИсточникОбеспечения
	|ГДЕ
	|	ТаблицаПродукция.ИсточникОбеспечения <> НЕОПРЕДЕЛЕНО
	|	И РазмещениеЗаказовОстатки.ЗаказПокупателя ЕСТЬ НЕ NULL ";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("МоментКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.ПериодКонтроля);
	
	РезультатЗапроса = Запрос.Выполнить();

	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРазмещениеЗаказов", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРазмещениеЗаказов()

#КонецОбласти

#Область РасчетыСПоставщиками

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПоставщиками(ДокументСсылкаПриходнаяНакладная, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПриходнаяНакладная);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ВозникновениеОбязательствПередПоставщиком", НСтр("ru='Возникновение обязательств перед поставщиком'"));
	Запрос.УстановитьПараметр("ЗачетАванса", НСтр("ru='Зачет предоплаты'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.Период КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.СчетУчетаРасчетовСПоставщиком КАК СчетУчета,
	|	ТаблицаДокумента.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ТаблицаДокумента.ВалютаРасчетов КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг) КАК ТипРасчетов,
	|	СУММА(ТаблицаДокумента.Сумма) КАК Сумма,
	|	СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВал,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаДляОстатка,
	|	СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВалДляОстатка,
	|	ВЫРАЗИТЬ(&ВозникновениеОбязательствПередПоставщиком КАК СТРОКА(100)) КАК СодержаниеПроводки
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыСПоставщиками
	|ИЗ
	|	ВременнаяТаблицаЗапасыДляРасчетов КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.ВалютаРасчетов,
	|	ТаблицаДокумента.СчетУчетаРасчетовСПоставщиком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.СчетУчетаАвансовПоставщику,
	|	ТаблицаДокумента.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.ВалютаРасчетов,
	|	ТаблицаДокумента.ТипРасчетов,
	|	СУММА(ТаблицаДокумента.Сумма),
	|	СУММА(ТаблицаДокумента.СуммаВал),
	|	СУММА(ТаблицаДокумента.Сумма),
	|	СУММА(ТаблицаДокумента.СуммаВал),
	|	ВЫРАЗИТЬ(&ЗачетАванса КАК СТРОКА(100))
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.ТипРасчетов,
	|	ТаблицаДокумента.ВалютаРасчетов,
	|	ТаблицаДокумента.СчетУчетаАвансовПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаДокумента.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.ДокументКуда
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.ВалютаРасчетов,
	|	ТаблицаДокумента.ТипРасчетовКуда,
	|	СУММА(ТаблицаДокумента.Сумма),
	|	СУММА(ТаблицаДокумента.СуммаВал),
	|	-СУММА(ТаблицаДокумента.Сумма),
	|	-СУММА(ТаблицаДокумента.СуммаВал),
	|	ВЫРАЗИТЬ(&ЗачетАванса КАК СТРОКА(100))
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.ДокументКуда
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаДокумента.ВалютаРасчетов,
	|	ТаблицаДокумента.ТипРасчетовКуда
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Контрагент,
	|	Договор,
	|	Валюта,
	|	Документ,
	|	Заказ,
	|	ТипРасчетов,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПоставщиками.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Договор КАК Договор,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Документ КАК Документ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.ТипРасчетов КАК ТипРасчетов
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПоставщиками КАК ВременнаяТаблицаРасчетыСПоставщиками";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = УправлениеНебольшойФирмойСервер.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПоставщиками(Запрос.МенеджерВременныхТаблиц, Истина, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходы(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПоложительнаяКурсоваяРазницаСчетУчета", ПланыСчетов.Управленческий.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ОтрицательнаяКурсоваяРазницаСчетУчета", ПланыСчетов.Управленческий.ПрочиеРасходы);
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК СтруктурнаяЕдиница,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА &ОтрицательнаяКурсоваяРазницаСчетУчета
	|		ИНАЧЕ &ПоложительнаяКурсоваяРазницаСчетУчета
	|	КОНЕЦ КАК СчетУчета,
	|	ТаблицаДокумента.Валюта КАК Аналитика,
	|	&КурсоваяРазница КАК СодержаниеПроводки,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ КАК СуммаДоходов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Дата КАК Дата,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Организация КАК Организация,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Валюта,
	|		СУММА(ТаблицаКурсовыхРазницРасчетыСПоставщиками.СуммаКурсовойРазницы) КАК СуммаКурсовойРазницы
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДокумента.Дата КАК Дата,
	|			ТаблицаДокумента.Организация КАК Организация,
	|			ТаблицаДокумента.Валюта,
	|			ТаблицаДокумента.СуммаКурсовойРазницы КАК СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаДокумента.Дата,
	|			ТаблицаДокумента.Организация,
	|			ТаблицаДокумента.Валюта,
	|			ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)) КАК ТаблицаКурсовыхРазницРасчетыСПоставщиками
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Дата,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Организация,
	|		ТаблицаКурсовыхРазницРасчетыСПоставщиками.Валюта
	|	
	|	ИМЕЮЩИЕ
	|		(СУММА(ТаблицаКурсовыхРазницРасчетыСПоставщиками.СуммаКурсовойРазницы) >= 0.005
	|			ИЛИ СУММА(ТаблицаКурсовыхРазницРасчетыСПоставщиками.СуммаКурсовойРазницы) <= -0.005)) КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Сумма КАК СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаЗапасыДляРасчетов КАК ТаблицаДокумента,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ВременнаяТаблицаШапка.ВестиУчетРасходовПоДоговорамОбслуживания
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация КАК Организация,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ВременнаяТаблицаШапка.ВестиУчетРасходовПоДоговорамОбслуживания
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Статья КАК Статья
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ВременнаяТаблицаШапка.ВестиУчетРасходовПоДоговорамОбслуживания
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаЗапасыДоходыИРасходыОтложенные = МассивРезультатов[0].Выгрузить();
	ВыборкаРезультатаЗапроса = МассивРезультатов[1].Выбрать();
	
	ТаблицаПредоплатаДоходыИРасходыОтложенные = ТаблицаЗапасыДоходыИРасходыОтложенные.Скопировать();
	ТаблицаПредоплатаДоходыИРасходыОтложенные.Очистить();
	
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		СуммаКСписанию = ВыборкаРезультатаЗапроса.СуммаКСписанию;
		Для каждого СтрокаЗапасыДоходыИРасходыОтложенные Из ТаблицаЗапасыДоходыИРасходыОтложенные Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаЗапасыДоходыИРасходыОтложенные.СуммаРасходов <= СуммаКСписанию Тогда
				СтрокаПредоплатаДоходыИРасходыОтложенные = ТаблицаПредоплатаДоходыИРасходыОтложенные.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПредоплатаДоходыИРасходыОтложенные, СтрокаЗапасыДоходыИРасходыОтложенные);
				СуммаКСписанию = СуммаКСписанию - СтрокаЗапасыДоходыИРасходыОтложенные.СуммаРасходов;
			ИначеЕсли СтрокаЗапасыДоходыИРасходыОтложенные.СуммаРасходов > СуммаКСписанию Тогда
				СтрокаПредоплатаДоходыИРасходыОтложенные = ТаблицаПредоплатаДоходыИРасходыОтложенные.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПредоплатаДоходыИРасходыОтложенные, СтрокаЗапасыДоходыИРасходыОтложенные);
				СтрокаПредоплатаДоходыИРасходыОтложенные.СуммаРасходов = СуммаКСписанию;
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для каждого СтрокаПредоплатаДоходыИРасходыОтложенные Из ТаблицаПредоплатаДоходыИРасходыОтложенные Цикл
		СтрокаЗапасыДоходыИРасходыОтложенные = ТаблицаЗапасыДоходыИРасходыОтложенные.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаЗапасыДоходыИРасходыОтложенные, СтрокаПредоплатаДоходыИРасходыОтложенные);
		СтрокаЗапасыДоходыИРасходыОтложенные.ВидДвижения = ВидДвиженияНакопления.Расход;
	КонецЦикла;
	
	ВыборкаРезультатаЗапроса = МассивРезультатов[2].Выбрать();
	
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		Статья = ВыборкаРезультатаЗапроса.Статья;
	Иначе
		Статья = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	&Статья КАК Статья,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Таблица.СуммаРасходов КАК СуммаРасходов
	|ПОМЕСТИТЬ ВременнаяТаблицаПредоплатаДоходыИРасходыОтложенные
	|ИЗ
	|	&Таблица КАК Таблица";
	Запрос.УстановитьПараметр("Таблица", ТаблицаПредоплатаДоходыИРасходыОтложенные);
	Запрос.УстановитьПараметр("Статья", Статья);
	
	Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыОтложенные", ТаблицаЗапасыДоходыИРасходыОтложенные);
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыОтложенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.Сумма КАК СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ВременнаяТаблицаШапка.ВестиУчетРасходовПоДоговорамОбслуживания";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыНераспределенные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыНераспределенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.ДокументДата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаШапка.ВестиУчетРасходовПоДоговорамОбслуживания
	|			ТОГДА ВременнаяТаблицаШапка.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	-ТаблицаДокумента.Сумма КАК СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Статья,
	|	Таблица.СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаПредоплатаДоходыИРасходыОтложенные КАК Таблица";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетод", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыКассовыйМетод() 

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеРасчетыСПоставщиками(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОтчетПереработчика.Договор.ЭтоДоговорОбслуживания
	|				И ОтчетПереработчика.Договор.ДоговорОбслуживанияНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиУчетРасходовПоДоговорамОбслуживания,
	|	ОтчетПереработчика.Договор.ДоговорОбслуживанияНаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.ОтчетПереработчика КАК ОтчетПереработчика
	|ГДЕ
	|	ОтчетПереработчика.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетПереработчикаЗатраты.Дата КАК Период,
	|	1 КАК НомерСтроки,
	|	&Организация КАК Организация,
	|	ОтчетПереработчикаЗатраты.Контрагент КАК Контрагент,
	|	ОтчетПереработчикаЗатраты.Контрагент.ВестиРасчетыПоДоговорам КАК ВестиРасчетыПоДоговорам,
	|	ОтчетПереработчикаЗатраты.Контрагент.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ОтчетПереработчикаЗатраты.Контрагент.ВестиРасчетыПоЗаказам КАК ВестиРасчетыПоЗаказам,
	|	ОтчетПереработчикаЗатраты.Контрагент.ВестиУчетОплатыПоСчетам КАК ВестиУчетОплатыПоСчетам,
	|	ОтчетПереработчикаЗатраты.Контрагент.СчетУчетаРасчетовСПоставщиком КАК СчетУчетаРасчетовСПоставщиком,
	|	ОтчетПереработчикаЗатраты.Договор КАК Договор,
	|	ОтчетПереработчикаЗатраты.Расход.СчетУчетаЗатрат КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаШапка.ВестиУчетРасходовПоДоговорамОбслуживания
	|		ТОГДА ВременнаяТаблицаШапка.НаправлениеДеятельности
	|		ИНАЧЕ ОтчетПереработчикаЗатраты.Расход.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ОтчетПереработчикаЗатраты.Договор.ВалютаРасчетов КАК ВалютаРасчетов,
	|	&Ссылка КАК Документ,
	|	ОтчетПереработчикаЗатраты.ДокументОснование КАК Заказ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ОтчетПереработчикаЗатраты.НДСВключатьВСтоимость
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ОтчетПереработчикаЗатраты.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА ОтчетПереработчикаЗатраты.СуммаНДС * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|					ИНАЧЕ ОтчетПереработчикаЗатраты.СуммаНДС * ОтчетПереработчикаЗатраты.Ссылка.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ОтчетПереработчикаЗатраты.Ссылка.Кратность)
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ОтчетПереработчикаЗатраты.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|				ТОГДА ОтчетПереработчикаЗатраты.Всего * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ОтчетПереработчикаЗатраты.Всего * ОтчетПереработчикаЗатраты.Ссылка.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ОтчетПереработчикаЗатраты.Ссылка.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ОтчетПереработчикаЗатраты.НДСВключатьВСтоимость
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ОтчетПереработчикаЗатраты.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА ОтчетПереработчикаЗатраты.СуммаНДС * КурсыРегВалюты.Курс * ОтчетПереработчикаЗатраты.Ссылка.Кратность / (ОтчетПереработчикаЗатраты.Ссылка.Курс * КурсыРегВалюты.Кратность)
	|					ИНАЧЕ ОтчетПереработчикаЗатраты.СуммаНДС
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДСВал,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ОтчетПереработчикаЗатраты.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|				ТОГДА ОтчетПереработчикаЗатраты.Всего * КурсыРегВалюты.Курс * ОтчетПереработчикаЗатраты.Ссылка.Кратность / (ОтчетПереработчикаЗатраты.Ссылка.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ОтчетПереработчикаЗатраты.Всего
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаВал
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасыДляРасчетов
	|ИЗ
	|	Документ.ОтчетПереработчика КАК ОтчетПереработчикаЗатраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаВалютаУчета.Значение
	|					ИЗ
	|						Константа.ВалютаУчета КАК КонстантаВалютаУчета)) КАК КурсыУпрВалюты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалюты
	|		ПО (ИСТИНА),
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта,
	|	ВременнаяТаблицаШапка
	|ГДЕ
	|	ОтчетПереработчикаЗатраты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДоговорам КАК ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам КАК ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам КАК ВестиУчетОплатыПоСчетам,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПокупателем КАК СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПокупателя КАК СчетУчетаАвансовПокупателя,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПоставщиком КАК СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПоставщику КАК СчетУчетаАвансовПоставщику,
	|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
	|	ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов КАК ВалютаРасчетов,
	|	ТаблицаДокумента.Ссылка.ДокументОснование КАК Заказ,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельностиПродажи,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс) КАК ТипРасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг) КАК ТипРасчетовКуда,
	|	&Ссылка КАК ДокументКуда,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
	|				ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Документ) = ТИП(Документ.АвансовыйОтчет)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Документ) = ТИП(Документ.Взаимозачет)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|		ИНАЧЕ ТаблицаДокумента.Документ.Статья
	|	КОНЕЦ КАК Статья,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ.Дата
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Дата
	|	КОНЕЦ КАК ДокументДата,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаРасчетов * ТаблицаДокумента.Ссылка.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * ТаблицаДокумента.Ссылка.Кратность) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ТаблицаДокумента.СуммаРасчетов) КАК СуммаВал
	|ПОМЕСТИТЬ ВременнаяТаблицаПредоплата
	|ИЗ
	|	Документ.ОтчетПереработчика.Предоплата КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаВалютаУчета.Значение
	|					ИЗ
	|						Константа.ВалютаУчета КАК КонстантаВалютаУчета)) КАК КурсыВалютУчетаСрезПоследних
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.Ссылка.Дата,
	|	ТаблицаДокумента.Ссылка.Контрагент,
	|	ТаблицаДокумента.Ссылка.Договор,
	|	ТаблицаДокумента.Ссылка.ДокументОснование,
	|	ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПокупателя,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПоставщику,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
	|				ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Документ) = ТИП(Документ.АвансовыйОтчет)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Документ) = ТИП(Документ.Взаимозачет)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|		ИНАЧЕ ТаблицаДокумента.Документ.Статья
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ.Дата
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Дата
	|	КОНЕЦ,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.Дляпроведения.Организация);
	
	Запрос.ВыполнитьПакет();
	
	СформироватьТаблицаРасчетыСПоставщиками(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходы(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеРасчетыСПоставщиками()

////////////////////////////////////////////////////////////////////////////////
// ИНИЦИАЛИЗАЦИЯ ДАННЫХ

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ОтчетПереработчикаПродукция.Ссылка КАК Ссылка,
	|	ОтчетПереработчикаПродукция.КлючСвязи КАК КлючСвязи,
	|	ОтчетПереработчикаПродукция.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК КоррОрганизация,
	|	ОтчетПереработчикаПродукция.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад КАК ОрдерныйСклад,
	|	ЕСТЬNULL(ОтчетПереработчикаПродукция.Ссылка.СтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК КоррСтруктурнаяЕдиница,
	|	ОтчетПереработчикаПродукция.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
	|	ВЫБОР
	|		КОГДА &УчетПоЯчейкам
	|			ТОГДА ОтчетПереработчикаПродукция.Ссылка.Ячейка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК Ячейка,
	|	ОтчетПереработчикаПродукция.Спецификация КАК Спецификация,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК КоррСпецификация,
	|	ВЫБОР
	|		КОГДА ОтчетПереработчикаПродукция.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|			ТОГДА ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗатрат
	|	КОНЕЦ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ОтчетПереработчикаПродукция.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|			ТОГДА ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗатрат
	|	КОНЕЦ КАК СчетУчетаПродукции,
	|	ВЫБОР
	|		КОГДА ОтчетПереработчикаПродукция.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|			ТОГДА ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗатрат
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ОтчетПереработчикаПродукция.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|			ТОГДА ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗатрат
	|	КОНЕЦ КАК СчетДтПродукции,
	|	ВЫБОР
	|		КОГДА ОтчетПереработчикаПродукция.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|				ИЛИ ОтчетПереработчикаПродукция.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|				ИЛИ ОтчетПереработчикаПродукция.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|			ТОГДА ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОтчетПереработчикаПродукция.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|					ТОГДА ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗапасов
	|				ИНАЧЕ ОтчетПереработчикаПродукция.Номенклатура.СчетУчетаЗатрат
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетКтПродукции,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка) КАК КоррСчетУчета,
	|	ОтчетПереработчикаПродукция.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК КоррНоменклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ОтчетПереработчикаПродукция.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК КоррХарактеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ОтчетПереработчикаПродукция.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК КоррПартия,
	|	ОтчетПереработчикаПродукция.Ссылка.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ОтчетПереработчикаПродукция.Ссылка.ДокументОснование КАК ЗаказПоставщику,
	|	ВЫБОР
	|		КОГДА ОтчетПереработчикаПродукция.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ОтчетПереработчикаПродукция.Ссылка.ДокументОснование
	|	КОНЕЦ КАК ИсточникОбеспечения,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ОтчетПереработчикаПродукция.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ОтчетПереработчикаПродукция.Количество
	|		ИНАЧЕ ОтчетПереработчикаПродукция.Количество * ОтчетПереработчикаПродукция.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК КоррЗаказПокупателя,
	|	&СборкаЗапасов КАК СодержаниеПроводки,
	|	&ДатаОбновленияНаРелиз_1_2_1 КАК ДатаОбновленияНаРелиз_1_2_1
	|ПОМЕСТИТЬ ВременнаяТаблицаПродукция
	|ИЗ
	|	Документ.ОтчетПереработчика.Продукция КАК ОтчетПереработчикаПродукция
	|ГДЕ
	|	ОтчетПереработчикаПродукция.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК СценарийПланирования,
	|	ТаблицаЗапасы.КоррОрганизация КАК КоррОрганизация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница КАК КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.КоррСчетУчета КАК КоррСчетУчета,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.КоррНоменклатура КАК КоррНоменклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.КоррХарактеристика КАК КоррХарактеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.КоррПартия КАК КоррПартия,
	|	ТаблицаЗапасы.Спецификация КАК Спецификация,
	|	ТаблицаЗапасы.КоррСпецификация КАК КоррСпецификация,
	|	ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаЗапасы.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ТаблицаЗапасы.КоррЗаказПокупателя КАК КоррЗаказПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК Содержание,
	|	ТаблицаЗапасы.СодержаниеПроводки КАК СодержаниеПроводки,
	|	ЛОЖЬ КАК ЗатратыНаВыпуск,
	|	СУММА(ТаблицаЗапасы.Количество) КАК Количество,
	|	СУММА(ТаблицаЗапасы.Сумма) КАК Сумма,
	|	ЛОЖЬ КАК ФиксированнаяСтоимость
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаЗапасы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.КоррОрганизация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.КоррСчетУчета,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.КоррНоменклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.КоррХарактеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.КоррПартия,
	|	ТаблицаЗапасы.Спецификация,
	|	ТаблицаЗапасы.КоррСпецификация,
	|	ТаблицаЗапасы.ЗаказПокупателя,
	|	ТаблицаЗапасы.ЗаказПоставщику,
	|	ТаблицаЗапасы.КоррЗаказПокупателя,
	|	ТаблицаЗапасы.СодержаниеПроводки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыНаСкладах.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаЗапасыНаСкладах.Период КАК Период,
	|	ТаблицаЗапасыНаСкладах.Организация КАК Организация,
	|	ТаблицаЗапасыНаСкладах.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Характеристика КАК Характеристика,
	|	ТаблицаЗапасыНаСкладах.Партия КАК Партия,
	|	ТаблицаЗапасыНаСкладах.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасыНаСкладах.Ячейка КАК Ячейка,
	|	СУММА(ТаблицаЗапасыНаСкладах.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаЗапасыНаСкладах
	|ГДЕ
	|	ТаблицаЗапасыНаСкладах.Период < ТаблицаЗапасыНаСкладах.ДатаОбновленияНаРелиз_1_2_1
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасыНаСкладах.Период,
	|	ТаблицаЗапасыНаСкладах.Организация,
	|	ТаблицаЗапасыНаСкладах.Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Характеристика,
	|	ТаблицаЗапасыНаСкладах.Партия,
	|	ТаблицаЗапасыНаСкладах.СтруктурнаяЕдиница,
	|	ТаблицаЗапасыНаСкладах.Ячейка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыНаСкладах.НомерСтроки),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаЗапасыНаСкладах.Период,
	|	ТаблицаЗапасыНаСкладах.Организация,
	|	ТаблицаЗапасыНаСкладах.Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Характеристика,
	|	ТаблицаЗапасыНаСкладах.Партия,
	|	ТаблицаЗапасыНаСкладах.СтруктурнаяЕдиница,
	|	ТаблицаЗапасыНаСкладах.Ячейка,
	|	СУММА(ТаблицаЗапасыНаСкладах.Количество)
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаЗапасыНаСкладах
	|ГДЕ
	|	НЕ ТаблицаЗапасыНаСкладах.ОрдерныйСклад
	|	И ТаблицаЗапасыНаСкладах.Период >= ТаблицаЗапасыНаСкладах.ДатаОбновленияНаРелиз_1_2_1
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасыНаСкладах.Период,
	|	ТаблицаЗапасыНаСкладах.Организация,
	|	ТаблицаЗапасыНаСкладах.Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Характеристика,
	|	ТаблицаЗапасыНаСкладах.Партия,
	|	ТаблицаЗапасыНаСкладах.СтруктурнаяЕдиница,
	|	ТаблицаЗапасыНаСкладах.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗаказыПоставщикам.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗаказыПоставщикам.Период КАК Период,
	|	ТаблицаЗаказыПоставщикам.Организация КАК Организация,
	|	ТаблицаЗаказыПоставщикам.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаказыПоставщикам.Характеристика КАК Характеристика,
	|	ТаблицаЗаказыПоставщикам.ЗаказПоставщику КАК ЗаказПоставщику,
	|	СУММА(ТаблицаЗаказыПоставщикам.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаЗаказыПоставщикам
	|ГДЕ
	|	ТаблицаЗаказыПоставщикам.ЗаказПоставщику <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказыПоставщикам.Период,
	|	ТаблицаЗаказыПоставщикам.Организация,
	|	ТаблицаЗаказыПоставщикам.Номенклатура,
	|	ТаблицаЗаказыПоставщикам.Характеристика,
	|	ТаблицаЗаказыПоставщикам.ЗаказПоставщику
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаВыпускПродукции.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаВыпускПродукции.Период КАК Период,
	|	ТаблицаВыпускПродукции.Организация КАК Организация,
	|	ТаблицаВыпускПродукции.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаВыпускПродукции.Номенклатура КАК Номенклатура,
	|	ТаблицаВыпускПродукции.Характеристика КАК Характеристика,
	|	ТаблицаВыпускПродукции.Партия КАК Партия,
	|	ТаблицаВыпускПродукции.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаВыпускПродукции.Спецификация КАК Спецификация,
	|	СУММА(ТаблицаВыпускПродукции.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаВыпускПродукции
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВыпускПродукции.Период,
	|	ТаблицаВыпускПродукции.Организация,
	|	ТаблицаВыпускПродукции.СтруктурнаяЕдиница,
	|	ТаблицаВыпускПродукции.Номенклатура,
	|	ТаблицаВыпускПродукции.Характеристика,
	|	ТаблицаВыпускПродукции.Партия,
	|	ТаблицаВыпускПродукции.ЗаказПокупателя,
	|	ТаблицаВыпускПродукции.Спецификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПродукция.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаПродукция.Ссылка.Дата КАК ДатаСобытия,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийныхНомеров.Приход) КАК Операция,
	|	&Организация КАК Организация,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаПродукция.Номенклатура КАК Номенклатура,
	|	ТаблицаПродукция.Характеристика КАК Характеристика,
	|	ТаблицаПродукция.Партия КАК Партия,
	|	ТаблицаПродукция.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаПродукция.Ссылка.Ячейка КАК Ячейка,
	|	1 КАК Количество
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаПродукция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.СерийныеНомера КАК ТаблицаСерийныеНомера
	|		ПО ТаблицаПродукция.Ссылка = ТаблицаСерийныеНомера.Ссылка
	|			И ТаблицаПродукция.КлючСвязи = ТаблицаСерийныеНомера.КлючСвязи
	|ГДЕ
	|	ТаблицаПродукция.Ссылка = &Ссылка
	|	И &ИспользоватьСерийныеНомера
	|	И НЕ ТаблицаПродукция.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаПродукция.НомерСтроки) КАК КоррНомерСтроки,
	|	ТаблицаПродукция.Номенклатура КАК КоррНоменклатура,
	|	ТаблицаПродукция.Характеристика КАК КоррХарактеристика,
	|	ТаблицаПродукция.Партия КАК КоррПартия,
	|	ТаблицаПродукция.Спецификация КАК КоррСпецификация,
	|	ТаблицаПродукция.СчетУчета КАК КоррСчетУчета,
	|	ТаблицаПродукция.СчетУчетаПродукции КАК СчетУчетаПродукции,
	|	ТаблицаПродукция.СчетДт КАК СчетДт,
	|	ТаблицаПродукция.СчетДтПродукции КАК СчетДтПродукции,
	|	ТаблицаПродукция.СчетКтПродукции КАК СчетКтПродукции,
	|	СУММА(ТаблицаПродукция.Количество) КАК КоррКоличество,
	|	ЛОЖЬ КАК Распределено
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПродукция.Номенклатура,
	|	ТаблицаПродукция.Характеристика,
	|	ТаблицаПродукция.Партия,
	|	ТаблицаПродукция.Спецификация,
	|	ТаблицаПродукция.СчетУчета,
	|	ТаблицаПродукция.СчетУчетаПродукции,
	|	ТаблицаПродукция.СчетДт,
	|	ТаблицаПродукция.СчетДтПродукции,
	|	ТаблицаПродукция.СчетКтПродукции
	|
	|УПОРЯДОЧИТЬ ПО
	|	КоррНомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ИспользоватьПартии",  СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	Запрос.УстановитьПараметр("УчетПоЯчейкам",  СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	
	Запрос.УстановитьПараметр("ИспользоватьСерийныеНомера", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерийныеНомера);
	
	// Временно: изменение движений по ордерному складу.
	Запрос.УстановитьПараметр("ДатаОбновленияНаРелиз_1_2_1", Константы.ДатаОбновленияНаРелиз_1_2_1.Получить());
		
	Запрос.УстановитьПараметр("СборкаЗапасов", НСтр("ru = 'Сборка запасов'"));

	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыПродукция", МассивРезультатов[1].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыПродукция.СкопироватьКолонки());
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", МассивРезультатов[2].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗаказыПоставщикам", МассивРезультатов[3].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВыпускПродукции", МассивРезультатов[4].Выгрузить());
	
	// Серийные номера
	РезультатЗапроса5 = МассивРезультатов[5].Выгрузить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераГарантии", РезультатЗапроса5);
	Если СтруктураДополнительныеСвойства.УчетнаяПолитика.ОстаткиСерийныхНомеров Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераОстатки", РезультатЗапроса5);
	Иначе
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераОстатки", Новый ТаблицаЗначений);
	КонецЕсли; 
	
	// Формирование проводок документа.
	УправлениеНебольшойФирмойСервер.СформироватьТаблицуПроводок(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	
	// Сформируем таблицу по размещению заказов.
	СформироватьТаблицаРазмещениеЗаказов(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	
	// Сформируем таблицу распределения материалов.
	ТаблицаПродукция = МассивРезультатов[6].Выгрузить();
	СформироватьТаблицуРаспределенияМатериалов(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, ТаблицаПродукция);
	
	// Запасы.
	СуммаСборки = 0;
	ИнициализироватьДанныеПоЗапасам(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, СуммаСборки);
	
	СформироватьТаблицаЗапасыВРазрезеГТД(СтруктураДополнительныеСвойства);
	
	// Услуги.
	СуммаУслуги = 0;
	ИнициализироватьДанныеПоУслуге(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, СуммаУслуги);
	
	// Продукция.
	СуммаСборки = СуммаСборки + СуммаУслуги;
	СформироватьТаблицаЗапасыПродукция(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, СуммаСборки);
	
	// Отходы.
	ИнициализироватьДанныеПоОтходам(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	
	// Запасы к поступлению.
	СформироватьТаблицаЗапасыКПоступлениюНаСклады(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	
	// Расчеты с поставщиками.
	ИнициализироватьДанныеРасчетыСПоставщиками(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	
	СформироватьТаблицаУправленческий(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицуРаспределенияМатериалов(ДокументСсылкаОтчетПереработчика, СтруктураДополнительныеСвойства, ТаблицаПродукция) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПродукция.КоррНомерСтроки КАК КоррНомерСтроки,
	|	ТаблицаПродукция.КоррНоменклатура КАК КоррНоменклатура,
	|	ТаблицаПродукция.КоррХарактеристика КАК КоррХарактеристика,
	|	ТаблицаПродукция.КоррПартия КАК КоррПартия,
	|	ТаблицаПродукция.КоррСпецификация КАК КоррСпецификация,
	|	ТаблицаПродукция.КоррСчетУчета КАК КоррСчетУчета,
	|	ТаблицаПродукция.СчетУчетаПродукции КАК СчетУчетаПродукции,
	|	ТаблицаПродукция.СчетДт КАК СчетДт,
	|	ТаблицаПродукция.СчетДтПродукции КАК СчетДтПродукции,
	|	ТаблицаПродукция.СчетКтПродукции КАК СчетКтПродукции,
	|	ТаблицаПродукция.КоррКоличество КАК КоррКоличество
	|ПОМЕСТИТЬ ВременнаяТаблицаТЗ
	|ИЗ
	|	&ТаблицаПродукция КАК ТаблицаПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСоставПродукции.КоррНомерСтроки КАК КоррНомерСтроки,
	|	ТаблицаСоставПродукции.КоррНоменклатура КАК КоррНоменклатура,
	|	ТаблицаСоставПродукции.КоррХарактеристика КАК КоррХарактеристика,
	|	ТаблицаСоставПродукции.КоррПартия КАК КоррПартия,
	|	ТаблицаСоставПродукции.КоррСпецификация КАК КоррСпецификация,
	|	ТаблицаСоставПродукции.КоррСчетУчета КАК КоррСчетУчета,
	|	ТаблицаСоставПродукции.СчетУчетаПродукции КАК СчетУчетаПродукции,
	|	ТаблицаСоставПродукции.СчетДт КАК СчетДт,
	|	ТаблицаСоставПродукции.СчетДтПродукции КАК СчетДтПродукции,
	|	ТаблицаСоставПродукции.СчетКтПродукции КАК СчетКтПродукции,
	|	ТаблицаСоставПродукции.КоррКоличество КАК КоррКоличество,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаМатериалы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаМатериалы.Количество = 0
	|						ТОГДА 1
	|					ИНАЧЕ ТаблицаМатериалы.Количество
	|				КОНЕЦ / ТаблицаМатериалы.КоличествоПродукции * ТаблицаСоставПродукции.КоррКоличество
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаМатериалы.Количество = 0
	|					ТОГДА 1
	|				ИНАЧЕ ТаблицаМатериалы.Количество
	|			КОНЕЦ * ТаблицаМатериалы.ЕдиницаИзмерения.Коэффициент / ТаблицаМатериалы.КоличествоПродукции * ТаблицаСоставПродукции.КоррКоличество
	|	КОНЕЦ КАК ТМКоличество,
	|	ТаблицаМатериалы.ТипСтрокиСостава КАК ТМТипСтрокиСостава,
	|	ТаблицаМатериалы.Номенклатура КАК ТМНоменклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ТаблицаМатериалы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ТМХарактеристика,
	|	ТаблицаМатериалы.Спецификация КАК ТМСпецификация,
	|	ЛОЖЬ КАК Распределено
	|ИЗ
	|	ВременнаяТаблицаТЗ КАК ТаблицаСоставПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК ТаблицаМатериалы
	|		ПО ТаблицаСоставПродукции.КоррСпецификация = ТаблицаМатериалы.Ссылка
	|			И (ТаблицаМатериалы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас))
	|
	|УПОРЯДОЧИТЬ ПО
	|	КоррНомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СборкаЗапасовЗапасы.НомерСтроки КАК НомерСтроки,
	|	СборкаЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	СборкаЗапасовЗапасы.Ссылка КАК Ссылка,
	|	СборкаЗапасовЗапасы.Ссылка.ЗаказПокупателя КАК КоррЗаказПокупателя,
	|	СборкаЗапасовЗапасы.Ссылка.ДокументОснование КАК ДокументОснование,
	|	СборкаЗапасовЗапасы.Ссылка.Контрагент КАК Контрагент,
	|	СборкаЗапасовЗапасы.Ссылка.Договор КАК Договор,
	|	СборкаЗапасовЗапасы.Ссылка.Курс КАК Курс,
	|	СборкаЗапасовЗапасы.Ссылка.Кратность КАК Кратность,
	|	СборкаЗапасовЗапасы.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	
	|	СборкаЗапасовЗапасы.Ссылка.Дата КАК Период,
	|	СборкаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СборкаЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
	|	СборкаЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СборкаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад КАК ОрдерныйСклад,
	|	ВЫБОР
	|		КОГДА &УчетПоЯчейкам
	|			ТОГДА СборкаЗапасовЗапасы.Ссылка.Ячейка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК Ячейка,
	|	ВЫБОР
	|		КОГДА СборкаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница = СборкаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|		ИНАЧЕ СборкаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница
	|	КОНЕЦ КАК СтруктурнаяЕдиницаЗапасов,
	|	СборкаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаЗапасовНаСклад,
	|	СборкаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад КАК ОрдерныйСкладЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК СтруктурнаяЕдиницаПродукции,
	|	СборкаЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА СборкаЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|				ИЛИ СборкаЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|				ИЛИ СборкаЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|			ТОГДА СборкаЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СборкаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|					ТОГДА СборкаЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|				ИНАЧЕ СборкаЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетУчетаЗапасов,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка) КАК КоррСчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка) КАК СчетУчетаПродукции,
	|	СборкаЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	СборкаЗапасовЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СборкаЗапасовЗапасы.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК КоррНоменклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СборкаЗапасовЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК КоррХарактеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА СборкаЗапасовЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА СборкаЗапасовЗапасы.Партия.Статус
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ПустаяСсылка)
	|	КОНЕЦ КАК ПартияСтатус,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК КоррПартия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК КоррСпецификация,
	|	СборкаЗапасовЗапасы.Спецификация КАК Спецификация,
	|	СборкаЗапасовЗапасы.Ссылка.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СборкаЗапасовЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА СборкаЗапасовЗапасы.Количество
	|		ИНАЧЕ СборкаЗапасовЗапасы.Количество * СборкаЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	СборкаЗапасовЗапасы.Всего КАК Всего,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СборкаЗапасовЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА СборкаЗапасовЗапасы.Количество
	|		ИНАЧЕ СборкаЗапасовЗапасы.Количество * СборкаЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК ИсходноеКоличество,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка) КАК СчетДтПродукции,
	|	ВЫБОР
	|		КОГДА СборкаЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|				ИЛИ СборкаЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|				ИЛИ СборкаЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|			ТОГДА СборкаЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СборкаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|					ТОГДА СборкаЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|				ИНАЧЕ СборкаЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка) КАК СчетКтПродукции,
	|	ЛОЖЬ КАК Распределено
	|ИЗ
	|	Документ.ОтчетПереработчика.Запасы КАК СборкаЗапасовЗапасы
	|ГДЕ
	|	СборкаЗапасовЗапасы.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ТаблицаПродукция", ТаблицаПродукция);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетПереработчика);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаСоставПродукции = МассивРезультатов[1].Выгрузить();
	ТаблицаМатериалов = МассивРезультатов[2].Выгрузить();
	
	КоличествоПродукции = ТаблицаСоставПродукции.Количество();
	Инд = 0;
	Пока Инд < КоличествоПродукции Цикл
		СтрокаПродукции = ТаблицаСоставПродукции[Инд];
		Если СтрокаПродукции.ТМТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел Тогда
			СтекСпецификацийУзлов = Новый Массив();
			ЗаполнитьТаблицуПродукцииСоставомУзлов(СтрокаПродукции, ТаблицаСоставПродукции, СтекСпецификацийУзлов);
			ТаблицаСоставПродукции.Удалить(СтрокаПродукции);
			Если Инд + 1 = КоличествоПродукции Тогда
				Прервать;
			КонецЕсли;
		Иначе
			Инд = Инд + 1;
		КонецЕсли;
	КонецЦикла;
	ТаблицаСоставПродукции.Свернуть("КоррНоменклатура,КоррХарактеристика,КоррПартия,КоррСпецификация,КоррСчетУчета,СчетУчетаПродукции,СчетДт,СчетДтПродукции,СчетКтПродукции,КоррКоличество,ТМНоменклатура,ТМХарактеристика,Распределено", "ТМКоличество");
	ТаблицаСоставПродукции.Индексы.Добавить("ТМНоменклатура,ТМХарактеристика");
	
	РаспределеноМатериалов = 0;
	КоличествоПродукции = ТаблицаСоставПродукции.Количество();
	КоличествоМатериалов = ТаблицаМатериалов.Количество();
	Для н = 0 По КоличествоМатериалов - 1 Цикл
		
		СтрокаМатериалы = ТаблицаМатериалов[н];
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ТМНоменклатура", СтрокаМатериалы.Номенклатура);
		СтруктураПоиска.Вставить("ТМХарактеристика", СтрокаМатериалы.Характеристика);
		
		РезультатПоиска = ТаблицаСоставПродукции.НайтиСтроки(СтруктураПоиска);
		Если РезультатПоиска.Количество() <> 0 Тогда
			РаспределитьМатериалыПоНормативам(СтрокаМатериалы, РезультатПоиска, ТаблицаМатериалов);
			РаспределеноМатериалов = РаспределеноМатериалов + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	РаспределеноПродукции = 0;
	Для каждого СтрокаСоставПродукции Из ТаблицаСоставПродукции Цикл
		Если СтрокаСоставПродукции.Распределено Тогда
			РаспределеноПродукции = РаспределеноПродукции + 1;
		КонецЕсли;
	КонецЦикла;
	
	Если РаспределеноМатериалов < КоличествоМатериалов Тогда
		Если РаспределеноПродукции = КоличествоПродукции Тогда
			БазаРаспределения = ТаблицаПродукция.Итог("КоррКоличество");
			РаспределитьМатериалыПоКоличеству(ТаблицаПродукция, ТаблицаМатериалов, БазаРаспределения);
		Иначе
			РаспределитьМатериалыПоКоличеству(ТаблицаСоставПродукции, ТаблицаМатериалов);
		КонецЕсли;
	КонецЕсли;
	
	Для каждого стр Из ТаблицаМатериалов Цикл
		стр.Всего = стр.Всего*стр.Количество/стр.ИсходноеКоличество;
	КонецЦикла;
	
	ТаблицаПродукция = Неопределено;
	ТаблицаСоставПродукции = Неопределено;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРаспределенияМатериаловСборка", ТаблицаМатериалов);
	ТаблицаМатериалов = Неопределено;
	
КонецПроцедуры // СформироватьТаблицуРаспределенияМатериалов()

// Процедура распределяет материалы по спецификациям продукции.
//
Процедура РаспределитьМатериалыПоНормативам(СтрокаМатериалы, БазоваяТаблица, ТаблицаМатериалов)
	
	СтрокаМатериалы.Распределено = Истина;
	
	БазаРаспределения = 0;
	Для каждого СтрокаБазы Из БазоваяТаблица Цикл
		БазаРаспределения = БазаРаспределения + СтрокаБазы.ТМКоличество;
		СтрокаБазы.Распределено = Истина;
	КонецЦикла;
	
	РаспределитьСтрокуТабличнойЧастиМатериалы(СтрокаМатериалы, БазоваяТаблица, ТаблицаМатериалов, БазаРаспределения, Истина);
	
КонецПроцедуры // РаспределитьМатериалыПоНормативам()

// Процедура распределяет материалы пропорционально количеству продукции.
//
Процедура РаспределитьМатериалыПоКоличеству(БазоваяТаблица, ТаблицаМатериалов, БазаРаспределения = 0)
	
	ИсклРаспределено = Ложь;
	Если БазаРаспределения = 0 Тогда
		ИсклРаспределено = Истина;
		Для каждого СтрокаБазы Из БазоваяТаблица Цикл
			Если НЕ СтрокаБазы.Распределено Тогда
				БазаРаспределения = БазаРаспределения + СтрокаБазы.КоррКоличество;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для н = 0 По ТаблицаМатериалов.Количество() - 1 Цикл
		
		СтрокаМатериалы = ТаблицаМатериалов[н];
		
		Если НЕ СтрокаМатериалы.Распределено Тогда
			РаспределитьСтрокуТабличнойЧастиМатериалы(СтрокаМатериалы, БазоваяТаблица, ТаблицаМатериалов, БазаРаспределения, Ложь, ИсклРаспределено);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // РаспределитьМатериалыПоКоличеству()

// Процедура распределяет строку материалов.
//
Процедура РаспределитьСтрокуТабличнойЧастиМатериалы(СтрокаМатериалы, БазоваяТаблица, ТаблицаМатериалов, БазаРаспределения, ПоНормативам, ИсклРаспределено = Ложь)
	
	ИсхКоличество = 0;
	КоличествоКСписанию = СтрокаМатериалы.Количество;
	БазаРаспределенияКоличество = БазаРаспределения;
	
	Для каждого СтрокаБазовойТаблицы Из БазоваяТаблица Цикл
		
		Если ИсклРаспределено И СтрокаБазовойТаблицы.Распределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИсхКоличество = КоличествоКСписанию Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаМатериалы.КоррНоменклатура) Тогда
			НоваяСтрока = ТаблицаМатериалов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМатериалы);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаБазовойТаблицы);
			СтрокаМатериалы = НоваяСтрока;
		Иначе
			ЗаполнитьЗначенияСвойств(СтрокаМатериалы, СтрокаБазовойТаблицы);
		КонецЕсли;
		
		Если ПоНормативам Тогда
			КоличествоБазовойТаблицы = СтрокаБазовойТаблицы.ТМКоличество;
		Иначе
			КоличествоБазовойТаблицы = СтрокаБазовойТаблицы.КоррКоличество
		КонецЕсли;
		
		// Количество.
		СтрокаМатериалы.Количество = Окр((КоличествоКСписанию - ИсхКоличество) * КоличествоБазовойТаблицы / БазаРаспределенияКоличество, 3, 1);
		
		Если (ИсхКоличество + СтрокаМатериалы.Количество) > КоличествоКСписанию Тогда
			СтрокаМатериалы.Количество = КоличествоКСписанию - ИсхКоличество;
			ИсхКоличество = КоличествоКСписанию;
		Иначе
			БазаРаспределенияКоличество = БазаРаспределенияКоличество - КоличествоБазовойТаблицы;
			ИсхКоличество = ИсхКоличество + СтрокаМатериалы.Количество;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ИсхКоличество < КоличествоКСписанию Тогда
		СтрокаМатериалы.Количество = СтрокаМатериалы.Количество + (КоличествоКСписанию - ИсхКоличество);
	КонецЕсли;
	
КонецПроцедуры // РаспределитьСтрокуТабличнойЧастиМатериалы()

// Процедура формирует состав узлов.
//
Процедура ЗаполнитьТаблицуПродукцииСоставомУзлов(СтрокаПродукция, ТаблицаПродукция, СтекСпецификацийУзлов)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаМатериалы.НомерСтроки) КАК НомерСтрокиСостава,
	|	ТаблицаМатериалы.ТипСтрокиСостава КАК ТипСтрокиСостава,
	|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ИспользоватьХарактеристики.Значение
	|			ТОГДА ТаблицаМатериалы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	СУММА(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТаблицаМатериалы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА ТаблицаМатериалы.Количество / ТаблицаМатериалы.КоличествоПродукции * &КоличествоПродукции
	|			ИНАЧЕ ТаблицаМатериалы.Количество * ТаблицаМатериалы.ЕдиницаИзмерения.Коэффициент / ТаблицаМатериалы.КоличествоПродукции * &КоличествоПродукции
	|		КОНЕЦ) КАК НормаРасхода,
	|	ТаблицаМатериалы.Спецификация КАК Спецификация
	|ИЗ
	|	Справочник.Спецификации.Состав КАК ТаблицаМатериалы,
	|	Константа.ФункциональнаяОпцияИспользоватьХарактеристики КАК ИспользоватьХарактеристики
	|ГДЕ
	|	ТаблицаМатериалы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|	И ТаблицаМатериалы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаМатериалы.ТипСтрокиСостава,
	|	ТаблицаМатериалы.Номенклатура,
	|	ТаблицаМатериалы.ДоляСтоимости,
	|	ТаблицаМатериалы.Спецификация,
	|	ВЫБОР
	|		КОГДА ИспользоватьХарактеристики.Значение
	|			ТОГДА ТаблицаМатериалы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСостава";
	
	Запрос.УстановитьПараметр("Ссылка", СтрокаПродукция.ТМСпецификация);
	Запрос.УстановитьПараметр("КоличествоПродукции", СтрокаПродукция.ТМКоличество);
	
	СтекСпецификацийУзлов.Добавить(СтрокаПродукция.ТМСпецификация);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел Тогда
			Если НЕ СтекСпецификацийУзлов.Найти(Выборка.Спецификация) = Неопределено Тогда
				ТекстСообщения = НСтр("ru = 'Обнаружено рекурсивное вхождение элемента'")+" "+Выборка.Номенклатура+" "+НСтр("ru = 'в спецификации'")+" "+СтрокаПродукция.КоррСпецификация+"
									|Операция не выполнена!";
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
			СтекСпецификацийУзлов.Добавить(Выборка.Спецификация);
			СтрокаПродукция.ТМКоличество = Выборка.НормаРасхода;
			СтрокаПродукция.ТМСпецификация = Выборка.Спецификация;
			ЗаполнитьТаблицуПродукцииСоставомУзлов(СтрокаПродукция, ТаблицаПродукция, СтекСпецификацийУзлов);
		Иначе
			НоваяСтрока = ТаблицаПродукция.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПродукция);
			НоваяСтрока.ТМТипСтрокиСостава = Выборка.ТипСтрокиСостава;
			НоваяСтрока.ТМНоменклатура = Выборка.Номенклатура;
			НоваяСтрока.ТМХарактеристика = Выборка.Характеристика;
			НоваяСтрока.ТМКоличество = Выборка.НормаРасхода;
			НоваяСтрока.ТМСпецификация = Выборка.Спецификация;
		КонецЕсли;
	КонецЦикла;
	
	СтекСпецификацийУзлов.Очистить();
	
КонецПроцедуры // ЗаполнитьТаблицуПродукцииСоставомУзлов()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаОтчетПереработчика, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если Не УправлениеНебольшойФирмойСервер.ВыполнитьКонтрольОстатков() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы "ДвиженияЗапасыИзменение", "ДвиженияЗапасыНаСкладахИзменение", 
	// "ДвиженияЗапасыПереданныеИзменение", "ДвиженияЗаказыПоставщикамИзменение", 
	// "ДвиженияРазмещениеЗаказовИзменение", содержат записи, необходимо выполнить контроль 
	// реализации товаров.
	Если СтруктураВременныеТаблицы.ДвиженияЗапасыИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыНаСкладахИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыПереданныеИзменение 
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗаказыПоставщикамИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияРазмещениеЗаказовИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыСПоставщикамиИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыСПоставщикамиИзменение
		Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыНаСкладахИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Ячейка) КАК ЯчейкаПредставление,
		|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыНаСкладахИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия, Ячейка) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыНаСкладахИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыНаСкладахИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК Ячейка
		|					ИЗ
		|						ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение)) КАК ЗапасыНаСкладахОстатки
		|		ПО ДвиженияЗапасыНаСкладахИзменение.Организация = ЗапасыНаСкладахОстатки.Организация
		|			И ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыНаСкладахИзменение.Номенклатура = ЗапасыНаСкладахОстатки.Номенклатура
		|			И ДвиженияЗапасыНаСкладахИзменение.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
		|			И ДвиженияЗапасыНаСкладахИзменение.Партия = ЗапасыНаСкладахОстатки.Партия
		|			И ДвиженияЗапасыНаСкладахИзменение.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.СчетУчета) КАК СчетУчетаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.ЗаказПокупателя) КАК ЗаказПокупателяПредставление,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.СуммаОстаток, 0) КАК СуммаОстатокЗапасы
		|ИЗ
		|	ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыИзменение.СчетУчета КАК СчетУчета,
		|						ДвиженияЗапасыИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыИзменение.ЗаказПокупателя КАК ЗаказПокупателя
		|					ИЗ
		|						ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение)) КАК ЗапасыОстатки
		|		ПО ДвиженияЗапасыИзменение.Организация = ЗапасыОстатки.Организация
		|			И ДвиженияЗапасыИзменение.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыИзменение.СчетУчета = ЗапасыОстатки.СчетУчета
		|			И ДвиженияЗапасыИзменение.Номенклатура = ЗапасыОстатки.Номенклатура
		|			И ДвиженияЗапасыИзменение.Характеристика = ЗапасыОстатки.Характеристика
		|			И ДвиженияЗапасыИзменение.Партия = ЗапасыОстатки.Партия
		|			И ДвиженияЗапасыИзменение.ЗаказПокупателя = ЗапасыОстатки.ЗаказПокупателя
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыПереданныеИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыПереданныеИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыПереданныеИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыПереданныеИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыПереданныеИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыПереданныеИзменение.Контрагент) КАК КонтрагентПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыПереданныеИзменение.Договор) КАК ДоговорПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыПереданныеИзменение.Заказ) КАК ЗаказПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыПереданныеИзменение.ТипПриемаПередачи) КАК ТипПриемаПередачиПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыПереданныеОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыПереданныеИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыПереданныеОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыПереданные,
		|	ЕСТЬNULL(ЗапасыПереданныеОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыПереданные,
		|	ЕСТЬNULL(ДвиженияЗапасыПереданныеИзменение.СуммаРасчетовИзменение, 0) + ЕСТЬNULL(ЗапасыПереданныеОстатки.СуммаРасчетовОстаток, 0) КАК СуммаРасчетовЗапасыПереданные,
		|	ЕСТЬNULL(ЗапасыПереданныеОстатки.СуммаРасчетовОстаток, 0) КАК СуммаРасчетовОстатокЗапасыПереданные
		|ИЗ
		|	ДвиженияЗапасыПереданныеИзменение КАК ДвиженияЗапасыПереданныеИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыПереданные.Остатки(
		|				&МоментКонтроля,
		|				(Организация, Номенклатура, Характеристика, Партия, Контрагент, Договор, Заказ, ТипПриемаПередачи) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыПереданныеИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыПереданныеИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыПереданныеИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыПереданныеИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыПереданныеИзменение.Контрагент КАК Контрагент,
		|						ДвиженияЗапасыПереданныеИзменение.Договор КАК Договор,
		|						ДвиженияЗапасыПереданныеИзменение.Заказ КАК Заказ,
		|						ДвиженияЗапасыПереданныеИзменение.ТипПриемаПередачи КАК ТипПриемаПередачи
		|					ИЗ
		|						ДвиженияЗапасыПереданныеИзменение КАК ДвиженияЗапасыПереданныеИзменение)) КАК ЗапасыПереданныеОстатки
		|		ПО ДвиженияЗапасыПереданныеИзменение.Организация = ЗапасыПереданныеОстатки.Организация
		|			И ДвиженияЗапасыПереданныеИзменение.Номенклатура = ЗапасыПереданныеОстатки.Номенклатура
		|			И ДвиженияЗапасыПереданныеИзменение.Характеристика = ЗапасыПереданныеОстатки.Характеристика
		|			И ДвиженияЗапасыПереданныеИзменение.Партия = ЗапасыПереданныеОстатки.Партия
		|			И ДвиженияЗапасыПереданныеИзменение.Контрагент = ЗапасыПереданныеОстатки.Контрагент
		|			И ДвиженияЗапасыПереданныеИзменение.Договор = ЗапасыПереданныеОстатки.Договор
		|			И ДвиженияЗапасыПереданныеИзменение.Заказ = ЗапасыПереданныеОстатки.Заказ
		|			И ДвиженияЗапасыПереданныеИзменение.ТипПриемаПередачи = ЗапасыПереданныеОстатки.ТипПриемаПередачи
		|ГДЕ
		|	(ЕСТЬNULL(ЗапасыПереданныеОстатки.КоличествоОстаток, 0) < 0
		|			ИЛИ ЕСТЬNULL(ЗапасыПереданныеОстатки.СуммаРасчетовОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗаказыПоставщикамИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗаказыПоставщикамИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗаказыПоставщикамИзменение.ЗаказПоставщику) КАК ЗаказПоставщикуПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗаказыПоставщикамИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗаказыПоставщикамИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗаказыПоставщикамОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗаказыПоставщикамИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) КАК ОстатокЗаказыПоставщикам,
		|	ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗаказыПоставщикам
		|ИЗ
		|	ДвиженияЗаказыПоставщикамИзменение КАК ДвиженияЗаказыПоставщикамИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|				&МоментКонтроля,
		|				(Организация, ЗаказПоставщику, Номенклатура, Характеристика) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗаказыПоставщикамИзменение.Организация КАК Организация,
		|						ДвиженияЗаказыПоставщикамИзменение.ЗаказПоставщику КАК ЗаказПоставщику,
		|						ДвиженияЗаказыПоставщикамИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗаказыПоставщикамИзменение.Характеристика КАК Характеристика
		|					ИЗ
		|						ДвиженияЗаказыПоставщикамИзменение КАК ДвиженияЗаказыПоставщикамИзменение)) КАК ЗаказыПоставщикамОстатки
		|		ПО ДвиженияЗаказыПоставщикамИзменение.Организация = ЗаказыПоставщикамОстатки.Организация
		|			И ДвиженияЗаказыПоставщикамИзменение.ЗаказПоставщику = ЗаказыПоставщикамОстатки.ЗаказПоставщику
		|			И ДвиженияЗаказыПоставщикамИзменение.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
		|			И ДвиженияЗаказыПоставщикамИзменение.Характеристика = ЗаказыПоставщикамОстатки.Характеристика
		|ГДЕ
		|	ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРазмещениеЗаказовИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРазмещениеЗаказовИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРазмещениеЗаказовИзменение.ЗаказПокупателя) КАК ЗаказПокупателяПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРазмещениеЗаказовИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРазмещениеЗаказовИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРазмещениеЗаказовИзменение.ИсточникОбеспечения) КАК ИсточникОбеспеченияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(РазмещениеЗаказовОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияРазмещениеЗаказовИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) КАК ОстатокРазмещениеЗаказов,
		|	ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокРазмещениеЗаказов
		|ИЗ
		|	ДвиженияРазмещениеЗаказовИзменение КАК ДвиженияРазмещениеЗаказовИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
		|				&МоментКонтроля,
		|				(Организация, ЗаказПокупателя, Номенклатура, Характеристика, ИсточникОбеспечения) В
		|					(ВЫБРАТЬ
		|						ДвиженияРазмещениеЗаказовИзменение.Организация КАК Организация,
		|						ДвиженияРазмещениеЗаказовИзменение.ЗаказПокупателя КАК ЗаказПокупателя,
		|						ДвиженияРазмещениеЗаказовИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияРазмещениеЗаказовИзменение.Характеристика КАК Характеристика,
		|						ДвиженияРазмещениеЗаказовИзменение.ИсточникОбеспечения КАК ИсточникОбеспечения
		|					ИЗ
		|						ДвиженияРазмещениеЗаказовИзменение КАК ДвиженияРазмещениеЗаказовИзменение)) КАК РазмещениеЗаказовОстатки
		|		ПО ДвиженияРазмещениеЗаказовИзменение.Организация = РазмещениеЗаказовОстатки.Организация
		|			И ДвиженияРазмещениеЗаказовИзменение.ЗаказПокупателя = РазмещениеЗаказовОстатки.ЗаказПокупателя
		|			И ДвиженияРазмещениеЗаказовИзменение.Номенклатура = РазмещениеЗаказовОстатки.Номенклатура
		|			И ДвиженияРазмещениеЗаказовИзменение.Характеристика = РазмещениеЗаказовОстатки.Характеристика
		|			И ДвиженияРазмещениеЗаказовИзменение.ИсточникОбеспечения = РазмещениеЗаказовОстатки.ИсточникОбеспечения
		|ГДЕ
		|	ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыСПоставщикамиИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Контрагент) КАК КонтрагентПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Договор) КАК ДоговорПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Договор.ВалютаРасчетов) КАК ВалютаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Документ) КАК ДокументПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.Заказ) КАК ЗаказПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов) КАК ТипРасчетовПредставление,
		|	ЛОЖЬ КАК ДвиженияДенежныхДокументов,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалПриЗаписи - ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) КАК СуммаВыданныхАвансов,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) КАК СуммаНепогашеннойЗадолженности,
		|	ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов КАК ТипРасчетов
		|ИЗ
		|	ДвиженияРасчетыСПоставщикамиИзменение КАК ДвиженияРасчетыСПоставщикамиИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщиками.Остатки(
		|				&МоментКонтроля,
		|				(Организация, Контрагент, Договор, Документ, Заказ, ТипРасчетов) В
		|					(ВЫБРАТЬ
		|						ДвиженияРасчетыСПоставщикамиИзменение.Организация КАК Организация,
		|						ДвиженияРасчетыСПоставщикамиИзменение.Контрагент КАК Контрагент,
		|						ДвиженияРасчетыСПоставщикамиИзменение.Договор КАК Договор,
		|						ДвиженияРасчетыСПоставщикамиИзменение.Документ КАК Документ,
		|						ДвиженияРасчетыСПоставщикамиИзменение.Заказ КАК Заказ,
		|						ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов КАК ТипРасчетов
		|					ИЗ
		|						ДвиженияРасчетыСПоставщикамиИзменение КАК ДвиженияРасчетыСПоставщикамиИзменение)) КАК РасчетыСПоставщикамиОстатки
		|		ПО ДвиженияРасчетыСПоставщикамиИзменение.Организация = РасчетыСПоставщикамиОстатки.Организация
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Контрагент = РасчетыСПоставщикамиОстатки.Контрагент
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Договор = РасчетыСПоставщикамиОстатки.Договор
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Документ = РасчетыСПоставщикамиОстатки.Документ
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Заказ = РасчетыСПоставщикамиОстатки.Заказ
		|			И ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов = РасчетыСПоставщикамиОстатки.ТипРасчетов
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
		|				ТОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) > 0
		|			ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) < 0
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыВРазрезеГТДИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД) КАК НомерГТДПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения) КАК СтранаПроисхожденияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыВРазрезеГТДОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыВРазрезеГТДИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыВРазрезеГТД,
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыВРазрезеГТД
		|ИЗ
		|	ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Остатки(
		|				&МоментКонтроля,
		|				(Организация, НомерГТД, Номенклатура, Характеристика, Партия, СтранаПроисхождения) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД КАК НомерГТД,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения КАК СтранаПроисхождения
		|					ИЗ
		|						ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение)) КАК ЗапасыВРазрезеГТДОстатки
		|		ПО ДвиженияЗапасыВРазрезеГТДИзменение.Организация = ЗапасыВРазрезеГТДОстатки.Организация
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД = ЗапасыВРазрезеГТДОстатки.НомерГТД
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура = ЗапасыВРазрезеГТДОстатки.Номенклатура
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика = ЗапасыВРазрезеГТДОстатки.Характеристика
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Партия = ЗапасыВРазрезеГТДОстатки.Партия
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения = ЗапасыВРазрезеГТДОстатки.СтранаПроисхождения
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой()
			ИЛИ НЕ МассивРезультатов[1].Пустой()
			ИЛИ НЕ МассивРезультатов[2].Пустой()
			ИЛИ НЕ МассивРезультатов[3].Пустой()
			ИЛИ НЕ МассивРезультатов[4].Пустой()
			ИЛИ НЕ МассивРезультатов[5].Пустой()
			ИЛИ НЕ МассивРезультатов[6].Пустой()
			Тогда
			
			ДокументОбъектОтчетПереработчика = ДокументСсылкаОтчетПереработчика.ПолучитьОбъект();
			
		КонецЕсли;
		
		// Отрицательный остаток запасов на складе.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасыНаСкладах(ДокументОбъектОтчетПереработчика, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток учета запасов.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасы(ДокументОбъектОтчетПереработчика, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток запасов переданных.
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасыПереданные(ДокументОбъектОтчетПереработчика, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по заказу поставщику.
		Если НЕ МассивРезультатов[3].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗаказыПоставщикам(ДокументОбъектОтчетПереработчика, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по размещению запасов.
		Если НЕ МассивРезультатов[4].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструРазмещениеЗаказов(ДокументОбъектОтчетПереработчика, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по расчетам с поставщиками.
		Если НЕ МассивРезультатов[5].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[5].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструРасчетыСПоставщиками(ДокументОбъектОтчетПереработчика, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по остаткам запасов в разрезе номеров ГТД.
		Если Константы.КонтролироватьОстаткиПоНомерамГТД.Получить()
			И НЕ МассивРезультатов[6].Пустой() Тогда
			
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[6].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасыВРазрезеГТД(ДокументОбъектОтчетПереработчика, ВыборкаИзРезультатаЗапроса, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

Процедура СформироватьТаблицаЗапасыВРазрезеГТД(СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыНаСкладах.НомерСтроки) КАК НомерСтроки
	|	,ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|	,ТаблицаЗапасыНаСкладах.Период КАК Период
	|	,ТаблицаЗапасыНаСкладах.Организация КАК Организация
	|	,ТаблицаЗапасыНаСкладах.Номенклатура КАК Номенклатура
	|	,ТаблицаЗапасыНаСкладах.Характеристика КАК Характеристика
	|	,ТаблицаЗапасыНаСкладах.Партия КАК Партия
	|	,ТаблицаЗапасыНаСкладах.НомерГТД КАК НомерГТД
	|	,ТаблицаЗапасыНаСкладах.СтранаПроисхождения КАК СтранаПроисхождения
	|	,СУММА(ТаблицаЗапасыНаСкладах.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасыНаСкладах
	|ГДЕ
	|	ТаблицаЗапасыНаСкладах.СтранаПроисхождения <> Значение(Справочник.СтраныМира.Россия)
	|	И ТаблицаЗапасыНаСкладах.СтранаПроисхождения <> Значение(Справочник.СтраныМира.ПустаяССылка)
	|	И ТаблицаЗапасыНаСкладах.НомерГТД <> Значение(Справочник.НомераГТД.ПустаяССылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасыНаСкладах.Период
	|	,ТаблицаЗапасыНаСкладах.Организация
	|	,ТаблицаЗапасыНаСкладах.Номенклатура
	|	,ТаблицаЗапасыНаСкладах.Характеристика
	|	,ТаблицаЗапасыНаСкладах.Партия
	|	,ТаблицаЗапасыНаСкладах.НомерГТД
	|	,ТаблицаЗапасыНаСкладах.СтранаПроисхождения";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыВРазрезеГТД", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли