#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаВА);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	&Ссылка КАК Документ,
	|	&Организация КАК Организация,
	|	ПараметрыВнеоборотныхАктивовСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПараметрыВнеоборотныхАктивовСрезПоследних.СчетЗатрат КАК СчетУчетаАмортизации,
	|	ПараметрыВнеоборотныхАктивовСрезПоследних.СчетЗатрат.ТипСчета КАК ТипСчетаАмортизации,
	|	ПараметрыВнеоборотныхАктивовСрезПоследних.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельностиПродажи,
	|	ТаблицаДокумента.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ТаблицаДокумента.ВнеоборотныйАктив.СчетУчета КАК СчетУчета,
	|	ТаблицаДокумента.ВнеоборотныйАктив.СчетАмортизации КАК СчетАмортизации,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДоговорам КАК ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам КАК ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам КАК ВестиУчетОплатыПоСчетам,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПокупателем КАК СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
	|	ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов КАК ВалютаРасчетов,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.Стоимость КАК Стоимость,
	|	ТаблицаДокумента.Амортизация КАК Амортизация,
	|	ТаблицаДокумента.АмортизацияЗаМесяц КАК АмортизацияЗаМесяц,
	|	ТаблицаДокумента.ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаДокумента.Ссылка.НДСВключатьВСтоимость
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА ТаблицаДокумента.СуммаНДС * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|					ИНАЧЕ ТаблицаДокумента.СуммаНДС * ТаблицаДокумента.Ссылка.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ТаблицаДокумента.Ссылка.Кратность)
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|				ТОГДА ТаблицаДокумента.Всего * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ТаблицаДокумента.Всего * ТаблицаДокумента.Ссылка.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ТаблицаДокумента.Ссылка.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|				ТОГДА ТаблицаДокумента.Всего * КурсыРегВалюты.Курс * ТаблицаДокумента.Ссылка.Кратность / (ТаблицаДокумента.Ссылка.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ТаблицаДокумента.Всего
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаВал,
	|	ИСТИНА КАК ФиксированнаяСтоимость
	|ПОМЕСТИТЬ ВременнаяТаблицаВнеоборотныеАктивы
	|ИЗ
	|	Документ.ПередачаВА.ВнеоборотныеАктивы КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыВнеоборотныхАктивов.СрезПоследних(&МоментВремени, ) КАК ПараметрыВнеоборотныхАктивовСрезПоследних
	|		ПО (&Организация = ПараметрыВнеоборотныхАктивовСрезПоследних.Организация)
	|			И ТаблицаДокумента.ВнеоборотныйАктив = ПараметрыВнеоборотныхАктивовСрезПоследних.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаВалютаУчета.Значение
	|					ИЗ
	|						Константа.ВалютаУчета КАК КонстантаВалютаУчета)) КАК КурсыУпрВалюты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалюты
	|		ПО (ИСТИНА),
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДоговорам КАК ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам КАК ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам КАК ВестиУчетОплатыПоСчетам,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПокупателем КАК СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПокупателя КАК СчетУчетаАвансовПокупателя,
	|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
	|	ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов КАК ВалютаРасчетов,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК Заказ,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельностиПродажи,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс) КАК ТипРасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг) КАК ТипРасчетовКуда,
	|	&Ссылка КАК ДокументКуда,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
	|				ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Документ) = ТИП(Документ.Взаимозачет)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|		ИНАЧЕ ТаблицаДокумента.Документ.Статья
	|	КОНЕЦ КАК Статья,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ.Дата
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Дата
	|	КОНЕЦ КАК ДокументДата,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаРасчетов * ТаблицаДокумента.Ссылка.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * ТаблицаДокумента.Ссылка.Кратность) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ТаблицаДокумента.СуммаРасчетов) КАК СуммаВал,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Документ) = ТИП(Документ.ОперацияПоПлатежнымКартам)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоЭквайринговаяОперация,
	|	ТаблицаДокумента.Документ.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	НАЧАЛОПЕРИОДА(ТаблицаДокумента.Документ.Дата, ДЕНЬ) КАК ДатаПлатежа
	|ПОМЕСТИТЬ ВременнаяТаблицаПредоплата
	|ИЗ
	|	Документ.ПередачаВА.Предоплата КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаВалютаУчета.Значение
	|					ИЗ
	|						Константа.ВалютаУчета КАК КонстантаВалютаУчета)) КАК КурсыВалютУчетаСрезПоследних
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.Ссылка.Дата,
	|	ТаблицаДокумента.Ссылка.Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПокупателя,
	|	ТаблицаДокумента.Ссылка.Договор,
	|	ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
	|				ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Документ) = ТИП(Документ.Взаимозачет)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|		ИНАЧЕ ТаблицаДокумента.Документ.Статья
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ.Дата
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Дата
	|	КОНЕЦ,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам,
	|	ТаблицаДокумента.Документ.ЭквайринговыйТерминал,
	|	НАЧАЛОПЕРИОДА(ТаблицаДокумента.Документ.Дата, ДЕНЬ),
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Документ) = ТИП(Документ.ОперацияПоПлатежнымКартам)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ";
	
	Запрос.Выполнить();
	
	СформироватьТаблицаЗапасы(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства);
	СформироватьТаблицаВнеоборотныеАктивы(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСостоянияВнеоборотныхАктивов(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыСПокупателями(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходы(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства);
	СформироватьТаблицаУправленческий(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства);
	// Эквайринг
	ЭквайринговыеОперацииСервер.СформироватьТаблицаДоходыИРасходыКассовыйМетодЭквайринг(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаПередачаВА, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если НЕ УправлениеНебольшойФирмойСервер.ВыполнитьКонтрольОстатков() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы содержат записи, необходимо выполнить контроль
	// возникновения отрицательных остатков.
	Если СтруктураВременныеТаблицы.ДвиженияВнеоборотныеАктивыИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыСПокупателямиИзменение Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияРасчетыСПокупателямиИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПокупателямиИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПокупателямиИзменение.Контрагент) КАК КонтрагентПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПокупателямиИзменение.Договор) КАК ДоговорПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПокупателямиИзменение.Договор.ВалютаРасчетов) КАК ВалютаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПокупателямиИзменение.Документ) КАК ДокументПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПокупателямиИзменение.Заказ) КАК ЗаказПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов) КАК ТипРасчетовПредставление,
		|	ЛОЖЬ КАК ДвиженияДенежныхДокументов,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаОстаткаЗадолженности,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалПриЗаписи - ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаПолученныхАвансов,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаНепогашеннойЗадолженности,
		|	ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов КАК ТипРасчетов
		|ИЗ
		|	ДвиженияРасчетыСПокупателямиИзменение КАК ДвиженияРасчетыСПокупателямиИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПокупателями.Остатки(
		|				&МоментКонтроля,
		|				(Организация, Контрагент, Договор, Документ, Заказ, ТипРасчетов) В
		|					(ВЫБРАТЬ
		|						ДвиженияРасчетыСПокупателямиИзменение.Организация КАК Организация,
		|						ДвиженияРасчетыСПокупателямиИзменение.Контрагент КАК Контрагент,
		|						ДвиженияРасчетыСПокупателямиИзменение.Договор КАК Договор,
		|						ДвиженияРасчетыСПокупателямиИзменение.Документ КАК Документ,
		|						ДвиженияРасчетыСПокупателямиИзменение.Заказ КАК Заказ,
		|						ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов КАК ТипРасчетов
		|					ИЗ
		|						ДвиженияРасчетыСПокупателямиИзменение КАК ДвиженияРасчетыСПокупателямиИзменение)) КАК РасчетыСПокупателямиОстатки
		|		ПО ДвиженияРасчетыСПокупателямиИзменение.Организация = РасчетыСПокупателямиОстатки.Организация
		|			И ДвиженияРасчетыСПокупателямиИзменение.Контрагент = РасчетыСПокупателямиОстатки.Контрагент
		|			И ДвиженияРасчетыСПокупателямиИзменение.Договор = РасчетыСПокупателямиОстатки.Договор
		|			И ДвиженияРасчетыСПокупателямиИзменение.Документ = РасчетыСПокупателямиОстатки.Документ
		|			И ДвиженияРасчетыСПокупателямиИзменение.Заказ = РасчетыСПокупателямиОстатки.Заказ
		|			И ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов = РасчетыСПокупателямиОстатки.ТипРасчетов
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
		|				ТОГДА ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) > 0
		|			ИНАЧЕ ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) < 0
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияВнеоборотныеАктивыИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияВнеоборотныеАктивыИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияВнеоборотныеАктивыИзменение.ВнеоборотныйАктив) КАК ВнеоборотныйАктивПредставление,
		|	ЕСТЬNULL(ВнеоборотныеАктивыОстатки.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
		|	ЕСТЬNULL(ВнеоборотныеАктивыОстатки.АмортизацияОстаток, 0) КАК АмортизацияОстаток,
		|	ДвиженияВнеоборотныеАктивыИзменение.СтоимостьПередЗаписью КАК СтоимостьПередЗаписью,
		|	ДвиженияВнеоборотныеАктивыИзменение.СтоимостьПриЗаписи КАК СтоимостьПриЗаписи,
		|	ДвиженияВнеоборотныеАктивыИзменение.СтоимостьИзменение КАК СтоимостьИзменение,
		|	ДвиженияВнеоборотныеАктивыИзменение.СтоимостьИзменение + ЕСТЬNULL(ВнеоборотныеАктивыОстатки.СтоимостьОстаток, 0) КАК ОстаточнаяСтоимость,
		|	ДвиженияВнеоборотныеАктивыИзменение.АмортизацияПередЗаписью КАК АмортизацияПередЗаписью,
		|	ДвиженияВнеоборотныеАктивыИзменение.АмортизацияПриЗаписи КАК АмортизацияПриЗаписи,
		|	ДвиженияВнеоборотныеАктивыИзменение.АмортизацияИзменение КАК АмортизацияИзменение,
		|	ДвиженияВнеоборотныеАктивыИзменение.АмортизацияИзменение + ЕСТЬNULL(ВнеоборотныеАктивыОстатки.АмортизацияОстаток, 0) КАК НачисленнаяАмортизация
		|ИЗ
		|	ДвиженияВнеоборотныеАктивыИзменение КАК ДвиженияВнеоборотныеАктивыИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВнеоборотныеАктивы.Остатки(
		|				&МоментКонтроля,
		|				(Организация, ВнеоборотныйАктив) В
		|					(ВЫБРАТЬ
		|						ДвиженияВнеоборотныеАктивыИзменение.Организация КАК Организация,
		|						ДвиженияВнеоборотныеАктивыИзменение.ВнеоборотныйАктив КАК ВнеоборотныйАктив
		|					ИЗ
		|						ДвиженияВнеоборотныеАктивыИзменение КАК ДвиженияВнеоборотныеАктивыИзменение)) КАК ВнеоборотныеАктивыОстатки
		|		ПО (ДвиженияВнеоборотныеАктивыИзменение.Организация = ДвиженияВнеоборотныеАктивыИзменение.Организация)
		|			И (ДвиженияВнеоборотныеАктивыИзменение.ВнеоборотныйАктив = ДвиженияВнеоборотныеАктивыИзменение.ВнеоборотныйАктив)
		|ГДЕ
		|	(ЕСТЬNULL(ВнеоборотныеАктивыОстатки.СтоимостьОстаток, 0) < 0
		|			ИЛИ ЕСТЬNULL(ВнеоборотныеАктивыОстатки.АмортизацияОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой()
			ИЛИ НЕ МассивРезультатов[1].Пустой() Тогда
			ДокументОбъектПередачаВА = ДокументСсылкаПередачаВА.ПолучитьОбъект()
		КонецЕсли;
		
		// Отрицательный остаток по расчетам с покупателями.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструРасчетыСПокупателями(ДокументОбъектПередачаВА, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по амортизации имущества.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструВнеоборотныеАктивы(ДокументОбъектПередачаВА, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасы(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачислениеАмортизации", НСтр("ru = 'Начисление амортизации'"));
	Запрос.УстановитьПараметр("ПрочиеРасходы", НСтр("ru = 'Прочие расходы'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.СчетУчетаАмортизации КАК СчетУчета,
	|	ТаблицаДокумента.АмортизацияЗаМесяц КАК Сумма,
	|	ИСТИНА КАК ФиксированнаяСтоимость,
	|	&НачислениеАмортизации КАК СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.АмортизацияЗаМесяц > 0
	|	И (ТаблицаДокумента.ТипСчетаАмортизации = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.НезавершенноеПроизводство)
	|			ИЛИ ТаблицаДокумента.ТипСчетаАмортизации = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.КосвенныеЗатраты))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходы(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачислениеАмортизации", НСтр("ru = 'Начисление амортизации'"));
	Запрос.УстановитьПараметр("ПрочиеДоходы", НСтр("ru = 'Прочие доходы'"));
	Запрос.УстановитьПараметр("ПрочиеРасходы", НСтр("ru = 'Прочие расходы'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	Запрос.УстановитьПараметр("ПоложительнаяКурсоваяРазницаСчетУчета", ПланыСчетов.Управленческий.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ОтрицательнаяКурсоваяРазницаСчетУчета", ПланыСчетов.Управленческий.ПрочиеРасходы);
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.СчетУчетаАмортизации КАК СчетУчета,
	|	ТаблицаДокумента.ВнеоборотныйАктив КАК Аналитика,
	|	&НачислениеАмортизации КАК СодержаниеПроводки,
	|	ТаблицаДокумента.АмортизацияЗаМесяц КАК СуммаДоходов,
	|	0 КАК СуммаРасходов,
	|	ТаблицаДокумента.АмортизацияЗаМесяц КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.АмортизацияЗаМесяц > 0
	|	И (ТаблицаДокумента.ТипСчетаАмортизации = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)
	|			ИЛИ ТаблицаДокумента.ТипСчетаАмортизации = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеРасходы))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаДокумента.НаправлениеДеятельностиПродажи,
	|	ТаблицаДокумента.НаправлениеДеятельностиПродажи.СчетУчетаВыручкиОтПродаж,
	|	ТаблицаДокумента.ВнеоборотныйАктив,
	|	&ПрочиеДоходы,
	|	ТаблицаДокумента.Сумма,
	|	0,
	|	ТаблицаДокумента.Сумма
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаДокумента.НаправлениеДеятельностиПродажи,
	|	ТаблицаДокумента.НаправлениеДеятельностиПродажи.СчетУчетаСебестоимостиПродаж,
	|	ТаблицаДокумента.ВнеоборотныйАктив,
	|	&ПрочиеРасходы,
	|	0,
	|	ТаблицаДокумента.Стоимость - ТаблицаДокумента.Амортизация - ТаблицаДокумента.АмортизацияЗаМесяц,
	|	ТаблицаДокумента.Стоимость - ТаблицаДокумента.Амортизация - ТаблицаДокумента.АмортизацияЗаМесяц
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Стоимость - ТаблицаДокумента.Амортизация - ТаблицаДокумента.АмортизацияЗаМесяц > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА &ПоложительнаяКурсоваяРазницаСчетУчета
	|		ИНАЧЕ &ОтрицательнаяКурсоваяРазницаСчетУчета
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Дата КАК Дата,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Организация КАК Организация,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Валюта,
	|		СУММА(ТаблицаКурсовыхРазницРасчетыСПокупателями.СуммаКурсовойРазницы) КАК СуммаКурсовойРазницы
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДокумента.Дата КАК Дата,
	|			ТаблицаДокумента.Организация КАК Организация,
	|			ТаблицаДокумента.Валюта,
	|			ТаблицаДокумента.СуммаКурсовойРазницы КАК СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаДокумента.Дата,
	|			ТаблицаДокумента.Организация,
	|			ТаблицаДокумента.Валюта,
	|			ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)) КАК ТаблицаКурсовыхРазницРасчетыСПокупателями
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Дата,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Организация,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Валюта
	|	
	|	ИМЕЮЩИЕ
	|		(СУММА(ТаблицаКурсовыхРазницРасчетыСПокупателями.СуммаКурсовойРазницы) >= 0.005
	|			ИЛИ СУММА(ТаблицаКурсовыхРазницРасчетыСПокупателями.СуммаКурсовойРазницы) <= -0.005)) КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаВнеоборотныеАктивы(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачислениеАмортизации", НСтр("ru = 'Начисление амортизации'"));
	Запрос.УстановитьПараметр("СписаниеАмортизации", НСтр("ru = 'Списание амортизации'"));
	Запрос.УстановитьПараметр("СписаниеВнеоборотногоАктиваСУчета", НСтр("ru = 'Списание имущества с учета'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ТаблицаДокумента.АмортизацияЗаМесяц КАК Амортизация,
	|	0 КАК Стоимость,
	|	ТаблицаДокумента.АмортизацияЗаМесяц КАК Сумма,
	|	ТаблицаДокумента.СчетАмортизации КАК СчетУчета,
	|	&НачислениеАмортизации КАК СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.АмортизацияЗаМесяц > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаДокумента.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.ВнеоборотныйАктив,
	|	ТаблицаДокумента.АмортизацияЗаМесяц + ТаблицаДокумента.Амортизация,
	|	0,
	|	ТаблицаДокумента.АмортизацияЗаМесяц + ТаблицаДокумента.Амортизация,
	|	ТаблицаДокумента.СчетАмортизации,
	|	&СписаниеАмортизации
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.АмортизацияЗаМесяц + ТаблицаДокумента.Амортизация > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаДокумента.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.ВнеоборотныйАктив,
	|	0,
	|	ТаблицаДокумента.Стоимость,
	|	ТаблицаДокумента.Стоимость,
	|	ТаблицаДокумента.СчетУчета,
	|	&СписаниеВнеоборотногоАктиваСУчета
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Стоимость > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВнеоборотныеАктивы", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаВнеоборотныеАктивы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСостоянияВнеоборотныхАктивов(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияВнеоборотныхАктивов.СнятСУчета) КАК Состояние,
	|	ЛОЖЬ КАК НачислятьАмортизацию,
	|	ЛОЖЬ КАК НачислятьАмортизациюВТекущемМесяце
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСостоянияВнеоборотныхАктивов", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаСостоянияВнеоборотныхАктивов()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПокупателями(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаВА);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ВозникновениеОбязательствПокупателя", НСтр("ru='Возникновение обязательств покупателя'"));
	Запрос.УстановитьПараметр("ЗачетАванса", НСтр("ru='Зачет предоплаты'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.Период КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ТаблицаДокумента.СчетУчетаРасчетовСПокупателем КАК СчетУчета,
	|	ТаблицаДокумента.ВалютаРасчетов КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг) КАК ТипРасчетов,
	|	СУММА(ТаблицаДокумента.Сумма) КАК Сумма,
	|	СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВал,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаДляОстатка,
	|	СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВалДляОстатка,
	|	ВЫРАЗИТЬ(&ВозникновениеОбязательствПокупателя КАК СТРОКА(100)) КАК СодержаниеПроводки
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыСПокупателями
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.ВалютаРасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетУчетаАвансовПокупателя,
	|	ТаблицаДокумента.ВалютаРасчетов,
	|	ТаблицаДокумента.ТипРасчетов,
	|	СУММА(ТаблицаДокумента.Сумма),
	|	СУММА(ТаблицаДокумента.СуммаВал),
	|	СУММА(ТаблицаДокумента.Сумма),
	|	СУММА(ТаблицаДокумента.СуммаВал),
	|	ВЫРАЗИТЬ(&ЗачетАванса КАК СТРОКА(100))
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.ТипРасчетов,
	|	ТаблицаДокумента.ВалютаРасчетов,
	|	ТаблицаДокумента.СчетУчетаАвансовПокупателя
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.ДокументКуда
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.ВалютаРасчетов,
	|	ТаблицаДокумента.ТипРасчетовКуда,
	|	СУММА(ТаблицаДокумента.Сумма),
	|	СУММА(ТаблицаДокумента.СуммаВал),
	|	-СУММА(ТаблицаДокумента.Сумма),
	|	-СУММА(ТаблицаДокумента.СуммаВал),
	|	ВЫРАЗИТЬ(&ЗачетАванса КАК СТРОКА(100))
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.ДокументКуда
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.ВалютаРасчетов,
	|	ТаблицаДокумента.ТипРасчетовКуда
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Контрагент,
	|	Договор,
	|	Валюта,
	|	Документ,
	|	Заказ,
	|	ТипРасчетов,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПокупателями.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПокупателями.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыСПокупателями.Договор КАК Договор,
	|	ВременнаяТаблицаРасчетыСПокупателями.Документ КАК Документ,
	|	ВременнаяТаблицаРасчетыСПокупателями.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыСПокупателями.ТипРасчетов КАК ТипРасчетов
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями КАК ВременнаяТаблицаРасчетыСПокупателями";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПокупателями");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = УправлениеНебольшойФирмойСервер.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПокупателями(Запрос.МенеджерВременныхТаблиц, Истина, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПокупателями", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПокупателями()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаВА);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.НаправлениеДеятельностиПродажи КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Сумма КАК СуммаДоходов,
	|	ТаблицаДокумента.Сумма КАК НеРаспределено
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация КАК Организация,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ЭтоЭквайринговаяОперация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Статья КАК Статья
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ЭтоЭквайринговаяОперация
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаЗапасыДоходыИРасходыОтложенные = МассивРезультатов[0].Выгрузить();
	ВыборкаРезультатаЗапроса = МассивРезультатов[1].Выбрать();
	
	ТаблицаПредоплатаДоходыИРасходыОтложенные = ТаблицаЗапасыДоходыИРасходыОтложенные.Скопировать();
	ТаблицаПредоплатаДоходыИРасходыОтложенные.Очистить();
	
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		СуммаКСписанию = ВыборкаРезультатаЗапроса.СуммаКСписанию;
		Для каждого СтрокаЗапасыДоходыИРасходыОтложенные Из ТаблицаЗапасыДоходыИРасходыОтложенные Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаЗапасыДоходыИРасходыОтложенные.СуммаДоходов <= СуммаКСписанию Тогда
				СтрокаПредоплатаДоходыИРасходыОтложенные = ТаблицаПредоплатаДоходыИРасходыОтложенные.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПредоплатаДоходыИРасходыОтложенные, СтрокаЗапасыДоходыИРасходыОтложенные);
				СуммаКСписанию = СуммаКСписанию - СтрокаЗапасыДоходыИРасходыОтложенные.СуммаДоходов;
			ИначеЕсли СтрокаЗапасыДоходыИРасходыОтложенные.СуммаДоходов > СуммаКСписанию Тогда
				СтрокаПредоплатаДоходыИРасходыОтложенные = ТаблицаПредоплатаДоходыИРасходыОтложенные.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПредоплатаДоходыИРасходыОтложенные, СтрокаЗапасыДоходыИРасходыОтложенные);
				СтрокаПредоплатаДоходыИРасходыОтложенные.СуммаДоходов = СуммаКСписанию;
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для каждого СтрокаПредоплатаДоходыИРасходыОтложенные Из ТаблицаПредоплатаДоходыИРасходыОтложенные Цикл
		СтрокаЗапасыДоходыИРасходыОтложенные = ТаблицаЗапасыДоходыИРасходыОтложенные.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаЗапасыДоходыИРасходыОтложенные, СтрокаПредоплатаДоходыИРасходыОтложенные);
		СтрокаЗапасыДоходыИРасходыОтложенные.ВидДвижения = ВидДвиженияНакопления.Расход;
		СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено = -СтрокаПредоплатаДоходыИРасходыОтложенные.СуммаДоходов;
	КонецЦикла;
	
	ВыборкаРезультатаЗапроса = МассивРезультатов[2].Выбрать();
	
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		Статья = ВыборкаРезультатаЗапроса.Статья;
	Иначе
		Статья = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	&Статья КАК Статья,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Таблица.СуммаДоходов КАК СуммаДоходов
	|ПОМЕСТИТЬ ВременнаяТаблицаПредоплатаДоходыИРасходыОтложенные
	|ИЗ
	|	&Таблица КАК Таблица";
	Запрос.УстановитьПараметр("Таблица", ТаблицаПредоплатаДоходыИРасходыОтложенные);
	Запрос.УстановитьПараметр("Статья", Статья);
	
	Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыОтложенные", ТаблицаЗапасыДоходыИРасходыОтложенные);
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыОтложенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.Сумма КАК СуммаДоходов
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ЭтоЭквайринговаяОперация";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыНераспределенные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыНераспределенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаВА);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.ДокументДата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	-ТаблицаДокумента.Сумма КАК СуммаДоходов
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ЭтоЭквайринговаяОперация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Статья,
	|	Таблица.СуммаДоходов
	|ИЗ
	|	ВременнаяТаблицаПредоплатаДоходыИРасходыОтложенные КАК Таблица";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетод", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыКассовыйМетод()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаУправленческий(ДокументСсылкаПередачаВА, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачислениеАмортизации", НСтр("ru = 'Начисление амортизации'"));
	Запрос.УстановитьПараметр("СписаниеАмортизации", НСтр("ru = 'Списание амортизации'"));
	Запрос.УстановитьПараметр("ПрочиеРасходы", НСтр("ru = 'Прочие расходы'"));
	Запрос.УстановитьПараметр("ПрочиеДоходы", НСтр("ru = 'Прочие доходы'"));
	Запрос.УстановитьПараметр("ЗачетПредоплаты", НСтр("ru = 'Зачет предоплаты'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	Запрос.УстановитьПараметр("ПоложительнаяКурсоваяРазницаСчетУчета", ПланыСчетов.Управленческий.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ОтрицательнаяКурсоваяРазницаСчетУчета", ПланыСчетов.Управленческий.ПрочиеРасходы);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ТаблицаДокумента.СчетУчетаАмортизации КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	0 КАК СуммаВалДт,
	|	ТаблицаДокумента.СчетАмортизации КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	0 КАК СуммаВалКт,
	|	ТаблицаДокумента.АмортизацияЗаМесяц КАК Сумма,
	|	ВЫРАЗИТЬ(&НачислениеАмортизации КАК СТРОКА(100)) КАК Содержание
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.АмортизацияЗаМесяц > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетАмортизации,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	ТаблицаДокумента.СчетУчета,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	ТаблицаДокумента.АмортизацияЗаМесяц + ТаблицаДокумента.Амортизация,
	|	&СписаниеАмортизации
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.АмортизацияЗаМесяц + ТаблицаДокумента.Амортизация > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.НаправлениеДеятельностиПродажи.СчетУчетаСебестоимостиПродаж,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	ТаблицаДокумента.СчетУчета,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	ТаблицаДокумента.Стоимость - ТаблицаДокумента.Амортизация - ТаблицаДокумента.АмортизацияЗаМесяц,
	|	&ПрочиеРасходы
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Стоимость - ТаблицаДокумента.Амортизация - ТаблицаДокумента.АмортизацияЗаМесяц > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчетаРасчетовСПокупателем,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаРасчетовСПокупателем.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаРасчетовСПокупателем.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.НаправлениеДеятельностиПродажи.СчетУчетаВыручкиОтПродаж,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.НаправлениеДеятельностиПродажи.СчетУчетаВыручкиОтПродаж.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.НаправлениеДеятельностиПродажи.СчетУчетаВыручкиОтПродаж.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	&ПрочиеДоходы
	|ИЗ
	|	ВременнаяТаблицаВнеоборотныеАктивы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	1,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчетаАвансовПокупателя,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаАвансовПокупателяВалютный
	|			ТОГДА ТаблицаДокумента.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаАвансовПокупателяВалютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетУчетаРасчетовСПокупателем,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаРасчетовСПокупателемВалютный
	|			ТОГДА ТаблицаДокумента.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаРасчетовСПокупателемВалютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	&ЗачетПредоплаты
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокумента.Период КАК Период,
	|		ТаблицаДокумента.Организация КАК Организация,
	|		ТаблицаДокумента.СчетУчетаАвансовПокупателя КАК СчетУчетаАвансовПокупателя,
	|		ТаблицаДокумента.СчетУчетаАвансовПокупателяВалютный КАК СчетУчетаАвансовПокупателяВалютный,
	|		ТаблицаДокумента.СчетУчетаРасчетовСПокупателем КАК СчетУчетаРасчетовСПокупателем,
	|		ТаблицаДокумента.СчетУчетаРасчетовСПокупателемВалютный КАК СчетУчетаРасчетовСПокупателемВалютный,
	|		ТаблицаДокумента.ВалютаРасчетов КАК ВалютаРасчетов,
	|		СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВал,
	|		СУММА(ТаблицаДокумента.Сумма) КАК Сумма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДокумента.Период КАК Период,
	|			ТаблицаДокумента.Организация КАК Организация,
	|			ТаблицаДокумента.СчетУчетаАвансовПокупателя КАК СчетУчетаАвансовПокупателя,
	|			ТаблицаДокумента.СчетУчетаАвансовПокупателя.Валютный КАК СчетУчетаАвансовПокупателяВалютный,
	|			ТаблицаДокумента.СчетУчетаРасчетовСПокупателем КАК СчетУчетаРасчетовСПокупателем,
	|			ТаблицаДокумента.СчетУчетаРасчетовСПокупателем.Валютный КАК СчетУчетаРасчетовСПокупателемВалютный,
	|			ТаблицаДокумента.ВалютаРасчетов КАК ВалютаРасчетов,
	|			ТаблицаДокумента.СуммаВал КАК СуммаВал,
	|			ТаблицаДокумента.Сумма КАК Сумма
	|		ИЗ
	|			ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаДокумента.Дата,
	|			ТаблицаДокумента.Организация,
	|			ТаблицаДокумента.Контрагент.СчетУчетаАвансовПокупателя,
	|			ТаблицаДокумента.Контрагент.СчетУчетаАвансовПокупателя.Валютный,
	|			ТаблицаДокумента.Контрагент.СчетУчетаРасчетовСПокупателем,
	|			ТаблицаДокумента.Контрагент.СчетУчетаРасчетовСПокупателем.Валютный,
	|			ТаблицаДокумента.Валюта,
	|			0,
	|			ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)) КАК ТаблицаДокумента
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.Организация,
	|		ТаблицаДокумента.СчетУчетаАвансовПокупателя,
	|		ТаблицаДокумента.СчетУчетаАвансовПокупателяВалютный,
	|		ТаблицаДокумента.СчетУчетаРасчетовСПокупателем,
	|		ТаблицаДокумента.СчетУчетаРасчетовСПокупателемВалютный,
	|		ТаблицаДокумента.ВалютаРасчетов
	|	
	|	ИМЕЮЩИЕ
	|		(СУММА(ТаблицаДокумента.Сумма) >= 0.005
	|			ИЛИ СУММА(ТаблицаДокумента.Сумма) <= -0.005
	|			ИЛИ СУММА(ТаблицаДокумента.СуммаВал) >= 0.005
	|			ИЛИ СУММА(ТаблицаДокумента.СуммаВал) <= -0.005)) КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	1,
	|	ТаблицаУправленческий.Дата,
	|	ТаблицаУправленческий.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаУправленческий.СчетУчета
	|		ИНАЧЕ &ОтрицательнаяКурсоваяРазницаСчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СуммаКурсовойРазницы > 0
	|				И ТаблицаУправленческий.СчетУчетаВалютный
	|			ТОГДА ТаблицаУправленческий.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СуммаКурсовойРазницы > 0
	|			ТОГДА &ПоложительнаяКурсоваяРазницаСчетУчета
	|		ИНАЧЕ ТаблицаУправленческий.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СуммаКурсовойРазницы < 0
	|				И ТаблицаУправленческий.СчетУчетаВалютный
	|			ТОГДА ТаблицаУправленческий.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаУправленческий.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаУправленческий.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Дата КАК Дата,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Организация КАК Организация,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.СчетУчета КАК СчетУчета,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.СчетУчетаВалютный КАК СчетУчетаВалютный,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Валюта КАК Валюта,
	|		СУММА(ТаблицаКурсовыхРазницРасчетыСПокупателями.СуммаКурсовойРазницы) КАК СуммаКурсовойРазницы
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДокумента.Дата КАК Дата,
	|			ТаблицаДокумента.Организация КАК Организация,
	|			ТаблицаДокумента.СчетУчета КАК СчетУчета,
	|			ТаблицаДокумента.СчетУчета.Валютный КАК СчетУчетаВалютный,
	|			ТаблицаДокумента.Валюта КАК Валюта,
	|			ТаблицаДокумента.СуммаКурсовойРазницы КАК СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаДокумента.Дата,
	|			ТаблицаДокумента.Организация,
	|			ТаблицаДокумента.СчетУчета,
	|			ТаблицаДокумента.СчетУчета.Валютный,
	|			ТаблицаДокумента.Валюта,
	|			ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)) КАК ТаблицаКурсовыхРазницРасчетыСПокупателями
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Дата,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Организация,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.СчетУчета,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.СчетУчетаВалютный,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Валюта
	|	
	|	ИМЕЮЩИЕ
	|		(СУММА(ТаблицаКурсовыхРазницРасчетыСПокупателями.СуммаКурсовойРазницы) >= 0.005
	|			ИЛИ СУММА(ТаблицаКурсовыхРазницРасчетыСПокупателями.СуммаКурсовойРазницы) <= -0.005)) КАК ТаблицаУправленческий
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаУправленческий", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаУправленческий()

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
