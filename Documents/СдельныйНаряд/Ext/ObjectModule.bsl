#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Процедура заполняет состав бригады.
//
Процедура ЗаполнитьСоставБригады() Экспорт

	Если ЗначениеЗаполнено(Исполнитель) И ТипЗнч(Исполнитель) = Тип("СправочникСсылка.Бригады") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БригадыСостав.Сотрудник,
		|	1 КАК КТУ
		|ИЗ
		|	Справочник.Бригады.Состав КАК БригадыСостав
		|ГДЕ
		|	БригадыСостав.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Исполнитель);	
		
		СоставБригады.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;	

КонецПроцедуры

// Процедура заполняет табличную часть по спецификации.
//
Процедура ЗаполнитьТаблицуПоСпецификации(ПоСпецификации, ПоЕдиницаИзмерения, ПоКоличество, ТаблицаСостав)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(СпецификацииСостав.НомерСтроки) КАК СпецификацииСоставНомерСтроки,
	|	СпецификацииСостав.Номенклатура КАК Номенклатура,
	|	СпецификацииСостав.ТипСтрокиСостава КАК ТипСтрокиСостава,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	СпецификацииСостав.Спецификация КАК Спецификация,
	|	СпецификацииСостав.ДоляСтоимости КАК ДоляСтоимости,
	|	СпецификацииСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(СпецификацииСостав.Количество / СпецификацииСостав.КоличествоПродукции * &Коэффициент * &Количество) КАК Количество
	|ИЗ
	|	Справочник.Спецификации.Состав КАК СпецификацииСостав
	|ГДЕ
	|	СпецификацииСостав.Ссылка = &Спецификация
	|	И СпецификацииСостав.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацииСостав.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	СпецификацииСостав.Спецификация,
	|	СпецификацииСостав.ЕдиницаИзмерения,
	|	СпецификацииСостав.ТипСтрокиСостава,
	|	СпецификацииСостав.ДоляСтоимости
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпецификацииСоставНомерСтроки");
	
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", Константы.ФункциональнаяОпцияИспользоватьХарактеристики.Получить());
	
	Запрос.УстановитьПараметр("Спецификация", ПоСпецификации);
	Запрос.УстановитьПараметр("Количество", ПоКоличество);
	
	Если ТипЗнч(ПоЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения")
		И ЗначениеЗаполнено(ПоЕдиницаИзмерения) Тогда
		ПоКоэффициент = ПоЕдиницаИзмерения.Коэффициент;
	Иначе
		ПоКоэффициент = 1;
	КонецЕсли;
	Запрос.УстановитьПараметр("Коэффициент", ПоКоэффициент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел Тогда
			
			ЗаполнитьТаблицуПоСпецификации(Выборка.Спецификация, Выборка.ЕдиницаИзмерения, Выборка.Количество, ТаблицаСостав);
			
		Иначе
			
			НоваяСтрока = ТаблицаСостав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТаблицуПоСпецификации()

// Обработчик заполнения документа на основании структуры.
//
// Параметры:
//  ДанныеЗаполнения - Структура.
//
Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт
	
	Если Не ДанныеЗаполнения.Свойство("Операции") Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаОперации Из ДанныеЗаполнения.Операции Цикл
		НоваяСтрока = Операции.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОперации);
	КонецЦикла;
	
КонецПроцедуры

// Обработчик заполнения на основании документа ЗаказПокупателя.
//
// Параметры:
//  ДокументСсылкаЗаказПокупателя - ДокументСсылка.ЗаказПокупателя.
//
Процедура ЗаполнитьПоЗаказуПокупателя(ДокументСсылкаЗаказПокупателя) Экспорт
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаЗаказПокупателя,
			Новый Структура("Организация, ВидОперации, СтруктурнаяЕдиницаПродажи, Старт, Финиш, ДатаОтгрузки"));
	
	Организация = ЗначенияРеквизитов.Организация;
	СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаПродажи;
	ВалютаДокумента = Справочники.ВидыЦен.Учетная.ВалютаЦены;
	
	Если ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
		
		ДатаЗакрытия = ЗначенияРеквизитов.Финиш;
		Период = ?(ЗначениеЗаполнено(ЗначенияРеквизитов.Старт), ЗначенияРеквизитов.Старт, ТекущаяДатаСеанса());
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗаказПокупателяРаботы.НомерСтроки КАК НомерСтроки,
		|	ЗаказПокупателяРаботы.Ссылка КАК ЗаказПокупателя,
		|	ЗаказПокупателяРаботы.Номенклатура КАК Номенклатура,
		|	ЗаказПокупателяРаботы.Характеристика КАК Характеристика,
		|	ЗаказПокупателяРаботы.Количество КАК КоличествоПлан,
		|	ЗаказПокупателяРаботы.Спецификация КАК Спецификация,
		|	СпецификацииОперации.Операция,
		|	СпецификацииОперации.Операция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(СпецификацииОперации.НормаВремени, 0) / ЕСТЬNULL(СпецификацииОперации.КоличествоПродукции, 1) КАК НормаВремени,
		|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0) КАК Расценка
		|ИЗ
		|	Документ.ЗаказПокупателя.Работы КАК ЗаказПокупателяРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Операции КАК СпецификацииОперации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.Учетная)) КАК ЦеныНоменклатурыСрезПоследних
		|			ПО СпецификацииОперации.Операция = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|		ПО ЗаказПокупателяРаботы.Спецификация = СпецификацииОперации.Ссылка
		|ГДЕ
		|	ЗаказПокупателяРаботы.Ссылка = &ДокументОснование
		|	И ЗаказПокупателяРаботы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	Иначе
		
		ДатаЗакрытия = ЗначенияРеквизитов.ДатаОтгрузки;
		Период = ?(ЗначениеЗаполнено(ЗначенияРеквизитов.ДатаОтгрузки), ЗначенияРеквизитов.ДатаОтгрузки, ТекущаяДатаСеанса());
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗаказПокупателяЗапасы.НомерСтроки КАК НомерСтроки,
		|	ЗаказПокупателяЗапасы.Ссылка КАК ЗаказПокупателя,
		|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
		|	ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
		|	ЗаказПокупателяЗапасы.Партия КАК Партия,
		|	ЗаказПокупателяЗапасы.Количество КАК КоличествоПлан,
		|	ЗаказПокупателяЗапасы.Спецификация КАК Спецификация,
		|	СпецификацииОперации.Операция,
		|	СпецификацииОперации.Операция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(СпецификацииОперации.НормаВремени, 0) / ЕСТЬNULL(СпецификацииОперации.КоличествоПродукции, 1) * ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
		|				И ЗаказПокупателяЗапасы.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЗаказПокупателяЗапасы.ЕдиницаИзмерения.Коэффициент
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК НормаВремени,
		|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0) КАК Расценка
		|ИЗ
		|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Операции КАК СпецификацииОперации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.Учетная)) КАК ЦеныНоменклатурыСрезПоследних
		|			ПО СпецификацииОперации.Операция = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|		ПО ЗаказПокупателяЗапасы.Спецификация = СпецификацииОперации.Ссылка
		|ГДЕ
		|	ЗаказПокупателяЗапасы.Ссылка = &ДокументОснование
		|	И ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказПокупателя);
	Запрос.УстановитьПараметр("Период", Период);
	
	Операции.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Операции.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоЗаказуПокупателя()

// Обработчик заполнения на основании документа ЗаказНаПроизводство.
//
// Параметры:
//  ДокументСсылкаЗаказНаПроизводство - ДокументСсылка.ЗаказНаПроизводство.
//
Процедура ЗаполнитьПоЗаказуНаПроизводство(ДокументСсылкаЗаказНаПроизводство) Экспорт
	
	Если ДокументСсылкаЗаказНаПроизводство.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		ВызватьИсключение НСтр("ru = 'Сдельный наряд не может быть введен на основании заказа на производство по складу!'");
	КонецЕсли;
	
	Если ДокументСсылкаЗаказНаПроизводство.ВидОперации = Перечисления.ВидыОперацийЗаказНаПроизводство.Сборка Тогда
		ЗаполнитьПоЗаказуНаПроизводствоСборка(ДокументСсылкаЗаказНаПроизводство);
		Возврат;
	КонецЕсли;
	
	ТаблицаСостав = Новый ТаблицаЗначений;
	
	ТаблицаСостав.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаСостав.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаСостав.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("СправочникСсылка.Спецификации"));
	ТаблицаСостав.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаСостав.Колонки.Добавить("ДоляСтоимости", Новый ОписаниеТипов("Число"));
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗаказНаПроизводствоПродукция.Ссылка.Организация КАК Организация,
	|	ЗаказНаПроизводствоПродукция.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводствоПродукция.Ссылка.Финиш КАК ДатаЗакрытия,
	|	ЗаказНаПроизводствоПродукция.Ссылка.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоПродукция.Характеристика КАК Характеристика,
	|	ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказНаПроизводствоПродукция.Количество КАК Количество,
	|	ЗаказНаПроизводствоПродукция.Спецификация КАК Спецификация,
	|	СпецификацииОперации.Операция КАК Операция,
	|	СпецификацииОперации.Операция.ЕдиницаИзмерения КАК ОперацияЕдиницаИзмерения,
	|	ЕСТЬNULL(СпецификацииОперации.НормаВремени, 0) / ЕСТЬNULL(СпецификацииОперации.КоличествоПродукции, 1) * ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				И ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК НормаВремени,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0) КАК Расценка
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Операции КАК СпецификацииОперации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.Учетная)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО СпецификацииОперации.Операция = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|		ПО ЗаказНаПроизводствоПродукция.Спецификация = СпецификацииОперации.Ссылка
	|ГДЕ
	|	ЗаказНаПроизводствоПродукция.Ссылка = &ДокументОснование
	|	И ЗаказНаПроизводствоПродукция.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказНаПроизводство);
	Запрос.УстановитьПараметр("Период", ?(ЗначениеЗаполнено(ДокументСсылкаЗаказНаПроизводство.Старт), ДокументСсылкаЗаказНаПроизводство.Старт, ТекущаяДатаСеанса()));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	ЭтотОбъект.ВалютаДокумента = Справочники.ВидыЦен.Учетная.ВалютаЦены;
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		
		ТаблицаСостав.Очистить();
		ЗаполнитьТаблицуПоСпецификации(Выборка.Спецификация, Выборка.ЕдиницаИзмерения, Выборка.Количество, ТаблицаСостав);
		ИтогДоляСтоимости = ТаблицаСостав.Итог("ДоляСтоимости");
		
		ОсталосьРаспределить = Выборка.НормаВремени;
		
		НоваяСтрока = Неопределено;
		Для каждого СтрокаТаблицы Из ТаблицаСостав Цикл
			
			НоваяСтрока = Операции.Добавить();
			НоваяСтрока.Период = Выборка.Период;
			НоваяСтрока.ЗаказПокупателя = Выборка.ЗаказПокупателя;
			НоваяСтрока.Номенклатура = СтрокаТаблицы.Номенклатура;
			НоваяСтрока.Характеристика = СтрокаТаблицы.Характеристика;
			НоваяСтрока.Операция = Выборка.Операция;
			НоваяСтрока.ЕдиницаИзмерения = Выборка.ОперацияЕдиницаИзмерения;
			НоваяСтрока.КоличествоПлан = СтрокаТаблицы.Количество;
			НоваяСтрока.Расценка = Выборка.Расценка;
			НоваяСтрока.Спецификация = Выборка.Спецификация;
			
			НормаВремени = Окр(Выборка.НормаВремени * СтрокаТаблицы.ДоляСтоимости / ?(ИтогДоляСтоимости = 0, 1, ИтогДоляСтоимости),3,0);
			НоваяСтрока.НормаВремени = НормаВремени;
			ОсталосьРаспределить = ОсталосьРаспределить - НормаВремени;
			
		КонецЦикла;
		
		Если НоваяСтрока <> Неопределено Тогда
			НоваяСтрока.НормаВремени = НоваяСтрока.НормаВремени + ОсталосьРаспределить;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуНаПроизводствоСборка(ДокументСсылкаЗаказНаПроизводство)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоПродукция.Ссылка.Организация КАК Организация,
	|	ЗаказНаПроизводствоПродукция.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводствоПродукция.Ссылка.Финиш КАК ДатаЗакрытия,
	|	&Период КАК Период,
	|	ЗаказНаПроизводствоПродукция.Ссылка.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоПродукция.Характеристика КАК Характеристика,
	|	ЗаказНаПроизводствоПродукция.Количество КАК КоличествоПлан,
	|	ЗаказНаПроизводствоПродукция.Спецификация КАК Спецификация,
	|	СпецификацииОперации.Операция,
	|	СпецификацииОперации.Операция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(СпецификацииОперации.НормаВремени, 0) / ЕСТЬNULL(СпецификацииОперации.КоличествоПродукции, 1) * ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				И ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК НормаВремени,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0) КАК Расценка
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Операции КАК СпецификацииОперации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.Учетная)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО СпецификацииОперации.Операция = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|		ПО ЗаказНаПроизводствоПродукция.Спецификация = СпецификацииОперации.Ссылка
	|ГДЕ
	|	ЗаказНаПроизводствоПродукция.Ссылка = &ДокументОснование
	|	И ЗаказНаПроизводствоПродукция.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказНаПроизводство);
	Запрос.УстановитьПараметр("Период", ?(ЗначениеЗаполнено(ДокументСсылкаЗаказНаПроизводство.Старт), ДокументСсылкаЗаказНаПроизводство.Старт, ТекущаяДатаСеанса()));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаИзРезультатаЗапроса);
	ЭтотОбъект.ВалютаДокумента = Справочники.ВидыЦен.Учетная.ВалютаЦены;
	
	ВыборкаИзРезультатаЗапроса.Сбросить();
	Операции.Очистить();
	Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
		НоваяСтрока = Операции.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИзРезультатаЗапроса);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// В обработчике события ОбработкаЗаполнения документа выполняется
// - заполнение документа по инвентаризации запасов на складе.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ВалютаДокумента = Константы.ВалютаУчета.Получить();
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказуПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказНаПроизводство")] = "ЗаполнитьПоЗаказуНаПроизводство";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
	
		Возврат;
		
	КонецЕсли;
	
	Если Закрыт Тогда
		
		ПроверяемыеРеквизиты.Добавить("ДатаЗакрытия");
	
	КонецЕсли;
		
КонецПроцедуры

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Операции.Итог("Стоимость");
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.СдельныйНаряд.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	УправлениеНебольшойФирмойСервер.ОтразитьНачисленияИУдержания(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьРасчетыСПерсоналом(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасы(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьСдельныеНаряды(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);

	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)

	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

#КонецОбласти

#КонецЕсли