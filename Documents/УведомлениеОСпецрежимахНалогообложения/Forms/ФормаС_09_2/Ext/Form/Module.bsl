
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ (Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка)) Тогда 
		Объект.Организация = Параметры.Организация;
		Если Параметры.Свойство("НалоговыйОрган") И ЗначениеЗаполнено(Параметры.НалоговыйОрган) Тогда 
			Объект.РегистрацияВИФНС = Параметры.НалоговыйОрган;
		Иначе
			Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЭтотОбъект.Заголовок = ЭтотОбъект.Заголовок + " (создание)";
	КонецЕсли;
	
	Макет = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("ФормаС_09_2");
	
	ПредставлениеСообщения = Новый ТабличныйДокумент;
	ПредставлениеСообщения.Вывести(Макет);
	
	ЗагрузитьДанные();
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакеты(ЭтотОбъект, "ФормаС_09_2Параметры");
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		ПриЗакрытииНаСервере();
	КонецЕсли;
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтаФорма, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СтраныМира") Тогда
		
		Страна = ВыбранноеЗначение;
		ДанныеСтраны = ПолучитьРеквизитыСтраныНаСервере(Страна);
		
		ПредставлениеСообщения.Области["ОКСМ"].Значение = ДанныеСтраны.Код;
		ПредставлениеСообщения.Области["ИНН_ЗАВИСИМОЙ"].Значение = "";
		ПредставлениеСообщения.Области["КПП_ЗАВИСИМОЙ"].Значение = "";
		
		Модифицированность = Истина;
		
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПредставлениеСообщенияВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ОтборПоИмениОбласти = Новый Структура("Имя", Область.Имя);
	Поля = ПоляСОсобымПорядкомЗаполнения.НайтиСтроки(ОтборПоИмениОбласти);
	Если Поля.Количество() > 0 Тогда
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка(Поля[0]);
	КонецЕсли;
	
	Если Область.Имя = "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ" Тогда 
		РегламентированнаяОтчетностьКлиент.ОткрытьФормуВыбораФИО(ЭтотОбъект, СтандартнаяОбработка, "ПредставлениеСообщения", "");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеСообщенияПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	Если Область.Имя = "ИНН_ЗАВИСИМОЙ" Тогда
		Если ЗначениеЗаполнено(Область.Значение) Тогда
			// выбран ИНН российской организации, код страны очищаем
			ПредставлениеСообщения.Области["ОКСМ"].Значение = "";
		КонецЕсли;
	ИначеЕсли Область.Имя = "ДАТА_ПОДПИСИ" Тогда
		Объект.ДатаПодписи = Область.Значение;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Сохранить(Команда)
	
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСообщения(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ТекстВопроса = "Сообщение изменено. Перед печатью необходимо сохранить изменения. Сохранить изменения?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьСообщенияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
	Иначе
		ПФ = СформироватьПечатнуюФорму();
		Если ПФ <> Неопределено Тогда 
			ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСообщенияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПФ = СформироватьПечатнуюФорму();
		Если ПФ <> Неопределено Тогда 
			ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотр(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = "Сообщение изменено. Перед печатью необходимо сохранить изменения. Сохранить изменения?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительныйПросмотрЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
		Возврат;
	ИначеЕсли Модифицированность Тогда 
		СохранитьДанные();
	КонецЕсли;
	
	МассивПечати = Новый Массив;
	МассивПечати.Добавить(Объект.Ссылка);
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.УведомлениеОСпецрежимахНалогообложения",
		"Уведомление", МассивПечати, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотрЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		МассивПечати = Новый Массив;
		МассивПечати.Добавить(Объект.Ссылка);
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Документ.УведомлениеОСпецрежимахНалогообложения",
			"Уведомление", МассивПечати, Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗагрузитьДанные()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ДатаПодписи = ТекущаяДатаСеанса(); 
		ПредставлениеСообщения.Области["ДАТА_ПОДПИСИ"].Значение = Объект.ДатаПодписи;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.РегистрацияВИФНС) Тогда
		УстановитьДанныеПоРегистрацииВИФНС();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации,ОГРН,ИННФЛ,ФИО,ТелДом";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
		
		Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
			ПредставлениеСообщения.Области["П_ИНН"].Значение = СведенияОбОрганизации.ИННЮЛ;
			ПредставлениеСообщения.Области["П_ОГРН"].Значение = СведенияОбОрганизации.ОГРН;
			ПредставлениеСообщения.Области["ОРГАНИЗАЦИЯ"].Значение = СведенияОбОрганизации.НаимЮЛПол;
			ПредставлениеСообщения.Области["П_КПП"].Значение = СведенияОбОрганизации.КППЮЛ;
			ПредставлениеСообщения.Области["ТЕЛЕФОН"].Значение = СведенияОбОрганизации.ТелОрганизации;
		Иначе
			ПредставлениеСообщения.Области["П_ИНН"].Значение = СведенияОбОрганизации.ИННФЛ;
			ПредставлениеСообщения.Области["П_ОГРНИП"].Значение = СведенияОбОрганизации.ОГРН;
			ПредставлениеСообщения.Области["ОРГАНИЗАЦИЯ"].Значение = СведенияОбОрганизации.ФИО;
			ПредставлениеСообщения.Области["ТЕЛЕФОН"].Значение = СведенияОбОрганизации.ТелДом;
		КонецЕсли;
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
		Для каждого КлючЗначение Из СтруктураПараметров Цикл
			Область = ПредставлениеСообщения.Области.Найти(КлючЗначение.Ключ);
			Если Область <> Неопределено Тогда			
				ПредставлениеСообщения.Области[КлючЗначение.Ключ].Значение = КлючЗначение.Значение;
			КонецЕсли; 
		КонецЦикла;	
	КонецЕсли; 
	
	СтруктураПараметров.Свойство("ПредставительИННФЛ", ПредставительИННФЛ);
	СтруктураПараметров.Свойство("ДАТА_ПОДПИСИ", Объект.ДатаПодписи);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт

	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_2;
		Объект.Дата = ТекущаяДатаСеанса() 
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПРИЗНАК_СООБЩЕНИЯ",                  ПредставлениеСообщения.Области["ПРИЗНАК_СООБЩЕНИЯ"].Значение);
	СтруктураПараметров.Вставить("ДАТА_СООБЩЕНИЯ",                     ПредставлениеСообщения.Области["ДАТА_СООБЩЕНИЯ"].Значение);
	СтруктураПараметров.Вставить("НАИМЕНОВАНИЕ_ЗАВИСИМОЙ_ОРГАНИЗАЦИИ", ПредставлениеСообщения.Области["НАИМЕНОВАНИЕ_ЗАВИСИМОЙ_ОРГАНИЗАЦИИ"].Значение);
	СтруктураПараметров.Вставить("ПРОЦЕНТ_УЧАСТИЯ",                    ПредставлениеСообщения.Области["ПРОЦЕНТ_УЧАСТИЯ"].Значение);
	СтруктураПараметров.Вставить("ИНН_ЗАВИСИМОЙ",                      ПредставлениеСообщения.Области["ИНН_ЗАВИСИМОЙ"].Значение);
	СтруктураПараметров.Вставить("КПП_ЗАВИСИМОЙ",                      ПредставлениеСообщения.Области["КПП_ЗАВИСИМОЙ"].Значение);
	СтруктураПараметров.Вставить("ОКСМ",                               ПредставлениеСообщения.Области["ОКСМ"].Значение);
	СтруктураПараметров.Вставить("ПРИЛОЖЕНО_ЛИСТОВ",                   ПредставлениеСообщения.Области["ПРИЛОЖЕНО_ЛИСТОВ"].Значение);
	СтруктураПараметров.Вставить("ДАТА_ПОДПИСИ",                       ПредставлениеСообщения.Области["ДАТА_ПОДПИСИ"].Значение);
	СтруктураПараметров.Вставить("ПРИЗНАК_НП_ПОДВАЛ",                  ПредставлениеСообщения.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение);
	СтруктураПараметров.Вставить("ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ",             ПредставлениеСообщения.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение);
	СтруктураПараметров.Вставить("ТЕЛЕФОН",                            ПредставлениеСообщения.Области["ТЕЛЕФОН"].Значение);
	СтруктураПараметров.Вставить("EMAIL_ПОДПИСАНТА",                   ПредставлениеСообщения.Области["EMAIL_ПОДПИСАНТА"].Значение);
	СтруктураПараметров.Вставить("П_ИНН",                              ПредставлениеСообщения.Области["П_ИНН"].Значение);
	СтруктураПараметров.Вставить("П_КПП",                              ПредставлениеСообщения.Области["П_КПП"].Значение);
	СтруктураПараметров.Вставить("ОРГАНИЗАЦИЯ",                        ПредставлениеСообщения.Области["ОРГАНИЗАЦИЯ"].Значение);
	СтруктураПараметров.Вставить("П_ОГРН",                             ПредставлениеСообщения.Области["П_ОГРН"].Значение);
	СтруктураПараметров.Вставить("П_ОГРНИП",                           ПредставлениеСообщения.Области["П_ОГРНИП"].Значение);
	СтруктураПараметров.Вставить("ПредставительИННФЛ",                 ПредставительИННФЛ);
	
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Документ.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	Документ.Записать();
	ЗначениеВДанныеФормы(Документ, Объект);
	Модифицированность = Ложь;
	ЭтотОбъект.Заголовок = СтрЗаменить(ЭтотОбъект.Заголовок, " (создание)", "");

КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаСервере
Функция СформироватьПечатнуюФорму()
	СохранитьДанные();
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Возврат Документ.ПечатьСразу();
КонецФункции

&НаСервере
Процедура УстановитьПредставителяПоФизЛицу(Физлицо)
	Если ЗначениеЗаполнено(Физлицо) Тогда 
		ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(Физлицо, , Объект.ДатаПодписи);
		Объект.ПодписантФамилия = СокрЛП(ДанныеПредставителя.Фамилия);
		Объект.ПодписантИмя = СокрЛП(ДанныеПредставителя.Имя);
		Объект.ПодписантОтчество = СокрЛП(ДанныеПредставителя.Отчество);
		ПредставлениеСообщения.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = СокрЛП(Объект.ПодписантФамилия + " " + Объект.ПодписантИмя + " " + Объект.ПодписантОтчество);
	Иначе
		Объект.ПодписантФамилия = "";
		Объект.ПодписантИмя = "";
		Объект.ПодписантОтчество = "";
		ПредставлениеСообщения.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставителяПоОрганизации()
	Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьДанныеРуководителя(Объект);
	ПредставлениеСообщения.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = СокрЛП(Объект.ПодписантФамилия + " " + Объект.ПодписантИмя + " " + Объект.ПодписантОтчество);
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	
	Организация = Объект.Организация;
	РегистрацияВИФНС = Объект.РегистрацияВИФНС;
	
	ПредставлениеСообщения.Область("КОД_НО").Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "Код");
	ПредставлениеСообщения.Области["EMAIL_ПОДПИСАНТА"].Значение = "";
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияВИФНС, "Представитель,КПП,ДокументПредставителя");
	ПредставлениеСообщения.Области["П_КПП"].Значение = Реквизиты.КПП;
	ЭтоИП = (Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация));
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		ПризнакПодписанта = ?(ЭтоИП,"2","4");
		ПредставлениеСообщения.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = ПризнакПодписанта;
		ПредставлениеСообщения.Области["П_КПП"].Значение = Реквизиты.КПП;
		ПредставлениеСообщения.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение = Реквизиты.ДокументПредставителя;
		УстановитьПредставителяПоФизЛицу(Реквизиты.Представитель);
	Иначе
		УстановитьПредставителяПоОрганизации();
		ПризнакПодписанта = ?(ЭтоИП,"1","3");
		ПредставлениеСообщения.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = ПризнакПодписанта;
		ПредставлениеСообщения.Области["П_КПП"].Значение = Реквизиты.КПП;
		ПредставлениеСообщения.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка(Инфо)
	Если Инфо.Обработчик = "ОбработкаДаты" Тогда
		ОбработкаДаты(Инфо);
	ИначеЕсли Инфо.Обработчик = "ОбработкаСписка" Тогда
		ОбработкаСписка(Инфо);
	ИначеЕсли Инфо.Обработчик = "ОбработкаКодаНО" Тогда
		ОбработкаКодаНО(Инфо);
	ИначеЕсли Инфо.Обработчик = "ОбработкаКодаОКСМ" Тогда
		ОбработкаКодаОКСМ(Инфо);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаДаты(Инфо)
	
	ИмяПоля = Инфо.Имя;
	ДатаИсх = Неопределено;
	ДатаИсх = ПредставлениеСообщения.Область(ИмяПоля).Значение;
		
	ПараметрыДаты = Новый Структура("ДатаПодписи", ДатаИсх);
	ФормаДаты = ПолучитьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбораДаты", ПараметрыДаты, ЭтотОбъект, ЭтотОбъект);
	ФормаДаты.Заголовок = Инфо.ИмяСписка;
	
	ДополнительныеПараметры = Новый Структура("ИмяПоля, Инфо, ФормаДаты", ИмяПоля, Инфо, ФормаДаты);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаДатыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ФормаДаты.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	ФормаДаты.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаДаты.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаДатыЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
	ИмяПоля = ДополнительныеПараметры.ИмяПоля;
	Инфо = ДополнительныеПараметры.Инфо;
	ФормаДаты = ДополнительныеПараметры.ФормаДаты;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДатаРезультат = ФормаДаты.Дата;
		
		Если ЗначениеЗаполнено(ДатаРезультат) Тогда 
			ПредставлениеСообщения.Область(ИмяПоля).Значение = ДатаРезультат;
		Иначе
			ПредставлениеСообщения.Область(ИмяПоля).Значение = "";
		КонецЕсли;
		
		Если Инфо.Имя = "ДАТА_ПОДПИСИ" Тогда
			Объект.ДатаПодписи = ДатаРезультат;
			УстановитьДанныеПоРегистрацииВИФНС();
		КонецЕсли;
		
		Модифицированность = Истина;
	КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСписка(Инфо)
	ИмяНестандартнойОбласти = Инфо.Имя;
	НазваниеСписка = Инфо.ИмяФормы;
	
	СтруктураОтбора = Новый Структура("ИмяСписка", Инфо.ИмяСписка);
	Строки = ТаблицаЗначенийПредопределенныхРеквизитов.НайтиСтроки(СтруктураОтбора);
	ЗагружаемыеКоды.Очистить();
	Для Каждого Строка Из Строки Цикл 
		НоваяСтрока = ЗагружаемыеКоды.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          НазваниеСписка);
	ПараметрыФормы.Вставить("ТаблицаЗначений",    ЗагружаемыеКоды);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура("Код", ПредставлениеСообщения.Области[ИмяНестандартнойОбласти].Значение));
	
	ДополнительныеПараметры = Новый Структура("ИмяНестандартнойОбласти", ИмяНестандартнойОбласти);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаСпискаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСпискаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ИмяНестандартнойОбласти = ДополнительныеПараметры.ИмяНестандартнойОбласти;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОбластиДоп = "";
	РезультатВыбораКод = СокрЛП(РезультатВыбора.Код);
	
	ПредставлениеСообщения.Области[ИмяНестандартнойОбласти].Значение = РезультатВыбораКод;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКодаНО(Инфо)
	ПараметрыРегистрации = Новый Структура("Владелец", Объект.Организация);
	ПараметрыФормы = Новый Структура("Отбор", ПараметрыРегистрации);
	
	Форма = ПолучитьФорму("Справочник.РегистрацииВНалоговомОргане.ФормаВыбора", ПараметрыФормы, ЭтотОбъект);
	ДополнительныеПараметры = Новый Структура("Инфо", Инфо);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаКодаНОЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	Форма.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКодаНОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Инфо = ДополнительныеПараметры.Инфо;
	
	Если Результат <> Неопределено Тогда 
		Объект.РегистрацияВИФНС = Результат;
		ПредставлениеСообщения.Области[Инфо.Имя].Значение = КодНалоговогоОргана();
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция КодНалоговогоОргана()
	УстановитьДанныеПоРегистрацииВИФНС();
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код");
КонецФункции

&НаКлиенте
Процедура ОбработкаКодаОКСМ(Инфо)
	
	ПараметрыОКСМ = Новый Структура;
	ПараметрыОКСМ.Вставить("РежимВыбора", Истина);
	ПараметрыОКСМ.Вставить("ТолькоДанныеКлассификатора", Ложь);
	
	ОткрытьФорму("Справочник.СтраныМира.ФормаСписка", ПараметрыОКСМ, ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры // ОбработкаКодаОКСМ()

&НаСервере
Функция ПолучитьРеквизитыСтраныНаСервере(Страна)

	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Страна, "Код");
	
КонецФункции // ПолучитьКодСтраныНаСервере()

&НаСервере
Процедура ПриЗакрытииНаСервере()
	СохранитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Отправка в ФНС

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

#КонецОбласти