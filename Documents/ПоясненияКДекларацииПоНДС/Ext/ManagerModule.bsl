#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область СпискиКонтрагентов

Функция РеквизитыКонтрагентов() Экспорт
	Возврат "ИНН";
КонецФункции

Функция ПредставлениеКонтрагента(Строка, Представление) Экспорт
	
	ПредставлениеИНН = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1'"), Строка.ИНН);
	
	Если ЗначениеЗаполнено(Представление) Тогда
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 (%2)'"), ПредставлениеИНН, Представление);
	Иначе
		Возврат ПредставлениеИНН;
	КонецЕсли;
	
КонецФункции

Функция КонтрагентыПоСпискуИНН(ТаблицаИННиКПП) Экспорт
	
	КонтрагентыДоступны = ЭлектронныйДокументооборотСКонтролирующимиОрганами.РеквизитыСправочникаКонтрагентовДоступны();
	Если НЕ КонтрагентыДоступны Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КППУказан = ТаблицаИННиКПП.Колонки.Найти("КПП") <> Неопределено;
	
	Если КППУказан Тогда
		ТаблицаИННиКППДляЗапроса = ТаблицаИННиКПП.СкопироватьКолонки("ИНН, КПП");
	Иначе
		ТаблицаИННиКППДляЗапроса = ТаблицаИННиКПП.СкопироватьКолонки("ИНН");
		ТаблицаИННиКППДляЗапроса.Колонки.Добавить("КПП", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(9)));
	КонецЕсли;
	
	Для Каждого СтрокаТаблицыИННиКПП Из ТаблицаИННиКПП Цикл
		Если СокрЛП(СтрокаТаблицыИННиКПП.ИНН) <> "" Тогда
			СтрокаТаблицыИННиКППДляЗапроса = ТаблицаИННиКППДляЗапроса.Добавить();
			СтрокаТаблицыИННиКППДляЗапроса.ИНН = СокрЛП(СтрокаТаблицыИННиКПП.ИНН);
			
			Если КППУказан Тогда
				СтрокаТаблицыИННиКППДляЗапроса.КПП = СокрЛП(СтрокаТаблицыИННиКПП.КПП);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("ИННиКПП", ТаблицаИННиКППДляЗапроса);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИННиКПП.ИНН КАК ИНН,
	|	ТаблицаИННиКПП.КПП КАК КПП
	|ПОМЕСТИТЬ ТаблицаИННиКПП
	|ИЗ
	|	&ИННиКПП КАК ТаблицаИННиКПП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИННиКПП.ИНН КАК ИНН,
	|	Контрагенты.КПП КАК КПП,
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Контрагенты.Представление КАК КонтрагентПредставление
	|ИЗ
	|	ТаблицаИННиКПП КАК ТаблицаИННиКПП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ТаблицаИННиКПП.ИНН = Контрагенты.ИНН
	|			И (ТаблицаИННиКПП.КПП = Контрагенты.КПП
	|				ИЛИ ТаблицаИННиКПП.КПП = """")";
	
	ТаблицаКонтрагентов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаКонтрагентов;
	
КонецФункции

Функция СведенияОКонтрагентеПоСсылке(Контрагент) Экспорт
	
	КонтрагентыДоступны = ЭлектронныйДокументооборотСКонтролирующимиОрганами.РеквизитыСправочникаКонтрагентовДоступны();
	
	Если КонтрагентыДоступны Тогда
		ИНН = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ИНН");
		КПП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "КПП");
		Возврат СведенияОКонтрагентеПоИНН(ИНН, КПП);
	Иначе
		ИНН = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ИНН");
		Возврат СведенияОКонтрагентеПоИНН(ИНН);
	КонецЕсли;
	
КонецФункции

Функция СведенияОКонтрагентеПоИНН(ИНН, КПП = "") Экспорт
	
	ТаблицаИННиКПП = Документы.ПоясненияКДекларацииПоНДС.ПустаяСсылка().Контрагенты.ВыгрузитьКолонки("ИНН, КПП");
	СтрокаТаблицы = ТаблицаИННиКПП.Добавить();
	СтрокаТаблицы.ИНН = ИНН;
	СтрокаТаблицы.КПП = КПП;
	
	ТаблицаКонтрагентов = КонтрагентыПоСпискуИНН(ТаблицаИННиКПП);
	
	Возврат СведенияОКонтрагентеПоТаблицеКонтрагентов(ИНН, ТаблицаКонтрагентов, КПП);
	
КонецФункции

Функция СведенияОКонтрагентеПоТаблицеКонтрагентов(ИНН, ТаблицаКонтрагентов, КПП = "") Экспорт
	
	Сведения = Новый Структура("ИНН, КПП, Представление, Контрагенты");
	Сведения.ИНН = ИНН;
	Сведения.КПП = КПП;
	Сведения.Контрагенты = Новый СписокЗначений();
	
	Если ТаблицаКонтрагентов <> Неопределено Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("ИНН", ИНН);
		 
		Если ЗначениеЗаполнено(КПП) Тогда
			Отбор.Вставить("КПП", КПП);
		КонецЕсли;
		
		СтрокиКонтрагента = ТаблицаКонтрагентов.НайтиСтроки(Отбор);
		
		МассивПредставлений = Новый Массив;
		Для Каждого СтрокаКонтрагента Из СтрокиКонтрагента Цикл
			Сведения.Контрагенты.Добавить(СтрокаКонтрагента.Контрагент, СтрокаКонтрагента.КонтрагентПредставление);
			МассивПредставлений.Добавить(СтрокаКонтрагента.КонтрагентПредставление);
		КонецЦикла;
		ПредставлениеКонтрагента = СтрСоединить(МассивПредставлений, ";");
	КонецЕсли;
	
	Сведения.Представление = ПредставлениеКонтрагента(Сведения, ПредставлениеКонтрагента);
	
	Возврат Сведения;
	
КонецФункции

#КонецОбласти

#Область СпискиДокументовОплаты

Функция РеквизитыДокументовОплаты() Экспорт
	Возврат "Номер, Дата";
КонецФункции

Функция ПредставлениеДокументаОплаты(Строка) Экспорт
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											НСтр("ru = '%1 от %2'"), Строка.Номер, Формат(Строка.Дата, "ДЛФ=D"));
КонецФункции

#КонецОбласти

#Область СпискиДатыПринятияНаУчет

Функция РеквизитыДатПринятияНаУчет() Экспорт
	Возврат "ДатаПринятияНаУчет";
КонецФункции

Функция ПредставлениеДатыПринятияНаУчет(Строка) Экспорт
	Возврат Формат(Строка.ДатаПринятияНаУчет, "ДЛФ=D");
КонецФункции

#КонецОбласти

#Область СпискиПосредническойДеятельности

Функция РеквизитыПосредническойДеятельности() Экспорт
	Возврат "НомерСчетаФактуры, ДатаСчетаФактуры, КодВалюты, Стоимость, СуммаНДС,
		|РазницаСтоимостиУменьшение, РазницаСтоимостиУвеличение, РазницаСуммыНДСУменьшение, РазницаСуммыНДСУвеличение,
		|ПродавецИНН";
КонецФункции

#КонецОбласти

Функция НаименованиеОтветаПоТребованию(Требование) Экспорт
	
	Наименование 			= НСтр("ru = 'Пояснения к декларации по НДС %ПредставлениеДекларации%'");
	ПредставлениеДекларации = Справочники.ДокументыРеализацииПолномочийНалоговыхОрганов.ПредставлениеДекларации(Требование);
	НаименованиеОтвета		= СтрЗаменить(Наименование, "%ПредставлениеДекларации%", ПредставлениеДекларации);
		
	Возврат НаименованиеОтвета;
	
КонецФункции

Функция ОтправленныеРанееСтроки(Требование) Экспорт
	
	ОтправленныеСтроки = Новый Структура();
	ОтправленныеСтроки.Вставить("Раздел8", Новый Соответствие());
	ОтправленныеСтроки.Вставить("Раздел8_1", Новый Соответствие());
	ОтправленныеСтроки.Вставить("Раздел9", Новый Соответствие());
	ОтправленныеСтроки.Вставить("Раздел9_1", Новый Соответствие());
	ОтправленныеСтроки.Вставить("Раздел10", Новый Соответствие());
	ОтправленныеСтроки.Вставить("Раздел11", Новый Соответствие());
	ОтправленныеСтроки.Вставить("Раздел12", Новый Соответствие());
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Ответы", Справочники.ДокументыРеализацииПолномочийНалоговыхОрганов.ОтправленныеОтветыНаТребованиеПоясненийКДекларацииНДС(Требование));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	""Раздел8"" КАК Раздел,
	|	ОтветНаТребование.НомерСтрокиДекларации КАК НомерСтрокиДекларации,
	|	ОтветНаТребование.Ссылка КАК ОтветНаТребование
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.КнигаПокупок КАК ОтветНаТребование
	|ГДЕ
	|	ОтветНаТребование.Ссылка В(&Ответы)
	|	И ОтветНаТребование.РезультатПроверки <> ЗНАЧЕНИЕ(Перечисление.РезультатПроверкиСтрокиДекларации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Раздел8_1"",
	|	ОтветНаТребование.НомерСтрокиДекларации,
	|	ОтветНаТребование.Ссылка
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.КнигаПокупокДл КАК ОтветНаТребование
	|ГДЕ
	|	ОтветНаТребование.Ссылка В(&Ответы)
	|	И ОтветНаТребование.РезультатПроверки <> ЗНАЧЕНИЕ(Перечисление.РезультатПроверкиСтрокиДекларации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Раздел9"",
	|	ОтветНаТребование.НомерСтрокиДекларации,
	|	ОтветНаТребование.Ссылка
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.КнигаПродаж КАК ОтветНаТребование
	|ГДЕ
	|	ОтветНаТребование.Ссылка В(&Ответы)
	|	И ОтветНаТребование.РезультатПроверки <> ЗНАЧЕНИЕ(Перечисление.РезультатПроверкиСтрокиДекларации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Раздел9_1"",
	|	ОтветНаТребование.НомерСтрокиДекларации,
	|	ОтветНаТребование.Ссылка
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.КнигаПродажДл КАК ОтветНаТребование
	|ГДЕ
	|	ОтветНаТребование.Ссылка В(&Ответы)
	|	И ОтветНаТребование.РезультатПроверки <> ЗНАЧЕНИЕ(Перечисление.РезультатПроверкиСтрокиДекларации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Раздел10"",
	|	ОтветНаТребование.НомерСтрокиДекларации,
	|	ОтветНаТребование.Ссылка
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.ЖурналУчетаВыставленныхСчетовФактур КАК ОтветНаТребование
	|ГДЕ
	|	ОтветНаТребование.Ссылка В(&Ответы)
	|	И ОтветНаТребование.РезультатПроверки <> ЗНАЧЕНИЕ(Перечисление.РезультатПроверкиСтрокиДекларации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Раздел11"",
	|	ОтветНаТребование.НомерСтрокиДекларации,
	|	ОтветНаТребование.Ссылка
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.ЖурналУчетаПолученныхСчетовФактур КАК ОтветНаТребование
	|ГДЕ
	|	ОтветНаТребование.Ссылка В(&Ответы)
	|	И ОтветНаТребование.РезультатПроверки <> ЗНАЧЕНИЕ(Перечисление.РезультатПроверкиСтрокиДекларации.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОтправленныеСтроки[Выборка.Раздел].Вставить(Выборка.НомерСтрокиДекларации, Выборка.ОтветНаТребование);
	КонецЦикла;
	
	// В разделе 12 нет ссылки на номер строки декларации,
	// поэтому ее обрабатываем отдельно, в качестве ключа используя номер и дату счета-фактуры
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Ответы", Справочники.ДокументыРеализацииПолномочийНалоговыхОрганов.ОтправленныеОтветыНаТребованиеПоясненийКДекларацииНДС(Требование));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	""Раздел12"" КАК Раздел,
	|	ОтветНаТребование.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ОтветНаТребование.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ОтветНаТребование.Ссылка КАК ОтветНаТребование
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.ВыставленныеСчетаФактурыНеплательщиковНДС КАК ОтветНаТребование
	|ГДЕ
	|	ОтветНаТребование.Ссылка В(&Ответы)
	|	И ОтветНаТребование.РезультатПроверки <> ЗНАЧЕНИЕ(Перечисление.РезультатПроверкиСтрокиДекларации.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		КлючСтроки = КлючСтрокиРаздела12(Выборка.НомерСчетаФактуры, Выборка.ДатаСчетаФактуры);
		ОтправленныеСтроки[Выборка.Раздел].Вставить(КлючСтроки, Выборка.ОтветНаТребование);
	КонецЦикла;
	
	Возврат ОтправленныеСтроки;
	
КонецФункции

Функция ДанныеПоясненияКДекларацииПоНДС(Пояснение) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("ОтветНаТребование", Пояснение);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоясненияКДекларацииПоНДСКонтрагенты.ИдентификаторЗначения,
	|	ПоясненияКДекларацииПоНДСКонтрагенты.ИНН
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.Контрагенты КАК ПоясненияКДекларацииПоНДСКонтрагенты
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСКонтрагенты.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоясненияКДекларацииПоНДСДокументыОплаты.ИдентификаторЗначения,
	|	ПоясненияКДекларацииПоНДСДокументыОплаты.Номер,
	|	ПоясненияКДекларацииПоНДСДокументыОплаты.Дата
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.ДокументыОплаты КАК ПоясненияКДекларацииПоНДСДокументыОплаты
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСДокументыОплаты.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоясненияКДекларацииПоНДСДатыПринятияНаУчет.ИдентификаторЗначения,
	|	ПоясненияКДекларацииПоНДСДатыПринятияНаУчет.ДатаПринятияНаУчет
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.ДатыПринятияНаУчет КАК ПоясненияКДекларацииПоНДСДатыПринятияНаУчет
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСДатыПринятияНаУчет.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.ИдентификаторЗначения,
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.НомерСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.ДатаСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.КодВалюты,
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.Стоимость,
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.СуммаНДС,
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.РазницаСтоимостиУменьшение,
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.РазницаСтоимостиУвеличение,
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.РазницаСуммыНДСУменьшение,
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.РазницаСуммыНДСУвеличение,
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.ПродавецИНН
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.ПосредническаяДеятельность КАК ПоясненияКДекларацииПоНДСПосредническаяДеятельность
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСПосредническаяДеятельность.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоясненияКДекларацииПоНДС.Организация КАК Организация,
	|	ЕСТЬNULL(ПоясненияКДекларацииПоНДС.НалоговыйОрган.Код, """") КАК КодНалоговогоОргана
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС КАК ПоясненияКДекларацииПоНДС
	|ГДЕ
	|	ПоясненияКДекларацииПоНДС.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.РезультатПроверки,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерСтрокиДекларации,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДатаСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДатаИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДатаКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерТаможеннойДекларации,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.КодВалюты,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.Стоимость,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.СуммаНДС,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.КодВидаОперации,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДокументОплаты,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДатаПринятияНаУчет,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.Продавец,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ПосредникИНН,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДатаСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДатаИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДатаКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДатаИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.НомерТаможеннойДекларацииРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.КодВалютыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.СтоимостьРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.СуммаНДСРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.КодВидаОперацииРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДокументОплатыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ДатаПринятияНаУчетРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ПродавецРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.ПосредникИННРасхождение
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.КнигаПокупок КАК ПоясненияКДекларацииПоНДСКнигаПокупок
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСКнигаПокупок.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.РезультатПроверки,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерСтрокиДекларации,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДатаСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДатаИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДатаКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерТаможеннойДекларации,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.КодВалюты,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.Стоимость,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.СуммаНДС,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.КодВидаОперации,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДокументОплаты,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДатаПринятияНаУчет,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.Продавец,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ПосредникИНН,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДатаСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДатаИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДатаКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДатаИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.НомерТаможеннойДекларацииРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.КодВалютыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.СтоимостьРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.СуммаНДСРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.КодВидаОперацииРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДокументОплатыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ДатаПринятияНаУчетРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ПродавецРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.ПосредникИННРасхождение
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.КнигаПокупокДл КАК ПоясненияКДекларацииПоНДСКнигаПокупокДл
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСКнигаПокупокДл.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.РезультатПроверки,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.НомерСтрокиДекларации,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.НомерСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ДатаСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.НомерИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ДатаИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.НомерКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ДатаКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.КодВалюты,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.СтоимостьВсего,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.Стоимость18,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.Стоимость10,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.Стоимость0,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.СуммаНДС18,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.СуммаНДС10,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.СтоимостьОсвобождаемая,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.КодВидаОперации,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ДокументОплаты,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.Покупатель,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ПосредникИНН,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.НомерСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ДатаСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.НомерИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ДатаИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.НомерКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ДатаКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.НомерИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ДатаИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.КодВалютыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.СтоимостьВсегоРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.Стоимость18Расхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.Стоимость10Расхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.Стоимость0Расхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.СуммаНДС18Расхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.СуммаНДС10Расхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.СтоимостьОсвобождаемаяРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.КодВидаОперацииРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ДокументОплатыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ПокупательРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.ПосредникИННРасхождение
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.КнигаПродаж КАК ПоясненияКДекларацииПоНДСКнигаПродаж
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСКнигаПродаж.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.РезультатПроверки,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.НомерСтрокиДекларации,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.НомерСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ДатаСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.НомерИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ДатаИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.НомерКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ДатаКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.КодВалюты,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.СтоимостьВсего,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.Стоимость18,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.Стоимость10,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.Стоимость0,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.СуммаНДС18,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.СуммаНДС10,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.СтоимостьОсвобождаемая,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.КодВидаОперации,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ДокументОплаты,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.Покупатель,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ПосредникИНН,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.НомерСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ДатаСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.НомерИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ДатаИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.НомерКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ДатаКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.НомерИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ДатаИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.КодВалютыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.СтоимостьВсегоРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.Стоимость18Расхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.Стоимость10Расхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.Стоимость0Расхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.СуммаНДС18Расхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.СуммаНДС10Расхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.СтоимостьОсвобождаемаяРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.КодВидаОперацииРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ДокументОплатыРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ПокупательРасхождение,
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.ПосредникИННРасхождение
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.КнигаПродажДл КАК ПоясненияКДекларацииПоНДСКнигаПродажДл
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСКнигаПродажДл.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.РезультатПроверки,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.НомерСтрокиДекларации,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.НомерСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ДатаСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.НомерИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ДатаИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.КодВидаОперации,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ПокупательИНН,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ПосредническаяДеятельность,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.НомерСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ДатаСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.НомерИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ДатаИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.НомерКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ДатаКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.НомерИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.КодВидаОперацииРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ПокупательИННРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.ПосредническаяДеятельностьРасхождение
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.ЖурналУчетаВыставленныхСчетовФактур КАК ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСЖурналУчетаВыставленныхСчетовФактур.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.НомерСтрокиДекларации,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.РезультатПроверки,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.НомерСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.ДатаСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.НомерИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.ДатаИсправленияСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.КодВидаСделки,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.КодВалюты,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.КодВидаОперации,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.ПродавецИНН,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.СубкомиссионерИНН,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.Стоимость,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.СуммаНДС,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.РазницаСтоимостиУменьшение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.РазницаСтоимостиУвеличение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.РазницаСуммыНДСУменьшение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.РазницаСуммыНДСУвеличение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.НомерСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.ДатаСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.НомерИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.ДатаИсправленияСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.НомерКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.ДатаКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.НомерИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.КодВидаСделкиРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.КодВалютыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.КодВидаОперацииРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.ПродавецИННРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.СтоимостьРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.СубкомиссионерИННРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.СуммаНДСРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.РазницаСтоимостиУменьшениеРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.РазницаСтоимостиУвеличениеРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.РазницаСуммыНДСУменьшениеРасхождение,
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.РазницаСуммыНДСУвеличениеРасхождение
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.ЖурналУчетаПолученныхСчетовФактур КАК ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСЖурналУчетаПолученныхСчетовФактур.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.НомерСтроки,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.РезультатПроверки,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.НомерСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.ДатаСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.КодВалюты,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.ПокупательИНН,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.СтоимостьБезНДС,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.СуммаНДС,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.Стоимость,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.НомерСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.ДатаСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.КодВалютыРасхождение,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.ПокупательИННРасхождение,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.СтоимостьБезНДСРасхождение,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.СуммаНДСРасхождение,
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.СтоимостьРасхождение
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.ВыставленныеСчетаФактурыНеплательщиковНДС КАК ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСВыставленныеСчетаФактурыНеплательщиковНДС.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоясненияКДекларацииПоНДССведКС.НомерСтроки,
	|	ПоясненияКДекларацииПоНДССведКС.НомКС,
	|	ПоясненияКДекларацииПоНДССведКС.ПоясненКС
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.СведКС КАК ПоясненияКДекларацииПоНДССведКС
	|ГДЕ
	|	ПоясненияКДекларацииПоНДССведКС.Ссылка = &ОтветНаТребование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.НомерСтроки,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.РезультатПроверки,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.НомерСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.ДатаСчетаФактуры,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.СтоимостьВсего,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.Раздел,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.ПокупательИНН,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.ПокупательИННРасхождение,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.ПосредникИНН,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.ПосредникИННРасхождение,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.КодВидаОперации,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.КодВидаОперацииРасхождение,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.НомерСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.ДатаСчетаФактурыРасхождение,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.СтоимостьВсегоРасхождение,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.РазделРасхождение,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.СтоимостьРубВсего,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.СтоимостьРубВсегоРасхождение,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.ПокупательКПП,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.ПокупательКППРасхождение,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.ПосредникКПП,
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.ПосредникКППРасхождение
	|ИЗ
	|	Документ.ПоясненияКДекларацииПоНДС.НетКнигаПрод КАК ПоясненияКДекларацииПоНДСНетКнигаПрод
	|ГДЕ
	|	ПоясненияКДекларацииПоНДСНетКнигаПрод.Ссылка = &ОтветНаТребование";
	
	ДанныеПоясненияКДекларацииПоНДС = Новый Структура();
	
	Результат = Запрос.ВыполнитьПакет();
	Контрагенты = Результат.Получить(0).Выгрузить();
	Контрагенты.Индексы.Добавить("ИдентификаторЗначения");
	ДанныеПоясненияКДекларацииПоНДС.Вставить("Контрагенты", Контрагенты);
	
	ДокументыОплаты = Результат.Получить(1).Выгрузить();
	ДокументыОплаты.Индексы.Добавить("ИдентификаторЗначения");
	ДанныеПоясненияКДекларацииПоНДС.Вставить("ДокументыОплаты", ДокументыОплаты);
	
	ДатыПринятияНаУчет = Результат.Получить(2).Выгрузить();
	ДатыПринятияНаУчет.Индексы.Добавить("ИдентификаторЗначения");
	ДанныеПоясненияКДекларацииПоНДС.Вставить("ДатыПринятияНаУчет", ДатыПринятияНаУчет);
	
	ПосредническаяДеятельность = Результат.Получить(3).Выгрузить();
	ПосредническаяДеятельность.Индексы.Добавить("ИдентификаторЗначения");
	ДанныеПоясненияКДекларацииПоНДС.Вставить("ПосредническаяДеятельность", ПосредническаяДеятельность);
	
	Требование = Результат.Получить(4).Выбрать();
	Если Требование.Следующий() Тогда
		ДанныеПоясненияКДекларацииПоНДС.Вставить("Организация", Требование.Организация);
		ДанныеПоясненияКДекларацииПоНДС.Вставить("КодНалоговогоОргана", Требование.КодНалоговогоОргана);
	КонецЕсли;
	
	ДанныеПоясненияКДекларацииПоНДС.Вставить("Раздел8", Результат.Получить(5).Выгрузить());
	ДанныеПоясненияКДекларацииПоНДС.Вставить("Раздел8_1", Результат.Получить(6).Выгрузить());
	ДанныеПоясненияКДекларацииПоНДС.Вставить("Раздел9", Результат.Получить(7).Выгрузить());
	ДанныеПоясненияКДекларацииПоНДС.Вставить("Раздел9_1", Результат.Получить(8).Выгрузить());
	ДанныеПоясненияКДекларацииПоНДС.Вставить("Раздел10", Результат.Получить(9).Выгрузить());
	ДанныеПоясненияКДекларацииПоНДС.Вставить("Раздел11", Результат.Получить(10).Выгрузить());
	ДанныеПоясненияКДекларацииПоНДС.Вставить("Раздел12", Результат.Получить(11).Выгрузить());
	ДанныеПоясненияКДекларацииПоНДС.Вставить("СведКС", Результат.Получить(12).Выгрузить());
	ДанныеПоясненияКДекларацииПоНДС.Вставить("НетКнигаПрод", Результат.Получить(13).Выгрузить());
	ДанныеПоясненияКДекларацииПоНДС.Вставить("ПояснИнОсн", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пояснение, "ПояснИнОсн"));
	
	ДанныеПоясненияКДекларацииПоНДС.Раздел12.Колонки.Добавить("КлючСтроки", Новый ОписаниеТипов("Строка"));
	Для Каждого СтрокаРаздела12 Из ДанныеПоясненияКДекларацииПоНДС.Раздел12 Цикл
		СтрокаРаздела12.КлючСтроки = КлючСтрокиРаздела12(СтрокаРаздела12.НомерСчетаФактуры, СтрокаРаздела12.ДатаСчетаФактуры);
	КонецЦикла;
	
	Возврат ДанныеПоясненияКДекларацииПоНДС;
	
КонецФункции

Процедура ОчиститьПустыеСтроки(ПоясненияКДекларацииПоНДС) Экспорт
	
	Если ЗначениеЗаполнено(ПоясненияКДекларацииПоНДС) Тогда
		
		ПояснениеОбъект = ПоясненияКДекларацииПоНДС.ПолучитьОбъект();
		ТабличныеЧасти = Новый Структура("КнигаПокупок,КнигаПокупокДл,КнигаПродаж,КнигаПродажДл,ЖурналУчетаВыставленныхСчетовФактур,ЖурналУчетаПолученныхСчетовФактур,ВыставленныеСчетаФактурыНеплательщиковНДС");
		
		Для Каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
			СтрокиДляУдаления = ПояснениеОбъект[ТабличнаяЧасть.Ключ].НайтиСтроки(Новый Структура("РезультатПроверки", Перечисления.РезультатПроверкиСтрокиДекларации.ПустаяСсылка()));
			Для Каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл
				ПояснениеОбъект[ТабличнаяЧасть.Ключ].Удалить(ПояснениеОбъект[ТабличнаяЧасть.Ключ].Индекс(СтрокаДляУдаления));
			КонецЦикла;
		КонецЦикла;
		
		ПояснениеОбъект.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТаблицаРаздела8() Экспорт
	
	Раздел8 = Новый ТаблицаЗначений;
		
	Раздел8.Колонки.Добавить("НомерПор", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
	
	Раздел8.Колонки.Добавить("НомСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Раздел8.Колонки.Добавить("ДатаСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел8.Колонки.Добавить("НомИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	Раздел8.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел8.Колонки.Добавить("НомКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Раздел8.Колонки.Добавить("ДатаКСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел8.Колонки.Добавить("НомИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	Раздел8.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел8.Колонки.Добавить("НомТД", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Раздел8.Колонки.Добавить("ОКВ", ОбщегоНазначения.ОписаниеТипаСтрока(3));
	
	Раздел8.Колонки.Добавить("СтоимПокупВ", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел8.Колонки.Добавить("СумНДСВыч", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	
	Раздел8.Колонки.Добавить("СпрКодОш", Новый ОписаниеТипов("Структура"));
	
	Раздел8.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	
	Раздел8.Колонки.Добавить("ДокПдтвУпл", Новый ОписаниеТипов("Массив")); // массив СтруктураДокПдтвУпл()
	Раздел8.Колонки.Добавить("ДатаУчТов", Новый ОписаниеТипов("Массив")); // массив значений тип Дата
	
	Раздел8.Колонки.Добавить("СвПрод", Новый ОписаниеТипов("Массив")); // массив ИНН
	Раздел8.Колонки.Добавить("СвПос", ОбщегоНазначения.ОписаниеТипаСтрока(12));
	
	Раздел8.Колонки.Добавить("ПериодЗап", Новый ОписаниеТипов("Структура"));
		
	Возврат Раздел8;
	
КонецФункции

Функция ТаблицаРаздела8_1() Экспорт
	
	Раздел81 = ТаблицаРаздела8();
	
	Возврат Раздел81;
	
КонецФункции

Функция ТаблицаРаздела9() Экспорт
	
	Раздел9 = Новый ТаблицаЗначений;
	
	Раздел9.Колонки.Добавить("НомерПор", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
	
	Раздел9.Колонки.Добавить("НомСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Раздел9.Колонки.Добавить("ДатаСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел9.Колонки.Добавить("НомИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	Раздел9.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел9.Колонки.Добавить("НомКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Раздел9.Колонки.Добавить("ДатаКСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел9.Колонки.Добавить("НомИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	Раздел9.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел9.Колонки.Добавить("ОКВ", ОбщегоНазначения.ОписаниеТипаСтрока(3));
	
	Раздел9.Колонки.Добавить("СтоимПродСФВ", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел9.Колонки.Добавить("СтоимПродСФ18", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел9.Колонки.Добавить("СтоимПродСФ10", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел9.Колонки.Добавить("СтоимПродСФ0", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел9.Колонки.Добавить("СумНДССФ18", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел9.Колонки.Добавить("СумНДССФ10", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел9.Колонки.Добавить("СтоимПродОсв", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	
	Раздел9.Колонки.Добавить("СпрКодОш", Новый ОписаниеТипов("Структура"));
	
	Раздел9.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	Раздел9.Колонки.Добавить("ДокПдтвОпл", Новый ОписаниеТипов("Массив")); // массив СтруктураДокПдтвОпл()
	
	Раздел9.Колонки.Добавить("СвПокуп", Новый ОписаниеТипов("Массив")); // массив ИНН
	Раздел9.Колонки.Добавить("СвПос", ОбщегоНазначения.ОписаниеТипаСтрока(12));

	Раздел9.Колонки.Добавить("ПериодЗап", Новый ОписаниеТипов("Структура"));
	
	Возврат Раздел9;
	
КонецФункции

Функция ТаблицаРаздела9_1() Экспорт
	
	Раздел91 = ТаблицаРаздела9();
	Возврат Раздел91;
	
КонецФункции

Функция ТаблицаРаздела10() Экспорт
	
	Раздел10 = Новый ТаблицаЗначений;
		
	Раздел10.Колонки.Добавить("НомерПор", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
	
	Раздел10.Колонки.Добавить("НомСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Раздел10.Колонки.Добавить("ДатаСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел10.Колонки.Добавить("НомИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	Раздел10.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел10.Колонки.Добавить("НомКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Раздел10.Колонки.Добавить("ДатаКСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел10.Колонки.Добавить("НомИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	Раздел10.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел10.Колонки.Добавить("СпрКодОш", Новый ОписаниеТипов("Структура"));
	
	Раздел10.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	
	Раздел10.Колонки.Добавить("СвПокуп", ОбщегоНазначения.ОписаниеТипаСтрока(12));
	
	Раздел10.Колонки.Добавить("СвПосрДеят", Новый ОписаниеТипов("Массив")); // массив СтруктураСвПосрДеят()
	
	Раздел10.Колонки.Добавить("ПериодЗап", Новый ОписаниеТипов("Структура"));
	
	Возврат Раздел10;
	
КонецФункции

Функция ТаблицаРаздела11() Экспорт
	
	Раздел11 = Новый ТаблицаЗначений;
		
	Раздел11.Колонки.Добавить("НомерПор", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
	
	Раздел11.Колонки.Добавить("НомСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Раздел11.Колонки.Добавить("ДатаСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел11.Колонки.Добавить("НомИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	Раздел11.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел11.Колонки.Добавить("НомКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Раздел11.Колонки.Добавить("ДатаКСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел11.Колонки.Добавить("НомИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	Раздел11.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Раздел11.Колонки.Добавить("КодВидСд", ОбщегоНазначения.ОписаниеТипаСтрока(1));
	Раздел11.Колонки.Добавить("ОКВ", ОбщегоНазначения.ОписаниеТипаСтрока(3));
	
	Раздел11.Колонки.Добавить("СтоимТовСчФВс", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел11.Колонки.Добавить("СумНДССчФ", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	
	Раздел11.Колонки.Добавить("РазСтКСчФУм", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел11.Колонки.Добавить("РазСтКСчФУв", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел11.Колонки.Добавить("РазНДСКСчФУм", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел11.Колонки.Добавить("РазНДСКСчФУв", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	
	Раздел11.Колонки.Добавить("СпрКодОш", Новый ОписаниеТипов("Структура"));	
	
	Раздел11.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	Раздел11.Колонки.Добавить("СвПрод", ОбщегоНазначения.ОписаниеТипаСтрока(12));
	Раздел11.Колонки.Добавить("СвКомис", ОбщегоНазначения.ОписаниеТипаСтрока(12));

	Раздел11.Колонки.Добавить("ПериодЗап", Новый ОписаниеТипов("Структура"));

	Возврат Раздел11;
	
КонецФункции

Функция ТаблицаРаздела12() Экспорт
	
	Раздел12 = Новый ТаблицаЗначений;
	
	Раздел12.Колонки.Добавить("НомСчФ",         ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Раздел12.Колонки.Добавить("ДатаСчФ",        ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	Раздел12.Колонки.Добавить("ОКВ",            ОбщегоНазначения.ОписаниеТипаСтрока(3));
	Раздел12.Колонки.Добавить("СтоимТовБНалВс", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел12.Колонки.Добавить("СумНалПокуп",    ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел12.Колонки.Добавить("СтоимТовСНалВс", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	Раздел12.Колонки.Добавить("СпрКодОш",       Новый ОписаниеТипов("Структура"));
	Раздел12.Колонки.Добавить("СвПокуп",        ОбщегоНазначения.ОписаниеТипаСтрока(12));
	Раздел12.Колонки.Добавить("ПериодЗап",      Новый ОписаниеТипов("Структура"));
	
	Возврат Раздел12;
	
КонецФункции

Функция СтруктураСпрКодОш() Экспорт
	
	СпрКодОш = Новый Структура;
	
	СпрКодОш.Вставить("КодОш", "");
	СпрКодОш.Вставить("ГрафОш", Новый Массив);
	
	Возврат СпрКодОш;
	
КонецФункции

Функция СтруктураДокПдтвУпл() Экспорт
	
	ДокПдтвУпл = Новый Структура;
	
	ДокПдтвУпл.Вставить("НомДокПдтвУпл", "");
	ДокПдтвУпл.Вставить("ДатаДокПдтвУпл", '00010101');
	
	Возврат ДокПдтвУпл;
	
КонецФункции

Функция СтруктураДокПдтвОпл() Экспорт
	
	ДокПдтвОпл = Новый Структура;
	
	ДокПдтвОпл.Вставить("НомДокПдтвОпл", "");
	ДокПдтвОпл.Вставить("ДатаДокПдтвОпл", '00010101');
	
	Возврат ДокПдтвОпл;
	
КонецФункции

Функция СтруктураСвПосрДеят() Экспорт
	
	СвПосрДеят = Новый Структура;
	
	СвПосрДеят.Вставить("НомСчФОтПрод", "");
	СвПосрДеят.Вставить("ДатаСчФОтПрод", '00010101');
	СвПосрДеят.Вставить("ОКВ", "");
	СвПосрДеят.Вставить("СтоимТовСчФВс", 0);
	
	СвПосрДеят.Вставить("СумНДССчФ", 0);
	СвПосрДеят.Вставить("РазСтКСчФУм", 0);
	СвПосрДеят.Вставить("РазСтКСчФУв", 0);
	СвПосрДеят.Вставить("РазНДСКСчФУм", 0);
	СвПосрДеят.Вставить("РазНДСКСчФУв", 0);
	
	СвПосрДеят.Вставить("СвПрод", "");
	                                      
	Возврат СвПосрДеят;
	
КонецФункции

Функция СтруктураПериодЗап() Экспорт
	
	ПериодЗап = Новый Структура;
	
	ПериодЗап.Вставить("ПериодСв", "");
	ПериодЗап.Вставить("ГодСв", "");
	
	Возврат ПериодЗап;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеТабличныхЧастей

Процедура ЗаполнитьРасхожденияСтрокиРаздела8(ДанныеСтроки) Экспорт
	
	ДанныеСтроки.НомерСчетаФактурыРасхождение = ДанныеСтроки.НомерСчетаФактуры;
	ДанныеСтроки.ДатаСчетаФактурыРасхождение = ДанныеСтроки.ДатаСчетаФактуры;
	ДанныеСтроки.НомерИсправленияСчетаФактурыРасхождение = ДанныеСтроки.НомерИсправленияСчетаФактуры;
	ДанныеСтроки.ДатаИсправленияСчетаФактурыРасхождение = ДанныеСтроки.ДатаИсправленияСчетаФактуры;
	ДанныеСтроки.НомерКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.НомерКорректировочногоСчетаФактуры;
	ДанныеСтроки.ДатаКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.ДатаКорректировочногоСчетаФактуры;
	ДанныеСтроки.НомерИсправленияКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.НомерИсправленияКорректировочногоСчетаФактуры;
	ДанныеСтроки.ДатаИсправленияКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.ДатаИсправленияКорректировочногоСчетаФактуры;
	ДанныеСтроки.НомерТаможеннойДекларацииРасхождение = ДанныеСтроки.НомерТаможеннойДекларации;
	ДанныеСтроки.КодВалютыРасхождение = ДанныеСтроки.КодВалюты;
	ДанныеСтроки.СтоимостьРасхождение = ДанныеСтроки.Стоимость;
	ДанныеСтроки.СуммаНДСРасхождение  = ДанныеСтроки.СуммаНДС;
	ДанныеСтроки.КодВидаОперацииРасхождение = ДанныеСтроки.КодВидаОперации;
	
	ДанныеСтроки.ПосредникИННРасхождение = ДанныеСтроки.ПосредникИНН;
	
КонецПроцедуры

Процедура ЗаполнитьРасхожденияСтрокиРаздела9(ДанныеСтроки) Экспорт
	
	ДанныеСтроки.НомерСчетаФактурыРасхождение = ДанныеСтроки.НомерСчетаФактуры;
	ДанныеСтроки.ДатаСчетаФактурыРасхождение = ДанныеСтроки.ДатаСчетаФактуры;
	ДанныеСтроки.НомерИсправленияСчетаФактурыРасхождение = ДанныеСтроки.НомерИсправленияСчетаФактуры;
	ДанныеСтроки.ДатаИсправленияСчетаФактурыРасхождение = ДанныеСтроки.ДатаИсправленияСчетаФактуры;
	ДанныеСтроки.НомерКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.НомерКорректировочногоСчетаФактуры;
	ДанныеСтроки.ДатаКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.ДатаКорректировочногоСчетаФактуры;
	ДанныеСтроки.НомерИсправленияКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.НомерИсправленияКорректировочногоСчетаФактуры;
	ДанныеСтроки.ДатаИсправленияКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.ДатаИсправленияКорректировочногоСчетаФактуры;
	ДанныеСтроки.КодВалютыРасхождение = ДанныеСтроки.КодВалюты;
	ДанныеСтроки.СтоимостьВсегоРасхождение = ДанныеСтроки.СтоимостьВсего;
	ДанныеСтроки.Стоимость18Расхождение  = ДанныеСтроки.Стоимость18;
	ДанныеСтроки.Стоимость10Расхождение  = ДанныеСтроки.Стоимость10;
	ДанныеСтроки.Стоимость0Расхождение   = ДанныеСтроки.Стоимость0;
	ДанныеСтроки.СуммаНДС18Расхождение   = ДанныеСтроки.СуммаНДС18;
	ДанныеСтроки.СуммаНДС10Расхождение   = ДанныеСтроки.СуммаНДС10;
	ДанныеСтроки.СтоимостьОсвобождаемаяРасхождение = ДанныеСтроки.СтоимостьОсвобождаемая;
	
	ДанныеСтроки.КодВидаОперацииРасхождение = ДанныеСтроки.КодВидаОперации;
	
	ДанныеСтроки.ПосредникИННРасхождение = ДанныеСтроки.ПосредникИНН;

КонецПроцедуры

Процедура ЗаполнитьРасхожденияСтрокиРаздела10(ДанныеСтроки) Экспорт
	
	ДанныеСтроки.НомерСчетаФактурыРасхождение = ДанныеСтроки.НомерСчетаФактуры;
	ДанныеСтроки.ДатаСчетаФактурыРасхождение = ДанныеСтроки.ДатаСчетаФактуры;
	ДанныеСтроки.НомерИсправленияСчетаФактурыРасхождение = ДанныеСтроки.НомерИсправленияСчетаФактуры;
	ДанныеСтроки.ДатаИсправленияСчетаФактурыРасхождение = ДанныеСтроки.ДатаИсправленияСчетаФактуры;
	ДанныеСтроки.НомерКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.НомерКорректировочногоСчетаФактуры;
	ДанныеСтроки.ДатаКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.ДатаКорректировочногоСчетаФактуры;
	ДанныеСтроки.НомерИсправленияКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.НомерИсправленияКорректировочногоСчетаФактуры;
	ДанныеСтроки.ДатаИсправленияКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.ДатаИсправленияКорректировочногоСчетаФактуры;
	ДанныеСтроки.КодВидаОперацииРасхождение = ДанныеСтроки.КодВидаОперации;
	
	ДанныеСтроки.ПокупательИННРасхождение = ДанныеСтроки.ПокупательИНН;
	
КонецПроцедуры

Процедура ЗаполнитьРасхожденияСтрокиРаздела11(ДанныеСтроки) Экспорт
	
	ДанныеСтроки.НомерСчетаФактурыРасхождение = ДанныеСтроки.НомерСчетаФактуры;
	ДанныеСтроки.ДатаСчетаФактурыРасхождение = ДанныеСтроки.ДатаСчетаФактуры;
	ДанныеСтроки.НомерИсправленияСчетаФактурыРасхождение = ДанныеСтроки.НомерИсправленияСчетаФактуры;
	ДанныеСтроки.ДатаИсправленияСчетаФактурыРасхождение = ДанныеСтроки.ДатаИсправленияСчетаФактуры;
	ДанныеСтроки.НомерКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.НомерКорректировочногоСчетаФактуры;
	ДанныеСтроки.ДатаКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.ДатаКорректировочногоСчетаФактуры;
	ДанныеСтроки.НомерИсправленияКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.НомерИсправленияКорректировочногоСчетаФактуры;
	ДанныеСтроки.ДатаИсправленияКорректировочногоСчетаФактурыРасхождение = ДанныеСтроки.ДатаИсправленияКорректировочногоСчетаФактуры;
	ДанныеСтроки.КодВидаСделкиРасхождение = ДанныеСтроки.КодВидаСделки;
	ДанныеСтроки.КодВалютыРасхождение = ДанныеСтроки.КодВалюты;
	ДанныеСтроки.КодВидаОперацииРасхождение = ДанныеСтроки.КодВидаОперации;
	ДанныеСтроки.СтоимостьРасхождение = ДанныеСтроки.Стоимость;
	ДанныеСтроки.СуммаНДСРасхождение  = ДанныеСтроки.СуммаНДС;
	ДанныеСтроки.РазницаСтоимостиУменьшениеРасхождение = ДанныеСтроки.РазницаСтоимостиУменьшение;
	ДанныеСтроки.РазницаСтоимостиУвеличениеРасхождение = ДанныеСтроки.РазницаСтоимостиУвеличение;
	ДанныеСтроки.РазницаСуммыНДСУменьшениеРасхождение  = ДанныеСтроки.РазницаСуммыНДСУменьшение;
	ДанныеСтроки.РазницаСуммыНДСУвеличениеРасхождение  = ДанныеСтроки.РазницаСуммыНДСУвеличение;
	
	ДанныеСтроки.ПродавецИННРасхождение = ДанныеСтроки.ПродавецИНН;
	ДанныеСтроки.СубкомиссионерИННРасхождение = ДанныеСтроки.СубкомиссионерИНН;
	
КонецПроцедуры

Процедура ЗаполнитьРасхожденияСтрокиРаздела12(ДанныеСтроки) Экспорт
	
	ДанныеСтроки.НомерСчетаФактурыРасхождение = ДанныеСтроки.НомерСчетаФактуры;
	ДанныеСтроки.ДатаСчетаФактурыРасхождение = ДанныеСтроки.ДатаСчетаФактуры;
	ДанныеСтроки.КодВалютыРасхождение     = ДанныеСтроки.КодВалюты;
	
	ДанныеСтроки.ПокупательИННРасхождение = ДанныеСтроки.ПокупательИНН;
	
	ДанныеСтроки.СтоимостьБезНДСРасхождение = ДанныеСтроки.СтоимостьБезНДС;
	ДанныеСтроки.СуммаНДСРасхождение        = ДанныеСтроки.СуммаНДС;
	ДанныеСтроки.СтоимостьРасхождение       = ДанныеСтроки.Стоимость;
	
КонецПроцедуры

Процедура ЗаполнитьРаздел8(Объект, ДанныеТребования, ОтправленныеРанееСтроки, ДанныеКопирования) Экспорт
	
	ТаблицаРаздела = ДанныеТребования.Раздел8;
	
	ОтправленныеРанееСтрокиРаздела = Неопределено;
	Если ОтправленныеРанееСтроки <> Неопределено Тогда
		ОтправленныеРанееСтрокиРаздела = ОтправленныеРанееСтроки.Раздел8;
	КонецЕсли;
	
	ДанныеКопированияРаздела = Неопределено;
	Если ДанныеКопирования <> Неопределено Тогда
		ДанныеКопированияРаздела = ДанныеКопирования.Раздел8;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицыРаздела Из ТаблицаРаздела Цикл
		
		// Строка добавляется в раздел в том случае, если она раньше не была отправлена в другом пояснении
		// Но если это режим копирования и строка находится в документе копирования, то строка добавляется в любом случае
		
		ДанныеКопированияСтроки = Неопределено;
		Если ДанныеКопированияРаздела <> Неопределено Тогда
			ДанныеКопированияСтроки = ДанныеКопированияРаздела.Найти(СтрокаТаблицыРаздела.НомерПор, "НомерСтрокиДекларации");
		КонецЕсли;
		
		Если ДанныеКопированияСтроки = Неопределено
			И ОтправленныеРанееСтрокиРаздела <> Неопределено Тогда
			Если ОтправленныеРанееСтрокиРаздела.Получить(СтрокаТаблицыРаздела.НомерПор) <> Неопределено Тогда
				// Ответ по строке был дан ранее.
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЗаписьКнигиПокупок = Объект.КнигаПокупок.Добавить();
		ЗаписьКнигиПокупок.ПериодОтраженияЗаписи     = ПериодОтраженияЗаписи(СтрокаТаблицыРаздела.ПериодЗап); 
		ЗаписьКнигиПокупок.НомерСтрокиДекларации     = СтрокаТаблицыРаздела.НомерПор;
		СтрокаТаблицыРаздела.СпрКодОш.Свойство("КодОш", ЗаписьКнигиПокупок.КодОшибки);
		ЗаписьКнигиПокупок.ГрафаОшибки               = ГрафыОшибок(СтрокаТаблицыРаздела.СпрКодОш);
		ЗаписьКнигиПокупок.РезультатПроверки         = Перечисления.РезультатПроверкиСтрокиДекларации.ПустаяСсылка();
		ЗаписьКнигиПокупок.НомерСчетаФактуры         = СтрокаТаблицыРаздела.НомСчФПрод;
		ЗаписьКнигиПокупок.ДатаСчетаФактуры          = СтрокаТаблицыРаздела.ДатаСчФПрод;
		ЗаписьКнигиПокупок.НомерИсправленияСчетаФактуры = СтрокаТаблицыРаздела.НомИспрСчФ;
		ЗаписьКнигиПокупок.ДатаИсправленияСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрСчФ;
		ЗаписьКнигиПокупок.НомерКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомКСчФПрод;
		ЗаписьКнигиПокупок.ДатаКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаКСчФПрод;
		ЗаписьКнигиПокупок.НомерИсправленияКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомИспрКСчФ;
		ЗаписьКнигиПокупок.ДатаИсправленияКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрКСчФ;
		ЗаписьКнигиПокупок.НомерТаможеннойДекларации = СтрокаТаблицыРаздела.НомТД;
		ЗаписьКнигиПокупок.КодВалюты                 = СтрокаТаблицыРаздела.ОКВ;
		ЗаписьКнигиПокупок.Стоимость                 = СтрокаТаблицыРаздела.СтоимПокупВ;
		ЗаписьКнигиПокупок.СуммаНДС                  = СтрокаТаблицыРаздела.СумНДСВыч;
		ЗаписьКнигиПокупок.КодВидаОперации           = СтрСоединить(СтрокаТаблицыРаздела.КодВидОпер, ";");
		ЗаписьКнигиПокупок.ПосредникИНН              = СтрокаТаблицыРаздела.СвПос;
		
		ЗаписьКнигиПокупок.ДокументОплаты = Строка(Новый УникальныйИдентификатор);
		МассивДокументовОплаты = Новый Массив;
		Для Каждого ДокПдтвУпл ИЗ СтрокаТаблицыРаздела.ДокПдтвУпл Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыДокументовОплаты());
			ЗначенияРеквизитов.Номер = ДокПдтвУпл.НомДокПдтвУпл;
			ЗначенияРеквизитов.Дата  = ДокПдтвУпл.ДатаДокПдтвУпл;
			МассивДокументовОплаты.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивДокументовОплаты, Объект.ДокументыОплаты, ЗаписьКнигиПокупок.ДокументОплаты);
		
		ЗаписьКнигиПокупок.ДатаПринятияНаУчет = Строка(Новый УникальныйИдентификатор);
		МассивДатПринятияНаУчет = Новый Массив();
		Для Каждого ДатаУчТов ИЗ СтрокаТаблицыРаздела.ДатаУчТов Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыДатПринятияНаУчет());
			ЗначенияРеквизитов.ДатаПринятияНаУчет = ДатаУчТов;
			МассивДатПринятияНаУчет.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивДатПринятияНаУчет, Объект.ДатыПринятияНаУчет, ЗаписьКнигиПокупок.ДатаПринятияНаУчет);
		
		ЗаписьКнигиПокупок.Продавец = Строка(Новый УникальныйИдентификатор);
		МассивКонтрагентов = Новый Массив();
		Для Каждого СвПрод ИЗ СтрокаТаблицыРаздела.СвПрод Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыКонтрагентов());
			ЗначенияРеквизитов.ИНН = СвПрод;
			МассивКонтрагентов.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивКонтрагентов, Объект.Контрагенты, ЗаписьКнигиПокупок.Продавец);
		
		Если ДанныеКопированияСтроки = Неопределено Тогда
			ЗаполнитьРасхожденияСтрокиРаздела8(ЗаписьКнигиПокупок);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ДокументОплатыРасхождение", ЗаписьКнигиПокупок, "ДокументОплаты", РеквизитыДокументовОплаты(), Объект.ДокументыОплаты, Объект.ДокументыОплаты);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ДатаПринятияНаУчетРасхождение", ЗаписьКнигиПокупок, "ДатаПринятияНаУчет", РеквизитыДатПринятияНаУчет(), Объект.ДатыПринятияНаУчет, Объект.ДатыПринятияНаУчет);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ПродавецРасхождение", ЗаписьКнигиПокупок, "Продавец", РеквизитыКонтрагентов(), Объект.Контрагенты, Объект.Контрагенты);
		Иначе
			ЗаполнитьЗначенияСвойств(ЗаписьКнигиПокупок, ДанныеКопированияСтроки, "РезультатПроверки, НомерСчетаФактурыРасхождение, ДатаСчетаФактурыРасхождение, НомерИсправленияСчетаФактурыРасхождение, ДатаИсправленияСчетаФактурыРасхождение,
					|НомерКорректировочногоСчетаФактурыРасхождение, ДатаКорректировочногоСчетаФактурыРасхождение, НомерИсправленияКорректировочногоСчетаФактурыРасхождение, ДатаИсправленияКорректировочногоСчетаФактурыРасхождение, НомерТаможеннойДекларацииРасхождение,
					|КодВалютыРасхождение, СтоимостьРасхождение, СуммаНДСРасхождение, КодВидаОперацииРасхождение, ПосредникИННРасхождение");
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ДокументОплатыРасхождение", ДанныеКопированияСтроки, "ДокументОплатыРасхождение", РеквизитыДокументовОплаты(), Объект.ДокументыОплаты, ДанныеКопирования.ДокументыОплаты);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ДатаПринятияНаУчетРасхождение", ДанныеКопированияСтроки, "ДатаПринятияНаУчетРасхождение", РеквизитыДатПринятияНаУчет(), Объект.ДатыПринятияНаУчет, ДанныеКопирования.ДатыПринятияНаУчет);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ПродавецРасхождение", ДанныеКопированияСтроки, "ПродавецРасхождение", РеквизитыКонтрагентов(), Объект.Контрагенты, ДанныеКопирования.Контрагенты);
		КонецЕсли;
		
		Объект.КнигаПокупок.Сортировать("НомерСтрокиДекларации");
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРаздел8_1(Объект, ДанныеТребования, ОтправленныеРанееСтроки, ДанныеКопирования) Экспорт
	
	ТаблицаРаздела = ДанныеТребования.Раздел8_1;
	
	ОтправленныеРанееСтрокиРаздела = Неопределено;
	Если ОтправленныеРанееСтроки <> Неопределено Тогда
		ОтправленныеРанееСтрокиРаздела = ОтправленныеРанееСтроки.Раздел8_1;
	КонецЕсли;
	
	ДанныеКопированияРаздела = Неопределено;
	Если ДанныеКопирования <> Неопределено Тогда
		ДанныеКопированияРаздела = ДанныеКопирования.Раздел8_1;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицыРаздела Из ТаблицаРаздела Цикл
		
		// Строка добавляется в раздел в том случае, если она раньше не была отправлена в другом пояснении
		// Но если это режим копирования и строка находится в документе копирования, то строка добавляется в любом случае
		
		ДанныеКопированияСтроки = Неопределено;
		Если ДанныеКопированияРаздела <> Неопределено Тогда
			ДанныеКопированияСтроки = ДанныеКопированияРаздела.Найти(СтрокаТаблицыРаздела.НомерПор, "НомерСтрокиДекларации");
		КонецЕсли;
		
		Если ДанныеКопированияСтроки = Неопределено
			И ОтправленныеРанееСтрокиРаздела <> Неопределено Тогда
			Если ОтправленныеРанееСтрокиРаздела.Получить(СтрокаТаблицыРаздела.НомерПор) <> Неопределено Тогда
				// Ответ по строке был дан ранее.
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЗаписьКнигиПокупок = Объект.КнигаПокупокДл.Добавить();
		ЗаписьКнигиПокупок.ПериодОтраженияЗаписи     = ПериодОтраженияЗаписи(СтрокаТаблицыРаздела.ПериодЗап); 
		ЗаписьКнигиПокупок.НомерСтрокиДекларации     = СтрокаТаблицыРаздела.НомерПор;
		СтрокаТаблицыРаздела.СпрКодОш.Свойство("КодОш", ЗаписьКнигиПокупок.КодОшибки);
		ЗаписьКнигиПокупок.ГрафаОшибки               = ГрафыОшибок(СтрокаТаблицыРаздела.СпрКодОш);
		ЗаписьКнигиПокупок.РезультатПроверки         = Перечисления.РезультатПроверкиСтрокиДекларации.ПустаяСсылка();
		ЗаписьКнигиПокупок.НомерСчетаФактуры         = СтрокаТаблицыРаздела.НомСчФПрод;
		ЗаписьКнигиПокупок.ДатаСчетаФактуры          = СтрокаТаблицыРаздела.ДатаСчФПрод;
		ЗаписьКнигиПокупок.НомерИсправленияСчетаФактуры = СтрокаТаблицыРаздела.НомИспрСчФ;
		ЗаписьКнигиПокупок.ДатаИсправленияСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрСчФ;
		ЗаписьКнигиПокупок.НомерКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомКСчФПрод;
		ЗаписьКнигиПокупок.ДатаКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаКСчФПрод;
		ЗаписьКнигиПокупок.НомерИсправленияКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомИспрКСчФ;
		ЗаписьКнигиПокупок.ДатаИсправленияКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрКСчФ;
		ЗаписьКнигиПокупок.НомерТаможеннойДекларации = СтрокаТаблицыРаздела.НомТД;
		ЗаписьКнигиПокупок.КодВалюты                 = СтрокаТаблицыРаздела.ОКВ;
		ЗаписьКнигиПокупок.Стоимость                 = СтрокаТаблицыРаздела.СтоимПокупВ;
		ЗаписьКнигиПокупок.СуммаНДС                  = СтрокаТаблицыРаздела.СумНДСВыч;
		ЗаписьКнигиПокупок.КодВидаОперации           = СтрСоединить(СтрокаТаблицыРаздела.КодВидОпер, ";");
		ЗаписьКнигиПокупок.ПосредникИНН              = СтрокаТаблицыРаздела.СвПос;
		
		ЗаписьКнигиПокупок.ДокументОплаты = Строка(Новый УникальныйИдентификатор);
		МассивДокументовОплаты = Новый Массив;
		Для Каждого ДокПдтвУпл ИЗ СтрокаТаблицыРаздела.ДокПдтвУпл Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыДокументовОплаты());
			ЗначенияРеквизитов.Номер = ДокПдтвУпл.НомДокПдтвУпл;
			ЗначенияРеквизитов.Дата  = ДокПдтвУпл.ДатаДокПдтвУпл;
			МассивДокументовОплаты.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивДокументовОплаты, Объект.ДокументыОплаты, ЗаписьКнигиПокупок.ДокументОплаты);
		
		ЗаписьКнигиПокупок.ДатаПринятияНаУчет = Строка(Новый УникальныйИдентификатор);
		МассивДатПринятияНаУчет = Новый Массив();
		Для Каждого ДатаУчТов ИЗ СтрокаТаблицыРаздела.ДатаУчТов Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыДатПринятияНаУчет());
			ЗначенияРеквизитов.ДатаПринятияНаУчет = ДатаУчТов;
			МассивДатПринятияНаУчет.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивДатПринятияНаУчет, Объект.ДатыПринятияНаУчет, ЗаписьКнигиПокупок.ДатаПринятияНаУчет);
		
		ЗаписьКнигиПокупок.Продавец = Строка(Новый УникальныйИдентификатор);
		МассивКонтрагентов = Новый Массив();
		Для Каждого СвПрод ИЗ СтрокаТаблицыРаздела.СвПрод Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыКонтрагентов());
			ЗначенияРеквизитов.ИНН = СвПрод;
			МассивКонтрагентов.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивКонтрагентов, Объект.Контрагенты, ЗаписьКнигиПокупок.Продавец);
		
		Если ДанныеКопированияСтроки = Неопределено Тогда
			ЗаполнитьРасхожденияСтрокиРаздела8(ЗаписьКнигиПокупок);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ДокументОплатыРасхождение", ЗаписьКнигиПокупок, "ДокументОплаты", РеквизитыДокументовОплаты(), Объект.ДокументыОплаты, Объект.ДокументыОплаты);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ДатаПринятияНаУчетРасхождение", ЗаписьКнигиПокупок, "ДатаПринятияНаУчет", РеквизитыДатПринятияНаУчет(), Объект.ДатыПринятияНаУчет, Объект.ДатыПринятияНаУчет);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ПродавецРасхождение", ЗаписьКнигиПокупок, "Продавец", РеквизитыКонтрагентов(), Объект.Контрагенты, Объект.Контрагенты);
		Иначе
			ЗаполнитьЗначенияСвойств(ЗаписьКнигиПокупок, ДанныеКопированияСтроки, "РезультатПроверки, НомерСчетаФактурыРасхождение, ДатаСчетаФактурыРасхождение, НомерИсправленияСчетаФактурыРасхождение, ДатаИсправленияСчетаФактурыРасхождение,
					|НомерКорректировочногоСчетаФактурыРасхождение, ДатаКорректировочногоСчетаФактурыРасхождение, НомерИсправленияКорректировочногоСчетаФактурыРасхождение, ДатаИсправленияКорректировочногоСчетаФактурыРасхождение, НомерТаможеннойДекларацииРасхождение,
					|КодВалютыРасхождение, СтоимостьРасхождение, СуммаНДСРасхождение, КодВидаОперацииРасхождение, ПосредникИННРасхождение");
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ДокументОплатыРасхождение", ДанныеКопированияСтроки, "ДокументОплатыРасхождение", РеквизитыДокументовОплаты(), Объект.ДокументыОплаты, ДанныеКопирования.ДокументыОплаты);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ДатаПринятияНаУчетРасхождение", ДанныеКопированияСтроки, "ДатаПринятияНаУчетРасхождение", РеквизитыДатПринятияНаУчет(), Объект.ДатыПринятияНаУчет, ДанныеКопирования.ДатыПринятияНаУчет);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПокупок, "ПродавецРасхождение", ДанныеКопированияСтроки, "ПродавецРасхождение", РеквизитыКонтрагентов(), Объект.Контрагенты, ДанныеКопирования.Контрагенты);
		КонецЕсли;
		
		Объект.КнигаПокупокДл.Сортировать("НомерСтрокиДекларации");
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРаздел9(Объект, ДанныеТребования, ОтправленныеРанееСтроки, ДанныеКопирования) Экспорт
	
	ТаблицаРаздела = ДанныеТребования.Раздел9;
	
	ОтправленныеРанееСтрокиРаздела = Неопределено;
	Если ОтправленныеРанееСтроки <> Неопределено Тогда
		ОтправленныеРанееСтрокиРаздела = ОтправленныеРанееСтроки.Раздел9;
	КонецЕсли;
	
	ДанныеКопированияРаздела = Неопределено;
	Если ДанныеКопирования <> Неопределено Тогда
		ДанныеКопированияРаздела = ДанныеКопирования.Раздел9;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицыРаздела Из ТаблицаРаздела Цикл
		
		// Строка добавляется в раздел в том случае, если она раньше не была отправлена в другом пояснении
		// Но если это режим копирования и строка находится в документе копирования, то строка добавляется в любом случае
		
		ДанныеКопированияСтроки = Неопределено;
		Если ДанныеКопированияРаздела <> Неопределено Тогда
			ДанныеКопированияСтроки = ДанныеКопированияРаздела.Найти(СтрокаТаблицыРаздела.НомерПор, "НомерСтрокиДекларации");
		КонецЕсли;
		
		Если ДанныеКопированияСтроки = Неопределено
			И ОтправленныеРанееСтрокиРаздела <> Неопределено Тогда
			Если ОтправленныеРанееСтрокиРаздела.Получить(СтрокаТаблицыРаздела.НомерПор) <> Неопределено Тогда
				// Ответ по строке был дан ранее.
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЗаписьКнигиПродаж = Объект.КнигаПродаж.Добавить();
		ЗаписьКнигиПродаж.ПериодОтраженияЗаписи     = ПериодОтраженияЗаписи(СтрокаТаблицыРаздела.ПериодЗап); 
		ЗаписьКнигиПродаж.НомерСтрокиДекларации     = СтрокаТаблицыРаздела.НомерПор;
		СтрокаТаблицыРаздела.СпрКодОш.Свойство("КодОш", ЗаписьКнигиПродаж.КодОшибки);
		ЗаписьКнигиПродаж.ГрафаОшибки               = ГрафыОшибок(СтрокаТаблицыРаздела.СпрКодОш);
		ЗаписьКнигиПродаж.РезультатПроверки         = Перечисления.РезультатПроверкиСтрокиДекларации.ПустаяСсылка();
		ЗаписьКнигиПродаж.НомерСчетаФактуры         = СтрокаТаблицыРаздела.НомСчФПрод;
		ЗаписьКнигиПродаж.ДатаСчетаФактуры          = СтрокаТаблицыРаздела.ДатаСчФПрод;
		ЗаписьКнигиПродаж.НомерИсправленияСчетаФактуры = СтрокаТаблицыРаздела.НомИспрСчФ;
		ЗаписьКнигиПродаж.ДатаИсправленияСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрСчФ;
		ЗаписьКнигиПродаж.НомерКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомКСчФПрод;
		ЗаписьКнигиПродаж.ДатаКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаКСчФПрод;
		ЗаписьКнигиПродаж.НомерИсправленияКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомИспрКСчФ;
		ЗаписьКнигиПродаж.ДатаИсправленияКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрКСчФ;
		ЗаписьКнигиПродаж.КодВалюты                 = СтрокаТаблицыРаздела.ОКВ;
		ЗаписьКнигиПродаж.СтоимостьВсего            = СтрокаТаблицыРаздела.СтоимПродСФВ;
		ЗаписьКнигиПродаж.Стоимость18               = СтрокаТаблицыРаздела.СтоимПродСФ18;
		ЗаписьКнигиПродаж.Стоимость10               = СтрокаТаблицыРаздела.СтоимПродСФ10;
		ЗаписьКнигиПродаж.Стоимость0                = СтрокаТаблицыРаздела.СтоимПродСФ0;
		ЗаписьКнигиПродаж.СтоимостьОсвобождаемая    = СтрокаТаблицыРаздела.СтоимПродОсв;
		ЗаписьКнигиПродаж.СуммаНДС18                = СтрокаТаблицыРаздела.СумНДССФ18;
		ЗаписьКнигиПродаж.СуммаНДС10                = СтрокаТаблицыРаздела.СумНДССФ10;
		
		ЗаписьКнигиПродаж.КодВидаОперации           = СтрСоединить(СтрокаТаблицыРаздела.КодВидОпер, ";");
		ЗаписьКнигиПродаж.ПосредникИНН              = СтрокаТаблицыРаздела.СвПос;
		
		ЗаписьКнигиПродаж.ДокументОплаты = Строка(Новый УникальныйИдентификатор);
		МассивДокументовОплаты = Новый Массив;
		Для Каждого ДокПдтвОпл ИЗ СтрокаТаблицыРаздела.ДокПдтвОпл Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыДокументовОплаты());
			ЗначенияРеквизитов.Номер = ДокПдтвОпл.НомДокПдтвОпл;
			ЗначенияРеквизитов.Дата  = ДокПдтвОпл.ДатаДокПдтвОпл;
			МассивДокументовОплаты.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивДокументовОплаты, Объект.ДокументыОплаты, ЗаписьКнигиПродаж.ДокументОплаты);
		
		ЗаписьКнигиПродаж.Покупатель = Строка(Новый УникальныйИдентификатор);
		МассивКонтрагентов = Новый Массив();
		Для Каждого СвПрод ИЗ СтрокаТаблицыРаздела.СвПокуп Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыКонтрагентов());
			ЗначенияРеквизитов.ИНН = СвПрод;
			МассивКонтрагентов.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивКонтрагентов, Объект.Контрагенты, ЗаписьКнигиПродаж.Покупатель);
		
		Если ДанныеКопированияСтроки = Неопределено Тогда
			ЗаполнитьРасхожденияСтрокиРаздела9(ЗаписьКнигиПродаж);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПродаж, "ДокументОплатыРасхождение", ЗаписьКнигиПродаж,"ДокументОплаты", РеквизитыДокументовОплаты(), Объект.ДокументыОплаты, Объект.ДокументыОплаты);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПродаж, "ПокупательРасхождение", ЗаписьКнигиПродаж, "Покупатель", РеквизитыКонтрагентов(), Объект.Контрагенты, Объект.Контрагенты);
		Иначе
			ЗаполнитьЗначенияСвойств(ЗаписьКнигиПродаж, ДанныеКопированияСтроки, "РезультатПроверки, НомерСчетаФактурыРасхождение, ДатаСчетаФактурыРасхождение, НомерИсправленияСчетаФактурыРасхождение, ДатаИсправленияСчетаФактурыРасхождение,
					|НомерКорректировочногоСчетаФактурыРасхождение, ДатаКорректировочногоСчетаФактурыРасхождение, НомерИсправленияКорректировочногоСчетаФактурыРасхождение, ДатаИсправленияКорректировочногоСчетаФактурыРасхождение,
					|КодВалютыРасхождение, СтоимостьВсегоРасхождение, Стоимость18Расхождение, Стоимость10Расхождение, Стоимость0Расхождение, СуммаНДС18Расхождение, СуммаНДС10Расхождение, СтоимостьОсвобождаемаяРасхождение, КодВидаОперацииРасхождение, ПосредникИННРасхождение");
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПродаж, "ДокументОплатыРасхождение", ДанныеКопированияСтроки, "ДокументОплатыРасхождение", РеквизитыДокументовОплаты(), Объект.ДокументыОплаты, ДанныеКопирования.ДокументыОплаты);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПродаж, "ПокупательРасхождение", ДанныеКопированияСтроки, "ПокупательРасхождение", РеквизитыКонтрагентов(), Объект.Контрагенты, ДанныеКопирования.Контрагенты);
		КонецЕсли;
		
		Объект.КнигаПродаж.Сортировать("НомерСтрокиДекларации");
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРаздел9_1(Объект, ДанныеТребования, ОтправленныеРанееСтроки, ДанныеКопирования) Экспорт
	
	ТаблицаРаздела = ДанныеТребования.Раздел9_1;
	
	ОтправленныеРанееСтрокиРаздела = Неопределено;
	Если ОтправленныеРанееСтроки <> Неопределено Тогда
		ОтправленныеРанееСтрокиРаздела = ОтправленныеРанееСтроки.Раздел9_1;
	КонецЕсли;
	
	ДанныеКопированияРаздела = Неопределено;
	Если ДанныеКопирования <> Неопределено Тогда
		ДанныеКопированияРаздела = ДанныеКопирования.Раздел9_1;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицыРаздела Из ТаблицаРаздела Цикл
		
		// Строка добавляется в раздел в том случае, если она раньше не была отправлена в другом пояснении
		// Но если это режим копирования и строка находится в документе копирования, то строка добавляется в любом случае
		
		ДанныеКопированияСтроки = Неопределено;
		Если ДанныеКопированияРаздела <> Неопределено Тогда
			ДанныеКопированияСтроки = ДанныеКопированияРаздела.Найти(СтрокаТаблицыРаздела.НомерПор, "НомерСтрокиДекларации");
		КонецЕсли;
		
		Если ДанныеКопированияСтроки = Неопределено
			И ОтправленныеРанееСтрокиРаздела <> Неопределено Тогда
			Если ОтправленныеРанееСтрокиРаздела.Получить(СтрокаТаблицыРаздела.НомерПор) <> Неопределено Тогда
				// Ответ по строке был дан ранее.
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЗаписьКнигиПродаж = Объект.КнигаПродажДл.Добавить();
		ЗаписьКнигиПродаж.ПериодОтраженияЗаписи     = ПериодОтраженияЗаписи(СтрокаТаблицыРаздела.ПериодЗап);
		ЗаписьКнигиПродаж.НомерСтрокиДекларации     = СтрокаТаблицыРаздела.НомерПор;
		СтрокаТаблицыРаздела.СпрКодОш.Свойство("КодОш", ЗаписьКнигиПродаж.КодОшибки);
		ЗаписьКнигиПродаж.ГрафаОшибки               = ГрафыОшибок(СтрокаТаблицыРаздела.СпрКодОш);
		ЗаписьКнигиПродаж.РезультатПроверки         = Перечисления.РезультатПроверкиСтрокиДекларации.ПустаяСсылка();
		ЗаписьКнигиПродаж.НомерСчетаФактуры         = СтрокаТаблицыРаздела.НомСчФПрод;
		ЗаписьКнигиПродаж.ДатаСчетаФактуры          = СтрокаТаблицыРаздела.ДатаСчФПрод;
		ЗаписьКнигиПродаж.НомерИсправленияСчетаФактуры = СтрокаТаблицыРаздела.НомИспрСчФ;
		ЗаписьКнигиПродаж.ДатаИсправленияСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрСчФ;
		ЗаписьКнигиПродаж.НомерКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомКСчФПрод;
		ЗаписьКнигиПродаж.ДатаКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаКСчФПрод;
		ЗаписьКнигиПродаж.НомерИсправленияКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомИспрКСчФ;
		ЗаписьКнигиПродаж.ДатаИсправленияКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрКСчФ;
		ЗаписьКнигиПродаж.КодВалюты                 = СтрокаТаблицыРаздела.ОКВ;
		ЗаписьКнигиПродаж.СтоимостьВсего            = СтрокаТаблицыРаздела.СтоимПродСФВ;
		ЗаписьКнигиПродаж.Стоимость18               = СтрокаТаблицыРаздела.СтоимПродСФ18;
		ЗаписьКнигиПродаж.Стоимость10               = СтрокаТаблицыРаздела.СтоимПродСФ10;
		ЗаписьКнигиПродаж.Стоимость0                = СтрокаТаблицыРаздела.СтоимПродСФ0;
		ЗаписьКнигиПродаж.СтоимостьОсвобождаемая    = СтрокаТаблицыРаздела.СтоимПродОсв;
		ЗаписьКнигиПродаж.СуммаНДС18                = СтрокаТаблицыРаздела.СумНДССФ18;
		ЗаписьКнигиПродаж.СуммаНДС10                = СтрокаТаблицыРаздела.СумНДССФ10;
		
		ЗаписьКнигиПродаж.КодВидаОперации           = СтрСоединить(СтрокаТаблицыРаздела.КодВидОпер, ";");
		ЗаписьКнигиПродаж.ПосредникИНН              = СтрокаТаблицыРаздела.СвПос;
		
		ЗаписьКнигиПродаж.ДокументОплаты = Строка(Новый УникальныйИдентификатор);
		МассивДокументовОплаты = Новый Массив;
		Для Каждого ДокПдтвОпл ИЗ СтрокаТаблицыРаздела.ДокПдтвОпл Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыДокументовОплаты());
			ЗначенияРеквизитов.Номер = ДокПдтвОпл.НомДокПдтвОпл;
			ЗначенияРеквизитов.Дата  = ДокПдтвОпл.ДатаДокПдтвОпл;
			МассивДокументовОплаты.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивДокументовОплаты, Объект.ДокументыОплаты, ЗаписьКнигиПродаж.ДокументОплаты);
		
		ЗаписьКнигиПродаж.Покупатель = Строка(Новый УникальныйИдентификатор);
		МассивКонтрагентов = Новый Массив();
		Для Каждого СвПрод ИЗ СтрокаТаблицыРаздела.СвПокуп Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыКонтрагентов());
			ЗначенияРеквизитов.ИНН = СвПрод;
			МассивКонтрагентов.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивКонтрагентов, Объект.Контрагенты, ЗаписьКнигиПродаж.Покупатель);
		
		Если ДанныеКопированияСтроки = Неопределено Тогда
			ЗаполнитьРасхожденияСтрокиРаздела9(ЗаписьКнигиПродаж);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПродаж, "ДокументОплатыРасхождение", ЗаписьКнигиПродаж,"ДокументОплаты", РеквизитыДокументовОплаты(), Объект.ДокументыОплаты, Объект.ДокументыОплаты);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПродаж, "ПокупательРасхождение", ЗаписьКнигиПродаж, "Покупатель", РеквизитыКонтрагентов(), Объект.Контрагенты, Объект.Контрагенты);
		Иначе
			ЗаполнитьЗначенияСвойств(ЗаписьКнигиПродаж, ДанныеКопированияСтроки, "РезультатПроверки, НомерСчетаФактурыРасхождение, ДатаСчетаФактурыРасхождение, НомерИсправленияСчетаФактурыРасхождение, ДатаИсправленияСчетаФактурыРасхождение,
					|НомерКорректировочногоСчетаФактурыРасхождение, ДатаКорректировочногоСчетаФактурыРасхождение, НомерИсправленияКорректировочногоСчетаФактурыРасхождение, ДатаИсправленияКорректировочногоСчетаФактурыРасхождение,
					|КодВалютыРасхождение, СтоимостьВсегоРасхождение, Стоимость18Расхождение, Стоимость10Расхождение, Стоимость0Расхождение, СуммаНДС18Расхождение, СуммаНДС10Расхождение, СтоимостьОсвобождаемаяРасхождение, КодВидаОперацииРасхождение, ПосредникИННРасхождение");
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПродаж, "ДокументОплатыРасхождение", ДанныеКопированияСтроки, "ДокументОплатыРасхождение", РеквизитыДокументовОплаты(), Объект.ДокументыОплаты, ДанныеКопирования.ДокументыОплаты);
			СкопироватьСписокРеквизитаСтроки(ЗаписьКнигиПродаж, "ПокупательРасхождение", ДанныеКопированияСтроки, "ПокупательРасхождение", РеквизитыКонтрагентов(), Объект.Контрагенты, ДанныеКопирования.Контрагенты);
		КонецЕсли;
		
		Объект.КнигаПродажДл.Сортировать("НомерСтрокиДекларации");
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРаздел10(Объект, ДанныеТребования, ОтправленныеРанееСтроки, ДанныеКопирования) Экспорт
	
	ТаблицаРаздела = ДанныеТребования.Раздел10;
	
	ОтправленныеРанееСтрокиРаздела = Неопределено;
	Если ОтправленныеРанееСтроки <> Неопределено Тогда
		ОтправленныеРанееСтрокиРаздела = ОтправленныеРанееСтроки.Раздел10;
	КонецЕсли;
	
	ДанныеКопированияРаздела = Неопределено;
	Если ДанныеКопирования <> Неопределено Тогда
		ДанныеКопированияРаздела = ДанныеКопирования.Раздел10;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицыРаздела Из ТаблицаРаздела Цикл
		
		// Строка добавляется в раздел в том случае, если она раньше не была отправлена в другом пояснении
		// Но если это режим копирования и строка находится в документе копирования, то строка добавляется в любом случае
		
		ДанныеКопированияСтроки = Неопределено;
		Если ДанныеКопированияРаздела <> Неопределено Тогда
			ДанныеКопированияСтроки = ДанныеКопированияРаздела.Найти(СтрокаТаблицыРаздела.НомерПор, "НомерСтрокиДекларации");
		КонецЕсли;
		
		Если ДанныеКопированияСтроки = Неопределено
			И ОтправленныеРанееСтрокиРаздела <> Неопределено Тогда
			Если ОтправленныеРанееСтрокиРаздела.Получить(СтрокаТаблицыРаздела.НомерПор) <> Неопределено Тогда
				// Ответ по строке был дан ранее.
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЗаписьЖурнала = Объект.ЖурналУчетаВыставленныхСчетовФактур.Добавить();
		ЗаписьЖурнала.ПериодОтраженияЗаписи     = ПериодОтраженияЗаписи(СтрокаТаблицыРаздела.ПериодЗап);
		ЗаписьЖурнала.НомерСтрокиДекларации     = СтрокаТаблицыРаздела.НомерПор;
		СтрокаТаблицыРаздела.СпрКодОш.Свойство("КодОш", ЗаписьЖурнала.КодОшибки);
		ЗаписьЖурнала.ГрафаОшибки               = ГрафыОшибок(СтрокаТаблицыРаздела.СпрКодОш);
		ЗаписьЖурнала.РезультатПроверки         = Перечисления.РезультатПроверкиСтрокиДекларации.ПустаяСсылка();
		ЗаписьЖурнала.НомерСчетаФактуры         = СтрокаТаблицыРаздела.НомСчФПрод;
		ЗаписьЖурнала.ДатаСчетаФактуры          = СтрокаТаблицыРаздела.ДатаСчФПрод;
		ЗаписьЖурнала.НомерИсправленияСчетаФактуры = СтрокаТаблицыРаздела.НомИспрСчФ;
		ЗаписьЖурнала.ДатаИсправленияСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрСчФ;
		ЗаписьЖурнала.НомерКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомКСчФПрод;
		ЗаписьЖурнала.ДатаКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаКСчФПрод;
		ЗаписьЖурнала.НомерИсправленияКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомИспрКСчФ;
		ЗаписьЖурнала.ДатаИсправленияКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрКСчФ;
		ЗаписьЖурнала.КодВидаОперации           = СтрСоединить(СтрокаТаблицыРаздела.КодВидОпер, ";");
		
		ЗаписьЖурнала.ПокупательИНН              = СтрокаТаблицыРаздела.СвПокуп;
		
		ЗаписьЖурнала.ПосредническаяДеятельность = Строка(Новый УникальныйИдентификатор);
		МассивПосредническаяДеятельность = Новый Массив;
		Для Каждого СвПосрДеят ИЗ СтрокаТаблицыРаздела.СвПосрДеят Цикл
			ЗначенияРеквизитов = Новый Структура(РеквизитыПосредническойДеятельности());
			ЗначенияРеквизитов.НомерСчетаФактуры = СвПосрДеят.НомСчФОтПрод;
			ЗначенияРеквизитов.ДатаСчетаФактуры  = СвПосрДеят.ДатаСчФОтПрод;
			ЗначенияРеквизитов.КодВалюты         = СвПосрДеят.ОКВ;
			ЗначенияРеквизитов.Стоимость         = СвПосрДеят.СтоимТовСчФВс;
			ЗначенияРеквизитов.СуммаНДС          = СвПосрДеят.СумНДССчФ;
			ЗначенияРеквизитов.РазницаСтоимостиУменьшение = СвПосрДеят.РазСтКСчФУм;
			ЗначенияРеквизитов.РазницаСтоимостиУвеличение = СвПосрДеят.РазСтКСчФУв;
			ЗначенияРеквизитов.РазницаСуммыНДСУменьшение  = СвПосрДеят.РазНДСКСчФУм;
			ЗначенияРеквизитов.РазницаСуммыНДСУвеличение  = СвПосрДеят.РазНДСКСчФУв;
			ЗначенияРеквизитов.ПродавецИНН       = СвПосрДеят.СвПрод;
			МассивПосредническаяДеятельность.Добавить(ЗначенияРеквизитов);
		КонецЦикла;
		ЗаписатьМассивРеквизитовВТаблицуХранения(МассивПосредническаяДеятельность, Объект.ПосредническаяДеятельность, ЗаписьЖурнала.ПосредническаяДеятельность);
		
		Если ДанныеКопированияСтроки = Неопределено Тогда
			ЗаполнитьРасхожденияСтрокиРаздела10(ЗаписьЖурнала);
			СкопироватьСписокРеквизитаСтроки(ЗаписьЖурнала, "ПосредническаяДеятельностьРасхождение", ЗаписьЖурнала, "ПосредническаяДеятельность", РеквизитыПосредническойДеятельности(), Объект.ПосредническаяДеятельность, Объект.ПосредническаяДеятельность);
		Иначе
			ЗаполнитьЗначенияСвойств(ЗаписьЖурнала, ДанныеКопированияСтроки, "РезультатПроверки, НомерСчетаФактурыРасхождение, ДатаСчетаФактурыРасхождение, НомерИсправленияСчетаФактурыРасхождение, ДатаИсправленияСчетаФактурыРасхождение,
					|НомерКорректировочногоСчетаФактурыРасхождение, ДатаКорректировочногоСчетаФактурыРасхождение, НомерИсправленияКорректировочногоСчетаФактурыРасхождение, ДатаИсправленияКорректировочногоСчетаФактурыРасхождение, КодВидаОперацииРасхождение,
					|ПокупательИННРасхождение");
			СкопироватьСписокРеквизитаСтроки(ЗаписьЖурнала, "ПосредническаяДеятельностьРасхождение", ДанныеКопированияСтроки, "ПосредническаяДеятельностьРасхождение", РеквизитыПосредническойДеятельности(), Объект.ПосредническаяДеятельность, ДанныеКопирования.ПосредническаяДеятельность);
		КонецЕсли;
		
		Объект.ЖурналУчетаВыставленныхСчетовФактур.Сортировать("НомерСтрокиДекларации");
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРаздел11(Объект, ДанныеТребования, ОтправленныеРанееСтроки, ДанныеКопирования) Экспорт
	
	ТаблицаРаздела = ДанныеТребования.Раздел11;
	
	ОтправленныеРанееСтрокиРаздела = Неопределено;
	Если ОтправленныеРанееСтроки <> Неопределено Тогда
		ОтправленныеРанееСтрокиРаздела = ОтправленныеРанееСтроки.Раздел11;
	КонецЕсли;
	
	ДанныеКопированияРаздела = Неопределено;
	Если ДанныеКопирования <> Неопределено Тогда
		ДанныеКопированияРаздела = ДанныеКопирования.Раздел11;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицыРаздела Из ТаблицаРаздела Цикл
		
		// Строка добавляется в раздел в том случае, если она раньше не была отправлена в другом пояснении
		// Но если это режим копирования и строка находится в документе копирования, то строка добавляется в любом случае
		
		ДанныеКопированияСтроки = Неопределено;
		Если ДанныеКопированияРаздела <> Неопределено Тогда
			ДанныеКопированияСтроки = ДанныеКопированияРаздела.Найти(СтрокаТаблицыРаздела.НомерПор, "НомерСтрокиДекларации");
		КонецЕсли;
		
		Если ДанныеКопированияСтроки = Неопределено
			И ОтправленныеРанееСтрокиРаздела <> Неопределено Тогда
			Если ОтправленныеРанееСтрокиРаздела.Получить(СтрокаТаблицыРаздела.НомерПор) <> Неопределено Тогда
				// Ответ по строке был дан ранее.
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЗаписьЖурнала = Объект.ЖурналУчетаПолученныхСчетовФактур.Добавить();
		ЗаписьЖурнала.ПериодОтраженияЗаписи     = ПериодОтраженияЗаписи(СтрокаТаблицыРаздела.ПериодЗап);
		ЗаписьЖурнала.НомерСтрокиДекларации     = СтрокаТаблицыРаздела.НомерПор;
		СтрокаТаблицыРаздела.СпрКодОш.Свойство("КодОш", ЗаписьЖурнала.КодОшибки);
		ЗаписьЖурнала.ГрафаОшибки               = ГрафыОшибок(СтрокаТаблицыРаздела.СпрКодОш);
		ЗаписьЖурнала.РезультатПроверки         = Перечисления.РезультатПроверкиСтрокиДекларации.ПустаяСсылка();
		ЗаписьЖурнала.НомерСчетаФактуры         = СтрокаТаблицыРаздела.НомСчФПрод;
		ЗаписьЖурнала.ДатаСчетаФактуры          = СтрокаТаблицыРаздела.ДатаСчФПрод;
		ЗаписьЖурнала.НомерИсправленияСчетаФактуры = СтрокаТаблицыРаздела.НомИспрСчФ;
		ЗаписьЖурнала.ДатаИсправленияСчетаФактуры  = СтрокаТаблицыРаздела.ДатаИспрСчФ;
		ЗаписьЖурнала.НомерКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомКСчФПрод;
		ЗаписьЖурнала.ДатаКорректировочногоСчетаФактуры  = СтрокаТаблицыРаздела.ДатаКСчФПрод;
		ЗаписьЖурнала.НомерИсправленияКорректировочногоСчетаФактуры = СтрокаТаблицыРаздела.НомИспрКСчФ;
		ЗаписьЖурнала.КодВидаСделки             = СтрокаТаблицыРаздела.КодВидСд;
		ЗаписьЖурнала.КодВалюты                 = СтрокаТаблицыРаздела.ОКВ;
		ЗаписьЖурнала.КодВидаОперации           = СтрСоединить(СтрокаТаблицыРаздела.КодВидОпер, ";");
		ЗаписьЖурнала.Стоимость                 = СтрокаТаблицыРаздела.СтоимТовСчФВс;
		ЗаписьЖурнала.СуммаНДС                  = СтрокаТаблицыРаздела.СумНДССчФ;
		ЗаписьЖурнала.РазницаСтоимостиУменьшение = СтрокаТаблицыРаздела.РазСтКСчФУм;
		ЗаписьЖурнала.РазницаСтоимостиУвеличение = СтрокаТаблицыРаздела.РазСтКСчФУв;
		ЗаписьЖурнала.РазницаСуммыНДСУменьшение = СтрокаТаблицыРаздела.РазНДСКСчФУм;
		ЗаписьЖурнала.РазницаСуммыНДСУвеличение = СтрокаТаблицыРаздела.РазНДСКСчФУв;
		
		ЗаписьЖурнала.ПродавецИНН              = СтрокаТаблицыРаздела.СвПрод;
		ЗаписьЖурнала.СубкомиссионерИНН        = СтрокаТаблицыРаздела.СвКомис;
		
		Если ДанныеКопированияСтроки = Неопределено Тогда
			ЗаполнитьРасхожденияСтрокиРаздела11(ЗаписьЖурнала);
		Иначе
			ЗаполнитьЗначенияСвойств(ЗаписьЖурнала, ДанныеКопированияСтроки, "РезультатПроверки, НомерСчетаФактурыРасхождение, ДатаСчетаФактурыРасхождение, НомерИсправленияСчетаФактурыРасхождение, ДатаИсправленияСчетаФактурыРасхождение,
					|НомерКорректировочногоСчетаФактурыРасхождение, ДатаКорректировочногоСчетаФактурыРасхождение, НомерИсправленияКорректировочногоСчетаФактурыРасхождение, ДатаИсправленияКорректировочногоСчетаФактурыРасхождение,
					|КодВидаСделкиРасхождение, КодВалютыРасхождение, КодВидаОперацииРасхождение, ПродавецИННРасхождение, СубкомиссионерИННРасхождение, СтоимостьРасхождение, СуммаНДСРасхождение, РазницаСтоимостиУменьшениеРасхождение, РазницаСтоимостиУвеличениеРасхождение,
					|РазницаСуммыНДСУменьшениеРасхождение, РазницаСуммыНДСУвеличениеРасхождение");
		КонецЕсли;
		
		Объект.ЖурналУчетаПолученныхСчетовФактур.Сортировать("НомерСтрокиДекларации");
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРаздел12(Объект, ДанныеТребования, ОтправленныеРанееСтроки, ДанныеКопирования) Экспорт
	
	ТаблицаРаздела = ДанныеТребования.Раздел12;
	
	ОтправленныеРанееСтрокиРаздела = Неопределено;
	Если ОтправленныеРанееСтроки <> Неопределено Тогда
		ОтправленныеРанееСтрокиРаздела = ОтправленныеРанееСтроки.Раздел12;
	КонецЕсли;
	
	ДанныеКопированияРаздела = Неопределено;
	Если ДанныеКопирования <> Неопределено Тогда
		ДанныеКопированияРаздела = ДанныеКопирования.Раздел12;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицыРаздела Из ТаблицаРаздела Цикл
		
		// Строка добавляется в раздел в том случае, если она раньше не была отправлена в другом пояснении
		// Но если это режим копирования и строка находится в документе копирования, то строка добавляется в любом случае
		
		КлючСтроки = КлючСтрокиРаздела12(СтрокаТаблицыРаздела.НомСчФ, СтрокаТаблицыРаздела.ДатаСчФ);
		
		ДанныеКопированияСтроки = Неопределено;
		Если ДанныеКопированияРаздела <> Неопределено Тогда
			ДанныеКопированияСтроки = ДанныеКопированияРаздела.Найти(КлючСтроки, "КлючСтроки");
		КонецЕсли;
		
		Если ДанныеКопированияСтроки = Неопределено
			И ОтправленныеРанееСтрокиРаздела <> Неопределено Тогда
			Если ОтправленныеРанееСтрокиРаздела.Получить(КлючСтроки) <> Неопределено Тогда
				// Ответ по строке был дан ранее.
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЗаписьЖурнала = Объект.ВыставленныеСчетаФактурыНеплательщиковНДС.Добавить();
		ЗаписьЖурнала.ПериодОтраженияЗаписи = ПериодОтраженияЗаписи(СтрокаТаблицыРаздела.ПериодЗап);
		СтрокаТаблицыРаздела.СпрКодОш.Свойство("КодОш", ЗаписьЖурнала.КодОшибки);
		ЗаписьЖурнала.ГрафаОшибки       = ГрафыОшибок(СтрокаТаблицыРаздела.СпрКодОш);
		ЗаписьЖурнала.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.ПустаяСсылка();
		ЗаписьЖурнала.НомерСчетаФактуры = СтрокаТаблицыРаздела.НомСчФ;
		ЗаписьЖурнала.ДатаСчетаФактуры  = СтрокаТаблицыРаздела.ДатаСчФ;
		ЗаписьЖурнала.КодВалюты         = СтрокаТаблицыРаздела.ОКВ;
		ЗаписьЖурнала.СтоимостьБезНДС   = СтрокаТаблицыРаздела.СтоимТовБНалВс;
		ЗаписьЖурнала.СуммаНДС          = СтрокаТаблицыРаздела.СумНалПокуп;
		ЗаписьЖурнала.Стоимость         = СтрокаТаблицыРаздела.СтоимТовСНалВс;
		
		ЗаписьЖурнала.ПокупательИНН   = СтрокаТаблицыРаздела.СвПокуп;
		
		Если ДанныеКопированияСтроки = Неопределено Тогда
			ЗаполнитьРасхожденияСтрокиРаздела12(ЗаписьЖурнала);
		Иначе
			ЗаполнитьЗначенияСвойств(ЗаписьЖурнала, ДанныеКопированияСтроки, "РезультатПроверки, НомерСчетаФактурыРасхождение, ДатаСчетаФактурыРасхождение, КодВалютыРасхождение, ПокупательИННРасхождение,
					|СтоимостьБезНДСРасхождение, СуммаНДСРасхождение, СтоимостьРасхождение");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Выгрузка

// Производит выгрузку данных ответа на требование в файл.
//
// Параметры:
//   ДокументСсылка          - ДокументСсылка.ПоясненияКДекларацииПоНДС - Ссылка на документ, который необходимо выгрузить. 
//   УникальныйИдентификатор - УникальныйИдентификатор                                 - используется при помещении файла выгрузки во временное хранилище.
// Возвращаемое значение:
//   Неоределено - файл выгрузки не был сформирован.
//   Структура
//     *ИмяФайла                 - Строка - имя файла выгрузки.
//     *АдресВременногоХранилища - Строка - адрес временного хранилища, в котором размещены двоичные данные файла.
// 
Функция ПолучитьФайлВыгрузки(ДокументСсылка, УникальныйИдентификатор) Экспорт

	ДанныеДляВыгрузки = ПолучитьДаннныеДляВыгрузки(ДокументСсылка);
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	Если КонтекстЭДОСервер = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат КонтекстЭДОСервер.ПолучитьФайлВыгрузкиОтветаНаТребованиеПоясненийКДекларацииНДС(ДанныеДляВыгрузки, УникальныйИдентификатор);

КонецФункции

Функция ПолучитьДаннныеДляВыгрузки(ДокументСсылка)
	
	ДанныеДляВыгрузки = СтруктураОтветНаТребование();
	
	ДанныеПояснения = ДанныеПоясненияКДекларацииПоНДС(ДокументСсылка);
	
	ДанныеПояснения.Свойство("Организация", ДанныеДляВыгрузки.Организация);
	ДанныеПояснения.Свойство("КодНалоговогоОргана", ДанныеДляВыгрузки.КодНалоговогоОргана);
	
	КнигаПокупок = ДанныеДляВыгрузки.КнигаПокупок;
	Для Каждого СтрокаРаздела8 Из ДанныеПояснения.Раздел8 Цикл
		Если СтрокаРаздела8.СуммаНДС <> СтрокаРаздела8.СуммаНДСРасхождение Тогда
			// Сумма НДС раздела 8 отличается - эту строку не нужно выгружать,
			// по ней требуется предоставить уточненную декларацию
			Продолжить;
		КонецЕсли;
		
		СписокПродавцов = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.Контрагенты, СтрокаРаздела8.Продавец, РеквизитыКонтрагентов());
		СписокПродавцовРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.Контрагенты, СтрокаРаздела8.ПродавецРасхождение, РеквизитыКонтрагентов());
		
		СписокДокументовОплаты = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДокументыОплаты, СтрокаРаздела8.ДокументОплаты, РеквизитыДокументовОплаты());
		СписокДокументовОплатыРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДокументыОплаты, СтрокаРаздела8.ДокументОплатыРасхождение, РеквизитыДокументовОплаты());
		
		СписокДатПринятияНаУчет = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДатыПринятияНаУчет, СтрокаРаздела8.ДатаПринятияНаУчет, РеквизитыДатПринятияНаУчет());
		СписокДатПринятияНаУчетРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДатыПринятияНаУчет, СтрокаРаздела8.ДатаПринятияНаУчетРасхождение, РеквизитыДатПринятияНаУчет());
		
		СпискиРеквизитов = Новый Структура("Продавец, ДокументОплаты, ДатаПринятияНаУчет");
		СпискиРеквизитов.Продавец = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокПродавцов, СписокПродавцовРасхождение);
		СпискиРеквизитов.ДокументОплаты = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокДокументовОплаты, СписокДокументовОплатыРасхождение);
		СпискиРеквизитов.ДатаПринятияНаУчет = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокДатПринятияНаУчет, СписокДатПринятияНаУчетРасхождение);
		
		ДобавитьСтрокуВВыгрузкуРаздела8(КнигаПокупок, СтрокаРаздела8, СпискиРеквизитов);
		
	КонецЦикла;
	
	КнигаПокупокДл = ДанныеДляВыгрузки.КнигаПокупокДл;
	Для Каждого СтрокаРаздела8_1 Из ДанныеПояснения.Раздел8_1 Цикл
		Если СтрокаРаздела8_1.СуммаНДС <> СтрокаРаздела8_1.СуммаНДСРасхождение Тогда
			// Сумма НДС раздела 8.1 отличается - эту строку не нужно выгружать,
			// по ней требуется предоставить уточненную декларацию
			Продолжить;
		КонецЕсли;
		
		СписокПродавцов = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.Контрагенты, СтрокаРаздела8_1.Продавец, РеквизитыКонтрагентов());
		СписокПродавцовРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.Контрагенты, СтрокаРаздела8_1.ПродавецРасхождение, РеквизитыКонтрагентов());
		
		СписокДокументовОплаты = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДокументыОплаты, СтрокаРаздела8_1.ДокументОплаты, РеквизитыДокументовОплаты());
		СписокДокументовОплатыРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДокументыОплаты, СтрокаРаздела8_1.ДокументОплатыРасхождение, РеквизитыДокументовОплаты());
		
		СписокДатПринятияНаУчет = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДатыПринятияНаУчет, СтрокаРаздела8_1.ДатаПринятияНаУчет, РеквизитыДатПринятияНаУчет());
		СписокДатПринятияНаУчетРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДатыПринятияНаУчет, СтрокаРаздела8_1.ДатаПринятияНаУчетРасхождение, РеквизитыДатПринятияНаУчет());
		
		СпискиРеквизитов = Новый Структура("Продавец, ДокументОплаты, ДатаПринятияНаУчет");
		СпискиРеквизитов.Продавец = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокПродавцов, СписокПродавцовРасхождение);
		СпискиРеквизитов.ДокументОплаты = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокДокументовОплаты, СписокДокументовОплатыРасхождение);
		СпискиРеквизитов.ДатаПринятияНаУчет = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокДатПринятияНаУчет, СписокДатПринятияНаУчетРасхождение);
		
		ДобавитьСтрокуВВыгрузкуРаздела8(КнигаПокупокДл, СтрокаРаздела8_1, СпискиРеквизитов);
	КонецЦикла;
	
	КнигаПродаж = ДанныеДляВыгрузки.КнигаПродаж;
	Для Каждого СтрокаРаздела9 Из ДанныеПояснения.Раздел9 Цикл
		
		Если СтрокаРаздела9.СуммаНДС18 <> СтрокаРаздела9.СуммаНДС18Расхождение 
			ИЛИ СтрокаРаздела9.СуммаНДС10 <> СтрокаРаздела9.СуммаНДС10Расхождение  Тогда
			// Сумма НДС раздела 9 отличается - эту строку не нужно выгружать,
			// по ней требуется предоставить уточненную декларацию
			Продолжить;
		КонецЕсли;
		
		СписокПокупателей = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.Контрагенты, СтрокаРаздела9.Покупатель, РеквизитыКонтрагентов());
		СписокПокупателейРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.Контрагенты, СтрокаРаздела9.ПокупательРасхождение, РеквизитыКонтрагентов());
		
		СписокДокументовОплаты = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДокументыОплаты, СтрокаРаздела9.ДокументОплаты, РеквизитыДокументовОплаты());
		СписокДокументовОплатыРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДокументыОплаты, СтрокаРаздела9.ДокументОплатыРасхождение, РеквизитыДокументовОплаты());
		
		СпискиРеквизитов = Новый Структура("Покупатель, ДокументОплаты");
		СпискиРеквизитов.Покупатель = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокПокупателей, СписокПокупателейРасхождение);
		СпискиРеквизитов.ДокументОплаты = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокДокументовОплаты, СписокДокументовОплатыРасхождение);
		
		ДобавитьСтрокуВВыгрузкуРаздела9(КнигаПродаж, СтрокаРаздела9, СпискиРеквизитов);
		
	КонецЦикла;
	
	КнигаПродажДл = ДанныеДляВыгрузки.КнигаПродажДл;
	Для Каждого СтрокаРаздела9_1 Из ДанныеПояснения.Раздел9_1 Цикл
		
		Если СтрокаРаздела9_1.СуммаНДС18 <> СтрокаРаздела9_1.СуммаНДС18Расхождение 
			ИЛИ СтрокаРаздела9_1.СуммаНДС10 <> СтрокаРаздела9_1.СуммаНДС10Расхождение  Тогда
			// Сумма НДС раздела 9.1 отличается - эту строку не нужно выгружать,
			// по ней требуется предоставить уточненную декларацию
			Продолжить;
		КонецЕсли;
		
		СписокПокупателей = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.Контрагенты, СтрокаРаздела9_1.Покупатель, РеквизитыКонтрагентов());
		СписокПокупателейРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.Контрагенты, СтрокаРаздела9_1.ПокупательРасхождение, РеквизитыКонтрагентов());
		
		СписокДокументовОплаты = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДокументыОплаты, СтрокаРаздела9_1.ДокументОплаты, РеквизитыДокументовОплаты());
		СписокДокументовОплатыРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ДокументыОплаты, СтрокаРаздела9_1.ДокументОплатыРасхождение, РеквизитыДокументовОплаты());
		
		СпискиРеквизитов = Новый Структура("Покупатель, ДокументОплаты");
		СпискиРеквизитов.Покупатель = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокПокупателей, СписокПокупателейРасхождение);
		СпискиРеквизитов.ДокументОплаты = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокДокументовОплаты, СписокДокументовОплатыРасхождение);
		
		ДобавитьСтрокуВВыгрузкуРаздела9(КнигаПродажДл, СтрокаРаздела9_1, СпискиРеквизитов);
		
	КонецЦикла;
	
	ЖурналУчетаВыставленныхСФ = ДанныеДляВыгрузки.ЖурналУчетаВыставленныхСФ;
	Для Каждого СтрокаРаздела10 Из ДанныеПояснения.Раздел10 Цикл
		
		СписокПосредническаяДеятельность = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ПосредническаяДеятельность, СтрокаРаздела10.ПосредническаяДеятельность, РеквизитыПосредническойДеятельности());
		СписокПосредническаяДеятельностьРасхождение = ЗначенияИзТаблицыХраненияПоИдентификатору(ДанныеПояснения.ПосредническаяДеятельность, СтрокаРаздела10.ПосредническаяДеятельность, РеквизитыПосредническойДеятельности());
		
		СпискиРеквизитов = Новый Структура("ПосредническаяДеятельность");
		СпискиРеквизитов.ПосредническаяДеятельность = Новый Структура("Реквизиты, РеквизитыРасхождение", СписокПосредническаяДеятельность, СписокПосредническаяДеятельностьРасхождение);
		
		ДобавитьСтрокуВВыгрузкуРаздела10(ЖурналУчетаВыставленныхСФ, СтрокаРаздела10, СпискиРеквизитов);
		
	КонецЦикла;
	
	ЖурналУчетаПолученныхСФ = ДанныеДляВыгрузки.ЖурналУчетаПолученныхСФ;
	Для Каждого СтрокаРаздела11 Из ДанныеПояснения.Раздел11 Цикл
		
		ДобавитьСтрокуВВыгрузкуРаздела11(ЖурналУчетаПолученныхСФ, СтрокаРаздела11);
		
	КонецЦикла;
	
	ВыставленныеСФ_173_5 = ДанныеДляВыгрузки.ВыставленныеСФ_173_5;
	Для Каждого СтрокаРаздела12 Из ДанныеПояснения.Раздел12 Цикл
		
		Если СтрокаРаздела12.СуммаНДС <> СтрокаРаздела12.СуммаНДСРасхождение Тогда
			// Сумма НДС раздела 12 отличается - эту строку не нужно выгружать,
			// по ней требуется предоставить уточненную декларацию
			Продолжить;
		КонецЕсли;
		
		ДобавитьСтрокуВВыгрузкуРаздела12(ВыставленныеСФ_173_5, СтрокаРаздела12);
		
	КонецЦикла;
	
	СведКС = ДанныеДляВыгрузки.СведКС;
	Для каждого СтрокаСведКС Из ДанныеПояснения.СведКС Цикл
		НоваяСтрока = СведКС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСведКС);
	КонецЦикла;
	
	НетКнигаПрод = ДанныеДляВыгрузки.НетКнигаПрод;
	Для каждого СтрокаНетКнигаПрод Из ДанныеПояснения.НетКнигаПрод Цикл
		
		ДобавитьСтрокуВВыгрузкуНетКнигаПрод(НетКнигаПрод, СтрокаНетКнигаПрод);
		
	КонецЦикла;
	
	ДанныеДляВыгрузки.ПояснИнОсн = ДанныеПояснения.ПояснИнОсн;
	
	Возврат ДанныеДляВыгрузки;
	
КонецФункции

Процедура ДобавитьСтрокуВВыгрузкуРаздела8(ВыгрузкаРаздела8, ДанныеСтроки, СпискиРеквизитов)
	
	Если ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.СведенияВерны Тогда
		// Заполняем таблицу соответствий
		Строка = ВыгрузкаРаздела8.СведенияСоответствуют.Добавить();
		ЗаполнитьСтрокуРаздела8(Строка, ДанныеСтроки, СпискиРеквизитов, "");
		
	ИначеЕсли ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.ВыявленыРасхождения Тогда
		// Заполняем таблицу отличий
		СтрокаРасхождение = ВыгрузкаРаздела8.СведенияРасходятся.Расхождение.Добавить();
		ЗаполнитьСтрокуРаздела8(СтрокаРасхождение, ДанныеСтроки, СпискиРеквизитов, "");
		
		СтрокаПояснение = ВыгрузкаРаздела8.СведенияРасходятся.Пояснение.Добавить();
		ЗаполнитьСтрокуРаздела8(СтрокаПояснение, ДанныеСтроки, СпискиРеквизитов, "Расхождение");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуРаздела8(СтрокаВыгрузкиРаздела8, ДанныеСтроки, СпискиРеквизитов, ПостфиксРеквизита)
	
	СтрокаВыгрузкиРаздела8.НомерПор = ДанныеСтроки["НомерСтрокиДекларации"];
	СтрокаВыгрузкиРаздела8.НомСчФПрод  = ДанныеСтроки["НомерСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела8.ДатаСчФПрод = ДанныеСтроки["ДатаСчетаФактуры"+ПостфиксРеквизита];
	
	СтрокаВыгрузкиРаздела8.НомИспрСчФ  = ДанныеСтроки["НомерИсправленияСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела8.ДатаИспрСчФ = ДанныеСтроки["ДатаИсправленияСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела8.НомКСчФПрод  = ДанныеСтроки["НомерКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела8.ДатаКСчФПрод = ДанныеСтроки["ДатаКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела8.НомИспрКСчФ  = ДанныеСтроки["НомерИсправленияКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела8.ДатаИспрКСчФ = ДанныеСтроки["ДатаИсправленияКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	
	СтрокаВыгрузкиРаздела8.НомТД = ДанныеСтроки["НомерТаможеннойДекларации"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела8.ОКВ   = ДанныеСтроки["КодВалюты"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела8.СтоимПокупВ = ДанныеСтроки["Стоимость"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела8.КодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДанныеСтроки["КодВидаОперации"+ПостфиксРеквизита], ";");
	СтрокаВыгрузкиРаздела8.СвПос  = ДанныеСтроки["ПосредникИНН"+ПостфиксРеквизита];
	
	МассивДокументовОплаты = Новый Массив();
	Реквизиты = Неопределено;
	СпискиРеквизитов.ДокументОплаты.Свойство("Реквизиты"+ПостфиксРеквизита, Реквизиты);
	Для Каждого Строка Из Реквизиты Цикл
		МассивДокументовОплаты.Добавить(Новый Структура("НомДокПдтвОпл, ДатаДокПдтвОпл", Строка.Номер, Строка.Дата));
	КонецЦикла;
	СтрокаВыгрузкиРаздела8.ДокПдтвОпл = МассивДокументовОплаты;
	
	МассивДатПринятияНаУчет = Новый Массив();
	Реквизиты = Неопределено;
	СпискиРеквизитов.ДатаПринятияНаУчет.Свойство("Реквизиты"+ПостфиксРеквизита, Реквизиты);
	Для Каждого Строка Из Реквизиты Цикл
		МассивДатПринятияНаУчет.Добавить(Строка.ДатаПринятияНаУчет);
	КонецЦикла;
	СтрокаВыгрузкиРаздела8.ДатаУчТов = МассивДатПринятияНаУчет;
	
	МассивПродавцов = Новый Массив();
	Реквизиты = Неопределено;
	СпискиРеквизитов.Продавец.Свойство("Реквизиты"+ПостфиксРеквизита, Реквизиты);
	Для Каждого Строка Из Реквизиты Цикл
		МассивПродавцов.Добавить(Строка.ИНН);
	КонецЦикла;
	СтрокаВыгрузкиРаздела8.СвПрод = МассивПродавцов;
	
КонецПроцедуры

Процедура ДобавитьСтрокуВВыгрузкуРаздела9(ВыгрузкаРаздела9, ДанныеСтроки, СпискиРеквизитов)
	
	Если ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.СведенияВерны Тогда
		// Заполняем таблицу соответствий
		Строка = ВыгрузкаРаздела9.СведенияСоответствуют.Добавить();
		ЗаполнитьСтрокуРаздела9(Строка, ДанныеСтроки, СпискиРеквизитов, "");
		
	ИначеЕсли ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.ВыявленыРасхождения Тогда
		// Заполняем таблицу отличий
		СтрокаРасхождение = ВыгрузкаРаздела9.СведенияРасходятся.Расхождение.Добавить();
		ЗаполнитьСтрокуРаздела9(СтрокаРасхождение, ДанныеСтроки, СпискиРеквизитов, "");
		
		СтрокаПояснение = ВыгрузкаРаздела9.СведенияРасходятся.Пояснение.Добавить();
		ЗаполнитьСтрокуРаздела9(СтрокаПояснение, ДанныеСтроки, СпискиРеквизитов, "Расхождение");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуРаздела9(СтрокаВыгрузкиРаздела9, ДанныеСтроки, СпискиРеквизитов, ПостфиксРеквизита)
	
	СтрокаВыгрузкиРаздела9.НомерПор = ДанныеСтроки["НомерСтрокиДекларации"];
	СтрокаВыгрузкиРаздела9.НомСчФПрод  = ДанныеСтроки["НомерСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела9.ДатаСчФПрод = ДанныеСтроки["ДатаСчетаФактуры"+ПостфиксРеквизита];
	
	СтрокаВыгрузкиРаздела9.НомИспрСчФ  = ДанныеСтроки["НомерИсправленияСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела9.ДатаИспрСчФ = ДанныеСтроки["ДатаИсправленияСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела9.НомКСчФПрод  = ДанныеСтроки["НомерКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела9.ДатаКСчФПрод = ДанныеСтроки["ДатаКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела9.НомИспрКСчФ  = ДанныеСтроки["НомерИсправленияКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела9.ДатаИспрКСчФ = ДанныеСтроки["ДатаИсправленияКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	
	СтрокаВыгрузкиРаздела9.ОКВ   = ДанныеСтроки["КодВалюты"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела9.СтоимПродСФВ = ДанныеСтроки["СтоимостьВсего"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела9.КодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДанныеСтроки["КодВидаОперации"+ПостфиксРеквизита], ";");
	
	МассивДокументовОплаты = Новый Массив();
	Реквизиты = Неопределено;
	СпискиРеквизитов.ДокументОплаты.Свойство("Реквизиты"+ПостфиксРеквизита, Реквизиты);
	Для Каждого Строка Из Реквизиты Цикл
		МассивДокументовОплаты.Добавить(Новый Структура("НомДокПдтвОпл, ДатаДокПдтвОпл", Строка.Номер, Строка.Дата));
	КонецЦикла;
	СтрокаВыгрузкиРаздела9.ДокПдтвОпл = МассивДокументовОплаты;
	
	МассивПокупателей = Новый Массив();
	Реквизиты = Неопределено;
	СпискиРеквизитов.Покупатель.Свойство("Реквизиты"+ПостфиксРеквизита, Реквизиты);
	Для Каждого Строка Из Реквизиты Цикл
		МассивПокупателей.Добавить(Строка.ИНН);
	КонецЦикла;
	СтрокаВыгрузкиРаздела9.СвПокуп = МассивПокупателей;
	
	СтрокаВыгрузкиРаздела9.СвПос = ДанныеСтроки["ПосредникИНН"+ПостфиксРеквизита];
	
КонецПроцедуры

Процедура ДобавитьСтрокуВВыгрузкуРаздела10(ВыгрузкаРаздела10, ДанныеСтроки, СпискиРеквизитов)
	
	Если ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.СведенияВерны Тогда
		// Заполняем таблицу соответствий
		Строка = ВыгрузкаРаздела10.СведенияСоответствуют.Добавить();
		ЗаполнитьСтрокуРаздела10(Строка, ДанныеСтроки, СпискиРеквизитов, "");
		
	ИначеЕсли ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.ВыявленыРасхождения Тогда
		// Заполняем таблицу отличий
		СтрокаРасхождение = ВыгрузкаРаздела10.СведенияРасходятся.Расхождение.Добавить();
		ЗаполнитьСтрокуРаздела10(СтрокаРасхождение, ДанныеСтроки, СпискиРеквизитов, "");
		
		СтрокаПояснение = ВыгрузкаРаздела10.СведенияРасходятся.Пояснение.Добавить();
		ЗаполнитьСтрокуРаздела10(СтрокаПояснение, ДанныеСтроки, СпискиРеквизитов, "Расхождение");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуРаздела10(СтрокаВыгрузкиРаздела10, ДанныеСтроки, СпискиРеквизитов, ПостфиксРеквизита)
	
	СтрокаВыгрузкиРаздела10.НомерПор = ДанныеСтроки["НомерСтрокиДекларации"];
	СтрокаВыгрузкиРаздела10.НомСчФПрод  = ДанныеСтроки["НомерСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела10.ДатаСчФПрод = ДанныеСтроки["ДатаСчетаФактуры"+ПостфиксРеквизита];
	
	СтрокаВыгрузкиРаздела10.НомИспрСчФ  = ДанныеСтроки["НомерИсправленияСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела10.ДатаИспрСчФ = ДанныеСтроки["ДатаИсправленияСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела10.НомКСчФПрод  = ДанныеСтроки["НомерКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела10.ДатаКСчФПрод = ДанныеСтроки["ДатаКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела10.НомИспрКСчФ  = ДанныеСтроки["НомерИсправленияКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела10.ДатаИспрКСчФ = ДанныеСтроки["ДатаИсправленияКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	
	СтрокаВыгрузкиРаздела10.КодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДанныеСтроки["КодВидаОперации"+ПостфиксРеквизита], ";");
	СтрокаВыгрузкиРаздела10.СвПокуп = ДанныеСтроки["ПокупательИНН"+ПостфиксРеквизита];
	
	МассивПосредническойДеятельности = Новый Массив();
	Реквизиты = Неопределено;
	СпискиРеквизитов.ПосредническаяДеятельность.Свойство("Реквизиты"+ПостфиксРеквизита, Реквизиты);
	Для Каждого Строка Из Реквизиты Цикл
		СтрокаПосредническойДеятельности = СтруктураСведенияОПосредническойДеятельности();
		СтрокаПосредническойДеятельности.НомСчФОтПрод  = Строка.НомерСчетаФактуры;
		СтрокаПосредническойДеятельности.ДатаСчФОтПрод = Строка.ДатаСчетаФактуры;
		СтрокаПосредническойДеятельности.ОКВ = Строка.КодВалюты;
		СтрокаПосредническойДеятельности.СтоимТовСчФВс = Строка.Стоимость;
		СтрокаПосредническойДеятельности.СвПрод        = Строка.ПродавецИНН;
		МассивПосредническойДеятельности.Добавить(СтрокаПосредническойДеятельности);
	КонецЦикла;
	СтрокаВыгрузкиРаздела10.СвПосрДеят = МассивПосредническойДеятельности;
	
КонецПроцедуры

Процедура ДобавитьСтрокуВВыгрузкуРаздела11(ВыгрузкаРаздела11, ДанныеСтроки)
	
	Если ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.СведенияВерны Тогда
		// Заполняем таблицу соответствий
		Строка = ВыгрузкаРаздела11.СведенияСоответствуют.Добавить();
		ЗаполнитьСтрокуРаздела11(Строка, ДанныеСтроки, "");
		
	ИначеЕсли ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.ВыявленыРасхождения Тогда
		// Заполняем таблицу отличий
		СтрокаРасхождение = ВыгрузкаРаздела11.СведенияРасходятся.Расхождение.Добавить();
		ЗаполнитьСтрокуРаздела11(СтрокаРасхождение, ДанныеСтроки, "");
		
		СтрокаПояснение = ВыгрузкаРаздела11.СведенияРасходятся.Пояснение.Добавить();
		ЗаполнитьСтрокуРаздела11(СтрокаПояснение, ДанныеСтроки, "Расхождение");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуРаздела11(СтрокаВыгрузкиРаздела11, ДанныеСтроки, ПостфиксРеквизита)
	
	СтрокаВыгрузкиРаздела11.НомерПор = ДанныеСтроки["НомерСтрокиДекларации"];
	СтрокаВыгрузкиРаздела11.НомСчФПрод  = ДанныеСтроки["НомерСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела11.ДатаСчФПрод = ДанныеСтроки["ДатаСчетаФактуры"+ПостфиксРеквизита];
	
	СтрокаВыгрузкиРаздела11.НомИспрСчФ  = ДанныеСтроки["НомерИсправленияСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела11.ДатаИспрСчФ = ДанныеСтроки["ДатаИсправленияСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела11.НомКСчФПрод  = ДанныеСтроки["НомерКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела11.ДатаКСчФПрод = ДанныеСтроки["ДатаКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела11.НомИспрКСчФ  = ДанныеСтроки["НомерИсправленияКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела11.ДатаИспрКСчФ = ДанныеСтроки["ДатаИсправленияКорректировочногоСчетаФактуры"+ПостфиксРеквизита];
	
	СтрокаВыгрузкиРаздела11.ОКВ      = ДанныеСтроки["КодВалюты"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела11.СтоимТовСчФВс = ДанныеСтроки["Стоимость"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела11.КодВидСд = ДанныеСтроки["КодВидаСделки"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела11.КодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДанныеСтроки["КодВидаОперации"+ПостфиксРеквизита], ";");
	
	СтрокаВыгрузкиРаздела11.СвПрод = ДанныеСтроки["ПродавецИНН"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела11.СвКомис = ДанныеСтроки["СубкомиссионерИНН"+ПостфиксРеквизита];
	
КонецПроцедуры

Процедура ДобавитьСтрокуВВыгрузкуРаздела12(ВыгрузкаРаздела12, ДанныеСтроки)
	
	Если ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.СведенияВерны Тогда
		// Заполняем таблицу соответствий
		Строка = ВыгрузкаРаздела12.СведенияСоответствуют.Добавить();
		ЗаполнитьСтрокуРаздела12(Строка, ДанныеСтроки, "");
		
	ИначеЕсли ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.ВыявленыРасхождения Тогда
		// Заполняем таблицу отличий
		СтрокаРасхождение = ВыгрузкаРаздела12.СведенияРасходятся.Расхождение.Добавить();
		ЗаполнитьСтрокуРаздела12(СтрокаРасхождение, ДанныеСтроки, "");
		
		СтрокаПояснение = ВыгрузкаРаздела12.СведенияРасходятся.Пояснение.Добавить();
		ЗаполнитьСтрокуРаздела12(СтрокаПояснение, ДанныеСтроки, "Расхождение");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуРаздела12(СтрокаВыгрузкиРаздела12, ДанныеСтроки, ПостфиксРеквизита)
	
	СтрокаВыгрузкиРаздела12.НомерПор = ДанныеСтроки["НомерСтроки"];
	СтрокаВыгрузкиРаздела12.НомСчФ  = ДанныеСтроки["НомерСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела12.ДатаСчФ = ДанныеСтроки["ДатаСчетаФактуры"+ПостфиксРеквизита];
	
	СтрокаВыгрузкиРаздела12.ОКВ      = ДанныеСтроки["КодВалюты"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела12.СтоимТовБНалВс = ДанныеСтроки["СтоимостьБезНДС"+ПостфиксРеквизита];
	СтрокаВыгрузкиРаздела12.СтоимТовСНалВс = ДанныеСтроки["Стоимость"+ПостфиксРеквизита];
	
	СтрокаВыгрузкиРаздела12.СвПокуп = ДанныеСтроки["ПокупательИНН"+ПостфиксРеквизита];
	
КонецПроцедуры

Процедура ДобавитьСтрокуВВыгрузкуНетКнигаПрод(НетКнигаПрод, ДанныеСтроки)
	
	Если ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.СведенияВерны Тогда
		// Заполняем таблицу соответствий
		Строка = НетКнигаПрод.НеподтвЗаписи.Добавить();
		ЗаполнитьСтрокуНеподтвЗаписиРазделаНетКнигаПрод(Строка, ДанныеСтроки);
		
	ИначеЕсли ДанныеСтроки.РезультатПроверки = Перечисления.РезультатПроверкиСтрокиДекларации.ВыявленыРасхождения Тогда
		// Заполняем таблицу отличий
		СтрокаРасхождение = НетКнигаПрод.СведенияРасходятся.Расхождение.Добавить();
		ЗаполнитьСтрокуРазделаНетКнигаПрод(СтрокаРасхождение, ДанныеСтроки, "");
		
		СтрокаПояснение = НетКнигаПрод.СведенияРасходятся.Пояснение.Добавить();
		ЗаполнитьСтрокуРазделаНетКнигаПрод(СтрокаПояснение, ДанныеСтроки, "Расхождение");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуРазделаНетКнигаПрод(СтрокаВыгрузкиРазделаНетКнигаПрод, ДанныеСтроки, ПостфиксРеквизита)
	
	СтрокаВыгрузкиРазделаНетКнигаПрод.НомерСтроки	= ДанныеСтроки["НомерСтроки"];
	СтрокаВыгрузкиРазделаНетКнигаПрод.НомСчФПрод	= ДанныеСтроки["НомерСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРазделаНетКнигаПрод.ДатаСчФПрод 	= ДанныеСтроки["ДатаСчетаФактуры"+ПостфиксРеквизита];
	СтрокаВыгрузкиРазделаНетКнигаПрод.СтоимПродСФВ 	= ДанныеСтроки["СтоимостьВсего"+ПостфиксРеквизита];
	СтрокаВыгрузкиРазделаНетКнигаПрод.СтоимПродСФ 	= ДанныеСтроки["СтоимостьРубВсего"+ПостфиксРеквизита];
	СтрокаВыгрузкиРазделаНетКнигаПрод.Раздел 		= ДанныеСтроки["Раздел"+ПостфиксРеквизита];
	
	СвПокуп = ДанныеКонтрагентаРазделаНетКнигаПрод(
		ДанныеСтроки["ПокупательИНН"+ПостфиксРеквизита], 
		ДанныеСтроки["ПокупательКПП"+ПостфиксРеквизита]);
		
	СтрокаВыгрузкиРазделаНетКнигаПрод.СвПокуп = СвПокуп;
	
	СвПосред = ДанныеКонтрагентаРазделаНетКнигаПрод(
		ДанныеСтроки["ПосредникИНН"+ПостфиксРеквизита], 
		ДанныеСтроки["ПосредникКПП"+ПостфиксРеквизита]);
		
	СтрокаВыгрузкиРазделаНетКнигаПрод.СвПосред = СвПосред;
	
	СтрокаВыгрузкиРазделаНетКнигаПрод.КодВидОпер 	= ДанныеСтроки["КодВидаОперации"+ПостфиксРеквизита];
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуНеподтвЗаписиРазделаНетКнигаПрод(СтрокаВыгрузкиРазделаНетКнигаПрод, ДанныеСтроки)
	
	СтрокаВыгрузкиРазделаНетКнигаПрод.НомСчФПрод 	= ДанныеСтроки["НомерСчетаФактуры"];
	СтрокаВыгрузкиРазделаНетКнигаПрод.ДатаСчФПрод 	= ДанныеСтроки["ДатаСчетаФактуры"];
	
	СвКонтрагент = ДанныеКонтрагентаРазделаНетКнигаПрод(ДанныеСтроки["ПокупательИНН"], ДанныеСтроки["ПокупательКПП"]);
	СтрокаВыгрузкиРазделаНетКнигаПрод.СвКонтрагент 	= СвКонтрагент;
	
КонецПроцедуры

Функция ДанныеКонтрагентаРазделаНетКнигаПрод(ИНН, КПП)

	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ИНН", ИНН);
	ДополнительныеПараметры.Вставить("КПП", КПП);
	
	Возврат ДополнительныеПараметры;
	
КонецФункции 

#КонецОбласти

#Область ОписанияТаблицДляВыгрузки

Функция СтруктураОтветНаТребование()
	
	ОтветНаТребование = Новый Структура;
	
	ОтветНаТребование.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ОтветНаТребование.Вставить("КодНалоговогоОргана", "");
	ОтветНаТребование.Вставить("КнигаПокупок", СтруктураКнигаПокупок());
	ОтветНаТребование.Вставить("КнигаПокупокДЛ", СтруктураКнигаПокупок());
	ОтветНаТребование.Вставить("КнигаПродаж", СтруктураКнигаПродаж());
	ОтветНаТребование.Вставить("КнигаПродажДЛ", СтруктураКнигаПродаж());
	ОтветНаТребование.Вставить("ЖурналУчетаВыставленныхСФ", СтруктураЖурналУчетаВыставленныхСФ());
	ОтветНаТребование.Вставить("ЖурналУчетаПолученныхСФ", СтруктураЖурналУчетаПолученныхСФ());
	ОтветНаТребование.Вставить("ВыставленныеСФ_173_5", СтруктураВыставленныеСФ_173_5());
	ОтветНаТребование.Вставить("НетКнигаПрод", СтруктураНетКнигаПрод());
	ОтветНаТребование.Вставить("СведКС", ТаблицаСведКС());
	ОтветНаТребование.Вставить("ПояснИнОсн", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	
	Возврат ОтветНаТребование;
	
КонецФункции

Функция СтруктураКнигаПокупок()
	
	КнигаПокупок = Новый Структура;
	КнигаПокупок.Вставить("СведенияСоответствуют", ТаблицаКнигаПокупок());
	
	СведенияРасходятся = Новый Структура;
	СведенияРасходятся.Вставить("Расхождение", ТаблицаКнигаПокупок());
	СведенияРасходятся.Вставить("Пояснение", ТаблицаКнигаПокупок());
	
	КнигаПокупок.Вставить("СведенияРасходятся", СведенияРасходятся);
	
	Возврат КнигаПокупок;
	
КонецФункции

Функция ТаблицаКнигаПокупок()
		
	КнигаПокупок = Новый ТаблицаЗначений;
		
	КнигаПокупок.Колонки.Добавить("НомерПор", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
	
	КнигаПокупок.Колонки.Добавить("НомСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	КнигаПокупок.Колонки.Добавить("ДатаСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	КнигаПокупок.Колонки.Добавить("НомИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	КнигаПокупок.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	КнигаПокупок.Колонки.Добавить("НомКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	КнигаПокупок.Колонки.Добавить("ДатаКСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	КнигаПокупок.Колонки.Добавить("НомИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	КнигаПокупок.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	КнигаПокупок.Колонки.Добавить("НомТД", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	КнигаПокупок.Колонки.Добавить("ОКВ", ОбщегоНазначения.ОписаниеТипаСтрока(3));
	
	КнигаПокупок.Колонки.Добавить("СтоимПокупВ", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	
	КнигаПокупок.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	
	КнигаПокупок.Колонки.Добавить("ДокПдтвОпл", Новый ОписаниеТипов("Массив"));
	КнигаПокупок.Колонки.Добавить("ДатаУчТов", Новый ОписаниеТипов("Массив")); // массив значений тип Дата
	
	КнигаПокупок.Колонки.Добавить("СвПрод", Новый ОписаниеТипов("Массив"));
	КнигаПокупок.Колонки.Добавить("СвПос", ОбщегоНазначения.ОписаниеТипаСтрока(12));
	
	Возврат КнигаПокупок;
	
КонецФункции

Функция СтруктураКнигаПродаж()
	
	КнигаПродаж = Новый Структура;
	КнигаПродаж.Вставить("СведенияСоответствуют", ТаблицаКнигаПродаж());
	
	СведенияРасходятся = Новый Структура;
	СведенияРасходятся.Вставить("Расхождение", ТаблицаКнигаПродаж());
	СведенияРасходятся.Вставить("Пояснение", ТаблицаКнигаПродаж());
	
	КнигаПродаж.Вставить("СведенияРасходятся", СведенияРасходятся);
	
	Возврат КнигаПродаж;
	
КонецФункции

Функция ТаблицаКнигаПродаж()
	
	КнигаПродаж = Новый ТаблицаЗначений;
	
	КнигаПродаж.Колонки.Добавить("НомерПор", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
	
	КнигаПродаж.Колонки.Добавить("НомСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	КнигаПродаж.Колонки.Добавить("ДатаСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	КнигаПродаж.Колонки.Добавить("НомИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	КнигаПродаж.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	КнигаПродаж.Колонки.Добавить("НомКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	КнигаПродаж.Колонки.Добавить("ДатаКСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	КнигаПродаж.Колонки.Добавить("НомИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	КнигаПродаж.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	КнигаПродаж.Колонки.Добавить("ОКВ", ОбщегоНазначения.ОписаниеТипаСтрока(3));
	
	КнигаПродаж.Колонки.Добавить("СтоимПродСФВ", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	
	КнигаПродаж.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	КнигаПродаж.Колонки.Добавить("ДокПдтвОпл", Новый ОписаниеТипов("Массив"));
	
	КнигаПродаж.Колонки.Добавить("СвПокуп", Новый ОписаниеТипов("Массив"));
	КнигаПродаж.Колонки.Добавить("СвПос", ОбщегоНазначения.ОписаниеТипаСтрока(12));

	Возврат КнигаПродаж;
	
КонецФункции

Функция СтруктураЖурналУчетаВыставленныхСФ()
	
	ЖурналУчетаВыставленныхСФ = Новый Структура;
	ЖурналУчетаВыставленныхСФ.Вставить("СведенияСоответствуют", ТаблицаЖурналУчетаВыставленныхСФ());
	
	СведенияРасходятся = Новый Структура;
	СведенияРасходятся.Вставить("Расхождение", ТаблицаЖурналУчетаВыставленныхСФ());
	СведенияРасходятся.Вставить("Пояснение", ТаблицаЖурналУчетаВыставленныхСФ());
	
	ЖурналУчетаВыставленныхСФ.Вставить("СведенияРасходятся", СведенияРасходятся);
	
	Возврат ЖурналУчетаВыставленныхСФ;
	
КонецФункции

Функция ТаблицаЖурналУчетаВыставленныхСФ()
	
	ЖурналУчетаВыставленныхСФ = Новый ТаблицаЗначений;
		
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("НомерПор", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
	
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("НомСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("ДатаСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("НомИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("НомКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("ДатаКСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("НомИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("СвПокуп", ОбщегоНазначения.ОписаниеТипаСтрока(12));
	
	ЖурналУчетаВыставленныхСФ.Колонки.Добавить("СвПосрДеят", Новый ОписаниеТипов("Массив")); // СтруктураСведенияОПосредническойДеятельности
	
	Возврат ЖурналУчетаВыставленныхСФ;
	
КонецФункции

Функция СтруктураСведенияОПосредническойДеятельности()
	
	СвПосрДеят = Новый Структура;
	
	СвПосрДеят.Вставить("НомСчФОтПрод", "");
	СвПосрДеят.Вставить("ДатаСчФОтПрод", '00010101');
	СвПосрДеят.Вставить("ОКВ", "");
	СвПосрДеят.Вставить("СтоимТовСчФВс", 0);
	СвПосрДеят.Вставить("СвПрод", "");
	                                      
	Возврат СвПосрДеят;
	
КонецФункции

Функция СтруктураЖурналУчетаПолученныхСФ()
	
	ЖурналУчетаПолученныхСФ = Новый Структура;
	ЖурналУчетаПолученныхСФ.Вставить("СведенияСоответствуют", ТаблицаЖурналУчетаПолученныхСФ());
	
	СведенияРасходятся = Новый Структура;
	СведенияРасходятся.Вставить("Расхождение", ТаблицаЖурналУчетаПолученныхСФ());
	СведенияРасходятся.Вставить("Пояснение", ТаблицаЖурналУчетаПолученныхСФ());
	
	ЖурналУчетаПолученныхСФ.Вставить("СведенияРасходятся", СведенияРасходятся);
	
	Возврат ЖурналУчетаПолученныхСФ;
	
КонецФункции

Функция ТаблицаЖурналУчетаПолученныхСФ()
	
	ЖурналУчетаПолученныхСФ = Новый ТаблицаЗначений;
		
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("НомерПор", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
	
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("НомСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("ДатаСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("НомИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("НомКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("ДатаКСчФПрод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("НомИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("КодВидСд", ОбщегоНазначения.ОписаниеТипаСтрока(1));
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("ОКВ", ОбщегоНазначения.ОписаниеТипаСтрока(3));
	
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("СтоимТовСчФВс", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("СвПрод", ОбщегоНазначения.ОписаниеТипаСтрока(12));
	ЖурналУчетаПолученныхСФ.Колонки.Добавить("СвКомис", ОбщегоНазначения.ОписаниеТипаСтрока(12));

	Возврат ЖурналУчетаПолученныхСФ;
	
КонецФункции

Функция СтруктураВыставленныеСФ_173_5()
	
	ВыставленныеСФ_173_5 = Новый Структура;
	ВыставленныеСФ_173_5.Вставить("СведенияСоответствуют", ТаблицаВыставленныеСФ_173_5());
	
	СведенияРасходятся = Новый Структура;
	СведенияРасходятся.Вставить("Расхождение", ТаблицаВыставленныеСФ_173_5());
	СведенияРасходятся.Вставить("Пояснение", ТаблицаВыставленныеСФ_173_5());
	
	ВыставленныеСФ_173_5.Вставить("СведенияРасходятся", СведенияРасходятся);
	
	Возврат ВыставленныеСФ_173_5;
	
КонецФункции

Функция ТаблицаВыставленныеСФ_173_5()
	
	ВыставленныеСФ_173_5 = Новый ТаблицаЗначений;
		
	ВыставленныеСФ_173_5.Колонки.Добавить("НомерПор",       ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
	ВыставленныеСФ_173_5.Колонки.Добавить("НомСчФ",         ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ВыставленныеСФ_173_5.Колонки.Добавить("ДатаСчФ",        ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ВыставленныеСФ_173_5.Колонки.Добавить("ОКВ",            ОбщегоНазначения.ОписаниеТипаСтрока(3));
	ВыставленныеСФ_173_5.Колонки.Добавить("СтоимТовБНалВс", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	ВыставленныеСФ_173_5.Колонки.Добавить("СтоимТовСНалВс", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	ВыставленныеСФ_173_5.Колонки.Добавить("СвПокуп",        ОбщегоНазначения.ОписаниеТипаСтрока(12));

	Возврат ВыставленныеСФ_173_5;
	
КонецФункции

Функция СтруктураНетКнигаПрод()
	
	НетКнигаПрод = Новый Структура;
	НетКнигаПрод.Вставить("НеподтвЗаписи", НеподтвЗаписи());
	
	СведенияРасходятся = Новый Структура;
	СведенияРасходятся.Вставить("Расхождение", НеКнПрСтрТип());
	СведенияРасходятся.Вставить("Пояснение",   НеКнПрСтрТип());
	
	НетКнигаПрод.Вставить("СведенияРасходятся", СведенияРасходятся);
	
	Возврат НетКнигаПрод;
	
КонецФункции

Функция НеКнПрСтрТип()
	
	НеКнПрСтрТип = Новый ТаблицаЗначений;
	
	НеКнПрСтрТип.Колонки.Добавить("НомерСтроки",  ОбщегоНазначения.ОписаниеТипаЧисло(19, 0));
	НеКнПрСтрТип.Колонки.Добавить("НомСчФПрод",   ОбщегоНазначения.ОписаниеТипаСтрока(0));
	НеКнПрСтрТип.Колонки.Добавить("ДатаСчФПрод",  ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	НеКнПрСтрТип.Колонки.Добавить("СтоимПродСФВ", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	НеКнПрСтрТип.Колонки.Добавить("СтоимПродСФ",  ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
	НеКнПрСтрТип.Колонки.Добавить("Раздел",       ОбщегоНазначения.ОписаниеТипаСтрока(3));
	НеКнПрСтрТип.Колонки.Добавить("СвПокуп",      Новый ОписаниеТипов("Строка, Структура"));
	НеКнПрСтрТип.Колонки.Добавить("СвПосред",     Новый ОписаниеТипов("Строка, Структура"));
	НеКнПрСтрТип.Колонки.Добавить("КодВидОпер",   ОбщегоНазначения.ОписаниеТипаСтрока(2));

	Возврат НеКнПрСтрТип;
	
КонецФункции

Функция НеподтвЗаписи()
	
	НеподтвЗаписи = Новый ТаблицаЗначений;
		
	НеподтвЗаписи.Колонки.Добавить("НомСчФПрод", 	ОбщегоНазначения.ОписаниеТипаСтрока(0));
	НеподтвЗаписи.Колонки.Добавить("ДатаСчФПрод", 	ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	НеподтвЗаписи.Колонки.Добавить("СвКонтрагент", 	Новый ОписаниеТипов("Строка, Структура"));

	Возврат НеподтвЗаписи;
	
КонецФункции

Функция ТаблицаСведКС()
	
	ТаблицаСведКС = Новый ТаблицаЗначений;
	
	ТаблицаСведКС.Колонки.Добавить("НомКС",       ОбщегоНазначения.ОписаниеТипаСтрока(6));
	ТаблицаСведКС.Колонки.Добавить("ПоясненКС",   ОбщегоНазначения.ОписаниеТипаСтрока(0));

	Возврат ТаблицаСведКС;
	
КонецФункции

#КонецОбласти

#Область ПредставленияОшибок

Функция ПредставлениеОшибкиРаздела8(КодОшибки, ГрафаОшибки) Экспорт
	
	Если КодОшибки = 1 Тогда
		Возврат НСтр("ru = 'У контрагента нет записи об операции'");
	ИначеЕсли КодОшибки = 2 Тогда
		Возврат НСтр("ru = 'Операция отражена по разному в разделах 8 и 9'");
	ИначеЕсли КодОшибки = 3 Тогда
		Возврат НСтр("ru = 'Операция отражена по разному в разделах 10 и 11'")
	ИначеЕсли КодОшибки = 4 Тогда
		МассивГраф = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ГрафаОшибки, ";");
		МассивПредставлений = Новый Массив;
		Для Каждого Графа Из МассивГраф Цикл
			Если Графа = "1" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер строки декл.""'"));
			ИначеЕсли Графа = "2" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Код вида опер.""'"));
			ИначеЕсли Графа = "3" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер с/ф""'"));
			ИначеЕсли Графа = "4" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата с/ф""'"));
			ИначеЕсли Графа = "5" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер испр. с/ф""'"));
			ИначеЕсли Графа = "6" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата испр. с/ф""'"));
			ИначеЕсли Графа = "7" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер корр. с/ф""'"));
			ИначеЕсли Графа = "8" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата корр. с/ф""'"));
			ИначеЕсли Графа = "9" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер испр. корр. с/ф""'"));
			ИначеЕсли Графа = "10" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата испр. корр. с/ф""'"));
			ИначеЕсли Графа = "11" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер док.оплаты""'"));
			ИначеЕсли Графа = "12" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата док.оплаты""'"));
			ИначеЕсли Графа = "13" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата принятия на учет""'"));
			ИначеЕсли Графа = "14" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""ИНН продавца""'"));
			ИначеЕсли Графа = "15" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""ИНН посредника""'"));
			ИначеЕсли Графа = "16" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер тамож.декларации""'"));
			ИначеЕсли Графа = "17" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Код валюты""'"));
			ИначеЕсли Графа = "18" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Стоимость""'"));
			ИначеЕсли Графа = "19" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Сумма НДС к вычету""'"));
			КонецЕсли;
		КонецЦикла;
		ГрафыОшибки = СтрСоединить(МассивПредставлений, ", ");
		Если МассивПредставлений.Количество()> 1 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Ошибка в графах %1'");
		Иначе
			СообщениеОбОшибке = НСтр("ru = 'Ошибка в графе %1'");
		КонецЕсли;
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ГрафыОшибки);
	Иначе
		Возврат КодОшибки;
	КонецЕсли;
	
КонецФункции

Функция ПредставлениеОшибкиРаздела9(КодОшибки, ГрафаОшибки) Экспорт
	
	Если КодОшибки = 1 Тогда
		Возврат НСтр("ru = 'У контрагента нет записи об операции'");
	ИначеЕсли КодОшибки = 2 Тогда
		Возврат НСтр("ru = 'Операция отражена по разному в разделах 8 и 9'");
	ИначеЕсли КодОшибки = 3 Тогда
		Возврат НСтр("ru = 'Операция отражена по разному в разделах 10 и 11'")
	ИначеЕсли КодОшибки = 4 Тогда
		МассивГраф = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ГрафаОшибки, ";");
		МассивПредставлений = Новый Массив;
		Для Каждого Графа Из МассивГраф Цикл
			Если Графа = "1" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер строки декл.""'"));
			ИначеЕсли Графа = "2" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Код вида опер.""'"));
			ИначеЕсли Графа = "3" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер с/ф""'"));
			ИначеЕсли Графа = "4" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата с/ф""'"));
			ИначеЕсли Графа = "5" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер испр. с/ф""'"));
			ИначеЕсли Графа = "6" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата испр. с/ф""'"));
			ИначеЕсли Графа = "7" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер корр. с/ф""'"));
			ИначеЕсли Графа = "8" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата корр. с/ф""'"));
			ИначеЕсли Графа = "9" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер испр. корр. с/ф""'"));
			ИначеЕсли Графа = "10" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата испр. корр. с/ф""'"));
			ИначеЕсли Графа = "11" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""ИНН покупателя""'"));
			ИначеЕсли Графа = "12" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""ИНН посредника""'"));
			ИначеЕсли Графа = "13" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер док.оплаты""'"));
			ИначеЕсли Графа = "14" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата док.оплаты""'"));
			ИначеЕсли Графа = "15" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Код валюты""'"));
			ИначеЕсли Графа = "16" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Стомость (всего)""'"));
			ИначеЕсли Графа = "17" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Стоимость (НДС 18%)""'"));
			ИначеЕсли Графа = "18" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Стоимость (НДС 10%)""'"));
			ИначеЕсли Графа = "19" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Стоимость (НДС 0%)""'"));
			ИначеЕсли Графа = "20" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""НДС 18%""'"));
			ИначеЕсли Графа = "21" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""НДС 10%""'"));
			ИначеЕсли Графа = "22" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Стоимость (без НДС)""'"));
			КонецЕсли;
		КонецЦикла;
		ГрафыОшибки = СтрСоединить(МассивПредставлений, ", ");
		Если МассивПредставлений.Количество()> 1 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Ошибка в графах %1'");
		Иначе
			СообщениеОбОшибке = НСтр("ru = 'Ошибка в графе %1'");
		КонецЕсли;
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ГрафыОшибки);
	Иначе
		Возврат КодОшибки;
	КонецЕсли;
	
КонецФункции

Функция ПредставлениеОшибкиРаздела10(КодОшибки, ГрафаОшибки) Экспорт
	
	Если КодОшибки = 1 Тогда
		Возврат НСтр("ru = 'У контрагента нет записи об операции'");
	ИначеЕсли КодОшибки = 2 Тогда
		Возврат НСтр("ru = 'Операция отражена по разному в разделах 8 и 9'");
	ИначеЕсли КодОшибки = 3 Тогда
		Возврат НСтр("ru = 'Операция отражена по разному в разделах 10 и 11'")
	ИначеЕсли КодОшибки = 4 Тогда
		МассивГраф = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ГрафаОшибки, ";");
		МассивПредставлений = Новый Массив;
		Для Каждого Графа Из МассивГраф Цикл
			Если Графа = "1" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер строки декл.""'"));
			ИначеЕсли Графа = "2" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Код вида опер.""'"));
			ИначеЕсли Графа = "3" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер с/ф""'"));
			ИначеЕсли Графа = "4" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата с/ф""'"));
			ИначеЕсли Графа = "5" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер испр. с/ф""'"));
			ИначеЕсли Графа = "6" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата испр. с/ф""'"));
			ИначеЕсли Графа = "7" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер корр. с/ф""'"));
			ИначеЕсли Графа = "8" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата корр. с/ф""'"));
			ИначеЕсли Графа = "9" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер испр. корр. с/ф""'"));
			ИначеЕсли Графа = "10" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата испр. корр. с/ф""'"));
			ИначеЕсли Графа = "11" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""ИНН покупателя""'"));
			ИначеЕсли Графа = "12" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""ИНН субкомиссионера""'"));
			ИначеЕсли Графа = "13" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Код вида сделки""'"));
			ИначеЕсли Графа = "14" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Код валюты""'"));
			ИначеЕсли Графа = "15" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Стоимость (всего)""'"));
			ИначеЕсли Графа = "16" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Сумма НДС""'"));
			ИначеЕсли Графа = "17" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Увеличение стоимости""'"));
			ИначеЕсли Графа = "18" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Уменьшение стоимости""'"));
			ИначеЕсли Графа = "19" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Увеличение суммы НДС""'"));
			ИначеЕсли Графа = "20" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Уменьшение суммы НДС""'"));
			КонецЕсли;
		КонецЦикла;
		ГрафыОшибки = СтрСоединить(МассивПредставлений, ", ");
		Если МассивПредставлений.Количество()> 1 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Ошибка в графах %1'");
		Иначе
			СообщениеОбОшибке = НСтр("ru = 'Ошибка в графе %1'");
		КонецЕсли;
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ГрафыОшибки);
	Иначе
		Возврат КодОшибки;
	КонецЕсли;
	
КонецФункции

Функция ПредставлениеОшибкиРаздела11(КодОшибки, ГрафаОшибки) Экспорт
	
	Если КодОшибки = 1 Тогда
		Возврат НСтр("ru = 'У контрагента нет записи об операции'");
	ИначеЕсли КодОшибки = 2 Тогда
		Возврат НСтр("ru = 'Операция отражена по разному в разделах 8 и 9'");
	ИначеЕсли КодОшибки = 3 Тогда
		Возврат НСтр("ru = 'Операция отражена по разному в разделах 10 и 11'")
	ИначеЕсли КодОшибки = 4 Тогда
		МассивГраф = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ГрафаОшибки, ";");
		МассивПредставлений = Новый Массив;
		Для Каждого Графа Из МассивГраф Цикл
			Если Графа = "1" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер строки декл.""'"));
			ИначеЕсли Графа = "2" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Код вида опер.""'"));
			ИначеЕсли Графа = "3" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер с/ф""'"));
			ИначеЕсли Графа = "4" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата с/ф""'"));
			ИначеЕсли Графа = "5" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер испр. с/ф""'"));
			ИначеЕсли Графа = "6" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата испр. с/ф""'"));
			ИначеЕсли Графа = "7" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер корр. с/ф""'"));
			ИначеЕсли Графа = "8" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата корр. с/ф""'"));
			ИначеЕсли Графа = "9" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер испр. корр. с/ф""'"));
			ИначеЕсли Графа = "10" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата испр. корр. с/ф""'"));
			ИначеЕсли Графа = "11" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""ИНН продавца""'"));
			ИначеЕсли Графа = "12" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""ИНН продавца""'"));
			ИначеЕсли Графа = "13" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер с/ф продавца""'"));
			ИначеЕсли Графа = "14" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата с/ф продавца""'"));
			ИначеЕсли Графа = "15" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Код валюты""'"));
			ИначеЕсли Графа = "16" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Стоимость""'"));
			ИначеЕсли Графа = "17" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Сумма НДС""'"));
			ИначеЕсли Графа = "18" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Уменьшение стоимости""'"));
			ИначеЕсли Графа = "19" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Уменьшение суммы НДС""'"));
			ИначеЕсли Графа = "20" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Увеличение стоимости""'"));
			ИначеЕсли Графа = "21" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Увеличение суммы НДС""'"));
			КонецЕсли;
		КонецЦикла;
		ГрафыОшибки = СтрСоединить(МассивПредставлений, ", ");
		Если МассивПредставлений.Количество()> 1 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Ошибка в графах %1'");
		Иначе
			СообщениеОбОшибке = НСтр("ru = 'Ошибка в графе %1'");
		КонецЕсли;
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ГрафыОшибки);
	Иначе
		Возврат КодОшибки;
	КонецЕсли;
	
КонецФункции

Функция ПредставлениеОшибкиРаздела12(КодОшибки, ГрафаОшибки) Экспорт
	
	Если КодОшибки = 1 Тогда
		Возврат НСтр("ru = 'У контрагента нет записи об операции'");
	ИначеЕсли КодОшибки = 2 Тогда
		Возврат НСтр("ru = 'Операция отражена по разному в разделах 8 и 9'");
	ИначеЕсли КодОшибки = 3 Тогда
		Возврат НСтр("ru = 'Операция отражена по разному в разделах 10 и 11'")
	ИначеЕсли КодОшибки = 4 Тогда
		МассивГраф = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ГрафаОшибки, ";");
		МассивПредставлений = Новый Массив;
		Для Каждого Графа Из МассивГраф Цикл
			Если Графа = "1" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Номер с/ф""'"));
			ИначеЕсли Графа = "2" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Дата с/ф""'"));
			ИначеЕсли Графа = "3" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""ИНН покупателя""'"));
			ИначеЕсли Графа = "4" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Код валюты""'"));
			ИначеЕсли Графа = "5" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Стоимость без НДС""'"));
			ИначеЕсли Графа = "6" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Сумма НДС""'"));
			ИначеЕсли Графа = "7" Тогда
				МассивПредставлений.Добавить(НСтр("ru = '""Стомоисть всего""'"));
			КонецЕсли;
		КонецЦикла;
		ГрафыОшибки = СтрСоединить(МассивПредставлений, ", ");
		Если МассивПредставлений.Количество()> 1 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Ошибка в графах %1'");
		Иначе
			СообщениеОбОшибке = НСтр("ru = 'Ошибка в графе %1'");
		КонецЕсли;
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ГрафыОшибки);
	Иначе
		Возврат КодОшибки;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Записывает массив структур с реквизитами в таблицу хранения
//
// Поля структуры должны соответствовать таблице хранения и содержать все поля, кроеме ИдентификаторЗначения.
//  При записи не проверяется, что реквизиты по идентификатору значения ранее уже были записаны.
// 
// Параметры:
//  МассивСтрок     - Массив - Массив структур с полями, соответствующими таблице хранения.
//  ТаблицаХранения - Таблица документа, хранящая значения для реквизитов (Контрагенты, ДокументыОплаты, ДатыПринятияНаУчет, ПосредническаяДеятельность)
//  ИдентификаторЗначения - Строка (36) - строковое представление уникального идентификатора, которое определяет набор
//
Процедура ЗаписатьМассивРеквизитовВТаблицуХранения(МассивСтрок, ТаблицаХранения, ИдентификаторЗначения) Экспорт
	
	Для Каждого Строка Из МассивСтрок Цикл
		НоваяСтрока = ТаблицаХранения.Добавить();
		НоваяСтрока.ИдентификаторЗначения = ИдентификаторЗначения;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
КонецПроцедуры

// Получает набор значений из таблицы хранения по ИдентификаторуЗначения
//
// Параметры:
//  ТаблицаХранения - Таблица документа, хранящая значения для реквизитов (Контрагенты, ДокументыОплаты, ДатыПринятияНаУчет, ПосредническаяДеятельность)
//  ИдентификаторЗначения - Строка (36) - строковое представление уникального идентификатора, которое определяет набор
//  СписокРеквизитов - Строка - список реквизитов, которые нужно получить из таблицы хранения.
//
// Возвращаемое значение:
//  Массив - Массив структур, список реквизитов которого указан в параметре СписокРеквизитов.
//
Функция ЗначенияИзТаблицыХраненияПоИдентификатору(ТаблицаХранения, ИдентификаторЗначения, СписокРеквизитов) Экспорт
	
	МассивЗначений = Новый Массив();
	
	НайденныеСтроки = ТаблицаХранения.НайтиСтроки(Новый Структура("ИдентификаторЗначения", ИдентификаторЗначения));
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		СтруктураЗначений = Новый Структура(СписокРеквизитов);
		ЗаполнитьЗначенияСвойств(СтруктураЗначений, НайденнаяСтрока, СписокРеквизитов);
		МассивЗначений.Добавить(СтруктураЗначений);
	КонецЦикла;
	
	Возврат МассивЗначений;
	
КонецФункции

Процедура СкопироватьСписокРеквизитаСтроки(ДанныеСтроки, ИмяРеквизита, ДанныеСтрокиИсточника, ИмяРеквизитаИсточника, СписокРеквизитов, ТаблицаХранения, ТаблицаХраненияИсточника)
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки[ИмяРеквизита]) Тогда
		ДанныеСтроки[ИмяРеквизита] = Новый УникальныйИдентификатор;
	КонецЕсли;
	МассивЗначений = ЗначенияИзТаблицыХраненияПоИдентификатору(
				ТаблицаХраненияИсточника, ДанныеСтрокиИсточника[ИмяРеквизитаИсточника], СписокРеквизитов);
	ЗаписатьМассивРеквизитовВТаблицуХранения(МассивЗначений, ТаблицаХранения, ДанныеСтроки[ИмяРеквизита]);
	
КонецПроцедуры

Функция ГрафыОшибок(КодыОшибок)
	
	МассивГрафОшибок = Неопределено;
	КодыОшибок.Свойство("ГрафОш", МассивГрафОшибок);
	Если МассивГрафОшибок <> Неопределено Тогда
		Возврат СтрСоединить(МассивГрафОшибок, ";");
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция КлючСтрокиРаздела12(НомерСчетаФактуры, ДатаСчетаФактуры)
	Возврат СокрЛП(НомерСчетаФактуры)+"_"+Формат(ДатаСчетаФактуры, "ДФ=yyyy-MM-dd");
КонецФункции

Функция ПериодОтраженияЗаписи(ПериодЗап)
	
	Если ТипЗнч(ПериодЗап) = Тип("Структура") И ПериодЗап.Свойство("ПериодСв") Тогда
		Возврат ПериодЗап.ПериодСв + ";" + ПериодЗап.ГодСв;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	// инициализируем контекст ЭДО - модуль обработки
	ТекстСообщения = "";
	КонтекстЭДО = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
	Если КонтекстЭДО = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ОбработкаПолученияФормы("Справочник", "ПоясненияКДекларацииПоНДС", ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти
