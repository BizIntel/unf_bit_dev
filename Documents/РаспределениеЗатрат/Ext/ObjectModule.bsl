#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура заполняет табличную часть по спецификации.
//
Процедура ЗаполнитьТабличнуюЧастьПоСпецификации(ПоСпецификации, ТребуемоеКоличество, ИспользуемаяЕдиницаИзмерения, ПоЗаказу) Экспорт
    
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(СпецификацииСостав.НомерСтроки) КАК СпецификацииСоставНомерСтроки,
	|	СпецификацииСостав.Номенклатура КАК Номенклатура,
	|	СпецификацииСостав.ТипСтрокиСостава КАК ТипСтрокиСостава,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	СпецификацииСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СпецификацииСостав.Спецификация КАК Спецификация,
	|	СУММА(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(&ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА СпецификацииСостав.Количество / СпецификацииСостав.КоличествоПродукции * &Количество
	|			ИНАЧЕ СпецификацииСостав.Количество / СпецификацииСостав.КоличествоПродукции * &Коэффициент * &Количество
	|		КОНЕЦ) КАК Количество,
	|	&ЗаказПокупателя КАК ЗаказПокупателя
	|ИЗ
	|	Справочник.Спецификации.Состав КАК СпецификацииСостав
	|ГДЕ
	|	СпецификацииСостав.Ссылка = &Спецификация
	|	И СпецификацииСостав.Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацииСостав.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	СпецификацииСостав.ЕдиницаИзмерения,
	|	СпецификацииСостав.Спецификация,
	|	СпецификацииСостав.ТипСтрокиСостава,
	|	СпецификацииСостав.ДоляСтоимости
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпецификацииСоставНомерСтроки");
	
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", Константы.ФункциональнаяОпцияИспользоватьХарактеристики.Получить());
	Запрос.УстановитьПараметр("ДатаОбработки", КонецДня(Дата));
	
	Запрос.УстановитьПараметр("ЗаказПокупателя", ПоЗаказу);
	Запрос.УстановитьПараметр("Спецификация", ПоСпецификации);
	Запрос.УстановитьПараметр("Количество", ТребуемоеКоличество);
	
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ИспользуемаяЕдиницаИзмерения);
	
	Если ТипЗнч(ИспользуемаяЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
    	Запрос.УстановитьПараметр("Коэффициент", 1);
	Иначе
		Запрос.УстановитьПараметр("Коэффициент", ИспользуемаяЕдиницаИзмерения.Коэффициент);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Запас);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел Тогда
			
			ЗаполнитьТабличнуюЧастьПоСпецификации(Выборка.Спецификация, Выборка.Количество, Выборка.ЕдиницаИзмерения, ПоЗаказу);
			
		Иначе
			
	    	НоваяСтрока = Запасы.Добавить();
	    	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
		КонецЕсли;
		
   КонецЦикла;

КонецПроцедуры // ЗаполнитьТабличнуюЧастьПоСпецификации()

// Процедура распределяет табличную часть по спецификации.
//
Процедура РаспределитьТабличнуюЧастьПоСпецификации(ПоСтроке, ВременнаяТаблицаРаспределение, СпецификацияПродукции) Экспорт
    
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(СпецификацииСостав.НомерСтроки) КАК СпецификацииСоставНомерСтроки,
	|	СпецификацииСостав.Номенклатура КАК Номенклатура,
	|	СпецификацииСостав.ТипСтрокиСостава КАК ТипСтрокиСостава,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	СпецификацииСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СпецификацииСостав.Спецификация КАК Спецификация,
	|	СУММА(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(&ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА СпецификацииСостав.Количество / СпецификацииСостав.КоличествоПродукции * &Количество
	|			ИНАЧЕ СпецификацииСостав.Количество / СпецификацииСостав.КоличествоПродукции * &Коэффициент * &Количество
	|		КОНЕЦ) КАК Количество,
	|	&Продукция КАК Продукция,
	|	&ХарактеристикаПродукции КАК ХарактеристикаПродукции,
	|	&ПартияПродукция КАК ПартияПродукция,
	|	&ЗаказПокупателя КАК ЗаказПокупателя
	|ИЗ
	|	Справочник.Спецификации.Состав КАК СпецификацииСостав
	|ГДЕ
	|	СпецификацииСостав.Ссылка = &Спецификация
	|	И СпецификацииСостав.Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацииСостав.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	СпецификацииСостав.ЕдиницаИзмерения,
	|	СпецификацииСостав.Спецификация,
	|	СпецификацииСостав.ТипСтрокиСостава,
	|	СпецификацииСостав.ДоляСтоимости
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпецификацииСоставНомерСтроки");
	
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", Константы.ФункциональнаяОпцияИспользоватьХарактеристики.Получить());
	Запрос.УстановитьПараметр("ДатаОбработки", КонецДня(Дата));
	
	Запрос.УстановитьПараметр("Продукция", 					ПоСтроке.Продукция);
	Запрос.УстановитьПараметр("ХарактеристикаПродукции", 	ПоСтроке.ХарактеристикаПродукции);
	Запрос.УстановитьПараметр("ПартияПродукция", 			ПоСтроке.ПартияПродукция);
	Запрос.УстановитьПараметр("ЗаказПокупателя", 			ПоСтроке.ЗаказПокупателя);
	    	
	Запрос.УстановитьПараметр("Спецификация", ПоСтроке.Спецификация);
	Запрос.УстановитьПараметр("Количество", ПоСтроке.Количество);
	
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ПоСтроке.ЕдиницаИзмерения);
	
	Если ТипЗнч(ПоСтроке.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
    	Запрос.УстановитьПараметр("Коэффициент", 1);
	Иначе
		Запрос.УстановитьПараметр("Коэффициент", ПоСтроке.ЕдиницаИзмерения.Коэффициент);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Запас);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел Тогда
			
			РаспределитьТабличнуюЧастьПоСпецификации(Выборка, ВременнаяТаблицаРаспределение, СпецификацияПродукции);
			
		Иначе
			
	    	НоваяСтрока = ВременнаяТаблицаРаспределение.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.СпецификацияПродукции = СпецификацияПродукции;
			
		КонецЕсли;
		
   КонецЦикла;

КонецПроцедуры // РаспределитьТабличнуюЧастьПоСпецификации()

// Процедура выполняет заполнение запасов по нормативам.
//
Процедура ВыполнитьЗаполнениеЗапасовПоНормативам() Экспорт
	
	Запасы.Очистить();
	РаспределениеЗапасов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаспределениеЗатратПродукция.Спецификация КАК Спецификация,
	|	РаспределениеЗатратПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	РаспределениеЗатратПродукция.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаПродукция
	|ИЗ
	|	&РаспределениеЗатратПродукция КАК РаспределениеЗатратПродукция
	|ГДЕ
	|	РаспределениеЗатратПродукция.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СпецификацииСостав.НомерСтроки) КАК СпецификацииСоставНомерСтроки,
	|	СпецификацииСостав.ТипСтрокиСостава КАК ТипСтрокиСостава,
	|	СпецификацииСостав.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	СпецификацииСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СпецификацииСостав.Спецификация КАК Спецификация,
	|	ВременнаяТаблицаПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(СпецификацииСостав.Количество / СпецификацииСостав.КоличествоПродукции * ВременнаяТаблицаПродукция.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ВременнаяТаблицаПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК СпецификацииСостав
	|		ПО ВременнаяТаблицаПродукция.Спецификация = СпецификацииСостав.Ссылка
	|ГДЕ
	|	СпецификацииСостав.Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацииСостав.Номенклатура,
	|	СпецификацииСостав.Спецификация,
	|	СпецификацииСостав.ТипСтрокиСостава,
	|	ВременнаяТаблицаПродукция.ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	СпецификацииСостав.ЕдиницаИзмерения
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпецификацииСоставНомерСтроки";
	
	ИспользоватьХарактеристики = Константы.ФункциональнаяОпцияИспользоватьХарактеристики.Получить(); 
	
	ВременнаяТаблицаПродукция = Продукция.Выгрузить();
	
	Для каждого СтрокаВТ Из ВременнаяТаблицаПродукция Цикл
		Если ТипЗнч(СтрокаВТ.ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
			СтрокаВТ.Количество = СтрокаВТ.Количество * СтрокаВТ.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;	
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("РаспределениеЗатратПродукция", ВременнаяТаблицаПродукция);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", 	ИспользоватьХарактеристики);
	
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Запас);
	
	ТаблицаЗапасы = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ Из ТаблицаЗапасы Цикл
		
		Если СтрокаТЗ.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел Тогда
			
			ЗаполнитьТабличнуюЧастьПоСпецификации(СтрокаТЗ.Спецификация, СтрокаТЗ.Количество, СтрокаТЗ.ЕдиницаИзмерения, СтрокаТЗ.ЗаказПокупателя);
									
		Иначе	
			
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
						
		КонецЕсли;	
		
	КонецЦикла;	
	
	Запасы.Свернуть("Номенклатура, Характеристика, ЕдиницаИзмерения, ЗаказПокупателя, Спецификация", "Количество");
	
	КлючСвязи = 0;
	Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
		СтрокаТабличнойЧасти.КлючСвязи = КлючСвязи;
		КлючСвязи = КлючСвязи + 1;
	КонецЦикла;	
	
КонецПроцедуры // ВыполнитьЗаполнениеЗапасовПоНормативам()

// Процедура выполняет заполнение запасов по нормативам.
//
Процедура ВыполнитьЗаполнениеЗапасовПоОстаткам() Экспорт
	
	Запасы.Очистить();
	РаспределениеЗапасов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
    "ВЫБРАТЬ
    |	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК Количество,
    |	СУММА(ВЫБОР
    |			КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
    |				ТОГДА ЗапасыОстатки.КоличествоОстаток
    |			ИНАЧЕ 0
    |		КОНЕЦ) КАК Резерв,
    |	ЕСТЬNULL(ЗапасыОстатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
    |	ЗапасыОстатки.Характеристика КАК Характеристика,
    |	ЗапасыОстатки.Партия КАК Партия,
    |	ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
    |	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
    |	ЗапасыОстатки.Организация КАК Организация,
    |	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
    |ИЗ
    |	РегистрНакопления.Запасы.Остатки(&ДатаОбработки, ЗаказПокупателя В (&ЗаказПокупателя)) КАК ЗапасыОстатки
    |ГДЕ
    |	ЗапасыОстатки.КоличествоОстаток > 0
    |	И ЗапасыОстатки.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
    |	И ЗапасыОстатки.Организация = &Организация
    |	И ЗапасыОстатки.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
    |
    |СГРУППИРОВАТЬ ПО
    |	ЗапасыОстатки.Партия,
    |	ЗапасыОстатки.Номенклатура,
    |	ЗапасыОстатки.Характеристика,
    |	ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения,
    |	ЗапасыОстатки.Организация,
    |	ЗапасыОстатки.СтруктурнаяЕдиница,
    |	ЗапасыОстатки.ЗаказПокупателя";
	
	МассивЗаказов = Продукция.ВыгрузитьКолонку("ЗаказПокупателя");
	МассивЗаказов.Добавить(Документы.ЗаказПокупателя.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЗаказПокупателя", МассивЗаказов);
	Запрос.УстановитьПараметр("ДатаОбработки", КонецДня(Дата));
	Запрос.УстановитьПараметр("Организация", УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	КлючСвязи = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
        НоваяСтрока.КлючСвязи = КлючСвязи;
		
		КлючСвязи = КлючСвязи + 1;
		
	КонецЦикла;	
	
КонецПроцедуры // ВыполнитьЗаполнениеЗапасовПоОстаткам()

// Процедура выполняет распределение запасов по количеству.
//
Процедура ВыполнитьРаспределениеЗапасовПоНормативам() Экспорт
	
	РаспределениеЗапасов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	РаспределениеЗатратПродукция.Номенклатура КАК Продукция,
	|	РаспределениеЗатратПродукция.Характеристика КАК ХарактеристикаПродукции,
	|	РаспределениеЗатратПродукция.Партия КАК ПартияПродукция,
	|	РаспределениеЗатратПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	РаспределениеЗатратПродукция.Спецификация КАК Спецификация,
	|	РаспределениеЗатратПродукция.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаПродукция
	|ИЗ
	|	&РаспределениеЗатратПродукция КАК РаспределениеЗатратПродукция
	|ГДЕ
	|	РаспределениеЗатратПродукция.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаПродукция.Продукция КАК Продукция,
	|	ВременнаяТаблицаПродукция.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
	|	ВременнаяТаблицаПродукция.ПартияПродукция КАК ПартияПродукция,
	|	ВременнаяТаблицаПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВременнаяТаблицаПродукция.Спецификация КАК СпецификацияПродукции,
	|	СпецификацииСостав.ТипСтрокиСостава КАК ТипСтрокиСостава,
	|	СпецификацииСостав.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	СпецификацииСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СпецификацииСостав.Спецификация КАК Спецификация,
	|	СУММА(СпецификацииСостав.Количество / СпецификацииСостав.КоличествоПродукции * ВременнаяТаблицаПродукция.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ВременнаяТаблицаПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК СпецификацииСостав
	|		ПО ВременнаяТаблицаПродукция.Спецификация = СпецификацииСостав.Ссылка
	|ГДЕ
	|	СпецификацииСостав.Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаПродукция.Продукция,
	|	ВременнаяТаблицаПродукция.ХарактеристикаПродукции,
	|	ВременнаяТаблицаПродукция.ПартияПродукция,
	|	ВременнаяТаблицаПродукция.Спецификация,
	|	СпецификацииСостав.Номенклатура,
	|	СпецификацииСостав.Спецификация,
	|	СпецификацииСостав.ТипСтрокиСостава,
	|	ВременнаяТаблицаПродукция.ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	СпецификацииСостав.ЕдиницаИзмерения";
	
	ИспользоватьХарактеристики = Константы.ФункциональнаяОпцияИспользоватьХарактеристики.Получить(); 
	
	ВременнаяТаблицаПродукция = Продукция.Выгрузить();
	
	Для каждого СтрокаВТ Из ВременнаяТаблицаПродукция Цикл
		Если ТипЗнч(СтрокаВТ.ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
			СтрокаВТ.Количество = СтрокаВТ.Количество * СтрокаВТ.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("РаспределениеЗатратПродукция", ВременнаяТаблицаПродукция);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", 	ИспользоватьХарактеристики);
	
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Запас);
	
	ВременнаяТаблицаРаспределение = Запрос.Выполнить().Выгрузить();
	
	Для н = 0 По ВременнаяТаблицаРаспределение.Количество() - 1 Цикл
		
		СтрокаТЗ = ВременнаяТаблицаРаспределение[н];
		
		Если СтрокаТЗ.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел Тогда
			
			РаспределитьТабличнуюЧастьПоСпецификации(СтрокаТЗ, ВременнаяТаблицаРаспределение, СтрокаТЗ.СпецификацияПродукции);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаЗапасыПоНормативам = ВременнаяТаблицаРаспределение.Скопировать(,"Номенклатура, Характеристика, ЕдиницаИзмерения, Количество");
	ТаблицаЗапасыПоНормативам.Свернуть("Номенклатура, Характеристика, ЕдиницаИзмерения", "Количество");
	ВременнаяТаблицаРаспределение.Колонки.Добавить("ДоляВОбщемКоличестве",Новый ОписаниеТипов("Число",
																		  Новый КвалификаторыЧисла(5, 3, ДопустимыйЗнак.Неотрицательный)));
	ВременнаяТаблицаРаспределение.Колонки.Добавить("ВсегоКоличество",Новый ОписаниеТипов("Число",
																		  Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
																		  
    //Получим процент каждой строки запасов в общем количестве по нормативам
	Для каждого СтрокаТабличнойЧасти Из ТаблицаЗапасыПоНормативам Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура", 		СтрокаТабличнойЧасти.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика", 		СтрокаТабличнойЧасти.Характеристика);
		СтруктураПоиска.Вставить("ЕдиницаИзмерения", 	СтрокаТабличнойЧасти.ЕдиницаИзмерения);
		
		МассивПоиска = ВременнаяТаблицаРаспределение.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаМассива Из МассивПоиска Цикл
			СтрокаМассива.ВсегоКоличество		= СтрокаТабличнойЧасти.Количество;
			СтрокаМассива.ДоляВОбщемКоличестве	= СтрокаМассива.Количество / СтрокаТабличнойЧасти.Количество;
		КонецЦикла;
	КонецЦикла;

    //Получим процент каждой строки продукции в общем количестве продукции
	ВременнаяТаблицаРаспредениеПоПродукции = ВременнаяТаблицаПродукция.Скопировать();
	ВременнаяТаблицаРаспредениеПоПродукции.Колонки.Добавить("ДоляВОбщемКоличестве",Новый ОписаниеТипов("Число",
																		  Новый КвалификаторыЧисла(5, 3, ДопустимыйЗнак.Неотрицательный)));
	ВременнаяТаблицаРаспредениеПоПродукции.Колонки.Добавить("ВсегоКоличество",Новый ОписаниеТипов("Число",
																		  Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
	Для каждого СтрокаТабличнойЧасти Из ВременнаяТаблицаРаспредениеПоПродукции Цикл
		СтрокаТабличнойЧасти.ВсегоКоличество		= ВременнаяТаблицаРаспредениеПоПродукции.Итог("Количество");
		СтрокаТабличнойЧасти.ДоляВОбщемКоличестве	= СтрокаТабличнойЧасти.Количество / СтрокаТабличнойЧасти.ВсегоКоличество;
	КонецЦикла;
	
	//Распределим фактическое количество запасов по продукции
	Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура", 		СтрокаТабличнойЧасти.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика", 		СтрокаТабличнойЧасти.Характеристика);
		СтруктураПоиска.Вставить("ЕдиницаИзмерения", 	СтрокаТабличнойЧасти.ЕдиницаИзмерения);
		СтруктураПоиска.Вставить("ЗаказПокупателя", 	СтрокаТабличнойЧасти.ЗаказПокупателя);
		СтруктураПоиска.Вставить("Спецификация", 		СтрокаТабличнойЧасти.Спецификация);
		
		КоличествоКРаспределению = СтрокаТабличнойЧасти.Количество;
		РезервКРаспределению = СтрокаТабличнойЧасти.Резерв;
		
		МассивПоиска = ВременнаяТаблицаРаспределение.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаМассива Из МассивПоиска Цикл
			
			Если КоличествоКРаспределению > 0 Тогда
				
				СтрокаМассива.Количество = Мин(Окр(СтрокаТабличнойЧасти.Количество*СтрокаМассива.Количество/СтрокаМассива.ВсегоКоличество,3), КоличествоКРаспределению);
				КоличествоКРаспределению = КоличествоКРаспределению - СтрокаМассива.Количество;
				
				СтрокаРезерв = МИН(СтрокаМассива.Количество, РезервКРаспределению);
				РезервКРаспределению = РезервКРаспределению - СтрокаРезерв;
				
				НоваяСтрока = РаспределениеЗапасов.Добавить();
				НоваяСтрока.Количество 		= СтрокаМассива.Количество;
				НоваяСтрока.Резерв 			= СтрокаРезерв;
				НоваяСтрока.Номенклатура	= СтрокаМассива.Продукция;
				НоваяСтрока.Характеристика 	= СтрокаМассива.ХарактеристикаПродукции;
				НоваяСтрока.Партия 			= СтрокаМассива.ПартияПродукция;
				НоваяСтрока.ЗаказПокупателя	= СтрокаМассива.ЗаказПокупателя;
				НоваяСтрока.Спецификация	= СтрокаМассива.СпецификацияПродукции;
				НоваяСтрока.КлючСвязи		= СтрокаТабличнойЧасти.КлючСвязи;
				
			Иначе
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		//Если запасы не указаны в спецификации на продукцию, 
		//распределим пропорционально количеству продукции
		Если МассивПоиска.Количество()=0 Тогда
			
			ВсегоКоличествоПродукции = ВременнаяТаблицаПродукция.Итог("Количество");
			
			Для каждого СтрокаМассива Из ВременнаяТаблицаПродукция Цикл
				
				Если КоличествоКРаспределению > 0 Тогда
					
					ТекКоличество = Мин(Окр(СтрокаТабличнойЧасти.Количество*СтрокаМассива.Количество/ВсегоКоличествоПродукции,3), КоличествоКРаспределению);
					КоличествоКРаспределению = КоличествоКРаспределению - ТекКоличество;
					
					СтрокаРезерв = МИН(ТекКоличество, РезервКРаспределению);
					РезервКРаспределению = РезервКРаспределению - СтрокаРезерв;
					
					НоваяСтрока = РаспределениеЗапасов.Добавить();
					НоваяСтрока.Количество 		= ТекКоличество;
					НоваяСтрока.Резерв 			= СтрокаРезерв;
					НоваяСтрока.Номенклатура	= СтрокаМассива.Номенклатура;
					НоваяСтрока.Характеристика 	= СтрокаМассива.Характеристика;
					НоваяСтрока.Партия 			= СтрокаМассива.Партия;
					НоваяСтрока.ЗаказПокупателя	= СтрокаМассива.ЗаказПокупателя;
					НоваяСтрока.Спецификация	= СтрокаМассива.Спецификация;
					НоваяСтрока.КлючСвязи		= СтрокаТабличнойЧасти.КлючСвязи;
					
				Иначе
					
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
		
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры // ВыполнитьРаспределениеЗапасовПоНормативам()

// Процедура выполняет распределение запасов по количеству.
//
Процедура ВыполнитьРаспределениеЗапасовПоКоличеству() Экспорт
	
	РаспределениеЗапасов.Очистить();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.КлючСвязи КАК КлючСвязи,
	|	ТаблицаЗапасы.Количество КАК Количество,
	|	ТаблицаЗапасы.Резерв КАК Резерв
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	&ТаблицаЗапасы КАК ТаблицаЗапасы";
	
	Запрос.УстановитьПараметр("ТаблицаЗапасы", Запасы.Выгрузить());
	
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПродукция.Номенклатура КАК Номенклатура,
	|	ТаблицаПродукция.Характеристика КАК Характеристика,
	|	ТаблицаПродукция.Партия КАК Партия,
	|	ТаблицаПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаПродукция.Спецификация КАК Спецификация,
	|	ТаблицаПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаПродукция.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаПродукция
	|ИЗ
	|	&ТаблицаПродукция КАК ТаблицаПродукция";
	
	Запрос.УстановитьПараметр("ТаблицаПродукция", Продукция.Выгрузить());
	
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаПродукция.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаПродукция.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаПродукция.Партия КАК Партия,
	|	ВременнаяТаблицаПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВременнаяТаблицаПродукция.Спецификация КАК Спецификация,
	|	ВременнаяТаблицаПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВременнаяТаблицаЗапасы.КлючСвязи КАК КлючСвязи,
	|	ВременнаяТаблицаПродукция.Количество КАК Количество,
	|	ВременнаяТаблицаЗапасы.Количество КАК ВсегоКоличество,
	|	ВременнаяТаблицаЗапасы.Резерв КАК ВсегоРезерв
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаПродукция КАК ВременнаяТаблицаПродукция
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	КлючСвязи";
	
	ВыборкаКлючСвязи = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "КлючСвязи");
	Пока ВыборкаКлючСвязи.Следующий() Цикл
		
		ИсхКоличество = 0;
		ИсхРезерв = 0;
		БазаРаспределенияКоличество = ВыборкаКлючСвязи.Количество;
		БазаРаспределенияРезерв = ВыборкаКлючСвязи.Количество;
		ВыборкаДетализация = ВыборкаКлючСвязи.Выбрать();
		Пока ВыборкаДетализация.Следующий() Цикл
			
			НоваяСтрока = РаспределениеЗапасов.Добавить();
			НоваяСтрока.КлючСвязи = ВыборкаДетализация.КлючСвязи;
			НоваяСтрока.Номенклатура = ВыборкаДетализация.Номенклатура;
			НоваяСтрока.Характеристика = ВыборкаДетализация.Характеристика;
			НоваяСтрока.Партия = ВыборкаДетализация.Партия;
			НоваяСтрока.ЗаказПокупателя = ВыборкаДетализация.ЗаказПокупателя;
			НоваяСтрока.Спецификация = ВыборкаДетализация.Спецификация;
			
			НоваяСтрока.Количество = ?(БазаРаспределенияКоличество <> 0, Окр((ВыборкаДетализация.ВсегоКоличество - ИсхКоличество) * ВыборкаДетализация.Количество / БазаРаспределенияКоличество, 3, 1),0);
			БазаРаспределенияКоличество = БазаРаспределенияКоличество - ВыборкаДетализация.Количество;
			ИсхКоличество = ИсхКоличество + НоваяСтрока.Количество;
			
			НоваяСтрока.Резерв = ?(БазаРаспределенияРезерв <> 0, Окр((ВыборкаДетализация.ВсегоРезерв - ИсхРезерв) * ВыборкаДетализация.Количество / БазаРаспределенияРезерв, 3, 1),0);
			БазаРаспределенияРезерв = БазаРаспределенияРезерв - ВыборкаДетализация.Количество;
			ИсхРезерв = ИсхРезерв + НоваяСтрока.Резерв;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ВыполнитьРаспределениеЗатратПоКоличеству()

// Процедура выполняет заполнение расходов по остаткам.
//
Процедура ВыполнитьЗаполнениеРасходовПоОстаткам() Экспорт
	
	Затраты.Очистить();
	РаспределениеЗатрат.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
    "ВЫБРАТЬ
    |	СУММА(ЗапасыОстатки.СуммаОстаток) КАК Сумма,
    |	ЗапасыОстатки.СчетУчета КАК СчетЗатрат,
    |	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя
    |ИЗ
    |	РегистрНакопления.Запасы.Остатки(
    |			&ДатаОбработки,
    |			Организация = &Организация
    |				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
    |				И Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
    |				И СчетУчета.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.НезавершенноеПроизводство)
    |				И ЗаказПокупателя В (&ЗаказПокупателя)) КАК ЗапасыОстатки
    |ГДЕ
    |	ЗапасыОстатки.СуммаОстаток > 0
    |
    |СГРУППИРОВАТЬ ПО
    |	ЗапасыОстатки.СчетУчета,
    |	ЗапасыОстатки.ЗаказПокупателя";
	
	МассивЗаказов = Продукция.ВыгрузитьКолонку("ЗаказПокупателя");
	МассивЗаказов.Добавить(Документы.ЗаказПокупателя.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЗаказПокупателя", МассивЗаказов);
	Запрос.УстановитьПараметр("ДатаОбработки", КонецДня(Дата));
	Запрос.УстановитьПараметр("Организация", УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	КлючСвязи = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Затраты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
        НоваяСтрока.КлючСвязи = КлючСвязи;
		
		КлючСвязи = КлючСвязи + 1;
		
	КонецЦикла;
	
КонецПроцедуры // ВыполнитьЗаполнениеРасходовПоОстаткам()

// Процедура выполняет распределение расходов по количеству.
//
Процедура ВыполнитьРаспределениеЗатратПоКоличеству() Экспорт
	
	РаспределениеЗатрат.Очистить();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗатраты.КлючСвязи КАК КлючСвязи,
	|	ТаблицаЗатраты.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВременнаяТаблицаЗатраты
	|ИЗ
	|	&ТаблицаЗатраты КАК ТаблицаЗатраты";
	
	Запрос.УстановитьПараметр("ТаблицаЗатраты", Затраты.Выгрузить());
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПродукция.Номенклатура КАК Номенклатура,
	|	ТаблицаПродукция.Характеристика КАК Характеристика,
	|	ТаблицаПродукция.Партия КАК Партия,
	|	ТаблицаПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаПродукция.Спецификация КАК Спецификация,
	|	ТаблицаПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаПродукция.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаПродукция
	|ИЗ
	|	&ТаблицаПродукция КАК ТаблицаПродукция";
	
	Запрос.УстановитьПараметр("ТаблицаПродукция", Продукция.Выгрузить());
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаПродукция.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаПродукция.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаПродукция.Партия КАК Партия,
	|	ВременнаяТаблицаПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВременнаяТаблицаПродукция.Спецификация КАК Спецификация,
	|	ВременнаяТаблицаПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВременнаяТаблицаЗатраты.КлючСвязи КАК КлючСвязи,
	|	ВременнаяТаблицаПродукция.Количество КАК Количество,
	|	ВременнаяТаблицаЗатраты.Сумма КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаЗатраты КАК ВременнаяТаблицаЗатраты,
	|	ВременнаяТаблицаПродукция КАК ВременнаяТаблицаПродукция
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	КлючСвязи";
	
	ВыборкаКлючСвязи = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "КлючСвязи");
	Пока ВыборкаКлючСвязи.Следующий() Цикл
		
		ИсхСумма = 0;
		БазаРаспределения = ВыборкаКлючСвязи.Количество;
		ВыборкаДетализация = ВыборкаКлючСвязи.Выбрать();
		Пока ВыборкаДетализация.Следующий() Цикл
			
			НоваяСтрока = РаспределениеЗатрат.Добавить();
			НоваяСтрока.КлючСвязи = ВыборкаДетализация.КлючСвязи;
			НоваяСтрока.Номенклатура = ВыборкаДетализация.Номенклатура;
			НоваяСтрока.Характеристика = ВыборкаДетализация.Характеристика;
			НоваяСтрока.Партия = ВыборкаДетализация.Партия;
			НоваяСтрока.ЗаказПокупателя = ВыборкаДетализация.ЗаказПокупателя;
			НоваяСтрока.Спецификация = ВыборкаДетализация.Спецификация;
			
			НоваяСтрока.Сумма = ?(БазаРаспределения <> 0, Окр((ВыборкаДетализация.Сумма - ИсхСумма) * ВыборкаДетализация.Количество / БазаРаспределения, 2, 1),0);
			БазаРаспределения = БазаРаспределения - ВыборкаДетализация.Количество;
			ИсхСумма = ИсхСумма + НоваяСтрока.Сумма;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ВыполнитьРаспределениеЗатратПоКоличеству()

// Процедура выполняет заполнение продукции по выпуску.
//
Процедура ВыполнитьЗаполнениеПродукцииПоВыпуску() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыпускПродукцииОбороты.Номенклатура КАК Номенклатура,
	|	ВыпускПродукцииОбороты.Характеристика КАК Характеристика,
	|	ВыпускПродукцииОбороты.Партия КАК Партия,
	|	ВыпускПродукцииОбороты.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВыпускПродукцииОбороты.Спецификация КАК Спецификация,
	|	ВЫБОР
	|		КОГДА &РезервированиеЗапасов
	|			ТОГДА ВыпускПродукцииОбороты.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	СУММА(ВыпускПродукцииОбороты.КоличествоОборот) КАК Количество
	|ИЗ
	|	РегистрНакопления.ВыпускПродукции.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И Номенклатура.ТипНоменклатуры <> &ТипНоменклатурыУслуга) КАК ВыпускПродукцииОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукцииОбороты.Характеристика,
	|	ВыпускПродукцииОбороты.Спецификация,
	|	ВыпускПродукцииОбороты.Партия,
	|	ВыпускПродукцииОбороты.Номенклатура,
	|	ВыпускПродукцииОбороты.ЗаказПокупателя,
	|	ВыпускПродукцииОбороты.Номенклатура.ЕдиницаИзмерения";
	
	Запрос.УстановитьПараметр("РезервированиеЗапасов", Константы.ФункциональнаяОпцияРезервированиеЗапасов.Получить());
	Запрос.УстановитьПараметр("Организация", УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("ТипНоменклатурыУслуга", Перечисления.ТипыНоменклатуры.Услуга);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачалаПериода);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	
	Продукция.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ВыполнитьЗаполнениеПродукцииПоВыпуску()	

#КонецОбласти

#Область ПроцедурыЗаполненияДокумента

// Обработчик заполнения на основании документа СборкаЗапасов.
//
// Параметры:
//  ДокументСсылкаСборкаЗапасов	 - ДокументСсылка.СборкаЗапасов.
//
Процедура ЗаполнитьПоСборкеЗапасов(ДокументСсылкаСборкаЗапасов) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СборкаЗапасов.Ссылка КАК ДокументОснование,
	|	СборкаЗапасов.ВидОперации КАК ВидОперации,
	|	СборкаЗапасов.Организация КАК Организация,
	|	СборкаЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СборкаЗапасов.Ячейка КАК Ячейка,
	|	СборкаЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СборкаЗапасов.Продукция.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Партия КАК Партия,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация
	|	),
	|	СборкаЗапасов.Запасы.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Партия КАК Партия,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация
	|	)
	|ИЗ
	|	Документ.СборкаЗапасов КАК СборкаЗапасов
	|ГДЕ
	|	СборкаЗапасов.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСборкаЗапасов);
	
	ВыборкаИзРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	Если ВыборкаИзРезультатаЗапроса.Следующий() Тогда
		
		Если ВыборкаИзРезультатаЗапроса.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
			ИмяТабличнойЧасти = "Запасы";
		Иначе
			ИмяТабличнойЧасти = "Продукция";
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаИзРезультатаЗапроса);
		
		ВыборкаПродукция = ВыборкаИзРезультатаЗапроса[ИмяТабличнойЧасти].Выбрать();
		Пока ВыборкаПродукция.Следующий() Цикл
			НоваяСтрока = Продукция.Добавить();
			НоваяСтрока.Номенклатура 		= ВыборкаПродукция.Номенклатура;
			НоваяСтрока.Характеристика 		= ВыборкаПродукция.Характеристика;
			НоваяСтрока.Партия 				= ВыборкаПродукция.Партия;
			НоваяСтрока.ЕдиницаИзмерения 	= ВыборкаПродукция.ЕдиницаИзмерения;
			НоваяСтрока.Количество 			= ВыборкаПродукция.Количество;
			НоваяСтрока.Спецификация 		= ВыборкаПродукция.Спецификация;
			НоваяСтрока.ЗаказПокупателя		= ВыборкаИзРезультатаЗапроса.ЗаказПокупателя;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик заполнения на основании документа ЗаказНаПроизводство.
//
// Параметры:
//  ДокументСсылкаЗаказНаПроизводство	 - ДокументСсылка.ЗаказНаПроизводство.
//
Процедура ЗаполнитьПоЗаказуНаПроизводство(ДокументСсылкаЗаказНаПроизводство) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗаказНаПроизводство.Ссылка КАК ДокументОснование,
	|	ЗаказНаПроизводство.Организация КАК Организация,
	|	ЗаказНаПроизводство.ВидОперации КАК ВидОперации,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводство.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводство.Продукция.(
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		Характеристика КАК Характеристика,
	|		Количество КАК Количество,
	|		Резерв КАК Резерв,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация
	|	),
	|	ЗаказНаПроизводство.Запасы.(
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		Характеристика КАК Характеристика,
	|		Количество КАК Количество,
	|		Резерв КАК Резерв,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация
	|	)
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказНаПроизводство);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Услуга);
	
	ВыборкаИзРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	Если ВыборкаИзРезультатаЗапроса.Следующий() Тогда
		
		Если ВыборкаИзРезультатаЗапроса.ВидОперации = Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка Тогда
			ИмяТЧПродукция = "Запасы";
			ИмяТЧЗапасы = "Продукция";
		Иначе
			ИмяТЧПродукция = "Продукция";
			ИмяТЧЗапасы = "Запасы";
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаИзРезультатаЗапроса);
		
		ВыборкаПродукция = ВыборкаИзРезультатаЗапроса[ИмяТЧПродукция].Выбрать();
		Пока ВыборкаПродукция.Следующий() Цикл
			Если ВыборкаПродукция.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = Продукция.Добавить();
			НоваяСтрока.Номенклатура 		= ВыборкаПродукция.Номенклатура;
			НоваяСтрока.Характеристика 		= ВыборкаПродукция.Характеристика;
			НоваяСтрока.ЕдиницаИзмерения 	= ВыборкаПродукция.ЕдиницаИзмерения;
			НоваяСтрока.Количество 			= ВыборкаПродукция.Количество;
			НоваяСтрока.Спецификация 		= ВыборкаПродукция.Спецификация;
			НоваяСтрока.ЗаказПокупателя		= ВыборкаИзРезультатаЗапроса.ЗаказПокупателя;
		КонецЦикла;
		
		КлючСвязи = 0;
		ВыборкаЗапасы = ВыборкаИзРезультатаЗапроса[ИмяТЧЗапасы].Выбрать();
		Пока ВыборкаЗапасы.Следующий() Цикл
			Если ВыборкаПродукция.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас Тогда
				НоваяСтрока = Запасы.Добавить();
				НоваяСтрока.Номенклатура 		= ВыборкаЗапасы.Номенклатура;
				НоваяСтрока.Характеристика 		= ВыборкаЗапасы.Характеристика;
				НоваяСтрока.ЕдиницаИзмерения 	= ВыборкаЗапасы.ЕдиницаИзмерения;
				НоваяСтрока.Количество 			= ВыборкаЗапасы.Количество;
				НоваяСтрока.Резерв 				= ВыборкаЗапасы.Резерв;
				НоваяСтрока.Спецификация 		= ВыборкаЗапасы.Спецификация;
				НоваяСтрока.ЗаказПокупателя		= ВыборкаИзРезультатаЗапроса.ЗаказПокупателя;
				НоваяСтрока.КлючСвязи			= КлючСвязи;
				КлючСвязи = КлючСвязи + 1;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик заполнения на основании документа ЗаказПокупателя.
//
// Параметры:
//  ДокументСсылкаЗаказПокупателя	 - ДокументСсылка.ЗаказПокупателя.
//
Процедура ЗаполнитьПоЗаказуПокупателя(ДокументСсылкаЗаказПокупателя) Экспорт
	
	ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылкаЗаказПокупателя, "ВидОперации");
	
	Если ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести Распределение затрат на основании заказ-наряда!'");
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу Тогда
		ЗаполнитьПоЗаказуПокупателяНаПродажу(ДокументСсылкаЗаказПокупателя);
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаПереработку Тогда
		ЗаполнитьПоЗаказуПокупателяНаПереработку(ДокументСсылкаЗаказПокупателя);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуПокупателяНаПродажу(ДокументСсылкаЗаказПокупателя)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗаказПокупателя.Ссылка КАК ДокументОснование,
	|	ЗаказПокупателя.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателя.СтруктурнаяЕдиницаПродажи.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателя.СтруктурнаяЕдиницаПродажи
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиница,
	|	ЗаказПокупателя.Запасы.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация,
	|		Ссылка КАК ЗаказПокупателя,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|	)
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПокупателя);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаИзРезультатаЗапроса);
	
	ВыборкаЗапасы = ВыборкаИзРезультатаЗапроса.Запасы.Выбрать();
	Пока ВыборкаЗапасы.Следующий() Цикл
		
		Если ВыборкаЗапасы.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда
			
			НоваяСтрока = Продукция.Добавить();
			НоваяСтрока.Номенклатура 		= ВыборкаЗапасы.Номенклатура;
			НоваяСтрока.Характеристика 		= ВыборкаЗапасы.Характеристика;
			НоваяСтрока.ЕдиницаИзмерения 	= ВыборкаЗапасы.ЕдиницаИзмерения;
			НоваяСтрока.Количество 			= ВыборкаЗапасы.Количество;
			НоваяСтрока.Спецификация		= ВыборкаЗапасы.Спецификация;
			НоваяСтрока.ЗаказПокупателя		= ВыборкаЗапасы.ЗаказПокупателя;
			
			ЗаполнитьТабличнуюЧастьПоСпецификации(ВыборкаЗапасы.Спецификация, ВыборкаЗапасы.Количество, ВыборкаЗапасы.ЕдиницаИзмерения, ВыборкаЗапасы.ЗаказПокупателя);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Запасы.Свернуть("Номенклатура, Характеристика, ЕдиницаИзмерения, ЗаказПокупателя, Спецификация", "Количество");
	
	КлючСвязи = 0;
	Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
		СтрокаТабличнойЧасти.КлючСвязи = КлючСвязи;
		КлючСвязи = КлючСвязи + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуПокупателяНаПереработку(ДокументСсылкаЗаказПокупателя)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗаказПокупателя.Ссылка КАК ДокументОснование,
	|	ЗаказПокупателя.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателя.СтруктурнаяЕдиницаПродажи.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателя.СтруктурнаяЕдиницаПродажи
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиница,
	|	ЗаказПокупателя.Запасы.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация,
	|		Ссылка КАК ЗаказПокупателя,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|	),
	|	ЗаказПокупателя.МатериалыЗаказчика.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Ссылка КАК ЗаказПокупателя
	|	)
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПокупателя);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаИзРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаИзРезультатаЗапроса);
	
	ВыборкаМатериалы = ВыборкаИзРезультатаЗапроса.МатериалыЗаказчика.Выбрать();
	
	ВыборкаЗапасы = ВыборкаИзРезультатаЗапроса.Запасы.Выбрать();
	Пока ВыборкаЗапасы.Следующий() Цикл
		
		Если ВыборкаЗапасы.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда
			
			НоваяСтрока = Продукция.Добавить();
			НоваяСтрока.Номенклатура 		= ВыборкаЗапасы.Номенклатура;
			НоваяСтрока.Характеристика 		= ВыборкаЗапасы.Характеристика;
			НоваяСтрока.ЕдиницаИзмерения 	= ВыборкаЗапасы.ЕдиницаИзмерения;
			НоваяСтрока.Количество 			= ВыборкаЗапасы.Количество;
			НоваяСтрока.Спецификация		= ВыборкаЗапасы.Спецификация;
			НоваяСтрока.ЗаказПокупателя		= ВыборкаЗапасы.ЗаказПокупателя;
			
			Если ВыборкаМатериалы.Количество() = 0 Тогда
				ЗаполнитьТабличнуюЧастьПоСпецификации(ВыборкаЗапасы.Спецификация, ВыборкаЗапасы.Количество, ВыборкаЗапасы.ЕдиницаИзмерения, ВыборкаЗапасы.ЗаказПокупателя);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Пока ВыборкаМатериалы.Следующий() Цикл
		
		НоваяСтрока = Запасы.Добавить();
		НоваяСтрока.Номенклатура 		= ВыборкаМатериалы.Номенклатура;
		НоваяСтрока.Характеристика 		= ВыборкаМатериалы.Характеристика;
		НоваяСтрока.ЕдиницаИзмерения 	= ВыборкаМатериалы.ЕдиницаИзмерения;
		НоваяСтрока.Количество 			= ВыборкаМатериалы.Количество;
		НоваяСтрока.ЗаказПокупателя		= ВыборкаМатериалы.ЗаказПокупателя;
		
	КонецЦикла;
	
	Запасы.Свернуть("Номенклатура, Характеристика, ЕдиницаИзмерения, ЗаказПокупателя, Спецификация", "Количество");
	
	КлючСвязи = 0;
	Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
		СтрокаТабличнойЧасти.КлючСвязи = КлючСвязи;
		КлючСвязи = КлючСвязи + 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.СборкаЗапасов")] = "ЗаполнитьПоСборкеЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказНаПроизводство")] = "ЗаполнитьПоЗаказуНаПроизводство";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказуПокупателя";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Запасы.Итог("Количество") <> РаспределениеЗапасов.Итог("Количество") Тогда

		ТекстСообщения = НСтр("ru = 'Количество запасов не соответствует количеству распределения!'");
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения,,,"Запасы",Отказ);
			
	КонецЕсли;
	
	Если Затраты.Итог("Сумма") <> РаспределениеЗатрат.Итог("Сумма") Тогда

		ТекстСообщения = НСтр("ru = 'Сумма расходов не соответствует сумме распределения!'");
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения,,,"Затраты",Отказ);
			
	КонецЕсли;

	Если Константы.ФункциональнаяОпцияРезервированиеЗапасов.Получить() Тогда
		
		Для каждого СтрокаЗапасы Из Запасы Цикл
			
			Если СтрокаЗапасы.Резерв > СтрокаЗапасы.Количество Тогда
				
				ТекстСообщения = НСтр("ru = 'В строке №%Номер% табл. части ""Запасы"" количество позиций к списанию из резерва превышает общее количество запасов.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номер%", СтрокаЗапасы.НомерСтроки);
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
					ЭтотОбъект,
					ТекстСообщения,
					"Запасы",
					СтрокаЗапасы.НомерСтроки,
					"Резерв",
					Отказ
				);
				
			КонецЕсли;	
			
		КонецЦикла;
		
		Для каждого СтрокаРаспределениеЗапасов Из РаспределениеЗапасов Цикл
			
			Если СтрокаРаспределениеЗапасов.Резерв > СтрокаРаспределениеЗапасов.Количество Тогда
				
				ТекстСообщения = НСтр("ru = 'В строке №%Номер% табл. части ""Распределение запасов"" количество позиций к списанию из резерва превышает общее количество запасов.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номер%", СтрокаРаспределениеЗапасов.НомерСтроки);
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
					ЭтотОбъект,
					ТекстСообщения,
					"РаспределениеЗапасов",
					СтрокаРаспределениеЗапасов.НомерСтроки,
					"Резерв",
					Отказ
				);
				
			КонецЕсли;	
			
		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.РаспределениеЗатрат.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасы(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасыПринятые(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьПотребностьВЗапасах(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.РаспределениеЗатрат.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа.
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей.
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.РаспределениеЗатрат.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

#КонецОбласти

#КонецЕсли