
//////////////////////////////////////////////////////////////////////////////// 
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет таблицу запасов.
//
&НаСервере
Процедура ЗаполнитьТаблицуЗапасов()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыПереданныеОстатки.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ЗапасыПереданныеОстатки.Номенклатура.Наименование КАК СТРОКА(50)) КАК НоменклатураНаименование,
	|	ЗапасыПереданныеОстатки.Характеристика КАК Характеристика,
	|	ЗапасыПереданныеОстатки.Партия КАК Партия,
	|	ЗапасыПереданныеОстатки.Заказ КАК ЗаказПокупателя,
	|	СУММА(ЗапасыПереданныеОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ЗапасыПереданныеОстатки.КоличествоОстаток) КАК Остаток,
	|	СУММА(ВЫБОР
	|			КОГДА &ВалютаДокумента = &ВалютаРасчетов
	|				ТОГДА ЗапасыПереданныеОстатки.СуммаРасчетовОстаток
	|			ИНАЧЕ ЕСТЬNULL(ЗапасыПереданныеОстатки.СуммаРасчетовОстаток * КурсВалютыРасчетов.Курс * КурсВалютыДокумента.Кратность / (КурсВалютыДокумента.Курс * КурсВалютыРасчетов.Кратность), 0)
	|		КОНЕЦ) КАК СуммаРасчетов
	|ИЗ
	|	РегистрНакопления.ЗапасыПереданные.Остатки(
	|			,
	|			Организация = &Организация
	|				И Контрагент = &Контрагент
	|				И Договор = &Договор
	|				И ТипПриемаПередачи = ЗНАЧЕНИЕ(Перечисление.ТипыПриемаПередачиТоваров.ПередачаКомиссионеру)) КАК ЗапасыПереданныеОстатки,
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОбработки, Валюта = &ВалютаРасчетов) КАК КурсВалютыРасчетов,
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОбработки, Валюта = &ВалютаДокумента) КАК КурсВалютыДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыПереданныеОстатки.Заказ,
	|	ЗапасыПереданныеОстатки.Номенклатура,
	|	ЗапасыПереданныеОстатки.Характеристика,
	|	ЗапасыПереданныеОстатки.Партия,
	|	ВЫРАЗИТЬ(ЗапасыПереданныеОстатки.Номенклатура.Наименование КАК СТРОКА(50))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураНаименование";
	
	Запрос.УстановитьПараметр("Организация", ОтборОрганизация);
	Запрос.УстановитьПараметр("Контрагент", ОтборКонтрагент);
	Запрос.УстановитьПараметр("Договор", ОтборДоговор);
	Запрос.УстановитьПараметр("ВалютаРасчетов", ОтборДоговор.ВалютаРасчетов);
	Запрос.УстановитьПараметр("ВалютаДокумента", ВалютаДокумента);
	Запрос.УстановитьПараметр("ДатаОбработки", ДатаДокумента);
	
	ТаблицаЗапасов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ЗаполнитьТаблицуЗапасов()

// Функция помещает результаты подбора в хранилище
//
&НаСервере
Функция ПоместитьЗапасыВХранилище()
	
	Запасы = ТаблицаЗапасов.Выгрузить(, "Выбран, Номенклатура, Характеристика, Партия, ЗаказПокупателя, Количество, Остаток, СуммаРасчетов");
	
	МассивУдаляемыхСтрок = Новый Массив;
	Для Каждого СтрокаЗапасы Из Запасы Цикл
		
		Если Не СтрокаЗапасы.Выбран Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаЗапасы);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого НомерСтроки Из МассивУдаляемыхСтрок Цикл
		Запасы.Удалить(НомерСтроки);
	КонецЦикла;
	
	АдресЗапасовВХранилище = ПоместитьВоВременноеХранилище(Запасы, УникальныйИдентификатор);
	
	Возврат АдресЗапасовВХранилище;
	
КонецФункции // ПоместитьЗапасыВХранилище()

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ КОМАНД

// Процедура - обработчик команды ВыбратьСтроки.
//
&НаКлиенте
Процедура ВыбратьСтрокиВыполнить()

	Для Каждого СтрокаТабличнойЧасти Из ТаблицаЗапасов Цикл
		
		СтрокаТабличнойЧасти.Выбран = Истина;
		
	КонецЦикла;
	
КонецПроцедуры // ВыбратьСтрокиВыполнить()

// Процедура - обработчик команды ИсключитьСтроки.
//
&НаКлиенте
Процедура ИсключитьСтрокиВыполнить()

	Для Каждого СтрокаТабличнойЧасти Из ТаблицаЗапасов Цикл
		
		СтрокаТабличнойЧасти.Выбран = Ложь
		
	КонецЦикла;
	
КонецПроцедуры // ИсключитьСтрокиВыполнить()

// Процедура - обработчик команды ВыбратьВыделенные.
//
&НаКлиенте
Процедура ВыбратьВыделенныеСтроки(Команда)
	
	МассивСтрок = Элементы.ТаблицаЗапасов.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		
		СтрокаТабличнойЧасти = ТаблицаЗапасов.НайтиПоИдентификатору(НомерСтроки);
		Если СтрокаТабличнойЧасти <> Неопределено Тогда
			СтрокаТабличнойЧасти.Выбран = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ВыбратьВыделенныеСтроки()

// Процедура - обработчик команды ИсключитьВыделенные.
//
&НаКлиенте
Процедура ИсключитьВыделенныеСтроки(Команда)
	
	МассивСтрок = Элементы.ТаблицаЗапасов.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		
		СтрокаТабличнойЧасти = ТаблицаЗапасов.НайтиПоИдентификатору(НомерСтроки);
		Если СтрокаТабличнойЧасти <> Неопределено Тогда
			СтрокаТабличнойЧасти.Выбран = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ИсключитьВыделенныеСтроки()

// Процедура - обработчик команды ПеренестиВДокумент.
//
&НаКлиенте
Процедура ПеренестиВДокументВыполнить()
	
	АдресЗапасовВХранилище = ПоместитьЗапасыВХранилище();
	ОповеститьОВыборе(АдресЗапасовВХранилище);
	
КонецПроцедуры // ПеренестиВДокументВыполнить()

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события ПриСозданииНаСервере формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтборОрганизация = Параметры.Организация;
	ОтборКонтрагент = Параметры.Контрагент;
	ОтборДоговор = Параметры.Договор;
	ВалютаДокумента = Параметры.ВалютаДокумента;
	ДатаДокумента = Параметры.ДатаДокумента;
	
	ЗаполнитьТаблицуЗапасов();
	
КонецПроцедуры // ПриСозданииНаСервере()

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

// Процедура - обработчик события Выбор табличной части ТаблицаЗапасов.
//
&НаКлиенте
Процедура ТаблицаЗапасовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.ТаблицаЗапасов.ТекущиеДанные <> Неопределено Тогда
		Если Поле.Имя = "ТаблицаЗапасовЗаказПокупателя" Тогда
			ПоказатьЗначение(Неопределено, Элементы.ТаблицаЗапасов.ТекущиеДанные.ЗаказПокупателя);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ТаблицаЗапасовВыбор()

// Процедура - обработчик события ПриИзменении поля Количество табличной части ТаблицаЗапасов.
//
&НаКлиенте
Процедура ТаблицаЗапасовКоличествоПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ТаблицаЗапасов.ТекущиеДанные;
	СтрокаТабличнойЧасти.Выбран = (СтрокаТабличнойЧасти.Количество <> 0);
	
КонецПроцедуры // ТаблицаЗапасовКоличествоПриИзменении()
