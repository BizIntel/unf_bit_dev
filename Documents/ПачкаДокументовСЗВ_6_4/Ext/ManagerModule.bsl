#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Процедуры получения данных для заполнения и проведения документа.

Функция СформироватьЗапросПоЗаписямСтажаДляПечати(МассивСсылок) Экспорт 	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.НомерОсновнойЗаписи КАК НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи КАК НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	"""" КАК ТерриториальныеУсловияКод,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	"""" КАК ОсобыеУсловияТрудаКод,
	|	"""" КАК КодПозицииСпискаКод,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	"""" КАК ОснованиеИсчисляемогоСтажаКод,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	"""" КАК ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	"""" КАК ОснованиеВыслугиЛетКод,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка КАК Ссылка
	|ИЗ
	|	ВТСотрудникиДокумента КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.ЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|			И ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка = ЗаписиОСтаже.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	НомерОсновнойЗаписи,
	|	НомерДополнительнойЗаписи";
	
	Возврат Запрос.Выполнить();
КонецФункции	

Функция СформироватьЗапросПоЗаработкуДляПечати(МассивОбъектов)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Месяц КАК Месяц,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.СведенияОЗаработке КАК ПачкаДокументовСЗВ_6_4СведенияОЗаработке
	|		ПО ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка = ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка
	|			И ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник = ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Сотрудник
	|			И (ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка В (&МассивОбъектов))
	|			И (ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка В (&МассивОбъектов))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Месяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтрокиСотрудник,
	|	Месяц";
	
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции	

Функция СформироватьЗапросПоСпискуЗастрахованныхЛицДляПечати(МассивСсылок)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции	

Функция СформироватьЗапросПоШапкеДляПечати(МассивСсылок)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4.Организация.РегистрационныйНомерПФР КАК РегНомерПФР,
	|	ПачкаДокументовСЗВ_6_4.Организация.Наименование КАК НаименованиеОрганиазции,
	|	ПачкаДокументовСЗВ_6_4.Организация.ИНН КАК ИНН,
	|	ПачкаДокументовСЗВ_6_4.Организация.КПП КАК КПП,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_4.КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4.Руководитель КАК Руководитель,
	|	ПачкаДокументовСЗВ_6_4.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	ПачкаДокументовСЗВ_6_4.Дата,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	ПачкаДокументовСЗВ_6_4.Организация.КодПоОКПО КАК КодПоОКПО,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора,
	|	ПачкаДокументовСЗВ_6_4.РегистрационныйНомерПФРвКорректируемыйПериод
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка В(&МассивСсылок)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Руководитель";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4.РегНомерПФР КАК РегНомерПФР,
	|	ПачкаДокументовСЗВ_6_4.НаименованиеОрганиазции КАК НаименованиеОрганиазции,
	|	ПачкаДокументовСЗВ_6_4.ИНН КАК ИНН,
	|	ПачкаДокументовСЗВ_6_4.КПП КАК КПП,
	|	ПачкаДокументовСЗВ_6_4.КодПоОКПО КАК ОКПО,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_4.КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4.Руководитель,
	|	ПачкаДокументовСЗВ_6_4.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	ПачкаДокументовСЗВ_6_4.Дата,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	ПачкаДокументовСЗВ_6_4.РегистрационныйНомерПФРвКорректируемыйПериод
	|ИЗ
	|	ВТДанныеДокументов КАК ПачкаДокументовСЗВ_6_4
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить();
КонецФункции

Функция СформироватьЗапросПоШапкеДляАДВ_5(МассивОбъектов) Экспорт 

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Застрахованные.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(Застрахованные.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(Застрахованные.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(Застрахованные.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	КОЛИЧЕСТВО(Застрахованные.НомерСтроки) КАК Количество,
	|	Застрахованные.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4.Номер,
	|	ПачкаДокументовСЗВ_6_4.Дата КАК Дата,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	ПачкаДокументовСЗВ_6_4.ДолжностьРуководителя КАК РуководительДолжность,
	|	ПачкаДокументовСЗВ_6_4.Организация.Наименование КАК НаименованиеОрганизации,
	|	ПачкаДокументовСЗВ_6_4.Организация.РегистрационныйНомерПФР КАК РегНомерПФР,
	|	ПачкаДокументовСЗВ_6_4.Организация.ИНН КАК ИНН,
	|	ПачкаДокументовСЗВ_6_4.Организация.КПП КАК КПП,
	|	ГОД(ПачкаДокументовСЗВ_6_4.ОтчетныйПериод) КАК Год,
	|	ПачкаДокументовСЗВ_6_4.КорректируемыйПериод КАК КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4.Руководитель КАК Руководитель,
	|	ПачкаДокументовСЗВ_6_4.Организация.КодПоОКПО КАК КодПоОКПО,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка В(&МассивСсылок)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Руководитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|ПОМЕСТИТЬ ВТИтогиПоЗаработку
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.СведенияОЗаработке КАК ПачкаДокументовСЗВ_6_4СведенияОЗаработке
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка";
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4.Номер,
	|	ПачкаДокументовСЗВ_6_4.Дата КАК Дата,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	ПачкаДокументовСЗВ_6_4.РуководительДолжность КАК РуководительДолжность,
	|	ПачкаДокументовСЗВ_6_4.НаименованиеОрганизации КАК НаименованиеОрганизации,
	|	ПачкаДокументовСЗВ_6_4.РегНомерПФР КАК РегНомерПФР,
	|	ПачкаДокументовСЗВ_6_4.ИНН КАК ИНН,
	|	ПачкаДокументовСЗВ_6_4.КПП КАК КПП,
	|	ПачкаДокументовСЗВ_6_4.КодПоОКПО КАК КодПоОКПО,
	|	ПачкаДокументовСЗВ_6_4.Год КАК Год,
	|	""СЗВ-6-1"" КАК ТипФормДокументов,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоСтраховая, 0) КАК УплаченоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоНакопительная, 0) КАК НачисленоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоНакопительная, 0) КАК УплаченоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ИтогиПоЗаработку.Заработок, 0) КАК Заработок,
	|	ЕСТЬNULL(ИтогиПоЗаработку.ОблагаетсяВзносамиДоПредельнойВеличины, 0) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ЕСТЬNULL(ИтогиПоЗаработку.ОблагаетсяВзносамиСвышеПредельнойВеличины, 0) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	ЕСТЬNULL(ИтогиПоЗаработку.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах, 0) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	ЕСТЬNULL(ИтогиПоЗаработку.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах, 0) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	ПачкаДокументовСЗВ_6_4.КорректируемыйПериод КАК КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4.Руководитель
	|ИЗ
	|	ВТДанныеДокументов КАК ПачкаДокументовСЗВ_6_4
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ИтогиПоВзносам
	|		ПО ПачкаДокументовСЗВ_6_4.Ссылка = ИтогиПоВзносам.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтогиПоЗаработку КАК ИтогиПоЗаработку
	|		ПО (ПачкаДокументовСЗВ_6_4.Ссылка = ИтогиПоВзносам.Ссылка)
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить();

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Для обеспечения формирования выходного файла

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Ссылка) Экспорт 

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Застрахованные.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(Застрахованные.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(Застрахованные.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(Застрахованные.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	КОЛИЧЕСТВО(Застрахованные.НомерСтроки) КАК Количество
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка,
	|	ПачкаДокументовСЗВ_6_4.Номер,
	|	ПачкаДокументовСЗВ_6_4.Дата,
	|	ПачкаДокументовСЗВ_6_4.Проведен,
	|	ПачкаДокументовСЗВ_6_4.Организация,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ПачкаДокументовСЗВ_6_4.КорректируемыйПериод
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	ПачкаДокументовСЗВ_6_4.ДокументПринятВПФР,
	|	ПачкаДокументовСЗВ_6_4.Ответственный,
	|	ПачкаДокументовСЗВ_6_4.ДолжностьРуководителя КАК РуководительДолжность,
	|	ПачкаДокументовСЗВ_6_4.Организация.Наименование,
	|	ПачкаДокументовСЗВ_6_4.Организация.ЮридическоеФизическоеЛицо КАК ОрганизацияЮрФизЛицо,
	|	ПачкаДокументовСЗВ_6_4.Организация.ОГРН,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_4.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(ПачкаДокументовСЗВ_6_4.Организация.КодПоОКПО,1,8)
	|		ИНАЧЕ ПачкаДокументовСЗВ_6_4.Организация.КодПоОКПО
	|	КОНЕЦ КАК ОрганизацияКодПоОКПО,
	|	ПачкаДокументовСЗВ_6_4.Организация.НаименованиеПолное,
	|	ПачкаДокументовСЗВ_6_4.Организация.Наименование КАК НаименованиеСокращенное,
	|	ПачкаДокументовСЗВ_6_4.Организация.РегистрационныйНомерПФР,
	|	"""" РайонныйКоэффициент,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_4.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(ПачкаДокументовСЗВ_6_4.Организация.ИНН,1,10)
	|		ИНАЧЕ ПачкаДокументовСЗВ_6_4.Организация.ИНН
	|	КОНЕЦ КАК ОрганизацияИНН,
	|	ПачкаДокументовСЗВ_6_4.Организация.КПП,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_4.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПачкаДокументовСЗВ_6_4.Организация
	|		ИНАЧЕ ПачкаДокументовСЗВ_6_4.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ГОД(ПачкаДокументовСЗВ_6_4.ОтчетныйПериод) КАК Год,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_4.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|		ТОГДА ПОДСТРОКА(ПачкаДокументовСЗВ_6_4.Организация.КодПоОКПО,1,8)
	|		ИНАЧЕ ПачкаДокументовСЗВ_6_4.Организация.КодПоОКПО
	|	КОНЕЦ КАК ОКПО,
	|	""СЗВ-6-1"" КАК ТипФормДокументов,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоСтраховая, 0) КАК УплаченоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоНакопительная, 0) КАК НачисленоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоНакопительная, 0) КАК УплаченоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.Количество, 0) КАК Количество,
	|	ПачкаДокументовСЗВ_6_4.ИмяФайлаДляПФР,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПачкаДокументовСЗВ_6_4.Организация.ГоловнаяОрганизация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ИтогиПоВзносам
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();

КонецФункции

Функция СформироватьЗапросПоЗаписямСтажа(Ссылка) Экспорт 
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоНакопительная
	|ПОМЕСТИТЬ ВТДанныеСотрудников
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.НомерОсновнойЗаписи КАК НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи КАК НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	"""" ТерриториальныеУсловияКод,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий КАК ТерриториальныеУсловияСтавка,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	"""" ОсобыеУсловияТрудаКод,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	"""" КодПозицииСпискаКод,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	"""" ОснованиеИсчисляемогоСтажаКод,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	"""" КАК ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	"""" ОснованиеВыслугиЛетКод,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоНакопительная
	|ИЗ
	|	ВТДанныеСотрудников КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.ЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|			И (ЗаписиОСтаже.Ссылка = &Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	НомерОсновнойЗаписи,
	|	НомерДополнительнойЗаписи";
	
	Возврат Запрос.Выполнить();
КонецФункции	

Функция ТекстФайлаСведенийОВзносахСтажеЗаработке(ВыборкаПоШапкеДокумента, ВыборкаПоСотрудникам, СведенияОЗаработке)
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыводитьВзносыЗаРаботыСДосрочнойПенсией = Ложь;
	
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70_2010XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = СправкиПоНДФЛ.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);

	ДатаЗаполнения 			= ВыборкаПоШапкеДокумента.Дата;
	ТипФормДокументов		= ВыборкаПоШапкеДокумента.ТипФормДокументов;
	НомерПачки				= ВыборкаПоШапкеДокумента.НомерПачки;
	Ссылка					= ВыборкаПоШапкеДокумента.Ссылка;

	///////////////////////////////////////////////////////////////////////////////////////////
	//ФОРМИРУЕМ ФАЙЛ СВЕДЕНИЙ
	
	МакетФормата = ПолучитьОбщийМакет("ФорматПФР70_2010XML");
	ДеревоФормата = СправкиПоНДФЛ.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	ФорматСЗВ6 = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СЗВ_6_4");
	ДанныеВходящейОписи = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "ОПИСЬ_ВЫПЛАТ_ВЗНОСОВ");
	НаборЗаписейСуммаВыплатИвознаграждений = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматСЗВ6.СуммаВыплатИвознагражденийВпользуЗЛ.Значение);
	ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийВпользуЗЛ");
	ДанныеВходящейОписи.Удалить("СуммаВыплатИвознагражденийВпользуЗЛ");
	НаборЗаписейСуммаВыплатПоДопТарифу = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматСЗВ6.СуммаВыплатИвознагражденийПоДопТарифу.Значение);
	ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийПоДопТарифу");
	
	Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		ФорматСЗВ6.Удалить("СуммаВзносовНаСтраховую");
		ФорматСЗВ6.Удалить("СуммаВзносовНаНакопительную");
		ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийПоДопТарифу");
		ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийВпользуЗЛ");
		ФорматСЗВ6.Удалить("СтажевыйПериод");
		
	Иначе
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ФорматСЗВ6.Удалить("КорректируемыйОтчетныйПериод");
			ФорматСЗВ6.Удалить("РегистрационныйНомерКорректируемогоПериода");
		КонецЕсли;
		ФорматСуммаВзносов = Новый Структура("СуммаВзносовНаСтраховую", ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматСЗВ6.СуммаВзносовНаСтраховую));
		ФорматСуммаВзносов.Вставить("СуммаВзносовНаНакопительную", ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматСЗВ6.СуммаВзносовНаНакопительную));
		ФорматСЗВ6.Удалить("СуммаВзносовНаСтраховую");
		ФорматСЗВ6.Удалить("СуммаВзносовНаНакопительную");
	КонецЕсли;
	
	Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(ВыборкаПоШапкеДокумента.Организация) Тогда
		ФорматСЗВ6.Удалить("КПП");
		ТаблицаПолей = ФорматСЗВ6.НалоговыйНомер.Поля;
		ТаблицаПолей.Индексы.Добавить("ИмяПоля");
		СтрокаКПП = ТаблицаПолей.Найти("КПП", "ИмяПоля");
		Если СтрокаКПП <> Неопределено Тогда
			ТаблицаПолей.Удалить(СтрокаКПП);
		КонецЕсли;
	КонецЕсли;
	
	ФорматДатаЗаполнения = Новый Структура("ДатаЗаполнения", ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматСЗВ6.ДатаЗаполнения));
	ФорматСЗВ6.Удалить("ДатаЗаполнения");
	
	ТипДокументовПачки = "СВЕДЕНИЯ_О_СУММЕ_ВЫПЛАТ_О_СТРАХОВЫХ_ВЗНОСАХ_И_СТРАХОВОМ_СТАЖЕ_ЗЛ";
	
	// Создаем начальное дерево
	ДеревоВыгрузки = СправкиПоНДФЛ.СоздатьДеревоXML();
	УзелПФР = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ФайлПФР", "", );
	УчетСтраховыхВзносов.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
	
	// Добавляем ветки ПачкаВходящихДокументов и ВходящаяОпись
	ДанныеВходящейОписи.НомерВПачке.Значение = 1;
	// Составитель пачки
	НаборЗаписейСоставительПачки = ДанныеВходящейОписи.СоставительПачки.Значение; 
	УчетСтраховыхВзносов.ЗаполнитьСоставительПачки(НаборЗаписейСоставительПачки, ВыборкаПоШапкеДокумента);

	// Устанавливаем значение Номер пачки
	ДанныеВходящейОписи.НомерПачки.Значение.Основной = Формат(ВыборкаПоШапкеДокумента.НомерПачки, "ЧГ="); 
	// Блок СоставДокументов
	НаборЗаписейСоставДокументов = ДанныеВходящейОписи.СоставДокументов.Значение;
	НаборЗаписейСоставДокументов.Количество.Значение = 1;
	НаборЗаписейНаличиеДокументов = НаборЗаписейСоставДокументов.НаличиеДокументов.Значение;
	НаборЗаписейНаличиеДокументов.ТипДокумента = ТипДокументовПачки;
	НаборЗаписейНаличиеДокументов.Количество = ВыборкаПоШапкеДокумента.Количество;
			
	Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ПериодДокумента = ВыборкаПоШапкеДокумента.ОтчетныйПериод;
	Иначе
		ПериодДокумента = ВыборкаПоШапкеДокумента.КорректируемыйПериод;
	КонецЕсли;	
		
	ДанныеВходящейОписи.ТипСведений.Значение = Строка(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ);
	ДанныеВходящейОписи.ТипДоговора.Значение = Строка(ВыборкаПоШапкеДокумента.ТипДоговора);
	ДанныеВходящейОписи.КодКатегории.Значение = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
	
	НаборЗаписейОтчетныйПериод = ДанныеВходящейОписи.ОтчетныйПериод.Значение;
	ЗаполнитьЗначенияСвойств(НаборЗаписейОтчетныйПериод,УчетСтраховыхВзносов.ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.ОтчетныйПериод));
	
	ДанныеВходящейОписи.ДатаСоставления.Значение = ВыборкаПоШапкеДокумента.Дата;

	Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ДанныеВходящейОписи.Удалить("КорректируемыйОтчетныйПериод");
	Иначе
		НаборЗаписейОтчетныйПериод = ДанныеВходящейОписи.КорректируемыйОтчетныйПериод.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейОтчетныйПериод,УчетСтраховыхВзносов.ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.КорректируемыйПериод));
	КонецЕсли;
	
	ДанныеОСуммахВзносовОписи = Новый Структура("СуммаВзносовНаСтраховую", ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ДанныеВходящейОписи.СуммаВзносовНаСтраховую));
	ДанныеОСуммахВзносовОписи.Вставить("СуммаВзносовНаНакопительную", ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ДанныеВходящейОписи.СуммаВзносовНаНакопительную));
	ДанныеВходящейОписи.Удалить("СуммаВзносовНаСтраховую");
	ДанныеВходящейОписи.Удалить("СуммаВзносовНаНакопительную");
		
	ДанныеНабораВходящаяОпись = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ДанныеВходящейОписи);	
		
	УзелПачкаВходящихДокументов = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПФР, "ПачкаВходящихДокументов", "", );
	УзелВходящейОписи = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ","");
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелВходящейОписи, ДанныеВходящейОписи);
		
	ФорматДатаЗаполнения.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
	
	ДанныеОДоходахДляОписи = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(НаборЗаписейСуммаВыплатИвознаграждений);
	ДанныеОДоходахДляОписи.Удалить("Месяц");
	ДанныеОДоходахДляОписи.ТипСтроки.Значение = "ИТОГ";
	ДанныеОДоходахДляОписи.СуммаВыплатВсего.Значение = СведенияОЗаработке.Итог("Заработок");
	ДанныеОДоходахДляОписи.СуммаВыплатНачисленыСтраховыеВзносыНепревышающие.Значение = СведенияОЗаработке.Итог("ОблагаетсяВзносамиДоПредельнойВеличины");
	ДанныеОДоходахДляОписи.СуммаВыплатНачисленыСтраховыеВзносыПревышающие.Значение = СведенияОЗаработке.Итог("ОблагаетсяВзносамиСвышеПредельнойВеличины");
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелВходящейОписи, "СуммаВыплатИвознагражденийВпользуЗЛ",""),ДанныеОДоходахДляОписи);
	
	УчетСтраховыхВзносов.ВписатьВзносыВНаборДанных(ДанныеОСуммахВзносовОписи, ВыборкаПоШапкеДокумента.НачисленоСтраховая, ВыборкаПоШапкеДокумента.УплаченоСтраховая, ВыборкаПоШапкеДокумента.НачисленоНакопительная, ВыборкаПоШапкеДокумента.УплаченоНакопительная);
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелВходящейОписи, ДанныеОСуммахВзносовОписи);
	
	НомерДокументаВПачке = 1;
	Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерСтроки")	Цикл
		
		НаборЗаписейСЗВ6 = ФорматСЗВ6;
		
		// Общие данные пачки - берем их из описи

		НаборЗаписейСЗВ6.ТипСведений.Значение = ДанныеНабораВходящаяОпись.ТипСведений.Значение;
		НаборЗаписейСЗВ6.РегистрационныйНомер.Значение = ДанныеНабораВходящаяОпись.СоставительПачки.Значение.РегистрационныйНомер.Значение;
		НаборЗаписейСЗВ6.НаименованиеКраткое.Значение = ДанныеНабораВходящаяОпись.СоставительПачки.Значение.НаименованиеКраткое.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.НалоговыйНомер.Значение, ДанныеНабораВходящаяОпись.СоставительПачки.Значение.НалоговыйНомер.Значение);
		НаборЗаписейСЗВ6.КодКатегории.Значение = ДанныеНабораВходящаяОпись.КодКатегории.Значение;
		НаборЗаписейСЗВ6.ТипДоговора.Значение = ДанныеНабораВходящаяОпись.ТипДоговора.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.ОтчетныйПериод.Значение, ДанныеНабораВходящаяОпись.ОтчетныйПериод.Значение);
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.ОтчетныйПериод.Значение, ДанныеНабораВходящаяОпись.КорректируемыйОтчетныйПериод.Значение);
		КонецЕсли;
		
		// Данные физлица
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		Фамилия = СокрЛП(ВыборкаПоСотрудникам.Фамилия);
		Имя = СокрЛП(ВыборкаПоСотрудникам.Имя);
		Отчество = СокрЛП(ВыборкаПоСотрудникам.Отчество);
		
		НаборЗаписейСЗВ6.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейСЗВ6.СтраховойНомер.Значение = ВыборкаПоСотрудникам.СтраховойНомерПФР;
		НаборЗаписейФИО = НаборЗаписейСЗВ6.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(Фамилия);
		НаборЗаписейФИО.Имя = ВРег(Имя);
		НаборЗаписейФИО.Отчество = ВРег(Отчество);
				
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда // заполнение отменяющей формы завершено
			УзелСЗВ64 = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
			СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСЗВ64, НаборЗаписейСЗВ6);
			Продолжить;
		КонецЕсли;
					
		ФорматСтажевыйПериод = НаборЗаписейСЗВ6.СтажевыйПериод.Значение;
		НаборЗаписейСЗВ6.СтажевыйПериод.НеВыводитьВФайл = Истина;
				
		УзелСЗВ64 = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
		СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСЗВ64, НаборЗаписейСЗВ6);	
					
		СтрокиЗаработка = СведенияОЗаработке.Скопировать(СведенияОЗаработке.НайтиСтроки(Новый Структура("Сотрудник", ВыборкаПоСотрудникам.Сотрудник)));
		СтрокиЗаработка.Сортировать("Месяц");
		ВыводитьИтоги = Ложь;
		Для каждого СтрокаТЗ Из СтрокиЗаработка Цикл
			ДанныеОДоходах = НаборЗаписейСуммаВыплатИвознаграждений;
			ВыводитьИтоги = Истина;
			ДанныеОДоходах.ТипСтроки.Значение = "МЕСЦ";
			ДанныеОДоходах.Месяц.Значение = СтрокаТЗ.Месяц;
			ДанныеОДоходах.СуммаВыплатВсего.Значение = СтрокаТЗ.Заработок;
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыНепревышающие.Значение = СтрокаТЗ.ОблагаетсяВзносамиДоПредельнойВеличины;
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыПревышающие.Значение = СтрокаТЗ.ОблагаетсяВзносамиСвышеПредельнойВеличины;
			СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийВпользуЗЛ",""), ДанныеОДоходах);
		КонецЦикла;
		Если ВыводитьИтоги Тогда
			ДанныеОДоходах = НаборЗаписейСуммаВыплатИвознаграждений;
			ДанныеОДоходах.Месяц.НеВыводитьВФайл = Истина;
			ДанныеОДоходах.ТипСтроки.Значение = "ИТОГ";
			ДанныеОДоходах.СуммаВыплатВсего.Значение = СтрокиЗаработка.Итог("Заработок");
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыНепревышающие.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиДоПредельнойВеличины");
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыПревышающие.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиСвышеПредельнойВеличины");
			СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийВпользуЗЛ",""),ДанныеОДоходах);
		КонецЕсли;
		Если ВыводитьВзносыЗаРаботыСДосрочнойПенсией Тогда
			ВыводитьИтоги = Ложь;
			Для каждого СтрокаТЗ Из СтрокиЗаработка Цикл
				Если СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах <> 0 Или СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0 Тогда
					ВыводитьИтоги = Истина;
					ДанныеОДоходах = НаборЗаписейСуммаВыплатПоДопТарифу;
					ДанныеОДоходах.ТипСтроки.Значение = "МЕСЦ";
					ДанныеОДоходах.Месяц.Значение = СтрокаТЗ.Месяц;
					ДанныеОДоходах.СуммаВыплатПоДопТарифу27_1.Значение = СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
					ДанныеОДоходах.СуммаВыплатПоДопТарифу27_2_18.Значение = СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
					СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийПоДопТарифу",""),ДанныеОДоходах);
				КонецЕсли;
			КонецЦикла;	
			Если ВыводитьИтоги Тогда
				ДанныеОДоходах = НаборЗаписейСуммаВыплатПоДопТарифу;
				ДанныеОДоходах.Месяц.НеВыводитьВФайл = Истина;
				ДанныеОДоходах.ТипСтроки.Значение = "ИТОГ";
				ДанныеОДоходах.СуммаВыплатПоДопТарифу27_1.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах");
				ДанныеОДоходах.СуммаВыплатПоДопТарифу27_2_18.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах");
				СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийПоДопТарифу",""),ДанныеОДоходах);
			КонецЕсли;
		КонецЕсли;

		УчетСтраховыхВзносов.ВписатьВзносыВНаборДанных(
			ФорматСуммаВзносов, 
			ВыборкаПоСотрудникам.НачисленоСтраховая, 
			ВыборкаПоСотрудникам.УплаченоСтраховая, 
			ВыборкаПоСотрудникам.НачисленоНакопительная, 
			ВыборкаПоСотрудникам.УплаченоНакопительная);
			
		СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСЗВ64, ФорматСуммаВзносов);	
		
		ВписатьЗаписиОСтажеВНаборДанных(
			УзелСЗВ64, 
			ФорматСтажевыйПериод, 
			ВыборкаПоСотрудникам, "СЗВ-6-4", 
			ТипДокументовПачки);

		ФорматДатаЗаполнения.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;

		СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСЗВ64, ФорматДатаЗаполнения);	
	КонецЦикла;	
	
	ТекстФайла = УчетСтраховыхВзносов.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
		
	Возврат СтрЗаменить(СтрЗаменить(ТекстФайла, "СуммаВыплатПоДопТарифу27_1", "СуммаВыплатПоДопТарифу27-1"), "СуммаВыплатПоДопТарифу27_2_18", "СуммаВыплатПоДопТарифу27-2-18")
КонецФункции	

Функция СформироватьФайлСЗВ(Объект, ИмяФайла)Экспорт
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке(Объект.Ссылка).Выбрать();
	ВыборкаПоСотрудникам = СформироватьЗапросПоЗаписямСтажа(Объект.Ссылка).Выбрать();
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	ТекстФайла = ТекстФайлаСведенийОВзносахСтажеЗаработке(ВыборкаПоШапкеДокумента, ВыборкаПоСотрудникам, Объект.СведенияОЗаработке.Выгрузить());
	
	ИмяФайла =  ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР;
	
	Возврат ТекстФайла;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции печати.

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаСЗВ_6_4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаСЗВ_6_4", "Форма СЗВ-6-4", СформироватьПечатнуюФормуСЗВ_6_4(МассивОбъектов, ОбъектыПечати));	
	КонецЕсли;	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокЗастрахованныхЛиц") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СписокЗастрахованныхЛиц", "Список застрахованных лиц", СформироватьПечатнуюФормуСписокЗастрахованныхЛиц(МассивОбъектов, ОбъектыПечати));	
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаАДВ_6_5") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаАДВ_6_5", "Форма АДВ-6-5", СформироватьПечатнуюФормуАДВ_6_5(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры

Функция СформироватьПечатнуюФормуСЗВ_6_4(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаДокументовСЗВ_6_4_Форма_СЗВ_6_4";
	
	Макет = ПолучитьМакет("ПФ_MXL_ФормаСЗВ_6_4");
	
	ВыборкаДокументов = СформироватьЗапросПоШапкеДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаЗаписейСтажа = СформироватьЗапросПоЗаписямСтажаДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаСведенийОЗаработке = СформироватьЗапросПоЗаработкуДляПечати(МассивОбъектов);
	
	ОбластьСтрока    = Макет.ПолучитьОбласть("Строка");	
	ОбластьПодвал    = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка     = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтаж      = Макет.ПолучитьОбласть("Стаж");
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Ссылка") Цикл
		ВыборкаЗаписейСтажа.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		
		Если ВыборкаЗаписейСтажа.НайтиСледующий(СтруктураПоиска) Тогда
			ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ВыборкаДокументов, "РегНомерПФР, РегистрационныйНомерПФРвКорректируемыйПериод, ИНН, КПП, ОКПО");
			
			ОбластьШапка.Параметры.НаименованиеОрганизации = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаДокументов.НаименованиеОрганиазции);
			
			ОбластьШапка.Параметры.КодКатегории = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаДокументов.КатегорияЗастрахованныхЛиц);
			
			ОтчетныйПериод = ВыборкаДокументов.ОтчетныйПериод;
			КорректируемыйПериод = ВыборкаДокументов.КорректируемыйПериод;
			
			ОбластьШапка.Параметры.ЭтоКварталОтчетногоГода   = Месяц(ОтчетныйПериод) = 1;
			ОбластьШапка.Параметры.ЭтоПолугодиеОтчетногоГода = Месяц(ОтчетныйПериод) = 4;
			ОбластьШапка.Параметры.Это9МесяцевОтчетногоГода  = Месяц(ОтчетныйПериод) = 7;
			ОбластьШапка.Параметры.ЭтоВесьОтчетныйГод        = Месяц(ОтчетныйПериод) = 10;
			
			ОбластьШапка.Параметры.ОтчетныйГод = Формат(Год(ОтчетныйПериод), "ЧГ=");
			
			Если ВыборкаДокументов.ТипДоговора = Перечисления.ТипДоговораСЗВ63.Трудовой Тогда
				ОбластьШапка.Параметры.ЭтоТрудовойДоговор = Истина;
				ОбластьШапка.Параметры.ЭтоДоговорГПХ = Ложь;
			Иначе
				ОбластьШапка.Параметры.ЭтоТрудовойДоговор = Ложь;
				ОбластьШапка.Параметры.ЭтоДоговорГПХ = Истина;	
			КонецЕсли;	
			
			Если ВыборкаДокументов.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда 
				ОбластьШапка.Параметры.ЭтоКварталКорректируемогоГода   = Месяц(КорректируемыйПериод) = 1;
				ОбластьШапка.Параметры.ЭтоПолугодиеКорректируемогоГода = Месяц(КорректируемыйПериод) = 4;
				ОбластьШапка.Параметры.Это9МесяцевКорректируемогоГода  = Месяц(КорректируемыйПериод) = 7;
				ОбластьШапка.Параметры.ЭтоВесьКорректируемыйГод        = Месяц(КорректируемыйПериод) = 10;
				
				ОбластьШапка.Параметры.ЭтоКорректирующийДокумент = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
				ОбластьШапка.Параметры.ЭтоОтменяющийДокумент     = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ;
				
				ОбластьШапка.Параметры.КорректируемыйГод = Формат(Год(КорректируемыйПериод), "ЧГ=");
			Иначе
				ОбластьШапка.Параметры.ЭтоИсходныйДокумент = Истина;
			КонецЕсли;	
			
			Если ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("Ссылка") Тогда 
				КоличествоЗастрахованныхЛиц = 0;
				Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерСтроки") Цикл
					КоличествоЗастрахованныхЛиц = КоличествоЗастрахованныхЛиц + 1;
					
					НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
					
					ТабличныйДокумент.Вывести(ОбластьШапка);
					
					ОбластьСтрока.Параметры.Фамилия = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.Фамилия);
					ОбластьСтрока.Параметры.Имя = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.Имя);
					ОбластьСтрока.Параметры.Отчество = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.Отчество);
					ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаЗаписейСтажа.СтраховойНомерПФР;
					
					Если ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда 
						ОбластьСтрока.Параметры.НачисленоНакопительная = 0;
						ОбластьСтрока.Параметры.УплаченоНакопительная  = 0;
						ОбластьСтрока.Параметры.НачисленоСтраховая     = 0;
						ОбластьСтрока.Параметры.УплаченоСтраховая      = 0;	
					Иначе	
						ОбластьСтрока.Параметры.НачисленоНакопительная = ВыборкаЗаписейСтажа.НачисленоНакопительная;
						ОбластьСтрока.Параметры.УплаченоНакопительная  = ВыборкаЗаписейСтажа.УплаченоНакопительная;
						ОбластьСтрока.Параметры.НачисленоСтраховая     = ВыборкаЗаписейСтажа.НачисленоСтраховая;
						ОбластьСтрока.Параметры.УплаченоСтраховая      = ВыборкаЗаписейСтажа.УплаченоСтраховая;
					КонецЕсли;	
					
					ЗаполнитьСведенияОЗаработкеВМакет(ОбластьСтрока, ВыборкаСведенийОЗаработке, ВыборкаЗаписейСтажа.Ссылка, ВыборкаЗаписейСтажа.НомерСтроки);
					
					ТабличныйДокумент.Вывести(ОбластьСтрока);
										
					Если ЗначениеЗаполнено(ВыборкаЗаписейСтажа.НомерОсновнойЗаписи) Тогда
						
						НомерСтроки = 0;
						Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерОсновнойЗаписи") Цикл
							НомерСтроки = НомерСтроки + 1;
							
							ЗаполнитьОбластьСтаж(ВыборкаЗаписейСтажа, ОбластьСтаж, НомерСтроки);	
							
							ТабличныйДокумент.Вывести(ОбластьСтаж);
							Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерДополнительнойЗаписи") Цикл
								Если ВыборкаЗаписейСтажа.НомерДополнительнойЗаписи = 0 Тогда
									Продолжить;
								КонецЕсли;	
								
								НомерСтроки = НомерСтроки + 1;
								
								ЗаполнитьОбластьСтаж(ВыборкаЗаписейСтажа, ОбластьСтаж, НомерСтроки);
								
								ТабличныйДокумент.Вывести(ОбластьСтаж);
								
							КонецЦикла;	

						КонецЦикла;
					Иначе
						ТабличныйДокумент.Вывести(ОбластьСтаж);
					КонецЕсли;	
					
					ОбластьПодвал.Параметры.Руководитель = ВыборкаДокументов.Руководитель;
					ОбластьПодвал.Параметры.РуководительДолжность = ВыборкаДокументов.ДолжностьРуководителя;
					ОбластьПодвал.Параметры.ДатаСоставленияОписи  = УчетСтраховыхВзносов.ДатаВОтчет(ВыборкаДокументов.Дата);
					
					ТабличныйДокумент.Вывести(ОбластьПодвал);
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
					
				КонецЦикла;	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

Процедура ЗаполнитьСведенияОЗаработкеВМакет(ОбастьЗаработок, ВыборкаПоСтрокамЗаработка, Ссылка, НомерСтрокиСотрудник)
	СтруктураПоиска = Новый Структура("Ссылка, НомерСтрокиСотрудник", Ссылка, НомерСтрокиСотрудник);
	
	ВыборкаПоСтрокамЗаработка.Сбросить();
	
	Если ВыборкаПоСтрокамЗаработка.НайтиСледующий(СтруктураПоиска) Тогда
		ВыборкаПоСтрокамЗаработка.СледующийПоЗначениюПоля("Ссылка");
		ВыборкаПоСтрокамЗаработка.СледующийПоЗначениюПоля("НомерСтрокиСотрудник");
		
		ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог = 0;
		ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог = 0;
		ЗаработокИтог = 0;
		ОблагаетсяВзносамиДоПредельнойВеличиныИтог = 0;
		ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог = 0;
		
		Пока ВыборкаПоСтрокамЗаработка.Следующий() Цикл
			
			ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог = ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог 
				+ ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах; 
				
			ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог = ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог 
				+ ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах; 	
				
			ЗаработокИтог = ЗаработокИтог + ВыборкаПоСтрокамЗаработка.Заработок; 	
				
			ОблагаетсяВзносамиДоПредельнойВеличиныИтог = ОблагаетсяВзносамиДоПредельнойВеличиныИтог 
				+ ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиДоПредельнойВеличины; 	
				
			ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог = ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог 
				+ ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиСвышеПредельнойВеличины; 		
				
			ОбастьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + ВыборкаПоСтрокамЗаработка.Месяц] 
				= ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
				
			ОбастьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + ВыборкаПоСтрокамЗаработка.Месяц] 
				= ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;	
				
			ОбастьЗаработок.Параметры["Заработок" + ВыборкаПоСтрокамЗаработка.Месяц] = ВыборкаПоСтрокамЗаработка.Заработок;	
			
			ОбастьЗаработок.Параметры["ОблагаетсяВзносамиДоПредельнойВеличины" + ВыборкаПоСтрокамЗаработка.Месяц] = 
				ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиДоПредельнойВеличины;	
				
			ОбастьЗаработок.Параметры["ОблагаетсяВзносамиСвышеПредельнойВеличины" + ВыборкаПоСтрокамЗаработка.Месяц] 
				= ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиСвышеПредельнойВеличины;		
			
		КонецЦикла;	
		
		ОбастьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог"] = ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог;
		ОбастьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог"] = ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог;
		ОбастьЗаработок.Параметры["ЗаработокИтог"] = ЗаработокИтог;
		ОбастьЗаработок.Параметры["ОблагаетсяВзносамиДоПредельнойВеличиныИтог"] = ОблагаетсяВзносамиДоПредельнойВеличиныИтог;
		ОбастьЗаработок.Параметры["ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог"] = ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог;
				
	КонецЕсли;	
КонецПроцедуры	

Функция СформироватьПечатнуюФормуСписокЗастрахованныхЛиц(МассивОбъектов, ОбъектыПечати) Экспорт
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаДокументовСЗВ_6_1_СписокЗастрахованныхЛиц";
	
	Макет = Документы.ПачкаДокументовСЗВ_6_4.ПолучитьМакет("ПФ_MXL_СписокЗастрахованныхЛиц");
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьПовторятьПриПечати   = Макет.ПолучитьОбласть("ПовторятьПриПечати");
	
	ВыборкаДокументов = СформироватьЗапросПоШапкеДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаПоЗЛ = СформироватьЗапросПоСпискуЗастрахованныхЛицДляПечати(МассивОбъектов).Выбрать();
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Ссылка") Цикл
		ВыборкаПоЗЛ.Сбросить();
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		
		ОбластьШапка.Параметры.РегистрационныйНомерПФР = ВыборкаДокументов.РегНомерПФР;
		ОбластьШапка.Параметры.НаименованиеСокращенное = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаДокументов.НаименованиеОрганиазции);
		ОбластьШапка.Параметры.РасчетныйПериод = УчетСтраховыхВзносов.ПредставлениеОтчетногоПериода(ВыборкаДокументов.ОтчетныйПериод);
		ОбластьШапка.Параметры.НомерПачкиРаботодателя = ВыборкаДокументов.НомерПачки;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Если ВыборкаПоЗЛ.НайтиСледующий(СтруктураПоиска) Тогда
			Если ВыборкаПоЗЛ.СледующийПоЗначениюПоля("Ссылка") Тогда 			
				Пока ВыборкаПоЗЛ.СледующийПоЗначениюПоля("НомерСтроки") Цикл
					ОбластьСтрока.Параметры.НомерСтроки = ВыборкаПоЗЛ.НомерСтроки;
					ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаПоЗЛ.СтраховойНомерПФР;
					ОбластьСтрока.Параметры.ФИО = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаПоЗЛ.Фамилия + " " + ВыборкаПоЗЛ.Имя + " " + ВыборкаПоЗЛ.Отчество);
					
					ТабличныйДокумент.Вывести(ОбластьСтрока);
				КонецЦикла;	
			КонецЕсли;	
		КонецЕсли;		
		ОбластьПодвал.Параметры.Руководитель = ВыборкаДокументов.Руководитель;
		ОбластьПодвал.Параметры.РуководительДолжность = ВыборкаДокументов.ДолжностьРуководителя;
		ОбластьПодвал.Параметры.ДатаСоставленияОписи  = УчетСтраховыхВзносов.ДатаВОтчет(ВыборкаДокументов.Дата);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
	    УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
	КонецЦикла;	
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
	
 КонецФункции	

Функция СформироватьПечатнуюФормуАДВ_6_5(МассивОбъектов, ОбъектыПечати) Экспорт
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДляАДВ_5(МассивОбъектов).Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ПФ_MXL_ФормаАДВ_6_5");
	
	ОбластьОпись = Макет.ПолучитьОбласть("Опись");
	
	Пока ВыборкаПоШапкеДокумента.СледующийПоЗначениюПоля("Ссылка") Цикл
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ВыборкаПоШапкеДокумента.ТипДоговора = Перечисления.ТипДоговораСЗВ63.Трудовой Тогда
			ОбластьОпись.Параметры.ЭтоТрудовойДоговор = Истина;
			ОбластьОпись.Параметры.ЭтоДоговорГПХ = Ложь;
		Иначе
			ОбластьОпись.Параметры.ЭтоТрудовойДоговор = Ложь;
			ОбластьОпись.Параметры.ЭтоДоговорГПХ = Истина;	
		КонецЕсли;	
		
		ОбластьОпись.Параметры.РегНомерПФР = ВыборкаПоШапкеДокумента.РегНомерПФР;
		ОбластьОпись.Параметры.ИНН = ВыборкаПоШапкеДокумента.ИНН;
		ОбластьОпись.Параметры.КПП = ВыборкаПоШапкеДокумента.КПП;
		ОбластьОпись.Параметры.ОКПО = ВыборкаПоШапкеДокумента.КодПоОКПО;
		ОбластьОпись.Параметры.НаименованиеОрганизации = ВыборкаПоШапкеДокумента.НаименованиеОрганизации; 
		
		ОбластьОпись.Параметры.КодКатегории = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		
		ОтчетныйПериод = ВыборкаПоШапкеДокумента.ОтчетныйПериод;
		
		ОбластьОпись.Параметры.ЭтоКварталОтчетногоГода   = Месяц(ОтчетныйПериод) = 1;
		ОбластьОпись.Параметры.ЭтоПолугодиеОтчетногоГода = Месяц(ОтчетныйПериод) = 4;
		ОбластьОпись.Параметры.Это9МесяцевОтчетногоГода  = Месяц(ОтчетныйПериод) = 7;
		ОбластьОпись.Параметры.ЭтоВесьОтчетныйГод        = Месяц(ОтчетныйПериод) = 10;
		
		ОбластьОпись.Параметры.ОтчетныйГод = Формат(Год(ОтчетныйПериод), "ЧГ=");
		
		ОбластьОпись.Параметры.ЭтоИсходныйДокумент = ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
		ОбластьОпись.Параметры.ЭтоКорректирующийДокумент = ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
		ОбластьОпись.Параметры.ЭтоОтменяющийДокумент     = ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ;

		КорректируемыйПериод = ВыборкаПоШапкеДокумента.КорректируемыйПериод;
		
		ОбластьОпись.Параметры.ЭтоКварталКорректируемогоГода   = Месяц(ОтчетныйПериод) = 1;
		ОбластьОпись.Параметры.ЭтоПолугодиеКорректируемогоГода = Месяц(ОтчетныйПериод) = 4;
		ОбластьОпись.Параметры.Это9МесяцевКорректируемогоГода  = Месяц(ОтчетныйПериод) = 7;
		ОбластьОпись.Параметры.ЭтоВесьКорректируемыйГод        = Месяц(ОтчетныйПериод) = 10;

		ОбластьОпись.Параметры.КорректируемыйГод = Формат(Год(КорректируемыйПериод), "ЧГ=");
		
		ОбластьОпись.Параметры.НомерПачки = ВыборкаПоШапкеДокумента.НомерПачки;
		
		ОбластьОпись.Параметры.ДокументовВПачке = ВыборкаПоШапкеДокумента.Количество;
				
		ОбластьОпись.Параметры.НачисленоНакопительная = ВыборкаПоШапкеДокумента.НачисленоНакопительная;
		ОбластьОпись.Параметры.УплаченоНакопительная  = ВыборкаПоШапкеДокумента.УплаченоНакопительная;
		ОбластьОпись.Параметры.НачисленоСтраховая     = ВыборкаПоШапкеДокумента.НачисленоСтраховая;
		ОбластьОпись.Параметры.УплаченоСтраховая      = ВыборкаПоШапкеДокумента.УплаченоСтраховая;
		
		ОбластьОпись.Параметры.ВсегоЗаработка = ВыборкаПоШапкеДокумента.Заработок;
		ОбластьОпись.Параметры.ВсегоОблагаетсяВзносамиДоПредельнойВеличины  = ВыборкаПоШапкеДокумента.ОблагаетсяВзносамиДоПредельнойВеличины;
		ОбластьОпись.Параметры.ВсегоОблагаетсяВзносамиСвышеПредельнойВеличины     = ВыборкаПоШапкеДокумента.ОблагаетсяВзносамиСвышеПредельнойВеличины;
		
		ОбластьОпись.Параметры.РуководительДолжность = ВыборкаПоШапкеДокумента.РуководительДолжность;
		ОбластьОпись.Параметры.Руководитель = ВыборкаПоШапкеДокумента.Руководитель;
		
		ОбластьОпись.Параметры.ДатаСоставленияОписи = УчетСтраховыхВзносов.ДатаВОтчет(ВыборкаПоШапкеДокумента.Дата);

		ТабличныйДокумент.Вывести(ОбластьОпись);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоШапкеДокумента.Ссылка);
		
	КонецЦикла;	
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
	
КонецФункции	
 
Процедура ЗаполнитьОбластьСтаж(ВыборкаЗаписейСтажа, ОбластьСтаж, НомерСтроки)
	ОбластьСтаж.Параметры.НомерСтроки = НомерСтроки;
	ОбластьСтаж.Параметры.ДатаНачалаПериода = ВыборкаЗаписейСтажа.ДатаНачалаПериода;
	ОбластьСтаж.Параметры.ДатаОкончанияПериода = ВыборкаЗаписейСтажа.ДатаОкончанияПериода;
	
КонецПроцедуры

Процедура ВписатьЗаписиОСтажеВНаборДанных(УзелПачкаВходящихДокументов, ФорматСтажевыйПериод, ВыборкаПоСотрудникам, ТипФормДокументов, ТипДокументовПачки) Экспорт
	ДопустимыеЗначенияТретьегоПараметра = Новый Соответствие;
	ДопустимыеЗначенияТретьегоПараметра.Вставить("ДЕКРЕТ", Истина);
	ДопустимыеЗначенияТретьегоПараметра.Вставить("ДЕТИ", Истина);
	ДопустимыеЗначенияТретьегоПараметра.Вставить("АДМИНИСТР", Истина);
	ДопустимыеЗначенияТретьегоПараметра.Вставить("ВРНЕТРУД", Истина);
	ДопустимыеЗначенияТретьегоПараметра.Вставить("ДЛДЕТИ", Истина);
	ДопустимыеЗначенияТретьегоПараметра.Вставить("ЧАЭС", Истина);
	ДопустимыеЗначенияТретьегоПараметра.Вставить("НЕОПЛ", Истина);
		
	Если ТипФормДокументов = "СЗВ-6-2" Тогда
		
		ЧислоОсновныхЗаписейОСтаже = 0;
		СотрудникОрганизацииИмеетЛьготныйСтаж = Ложь;
		
		Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерОсновнойЗаписи")	Цикл
			
			Если ЗначениеЗаполнено(ВыборкаПоСотрудникам.ДатаНачалаПериода) И ЗначениеЗаполнено(ВыборкаПоСотрудникам.ДатаОкончанияПериода) Тогда
				
				ФорматСтажевыйПериод.НомерСтроки.Значение = ВыборкаПоСотрудникам.НомерОсновнойЗаписи;
				ФорматСтажевыйПериод.ДатаНачалаПериода.Значение = ВыборкаПоСотрудникам.ДатаНачалаПериода;
				ФорматСтажевыйПериод.ДатаКонцаПериода.Значение = ВыборкаПоСотрудникам.ДатаОкончанияПериода;
				
				УзелСтажевыйПериод = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "СтажевыйПериод","");
				СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСтажевыйПериод, ФорматСтажевыйПериод);
											
			КонецЕсли;
			
		КонецЦикла;
					
	Иначе
		
		ФорматЛьготныйСтаж = ФорматСтажевыйПериод.ЛьготныйСтаж.Значение;
		ФорматСтажевыйПериод.КоличествоЛьготныхСоставляющих.НеВыводитьВФайл = Истина;
		ФорматСтажевыйПериод.ЛьготныйСтаж.НеВыводитьВФайл = Истина;
				
		Если ЗначениеЗаполнено(ВыборкаПоСотрудникам.НомерОсновнойЗаписи) Тогда
			
			Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерОсновнойЗаписи")	Цикл	
				
				ФорматСтажевыйПериод.ЛьготныйСтаж.НеВыводитьВФайл = Истина;
				ФорматСтажевыйПериод.КоличествоЛьготныхСоставляющих.НеВыводитьВФайл = Истина;

				УзелСтажевыйПериод = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "СтажевыйПериод","");
				СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСтажевыйПериод, ФорматСтажевыйПериод);
				
				УзелСтажевыйПериод.Строки.Найти("НомерСтроки").Значение = Строка(ВыборкаПоСотрудникам.НомерОсновнойЗаписи);
				УзелСтажевыйПериод.Строки.Найти("ДатаНачалаПериода").Значение = Формат(ВыборкаПоСотрудникам.ДатаНачалаПериода,"ДФ=dd.MM.yyyy");
				УзелСтажевыйПериод.Строки.Найти("ДатаКонцаПериода").Значение = Формат(ВыборкаПоСотрудникам.ДатаОкончанияПериода,"ДФ=dd.MM.yyyy");
				
				ВыводитьЛьготныйСтаж = Ложь;
				
				НаборЗаписейЛьготныйСтаж = ФорматЛьготныйСтаж;
				НаборЗаписейОсобенностиУчета = НаборЗаписейЛьготныйСтаж.ОсобенностиУчета.Значение;
				
				//ДекретДети
				Если ДопустимыеЗначенияТретьегоПараметра.Получить(ВыборкаПоСотрудникам.ТретийПараметрИсчисляемогоСтажа) <> Неопределено Тогда
					НаборЗаписейОсобенностиУчета.ДекретДети.Значение = ВыборкаПоСотрудникам.ТретийПараметрИсчисляемогоСтажа;
				КонецЕсли;
				ВыводитьЛьготныйСтаж = ВыводитьЛьготныйСтаж Или ЗначениеЗаполнено(НаборЗаписейОсобенностиУчета.ДекретДети.Значение);
				
				Если НаборЗаписейОсобенностиУчета.ДекретДети.Значение = "ДЕТИ"
					Или НаборЗаписейОсобенностиУчета.ДекретДети.Значение = "АДМИНИСТР"
					Или НаборЗаписейОсобенностиУчета.ДекретДети.Значение = "ДЛДЕТИ"
					Или НаборЗаписейОсобенностиУчета.ДекретДети.Значение = "ЧАЭС"
					Или НаборЗаписейОсобенностиУчета.ДекретДети.Значение = "НЕОПЛ" Тогда
					
					НаборЗаписейОсобенностиУчета.ВыслугаЛет.НеВыводитьВФайл = Истина;
					НаборЗаписейОсобенностиУчета.ИсчисляемыйСтаж.НеВыводитьВФайл = Истина;
					НаборЗаписейОсобенностиУчета.ОсобыеУсловияТруда.НеВыводитьВФайл = Истина;
					НаборЗаписейОсобенностиУчета.ТерриториальныеУсловия.НеВыводитьВФайл = Истина;
				Иначе
					
					// Территориальные условия
					НаборЗаписейТерриториальныеУсловия = НаборЗаписейОсобенностиУчета.ТерриториальныеУсловия.Значение;
					НаборЗаписейТерриториальныеУсловия.ОснованиеТУ = СокрЛП(ВыборкаПоСотрудникам.ТерриториальныеУсловияКод);
					НаборЗаписейТерриториальныеУсловия.Коэффициент = ВыборкаПоСотрудникам.ТерриториальныеУсловияСтавка;
					ОписаниеПолей = НаборЗаписейОсобенностиУчета.ТерриториальныеУсловия.Поля;
					СтрокаКУдалению = ОписаниеПолей.Найти("Коэффициент","ИмяПоля");
					СтрокаКУдалению.НеВыводитьВФайл = Истина;
					ВыводитьЛьготныйСтаж = ВыводитьЛьготныйСтаж Или ЗначениеЗаполнено(НаборЗаписейТерриториальныеУсловия.ОснованиеТУ);
					
					// Особые условия труда
					НаборЗаписейОсобыеУсловияТруда = НаборЗаписейОсобенностиУчета.ОсобыеУсловияТруда.Значение;
					НаборЗаписейОсобыеУсловияТруда.ОснованиеОУТ = СокрЛП(ВыборкаПоСотрудникам.ОсобыеУсловияТрудаКод);
					НаборЗаписейОсобыеУсловияТруда.ПозицияСписка = ВРег(СокрЛП(ВыборкаПоСотрудникам.КодПозицииСпискаКод));
					ВыводитьЛьготныйСтаж = ВыводитьЛьготныйСтаж Или ЗначениеЗаполнено(НаборЗаписейОсобыеУсловияТруда.ОснованиеОУТ);
					
					// Исчисляемый стаж
					НаборЗаписейИсчисляемыйСтаж = НаборЗаписейОсобенностиУчета.ИсчисляемыйСтаж.Значение;
					НаборЗаписейИсчисляемыйСтаж.ОснованиеИС.Значение = ВыборкаПоСотрудникам.ОснованиеИсчисляемогоСтажаКод;
					Если НаборЗаписейОсобенностиУчета.ДекретДети.Значение = "ДЕКРЕТ" Или НаборЗаписейОсобенностиУчета.ДекретДети.Значение = "ВРНЕТРУД" Тогда
						НаборЗаписейИсчисляемыйСтаж.ВыработкаВЧасах.НеВыводитьВФайл = Истина;
						НаборЗаписейИсчисляемыйСтаж.ВыработкаКалендарная.НеВыводитьВФайл = Истина;
					ИначеЕсли ВыборкаПоСотрудникам.ПервыйПараметрИсчисляемогоСтажа > 0 Или ВыборкаПоСотрудникам.ВторойПараметрИсчисляемогоСтажа > 0 Тогда
						НаборЗаписейИсчисляемыйСтаж.ВыработкаВЧасах.НеВыводитьВФайл = Истина;
						НаборЗаписейВыработкаКалендарная = НаборЗаписейИсчисляемыйСтаж.ВыработкаКалендарная.Значение;
						НаборЗаписейВыработкаКалендарная.ВсеМесяцы = ВыборкаПоСотрудникам.ПервыйПараметрИсчисляемогоСтажа;
						НаборЗаписейВыработкаКалендарная.ВсеДни = ВыборкаПоСотрудникам.ВторойПараметрИсчисляемогоСтажа;
					Иначе 	
						НаборЗаписейИсчисляемыйСтаж.ВыработкаВЧасах.НеВыводитьВФайл = Истина;
					КонецЕсли;

					ВыводитьЛьготныйСтаж = ВыводитьЛьготныйСтаж Или ЗначениеЗаполнено(НаборЗаписейИсчисляемыйСтаж.ОснованиеИС.Значение);
					
					// Выслуга лет
					НаборЗаписейВыслугаЛет = НаборЗаписейОсобенностиУчета.ВыслугаЛет.Значение;
					НаборЗаписейВыслугаЛет.ОснованиеВЛ.Значение = ВРег(СокрЛП(ВыборкаПоСотрудникам.ОснованиеВыслугиЛетКод));
					НаборЗаписейВыслугаЛет.ДоляСтавки.Значение = ВыборкаПоСотрудникам.ТретийПараметрВыслугиЛет;
					Если НаборЗаписейОсобенностиУчета.ДекретДети.Значение = "ДЕКРЕТ" Или НаборЗаписейОсобенностиУчета.ДекретДети.Значение = "ВРНЕТРУД" Тогда
						НаборЗаписейВыслугаЛет.ВыработкаВЧасах.НеВыводитьВФайл = Истина;
						НаборЗаписейВыслугаЛет.ВыработкаКалендарная.НеВыводитьВФайл = Истина;
					Иначе
						НаборЗаписейВыслугаЛет.ВыработкаКалендарная.НеВыводитьВФайл = Истина;
						НаборЗаписейВыработкаВЧасах = НаборЗаписейВыслугаЛет.ВыработкаВЧасах.Значение;
						НаборЗаписейВыработкаВЧасах.Часы = ВыборкаПоСотрудникам.ПервыйПараметрВыслугиЛет;
						НаборЗаписейВыработкаВЧасах.Минуты = ВыборкаПоСотрудникам.ВторойПараметрВыслугиЛет;
					КонецЕсли;
					ВыводитьЛьготныйСтаж = ВыводитьЛьготныйСтаж Или ЗначениеЗаполнено(НаборЗаписейВыслугаЛет.ОснованиеВЛ.Значение);
						
				КонецЕсли;
				
				Если ВыводитьЛьготныйСтаж Тогда
					ЧислоДополнительныхЗаписейОСтаже = 1;
					СтрокаКоличествоЛьготныхСоставляющих = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСтажевыйПериод, "КоличествоЛьготныхСоставляющих", 1);
					НаборЗаписейЛьготныйСтаж.НомерСтроки.Значение = ЧислоДополнительныхЗаписейОСтаже;
					УзелЛьготныйСтаж = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСтажевыйПериод, "ЛьготныйСтаж","");
					СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелЛьготныйСтаж, НаборЗаписейЛьготныйСтаж);
				Иначе
					ЧислоДополнительныхЗаписейОСтаже = 0;
				КонецЕсли;
				
				Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерДополнительнойЗаписи")	Цикл
					
					//В дополнительной записи с номером 0 находится информация об основной записи
					Если ВыборкаПоСотрудникам.НомерДополнительнойЗаписи = 0 тогда
						Продолжить;
					КонецЕсли;
					
					
					НаборЗаписейЛьготныйСтаж = ФорматЛьготныйСтаж;		
					НаборЗаписейДопОсобенностиУчета = НаборЗаписейЛьготныйСтаж.ОсобенностиУчета.Значение;
					
					ЧислоДополнительныхЗаписейОСтаже = ЧислоДополнительныхЗаписейОСтаже + 1;
					НаборЗаписейЛьготныйСтаж.НомерСтроки.Значение = ЧислоДополнительныхЗаписейОСтаже;
					
					// Территориальные условия
					НаборЗаписейДопТерриториальныеУсловия = НаборЗаписейДопОсобенностиУчета.ТерриториальныеУсловия.Значение;
					НаборЗаписейДопТерриториальныеУсловия.ОснованиеТУ = СокрЛП(ВыборкаПоСотрудникам.ТерриториальныеУсловияКод);
					НаборЗаписейДопТерриториальныеУсловия.Коэффициент = ВыборкаПоСотрудникам.ТерриториальныеУсловияСтавка;
					ОписаниеПолей = НаборЗаписейДопОсобенностиУчета.ТерриториальныеУсловия.Поля;
					СтрокаКУдалению = ОписаниеПолей.Найти("Коэффициент","ИмяПоля");
					СтрокаКУдалению.НеВыводитьВФайл = Истина;
					
					// Особые условия труда
					НаборЗаписейДопОсобыеУсловияТруда = НаборЗаписейДопОсобенностиУчета.ОсобыеУсловияТруда.Значение;
					НаборЗаписейДопОсобыеУсловияТруда.ОснованиеОУТ = ВыборкаПоСотрудникам.ОсобыеУсловияТрудаКод;
					НаборЗаписейДопОсобыеУсловияТруда.ПозицияСписка = ВыборкаПоСотрудникам.КодПозицииСпискаКод;
					
					// Исчисляемый стаж
					НаборЗаписейДопИсчисляемыйСтаж = НаборЗаписейДопОсобенностиУчета.ИсчисляемыйСтаж.Значение;
					НаборЗаписейДопИсчисляемыйСтаж.ОснованиеИС.Значение = ВРег(СокрЛП(ВыборкаПоСотрудникам.ОснованиеИсчисляемогоСтажаКод));
					Если ВыборкаПоСотрудникам.ПервыйПараметрИсчисляемогоСтажа > 0 
						ИЛИ ВыборкаПоСотрудникам.ВторойПараметрИсчисляемогоСтажа > 0 Тогда
						
						НаборЗаписейДопВыработкаКалендарная = НаборЗаписейДопИсчисляемыйСтаж.ВыработкаКалендарная.Значение;
						НаборЗаписейДопВыработкаКалендарная.ВсеМесяцы = ВыборкаПоСотрудникам.ПервыйПараметрИсчисляемогоСтажа;
						НаборЗаписейДопВыработкаКалендарная.ВсеДни = ВыборкаПоСотрудникам.ВторойПараметрИсчисляемогоСтажа;
						НаборЗаписейДопИсчисляемыйСтаж.ВыработкаВЧасах.НеВыводитьВФайл = Истина;
					Иначе
						НаборЗаписейДопИсчисляемыйСтаж.ВыработкаВЧасах.НеВыводитьВФайл = Истина;
					КонецЕсли;
					
					// Выслуга лет
					НаборЗаписейДопВыслугаЛет = НаборЗаписейДопОсобенностиУчета.ВыслугаЛет.Значение;
					НаборЗаписейДопВыслугаЛет.ОснованиеВЛ.Значение = ВРег(СокрЛП(ВыборкаПоСотрудникам.ОснованиеВыслугиЛетКод));
					НаборЗаписейДопВыслугаЛет.ДоляСтавки.Значение = ВыборкаПоСотрудникам.ТретийПараметрВыслугиЛет;
					НаборЗаписейДопВыслугаЛет.ВыработкаКалендарная.НеВыводитьВФайл = Истина;
					НаборЗаписейДопВыработкаВЧасах = НаборЗаписейДопВыслугаЛет.ВыработкаВЧасах.Значение;
					НаборЗаписейДопВыработкаВЧасах.Часы = ВыборкаПоСотрудникам.ПервыйПараметрВыслугиЛет;
					НаборЗаписейДопВыработкаВЧасах.Минуты = ВыборкаПоСотрудникам.ВторойПараметрВыслугиЛет;
					
					//ДекретДети
					Если ДопустимыеЗначенияТретьегоПараметра.Получить(ВыборкаПоСотрудникам.ТретийПараметрИсчисляемогоСтажа) <> Неопределено Тогда
						НаборЗаписейДопОсобенностиУчета.ДекретДети.Значение = ВыборкаПоСотрудникам.ТретийПараметрИсчисляемогоСтажа;
					КонецЕсли;
					
					УзелЛьготныйСтаж = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСтажевыйПериод, "ЛьготныйСтаж","");
					СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелЛьготныйСтаж, НаборЗаписейЛьготныйСтаж);
					
				КонецЦикла;// Выборка по дополнительным записям о стаже
				
				Если ЧислоДополнительныхЗаписейОСтаже > 1 Тогда
					СтрокаКоличествоЛьготныхСоставляющих.Значение = ЧислоДополнительныхЗаписейОСтаже;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Функция ТабличныеДокументыФормыСЗВ_6_4(МассивОбъектов, ОбъектыПечати = Неопределено, ВыводитьОпись = Ложь) Экспорт
	Результаты = Новый Массив;
			
	Макет = ПолучитьМакет("ПФ_MXL_ФормаСЗВ_6_4");
	
	ВыборкаДокументов = СформироватьЗапросПоШапкеДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаЗаписейСтажа = СформироватьЗапросПоЗаписямСтажаДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаСведенийОЗаработке = СформироватьЗапросПоЗаработкуДляПечати(МассивОбъектов);
	
	ОбластьСтрока    = Макет.ПолучитьОбласть("Строка");	
	ОбластьПодвал    = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка     = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтаж      = Макет.ПолучитьОбласть("Стаж");
	
	Если ВыводитьОпись Тогда
		ТабличныеДокументыОписей = ТабличныеДокументыОписиАДВ_6_5(МассивОбъектов);
	КонецЕсли;	
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Ссылка") Цикл
		ТабличныйДокумент = Новый ТабличныйДокумент;
		
		Если ВыводитьОпись Тогда
			Опись = ТабличныеДокументыОписей[ВыборкаДокументов.Ссылка];
			
			Если Опись <> Неопределено Тогда
				ТабличныйДокумент.Вывести(Опись);
			КонецЕсли;	
		КонецЕсли;	
			
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаДокументовСЗВ_6_4_Форма_СЗВ_6_4";
		
		Справочники.КомплектыОтчетностиПерсучета.ДобавитьТабличныйДокументВКоллекциюПечатуемыхОбъектов(Результаты, ТабличныйДокумент, ВыборкаДокументов);
		
		ВыборкаЗаписейСтажа.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		
		Если ВыборкаЗаписейСтажа.НайтиСледующий(СтруктураПоиска) Тогда
			ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ВыборкаДокументов, "РегНомерПФР, РегистрационныйНомерПФРвКорректируемыйПериод, ИНН, КПП, ОКПО");
			
			ОбластьШапка.Параметры.НаименованиеОрганизации = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаДокументов.НаименованиеОрганиазции);
			
			ОбластьШапка.Параметры.КодКатегории = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаДокументов.КатегорияЗастрахованныхЛиц);
			
			ОтчетныйПериод = ВыборкаДокументов.ОтчетныйПериод;
			КорректируемыйПериод = ВыборкаДокументов.КорректируемыйПериод;
			
			ОбластьШапка.Параметры.ЭтоКварталОтчетногоГода   = Месяц(ОтчетныйПериод) = 1;
			ОбластьШапка.Параметры.ЭтоПолугодиеОтчетногоГода = Месяц(ОтчетныйПериод) = 4;
			ОбластьШапка.Параметры.Это9МесяцевОтчетногоГода  = Месяц(ОтчетныйПериод) = 7;
			ОбластьШапка.Параметры.ЭтоВесьОтчетныйГод        = Месяц(ОтчетныйПериод) = 10;
			
			ОбластьШапка.Параметры.ОтчетныйГод = Формат(Год(ОтчетныйПериод), "ЧГ=");
			
			Если ВыборкаДокументов.ТипДоговора = Перечисления.ТипДоговораСЗВ63.Трудовой Тогда
				ОбластьШапка.Параметры.ЭтоТрудовойДоговор = Истина;
				ОбластьШапка.Параметры.ЭтоДоговорГПХ = Ложь;
			Иначе
				ОбластьШапка.Параметры.ЭтоТрудовойДоговор = Ложь;
				ОбластьШапка.Параметры.ЭтоДоговорГПХ = Истина;
			КонецЕсли;
			
			Если ВыборкаДокументов.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда 
				ОбластьШапка.Параметры.ЭтоКварталКорректируемогоГода   = Месяц(КорректируемыйПериод) = 1;
				ОбластьШапка.Параметры.ЭтоПолугодиеКорректируемогоГода = Месяц(КорректируемыйПериод) = 4;
				ОбластьШапка.Параметры.Это9МесяцевКорректируемогоГода  = Месяц(КорректируемыйПериод) = 7;
				ОбластьШапка.Параметры.ЭтоВесьКорректируемыйГод        = Месяц(КорректируемыйПериод) = 10;
				
				ОбластьШапка.Параметры.ЭтоИсходныйДокумент = Ложь;
				ОбластьШапка.Параметры.ЭтоКорректирующийДокумент = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
				ОбластьШапка.Параметры.ЭтоОтменяющийДокумент     = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ;
				
				ОбластьШапка.Параметры.КорректируемыйГод = Формат(Год(КорректируемыйПериод), "ЧГ=");
			Иначе
				ОбластьШапка.Параметры.ЭтоИсходныйДокумент = Истина;
				ОбластьШапка.Параметры.ЭтоКварталКорректируемогоГода   = Ложь;
				ОбластьШапка.Параметры.ЭтоПолугодиеКорректируемогоГода = Ложь;
				ОбластьШапка.Параметры.Это9МесяцевКорректируемогоГода  = Ложь;
				ОбластьШапка.Параметры.ЭтоВесьКорректируемыйГод        = Ложь;
				
				ОбластьШапка.Параметры.ЭтоКорректирующийДокумент = Ложь;
				ОбластьШапка.Параметры.ЭтоОтменяющийДокумент     = Ложь;
				
				ОбластьШапка.Параметры.КорректируемыйГод = "";
				
			КонецЕсли;
			
			Если ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("Ссылка") Тогда 
				КоличествоЗастрахованныхЛиц = 0;
				Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерСтроки") Цикл
					КоличествоЗастрахованныхЛиц = КоличествоЗастрахованныхЛиц + 1;
					
					НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
					
					ТабличныйДокумент.Вывести(ОбластьШапка);
					
					ОбластьСтрока.Параметры.Фамилия = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.Фамилия);
					ОбластьСтрока.Параметры.Имя = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.Имя);
					ОбластьСтрока.Параметры.Отчество = УчетСтраховыхВзносов.СтрокаВОтчет(ВыборкаЗаписейСтажа.Отчество);
					ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаЗаписейСтажа.СтраховойНомерПФР;
					
					Если ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда 
						ОбластьСтрока.Параметры.НачисленоНакопительная = 0;
						ОбластьСтрока.Параметры.УплаченоНакопительная  = 0;
						ОбластьСтрока.Параметры.НачисленоСтраховая     = 0;
						ОбластьСтрока.Параметры.УплаченоСтраховая      = 0;
					Иначе
						ОбластьСтрока.Параметры.НачисленоНакопительная = ВыборкаЗаписейСтажа.НачисленоНакопительная;
						ОбластьСтрока.Параметры.УплаченоНакопительная  = ВыборкаЗаписейСтажа.УплаченоНакопительная;
						ОбластьСтрока.Параметры.НачисленоСтраховая     = ВыборкаЗаписейСтажа.НачисленоСтраховая;
						ОбластьСтрока.Параметры.УплаченоСтраховая      = ВыборкаЗаписейСтажа.УплаченоСтраховая;
					КонецЕсли;
					
					ЗаполнитьСведенияОЗаработкеВМакет(ОбластьСтрока, ВыборкаСведенийОЗаработке, ВыборкаЗаписейСтажа.Ссылка, ВыборкаЗаписейСтажа.НомерСтроки);
					
					ТабличныйДокумент.Вывести(ОбластьСтрока);
					
					Если ЗначениеЗаполнено(ВыборкаЗаписейСтажа.НомерОсновнойЗаписи) Тогда
						
						НомерСтроки = 0;
						Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерОсновнойЗаписи") Цикл
							НомерСтроки = НомерСтроки + 1;
							
							ЗаполнитьОбластьСтаж(ВыборкаЗаписейСтажа, ОбластьСтаж, НомерСтроки);
							
							ТабличныйДокумент.Вывести(ОбластьСтаж);
							Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерДополнительнойЗаписи") Цикл
								Если ВыборкаЗаписейСтажа.НомерДополнительнойЗаписи = 0 Тогда
									Продолжить;
								КонецЕсли;
								
								НомерСтроки = НомерСтроки + 1;
								
								ЗаполнитьОбластьСтаж(ВыборкаЗаписейСтажа, ОбластьСтаж, НомерСтроки);
								
								ТабличныйДокумент.Вывести(ОбластьСтаж);
								
							КонецЦикла;
						КонецЦикла;
					КонецЕсли;
					
					ОбластьПодвал.Параметры.Руководитель = ВыборкаДокументов.Руководитель;
					ОбластьПодвал.Параметры.РуководительДолжность = ВыборкаДокументов.ДолжностьРуководителя;
					ОбластьПодвал.Параметры.ДатаСоставленияОписи  = УчетСтраховыхВзносов.ДатаВОтчет(ВыборкаДокументов.Дата);
					
					ТабличныйДокумент.Вывести(ОбластьПодвал);
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					Если ОбъектыПечати <> Неопределено Тогда
						УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
					КонецЕсли;	

				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результаты;
	
КонецФункции

Функция ТабличныеДокументыОписиАДВ_6_5(МассивОбъектов, ОбъектыПечати = Неопределено) 
	Результат = Новый Соответствие;
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДляАДВ_5(МассивОбъектов).Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ПФ_MXL_ФормаАДВ_6_5");
	
	ОбластьОпись = Макет.ПолучитьОбласть("Опись");
	
	Пока ВыборкаПоШапкеДокумента.СледующийПоЗначениюПоля("Ссылка") Цикл
		ТабличныйДокумент = Новый ТабличныйДокумент;
		
		Результат.Вставить(ВыборкаПоШапкеДокумента.Ссылка, ТабличныйДокумент); 
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ВыборкаПоШапкеДокумента.ТипДоговора = Перечисления.ТипДоговораСЗВ63.Трудовой Тогда
			ОбластьОпись.Параметры.ЭтоТрудовойДоговор = Истина;
			ОбластьОпись.Параметры.ЭтоДоговорГПХ = Ложь;
		Иначе
			ОбластьОпись.Параметры.ЭтоТрудовойДоговор = Ложь;
			ОбластьОпись.Параметры.ЭтоДоговорГПХ = Истина;
		КонецЕсли;
		
		ОбластьОпись.Параметры.РегНомерПФР = ВыборкаПоШапкеДокумента.РегНомерПФР;
		ОбластьОпись.Параметры.ИНН = ВыборкаПоШапкеДокумента.ИНН;
		ОбластьОпись.Параметры.КПП = ВыборкаПоШапкеДокумента.КПП;
		ОбластьОпись.Параметры.ОКПО = ВыборкаПоШапкеДокумента.КодПоОКПО;
		ОбластьОпись.Параметры.НаименованиеОрганизации = ВыборкаПоШапкеДокумента.НаименованиеОрганизации; 
		
		ОбластьОпись.Параметры.КодКатегории = УчетСтраховыхВзносов.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		
		ОтчетныйПериод = ВыборкаПоШапкеДокумента.ОтчетныйПериод;
		
		ОбластьОпись.Параметры.ЭтоКварталОтчетногоГода   = Месяц(ОтчетныйПериод) = 1;
		ОбластьОпись.Параметры.ЭтоПолугодиеОтчетногоГода = Месяц(ОтчетныйПериод) = 4;
		ОбластьОпись.Параметры.Это9МесяцевОтчетногоГода  = Месяц(ОтчетныйПериод) = 7;
		ОбластьОпись.Параметры.ЭтоВесьОтчетныйГод        = Месяц(ОтчетныйПериод) = 10;
		
		ОбластьОпись.Параметры.ОтчетныйГод = Формат(Год(ОтчетныйПериод), "ЧГ=");
		
		ОбластьОпись.Параметры.ЭтоИсходныйДокумент = ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
		ОбластьОпись.Параметры.ЭтоКорректирующийДокумент = ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
		ОбластьОпись.Параметры.ЭтоОтменяющийДокумент     = ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ;
		
		КорректируемыйПериод = ВыборкаПоШапкеДокумента.КорректируемыйПериод;
		
		ОбластьОпись.Параметры.ЭтоКварталКорректируемогоГода   = Месяц(ОтчетныйПериод) = 1;
		ОбластьОпись.Параметры.ЭтоПолугодиеКорректируемогоГода = Месяц(ОтчетныйПериод) = 4;
		ОбластьОпись.Параметры.Это9МесяцевКорректируемогоГода  = Месяц(ОтчетныйПериод) = 7;
		ОбластьОпись.Параметры.ЭтоВесьКорректируемыйГод        = Месяц(ОтчетныйПериод) = 10;
		
		ОбластьОпись.Параметры.КорректируемыйГод = Формат(Год(КорректируемыйПериод), "ЧГ=");
		
		ОбластьОпись.Параметры.НомерПачки = ВыборкаПоШапкеДокумента.НомерПачки;
		
		ОбластьОпись.Параметры.ДокументовВПачке = ВыборкаПоШапкеДокумента.Количество;
		
		ОбластьОпись.Параметры.НачисленоНакопительная = ВыборкаПоШапкеДокумента.НачисленоНакопительная;
		ОбластьОпись.Параметры.УплаченоНакопительная  = ВыборкаПоШапкеДокумента.УплаченоНакопительная;
		ОбластьОпись.Параметры.НачисленоСтраховая     = ВыборкаПоШапкеДокумента.НачисленоСтраховая;
		ОбластьОпись.Параметры.УплаченоСтраховая      = ВыборкаПоШапкеДокумента.УплаченоСтраховая;
		
		ОбластьОпись.Параметры.ВсегоЗаработка = ВыборкаПоШапкеДокумента.Заработок;
		ОбластьОпись.Параметры.ВсегоОблагаетсяВзносамиДоПредельнойВеличины  = ВыборкаПоШапкеДокумента.ОблагаетсяВзносамиДоПредельнойВеличины;
		ОбластьОпись.Параметры.ВсегоОблагаетсяВзносамиСвышеПредельнойВеличины     = ВыборкаПоШапкеДокумента.ОблагаетсяВзносамиСвышеПредельнойВеличины;
		
		ОбластьОпись.Параметры.РуководительДолжность = ВыборкаПоШапкеДокумента.РуководительДолжность;
		ОбластьОпись.Параметры.Руководитель = ВыборкаПоШапкеДокумента.Руководитель;
		
		ОбластьОпись.Параметры.ДатаСоставленияОписи = УчетСтраховыхВзносов.ДатаВОтчет(ВыборкаПоШапкеДокумента.Дата);
		
		ТабличныйДокумент.Вывести(ОбластьОпись);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоШапкеДокумента.Ссылка);
		КонецЕсли;	
		
	КонецЦикла;
		
	Возврат Результат;
	 
КонецФункции 
#КонецЕсли