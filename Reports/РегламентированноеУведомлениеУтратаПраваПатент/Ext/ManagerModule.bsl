#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеУтратаПраваПатент.Форма.Форма2014_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2014_1";
	Стр.ОписаниеФормы = "Утрата права на патентную систему(26.5-3)/приказ ФНС от 23.04.2014 N ММВ-7-3/250@";
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2014_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект)
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("ПФ_MXL_Форма2014_1");
	Область1 = МакетУведомления.ПолучитьОбласть("Страница1");
	ПараметрыМакета = Область1.Параметры;
	СтруктураПараметров = Объект.ДанныеУведомления.Получить();
	Строка = СтруктураПараметров.Титульный[0];
	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_НО, "КОД_НО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ФАМИЛИЯ_ИП, "Фамилия_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ИМЯ_ИП, "Имя_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОТЧЕСТВО_ИП, "Отчество_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40);
	ВсегоСтраниц = 1 + СтруктураПараметров.Листы3.Количество();
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ВсегоСтраниц, "НаСтраницах_", ПараметрыМакета, 3, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_ЛИСТОВ, "ПриложеноЛистов_", ПараметрыМакета, 3, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_ПОДПИСИ, "ДатаПодписи_", ПараметрыМакета);
	ПараметрыМакета.ПризнакПредставителя = Строка.ПРИЗНАК_НП_ПОДВАЛ;
	ПараметрыМакета.КОД_ПРИЧИНЫ = СтруктураПараметров.Титульный[0].КОД_ПРИЧИНЫ;
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_УТРАТЫ_ПРАВА, "ДатаОбстоятельства_", ПараметрыМакета);
	
	ПечатнаяФорма.Вывести(Область1);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	НомерЛиста = 2;
	Для Каждого Строка Из СтруктураПараметров.Листы3 Цикл 
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_1");
		ПараметрыМакета = Область3.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.Титульный[0].П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Формат(НомерЛиста, "ЧЦ=3; ЧН=; ЧВН="), "Страница_", ПараметрыМакета, 3);
		ПечатнаяФорма.Вывести(Область3);
		
		Для Инд = 1 По 17 Цикл
			Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_1");
			ПараметрыМакета = Область3.Параметры;
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["НОМЕР_ПАТЕНТА_"+Инд], "НОМЕР_ПАТЕНТА_", ПараметрыМакета, 13);
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка["ДАТА_НАЧАЛА_"+Инд], "ДатаНачалаДействия_", ПараметрыМакета);
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка["ДАТА_ОКОНЧАНИЕ_"+Инд], "ДатаОкончанияДействия_", ПараметрыМакета);
			ПечатнаяФорма.Вывести(Область3);
		КонецЦикла;
		
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_3");
		ПечатнаяФорма.Вывести(Область3);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект)
	
	ПечатнаяФорма = СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
	
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(СведенияОтправки)
	Префикс = "SR_ZUTRPSN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Процедура Проверить_Форма2014_1(Данные, УникальныйИдентификатор)
	Титульный = Данные.Титульный[0];
	
	Ошибок = 0;
	Если Не ЗначениеЗаполнено(Титульный.ДАТА_УТРАТЫ_ПРАВА) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнена дата утраты права на применение патентной системы", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.КОД_ПРИЧИНЫ) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнен код утраты права на применение патентной системы", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Ошибок > 0 Тогда
		ВызватьИсключение "";
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор)
	
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	Проверить_Форма2014_1(Данные, УникальныйИдентификатор);
	
	Титульный = Данные.Титульный[0];
	
	ОсновныеСведения.Вставить("Фамилия", СокрЛП(Титульный.ФАМИЛИЯ_ИП));
	ОсновныеСведения.Вставить("Имя",  СокрЛП(Титульный.ИМЯ_ИП));
	ОсновныеСведения.Вставить("Отчество",  СокрЛП(Титульный.ОТЧЕСТВО_ИП));
	ОсновныеСведения.Вставить("ДатаУтрПСН", Формат(Титульный.ДАТА_УТРАТЫ_ПРАВА, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("КодППункт", Титульный.КОД_ПРИЧИНЫ);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2014_1");
	ЗаполнитьДанными_Форма2014_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2014_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(Параметры, ДеревоВыгрузки);
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_ЗУтрПСН = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "ЗУтрПСН");
	СвДействПт = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗУтрПСН, "СвДействПт");
	Узел_ДействПт = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(СвДействПт, "ДействПт");
	
	Данные = Объект.ДанныеУведомления.Получить();
	Листы3 = Данные.Листы3;
	Для Каждого Лист3 Из Листы3 Цикл
		Для Инд = 1 По 17 Цикл 
			Патент = СокрЛП(Лист3["НОМЕР_ПАТЕНТА_" + Инд]);
			Если ЗначениеЗаполнено(Патент) Тогда 
				НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_ДействПт);
				
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "НомерПт", Патент);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ДатаНачПт", Формат(Лист3["ДАТА_НАЧАЛА_" + Инд], "ДФ=dd.MM.yyyy"));
				
				Если ЗначениеЗаполнено(Лист3["ДАТА_ОКОНЧАНИЕ_" + Инд]) Тогда 
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ДатаКонПт", Формат(Лист3["ДАТА_ОКОНЧАНИЕ_" + Инд], "ДФ=dd.MM.yyyy"));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_ДействПт);
КонецПроцедуры

#КонецОбласти
#КонецЕсли