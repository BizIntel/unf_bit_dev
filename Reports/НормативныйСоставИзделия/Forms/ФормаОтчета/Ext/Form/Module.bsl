
#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриОткрытии формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Отчет.ДатаРасчета = ТекущаяДата();
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события ПриСозданииНаСервере формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Номенклатура") Тогда
		
		Если ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
			
			СтруктураДанные = Новый Структура;
			
			Если ТипЗнч(Параметры.Номенклатура ) = Тип("СправочникСсылка.Номенклатура") Тогда
				СтруктураДанные.Вставить("Номенклатура", Параметры.Номенклатура);
				СтруктураДанные.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
				СтруктураДанные      = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
				Отчет.Номенклатура   = СтруктураДанные.Номенклатура;
				Отчет.Спецификация   = СтруктураДанные.Спецификация;
			Иначе // Спецификации
				Отчет.Номенклатура   = Параметры.Номенклатура.Владелец;
				Отчет.Характеристика = Параметры.Номенклатура.ХарактеристикаПродукции;
				Отчет.Спецификация   = Параметры.Номенклатура;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Отчет.ВидЦен = Справочники.ВидыЦен.Учетная;
	Отчет.Количество = 1;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(Настройки)
	ВариантыОтчетов.ПриСохраненииПользовательскихНастроекНаСервере(ЭтотОбъект, Настройки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Номенклатура.
//
Процедура НоменклатураПриИзменении(Элемент)
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("Номенклатура", Отчет.Номенклатура);
	СтруктураДанные.Вставить("Характеристика", Отчет.Характеристика);
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	Отчет.Спецификация = СтруктураДанные.Спецификация;

КонецПроцедуры // НоменклатураПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Характеристика.
//
Процедура ХарактеристикаПриИзменении(Элемент)
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("Номенклатура", Отчет.Номенклатура);
	СтруктураДанные.Вставить("Характеристика", Отчет.Характеристика);
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	Отчет.Спецификация = СтруктураДанные.Спецификация;
	
КонецПроцедуры // ХарактеристикаПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Процедура вызывается при нажатии кнопки "Сформировать" командной панели
// табличного поля.
//
Процедура Сформировать(Команда)
	
	СформироватьОтчет(Отчет.Номенклатура, Отчет.Характеристика, Отчет.Спецификация);
	
КонецПроцедуры // Сформировать()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
// Процедура формирования схемы состава изделия.
// 
Процедура ВывестиСоставИзделия(ТаблицаСостава, Макет, ОформлениеСтроки)
	
	Если ТаблицаСостава.Количество() < 2 Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не заполнен нормативный состав изделия'");
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	ИндексСтроки = ТаблицаСостава.Количество() - 1;
	ИтогиПоУровням = Новый Соответствие;
	
	Пока ИндексСтроки > 0 Цикл 
		
		РассчитатьИтогПоУровню(ИтогиПоУровням, ТаблицаСостава[ИндексСтроки], "Стоимость");
		
		ИндексСтроки = ИндексСтроки - 1;
		
	КонецЦикла;
	
	ТаблицаСостава[0].Стоимость = ОбщийИтог(ИтогиПоУровням);
	
	Для Каждого СтрокаСостава Из ТаблицаСостава Цикл
		
		Макет.Область("СтрокаСостава|Номенклатура").Отступ = СтрокаСостава.Уровень*2;
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСостава|СтолбецСостава");
		
		ОбластьМакета.Параметры.ПредставлениеНоменклатуры 	= СтрШаблон("%1 %2", СтрокаСостава.Номенклатура.Наименование, СтрокаСостава.Характеристика.Наименование);
		ОбластьМакета.Параметры.Номенклатура				= СтрокаСостава.Номенклатура;
		ОбластьМакета.Параметры.Количество					= СтрокаСостава.Количество;
		ОбластьМакета.Параметры.ЕдиницаИзмерения			= СтрокаСостава.ЕдиницаИзмерения;
		ОбластьМакета.Параметры.УчетнаяЦена					= СтрокаСостава.УчетнаяЦена;
		ОбластьМакета.Параметры.Стоимость					= СтрокаСостава.Стоимость;
		
		ИндексСтроки = ТаблицаСостава.Индекс(СтрокаСостава);
		
		Если СтрокаСостава.Узел Тогда
			ОбластьМакета.Область(1,2,1,19).ЦветФона = ОформлениеСтроки[СтрокаСостава.Уровень - Цел(СтрокаСостава.Уровень / 5) * 5];
		КонецЕсли;
		
		Если ИндексСтроки < ТаблицаСостава.Количество() - 1 Тогда
			
			СледСтроки = ТаблицаСостава[ИндексСтроки + 1];
			
			Если СледСтроки.Уровень > СтрокаСостава.Уровень Тогда
				ТабличныйДокументОтчет.Вывести(ОбластьМакета);
				ТабличныйДокументОтчет.НачатьГруппуСтрок(СтрокаСостава.Номенклатура.Наименование);
			ИначеЕсли СледСтроки.Уровень < СтрокаСостава.Уровень Тогда
				ТабличныйДокументОтчет.Вывести(ОбластьМакета);
				РазницаУровней = СтрокаСостава.Уровень - СледСтроки.Уровень;
				Пока РазницаУровней >= 1 Цикл
					ТабличныйДокументОтчет.ЗакончитьГруппуСтрок();
					РазницаУровней = РазницаУровней - 1;
				КонецЦикла;
			Иначе
				ТабличныйДокументОтчет.Вывести(ОбластьМакета);
			КонецЕсли;
		Иначе
			ТабличныйДокументОтчет.Вывести(ОбластьМакета);
			ТабличныйДокументОтчет.ЗакончитьГруппуСтрок();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ВывестиСоставИзделия()

&НаСервере
// Процедура формирования схемы операций изделия.
// 
Процедура ВывестиСоставОпераций(ТаблицаОпераций, Макет, ОформлениеСтроки)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТехоперации") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаОпераций.Количество() <= 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если ВТаблицеПрисутствуютТолькоУзлы(ТаблицаОпераций) Тогда
		Возврат;
	КонецЕсли;
	
	ОбластьМакетаОперации = Макет.ПолучитьОбласть("Отступ");
	ТабличныйДокументОтчет.Вывести(ОбластьМакетаОперации);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ОперацияЗаголовок|СтолбецСостава");
	ТабличныйДокументОтчет.Вывести(ОбластьМакета);
	
	ИндексСтроки = ТаблицаОпераций.Количество() - 1;
	ИтогиПоУровнямНормаВремени = Новый Соответствие;
	ИтогиПоУровнямДлительность = Новый Соответствие;
	ИтогиПоУровнямСтоимость = Новый Соответствие;
	
	Пока ИндексСтроки > 0 Цикл 
		
		РассчитатьИтогПоУровню(ИтогиПоУровнямНормаВремени, ТаблицаОпераций[ИндексСтроки], "НормаВремени");
		РассчитатьИтогПоУровню(ИтогиПоУровнямДлительность, ТаблицаОпераций[ИндексСтроки], "Длительность");
		РассчитатьИтогПоУровню(ИтогиПоУровнямСтоимость, ТаблицаОпераций[ИндексСтроки], "Стоимость");
		
		ИндексСтроки = ИндексСтроки - 1;
		
	КонецЦикла;
	
	ТаблицаОпераций[0].НормаВремени = ОбщийИтог(ИтогиПоУровнямНормаВремени);
	ТаблицаОпераций[0].Длительность = ОбщийИтог(ИтогиПоУровнямДлительность);
	ТаблицаОпераций[0].Стоимость = ОбщийИтог(ИтогиПоУровнямСтоимость);
	
	ГруппировкаСтрокОткрыта = Ложь;
	
	Для Каждого СтрокаОперация Из ТаблицаОпераций Цикл
		
		Макет.Область("СтрокаОперация|Номенклатура").Отступ = СтрокаОперация.Уровень * 2;
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОперация|СтолбецСостава");
		
		Если СтрокаОперация.Узел Тогда
			ОбластьМакета.Параметры.ПредставлениеНоменклатуры = СтрокаОперация.Номенклатура.Наименование +" "+СтрокаОперация.Характеристика.Наименование;
		Иначе
			ОбластьМакета.Параметры.ПредставлениеНоменклатуры = СтрокаОперация.Номенклатура.Наименование;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Номенклатура = СтрокаОперация.Номенклатура;
		ОбластьМакета.Параметры.Норма		 = СтрокаОперация.НормаВремени;
		ОбластьМакета.Параметры.Длительность = СтрокаОперация.Длительность;
		ОбластьМакета.Параметры.УчетнаяЦена  = СтрокаОперация.УчетнаяЦена;
		ОбластьМакета.Параметры.Стоимость	 = СтрокаОперация.Стоимость;
		
		ИндексСтроки = ТаблицаОпераций.Индекс(СтрокаОперация);
		
		Если СтрокаОперация.Узел Тогда
			ОбластьМакета.Область(1,2,1,19).ЦветФона = ОформлениеСтроки[СтрокаОперация.Уровень - Цел(СтрокаОперация.Уровень / 5) * 5];
		КонецЕсли;
		
		Если ИндексСтроки < ТаблицаОпераций.Количество() - 1 Тогда
			
			СледСтроки = ТаблицаОпераций[ИндексСтроки+1];
			
			Если СледСтроки.Уровень > СтрокаОперация.Уровень Тогда
				
				ТабличныйДокументОтчет.Вывести(ОбластьМакета);
				ТабличныйДокументОтчет.НачатьГруппуСтрок(СтрокаОперация.Номенклатура.Наименование);
				ГруппировкаСтрокОткрыта = Истина;
				
			ИначеЕсли СледСтроки.Уровень < СтрокаОперация.Уровень Тогда
				
				ТабличныйДокументОтчет.Вывести(ОбластьМакета);
				РазницаУровней = СтрокаОперация.Уровень - СледСтроки.Уровень;
				Пока РазницаУровней >= 1 Цикл
					
					ТабличныйДокументОтчет.ЗакончитьГруппуСтрок();
					РазницаУровней = РазницаУровней - 1;
					
				КонецЦикла;
				
			Иначе
				
				ТабличныйДокументОтчет.Вывести(ОбластьМакета);
				
			КонецЕсли;
			
		Иначе
			
			ТабличныйДокументОтчет.Вывести(ОбластьМакета);
			
			//Проверим на необходимость закрывать группировку
			Если ГруппировкаСтрокОткрыта Тогда 
				
				ТабличныйДокументОтчет.ЗакончитьГруппуСтрок();
				ГруппировкаСтрокОткрыта = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ВывестиСоставОпераций()

&НаСервере
Функция ВТаблицеПрисутствуютТолькоУзлы(ТаблицаОпераций)
	
	ПараметрыОтбора = Новый Структура("Узел", Ложь);
	
	НайденныеСтроки = ТаблицаОпераций.НайтиСтроки(ПараметрыОтбора);
	
	Возврат Не ЗначениеЗаполнено(НайденныеСтроки);
	
КонецФункции

&НаСервере
Функция РассчитатьИтогПоУровню(ИтогиПоУровням, ТекСтрока, ИмяКолонки)
	
	Если ТекСтрока.Узел Тогда
		ТекСтрока[ИмяКолонки] = ИтогиПоУровням[ТекСтрока.Уровень];
		Если ИтогиПоУровням[ТекСтрока.Уровень - 1] = Неопределено Тогда 
			ИтогиПоУровням[ТекСтрока.Уровень - 1] = ТекСтрока[ИмяКолонки];
		Иначе
			ИтогиПоУровням[ТекСтрока.Уровень - 1] = ИтогиПоУровням[ТекСтрока.Уровень - 1] + ТекСтрока[ИмяКолонки];
		КонецЕсли;
		ИтогиПоУровням[ТекСтрока.Уровень] = 0;
	Иначе
		Если ИтогиПоУровням[ТекСтрока.Уровень - 1] = Неопределено Тогда 
			ИтогиПоУровням[ТекСтрока.Уровень - 1] = ТекСтрока[ИмяКолонки];
		Иначе
			ИтогиПоУровням[ТекСтрока.Уровень - 1] = ИтогиПоУровням[ТекСтрока.Уровень - 1] + ТекСтрока[ИмяКолонки];
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ОбщийИтог(ИтогиПоУровням)
	
	Результат = 0;
	Для Каждого КлючИЗначение Из ИтогиПоУровням Цикл
		Результат = Результат + КлючИЗначение.Значение;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
// Функция формирует дерево по запросу.
//
// Параметры:
//  прНоменклатура - СправочникСсылка.Номенклатура - продукция.
//
Функция ДанныеДляОтчета(Номенклатура, Спецификация, Характеристика)
	
	Результат = Новый Структура;
	
	СтруктураСостава = УправлениеНебольшойФирмойСервер.СформироватьСтруктуруСостава();
	СтруктураСостава.Номенклатура		= Номенклатура;
	СтруктураСостава.Характеристика		= Характеристика;
	СтруктураСостава.ЕдиницаИзмерения	= Номенклатура.ЕдиницаИзмерения;
	СтруктураСостава.Количество			= Отчет.Количество;
	СтруктураСостава.Спецификация		= Спецификация;
	СтруктураСостава.ДатаОбработки		= Отчет.ДатаРасчета;
	СтруктураСостава.ВидЦен				= Отчет.ВидЦен;
	СтруктураСостава.Уровень			= 0;
	СтруктураСостава.УчетнаяЦена		= 0;
	СтруктураСостава.Стоимость			= 0;
	
	ОписаниеТипаЧисло = Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 3));
	
	Результат.Вставить("ТаблицаСостава", Новый ТаблицаЗначений);
	
	Результат.ТаблицаСостава.Колонки.Добавить("Номенклатура");
	Результат.ТаблицаСостава.Колонки.Добавить("Характеристика");
	Результат.ТаблицаСостава.Колонки.Добавить("ЕдиницаИзмерения");
	Результат.ТаблицаСостава.Колонки.Добавить("Количество", ОписаниеТипаЧисло);
	Результат.ТаблицаСостава.Колонки.Добавить("Уровень");
	Результат.ТаблицаСостава.Колонки.Добавить("Узел");
	Результат.ТаблицаСостава.Колонки.Добавить("УчетнаяЦена", ОписаниеТипаЧисло);
	Результат.ТаблицаСостава.Колонки.Добавить("Стоимость", ОписаниеТипаЧисло);
	
	Результат.Вставить("ТаблицаОпераций", Новый ТаблицаЗначений);
	
	Результат.ТаблицаОпераций.Колонки.Добавить("Номенклатура");
	Результат.ТаблицаОпераций.Колонки.Добавить("Характеристика");
	Результат.ТаблицаОпераций.Колонки.Добавить("НормаВремени", ОписаниеТипаЧисло);
	Результат.ТаблицаОпераций.Колонки.Добавить("Длительность", ОписаниеТипаЧисло);
	Результат.ТаблицаОпераций.Колонки.Добавить("Уровень");
	Результат.ТаблицаОпераций.Колонки.Добавить("Узел");
	Результат.ТаблицаОпераций.Колонки.Добавить("УчетнаяЦена", ОписаниеТипаЧисло);
	Результат.ТаблицаОпераций.Колонки.Добавить("Стоимость", ОписаниеТипаЧисло);
	
	УправлениеНебольшойФирмойСервер.Разузлование(СтруктураСостава, Результат.ТаблицаСостава, Результат.ТаблицаОпераций);
	
	Возврат Результат;
	
КонецФункции // СформироватьДерево()

&НаСервере
// Процедура формирует отчет по составу изделия.
//
Процедура СформироватьОтчет(Номенклатура, Характеристика, Спецификация)
	
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		
		ТекстСообщения = НСтр("ru = 'Поле Номенклатура не заполнено'");
		ПолеСообщения = "Номенклатура";
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
		Отчет,
		ТекстСообщения,,,
		ПолеСообщения);
		
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Спецификация) Тогда
		
		ТекстСообщения = НСтр("ru = 'Поле Спецификация не заполнено'");
		ПолеСообщения = "Спецификация";
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(Отчет,
		ТекстСообщения,,,
		ПолеСообщения);
		
		Возврат;
		
	КонецЕсли;
	
	ТабличныйДокументОтчет.Очистить();
	
	ДанныеДляОтчета = ДанныеДляОтчета(Номенклатура, Спецификация, Характеристика);
	
	Отчет.Стоимость = ДанныеДляОтчета.ТаблицаСостава.Итог("Стоимость") + ДанныеДляОтчета.ТаблицаОпераций.Итог("Стоимость");
	
	Макет = Отчеты.НормативныйСоставИзделия.ПолучитьМакет("Макет");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заголовок = СтрШаблон(НСтр(
	"ru = 'Нормативный состав изделия на %1
	|Изделие: %2%3, спецификация ""%4""
	|Количество: %5 %6, стоимость: %7 %8
	|'"),
	Формат(Отчет.ДатаРасчета,"ДЛФ=DD"),
	Номенклатура.Наименование,
	?(ЗначениеЗаполнено(Отчет.Характеристика), ", " + Отчет.Характеристика, ""),
	Спецификация,
	Отчет.Количество,
	Номенклатура.ЕдиницаИзмерения,
	Отчет.Стоимость,
	Отчет.ВидЦен.ВалютаЦены.Наименование);
	
	ТабличныйДокументОтчет.Вывести(ОбластьМакета);
	
	ОформлениеСтроки = Новый Массив;
	
	ОформлениеСтроки.Добавить(WebЦвета.НейтральноБирюзовый);
	ОформлениеСтроки.Добавить(WebЦвета.НейтральноЗеленый);
	ОформлениеСтроки.Добавить(WebЦвета.АкварельноСиний);
	ОформлениеСтроки.Добавить(WebЦвета.Кремовый);
	ОформлениеСтроки.Добавить(WebЦвета.Лазурный);

	ОбластьМакета = Макет.ПолучитьОбласть("СоставЗаголовок|СтолбецСостава");
	ТабличныйДокументОтчет.Вывести(ОбластьМакета);
	
	ВывестиСоставИзделия(ДанныеДляОтчета.ТаблицаСостава, Макет, ОформлениеСтроки);
	ВывестиСоставОпераций(ДанныеДляОтчета.ТаблицаОпераций, Макет, ОформлениеСтроки);
	
КонецПроцедуры // СформироватьОтчет()

&НаСервереБезКонтекста
// Получает набор данных с сервера для процедуры НоменклатураПриИзменении.
//
Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	СтруктураДанные.Вставить("Спецификация", УправлениеНебольшойФирмойСервер.ПолучитьПоУмолчаниюСпецификацию(СтруктураДанные.Номенклатура, СтруктураДанные.Характеристика));
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

#КонецОбласти