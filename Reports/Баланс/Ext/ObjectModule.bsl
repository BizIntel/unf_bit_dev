#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ПриОпределенииНастроекОтчета(НастройкиОтчета, НастройкиВариантов) Экспорт
	
	НастройкиОтчета.ПрограммноеИзменениеФормыОтчета = Истина;
	НастройкиОтчета.ПоказыватьГруппуСтрокиНаФормеОтчета = Ложь;
	НастройкиОтчета.ПоказыватьГруппуКолонкиНаФормеОтчета = Ложь;
	НастройкиОтчета.ПоказыватьНастройкиДиаграммыНаФормеОтчета = Ложь;
	НастройкиОтчета.ПоказыватьГруппуФильтрыНаФормеОтчета = Ложь;
	НастройкиОтчета.РазрешитьРедактироватьСКД = Ложь;
	
	НастройкиВариантов["Основной"].Рекомендуемый = Истина;
	
	УстановитьТегиВариантов(НастройкиВариантов);
	
КонецПроцедуры

Процедура ОбновитьНастройкиНаФорме(НастройкиОтчета, НастройкиСКД, Форма) Экспорт
	
	ДобавитьПолеВыбораОрганизации(НастройкиСКД, Форма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ОбработатьВыводЗаголовка();
	
	УстановитьПериодПоУмолчанию();
	
	ОтчетыУНФ.ПриКомпоновкеРезультата(КомпоновщикНастроек, СхемаКомпоновкиДанных, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
	УдалитьПустыеСтроки(ДокументРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьТегиВариантов(НастройкиВариантов)
	
	НастройкиВариантов["Основной"].Теги = НСтр("ru = 'Главное,Компания,Баланс'");
	
КонецПроцедуры

Процедура ОбработатьВыводЗаголовка()
	
	ПараметрВыводитьЗаголовок = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ВыводитьЗаголовок");
	
	Если ПараметрВыводитьЗаголовок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КомпоновщикНастроек.Настройки.Структура[0].Использование = ПараметрВыводитьЗаголовок.Значение;
	
КонецПроцедуры

Процедура УстановитьПериодПоУмолчанию()
	
	СтПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтПериод");
	УстановитьДатуНачала(СтПериод);
	УстановитьДатуОкончания(СтПериод);
	
КонецПроцедуры

Процедура УстановитьДатуНачала(СтПериод)
	
	Если ЗначениеЗаполнено(СтПериод.Значение.ДатаНачала) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Управленческий.Период КАК Период
	|ИЗ
	|	РегистрБухгалтерии.Управленческий КАК Управленческий
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	СтПериод.Значение.ДатаНачала = Выборка.Период;
	
КонецПроцедуры

Процедура УстановитьДатуОкончания(СтПериод);

	Если ЗначениеЗаполнено(СтПериод.Значение.ДатаОкончания) Тогда
		Возврат;
	КонецЕсли;
	
	СтПериод.Значение.ДатаОкончания = КонецДня(ТекущаяДатаСеанса());
	
КонецПроцедуры

Процедура УдалитьПустыеСтроки(ТабличныйДокумент)
	
	МассивПустыхСтрок = Новый Массив;
	
	Для ИндексСтроки = 5 По ТабличныйДокумент.ВысотаТаблицы Цикл
		
		ЭтоПустаяСтрока = Истина;
		
		Для ИндексКолонки = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
			Если ЗначениеЗаполнено(ТабличныйДокумент.Область(ИндексСтроки, ИндексКолонки).Текст) Тогда
				ЭтоПустаяСтрока = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЭтоПустаяСтрока Тогда
			МассивПустыхСтрок.Вставить(0, ИндексСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ТекЭлемент Из МассивПустыхСтрок Цикл
		ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(ТекЭлемент,, ТекЭлемент), ТипСмещенияТабличногоДокумента.ПоВертикали);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьПолеВыбораОрганизации(НастройкиСКД, Форма)
	
	ЗначениеПараметраОрганизация = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Организация");
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		НастройкиСКД.ПараметрыДанных.УстановитьЗначениеПараметра("Организация", Справочники.Организации.ОрганизацияПоУмолчанию());
		Возврат;
	КонецЕсли;
	
	Если Константы.УчетПоКомпании.Получить() Тогда
		НастройкиСКД.ПараметрыДанных.УстановитьЗначениеПараметра("Организация", Константы.Компания.Получить());
		Возврат;
	КонецЕсли;
	
	ЗначениеПоУмолчанию = Справочники.Организации.ПустаяСсылка();
	
	Стр = Форма.ПоляНастроек.ПолучитьЭлементы().Добавить();
	Стр.Тип = "Параметр";
	Стр.Поле = "Организация";
	Стр.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Организации");
	Стр.Заголовок = НСтр("ru = 'Организация'");
	Стр.ВидЭлемента = "Поле";
	Стр.Реквизиты = Новый Структура;
	Стр.Элементы = Новый Структура;
	Стр.ДополнительныеПараметры = Новый Структура;
	ИмяРеквизита = "ПараметрОрганизация";
	Стр.Реквизиты.Вставить(ИмяРеквизита, ЗначениеПоУмолчанию);
	МассивРеквизитов = Новый Массив;
	Для каждого Элемент Из Стр.Реквизиты Цикл
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Элемент.Ключ, Стр.ТипЗначения,, Стр.Заголовок));
	КонецЦикла;
	Стр.Создан = Истина;
	Форма.ИзменитьРеквизиты(МассивРеквизитов);
	Форма[ИмяРеквизита] = ЗначениеПоУмолчанию;
	НастройкиСКД.ПараметрыДанных.УстановитьЗначениеПараметра(Стр.Поле, ЗначениеПоУмолчанию);
	Элемент = Форма.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Форма.Элементы.ГруппаПараметрыЭлементы);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Элемент.ПутьКДанным = ИмяРеквизита;
	Элемент.КнопкаОткрытия = Ложь;
	Элемент.КнопкаВыбора = Ложь;
	Элемент.КнопкаСоздания = Ложь;
	Элемент.БыстрыйВыбор = Истина;
	Элемент.ЦветРамки = ЦветаСтиля.НедоступныеДанныеЦвет;
	Элемент.ПодсказкаВвода = Стр.Заголовок;
	Элемент.Ширина = 23;
	Элемент.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВПолеВвода;
	Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПараметрПриИзменении");
	Стр.Элементы.Вставить(Элемент.Имя, Элемент.ПутьКДанным);
	
	ПереместитьВнизЭлементВыводитьЗаголовок(Форма);
	
КонецПроцедуры

Процедура ПереместитьВнизЭлементВыводитьЗаголовок(Знач Форма)
	
	Для Каждого ТекСтрокаРеквизит Из Форма.ПоляНастроек.ПолучитьЭлементы() Цикл
		
		Если НЕ ТекСтрокаРеквизит.Тип = "Параметр" Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ТекСтрокаЭлемент Из ТекСтрокаРеквизит.Элементы Цикл
			
			Если ТекСтрокаРеквизит.Поле = "ВыводитьЗаголовок" Тогда
				Форма.Элементы.Переместить(Форма.Элементы[ТекСтрокаЭлемент.Ключ], Форма.Элементы.ГруппаПараметрыЭлементы);
				Возврат;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

ЭтоОтчетУНФ = Истина;

#КонецЕсли