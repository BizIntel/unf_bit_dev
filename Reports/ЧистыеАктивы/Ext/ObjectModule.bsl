#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнетрфейс

Процедура ПриОпределенииНастроекОтчета(НастройкиОтчета, НастройкиВариантов) Экспорт
	
	НастройкиОтчета.ПоказыватьГруппировкиКолонокНаФормеОтчета = Ложь;
	НастройкиОтчета.ИспользоватьСравнение = Истина;
	НастройкиОтчета.ИспользоватьПериодичность = Истина;
	НастройкиОтчета.РазрешитьДобавлениеПрочихПолейСравнения = Ложь;
	НастройкиОтчета.ИспользоватьДополнительныеРежимыСравнения = Ложь;
	НастройкиОтчета.ПоказыватьНастройкиДиаграммыНаФормеОтчета = Ложь;
	
	ОтчетыУНФ.ДобавитьВариантыОформленияСумм(НастройкиВариантов["ЧистыеАктивы"].ВариантыОформления, "СуммаОстаток");
	НастройкиВариантов["ЧистыеАктивы"].Теги = НСтр("ru = 'Главное'");
	НастройкиВариантов["ЧистыеАктивы"].Рекомендуемый = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НастройкиОтчета = КомпоновщикНастроек.Настройки;
	
	ПараметрыОтчета = ОтчетыУНФ.ПараметрыФормированияОтчета(НастройкиОтчета);
	УправлениеНебольшойФирмойОтчеты.ВывестиЗаголовокОтчета(ПараметрыОтчета, ДокументРезультат);
	
	ОтчетыУНФ.СтандартизироватьСхему(СхемаКомпоновкиДанных);
	
	УправлениеНебольшойФирмойОтчеты.УстановитьМакетОформленияОтчета(НастройкиОтчета);
	ДополнительныеСвойства = КомпоновщикНастроек.Настройки.ДополнительныеСвойства;
	
	Если ДополнительныеСвойства.Свойство("Сравнение") 
		И ТипЗнч(ДополнительныеСвойства.Сравнение)=Тип("ПеречислениеСсылка.Периодичность") 
		И ЗначениеЗаполнено(ДополнительныеСвойства.Сравнение)
		И НЕ ДополнительныеСвойства.Сравнение=Перечисления.Периодичность.ПустаяСсылка() Тогда
		Периодичность = ДополнительныеСвойства.Сравнение;
	Иначе
		Периодичность = Неопределено;
	КонецЕсли;
	
	ПараметрыФормирования = Новый Структура;
	ПараметрыФормирования.Вставить("ГруппировкаКолонок", ?(ДополнительныеСвойства.Свойство("ГруппировкаКолонок"), ДополнительныеСвойства.ГруппировкаКолонок, "ГруппировкаКолонок"));
	ПараметрыФормирования.Вставить("Сравнение", ?(ДополнительныеСвойства.Свойство("Сравнение"), ДополнительныеСвойства.Сравнение, "Сравнение"));
	Если ТипЗнч(ПараметрыФормирования.Сравнение)=Тип("ПеречислениеСсылка.Периодичность") Тогда
		ПараметрыФормирования.Вставить("Сравнение", "ДинамическийПериод");
	КонецЕсли;
	ПараметрыФормирования.Вставить("ПорядокГруппировок", Новый Массив);
	ПараметрыФормирования.Вставить("ПорядокГруппировокЗаполнен", Ложь);
	ПараметрыФормирования.Вставить("СтруктураПолейСравнения", Новый Структура);
	Если ДополнительныеСвойства.Свойство("ИспользоватьСравнение") И ДополнительныеСвойства.ИспользоватьСравнение Тогда
		ОтчетыУНФ.ОбновитьПоляСравнения(СхемаКомпоновкиДанных, НастройкиОтчета, ПараметрыФормирования);
	КонецЕсли; 
	
	ВнешниеНаборыДанных = Новый Структура;
	Если НЕ СхемаКомпоновкиДанных.НаборыДанных.Найти("ТаблицаПериодов")=Неопределено Тогда
		ПериодОтчета = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("СтПериод");
		ТаблицаДанных = Новый ТаблицаЗначений;
		ТаблицаДанных.Колонки.Добавить("ДатаПериода",Новый ОписаниеТипов("Дата",Новый КвалификаторыДаты(ЧастиДаты.Дата)));
		КонецПериода = ?(ЗначениеЗаполнено(ПериодОтчета.Значение.ДатаОкончания),КонецДня(ПериодОтчета.Значение.ДатаОкончания), КонецДня(ТекущаяДатаСеанса()));
		НачалоПериода = НачалоДня(ПериодОтчета.Значение.ДатаНачала);
		Если НЕ ЗначениеЗаполнено(НачалоПериода) Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			               |	Управленческий.Период КАК Период
			               |ИЗ
			               |	РегистрБухгалтерии.Управленческий КАК Управленческий
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Период";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				НачалоПериода = НачалоДня(Выборка.Период);
			Иначе
				НачалоПериода = НачалоДня(ДобавитьМесяц(ТекущаяДатаСеанса(), -12));
			КонецЕсли; 
		КонецЕсли; 
		ПолеСхемы = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("ДинамическийПериод");
		Если НЕ ЗначениеЗаполнено(Периодичность) Тогда
			ТаблицаДанных.Добавить().ДатаПериода = КонецПериода;
			Если ПолеСхемы <> Неопределено Тогда
				ПолеСхемы.Заголовок = НСтр("ru = 'Баланс'");
				ПараметрОформленияФормат = ПолеСхемы.Оформление.Элементы.Найти("Формат");
				ПараметрОформленияФормат.Значение = "ДЛФ=D";
				ПараметрОформленияФормат.Использование = Истина;
			КонецЕсли; 
		Иначе
			Позиция = НачалоПериода;
			Пока Позиция<КонецПериода Цикл
				Позиция = СледующаяПозиция(Позиция, Периодичность);
				ТаблицаДанных.Добавить().ДатаПериода = Позиция;
			КонецЦикла;
			Если ПолеСхемы <> Неопределено Тогда
				СтрокаДлительностьПериода = ОбщегоНазначения.ИмяЗначенияПеречисления(Периодичность);
				ПолеСхемы.Заголовок = СтрокаДлительностьПериода;
				ПараметрОформленияФормат = ПолеСхемы.Оформление.Элементы.Найти("Формат");
				ПараметрОформленияФормат.Значение = УправлениеНебольшойФирмойОтчеты.ФорматнаяСтрокаДинамическогоПериода(Периодичность);
				ПараметрОформленияФормат.Использование = Истина;
			КонецЕсли;
		КонецЕсли; 
		ВнешниеНаборыДанных.Вставить("ТаблицаПериодов", ТаблицаДанных);
	КонецЕсли;
	
	ОтчетыУНФ.ДобавитьСимволВалютыКЗаголовкамПолей(СхемаКомпоновкиДанных, "СуммаОстаток");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	//Создадим и инициализируем процессор компоновки
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	//Создадим и инициализируем процессор вывода результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	//Обозначим начало вывода
	ПроцессорВывода.НачатьВывод();
	ТаблицаЗафиксирована = Ложь;

	ДокументРезультат.ФиксацияСверху = 0;
	
	//Основной цикл вывода отчета
	ОбластиКУдалению = Новый Массив;
	КоличествоДиаграмм = 0;
	
	Пока Истина Цикл
		//Получим следующий элемент результата компоновки
		ЭлементРезультата = ПроцессорКомпоновки.Следующий();

		Если ЭлементРезультата = Неопределено Тогда
			//Следующий элемент не получен - заканчиваем цикл вывода
			Прервать;
		Иначе
			// Зафиксируем шапку
			Если  Не ТаблицаЗафиксирована 
				  И ЭлементРезультата.ЗначенияПараметров.Количество() > 0 
				  И ТипЗнч(КомпоновщикНастроек.Настройки.Структура[0]) <> Тип("ДиаграммаКомпоновкиДанных") Тогда

				ТаблицаЗафиксирована = Истина;
				ДокументРезультат.ФиксацияСверху = ДокументРезультат.ВысотаТаблицы;

			КонецЕсли;
			//Элемент получен - выведем его при помощи процессора вывода
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
			
			ОтчетыУНФ.ВывестиКартинкиВЭлементРезультата(ЭлементРезультата, ДанныеРасшифровки, ДокументРезультат, ПараметрыФормирования); 
			
		КонецЕсли;
	КонецЦикла;

	ПроцессорВывода.ЗакончитьВывод();
	
	Для каждого Область Из ОбластиКУдалению Цикл
		ДокументРезультат.УдалитьОбласть(Область, ТипСмещенияТабличногоДокумента.ПоВертикали);
	КонецЦикла;
	
	ОтчетыУНФ.ВыполнитьОперацииПослеФормирования(ДокументРезультат, ПараметрыФормирования);
	
	ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы, 1, ДокументРезультат.ВысотаТаблицы, 1).Текст = НСтр("ru = 'Чистые активы'");
	
КонецПроцедуры

Функция СледующаяПозиция(Позиция, Периодичность)
	
	Если Периодичность=Перечисления.Периодичность.День Тогда
		Возврат ?(Позиция=КонецДня(Позиция), КонецДня(Позиция+24*3600), КонецДня(Позиция));
	ИначеЕсли Периодичность=Перечисления.Периодичность.Неделя Тогда
		Возврат ?(Позиция=КонецНедели(Позиция), КонецНедели(Позиция+7*24*3600), КонецНедели(Позиция));
	ИначеЕсли Периодичность=Перечисления.Периодичность.Декада Тогда
		Возврат ?(Позиция=КонецДня(Позиция), КонецДня(Позиция+10*24*3600), КонецДня(Позиция));
	ИначеЕсли Периодичность=Перечисления.Периодичность.Месяц Тогда
		Возврат ?(Позиция=КонецМесяца(Позиция), КонецМесяца(ДобавитьМесяц(Позиция,1)), КонецМесяца(Позиция));
	ИначеЕсли Периодичность=Перечисления.Периодичность.Квартал Тогда
		Возврат ?(Позиция=КонецКвартала(Позиция), КонецКвартала(ДобавитьМесяц(Позиция,3)), КонецКвартала(Позиция));
	ИначеЕсли Периодичность=Перечисления.Периодичность.Полугодие Тогда
		Возврат ?(Позиция=КонецМесяца(Позиция), КонецМесяца(ДобавитьМесяц(Позиция,6)), КонецМесяца(Позиция));
	ИначеЕсли Периодичность=Перечисления.Периодичность.Год Тогда
		Возврат ?(Позиция=КонецГода(Позиция), КонецГода(ДобавитьМесяц(Позиция,12)), КонецГода(Позиция));
	КонецЕсли; 
	
КонецФункции
 
#КонецОбласти

ЭтоОтчетУНФ = Истина;

#КонецЕсли