
#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.ДокументСсылка = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Открытие отчета предусмотрено только из документов.'");
	КонецЕсли;
	
	ДокументСсылка = Параметры.ДокументСсылка;
	
	СкидкиРассчитаны = ДокументСсылка.СкидкиРассчитаны;
	
	Сформировать();
	
КонецПроцедуры

// Процедура - обработчик события ПриОткрытии формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма") Тогда
		Если ВладелецФормы.Модифицированность Тогда
			Элементы.ДекорацияПредупреждение.Видимость = Истина;
		Иначе
			Элементы.ДекорацияПредупреждение.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Не СкидкиРассчитаны Тогда
		Если Элементы.ДекорацияПредупреждение.Видимость Тогда
			Элементы.ДекорацияПредупреждение.Заголовок = Элементы.ДекорацияПредупреждение.Заголовок + " В документе не рассчитаны скидки, наценки!";
		Иначе
			Элементы.ДекорацияПредупреждение.Видимость = Истина;
			Элементы.ДекорацияПредупреждение.Заголовок = "В документе не рассчитаны скидки, наценки!";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	Сформировать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура РекурсивныйОбходСкидок(ДеревоСкидок, МассивСкидок)
	
	Для Каждого СтрокаДерева Из ДеревоСкидок.Строки Цикл
		
		Если СтрокаДерева.ЭтоГруппа Тогда
			
			РекурсивныйОбходСкидок(СтрокаДерева, МассивСкидок);
			
		Иначе
			
			МассивСкидок.Добавить(СтрокаДерева);
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтрукутурПараметровРасчетаАвтоСкидокСервер(РасходнаяНакладнаяСсылка)

	СтруктураПараметровЗаказа = Новый Структура("РеализацияПоЗаказам, РеализацияСверхЗаказа", Ложь, Ложь);
	
	Запрос = Новый Запрос;
	Если ТипЗнч(РасходнаяНакладнаяСсылка) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	АктВыполненныхРаботРаботыИУслуги.ЗаказПокупателя КАК Заказ
			|ИЗ
			|	Документ.АктВыполненныхРабот.РаботыИУслуги КАК АктВыполненныхРаботРаботыИУслуги
			|ГДЕ
			|	АктВыполненныхРаботРаботыИУслуги.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	АктВыполненныхРаботРаботыИУслуги.ЗаказПокупателя";
			
	ИначеЕсли ТипЗнч(РасходнаяНакладнаяСсылка) = Тип("ДокументСсылка.ОтчетОПереработке") Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОтчетОПереработке.ЗаказПокупателя КАК Заказ
			|ИЗ
			|	Документ.ОтчетОПереработке КАК ОтчетОПереработке
			|ГДЕ
			|	ОтчетОПереработке.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ОтчетОПереработке.ЗаказПокупателя";
	Иначе
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РасходнаяНакладнаяЗапасы.Заказ КАК Заказ
			|ИЗ
			|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
			|ГДЕ
			|	РасходнаяНакладнаяЗапасы.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	РасходнаяНакладнаяЗапасы.Заказ";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", РасходнаяНакладнаяСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Заказ) Тогда
			СтруктураПараметровЗаказа.РеализацияПоЗаказам = Истина;
		Иначе
			СтруктураПараметровЗаказа.РеализацияСверхЗаказа = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПараметровЗаказа;
	
КонецФункции // ЕстьЗаказыВТЧ()

&НаСервере
Процедура Сформировать()
	
	ТабличныйДокумент.Очистить();
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	
	Макет = Отчеты.ПримененныеСкидкиВДокументе.ПолучитьМакет("Макет");
	
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("ПрименятьКОбъекту",                Ложь);
	СтруктураПараметры.Вставить("ТолькоПредварительныйРасчет",      Ложь);
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктВыполненныхРабот") Тогда
		ИмяТЧ = "РаботыИУслуги";
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетОПереработке") Тогда
		ИмяТЧ = "Продукция";
	Иначе
		ИмяТЧ = "Запасы";
	КонецЕсли;
	
	ФиксацияСверху = 1;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РасходнаяНакладная") Тогда
		
		СтруктураПараметровАвтоРасчетаСкидок = ПолучитьСтрукутурПараметровРасчетаАвтоСкидокСервер(ДокументОбъект.Ссылка);
		
		ВыводитьДопСообщение = Истина;
		Если СтруктураПараметровАвтоРасчетаСкидок.РеализацияПоЗаказам И Не СтруктураПараметровАвтоРасчетаСкидок.РеализацияСверхЗаказа Тогда
			ТекстДополнительногоСообщения = "Скидки рассчитаны по данным заказа!";
		ИначеЕсли СтруктураПараметровАвтоРасчетаСкидок.РеализацияПоЗаказам И СтруктураПараметровАвтоРасчетаСкидок.РеализацияСверхЗаказа Тогда
			ТекстДополнительногоСообщения = "Скидки рассчитаны по данным заказа! Строки сверх заказа рассчитаны отдельно!";			
		Иначе
			ВыводитьДопСообщение = Ложь;
		КонецЕсли;
		Если ВыводитьДопСообщение Тогда
			ОбластьДополнительногоСообщения = Макет.ПолучитьОбласть("РеализацияПоЗаказуКлиента");
			ОбластьДополнительногоСообщения.Параметры.ДополнительноеСообщение = ТекстДополнительногоСообщения;
			ТабличныйДокумент.Вывести(ОбластьДополнительногоСообщения);
			ФиксацияСверху = 2;
		Иначе
			ФиксацияСверху = 1;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктВыполненныхРабот") Тогда
		
		СтруктураПараметровАвтоРасчетаСкидок = ПолучитьСтрукутурПараметровРасчетаАвтоСкидокСервер(ДокументОбъект.Ссылка);
		
		ВыводитьДопСообщение = Истина;
		Если СтруктураПараметровАвтоРасчетаСкидок.РеализацияПоЗаказам И Не СтруктураПараметровАвтоРасчетаСкидок.РеализацияСверхЗаказа Тогда
			ТекстДополнительногоСообщения = "Скидки рассчитаны по данным заказа!";
		ИначеЕсли СтруктураПараметровАвтоРасчетаСкидок.РеализацияПоЗаказам И СтруктураПараметровАвтоРасчетаСкидок.РеализацияСверхЗаказа Тогда
			ТекстДополнительногоСообщения = "Скидки рассчитаны по данным заказа! Строки сверх заказа рассчитаны отдельно!";			
		Иначе
			ВыводитьДопСообщение = Ложь;
		КонецЕсли;
		Если ВыводитьДопСообщение Тогда
			ОбластьДополнительногоСообщения = Макет.ПолучитьОбласть("РеализацияПоЗаказуКлиента");
			ОбластьДополнительногоСообщения.Параметры.ДополнительноеСообщение = ТекстДополнительногоСообщения;
			ТабличныйДокумент.Вывести(ОбластьДополнительногоСообщения);
			ФиксацияСверху = 2;
		Иначе
			ФиксацияСверху = 1;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетОПереработке") Тогда
		
		СтруктураПараметровАвтоРасчетаСкидок = ПолучитьСтрукутурПараметровРасчетаАвтоСкидокСервер(ДокументОбъект.Ссылка);
		
		ВыводитьДопСообщение = Истина;
		Если СтруктураПараметровАвтоРасчетаСкидок.РеализацияПоЗаказам И Не СтруктураПараметровАвтоРасчетаСкидок.РеализацияСверхЗаказа Тогда
			ТекстДополнительногоСообщения = "Скидки рассчитаны по данным заказа!";
		ИначеЕсли СтруктураПараметровАвтоРасчетаСкидок.РеализацияПоЗаказам И СтруктураПараметровАвтоРасчетаСкидок.РеализацияСверхЗаказа Тогда
			ТекстДополнительногоСообщения = "Скидки рассчитаны по данным заказа! Строки сверх заказа рассчитаны отдельно!";
		Иначе
			ВыводитьДопСообщение = Ложь;
		КонецЕсли;
		Если ВыводитьДопСообщение Тогда
			ОбластьДополнительногоСообщения = Макет.ПолучитьОбласть("РеализацияПоЗаказуКлиента");
			ОбластьДополнительногоСообщения.Параметры.ДополнительноеСообщение = ТекстДополнительногоСообщения;
			ТабличныйДокумент.Вывести(ОбластьДополнительногоСообщения);
			ФиксацияСверху = 2;
		Иначе
			ФиксацияСверху = 1;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СчетНаОплату") Тогда
		
		ВыводитьДопСообщение = Истина;
		Если ДокументОбъект.ДокументОснование <> Неопределено И НЕ ДокументОбъект.ДокументОснование.Пустая() Тогда
			Если ТипЗнч(ДокументОбъект.ДокументОснование) = Тип("ДокументСсылка.ЗаказПокупателя")
				ИЛИ ТипЗнч(ДокументОбъект.ДокументОснование) = Тип("ДокументСсылка.АктВыполненныхРабот")
				ИЛИ ТипЗнч(ДокументОбъект.ДокументОснование) = Тип("ДокументСсылка.РасходнаяНакладная")
				Тогда
				ТекстДополнительногоСообщения = "Скидки рассчитаны по данным документа-основания!";
			Иначе
				ВыводитьДопСообщение = Ложь;
			КонецЕсли;
		Иначе
			ВыводитьДопСообщение = Ложь;
		КонецЕсли;
		Если ВыводитьДопСообщение Тогда
			ОбластьДополнительногоСообщения = Макет.ПолучитьОбласть("РеализацияПоЗаказуКлиента");
			ОбластьДополнительногоСообщения.Параметры.ДополнительноеСообщение = ТекстДополнительногоСообщения;
			ТабличныйДокумент.Вывести(ОбластьДополнительногоСообщения);
			ФиксацияСверху = 2;
		Иначе
			ФиксацияСверху = 1;
		КонецЕсли;
		
	КонецЕсли;
	
	ИспользованиеХарактеристикНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	
	ПримененныеСкидки = СкидкиНаценкиСерверПереопределяемый.Рассчитать(ДокументОбъект, СтруктураПараметры);
	
	МассивСкидок = Новый Массив;
	РекурсивныйОбходСкидок(ПримененныеСкидки.ДеревоСкидок, МассивСкидок);
	
	ОбластьШапкаНоменклатура              = Макет.ПолучитьОбласть("Шапка|Номенклатура");
	ОбластьШапкаХарактеристика            = Макет.ПолучитьОбласть("Шапка|Характеристика");
	ОбластьШапкаСуммаИВыполнено           = Макет.ПолучитьОбласть("Шапка|СуммаИВыполнено");
	
	ОбластьСтрокаНоменклатура             = Макет.ПолучитьОбласть("Строка|Номенклатура");
	ОбластьСтрокаХарактеристика           = Макет.ПолучитьОбласть("Строка|Характеристика");
	ОбластьСтрокаСуммаИВыполнено          = Макет.ПолучитьОбласть("Строка|СуммаИВыполнено");
	
	ОбластьИтогоНоменклатура              = Макет.ПолучитьОбласть("СтрокаИтого|Номенклатура");
	ОбластьИтогоХарактеристика            = Макет.ПолучитьОбласть("СтрокаИтого|Характеристика");
	ОбластьИтогоСуммаИВыполнено           = Макет.ПолучитьОбласть("СтрокаИтого|СуммаИВыполнено");
	
	ОбластьЛегенда                        = Макет.ПолучитьОбласть("Легенда|Номенклатура");
	
	// Шапка отчета
	ТабличныйДокумент.Вывести(ОбластьШапкаНоменклатура);
	Если ИспользованиеХарактеристикНоменклатуры Тогда
		ТабличныйДокумент.Присоединить(ОбластьШапкаХарактеристика);
	КонецЕсли;
	ТабличныйДокумент.Присоединить(ОбластьШапкаСуммаИВыполнено);
	
	ТабличныйДокумент.ФиксацияСверху = ФиксацияСверху;
	
	СоответствиеВыполненияУсловий = Новый Соответствие;
	
	МассивИменТЧ = Новый Массив;
	ВыводитьИмяТЧ = Ложь;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЗаказПокупателя") И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд 
		И ДокументОбъект.Работы.Количество() > 0 Тогда
		МассивИменТЧ.Добавить("Работы");
		ВыводитьИмяТЧ = Истина;
	КонецЕсли;
	МассивИменТЧ.Добавить(ИмяТЧ);
	
	Для Каждого ТекущееИмяТЧ Из МассивИменТЧ Цикл
		
		Если ВыводитьИмяТЧ И ДокументОбъект[ТекущееИмяТЧ].Количество() > 0 Тогда
			Если ИспользованиеХарактеристикНоменклатуры Тогда
				ОбластьИмяТЧ = Макет.ПолучитьОбласть("ИмяТЧХарактеристика");
			Иначе
				ОбластьИмяТЧ = Макет.ПолучитьОбласть("ИмяТЧ");
			КонецЕсли;
			ОбластьИмяТЧ.Параметры.ИмяТЧ = "Для табличной части """+ТекущееИмяТЧ+"""";
			ТабличныйДокумент.Вывести(ОбластьИмяТЧ);
		КонецЕсли;
		
		Для каждого СтрокаТовары Из ДокументОбъект[ТекущееИмяТЧ] Цикл
			
			ОбластьСтрокаНоменклатура.Параметры.Номенклатура = СтрокаТовары.Номенклатура;
			ОбластьСтрокаНоменклатура.Параметры.НомерСтроки  = СтрокаТовары.НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьСтрокаНоменклатура);
			Если ИспользованиеХарактеристикНоменклатуры Тогда
				ОбластьСтрокаХарактеристика.Параметры.Характеристика = СтрокаТовары.Характеристика;
				ТабличныйДокумент.Присоединить(ОбластьСтрокаХарактеристика);
			КонецЕсли;
			ОбластьСтрокаСуммаИВыполнено.Параметры.Сумма = СтрокаТовары.СуммаАвтоматическойСкидки;
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСуммаИВыполнено);
			
			ТабличныйДокумент.НачатьГруппуСтрок("Номенклатура", Истина);
			Для каждого СтрокаДерева Из МассивСкидок Цикл
				
				Если ТекущееИмяТЧ = "Работы" Тогда
					ТекРеквизитКлючСвязи = "КлючСвязиДляСкидокНаценок";
				Иначе
					ТекРеквизитКлючСвязи = "КлючСвязи";
				КонецЕсли;
				
				// Условия скидки
				ВсеУсловияВыполнены = Истина;
				Для каждого СтрокаУсловие Из СтрокаДерева.ПараметрыУсловий.ТаблицаУсловий Цикл
					
					Если СтрокаУсловие.ОбластьОграничения = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВСтроке Тогда
						НайденныеСтрокиТаблицыПроверкиУсловий = СтрокаДерева.ПараметрыУсловий.УсловияПоСтроке.ТаблицаПроверкиУсловий.Найти(СтрокаТовары[ТекРеквизитКлючСвязи], "КлючСвязи");
						Если НайденныеСтрокиТаблицыПроверкиУсловий <> Неопределено Тогда
							НазваниеКолонки = СтрокаДерева.ПараметрыУсловий.УсловияПоСтроке.СоответствиеУсловийКолонкамТаблицыПроверкиУсловий.Получить(СтрокаУсловие.УсловиеПредоставления);
							Если НазваниеКолонки <> Неопределено Тогда
								УсловиеВыполнено = НайденныеСтрокиТаблицыПроверкиУсловий[НазваниеКолонки];
							КонецЕсли;
						Иначе
							УсловиеВыполнено = Ложь;
						КонецЕсли;
					Иначе
						УсловиеВыполнено = СтрокаУсловие.Выполнено;
					КонецЕсли;
					СоответствиеВыполненияУсловий.Вставить(СтрокаУсловие.УсловиеПредоставления, УсловиеВыполнено);
					
					Если Не УсловиеВыполнено Тогда
						ВсеУсловияВыполнены = Ложь;
					КонецЕсли;
					
				КонецЦикла;
				
				// Сумма скидки
				Если СтрокаДерева.ТаблицаДанных.Количество() = 0 Тогда
					СуммаСкидки = 0;
				Иначе
					НайденнаяСтрока = СтрокаДерева.ТаблицаДанных.Найти(СтрокаТовары[ТекРеквизитКлючСвязи], "КлючСвязи");
					Если НайденнаяСтрока <> Неопределено Тогда
						СуммаСкидки = НайденнаяСтрока.Сумма;
					Иначе
						СуммаСкидки = 0;
					КонецЕсли;
				КонецЕсли;
				
				Если ВсеУсловияВыполнены Тогда
					Если ДокументОбъект.СкидкиНаценки.НайтиСтроки(Новый Структура("КлючСвязи, СкидкаНаценка", СтрокаТовары[ТекРеквизитКлючСвязи], СтрокаДерева.СкидкаНаценка)).Количество() = 0 Тогда
						// Не действует по совместному применению.
						ЦветТекста = "Серый";
						Зачеркивание = "Зачеркивание";
					Иначе
						// Есть в документе. Условия выполнены.
						ЦветТекста = "";
						Зачеркивание = "";
					КонецЕсли;
				Иначе
					// Не выполнелись условия.
					ЦветТекста = "Красный";
					Зачеркивание = "Зачеркивание";
				КонецЕсли;
				
				Если ИспользованиеХарактеристикНоменклатуры Тогда
					ОбластьСкидка                         = Макет.ПолучитьОбласть("СкидкаЕстьХарактеристики"+Зачеркивание+ЦветТекста+"|НоменклатураИХарактеристика");
					ОбластьСкидкаСуммаИВыполнено          = Макет.ПолучитьОбласть("СкидкаЕстьХарактеристики"+Зачеркивание+ЦветТекста+"|СуммаИВыполнено");
				Иначе
					ОбластьСкидка                         = Макет.ПолучитьОбласть("Скидка"+Зачеркивание+ЦветТекста+"|Номенклатура");
					ОбластьСкидкаСуммаИВыполнено          = Макет.ПолучитьОбласть("Скидка"+Зачеркивание+ЦветТекста+"|СуммаИВыполнено");
				КонецЕсли;
				
				ОбластьСкидка.Параметры.СкидкаНаценка = СтрокаДерева.СкидкаНаценка;
				ТабличныйДокумент.Вывести(ОбластьСкидка);
				
				ОбластьСкидкаСуммаИВыполнено.Параметры.Сумма = СуммаСкидки;
				ТабличныйДокумент.Присоединить(ОбластьСкидкаСуммаИВыполнено);
				
				ТабличныйДокумент.НачатьГруппуСтрок("Скидка", Истина);
				
				// Условия скидки, продолжение
				Для каждого СтрокаУсловие Из СтрокаДерева.ПараметрыУсловий.ТаблицаУсловий Цикл
					
					Если СоответствиеВыполненияУсловий.Получить(СтрокаУсловие.УсловиеПредоставления) Тогда
						// Условие выполнено.
						Зачеркивание = "";
					Иначе
						// Условие не выполнено.
						Зачеркивание = "Зачеркивание";
					КонецЕсли;
					
					Если ИспользованиеХарактеристикНоменклатуры Тогда
						ОбластьУсловие                        = Макет.ПолучитьОбласть("УсловиеЕстьХарактеристики"+Зачеркивание+ЦветТекста+"|НоменклатураИХарактеристика");
						ОбластьУсловиеСуммаИВыполнено         = Макет.ПолучитьОбласть("УсловиеЕстьХарактеристики"+Зачеркивание+ЦветТекста+"|СуммаИВыполнено");
					Иначе
						ОбластьУсловие                        = Макет.ПолучитьОбласть("Условие"+Зачеркивание+ЦветТекста+"|Номенклатура");
						ОбластьУсловиеСуммаИВыполнено         = Макет.ПолучитьОбласть("Условие"+Зачеркивание+ЦветТекста+"|СуммаИВыполнено");
					КонецЕсли;
					
					ОбластьУсловие.Параметры.Условие = СтрокаУсловие.УсловиеПредоставления;
					ТабличныйДокумент.Вывести(ОбластьУсловие);
					
					ТабличныйДокумент.Присоединить(ОбластьУсловиеСуммаИВыполнено);
					
				КонецЦикла;
				
				ТабличныйДокумент.ЗакончитьГруппуСтрок(); // Скидка.
				
			КонецЦикла;
			
			ТабличныйДокумент.ЗакончитьГруппуСтрок(); // Номенклатура.
			
		КонецЦикла;
	КонецЦикла;
	
	// Итого
	ТабличныйДокумент.Вывести(ОбластьИтогоНоменклатура);
	Если ИспользованиеХарактеристикНоменклатуры Тогда
		ТабличныйДокумент.Присоединить(ОбластьИтогоХарактеристика);
	КонецЕсли;
	ОбластьИтогоСуммаИВыполнено.Параметры.Сумма = ДокументОбъект[ИмяТЧ].Итог("СуммаАвтоматическойСкидки");
	ТабличныйДокумент.Присоединить(ОбластьИтогоСуммаИВыполнено);
	
	ТабличныйДокумент.Вывести(ОбластьЛегенда);
	
КонецПроцедуры

#КонецОбласти
