
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("АдресСхемы") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("ДанныеРасшифровки") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("Расшифровка") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(Параметры.ДанныеРасшифровки);
	
	ДанныеРасшифровки.Настройки.ДополнительныеСвойства.Вставить("АдресСхемы", Параметры.АдресСхемы);
	
	ПараметрыРасшифровки = Новый Структура;
	
	Для Каждого ТекЭлемент Из ДанныеРасшифровки.Элементы.Получить(Параметры.Расшифровка).ПолучитьПоля() Цикл
		ПараметрыРасшифровки.Вставить(ТекЭлемент.Поле, ТекЭлемент.Значение);
	КонецЦикла;
	
	Если ПараметрыРасшифровки.Свойство("ЭтоПотери") Тогда
		ДокументРезультат = РезультатОбработкиРасшифровкиНаСервере(ДанныеРасшифровки.Настройки, ПараметрыРасшифровки);
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Заголовок = ПредставлениеРасшифровки(ПараметрыРасшифровки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция РезультатОбработкиРасшифровкиНаСервере(НастройкиКД, ПараметрыРасшифровки)
	
	ЗапросРасшифровка = Новый Запрос;
	ЗапросРасшифровка.МенеджерВременныхТаблиц = Отчеты.ВоронкаПродаж.ВременныеТаблицыВоронкиПродаж(НастройкиКД);
	
	Если ПараметрыРасшифровки.ЭтоПотери Тогда
		ЗапросРасшифровка.Текст = Отчеты.ВоронкаПродаж.ТекстЗапросаСУстановленнымПолемГруппировки(
		"ВЫБРАТЬ
		|	ИсторияСостоянийЗаказовСрезПоследних.Заказ КАК Заказ,
		|	ИсторияСостоянийЗаказовСрезПоследних.Заказ.Контрагент КАК Контрагент,
		|	ИсторияСостоянийЗаказовСрезПоследних.Заказ.Ответственный КАК Ответственный,
		|	ИсторияСостоянийЗаказовСрезПоследних.Заказ.ПричинаОтмены КАК ПричинаОтмены,
		|	ИсторияСостоянийЗаказовСрезПоследних.Заказ.СуммаДокумента КАК СуммаДокумента,
		|	1 КАК Потеря
		|ИЗ
		|	РегистрСведений.ИсторияСостоянийЗаказов.СрезПоследних(
		|			,
		|			Заказ.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Отменен)
		|				И Состояние <> ЗНАЧЕНИЕ(Справочник.СостоянияЗаказовПокупателей.Завершен)
		|				И Состояние <> ЗНАЧЕНИЕ(Справочник.СостоянияЗаказНарядов.Завершен)
		|				И Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.Заказ
		|					ИЗ
		|						ВТ_Заказы)) КАК ИсторияСостоянийЗаказовСрезПоследних
		|ГДЕ
		|	&ПолеГруппировки = &ЗначениеПоляГруппировки
		|	И ИсторияСостоянийЗаказовСрезПоследних.Заказ.ВидЗаказа = &ВидЗаказа
		|	И ИсторияСостоянийЗаказовСрезПоследних.Состояние = &Состояние
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПричинаОтмены,
		|	ИсторияСостоянийЗаказовСрезПоследних.Период",
		"ИсторияСостоянийЗаказовСрезПоследних",
		НастройкиКД);
	Иначе
		ЗапросРасшифровка.Текст =
		"ВЫБРАТЬ
		|	ВТ_ДанныеВоронкиПродаж.Заказ КАК Заказ,
		|	ВТ_ДанныеВоронкиПродаж.Заказ.СостояниеЗаказа КАК ТекущееСостояние,
		|	ВТ_ДанныеВоронкиПродаж.Заказ.ВариантЗавершения КАК ВариантЗавершения,
		|	ВТ_ДанныеВоронкиПродаж.Заказ.Контрагент КАК Контрагент,
		|	ВТ_ДанныеВоронкиПродаж.Заказ.Ответственный КАК Ответственный,
		|	ВТ_ДанныеВоронкиПродаж.СуммаДокумента КАК СуммаДокумента
		|ИЗ
		|	ВТ_ДанныеВоронкиПродаж КАК ВТ_ДанныеВоронкиПродаж
		|ГДЕ
		|	ВТ_ДанныеВоронкиПродаж.ПолеГруппировки = &ЗначениеПоляГруппировки
		|	И ВТ_ДанныеВоронкиПродаж.ВидЗаказа = &ВидЗаказа
		|	И ВТ_ДанныеВоронкиПродаж.Состояние = &Состояние
		|	И ВТ_ДанныеВоронкиПродаж.УчитыватьВВоронке = 1
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ДанныеВоронкиПродаж.Заказ.Дата";
	КонецЕсли;
	
	ЗапросРасшифровка.УстановитьПараметр("ЗначениеПоляГруппировки", ПараметрыРасшифровки.ПолеГруппировки);
	ЗапросРасшифровка.УстановитьПараметр("ВидЗаказа", ПараметрыРасшифровки.ВидЗаказа);
	ЗапросРасшифровка.УстановитьПараметр("Состояние", ПараметрыРасшифровки.Состояние);
	
	ТабРезультатРасшифровки = Новый ТабличныйДокумент;
	ТабРезультатРасшифровки.ТолькоПросмотр = Истина;
	ТабРезультатРасшифровки.ОтображатьСетку = Ложь;
	ТабРезультатРасшифровки.ОтображатьЗаголовки = Ложь;
	
	Если ПараметрыРасшифровки.ЭтоПотери Тогда
		МакетРасшифровки = Отчеты.ВоронкаПродаж.ПолучитьМакет("ТД_РасшифровкаПотери");
	Иначе
		МакетРасшифровки = Отчеты.ВоронкаПродаж.ПолучитьМакет("ТД_Расшифровка");
	КонецЕсли;
	ОбластьШапка = МакетРасшифровки.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ПредставлениеРасшифровки = ПредставлениеРасшифровки(ПараметрыРасшифровки);
	ТабРезультатРасшифровки.Вывести(ОбластьШапка);
	
	РезультатЗапроса = ЗапросРасшифровка.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ТабРезультатРасшифровки.Вывести(МакетРасшифровки.ПолучитьОбласть("СтрокаОтсутствуютДанные"));
		Возврат ТабРезультатРасшифровки;
	КонецЕсли;
	
	ЦветаГрадиента = НастройкиКД.ДополнительныеСвойства.ЦветаГрадиента;
	
	НомерСтроки = 0;
	СуммаИтог = 0;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока = ПолучитьОбластьРасшифровки(МакетРасшифровки, Выборка, ПараметрыРасшифровки.ЭтоПотери);
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрока.Параметры.Заказ = Выборка.Заказ;
		ОбластьСтрока.Параметры.Контрагент = Выборка.Контрагент;
		ОбластьСтрока.Параметры.Ответственный = Выборка.Ответственный;
		ОбластьСтрока.Параметры.СуммаДокумента = Выборка.СуммаДокумента;
		Если ПараметрыРасшифровки.ЭтоПотери Тогда
			ОбластьСтрока.Параметры.ПричинаОтмены = Выборка.ПричинаОтмены;
			Если ТипЗнч(ЦветаГрадиента[Выборка.ПричинаОтмены]) = Тип("Цвет") Тогда
				ОбластьСтрока.Область("R1C3:R1C3").ЦветФона = ЦветаГрадиента[Выборка.ПричинаОтмены];
			КонецЕсли;
		Иначе
			ОбластьСтрока.Параметры.ТекущееСостояние = Выборка.ТекущееСостояние;
		КонецЕсли;
		СуммаИтог = СуммаИтог + Выборка.СуммаДокумента;
		ТабРезультатРасшифровки.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьПодвал = МакетРасшифровки.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.СуммаИтог = СуммаИтог;
	ТабРезультатРасшифровки.Вывести(ОбластьПодвал);
	
	Возврат ТабРезультатРасшифровки;
	
КонецФункции

&НаСервере
Функция ПолучитьОбластьРасшифровки(МакетРасшифровки, Выборка, Потери)
	
	Если Потери Тогда
		Возврат МакетРасшифровки.ПолучитьОбласть("Строка");
	КонецЕсли;
	
	Если Выборка.ВариантЗавершения = Перечисления.ВариантыЗавершенияЗаказа.Отменен Тогда
		Возврат МакетРасшифровки.ПолучитьОбласть("СтрокаОтмена");
	КонецЕсли;
	
	Возврат МакетРасшифровки.ПолучитьОбласть("Строка");
	
КонецФункции

&НаСервере
Функция ПредставлениеРасшифровки(ПараметрыРасшифровки)
	
	Возврат СтрШаблон(НСтр("ru = '%1: %2, уровень воронки: %3'"),
	?(ПараметрыРасшифровки.ЭтоПотери, НСтр("ru = 'Потери'"), НСтр("ru = 'Заказы'")),
	ПараметрыРасшифровки.ПолеГруппировки,
	ПараметрыРасшифровки.Состояние);
	
КонецФункции

#КонецОбласти