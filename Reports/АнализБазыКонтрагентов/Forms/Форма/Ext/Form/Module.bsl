
&НаКлиенте
Перем ДанныеВыбораПериодаИзВыпадающегоСписка;

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(ОтборПериодЗначение) Тогда
		ОтборПериодЗначение.Вариант = ВариантСтандартногоПериода.Месяц;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрПериодичность) Тогда
		ПараметрПериодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя");
	КонецЕсли;
	
	ОтборПериодВид = ОтчетыКлиентСервер.ПолучитьВидСтандартногоПериода(ОтборПериодЗначение, Элементы.ОтборПериодВид.СписокВыбора);
	ОтборПериодПредставление = ОтчетыУНФКлиентСервер.ПредставлениеСтандартногоПериода(ОтборПериодЗначение, ОтборПериодВид);
	Если ОтборПериодВид = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.ПроизвольныйПериод") Тогда
		Элементы.СтраницыПериода.ТекущаяСтраница = Элементы.СтраницаПроизвольныйПериод;
	КонецЕсли;
	
	Если Не ОтборПокупатели И Не ОтборПоставщики И Не ОтборПрочиеОтношения Тогда
		ОтборПокупатели = Истина;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("СФормироватьПриОткрытии", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовФормы

&НаКлиенте
Процедура ОтборПериодВидПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ОтборПериодВид) Тогда
		ВыбранПроизвольный = ОтборПериодВид = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.ПроизвольныйПериод");
	Иначе
		ОтборПериодВид = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.ПроизвольныйПериод");
		ВыбранПроизвольный = Истина;
	КонецЕсли;
	
	Если ВыбранПроизвольный Тогда
		
		// Переключение страницы.
		Элементы.СтраницыПериода.ТекущаяСтраница = Элементы.СтраницаПроизвольныйПериод;
		
		ОтборПериодЗначение.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
		
	Иначе
		
		// Переключение страницы.
		Элементы.СтраницыПериода.ТекущаяСтраница = Элементы.СтраницаСтандартныйПериод;
		
		// Приведение значения периода в соответствие с выбранным видом.
		ДатаСеанса = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
		НачалоПериода = НачалоДня(ОтборПериодЗначение.ДатаНачала);
		КонецПериода = КонецДня(ОтборПериодЗначение.ДатаОкончания);
		Если Не ЗначениеЗаполнено(НачалоПериода)
			Или (ДатаСеанса >= НачалоПериода И ДатаСеанса <= КонецПериода) Тогда
			НачалоПериода = ДатаСеанса;
		КонецЕсли;
		НачалоПериода = ОтчетыКлиентСервер.НачалоПериодаОтчета(ОтборПериодВид, НачалоПериода);
		КонецПериода  = ОтчетыКлиентСервер.КонецПериодаОтчета(ОтборПериодВид, НачалоПериода);
		
		ОтборПериодЗначение.ДатаНачала    = НачалоПериода;
		ОтборПериодЗначение.ДатаОкончания = КонецПериода;
		
	КонецЕсли;
	
	ОтборПериодПредставление = ОтчетыУНФКлиентСервер.ПредставлениеСтандартногоПериода(ОтборПериодЗначение, ОтборПериодВид);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПериодПредставлениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НачалоПериода = ОтборПериодЗначение.ДатаНачала;
	Если НачалоПериода = '00010101' Тогда
		НачалоПериода = ОтчетыКлиентСервер.НачалоПериодаОтчета(ОтборПериодВид, ОбщегоНазначенияКлиент.ДатаСеанса());
	КонецЕсли;
	
	// Параметры для чтения из обработчиков:
	ПараметрыВыбора = Новый Структура;
	// Для выбора значения:
	ПараметрыВыбора.Вставить("Значение",               ОтборПериодЗначение);
	ПараметрыВыбора.Вставить("Элемент",                Элемент);
	// Для загрузки значения:
	ПараметрыВыбора.Вставить("ВидПериода",             ОтборПериодВид);
	
	ВыборПериодаИзВыпадающегоСписка(-1, ПараметрыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПериодДатаНачалаПриИзменении(Элемент)
	
	Если ОтборПериодЗначение.ДатаНачала <> '00010101' Тогда
		ОтборПериодЗначение.ДатаНачала = НачалоДня(ОтборПериодЗначение.ДатаНачала);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПериодДатаОкончанияПриИзменении(Элемент)
	
	Если ОтборПериодЗначение.ДатаОкончания <> '00010101' Тогда
		ОтборПериодЗначение.ДатаОкончания = КонецДня(ОтборПериодЗначение.ДатаОкончания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПериодПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МенеджерыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Обработчик = Новый ОписаниеОповещения("МенеджерыЗавершениеВыбора", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючУникальности",							ЭтотОбъект.КлючНазначенияИспользования);
	ПараметрыФормы.Вставить("Отмеченные",								ОтборМенеджеры);
	ПараметрыФормы.Вставить("ЗначенияДляВыбора",						ОтборМенеджерыВсе);
	ПараметрыФормы.Вставить("ВыводитьФлажок",							Истина);
	ПараметрыФормы.Вставить("ОграничиватьВыборУказаннымиЗначениями",	Ложь);
	ПараметрыФормы.Вставить("ОписаниеТипов",							Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ПараметрыФормы.Вставить("Представление",							НСтр("ru = 'менеджеры'"));
	
	// Использование формы БСП 2.2.5
	ОткрытьФорму("ОбщаяФорма.ВводЗначенийСпискомСФлажками", ПараметрыФормы, ЭтотОбъект, , , , Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура МенеджерыОчистка(Элемент, СтандартнаяОбработка)
	
	ОтборМенеджерыВсе.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрПериодичностьПриИзменении(Элемент)
	
	ОбновитьДиаграммуНовыеПоПериодам();
	
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаНовыеОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВРег(Расшифровка) = ВРег("Новые") Тогда
		ПризнакРасшифровки = НСтр("ru = 'Новые'");
		ЗаголовокФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Анализ базы контрагентов (расшифровка %1)'"),
			НСтр("ru = 'новых'"));
	ИначеЕсли ВРег(Расшифровка) = ВРег("Существующие") Тогда
		ПризнакРасшифровки = НСтр("ru = 'Существующие'");
		ЗаголовокФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Анализ базы контрагентов (расшифровка %1)'"),
			НСтр("ru = 'существующих'"));
	КонецЕсли;
	
	ТекстОтборов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 контрагенты за период: с %2 по %3%4%5%6'"),
		ПризнакРасшифровки,
		Формат(ОтборПериодЗначение.ДатаНачала, "ДФ=dd.MM.yyyy"),
		Формат(ОтборПериодЗначение.ДатаОкончания, "ДФ=dd.MM.yyyy"),
		?(ЗначениеЗаполнено(ОтборТег), ", с тегом: " + ОтборТег, ""),
		?(ЗначениеЗаполнено(ОтборСегмент), ", в сегменте: " + ОтборСегмент, ""),
		?(ОтборМенеджеры.Количество() > 0, ", по менеджерам: " + Строка(ОтборМенеджеры), ""));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗаголовокФормы", ЗаголовокФормы);
	ПараметрыФормы.Вставить("ПредставлениеОтборов", Новый ФорматированнаяСтрока(ТекстОтборов, Новый Шрифт(,,Истина)));
	ПараметрыФормы.Вставить("АдресТабличногоДокумента", СформироватьРасшифровкуНовых(Расшифровка));
	
	ОткрытьФорму("ОбщаяФорма.ДополнительнаяРасшифровка", ПараметрыФормы, ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаНовыеПоПериодамОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВРег(ПараметрПериодичность) = ВРег("День") Тогда
		ПредставлениеПериода = Формат(Расшифровка, "ДФ=dd.MM.yyyy");
	ИначеЕсли ВРег(ПараметрПериодичность) = ВРег("Неделя") Тогда
		ПредставлениеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'неделю с %1 по %2'"),
			Формат(Расшифровка, "ДФ=dd.MM.yyyy"),
			Формат(КонецНедели(Расшифровка), "ДФ=dd.MM.yyyy"));
	ИначеЕсли ВРег(ПараметрПериодичность) = ВРег("Месяц") Тогда
		ПредставлениеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'месяц с %1 по %2'"),
			Формат(Расшифровка, "ДФ=dd.MM.yyyy"),
			Формат(КонецМесяца(Расшифровка), "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	
	ТекстОтборов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Новые контрагенты за %1 %2%3%4'"),
		ПредставлениеПериода,
		?(ЗначениеЗаполнено(ОтборТег), ", с тегом: " + ОтборТег, ""),
		?(ЗначениеЗаполнено(ОтборСегмент), ", в сегменте: " + ОтборСегмент, ""),
		?(ОтборМенеджеры.Количество() > 0, ", по менеджерам: " + Строка(ОтборМенеджеры), ""));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Анализ базы контрагентов (расшифровка новых за период)'"));
	ПараметрыФормы.Вставить("ПредставлениеОтборов", Новый ФорматированнаяСтрока(ТекстОтборов, Новый Шрифт(,,Истина)));
	ПараметрыФормы.Вставить("АдресТабличногоДокумента", СформироватьРасшифровкуНовыхЗаПериод(Расшифровка));
	
	ОткрытьФорму("ОбщаяФорма.ДополнительнаяРасшифровка", ПараметрыФормы, ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаПоМенеджерамОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекстОтборов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Контрагенты менеджера: %1'"),
		?(ТипЗнч(Расшифровка) = Тип("Массив"), "<сводно>", Расшифровка),
		?(ЗначениеЗаполнено(ОтборТег), ", с тегом: " + ОтборТег, ""),
		?(ЗначениеЗаполнено(ОтборСегмент), ", в сегменте: " + ОтборСегмент, ""));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Анализ базы контрагентов (расшифровка по менеджерам)'"));
	ПараметрыФормы.Вставить("ПредставлениеОтборов", Новый ФорматированнаяСтрока(ТекстОтборов, Новый Шрифт(,,Истина)));
	ПараметрыФормы.Вставить("АдресТабличногоДокумента", СформироватьРасшифровкуПоМенеджерам(Расшифровка));
	
	ОткрытьФорму("ОбщаяФорма.ДополнительнаяРасшифровка", ПараметрыФормы, ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура МенеджерыЛегендаДиаграммыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "ПоказатьОстальные" Тогда
		Если ПустаяСтрока(МенеджерыОстальныеОтображение) Тогда
			МенеджерыОстальныеОтображение = МенеджерыОстальные;
		Иначе
			МенеджерыОстальныеОтображение = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьОтчет();
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
Процедура СформироватьОтчет()
	
	ОбновитьДиаграммуНовые();
	ОбновитьДиаграммуНовыеПоПериодам();
	ОбновитьДиаграммуПоМенеджерам();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДиаграммуНовые()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(Контрагенты.Ссылка) КАК КоличествоВсего,
		|	СУММА(ВЫБОР
		|			КОГДА Контрагенты.ДатаСоздания МЕЖДУ &НовыеНачало И &НовыеКонец
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоНовых
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ПометкаУдаления = ЛОЖЬ
		|	И Контрагенты.ЭтоГруппа = ЛОЖЬ";
		
	Если ЗначениеЗаполнено(ОтборТег) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И Контрагенты.Теги.Тег = &ОтборТег";
		Запрос.УстановитьПараметр("ОтборТег", ОтборТег);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборСегмент) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И Контрагенты.Ссылка В (&СоставСегмента)";
		Запрос.УстановитьПараметр("СоставСегмента", Справочники.Сегменты.ПолучитьСоставСегмента(ОтборСегмент));
	КонецЕсли;
	
	Если ОтборМенеджеры.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И Контрагенты.Ответственный В (&ОтборМенеджеры)";
		Запрос.УстановитьПараметр("ОтборМенеджеры", ОтборМенеджеры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборИсточникПривлеченияПокупателей) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И Контрагенты.ИсточникПривлеченияПокупателя = &ОтборИсточник";
		Запрос.УстановитьПараметр("ОтборИсточник", ОтборИсточникПривлеченияПокупателей);
	КонецЕсли;
	
	ТекстОтбораПоТипуОтношений = ТекстОтбораПоТипуОтношений();
	Если Не ПустаяСтрока(ТекстОтбораПоТипуОтношений) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И (" + ТекстОтбораПоТипуОтношений + ")";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НовыеНачало", ОтборПериодЗначение.ДатаНачала);
	Запрос.УстановитьПараметр("НовыеКонец", ОтборПериодЗначение.ДатаОкончания);
	
	ВыборкаОбщийИтог = Запрос.Выполнить().Выбрать();
	Если ВыборкаОбщийИтог.Следующий() Тогда
		Новых = ?(ВыборкаОбщийИтог.КоличествоНовых = Null, 0, ВыборкаОбщийИтог.КоличествоНовых);
		Существующих = ?(ВыборкаОбщийИтог.КоличествоВсего = Null, 0, ВыборкаОбщийИтог.КоличествоВсего - Новых);
	Иначе
		Новых = 0;
		Существующих = 0;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборПериодЗначение.ДатаНачала) И ЗначениеЗаполнено(ОтборПериодЗначение.ДатаОкончания) Тогда
		Элементы.ЗаголовокНовые.Заголовок = НСтр("ru = 'Новых за: '") + Формат(ОтборПериодЗначение.ДатаНачала, "ДФ=dd.MM.yy") + " - " + Формат(ОтборПериодЗначение.ДатаОкончания, "ДФ=dd.MM.yy");
	Иначе
		Элементы.ЗаголовокНовые.Заголовок = НСтр("ru = 'Новых за: (период не указан)'");
	КонецЕсли;
	
	ДиаграммаНовые.Обновление = Ложь;
	ДиаграммаНовые.Очистить();
	ДиаграммаНовые.АвтоТранспонирование = Ложь;
	ДиаграммаНовые.МаксимумСерий = МаксимумСерий.НеЗадано;
	ДиаграммаНовые.ВидПодписей = ВидПодписейКДиаграмме.СерияЗначение;
	ДиаграммаНовые.РазделительПодписей = ": ";
	ДиаграммаНовые.ШрифтПодписей = Новый Шрифт(ШрифтыСтиля.МелкийШрифтТекста, , , Истина);
	ДиаграммаНовые.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки, -1);
	
	Точка = ДиаграммаНовые.Точки.Добавить("Количество");
	Точка.Текст = "Количество";
	Точка.ПриоритетЦвета = Ложь;
	
	СерияНовые = ДиаграммаНовые.Серии.Добавить("Новые");
	Подсказка = НСтр("ru = 'Создано новых контрагентов за период: '") + Новых;
	ДиаграммаНовые.УстановитьЗначение(Точка, СерияНовые, Новых, "Новые", Подсказка);
	
	СерияСуществующие = ДиаграммаНовые.Серии.Добавить("Существующие");
	Подсказка = НСтр("ru = 'Существующих контрагентов: '") + Существующих;
	ДиаграммаНовые.УстановитьЗначение(Точка, СерияСуществующие, Существующих, "Существующие", Подсказка);
	
	ДиаграммаНовые.АвтоТранспонирование = Истина;
	ДиаграммаНовые.Обновление = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДиаграммуНовыеПоПериодам()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(Контрагенты.ДатаСоздания, НЕДЕЛЯ) КАК ДатаСоздания,
		|	Контрагенты.Ссылка КАК Новый
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ПометкаУдаления = ЛОЖЬ
		|	И Контрагенты.ЭтоГруппа = ЛОЖЬ
		|	И Контрагенты.ДатаСоздания МЕЖДУ &НовыеНачало И &НовыеКонец
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСоздания
		|ИТОГИ
		|	КОЛИЧЕСТВО(Новый)
		|ПО
		|	ДатаСоздания ПЕРИОДАМИ(НЕДЕЛЯ, &НовыеНачало, &НовыеКонец)";
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "НЕДЕЛЯ", ВРег(Строка(ПараметрПериодичность)));
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	ОтборЗапроса = СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Отбор;
	
	Если ЗначениеЗаполнено(ОтборТег) Тогда
		ОтборЗапроса.Добавить("Контрагенты.Теги.Тег = &ОтборТег");
		Запрос.УстановитьПараметр("ОтборТег", ОтборТег);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборСегмент) Тогда
		ОтборЗапроса.Добавить("Контрагенты.Ссылка В (&СоставСегмента)");
		Запрос.УстановитьПараметр("СоставСегмента", Справочники.Сегменты.ПолучитьСоставСегмента(ОтборСегмент));
	КонецЕсли;
	
	Если ОтборМенеджеры.Количество() > 0 Тогда
		ОтборЗапроса.Добавить("Контрагенты.Ответственный В (&ОтборМенеджеры)");
		Запрос.УстановитьПараметр("ОтборМенеджеры", ОтборМенеджеры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборИсточникПривлеченияПокупателей) Тогда
		ОтборЗапроса.Добавить("Контрагенты.ИсточникПривлеченияПокупателя = &ОтборИсточник");
		Запрос.УстановитьПараметр("ОтборИсточник", ОтборИсточникПривлеченияПокупателей);
	КонецЕсли;
	
	ТекстОтбораПоТипуОтношений = ТекстОтбораПоТипуОтношений();
	Если Не ПустаяСтрока(ТекстОтбораПоТипуОтношений) Тогда
		ОтборЗапроса.Добавить(ТекстОтбораПоТипуОтношений);
	КонецЕсли;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Запрос.УстановитьПараметр("НовыеНачало", ОтборПериодЗначение.ДатаНачала);
	Запрос.УстановитьПараметр("НовыеКонец", ОтборПериодЗначение.ДатаОкончания);
	
	ВыборкаДатаСоздания = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаСоздания", "Все");
	
	ДиаграммаНовыеПоПериодам.Обновление = Ложь;
	ДиаграммаНовыеПоПериодам.Очистить();
	ДиаграммаНовыеПоПериодам.АвтоТранспонирование = Ложь;
	ДиаграммаНовыеПоПериодам.МаксимумСерий = МаксимумСерий.НеЗадано;
	ДиаграммаНовыеПоПериодам.ВидПодписей = ВидПодписейКДиаграмме.Значение;
	ДиаграммаНовыеПоПериодам.ШрифтПодписей = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , Истина);
	ДиаграммаНовыеПоПериодам.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки, -1);
	ДиаграммаНовыеПоПериодам.ФорматЗначенийВПодписях = "ЧДЦ=; ЧН=' '";
	ДиаграммаНовыеПоПериодам.АвтоУстановкаТекстаТочек = Ложь;
	ДиаграммаНовыеПоПериодам.ОбластьПостроения.ОтображатьПодписиШкалыТочек = Истина;
	ДиаграммаНовыеПоПериодам.ОбластьПостроения.Шрифт = Новый Шрифт(ШрифтыСтиля.МелкийШрифтТекста, , 7);
	
	Серия = ДиаграммаНовыеПоПериодам.Серии.Добавить("Новые");
	Серия.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, 2);
	Серия.Маркер = ТипМаркераДиаграммы.Круг;
	Серия.ПриоритетЦвета = Истина;
	
	Пока ВыборкаДатаСоздания.Следующий() Цикл
		Текст = Формат(ВыборкаДатаСоздания.ДатаСоздания, "ДФ=dd.MM.yy");
		Точка = ДиаграммаНовыеПоПериодам.Точки.Добавить(Текст);
		Подсказка = НСтр("ru = 'Создано '") + ВыборкаДатаСоздания.Новый + НСтр("ru = ' контрагентов '") + Текст;
		ДиаграммаНовыеПоПериодам.УстановитьЗначение(Точка, Серия, ?(ВыборкаДатаСоздания.Новый = Null, 0, ВыборкаДатаСоздания.Новый), ВыборкаДатаСоздания.ДатаСоздания, Подсказка);
	КонецЦикла;
	
	ДиаграммаНовыеПоПериодам.АвтоТранспонирование = Истина;
	ДиаграммаНовыеПоПериодам.Обновление = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДиаграммуПоМенеджерам()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(Контрагенты.Ссылка) КАК Контрагенты,
		|	Контрагенты.Ответственный КАК Ответственный,
		|	Контрагенты.Ответственный.Представление КАК ОтветственныйПредставление
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ПометкаУдаления = ЛОЖЬ
		|	И Контрагенты.ЭтоГруппа = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	Контрагенты.Ответственный,
		|	Контрагенты.Ответственный.Представление
		|
		|УПОРЯДОЧИТЬ ПО
		|	Контрагенты УБЫВ,
		|	Контрагенты.Ответственный.Наименование";
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	ОтборЗапроса = СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Отбор;
	
	Если ЗначениеЗаполнено(ОтборТег) Тогда
		ОтборЗапроса.Добавить("Контрагенты.Теги.Тег = &ОтборТег");
		Запрос.УстановитьПараметр("ОтборТег", ОтборТег);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборСегмент) Тогда
		ОтборЗапроса.Добавить("Контрагенты.Ссылка В (&СоставСегмента)");
		Запрос.УстановитьПараметр("СоставСегмента", Справочники.Сегменты.ПолучитьСоставСегмента(ОтборСегмент));
	КонецЕсли;
	
	Если ОтборМенеджеры.Количество() > 0 Тогда
		ОтборЗапроса.Добавить("Контрагенты.Ответственный В (&ОтборМенеджеры)");
		Запрос.УстановитьПараметр("ОтборМенеджеры", ОтборМенеджеры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборИсточникПривлеченияПокупателей) Тогда
		ОтборЗапроса.Добавить("Контрагенты.ИсточникПривлеченияПокупателя = &ОтборИсточник");
		Запрос.УстановитьПараметр("ОтборИсточник", ОтборИсточникПривлеченияПокупателей);
	КонецЕсли;
	
	ТекстОтбораПоТипуОтношений = ТекстОтбораПоТипуОтношений();
	Если Не ПустаяСтрока(ТекстОтбораПоТипуОтношений) Тогда
		ОтборЗапроса.Добавить(ТекстОтбораПоТипуОтношений);
	КонецЕсли;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	ВыборкаОтветственные = Запрос.Выполнить().Выбрать();
	
	// Для диаграммы используем свой механизм сводной серии, иначе не вывести произвольную легенду
	
	ДиаграммаПоМенеджерам.Обновление = Ложь;
	ДиаграммаПоМенеджерам.Очистить();
	ДиаграммаПоМенеджерам.АвтоТранспонирование = Ложь;
	ДиаграммаПоМенеджерам.МаксимумСерий = МаксимумСерий.НеЗадано;
	ДиаграммаПоМенеджерам.ВидПодписей = ВидПодписейКДиаграмме.Процент;
	ДиаграммаПоМенеджерам.ШрифтПодписей = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , Истина);
	ДиаграммаПоМенеджерам.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки, -1);
	ДиаграммаПоМенеджерам.ФорматПроцентовВПодписях = "ЧДЦ=";
	ДиаграммаПоМенеджерам.ОбластьПостроения.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	
	Точка = ДиаграммаПоМенеджерам.Точки.Добавить("Количество");
	Точка.Текст = "Количество";
	Точка.ПриоритетЦвета = Ложь;
	
	СтрокиЛегенды = Новый Массив;
	СтрокиОстальные = Новый Массив;
	ПорядковыйНомерСерии = 0;
	МаксимумСерийДиаграммы = 6;
	
	Пока ВыборкаОтветственные.Следующий() Цикл
		
		Если ПорядковыйНомерСерии < МаксимумСерийДиаграммы Тогда
			
			ПредставлениеМенеджера = ?(ЗначениеЗаполнено(ВыборкаОтветственные.Ответственный), ВыборкаОтветственные.ОтветственныйПредставление, НСтр("ru = '<Менеджер не указан>'"));
			Серия = ДиаграммаПоМенеджерам.Серии.Добавить(ПредставлениеМенеджера);
			Подсказка = ПредставлениеМенеджера + НСтр("ru = ', контрагентов: '") + ВыборкаОтветственные.Контрагенты;
			ДиаграммаПоМенеджерам.УстановитьЗначение(Точка, Серия, ВыборкаОтветственные.Контрагенты, ВыборкаОтветственные.Ответственный, Подсказка);
			
			ЛегендаДиаграммы = Новый ФорматированнаяСтрока("█", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, "@Arial Unicode MS"), Серия.Цвет);
			ФорматированнаяСтрока = Новый ФорматированнаяСтрока(Подсказка, ШрифтыСтиля.ОбычныйШрифтТекста);
			СтрокаЛегенды = Новый ФорматированнаяСтрока(ЛегендаДиаграммы, Символы.НПП, ФорматированнаяСтрока, Символы.ПС);
			СтрокиЛегенды.Добавить(СтрокаЛегенды);
			
		Иначе
			
			ПредставлениеМенеджера = НСтр("ru = '<Остальные>'");
			
			Серия = ДиаграммаПоМенеджерам.Серии.Получить(ДиаграммаПоМенеджерам.Серии.Количество() - 1);
			Серия.Текст = ПредставлениеМенеджера;
			
			СводноеЗначение = ДиаграммаПоМенеджерам.ПолучитьЗначение(Точка, Серия);
			
			ПредыдущаяПодсказка = СводноеЗначение.Подсказка;
			Подсказка = ПредставлениеМенеджера + НСтр("ru = ', контрагентов: '") + (СводноеЗначение.Значение + ВыборкаОтветственные.Контрагенты);
			
			Расшифровка = СводноеЗначение.Расшифровка;
			Если ТипЗнч(Расшифровка) = Тип("Массив") Тогда
				Расшифровка.Добавить(ВыборкаОтветственные.Ответственный);
			Иначе
				Расшифровка = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Расшифровка);
				Расшифровка.Добавить(ВыборкаОтветственные.Ответственный);
			КонецЕсли;
			
			ДиаграммаПоМенеджерам.УстановитьЗначение(Точка, Серия, СводноеЗначение.Значение + ВыборкаОтветственные.Контрагенты, Расшифровка, Подсказка);
			
			ЛегендаДиаграммы = Новый ФорматированнаяСтрока("█", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, "@Arial Unicode MS"), Серия.Цвет);
			ФорматированнаяСтрока = Новый ФорматированнаяСтрока(Подсказка, ШрифтыСтиля.ОбычныйШрифтТекста, , , "ПоказатьОстальные");
			СтрокаЛегенды = Новый ФорматированнаяСтрока(ЛегендаДиаграммы, Символы.НПП, ФорматированнаяСтрока, Символы.ПС);
			СтрокиЛегенды[СтрокиЛегенды.ВГраница()] = СтрокаЛегенды;
			
			Если ПорядковыйНомерСерии = МаксимумСерийДиаграммы Тогда
				ФорматированнаяСтрока = Новый ФорматированнаяСтрока(ПредыдущаяПодсказка, ШрифтыСтиля.ОбычныйШрифтТекста);
				СтрокаОстальные = Новый ФорматированнаяСтрока(Символы.НПП + Символы.НПП, ФорматированнаяСтрока, Символы.ПС);
				СтрокиОстальные.Добавить(СтрокаОстальные);
			КонецЕсли;
			
			ТекстПодробно = ?(ЗначениеЗаполнено(ВыборкаОтветственные.Ответственный), ВыборкаОтветственные.ОтветственныйПредставление, НСтр("ru = '<Менеджер не указан>'"))
				+ НСтр("ru = ', контрагентов: '") + ВыборкаОтветственные.Контрагенты;
			ФорматированнаяСтрока = Новый ФорматированнаяСтрока(ТекстПодробно, ШрифтыСтиля.ОбычныйШрифтТекста);
			СтрокаОстальные = Новый ФорматированнаяСтрока(Символы.НПП + Символы.НПП, ФорматированнаяСтрока, Символы.ПС);
			СтрокиОстальные.Добавить(СтрокаОстальные);
			
		КонецЕсли;
		
		ПорядковыйНомерСерии = ПорядковыйНомерСерии + 1;
		
	КонецЦикла;
	
	ДиаграммаПоМенеджерам.АвтоТранспонирование = Истина;
	ДиаграммаПоМенеджерам.Обновление = Истина;
	
	МенеджерыЛегендаДиаграммы = Новый ФорматированнаяСтрока(СтрокиЛегенды);
	МенеджерыОстальные = Новый ФорматированнаяСтрока(СтрокиОстальные);
	МенеджерыОстальныеОтображение = "";
	
КонецПроцедуры

&НаСервере
Функция СформироватьРасшифровкуНовых(Признак)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_НовыеКонтрагенты";
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НовыеКонтрагенты";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	СтруктураОбластей = Новый Структура;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.АнализБазыКонтрагентов.ПФ_MXL_КонтрагентыРасшифровка");
	
	СтруктураОбластей.Вставить("Шапка",	 Макет.ПолучитьОбласть("Шапка"));
	СтруктураОбластей.Вставить("Строка", Макет.ПолучитьОбласть("Строка"));
	СтруктураОбластей.Вставить("Итог",	 Макет.ПолучитьОбласть("Итог"));
	СтруктураОбластей.Вставить("Отступ", Макет.ПолучитьОбласть("Отступ"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Контрагенты.Ссылка КАК Контрагент,
		|	ВЫБОР
		|		КОГДА Контрагенты.ДатаСоздания МЕЖДУ &НовыеНачало И &НовыеКонец
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Новый,
		|	Контрагенты.Ответственный КАК Менеджер,
		|	Контрагенты.ДатаСоздания КАК Создан,
		|	ПРЕДСТАВЛЕНИЕ(Контрагенты.Ссылка) КАК ПредставлениеКонтрагента,
		|	ПРЕДСТАВЛЕНИЕ(Контрагенты.Ответственный) КАК ПредставлениеМенеджера
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ПометкаУдаления = ЛОЖЬ
		|	И Контрагенты.ЭтоГруппа = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Создан УБЫВ,
		|	Контрагенты.Наименование";
		
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	ОтборЗапроса = СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Отбор;
	
	Если ВРег(Признак) = ВРег("Новые") Тогда
		ОтборЗапроса.Добавить("Контрагенты.ДатаСоздания МЕЖДУ &НовыеНачало И &НовыеКонец");
	ИначеЕсли ВРег(Признак) = ВРег("Существующие") Тогда
		ОтборЗапроса.Добавить("НЕ (Контрагенты.ДатаСоздания МЕЖДУ &НовыеНачало И &НовыеКонец)");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборТег) Тогда
		ОтборЗапроса.Добавить("Контрагенты.Теги.Тег = &ОтборТег");
		Запрос.УстановитьПараметр("ОтборТег", ОтборТег);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборСегмент) Тогда
		ОтборЗапроса.Добавить("Контрагенты.Ссылка В (&СоставСегмента)");
		Запрос.УстановитьПараметр("СоставСегмента", Справочники.Сегменты.ПолучитьСоставСегмента(ОтборСегмент));
	КонецЕсли;
	
	Если ОтборМенеджеры.Количество() > 0 Тогда
		ОтборЗапроса.Добавить("Контрагенты.Ответственный В (&ОтборМенеджеры)");
		Запрос.УстановитьПараметр("ОтборМенеджеры", ОтборМенеджеры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборИсточникПривлеченияПокупателей) Тогда
		ОтборЗапроса.Добавить("Контрагенты.ИсточникПривлеченияПокупателя = &ОтборИсточник");
		Запрос.УстановитьПараметр("ОтборИсточник", ОтборИсточникПривлеченияПокупателей);
	КонецЕсли;
	
	ТекстОтбораПоТипуОтношений = ТекстОтбораПоТипуОтношений();
	Если Не ПустаяСтрока(ТекстОтбораПоТипуОтношений) Тогда
		ОтборЗапроса.Добавить(ТекстОтбораПоТипуОтношений);
	КонецЕсли;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Запрос.УстановитьПараметр("НовыеНачало", ОтборПериодЗначение.ДатаНачала);
	Запрос.УстановитьПараметр("НовыеКонец", ОтборПериодЗначение.ДатаОкончания);
	
	ТабличныйДокумент.Вывести(СтруктураОбластей.Отступ);
	ТабличныйДокумент.Вывести(СтруктураОбластей.Шапка);
	ТабличныйДокумент.Вывести(СтруктураОбластей.Отступ);
	
	НовыйИтог = 0;

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураОбластей.Строка.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(СтруктураОбластей.Строка);
		
		НовыйИтог = НовыйИтог + Число(Выборка.Новый);
		
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(СтруктураОбластей.Отступ);
	
	СтруктураОбластей.Итог.Параметры.НовыйИтог = НовыйИтог;
	ТабличныйДокумент.Вывести(СтруктураОбластей.Итог);
	
	Возврат ПоместитьВоВременноеХранилище(ТабличныйДокумент, ЭтотОбъект.УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция СформироватьРасшифровкуНовыхЗаПериод(ДатаРасшифровки)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_НовыеКонтрагентыЗаПериод";
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НовыеКонтрагентыЗаПериод";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	СтруктураОбластей = Новый Структура;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.АнализБазыКонтрагентов.ПФ_MXL_КонтрагентыРасшифровка");
	
	СтруктураОбластей.Вставить("Шапка",	 Макет.ПолучитьОбласть("Шапка"));
	СтруктураОбластей.Вставить("Строка", Макет.ПолучитьОбласть("Строка"));
	СтруктураОбластей.Вставить("Итог",	 Макет.ПолучитьОбласть("Итог"));
	СтруктураОбластей.Вставить("Отступ", Макет.ПолучитьОбласть("Отступ"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Контрагенты.Ссылка КАК Контрагент,
		|	ИСТИНА КАК Новый,
		|	Контрагенты.Ответственный КАК Менеджер,
		|	Контрагенты.ДатаСоздания КАК Создан,
		|	ПРЕДСТАВЛЕНИЕ(Контрагенты.Ссылка) КАК ПредставлениеКонтрагента,
		|	ПРЕДСТАВЛЕНИЕ(Контрагенты.Ответственный) КАК ПредставлениеМенеджера
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ПометкаУдаления = ЛОЖЬ
		|	И Контрагенты.ЭтоГруппа = ЛОЖЬ
		|	И НАЧАЛОПЕРИОДА(Контрагенты.ДатаСоздания, НЕДЕЛЯ) = &ДатаРасшифровки
		|	И Контрагенты.ДатаСоздания МЕЖДУ &НовыеНачало И &НовыеКонец
		|
		|УПОРЯДОЧИТЬ ПО
		|	Создан УБЫВ,
		|	Контрагенты.Наименование";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "НЕДЕЛЯ", ВРег(Строка(ПараметрПериодичность)));
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	ОтборЗапроса = СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Отбор;
	
	Если ЗначениеЗаполнено(ОтборТег) Тогда
		ОтборЗапроса.Добавить("Контрагенты.Теги.Тег = &ОтборТег");
		Запрос.УстановитьПараметр("ОтборТег", ОтборТег);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборСегмент) Тогда
		ОтборЗапроса.Добавить("Контрагенты.Ссылка В (&СоставСегмента)");
		Запрос.УстановитьПараметр("СоставСегмента", Справочники.Сегменты.ПолучитьСоставСегмента(ОтборСегмент));
	КонецЕсли;
	
	Если ОтборМенеджеры.Количество() > 0 Тогда
		ОтборЗапроса.Добавить("Контрагенты.Ответственный В (&ОтборМенеджеры)");
		Запрос.УстановитьПараметр("ОтборМенеджеры", ОтборМенеджеры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборИсточникПривлеченияПокупателей) Тогда
		ОтборЗапроса.Добавить("Контрагенты.ИсточникПривлеченияПокупателя = &ОтборИсточник");
		Запрос.УстановитьПараметр("ОтборИсточник", ОтборИсточникПривлеченияПокупателей);
	КонецЕсли;
	
	ТекстОтбораПоТипуОтношений = ТекстОтбораПоТипуОтношений();
	Если Не ПустаяСтрока(ТекстОтбораПоТипуОтношений) Тогда
		ОтборЗапроса.Добавить(ТекстОтбораПоТипуОтношений);
	КонецЕсли;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Запрос.УстановитьПараметр("НовыеНачало", ОтборПериодЗначение.ДатаНачала);
	Запрос.УстановитьПараметр("НовыеКонец", ОтборПериодЗначение.ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаРасшифровки", ДатаРасшифровки);
	
	ТабличныйДокумент.Вывести(СтруктураОбластей.Отступ);
	ТабличныйДокумент.Вывести(СтруктураОбластей.Шапка);
	ТабличныйДокумент.Вывести(СтруктураОбластей.Отступ);
	
	НовыйИтог = 0;

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураОбластей.Строка.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(СтруктураОбластей.Строка);
		
		НовыйИтог = НовыйИтог + Число(Выборка.Новый);
		
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(СтруктураОбластей.Отступ);
	
	СтруктураОбластей.Итог.Параметры.НовыйИтог = НовыйИтог;
	ТабличныйДокумент.Вывести(СтруктураОбластей.Итог);
	
	Возврат ПоместитьВоВременноеХранилище(ТабличныйДокумент, ЭтотОбъект.УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция СформироватьРасшифровкуПоМенеджерам(Менеджеры)
	
	Если ТипЗнч(Менеджеры) <> Тип("Массив") Тогда
		Менеджеры = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Менеджеры);
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_КонтрагентыПоМенеджерам";
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КонтрагентыПоМенеджерам";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	СтруктураОбластей = Новый Структура;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.АнализБазыКонтрагентов.ПФ_MXL_КонтрагентыРасшифровка");
	
	СтруктураОбластей.Вставить("Шапка",	 Макет.ПолучитьОбласть("Шапка"));
	СтруктураОбластей.Вставить("Строка", Макет.ПолучитьОбласть("Строка"));
	СтруктураОбластей.Вставить("Итог",	 Макет.ПолучитьОбласть("Итог"));
	СтруктураОбластей.Вставить("Отступ", Макет.ПолучитьОбласть("Отступ"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Контрагенты.Ссылка КАК Контрагент,
		|	ВЫБОР
		|		КОГДА Контрагенты.ДатаСоздания МЕЖДУ &НовыеНачало И &НовыеКонец
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Новый,
		|	Контрагенты.Ответственный КАК Менеджер,
		|	Контрагенты.ДатаСоздания КАК Создан,
		|	ПРЕДСТАВЛЕНИЕ(Контрагенты.Ссылка) КАК ПредставлениеКонтрагента,
		|	ПРЕДСТАВЛЕНИЕ(Контрагенты.Ответственный) КАК ПредставлениеМенеджера
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ПометкаУдаления = ЛОЖЬ
		|	И Контрагенты.ЭтоГруппа = ЛОЖЬ
		|	И Контрагенты.Ответственный В(&Менеджеры)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Создан УБЫВ,
		|	Контрагенты.Наименование";
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	ОтборЗапроса = СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Отбор;
	
	Если ЗначениеЗаполнено(ОтборТег) Тогда
		ОтборЗапроса.Добавить("Контрагенты.Теги.Тег = &ОтборТег");
		Запрос.УстановитьПараметр("ОтборТег", ОтборТег);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборСегмент) Тогда
		ОтборЗапроса.Добавить("Контрагенты.Ссылка В (&СоставСегмента)");
		Запрос.УстановитьПараметр("СоставСегмента", Справочники.Сегменты.ПолучитьСоставСегмента(ОтборСегмент));
	КонецЕсли;
	
	Если ОтборМенеджеры.Количество() > 0 Тогда
		ОтборЗапроса.Добавить("Контрагенты.Ответственный В (&ОтборМенеджеры)");
		Запрос.УстановитьПараметр("ОтборМенеджеры", ОтборМенеджеры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборИсточникПривлеченияПокупателей) Тогда
		ОтборЗапроса.Добавить("Контрагенты.ИсточникПривлеченияПокупателя = &ОтборИсточник");
		Запрос.УстановитьПараметр("ОтборИсточник", ОтборИсточникПривлеченияПокупателей);
	КонецЕсли;
	
	ТекстОтбораПоТипуОтношений = ТекстОтбораПоТипуОтношений();
	Если Не ПустаяСтрока(ТекстОтбораПоТипуОтношений) Тогда
		ОтборЗапроса.Добавить(ТекстОтбораПоТипуОтношений);
	КонецЕсли;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Запрос.УстановитьПараметр("НовыеНачало", ОтборПериодЗначение.ДатаНачала);
	Запрос.УстановитьПараметр("НовыеКонец", ОтборПериодЗначение.ДатаОкончания);
	Запрос.УстановитьПараметр("Менеджеры", Менеджеры);
	
	ТабличныйДокумент.Вывести(СтруктураОбластей.Отступ);
	ТабличныйДокумент.Вывести(СтруктураОбластей.Шапка);
	ТабличныйДокумент.Вывести(СтруктураОбластей.Отступ);
	
	НовыйИтог = 0;

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураОбластей.Строка.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(СтруктураОбластей.Строка);
		
		НовыйИтог = НовыйИтог + Число(Выборка.Новый);
		
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(СтруктураОбластей.Отступ);
	
	СтруктураОбластей.Итог.Параметры.НовыйИтог = НовыйИтог;
	ТабличныйДокумент.Вывести(СтруктураОбластей.Итог);
	
	Возврат ПоместитьВоВременноеХранилище(ТабличныйДокумент, ЭтотОбъект.УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура СФормироватьПриОткрытии()
	
	СформироватьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериодаИзВыпадающегоСписка(Результат, ПараметрыВыбора) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат; // Отмена выбора.
	КонецЕсли;
	
	Если Результат = -1 Тогда // Начало выбора.
		// Чтение параметров для формирования списка из сохраненного значения периода.
		ПараметрыВыбора.Вставить("НачалоПериода", ПараметрыВыбора.Значение.ДатаНачала);
		ПараметрыВыбора.Вставить("Вариант",       ПараметрыВыбора.Значение.Вариант);
		ИндексНачальногоЗначения = Неопределено;
	ИначеЕсли ТипЗнч(Результат.Значение) = Тип("Структура") Тогда
		// Чтение параметров для формирования списка из выбранного значения.
		ПараметрыВыбора.Вставить("НачалоПериода", Результат.Значение.НачалоПериода);
		ПараметрыВыбора.Вставить("Вариант",       Результат.Значение.Вариант);
		ИндексНачальногоЗначения = Результат.Значение.ИндексНачальногоЗначения;
	Иначе
		// Загрузка результата выбора.
		ЗагрузитьРезультатВыбораПериодаИзВыпадающегоСписка(Результат, ПараметрыВыбора);
		Возврат;
	КонецЕсли;
	
	// Формирование списка выбора.
	Если ПараметрыВыбора.Вариант = Неопределено Или ПараметрыВыбора.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод Тогда
		
		СписокПериодов = ОтчетыУНФКлиентСервер.СписокФиксированныхПериодов(ПараметрыВыбора.НачалоПериода, ПараметрыВыбора.ВидПериода);
		
		Если ИндексНачальногоЗначения = Неопределено Тогда
			ИндексНачальногоЗначения = СписокПериодов.НайтиПоЗначению(ПараметрыВыбора.НачалоПериода);
		КонецЕсли;
		
		ОписаниеНавигационногоЭлемента = Новый Структура;
		ОписаниеНавигационногоЭлемента.Вставить("НачалоПериода",            СписокПериодов[0].Значение);
		ОписаниеНавигационногоЭлемента.Вставить("Вариант",                  Неопределено);
		ОписаниеНавигационногоЭлемента.Вставить("ИндексНачальногоЗначения", 0);
		СписокПериодов[0].Значение = ОписаниеНавигационногоЭлемента;
		
		ОписаниеНавигационногоЭлемента = Новый Структура;
		ОписаниеНавигационногоЭлемента.Вставить("НачалоПериода",            СписокПериодов[8].Значение);
		ОписаниеНавигационногоЭлемента.Вставить("Вариант",                  Неопределено);
		ОписаниеНавигационногоЭлемента.Вставить("ИндексНачальногоЗначения", 8);
		СписокПериодов[8].Значение = ОписаниеНавигационногоЭлемента;
		
		Если Не ПараметрыВыбора.Свойство("ВариантСтандартногоПериодаПоВиду") Тогда
			ПараметрыВыбора.Вставить("ВариантСтандартногоПериодаПоВиду", ОтчетыУНФКлиентСервер.ПривестиВидПериодаКСтандартному(ПараметрыВыбора.ВидПериода));
		КонецЕсли;
		
		ОписаниеНавигационногоЭлемента = Новый Структура;
		ОписаниеНавигационногоЭлемента.Вставить("НачалоПериода",            ПараметрыВыбора.НачалоПериода);
		ОписаниеНавигационногоЭлемента.Вставить("Вариант",                  ПараметрыВыбора.ВариантСтандартногоПериодаПоВиду);
		ОписаниеНавигационногоЭлемента.Вставить("ИндексНачальногоЗначения", Неопределено);
		СписокПериодов.Добавить(ОписаниеНавигационногоЭлемента, НСтр("ru = 'Относительный...'"));
		
	Иначе
		
		СписокПериодов = ОтчетыУНФКлиентСервер.СписокВычисляемыхПериодов(ПараметрыВыбора.ВидПериода);
		
		Если ИндексНачальногоЗначения = Неопределено Тогда
			ИндексНачальногоЗначения = СписокПериодов.НайтиПоЗначению(ПараметрыВыбора.Вариант);
		КонецЕсли;
		
		ОписаниеНавигационногоЭлемента = Новый Структура;
		ОписаниеНавигационногоЭлемента.Вставить("НачалоПериода",            ПараметрыВыбора.НачалоПериода);
		ОписаниеНавигационногоЭлемента.Вставить("Вариант",                  Неопределено);
		ОписаниеНавигационногоЭлемента.Вставить("ИндексНачальногоЗначения", Неопределено);
		СписокПериодов.Добавить(ОписаниеНавигационногоЭлемента, НСтр("ru = 'Фиксированный...'"));
		
	КонецЕсли;
	
	Если ИндексНачальногоЗначения = Неопределено Тогда
		ИндексНачальногоЗначения = СписокПериодов.Количество() - 1;
	КонецЕсли;
	
	ДанныеВыбораПериодаИзВыпадающегоСписка = Новый Структура;
	ДанныеВыбораПериодаИзВыпадающегоСписка.Вставить("ПараметрыВыбора", ПараметрыВыбора);
	ДанныеВыбораПериодаИзВыпадающегоСписка.Вставить("СписокПериодов", СписокПериодов);
	ДанныеВыбораПериодаИзВыпадающегоСписка.Вставить("ИндексНачальногоЗначения", ИндексНачальногоЗначения);
	Если Результат = -1 Тогда
		НачатьВыборПериодаИзВыпадающегоСписка();
	Иначе
		ПодключитьОбработчикОжидания("НачатьВыборПериодаИзВыпадающегоСписка", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьВыборПериодаИзВыпадающегоСписка()
	
	Если ДанныеВыбораПериодаИзВыпадающегоСписка.Свойство("ПараметрыВыбора") Тогда
		Контекст = ДанныеВыбораПериодаИзВыпадающегоСписка;
		ДанныеВыбораПериодаИзВыпадающегоСписка = Новый Структура;
		Обработчик = Новый ОписаниеОповещения("ВыборПериодаИзВыпадающегоСписка", ЭтотОбъект, Контекст.ПараметрыВыбора);
		ПоказатьВыборИзСписка(Обработчик, Контекст.СписокПериодов, Контекст.ПараметрыВыбора.Элемент, Контекст.ИндексНачальногоЗначения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьРезультатВыбораПериодаИзВыпадающегоСписка(Результат, ПараметрыВыбора)
	
	Значение = ПараметрыВыбора.Значение;
	
	// Запись результата выбора в данные формы и пользовательские настройки КД.
	Если ТипЗнч(Результат.Значение) = Тип("ВариантСтандартногоПериода") Тогда
		ОтборПериодПредставление = ?(ПустаяСтрока(Результат.Представление), Строка(Результат.Значение), Результат.Представление);
		Значение.Вариант = Результат.Значение;
	Иначе
		НачалоПериода = ОтчетыКлиентСервер.НачалоПериодаОтчета(ПараметрыВыбора.ВидПериода, Результат.Значение);
		КонецПериода  = ОтчетыКлиентСервер.КонецПериодаОтчета(ПараметрыВыбора.ВидПериода, Результат.Значение);
		
		ОтборПериодПредставление = Результат.Представление;
		
		Значение.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
		Значение.ДатаНачала    = НачалоПериода;
		Значение.ДатаОкончания = КонецПериода;
	КонецЕсли;
	
	ОтборПериодЗначение = Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура МенеджерыЗавершениеВыбора(РезультатВыбора, ПараметрыОбработчика) Экспорт
	
	Если ТипЗнч(РезультатВыбора) <> Тип("СписокЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	ОтборМенеджерыВсе = РезультатВыбора;
	
	ОтборМенеджеры = Новый СписокЗначений;
	Для Каждого ЭлементСписка Из РезультатВыбора Цикл
		Если ЭлементСписка.Пометка Тогда
			ОтборМенеджеры.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление, ЭлементСписка.Пометка, ЭлементСписка.Картинка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ТекстОтбораПоТипуОтношений()
	
	ОтборыПоТипуОтношений = Новый Массив;
	
	Если ОтборПокупатели И Не (ОтборПоставщики И ОтборПрочиеОтношения) Тогда
		ОтборыПоТипуОтношений.Добавить("Контрагенты.Покупатель");
	КонецЕсли;
	
	Если ОтборПоставщики И Не (ОтборПокупатели И ОтборПрочиеОтношения) Тогда
		ОтборыПоТипуОтношений.Добавить("Контрагенты.Поставщик");
	КонецЕсли;
	
	Если ОтборПрочиеОтношения И Не (ОтборПокупатели И ОтборПоставщики) Тогда
		ОтборыПоТипуОтношений.Добавить("Контрагенты.ПрочиеОтношения");
	КонецЕсли;
	
	Если ОтборыПоТипуОтношений.Количество() > 0 Тогда
		Возврат СтрСоединить(ОтборыПоТипуОтношений, " ИЛИ ");
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

#КонецОбласти
