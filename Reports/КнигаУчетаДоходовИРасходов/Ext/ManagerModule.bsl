#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//Возвращает реквизиты первичного документа для занесения в графу 2 КУДиР
//
Функция НомерПервичногоДокумента(Знач Номер) Экспорт
	Пока Лев(Номер, 1)="0" Цикл
		Номер = Сред(Номер, 2);
	КонецЦикла;
	Возврат Номер;
КонецФункции


// Формирует табличную часть отчета
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ПараметрыОтчета.СписокСформированныхЛистов.Очистить();
	
	// в связи со спецификой отчета переопределим перериод
	ПараметрыОтчета.Период = КонецКвартала(ПараметрыОтчета.КонецПериода);
	
	ПечатьТитульногоЛиста(ПараметрыОтчета);
	
	ПечатьРаздела1(ПараметрыОтчета);
	
	ПечатьРаздела2(ПараметрыОтчета);
	
	ПечатьРаздела3(ПараметрыОтчета);
	
	ПечатьРаздела4(ПараметрыОтчета);
	
	ПоместитьВоВременноеХранилище(ПараметрыОтчета.СписокСформированныхЛистов, АдресХранилища);
	
КонецПроцедуры


Процедура ПечатьТитульногоЛиста(ПараметрыОтчета)
	
	Период      = ПараметрыОтчета.Период;
	Организация = ПараметрыОтчета.Организация;
	
	Результат = Новый ТабличныйДокумент;
	Если Период < Дата("20130101") Тогда
		Макет = ПолучитьМакет("ТитульныйЛист_154н");
	Иначе
		Макет = ПолучитьМакет("ТитульныйЛист_135н");
	КонецЕсли;
	
	Макет.Параметры.НаПериод = "на " + Формат(Период,"ДФ=гггг") + " год";
	Макет.Параметры.КодОКПО = Организация.КодПоОКПО;
	Макет.Параметры.ПолноеНаименованиеОрганизации = Организация.НаименованиеПолное;
	
	ЗапросПоДопСведениям = Новый Запрос(
	"ВЫБРАТЬ
	|	СистемыНалогообложенияОрганизацийСрезПоследних.ОбъектНалогообложения
	|ИЗ
	|	РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(
	|			&КонДата,
	|			 Организация = &Организация) КАК СистемыНалогообложенияОрганизацийСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БанковскиеСчета.НомерСчета,
	|	БанковскиеСчета.Банк
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &Организация
	|	И (БанковскиеСчета.ДатаОткрытия <= &КонДата
	|			ИЛИ БанковскиеСчета.ДатаОткрытия = ДАТАВРЕМЯ(1, 1, 1))
	|	И (БанковскиеСчета.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ БанковскиеСчета.ДатаЗакрытия >= &НачДата)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииКонтактнаяИнформация.Представление КАК ЮридическийАдрес
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Ссылка = &Организация
	|	И ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации)");
	
	ЗапросПоДопСведениям.УстановитьПараметр("НачДата", НачалоГода(Период));
	ЗапросПоДопСведениям.УстановитьПараметр("КонДата", КонецГода(Период));
	ЗапросПоДопСведениям.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = ЗапросПоДопСведениям.ВыполнитьПакет();
	
	// Объект налогообложения
	ОбъектНалогообложения = РезультатЗапроса[0].Выбрать();
	Если ОбъектНалогообложения.Следующий() Тогда
		Макет.Параметры.ОбъектНалогообложения = ОбъектНалогообложения.ОбъектНалогообложения;
	Иначе
		Макет.Параметры.ОбъектНалогообложения = "";
	КонецЕсли;
	
	
	// Банковские счета
	
	БанковскиеСчета = РезультатЗапроса[1].Выбрать();
	СчетаСтрока = "";
	
	Пока БанковскиеСчета.Следующий() Цикл
		СчетаСтрока = СчетаСтрока + "№" + БанковскиеСчета.НомерСчета + " в " + БанковскиеСчета.Банк + ", ";
	КонецЦикла;
	
	Если СтрДлина(СчетаСтрока) > 2 Тогда
		СчетаСтрока = Лев(СчетаСтрока, СтрДлина(СчетаСтрока) -2);
	КонецЕсли;
	
	Макет.Параметры.Счета = СчетаСтрока;
	
	// Юридический адрес
	
	ЮридическийАдрес = РезультатЗапроса[2].Выбрать();
	
	Если ЮридическийАдрес.Следующий() Тогда
		ЮридическийАдресСтрока = ЮридическийАдрес.ЮридическийАдрес;
		
		// Если адрес Отчетной единицы не поместиться в первую строку, то разрежем его
		//
		Если СтрДлина(ЮридическийАдресСтрока) > 45 Тогда
			
			ПозицияПереноса = 0;
			СтрокаПоиска = ЮридическийАдресСтрока;
			РезультатПоиска = Найти(СтрокаПоиска, ",");
			
			Пока (РезультатПоиска + ПозицияПереноса < 45) И (РезультатПоиска > 0) Цикл
				ПозицияПереноса = ПозицияПереноса + РезультатПоиска;
				СтрокаПоиска = Прав(СтрокаПоиска, СтрДлина(СтрокаПоиска) - РезультатПоиска);
				РезультатПоиска = Найти(СтрокаПоиска, ",");
			КонецЦикла;
			
			Если НЕ ПозицияПереноса = 0 Тогда
				Макет.Параметры.АдресОрганизации = Лев(ЮридическийАдресСтрока, ПозицияПереноса);
				Макет.Параметры.АдресОрганизации2 = Прав(ЮридическийАдресСтрока, СтрДлина(ЮридическийАдресСтрока) - ПозицияПереноса);
			Иначе
				СтрокаПоиска = ЮридическийАдресСтрока;
				РезультатПоиска = Найти(СтрокаПоиска, " ");
				Пока (РезультатПоиска + ПозицияПереноса < 45) И (РезультатПоиска > 0) Цикл
					ПозицияПереноса = ПозицияПереноса + РезультатПоиска;
					СтрокаПоиска = Прав(СтрокаПоиска, СтрДлина(СтрокаПоиска) - РезультатПоиска);
					РезультатПоиска = Найти(СтрокаПоиска, " ");
				КонецЦикла;
				ПозицияПереноса = ?(ПозицияПереноса = 0, 45, ПозицияПереноса);
				Макет.Параметры.АдресОрганизации = Лев(ЮридическийАдресСтрока, ПозицияПереноса);
				Макет.Параметры.АдресОрганизации2 = Прав(ЮридическийАдресСтрока, СтрДлина(ЮридическийАдресСтрока) - ПозицияПереноса);
			КонецЕсли;
			
		Иначе
			Макет.Параметры.АдресОрганизации = ЮридическийАдресСтрока;
			Макет.Параметры.АдресОрганизации2= "";
		КонецЕсли;
		
	Иначе
		Макет.Параметры.АдресОрганизации = "";
		Макет.Параметры.АдресОрганизации2 = "";
	КонецЕсли;
	
	
	
	Результат.Вывести(Макет);
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация,"ЮридическоеФизическоеЛицо") = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		ИНН = Организация.ИНН;
		ИмяОбластиИНН = "ПрИНН";
		Для к = 1 по 12 Цикл
			Результат.Область(ИмяОбластиИНН + к).Текст = Сред(ИНН, к, 1);
		КонецЦикла;
	Иначе
		ИНН = Организация.ИНН;
		КПП = Организация.КПП;
		Для к = 1 по 12 Цикл
			Результат.Область("ИНН" + к).Текст = Сред(ИНН, к, 1);
		КонецЦикла;
		Для к = 1 по 9 Цикл
			Результат.Область("КПП"+ к).Текст = Сред(КПП, к, 1);
		КонецЦикла;
	КонецЕсли;
	
	
	Результат.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, "Титульный лист");
	
КонецПроцедуры

Процедура ПечатьРаздела1(ПараметрыОтчета)
	
	Период      = ПараметрыОтчета.Период;
	Организация = ПараметрыОтчета.Организация;
	СНачалаГода = Истина;
	ТолькоБаза = Истина;
	ПоследнийКварталПериода = ПолучитьНомерКвартала(ПараметрыОтчета.Период);
	
	Результат = Новый ТабличныйДокумент;

	НазванияКварталов = Новый Соответствие;
	
	НазванияКварталов.Вставить(1, "Итого за I квартал:");
	НазванияКварталов.Вставить(2, "Итого за II квартал:");
	НазванияКварталов.Вставить(3, "Итого за III квартал:");
	НазванияКварталов.Вставить(4, "Итого за IV квартал:");
	
	
	НазванияПериодов = Новый Соответствие;
	
	НазванияПериодов.Вставить(1, "<не выводится>");
	НазванияПериодов.Вставить(2, "Итого за полугодие:");
	НазванияПериодов.Вставить(3, "Итого за 9 месяцев:");
	НазванияПериодов.Вставить(4, "Итого за год:");
	
	
	ВыведенностьКвартала = Новый Соответствие;
	
	ВыведенностьКвартала.Вставить(1, Ложь);
	ВыведенностьКвартала.Вставить(2, Ложь);
	ВыведенностьКвартала.Вставить(3, Ложь);
	ВыведенностьКвартала.Вставить(4, Ложь);
	
	
	
	Если ТолькоБаза Тогда
		Макет = ПолучитьМакет("Раздел1ТолькоДоходыРасходы");
	Иначе
		Макет = ПолучитьМакет("Раздел1");
	КонецЕсли;
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	СтрокаРезультата = Макет.ПолучитьОбласть("Строка");
	Итого = Макет.ПолучитьОбласть("Итого");
	Подвал = Макет.ПолучитьОбласть("Итого");
	
	ЗапросПоНО = Новый Запрос;
	ЗапросПоНО.Текст = 
	"ВЫБРАТЬ
	|	СистемыНалогообложенияОрганизацийСрезПоследних.ОбъектНалогообложения
	|ИЗ
	|	РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(&КонДата, Организация = &Организация) КАК СистемыНалогообложенияОрганизацийСрезПоследних
	|;";
	ЗапросПоНО.УстановитьПараметр("Организация",Организация);
	ЗапросПоНО.УстановитьПараметр("КонДата", КонецГода(Период));
	ВыборкаНО = ЗапросПоНО.Выполнить().Выбрать();
	
	Если ВыборкаНО.Следующий() Тогда
		НеобходимоПечататьРасходы = (ВыборкаНО.ОбъектНалогообложения = Перечисления.ВидыОбъектовНалогообложения.ДоходыМинусРасходы);
	Иначе
		НеобходимоПечататьРасходы = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходов.ДоходВсего КАК ПечДоходыВсего,
	|	КнигаУчетаДоходовИРасходов.ДоходБаза КАК ПечДоходы,
	|	ВЫБОР
	|		КОГДА &НеобходимоПечататьРасходы
	|			ТОГДА КнигаУчетаДоходовИРасходов.РасходВсего
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПечРасходыВсего,
	|	ВЫБОР
	|		КОГДА &НеобходимоПечататьРасходы
	|			ТОГДА КнигаУчетаДоходовИРасходов.РасходБаза
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПечРасходы,
	|	КнигаУчетаДоходовИРасходов.Содержание,
	|	КнигаУчетаДоходовИРасходов.ДатаПервичногоДокумента КАК ДатаПервичногоДокумента,
	|	КнигаУчетаДоходовИРасходов.НомерПервичногоДокумента,
	|	КнигаУчетаДоходовИРасходов.ПервичныйДокумент КАК Регистратор,
	|	КВАРТАЛ(КнигаУчетаДоходовИРасходов.Период) КАК ГруппировкаКварталов
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И КнигаУчетаДоходовИРасходов.Организация = &Организация
	|	И (&НеобходимоПечататьРасходы
	|			ИЛИ КнигаУчетаДоходовИРасходов.ДоходБаза <> 0
	|			ИЛИ КнигаУчетаДоходовИРасходов.ДоходВсего <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПервичногоДокумента
	|ИТОГИ
	|	СУММА(ПечДоходыВсего),
	|	СУММА(ПечДоходы),
	|	СУММА(ПечРасходыВсего),
	|	СУММА(ПечРасходы)
	|ПО
	|	ОБЩИЕ,
	|	ГруппировкаКварталов");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если СНачалаГода Тогда
		Запрос.УстановитьПараметр("ДатаНачала", НачалоГода(Период));
	Иначе
		Запрос.УстановитьПараметр("ДатаНачала", НачалоКвартала(Период));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Период));
	Запрос.УстановитьПараметр("НеобходимоПечататьРасходы", НеобходимоПечататьРасходы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКварталов = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ГруппировкаКварталов");
	
	Г4ЗаГод = 0;
	Г5ЗаГод = 0;
	Г6ЗаГод = 0;
	Г7ЗаГод = 0;
	
	сч = 1; СтрокаОт = НСтр("ru=' от '");
	
	
	Пока ВыборкаКварталов.Следующий() Цикл
		
		
		Результат.Вывести(Шапка);
		Выборка = ВыборкаКварталов.Выбрать();
		
		
		// Проверим, нет ли пропуска кварталов (нет сведений за эти кварталы)
		// Если пропуск есть, то выведем пустую отбиву за квартал по предыдущим периодам
		Если ВыборкаКварталов.ГруппировкаКварталов > 1 И СНачалаГода Тогда
			
			Для К = 1 По ВыборкаКварталов.ГруппировкаКварталов-1 Цикл
				
				Если НЕ ВыведенностьКвартала[к] Тогда
					
					Если Не ТолькоБаза Тогда
						Итого.Параметры.ПечДоходыВсего = Г4ЗаГод;
						Итого.Параметры.ПечРасходыВсего = Г6ЗаГод;
					КонецЕсли;
					
					Итого.Параметры.ПечДоходы = 0;
					Итого.Параметры.ПечРасходы = 0;
					
					Итого.Параметры.ПечТекстИтогов = НазванияКварталов[к];
					Результат.Вывести(Итого);
					
					Если к > 1 Тогда
						Итого.Параметры.ПечДоходы = Г5ЗаГод;
						Итого.Параметры.ПечРасходы = Г7ЗаГод;
						Итого.Параметры.ПечТекстИтогов = НазванияПериодов[к];
						Результат.Вывести(Итого);
					КонецЕсли;
					
					Результат.ТолькоПросмотр = Истина;
					Результат.ПовторятьПриПечатиСтроки = Результат.Область(6,,6,);
					ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, "Раздел I за " + к + " кв. (Доходы и расходы)");
					
					Результат = Новый ТабличныйДокумент;
					
					ВыведенностьКвартала[к] = Истина;
					
					Результат.Вывести(Шапка);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
			
		ВыведенностьКвартала[ВыборкаКварталов.ГруппировкаКварталов] = Истина;
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ТипЗаписи() <> ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
				
				Г4ЗаГод = Г4ЗаГод+Выборка.ПечДоходыВсего;
				Г5ЗаГод = Г5ЗаГод+Выборка.ПечДоходы;
				Г6ЗаГод = Г6ЗаГод+Выборка.ПечРасходыВсего;
				Г7ЗаГод = Г7ЗаГод+Выборка.ПечРасходы;
				Продолжить;
				
			КонецЕсли;
			
			СтрокаРезультата.Параметры.Заполнить(Выборка);
			СтрокаРезультата.Параметры.НомерПП = сч;
			СтрокаРезультата.Параметры.ТекРасшифровка = Выборка.Регистратор;
			
			СтрокаРезультата.Параметры.ПечДатаНомерДок = 
				"№ "
				+НомерПервичногоДокумента(Выборка.НомерПервичногоДокумента) 
				+СтрокаОт 
				+ Формат(Выборка.ДатаПервичногоДокумента,"ДФ=dd.MM.yy");
				
			СтрокаРезультата.Параметры.Регистратор = Выборка.Регистратор;
			СтрокаРезультата.Параметры.ПечСодержОпер = Выборка.Содержание;
			
			Результат.Вывести(СтрокаРезультата);
			
			сч = сч+1;
		КонецЦикла;
		
		Итого.Параметры.Заполнить(ВыборкаКварталов);
		Итого.Параметры.ПечТекстИтогов = НазванияКварталов[ВыборкаКварталов.ГруппировкаКварталов];
		Результат.Вывести(Итого);
		
		Если СНачалаГода И ВыборкаКварталов.ГруппировкаКварталов > 1 Тогда
			Если Не ТолькоБаза Тогда
				Итого.Параметры.ПечДоходыВсего = Г4ЗаГод;
				Итого.Параметры.ПечРасходыВсего = Г6ЗаГод;
			КонецЕсли;
			
			Итого.Параметры.ПечДоходы = Г5ЗаГод;
			Итого.Параметры.ПечРасходы = Г7ЗаГод;
			
			Итого.Параметры.ПечТекстИтогов = НазванияПериодов[ВыборкаКварталов.ГруппировкаКварталов];
			Результат.Вывести(Итого);
		КонецЕсли;
		Если ВыборкаКварталов.ГруппировкаКварталов < 4 Тогда
			Результат.ТолькоПросмотр = Истина;
			Результат.ПовторятьПриПечатиСтроки = Результат.Область(6,,6,);
			ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, "Раздел I за " + ВыборкаКварталов.ГруппировкаКварталов + " кв. (Доходы и расходы)");
			
			Результат = Новый ТабличныйДокумент;
		КонецЕсли;
		
	КонецЦикла;
	
	// проверим, все ли кварталы ввывдены, при выводах с начала года
	Если СНачалаГода Тогда
		Для К = 1 По 4 Цикл
			Если НЕ ВыведенностьКвартала[к] Тогда
				
				Результат.Вывести(Шапка);
				Если Не ТолькоБаза Тогда
					Итого.Параметры.ПечДоходыВсего = Г4ЗаГод;
					Итого.Параметры.ПечРасходыВсего = Г6ЗаГод;
				КонецЕсли;
				
				Итого.Параметры.ПечДоходы = 0;
				Итого.Параметры.ПечРасходы = 0;
				
				Итого.Параметры.ПечТекстИтогов = НазванияКварталов[к];
				Результат.Вывести(Итого);
				
				Если к > 1 Тогда
					Итого.Параметры.ПечДоходы = Г5ЗаГод;
					Итого.Параметры.ПечРасходы = Г7ЗаГод;
					Итого.Параметры.ПечТекстИтогов = НазванияПериодов[к];
					Результат.Вывести(Итого);
				КонецЕсли;
				
				Если к < 4 Тогда
					Результат.ТолькоПросмотр = Истина;
					Результат.ПовторятьПриПечатиСтроки = Результат.Область(6,,6,);
					ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, "Раздел I за " + к + " кв. (Доходы и расходы)");
					
					Результат = Новый ТабличныйДокумент;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
		// Выведем подвал
	Если ТолькоБаза И ПолучитьНомерКвартала(Период) = 4 И Период >= Дата("20060101") Тогда
		Секция = Макет.ПолучитьОбласть("Справка");
		
		П010 = Г5ЗаГод;
		П020 = Г7ЗаГод;
        П030 = 0;
		
		
		Секция.Параметры.ПечДоходы = П010;
		Секция.Параметры.ПечРасходы = П020;
		Секция.Параметры.Убыток030 = П030;
		
		Если П010 - П020 - П030 >= 0 Тогда
			Секция.Параметры.ИтогоДоходы = П010 - П020 - П030;
		Иначе
			Секция.Параметры.ИтогоРасходы = П020 + П030 - П010;
		КонецЕсли;
		
		Результат.Вывести(Секция);
	КонецЕсли;
	
	
	Результат.ТолькоПросмотр = Истина;
	Результат.ПовторятьПриПечатиСтроки = Результат.Область(6,,6,);
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, "Раздел I за 4 кв. (Доходы и расходы)");
	
КонецПроцедуры

Процедура ПечатьРаздела2(ПараметрыОтчета)
	
	Результат = Новый ТабличныйДокумент;
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Результат.АвтоМасштаб = Истина;
	
	Период      = ПараметрыОтчета.Период;
	Организация = ПараметрыОтчета.Организация;
	СНачалаГода = Истина;
	ТолькоБаза = Истина;
	
	
	
	Если Период < Дата("20130101") Тогда
		Макет = ПолучитьМакет("Раздел2_154н");
	Иначе
		Макет = ПолучитьМакет("Раздел2_135н");
	КонецЕсли;
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.ЗаПериод = "за " + Формат(Период,"ДФ=гггг") + " год";
	Результат.Вывести(Шапка);
	
	Строка = Макет.ПолучитьОбласть("Строка");
	Итог = Макет.ПолучитьОбласть("Итог");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СправочникВнеоборотныеАктивы.Ссылка КАК ОсновноеСредство,
	|	СправочникВнеоборотныеАктивы.ДатаОплаты,
	|	СправочникВнеоборотныеАктивы.ДатаРегистрации КАК Графа4_ГосударственнаяРегистрация,
	|	МАКСИМУМ(ПринятиеКУчетуВА.Дата) КАК ПечДатаВводаВЭксплуатацию,
	|	СправочникВнеоборотныеАктивы.НачальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	0 КАК ОстаточнаяСтоимость,
	|	5 - КВАРТАЛ(МАКСИМУМ(ПринятиеКУчетуВА.Дата)) КАК КоличествоКварталовВНалоговомПериоде,
	|	100 КАК ПроцентПринятыхРасходов,
	|	ВЫРАЗИТЬ(1 / (5 - КВАРТАЛ(МАКСИМУМ(ПринятиеКУчетуВА.Дата))) КАК ЧИСЛО(5, 2)) КАК ПроцентПринятыхРасходовЗаКвартал,
	|	ВЫРАЗИТЬ(1 / (5 - КВАРТАЛ(МАКСИМУМ(ПринятиеКУчетуВА.Дата))) * СправочникВнеоборотныеАктивы.НачальнаяСтоимость КАК ЧИСЛО(15, 2)) КАК СуммаРасходовЗаПоследнийКвартал,
	|	СправочникВнеоборотныеАктивы.НачальнаяСтоимость КАК СуммаРасходовЗаОтчетныйПериод,
	|	0 КАК СуммаРасходовПредыдущихПериодов,
	|	0 КАК СуммаРасходовНеВключенныхВСоставРасходов,
	|	"""" КАК ПечДатаВыбытия,
	|	СправочникВнеоборотныеАктивы.Наименование КАК НаименованиеОС
	|ИЗ
	|	Справочник.ВнеоборотныеАктивы КАК СправочникВнеоборотныеАктивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуВА.ВнеоборотныеАктивы КАК ПринятиеКУчетуВАТаблица
	|		ПО (СправочникВнеоборотныеАктивы.УчитыватьВНУ)
	|			И (СправочникВнеоборотныеАктивы.ДатаОплаты <> &ПустаяДата)
	|			И СправочникВнеоборотныеАктивы.Ссылка = ПринятиеКУчетуВАТаблица.ВнеоборотныйАктив
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуВА КАК ПринятиеКУчетуВА
	|		ПО (ПринятиеКУчетуВА.Ссылка = ПринятиеКУчетуВАТаблица.Ссылка)
	|			И (ПринятиеКУчетуВА.Проведен)
	|			И (ПринятиеКУчетуВА.Организация = &Организация)
	|			И (ПринятиеКУчетуВА.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	СправочникВнеоборотныеАктивы.Ссылка,
	|	СправочникВнеоборотныеАктивы.ДатаОплаты,
	|	СправочникВнеоборотныеАктивы.ДатаРегистрации,
	|	СправочникВнеоборотныеАктивы.НачальнаяСтоимость,
	|	СправочникВнеоборотныеАктивы.НачальнаяСтоимость,
	|	СправочникВнеоборотныеАктивы.Наименование
	|ИТОГИ
	|	СУММА(ПервоначальнаяСтоимость),
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(СуммаРасходовЗаПоследнийКвартал),
	|	СУММА(СуммаРасходовЗаОтчетныйПериод),
	|	СУММА(СуммаРасходовПредыдущихПериодов),
	|	СУММА(СуммаРасходовНеВключенныхВСоставРасходов)
	|ПО
	|	ОБЩИЕ");
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоГода(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НомерПП = 1;
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
			Итог.Параметры.Заполнить(Выборка);
			Продолжить;
		КонецЕсли;
		Строка.Параметры.Заполнить(Выборка);
		Строка.Параметры.ОсновноеСредство = Выборка.ОсновноеСредство;
		Строка.Параметры.ПорядковыйНомер = НомерПП;
		
		Результат.Вывести(Строка);
		
		
		НомерПП = НомерПП + 1;
		
	КонецЦикла;
	
	Результат.Вывести(Итог);
	Результат.ПовторятьПриПечатиСтроки = Результат.Область(10,,10,);
	
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, "Раздел II (Расходы на ОС и НМА)");
	
КонецПроцедуры

Процедура ПечатьРаздела3(ПараметрыОтчета)
	
	Период = ПараметрыОтчета.Период;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел3";
	
	Если Период < Дата("20130101") Тогда
		Макет = ПолучитьМакет("Раздел3_154н");
	Иначе
		Макет = ПолучитьМакет("Раздел3_135н");
	КонецЕсли;
	
	Макет.Параметры.ЗаПериод = "за " + Формат(Период,"ДФ=гггг") + " год";
	
	ТабличныйДокумент.Вывести(Макет);
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Раздел III (Расчет суммы убытка)");
	
КонецПроцедуры

Процедура ПечатьРаздела4(ПараметрыОтчета)
	
	Если ПараметрыОтчета.Период < Дата("20130101") Тогда
		Возврат;
	КонецЕсли;
	
	Период = ПараметрыОтчета.Период;
	Организация = ПараметрыОтчета.Организация;
	СНачалаГода = Истина;
	ТолькоБаза = Истина;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел4";
	
	
	Макет = ПолучитьМакет("Раздел4");
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.ЗаПериод = "за " + ПолучитьПредставлениеПериода(Период);
	ТабличныйДокумент.Вывести(Секция);
	// Проверяем, что объект налогообложения - доходы
	ЗапросНО = Новый Запрос;
	ЗапросНО.Текст =
	"ВЫБРАТЬ
	|	СистемыНалогообложенияОрганизацийСрезПоследних.СтавкаНалога,
	|	СистемыНалогообложенияОрганизацийСрезПоследних.ОбъектНалогообложения
	|ИЗ
	|	РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(&ОкончаниеПериода, Организация = &Организация) КАК СистемыНалогообложенияОрганизацийСрезПоследних
	|;";
	ЗапросНО.УстановитьПараметр("Организация", Организация);
	ЗапросНО.УстановитьПараметр("ОкончаниеПериода", Период);
	Результат = ЗапросНО.Выполнить().Выбрать();
	Результат.Следующий();
	Если Результат.ОбъектНалогообложения <> Перечисления.ВидыОбъектовНалогообложения.Доходы Тогда
		Секция = Макет.ПолучитьОбласть("Итог");
		Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за " + ПолучитьПредставлениеПериода(Период);
		ТабличныйДокумент.Вывести(Секция);
		
		ТабличныйДокумент.ТолькоПросмотр = Истина;
		
		ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Раздел IV (Уменьшение суммы налога)");
		Возврат;
	КонецЕсли;
	
	НачДата = ?(СНачалаГода, НачалоГода(Период), НачалоКвартала(Период));
	КолКварталов = Цел(Месяц(КонецКвартала(Период))/3);
	
	НПП = 1;
	
	СистемаНалогообложения = РегистрыСведений.СистемыНалогообложенияОрганизаций.ПолучитьПоследнее(КонецДня(ПараметрыОтчета.Период), Новый Структура("Организация", Организация));
	УчитыватьСтраховыеВзносы = НЕ (СистемаНалогообложения.ПлательщикЕНВД И СистемаНалогообложения.ПлательщикУСН И Организация.ВидУчетаСтраховыхВзносов = Перечисления.ВидыУчетаСтраховыхВзносов.УчитыватьВЕНВД);
	
	Если НачДата <> НачалоГода(Период) Тогда
		
		ЗапросНПП = Новый Запрос();
		ЗапросНПП.УстановитьПараметр("Организация", Организация);
		ЗапросНПП.УстановитьПараметр("НачДата", НачалоГода(Период));
		ЗапросНПП.УстановитьПараметр("КонДата", НачалоКвартала(Период) - 1);
		ВидыВзаиморасчетовВзносыВПФРИФСС = Новый Массив;
		
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительная);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховая);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСвыше300тр);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ТФОМС);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФФОМС);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФСССотрудники);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФССТравматизмСотрудники);
		
		ЗапросНПП.УстановитьПараметр("ВидыВзаиморасчетовВзносыВПФРИФСС", ВидыВзаиморасчетовВзносыВПФРИФСС);
		
		ЗапросНПП.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РасчетыПоНалогам.Регистратор) КАК КоличествоСтрок
		|ИЗ
		|	РегистрНакопления.РасчетыПоНалогам КАК РасчетыПоНалогам
		|ГДЕ
		|	РасчетыПоНалогам.Период МЕЖДУ &НачДата И &КонДата
		|	И РасчетыПоНалогам.Организация = &Организация
		|	И РасчетыПоНалогам.ВидНалога В(&ВидыВзаиморасчетовВзносыВПФРИФСС)";
		
		Если УчитыватьСтраховыеВзносы Тогда
			
			РезультатЗапроса = ЗапросНПП.Выполнить();
			
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ТаблицаРезультата = РезультатЗапроса.Выгрузить();
				НПП = НПП + ТаблицаРезультата.Итог("КоличествоСтрок");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТекКвартал 				= ПолучитьНомерКвартала(НачДата);
	ПоследнийКварталПериода = ПолучитьНомерКвартала(Период);
	
	ВыборкаЗаписей = ПолучитьЗаписиУменьшенияНалога(НачДата, КонецДня(Период), Организация);
	
	ТаблицаДанныхУменьшенияНалогаПоКвартально = ПолучитьОборотыУменьшенияНалогаПоКвартально(
		НачалоГода(Период), КонецДня(Период), Организация, УчитыватьСтраховыеВзносы);
		
	Если УчитыватьСтраховыеВзносы Тогда
		Пока ВыборкаЗаписей.Следующий() Цикл
			
			КварталЗаписи = Цел(Месяц(КонецКвартала(ВыборкаЗаписей.ПериодНачисления))/3);
			
			Пока КварталЗаписи <> ТекКвартал Цикл
				
				ВывестиУменьшенияНалогаЗаКвартал(ТаблицаДанныхУменьшенияНалогаПоКвартально, Период, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
				ТекКвартал = ТекКвартал + 1;
				
			КонецЦикла;
			
			Секция = Макет.ПолучитьОбласть("Строка");
			Секция.Параметры.НомерПП = НПП;
			Секция.Параметры.ДатаНомер = Формат( ВыборкаЗаписей.ДатаДокумента,"ДФ=dd.MM.yyyy") +" г., №"+
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
						ВыборкаЗаписей.НомерДокумента,
						Истина, 
						Истина);
			Секция.Параметры.Заполнить(ВыборкаЗаписей);
			Секция.Параметры.ИтогоВзносов = ВыборкаЗаписей.ПФР + ВыборкаЗаписей.ФСС + ВыборкаЗаписей.ФОМС + ВыборкаЗаписей.ФСС_НС 
					+ ВыборкаЗаписей.Больничные + ВыборкаЗаписей.Дстрах;
					
			НПП = НПП + 1;
			ТабличныйДокумент.Вывести(Секция);
			
		КонецЦикла;
	КонецЕсли;
	
	Пока ПоследнийКварталПериода >= ТекКвартал Цикл
		
		ВывестиУменьшенияНалогаЗаКвартал(ТаблицаДанныхУменьшенияНалогаПоКвартально, Период, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
		ТекКвартал = ТекКвартал + 1;
		
	КонецЦикла;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Раздел IV (Уменьшение суммы налога)");
	
КонецПроцедуры

Процедура ВывестиУменьшенияНалогаЗаКвартал(ТаблицаДанныхУменьшенияНалогаПоКвартально,  Период, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент)
	
	Секция = Макет.ПолучитьОбласть("Итог");
	РимскоеЧисло = ТекКвартал;
	Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за "
		+ СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(РимскоеЧисло, Ложь) + " квартал";
		
	ПФР 		= 0;
	ФСС 		= 0;
	ФОМС 		= 0;
	ФСС_НС 		= 0;
	Больничные 	= 0;
	Дстрах 		= 0;
		
	Для Каждого ИтогиПериода Из ТаблицаДанныхУменьшенияНалогаПоКвартально Цикл	
		
		Если ПолучитьНомерКвартала(ИтогиПериода.Квартал) > ТекКвартал Тогда
			Прервать;
		КонецЕсли;
		ПФР 		= ПФР + ИтогиПериода.ПФР;
		ФСС 		= ФСС + ИтогиПериода.ФСС;
		ФОМС 		= ФОМС + ИтогиПериода.ФОМС;
		ФСС_НС 		= ФСС_НС + ИтогиПериода.ФСС_НС;
		Больничные 	= Больничные + ИтогиПериода.Больничные;
		Дстрах 		= Дстрах + ИтогиПериода.Дстрах;
		
		ИтогоВзносов = ИтогиПериода.ПФР + ИтогиПериода.ФСС + ИтогиПериода.ФОМС + ИтогиПериода.ФСС_НС + ИтогиПериода.Больничные + ИтогиПериода.Дстрах;
		
		Если ПолучитьНомерКвартала(ИтогиПериода.Квартал) = ТекКвартал Тогда
			Секция.Параметры.Заполнить(ИтогиПериода);
			Секция.Параметры.ИтогоВзносов = ИтогоВзносов;
			ТабличныйДокумент.Вывести(Секция);
		КонецЕсли;
	КонецЦикла;
	
	Если ТекКвартал <> 1 Тогда
		Секция = Макет.ПолучитьОбласть("Итог");
		Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за " + ПолучитьПредставлениеПериода(Период, ДобавитьМесяц(НачалоГода(Период)-1, ТекКвартал*3));
		
		Секция.Параметры.ПФР 		= ПФР;
		Секция.Параметры.ФСС 		= ФСС;
		Секция.Параметры.ФОМС 		= ФОМС;
		Секция.Параметры.ФСС_НС 		= ФСС_НС;
		Секция.Параметры.Больничные 	= Больничные;
		Секция.Параметры.Дстрах 		= Дстрах;
		Секция.Параметры.ИтогоВзносов   = ПФР + ФСС + ФОМС +ФСС_НС + Больничные + Дстрах;
	
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьНомерКвартала(ДатаВКвартале)
	
	Возврат Цел(Месяц(КонецКвартала(ДатаВКвартале))/3);
	
КонецФункции

Функция ПолучитьПредставлениеПериода(Период, КонДата = Неопределено) Экспорт
	
	КонДата = ?(КонДата = Неопределено, Период, КонДата);
	Возврат ПредставлениеПериода(НачалоГода(КонДата), КонецДня(КонДата), "ФП = Истина");
	
КонецФункции

// Получает поквартальные обороты раздела IV книги учета доходов и расходов за период
//
Функция ПолучитьОборотыУменьшенияНалогаПоКвартально(НачалоПериода, КонецПериода, Организация, УчитыватьСтраховыеВзносы)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыПоНалогамОбороты.Период,
	|	РасчетыПоНалогамОбороты.ВидНалога КАК ВидВзаиморасчетов,
	|	РасчетыПоНалогамОбороты.СуммаРасход КАК СуммаУплачено
	|ПОМЕСТИТЬ ВзаиморасчетыСБюджетом
	|ИЗ
	|	РегистрНакопления.РасчетыПоНалогам.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Квартал,
	|			Организация = &Организация
	|				И ВидНалога В (&ВидыВзаиморасчетовВзносыВПФРИФСС)) КАК РасчетыПоНалогамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ &НеУчитыватьСтраховыеВзносы,
	|	УменьшениеНалога.Квартал,
	|	СУММА(УменьшениеНалога.ПФР) КАК ПФР,
	|	СУММА(УменьшениеНалога.ФСС) КАК ФСС,
	|	СУММА(УменьшениеНалога.ФОМС) КАК ФОМС,
	|	СУММА(УменьшениеНалога.ФСС_НС) КАК ФСС_НС,
	|	СУММА(УменьшениеНалога.Больничные) КАК Больничные,
	|	СУММА(УменьшениеНалога.ДСтрах) КАК ДСтрах
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВзаиморасчетыСБюджетом.Период КАК Квартал,
	|		ВзаиморасчетыСБюджетом.СуммаУплачено КАК ПФР,
	|		0 КАК ФСС,
	|		0 КАК ФОМС,
	|		0 КАК ФСС_НС,
	|		0 КАК Больничные,
	|		0 КАК ДСтрах
	|	ИЗ
	|		ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|	ГДЕ
	|		ВзаиморасчетыСБюджетом.ВидВзаиморасчетов В(&ВидыВзаиморасчетовВзносыВПФР)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаиморасчетыСБюджетом.Период,
	|		0,
	|		ВзаиморасчетыСБюджетом.СуммаУплачено,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|	ГДЕ
	|		ВзаиморасчетыСБюджетом.ВидВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФСССотрудники)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаиморасчетыСБюджетом.Период,
	|		0,
	|		0,
	|		ВзаиморасчетыСБюджетом.СуммаУплачено,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|	ГДЕ
	|		ВзаиморасчетыСБюджетом.ВидВзаиморасчетов В(&ВидыВзаиморасчетовВзносыВФОМС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаиморасчетыСБюджетом.Период,
	|		0,
	|		0,
	|		0,
	|		ВзаиморасчетыСБюджетом.СуммаУплачено,
	|		0,
	|		0
	|	ИЗ
	|		ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|	ГДЕ
	|		ВзаиморасчетыСБюджетом.ВидВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФССТравматизмСотрудники)) КАК УменьшениеНалога
	|
	|СГРУППИРОВАТЬ ПО
	|	УменьшениеНалога.Квартал
	|
	|УПОРЯДОЧИТЬ ПО
	|	УменьшениеНалога.Квартал";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НеУчитыватьСтраховыеВзносы,", ?(УчитыватьСтраховыеВзносы, "", "ПЕРВЫЕ 0"));
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ВидыВзаиморасчетовВзносыВПФРИФСС = Новый Массив;
	
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительная);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховая);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСвыше300тр);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ТФОМС);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФФОМС);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФСССотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФССТравматизмСотрудники);
	
	ВидыВзаиморасчетовВзносыВПФР = Новый Массив;
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРНакопительная);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСтраховая);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСвыше300тр);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники);
	
	ВидыВзаиморасчетовВзносыВФОМС = Новый Массив;
	ВидыВзаиморасчетовВзносыВФОМС.Добавить(Справочники.ВидыНалогов.ТФОМС);
	ВидыВзаиморасчетовВзносыВФОМС.Добавить(Справочники.ВидыНалогов.ФФОМС);
	
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВПФРИФСС", ВидыВзаиморасчетовВзносыВПФРИФСС);
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВПФР", ВидыВзаиморасчетовВзносыВПФР);
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВФОМС", ВидыВзаиморасчетовВзносыВФОМС);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьЗаписиУменьшенияНалога(НачалоПериода, КонецПериода, Организация)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ВидыВзаиморасчетовВзносыВПФРИФСС = Новый Массив;
	
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительная);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховая);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСвыше300тр);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ТФОМС);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФФОМС);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФСССотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФССТравматизмСотрудники);
	
	
	ВидыВзаиморасчетовВзносыВПФР = Новый Массив;
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРНакопительная);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСтраховая);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСвыше300тр);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники);
	
	ВидыВзаиморасчетовВзносыВФОМС = Новый Массив;
	ВидыВзаиморасчетовВзносыВФОМС.Добавить(Справочники.ВидыНалогов.ТФОМС);
	ВидыВзаиморасчетовВзносыВФОМС.Добавить(Справочники.ВидыНалогов.ФФОМС);
	
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВПФРИФСС", ВидыВзаиморасчетовВзносыВПФРИФСС);
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВПФР", ВидыВзаиморасчетовВзносыВПФР);
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВФОМС", ВидыВзаиморасчетовВзносыВФОМС);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыПоНалогам.Период,
	|	РасчетыПоНалогам.Регистратор.Дата КАК ДатаДокумента,
	|	РасчетыПоНалогам.Регистратор.Номер КАК НомерДокумента,
	|	РасчетыПоНалогам.ВидНалога КАК ВидВзаиморасчетов,
	|	РасчетыПоНалогам.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВзаиморасчетыСБюджетом
	|ИЗ
	|	РегистрНакопления.РасчетыПоНалогам КАК РасчетыПоНалогам
	|ГДЕ
	|	РасчетыПоНалогам.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасчетыПоНалогам.Организация = &Организация
	|	И РасчетыПоНалогам.ВидНалога В(&ВидыВзаиморасчетовВзносыВПФРИФСС)
	|	И РасчетыПоНалогам.ВидДвижения = Значение(ВидДвиженияНакопления.Расход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВзаиморасчетыСБюджетом.Период КАК ПериодНачисления,
	|	ВзаиморасчетыСБюджетом.ДатаДокумента КАК ДатаДокумента,
	|	ВзаиморасчетыСБюджетом.НомерДокумента КАК НомерДокумента,
	|	ВзаиморасчетыСБюджетом.Сумма КАК ПФР,
	|	0 КАК ФСС,
	|	0 КАК ФОМС,
	|	0 КАК ФСС_НС,
	|	0 КАК Больничные,
	|	0 КАК ДСтрах
	|ИЗ
	|	ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|ГДЕ
	|	ВзаиморасчетыСБюджетом.ВидВзаиморасчетов В(&ВидыВзаиморасчетовВзносыВПФР)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСБюджетом.Период,
	|	ВзаиморасчетыСБюджетом.ДатаДокумента,
	|	ВзаиморасчетыСБюджетом.НомерДокумента,
	|	0,
	|	ВзаиморасчетыСБюджетом.Сумма,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|ГДЕ
	|	ВзаиморасчетыСБюджетом.ВидВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФСССотрудники)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСБюджетом.Период,
	|	ВзаиморасчетыСБюджетом.ДатаДокумента,
	|	ВзаиморасчетыСБюджетом.НомерДокумента,
	|	0,
	|	0,
	|	ВзаиморасчетыСБюджетом.Сумма,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|ГДЕ
	|	ВзаиморасчетыСБюджетом.ВидВзаиморасчетов В(&ВидыВзаиморасчетовВзносыВФОМС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСБюджетом.Период,
	|	ВзаиморасчетыСБюджетом.ДатаДокумента,
	|	ВзаиморасчетыСБюджетом.НомерДокумента,
	|	0,
	|	0,
	|	0,
	|	ВзаиморасчетыСБюджетом.Сумма,
	|	0,
	|	0
	|ИЗ
	|	ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|ГДЕ
	|	ВзаиморасчетыСБюджетом.ВидВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФССТравматизмСотрудники)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВзаиморасчетыСБюджетом.Период,
	|	ВзаиморасчетыСБюджетом.ДатаДокумента";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

#КонецЕсли