
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ПриОпределенииНастроекОтчета(НастройкиОтчета, НастройкиВариантов) Экспорт
	
	НастройкиОтчета.ПоказыватьГруппуКолонкиНаФормеОтчета = Ложь;
	НастройкиОтчета.ПоказыватьГруппуСтрокиНаФормеОтчета = Ложь;
	НастройкиОтчета.ПоказыватьНастройкиДиаграммыНаФормеОтчета = Ложь;
	НастройкиОтчета.ПоказыватьГруппуФильтрыНаФормеОтчета = Ложь;
	НастройкиОтчета.РазрешитьРедактироватьСКД = Ложь;
	НастройкиОтчета.ПрограммноеИзменениеФормыОтчета = Истина;
	
	НастройкиВариантов["АктСверкиКонтекст"].Рекомендуемый = Истина;
	
	УстановитьТегиВариантов(НастройкиВариантов);
	ДобавитьОписанияСвязанныхПолей(НастройкиВариантов);
	
КонецПроцедуры

Процедура ПриКонтекстномОткрытии(Объект, ПолеСвязи, Отборы, Отказ) Экспорт
	
	Если ПолеСвязи = "Контрагент" Тогда
		Отборы.Вставить(ПолеСвязи, Объект.Контрагент);
	КонецЕсли;
	
	Если ПолеСвязи = "Договор" Тогда
		Отборы.Вставить(ПолеСвязи, Объект.Договор);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьНастройкиНаФорме(НастройкиОтчета, НастройкиСКД, Форма) Экспорт
	
	ПараметрКонтрагент = НастройкиСКД.ПараметрыДанных.Элементы.Найти("Контрагент");
	ПараметрДоговор = НастройкиСКД.ПараметрыДанных.Элементы.Найти("Договор");
	
	ВалютаДоговора = ВалютаДоговора(ПараметрКонтрагент.Значение, ПараметрДоговор.Значение);
	
	Если ВалютаДоговора = Константы.ВалютаУчета.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиСКД.ПараметрыДанных.УстановитьЗначениеПараметра("ВалютаДоговора", ВалютаДоговора);
	
	ЗначениеПоУмолчанию = НастройкиСКД.ПараметрыДанных.Элементы.Найти("Режим").Значение;
	
	Стр = Форма.ПоляНастроек.ПолучитьЭлементы().Добавить();
	Стр.Тип = "Параметр";
	Стр.Поле = "Режим";
	Стр.ТипЗначения = Новый ОписаниеТипов("Строка");
	Стр.Заголовок = НСтр("ru = 'Режим'");
	Стр.ВидЭлемента = "Поле";
	Стр.Реквизиты = Новый Структура;
	Стр.Элементы = Новый Структура;
	Стр.ДополнительныеПараметры = Новый Структура;
	Стр.Реквизиты.Вставить("Режим", ЗначениеПоУмолчанию);
	МассивРеквизитов = Новый Массив;
	Для каждого ОписаниеРеквизита Из Стр.Реквизиты Цикл
		МассивРеквизитов.Добавить(Новый РеквизитФормы(ОписаниеРеквизита.Ключ, Стр.ТипЗначения,, Стр.Заголовок));
	КонецЦикла;
	Стр.Создан = Истина;
	
	Форма.ИзменитьРеквизиты(МассивРеквизитов);
	
	Форма["Режим"] = ЗначениеПоУмолчанию;
	НастройкиСКД.ПараметрыДанных.УстановитьЗначениеПараметра(Стр.Поле, ЗначениеПоУмолчанию);
	Элемент = Форма.Элементы.Добавить("Режим", Тип("ПолеФормы"), Форма.Элементы.ГруппаПараметрыЭлементы);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	Элемент.РежимВыбораИзСписка = Истина;
	Элемент.ПутьКДанным = "Режим";
	Для Каждого КлючИЗначение Из НастройкиСКД.ПараметрыДанных.ДоступныеПараметры.Элементы.Найти("Режим").ДоступныеЗначения Цикл
		Элемент.СписокВыбора.Добавить(КлючИЗначение.Значение, КлючИЗначение.Представление);
	КонецЦикла;
	Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПараметрПриИзменении");
	Стр.Элементы.Вставить(Элемент.Имя, Элемент.ПутьКДанным);
	
	Форма.Элементы.СтраницыНастройки.Видимость = Истина;
	
КонецПроцедуры

Процедура ПриИзмененииНестандартногоРеквизита(Тип, ИмяПоля, СтруктураЗначений, НастройкиСКД, Форма, ИмяЭлемента) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Период = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")).Значение;
	Контрагент = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Контрагент")).Значение;
	Договор = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Договор")).Значение;
	
	//Проверим параметры периода
	Если НЕ Период.ДатаНачала = Дата(1,1,1)
		И НЕ Период.ДатаОкончания = Дата(1,1,1)
		И Период.ДатаНачала > Период.ДатаОкончания Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ru = 'Дата начала периода не должна превышать дату окончания.'");
		
		Возврат;
		
	КонецЕсли;
	
	ТабличныйДокумент = Сформировать(Период, Контрагент, Договор);
	
	ДокументРезультат.Вывести(ТабличныйДокумент);
	ДокументРезультат.ФиксацияСверху = ТабличныйДокумент.ФиксацияСверху;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьТегиВариантов(НастройкиВариантов)
	
	НастройкиВариантов["АктСверкиКонтекст"].Теги = НСТР("ru = 'Покупатели,Контрагенты'");
	
КонецПроцедуры

Процедура ДобавитьОписанияСвязанныхПолей(НастройкиВариантов)
	
	СтруктураВарианта = НастройкиВариантов["АктСверкиКонтекст"];
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Договор", "Справочник.ДоговорыКонтрагентов",,, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Справочник.Контрагенты",,, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ОтчетКомиссионера",, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ПриходнаяНакладная",, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.АктВыполненныхРабот",, Истина, Истина);
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.РасходСоСчета", Перечисления.ВидыОперацийРасходСоСчета.Поставщику, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.РасходСоСчета", Перечисления.ВидыОперацийРасходСоСчета.Покупателю, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.РасходСоСчета", Перечисления.ВидыОперацийРасходСоСчета.ПрочиеРасчеты, Истина, Истина);
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ОтчетОПереработке",, Истина, Истина);
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ПоступлениеВКассу", Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ПоступлениеВКассу", Перечисления.ВидыОперацийПоступлениеВКассу.ОтПоставщика, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ПоступлениеВКассу", Перечисления.ВидыОперацийПоступлениеВКассу.ПрочиеРасчеты, Истина, Истина);
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ЗаказПокупателя",, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.СчетНаОплату",, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ОтчетПереработчика",, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ОтчетКомитенту",, Истина, Истина);
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.РасходИзКассы", Перечисления.ВидыОперацийРасходИзКассы.Поставщику, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.РасходИзКассы", Перечисления.ВидыОперацийРасходИзКассы.Покупателю, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.РасходИзКассы", Перечисления.ВидыОперацийРасходИзКассы.ПрочиеРасчеты, Истина, Истина);
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ЗаказПоставщику",, Истина, Истина);
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ПоступлениеНаСчет", Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПокупателя, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ПоступлениеНаСчет", Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПоставщика, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ПоступлениеНаСчет", Перечисления.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты, Истина, Истина);
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.СчетНаОплатуПоставщика",, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Контрагент", "Документ.ДополнительныеРасходы",, Истина, Истина);
	
КонецПроцедуры

Функция Сформировать(Период, Контрагент, Договор)
	
	ПараметрРежим = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Режим").Значение;
	
	Результат = Новый ТабличныйДокумент;
	Если ПараметрРежим = "ВВалютеДоговора" Тогда
		ПараметрВалюта = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ВалютаДоговора").Значение;
	Иначе
		ПараметрВалюта = Константы.ВалютаУчета.Получить();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Период.ДатаНачала));
	КонецПериода = ?(Период.ДатаОкончания = '3999-12-31' ИЛИ Период.ДатаОкончания = '0001-01-01', '0001-01-01', КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Валюта", ПараметрВалюта);
	Запрос.УстановитьПараметр("Режим", ПараметрРежим);
	
	ПредставлениеВалюты = УправлениеНебольшойФирмойПовтИсп.ПолучитьСимвольноеПредставлениеВалюты(ПараметрВалюта);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыСПокупателями.Регистратор,
	|	РасчетыСПокупателями.Контрагент,
	|	РасчетыСПокупателями.Договор,
	|	РасчетыСПокупателями.СодержаниеПроводки
	|ИЗ
	|	РегистрНакопления.РасчетыСПокупателями КАК РасчетыСПокупателями
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА РасчетыСПокупателями.Период >= &НачалоПериода
	|			ИНАЧЕ РасчетыСПокупателями.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		КОНЕЦ
	|	И РасчетыСПокупателями.Контрагент = &Контрагент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСПоставщиками.Регистратор,
	|	РасчетыСПоставщиками.Контрагент,
	|	РасчетыСПоставщиками.Договор,
	|	РасчетыСПоставщиками.СодержаниеПроводки
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА РасчетыСПоставщиками.Период >= &НачалоПериода
	|			ИНАЧЕ РасчетыСПоставщиками.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		КОНЕЦ
	|	И РасчетыСПоставщиками.Контрагент = &Контрагент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСПрочимиКонтрагентами.Регистратор,
	|	РасчетыСПрочимиКонтрагентами.Контрагент,
	|	РасчетыСПрочимиКонтрагентами.Договор,
	|	РасчетыСПрочимиКонтрагентами.СодержаниеПроводки
	|ИЗ
	|	РегистрНакопления.РасчетыСПрочимиКонтрагентами КАК РасчетыСПрочимиКонтрагентами
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА РасчетыСПрочимиКонтрагентами.Период >= &НачалоПериода
	|			ИНАЧЕ РасчетыСПрочимиКонтрагентами.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		КОНЕЦ
	|	И РасчетыСПрочимиКонтрагентами.Контрагент = &Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	РасходнаяНакладнаяЗапасы.Количество КАК Количество,
	|	РасходнаяНакладнаяЗапасы.Всего КАК СтоимостьРасход,
	|	0 КАК СтоимостьПриход,
	|	РасходнаяНакладнаяЗапасы.Всего / РасходнаяНакладнаяЗапасы.Количество КАК Цена,
	|	РасходнаяНакладнаяЗапасы.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяЗапасы.Ссылка.ВалютаДокумента = &Валюта
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Эквивалент,
	|	РасходнаяНакладнаяЗапасы.Ссылка.ВалютаДокумента КАК Валюта,
	|	РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ РасшифровкаТоварыИУслуги
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка.Контрагент = &Контрагент
	|	И РасходнаяНакладнаяЗапасы.Ссылка.Проведен
	|{ГДЕ
	|	(РасходнаяНакладнаяЗапасы.Ссылка.Дата >= &НачалоПериода) КАК НачалоПериода,
	|	(РасходнаяНакладнаяЗапасы.Ссылка.Дата <= &КонецПериода) КАК КонецПериода}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АктВыполненныхРаботРаботыИУслуги.Номенклатура,
	|	АктВыполненныхРаботРаботыИУслуги.Количество,
	|	АктВыполненныхРаботРаботыИУслуги.Всего,
	|	0,
	|	АктВыполненныхРаботРаботыИУслуги.Всего / АктВыполненныхРаботРаботыИУслуги.Количество,
	|	АктВыполненныхРаботРаботыИУслуги.Ссылка,
	|	ВЫБОР
	|		КОГДА АктВыполненныхРаботРаботыИУслуги.Ссылка.ВалютаДокумента = &Валюта
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	АктВыполненныхРаботРаботыИУслуги.Ссылка.ВалютаДокумента,
	|	АктВыполненныхРаботРаботыИУслуги.ЕдиницаИзмерения
	|ИЗ
	|	Документ.АктВыполненныхРабот.РаботыИУслуги КАК АктВыполненныхРаботРаботыИУслуги
	|ГДЕ
	|	АктВыполненныхРаботРаботыИУслуги.Ссылка.Контрагент = &Контрагент
	|	И АктВыполненныхРаботРаботыИУслуги.Ссылка.Проведен
	|{ГДЕ
	|	(АктВыполненныхРаботРаботыИУслуги.Ссылка.Дата >= &НачалоПериода) КАК НачалоПериода,
	|	(АктВыполненныхРаботРаботыИУслуги.Ссылка.Дата <= &КонецПериода) КАК КонецПериода}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриходнаяНакладнаяЗапасы.Номенклатура,
	|	ПриходнаяНакладнаяЗапасы.Количество,
	|	0,
	|	ПриходнаяНакладнаяЗапасы.Всего,
	|	ПриходнаяНакладнаяЗапасы.Всего / ПриходнаяНакладнаяЗапасы.Количество,
	|	ПриходнаяНакладнаяЗапасы.Ссылка,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяЗапасы.Ссылка.ВалютаДокумента = &Валюта
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.ВалютаДокумента,
	|	ПриходнаяНакладнаяЗапасы.ЕдиницаИзмерения
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|ГДЕ
	|	ПриходнаяНакладнаяЗапасы.Ссылка.Контрагент = &Контрагент
	|	И ПриходнаяНакладнаяЗапасы.Ссылка.Проведен
	|{ГДЕ
	|	(ПриходнаяНакладнаяЗапасы.Ссылка.Дата >= &НачалоПериода) КАК НачалоПериода,
	|	(ПриходнаяНакладнаяЗапасы.Ссылка.Дата <= &КонецПериода) КАК КонецПериода}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА &Режим = ""ВВалютеДоговора""
	|			ТОГДА ДолгиОстаткиИОбороты.СуммаВалОборот
	|		ИНАЧЕ ДолгиОстаткиИОбороты.СуммаОборот
	|	КОНЕЦ КАК СуммаОборот,
	|	ДолгиОстаткиИОбороты.Регистратор КАК Регистратор,
	|	ДолгиОстаткиИОбороты.Регистратор.Дата КАК Дата,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Эквивалент, ВЫБОР
	|			КОГДА ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеВКассу
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеНаСчет
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходИзКассы
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходСоСчета
	|				ТОГДА ВЫБОР
	|						КОГДА НЕ ДолгиОстаткиИОбороты.Регистратор.ВалютаДенежныхСредств = &Валюта
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Эквивалент,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.СтоимостьПриход, 0) КАК СтоимостьПриход,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.СтоимостьРасход, 0) КАК СтоимостьРасход,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Валюта, ВЫБОР
	|			КОГДА ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеВКассу
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеНаСчет
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходИзКассы
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходСоСчета
	|				ТОГДА ДолгиОстаткиИОбороты.Регистратор.ВалютаДенежныхСредств
	|			ИНАЧЕ &Валюта
	|		КОНЕЦ) КАК Валюта,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.ЕдиницаИзмерения, НЕОПРЕДЕЛЕНО) КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеНаСчет
	|				ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходИзКассы
	|				ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходСоСчета
	|			ТОГДА ДолгиОстаткиИОбороты.Регистратор.СуммаДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СуммаДенег
	|ПОМЕСТИТЬ РасчетыСПокупателями
	|ИЗ
	|	РегистрНакопления.РасчетыСПокупателями.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Контрагент = &Контрагент) КАК ДолгиОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаТоварыИУслуги КАК РасшифровкаТоварыИУслуги
	|		ПО ДолгиОстаткиИОбороты.Регистратор = РасшифровкаТоварыИУслуги.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА &Режим = ""ВВалютеДоговора""
	|			ТОГДА -ДолгиОстаткиИОбороты.СуммаВалОборот
	|		ИНАЧЕ -ДолгиОстаткиИОбороты.СуммаОборот
	|	КОНЕЦ КАК СуммаОборот,
	|	ДолгиОстаткиИОбороты.Регистратор КАК Регистратор,
	|	ДолгиОстаткиИОбороты.Регистратор.Дата КАК Дата,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Эквивалент, ВЫБОР
	|			КОГДА ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеВКассу
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеНаСчет
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходИзКассы
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходСоСчета
	|				ТОГДА ВЫБОР
	|						КОГДА НЕ ДолгиОстаткиИОбороты.Регистратор.ВалютаДенежныхСредств = &Валюта
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Эквивалент,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.СтоимостьПриход, 0) КАК СтоимостьПриход,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.СтоимостьРасход, 0) КАК СтоимостьРасход,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Валюта, ВЫБОР
	|			КОГДА ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеВКассу
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеНаСчет
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходИзКассы
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходСоСчета
	|				ТОГДА ДолгиОстаткиИОбороты.Регистратор.ВалютаДенежныхСредств
	|			ИНАЧЕ &Валюта
	|		КОНЕЦ) КАК Валюта,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.ЕдиницаИзмерения, НЕОПРЕДЕЛЕНО) КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеНаСчет
	|				ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходИзКассы
	|				ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходСоСчета
	|			ТОГДА ДолгиОстаткиИОбороты.Регистратор.СуммаДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СуммаДенег
	|ПОМЕСТИТЬ РасчетыСПоставщиками
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Контрагент = &Контрагент) КАК ДолгиОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаТоварыИУслуги КАК РасшифровкаТоварыИУслуги
	|		ПО ДолгиОстаткиИОбороты.Регистратор = РасшифровкаТоварыИУслуги.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА &Режим = ""ВВалютеДоговора""
	|			ТОГДА ДолгиОстаткиИОбороты.СуммаВалОборот
	|		ИНАЧЕ ДолгиОстаткиИОбороты.СуммаОборот
	|	КОНЕЦ КАК СуммаОборот,
	|	ДолгиОстаткиИОбороты.Регистратор КАК Регистратор,
	|	ДолгиОстаткиИОбороты.Регистратор.Дата КАК Дата,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Эквивалент, ВЫБОР
	|			КОГДА ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеВКассу
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеНаСчет
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходИзКассы
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходСоСчета
	|				ТОГДА ВЫБОР
	|						КОГДА НЕ ДолгиОстаткиИОбороты.Регистратор.ВалютаДенежныхСредств = &Валюта
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Эквивалент,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.СтоимостьПриход, 0) КАК СтоимостьПриход,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.СтоимостьРасход, 0) КАК СтоимостьРасход,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.Валюта, ВЫБОР
	|			КОГДА ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеВКассу
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеНаСчет
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходИзКассы
	|					ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходСоСчета
	|				ТОГДА ДолгиОстаткиИОбороты.Регистратор.ВалютаДенежныхСредств
	|			ИНАЧЕ &Валюта
	|		КОНЕЦ) КАК Валюта,
	|	ЕСТЬNULL(РасшифровкаТоварыИУслуги.ЕдиницаИзмерения, НЕОПРЕДЕЛЕНО) КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеНаСчет
	|				ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходИзКассы
	|				ИЛИ ДолгиОстаткиИОбороты.Регистратор ССЫЛКА Документ.РасходСоСчета
	|			ТОГДА ДолгиОстаткиИОбороты.Регистратор.СуммаДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СуммаДенег
	|ПОМЕСТИТЬ РасчетыСПрочимиКонтрагентами
	|ИЗ
	|	РегистрНакопления.РасчетыСПрочимиКонтрагентами.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Контрагент = &Контрагент) КАК ДолгиОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаТоварыИУслуги КАК РасшифровкаТоварыИУслуги
	|		ПО ДолгиОстаткиИОбороты.Регистратор = РасшифровкаТоварыИУслуги.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.СуммаОборот КАК СуммаОборот,
	|	ВложенныйЗапрос.Регистратор КАК Регистратор,
	|	ВложенныйЗапрос.Дата,
	|	ВложенныйЗапрос.Эквивалент КАК Эквивалент,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.СтоимостьПриход,
	|	ВложенныйЗапрос.СтоимостьРасход,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Валюта,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.СуммаДенег
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыСПокупателями.СуммаОборот КАК СуммаОборот,
	|		РасчетыСПокупателями.Регистратор КАК Регистратор,
	|		РасчетыСПокупателями.Дата КАК Дата,
	|		РасчетыСПокупателями.Эквивалент КАК Эквивалент,
	|		РасчетыСПокупателями.Номенклатура КАК Номенклатура,
	|		РасчетыСПокупателями.Количество КАК Количество,
	|		РасчетыСПокупателями.СтоимостьПриход КАК СтоимостьПриход,
	|		РасчетыСПокупателями.СтоимостьРасход КАК СтоимостьРасход,
	|		РасчетыСПокупателями.Цена КАК Цена,
	|		РасчетыСПокупателями.Валюта КАК Валюта,
	|		РасчетыСПокупателями.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		РасчетыСПокупателями.СуммаДенег КАК СуммаДенег
	|	ИЗ
	|		РасчетыСПокупателями КАК РасчетыСПокупателями
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыСПоставщиками.СуммаОборот,
	|		РасчетыСПоставщиками.Регистратор,
	|		РасчетыСПоставщиками.Дата,
	|		РасчетыСПоставщиками.Эквивалент,
	|		РасчетыСПоставщиками.Номенклатура,
	|		РасчетыСПоставщиками.Количество,
	|		РасчетыСПоставщиками.СтоимостьПриход,
	|		РасчетыСПоставщиками.СтоимостьРасход,
	|		РасчетыСПоставщиками.Цена,
	|		РасчетыСПоставщиками.Валюта,
	|		РасчетыСПоставщиками.ЕдиницаИзмерения,
	|		РасчетыСПоставщиками.СуммаДенег
	|	ИЗ
	|		РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыСПрочимиКонтрагентами.СуммаОборот,
	|		РасчетыСПрочимиКонтрагентами.Регистратор,
	|		РасчетыСПрочимиКонтрагентами.Дата,
	|		РасчетыСПрочимиКонтрагентами.Эквивалент,
	|		РасчетыСПрочимиКонтрагентами.Номенклатура,
	|		РасчетыСПрочимиКонтрагентами.Количество,
	|		РасчетыСПрочимиКонтрагентами.СтоимостьПриход,
	|		РасчетыСПрочимиКонтрагентами.СтоимостьРасход,
	|		РасчетыСПрочимиКонтрагентами.Цена,
	|		РасчетыСПрочимиКонтрагентами.Валюта,
	|		РасчетыСПрочимиКонтрагентами.ЕдиницаИзмерения,
	|		РасчетыСПрочимиКонтрагентами.СуммаДенег
	|	ИЗ
	|		РасчетыСПрочимиКонтрагентами КАК РасчетыСПрочимиКонтрагентами) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Дата
	|ИТОГИ
	|	МАКСИМУМ(СуммаОборот),
	|	МАКСИМУМ(Эквивалент)
	|ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Режим = ""ВВалютеДоговора""
	|			ТОГДА СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаВалНачальныйОстаток, 0))
	|		ИНАЧЕ СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаНачальныйОстаток, 0))
	|	КОНЕЦ КАК СуммаНачальныйОстаток,
	|	ВЫБОР
	|		КОГДА &Режим = ""ВВалютеДоговора""
	|			ТОГДА СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаВалКонечныйОстаток, 0))
	|		ИНАЧЕ СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаКонечныйОстаток, 0))
	|	КОНЕЦ КАК СуммаКонечныйОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ДолгиОстаткиИОбороты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	|		СУММА(ДолгиОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток,
	|		СУММА(ДолгиОстаткиИОбороты.СуммаВалНачальныйОстаток) КАК СуммаВалНачальныйОстаток,
	|		СУММА(ДолгиОстаткиИОбороты.СуммаВалКонечныйОстаток) КАК СуммаВалКонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, Движения, Контрагент = &Контрагент) КАК ДолгиОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		-СУММА(ДолгиОстаткиИОбороты.СуммаНачальныйОстаток),
	|		-СУММА(ДолгиОстаткиИОбороты.СуммаКонечныйОстаток),
	|		-СУММА(ДолгиОстаткиИОбороты.СуммаВалНачальныйОстаток),
	|		-СУММА(ДолгиОстаткиИОбороты.СуммаВалКонечныйОстаток)
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, Движения, Контрагент = &Контрагент) КАК ДолгиОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СУММА(ДолгиОстаткиИОбороты.СуммаНачальныйОстаток),
	|		СУММА(ДолгиОстаткиИОбороты.СуммаКонечныйОстаток),
	|		СУММА(ДолгиОстаткиИОбороты.СуммаВалНачальныйОстаток),
	|		СУММА(ДолгиОстаткиИОбороты.СуммаВалКонечныйОстаток)
	|	ИЗ
	|		РегистрНакопления.РасчетыСПрочимиКонтрагентами.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, Движения, Контрагент = &Контрагент) КАК ДолгиОстаткиИОбороты) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Режим = ""ВВалютеДоговора""
	|			ТОГДА СУММА(ЕСТЬNULL(ВложенныйЗапрос.УвеличениеДолгаВал, 0))
	|		ИНАЧЕ СУММА(ЕСТЬNULL(ВложенныйЗапрос.УвеличениеДолга, 0))
	|	КОНЕЦ КАК УвеличениеДолга,
	|	ВЫБОР
	|		КОГДА &Режим = ""ВВалютеДоговора""
	|			ТОГДА СУММА(ЕСТЬNULL(ВложенныйЗапрос.УменьшениеДолгаВал, 0))
	|		ИНАЧЕ СУММА(ЕСТЬNULL(ВложенныйЗапрос.УменьшениеДолга, 0))
	|	КОНЕЦ КАК УменьшениеДолга
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаОборот > 0
	|					ТОГДА ДолгиОстаткиИОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК УвеличениеДолга,
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаОборот < 0
	|					ТОГДА -ДолгиОстаткиИОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК УменьшениеДолга,
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаВалОборот > 0
	|					ТОГДА ДолгиОстаткиИОбороты.СуммаВалОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК УвеличениеДолгаВал,
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаВалОборот < 0
	|					ТОГДА -ДолгиОстаткиИОбороты.СуммаВалОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК УменьшениеДолгаВал
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Контрагент = &Контрагент) КАК ДолгиОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаОборот < 0
	|					ТОГДА -ДолгиОстаткиИОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаОборот > 0
	|					ТОГДА ДолгиОстаткиИОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаВалОборот < 0
	|					ТОГДА -ДолгиОстаткиИОбороты.СуммаВалОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаВалОборот > 0
	|					ТОГДА ДолгиОстаткиИОбороты.СуммаВалОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ)
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Контрагент = &Контрагент) КАК ДолгиОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаОборот > 0
	|					ТОГДА ДолгиОстаткиИОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаОборот < 0
	|					ТОГДА -ДолгиОстаткиИОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаВалОборот > 0
	|					ТОГДА ДолгиОстаткиИОбороты.СуммаВалОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ВЫБОР
	|				КОГДА ДолгиОстаткиИОбороты.СуммаВалОборот < 0
	|					ТОГДА -ДолгиОстаткиИОбороты.СуммаВалОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ)
	|	ИЗ
	|		РегистрНакопления.РасчетыСПрочимиКонтрагентами.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Контрагент = &Контрагент) КАК ДолгиОстаткиИОбороты) КАК ВложенныйЗапрос";
	
	Если ЗначениеЗаполнено(Запрос.Параметры.Договор) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Контрагент = &Контрагент", "Договор = &Договор");
	КонецЕсли;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаСодержаниеПроводки = РезультатыЗапроса.Получить(0).Выбрать();
	ВыборкаДокументы = РезультатыЗапроса.Получить(5).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтоги = РезультатыЗапроса.Получить(6).Выбрать();
	ВыборкаОбороты = РезультатыЗапроса.Получить(7).Выбрать();
	
	Макет = ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьРасшифровкаТовары = Макет.ПолучитьОбласть("РасшифровкаТовары");
	ОбластьРасшифровкаДеньги = Макет.ПолучитьОбласть("РасшифровкаДеньги");
	ОбластьДолгНачало = Макет.ПолучитьОбласть("Остаток");
	ОбластьОборот = Макет.ПолучитьОбласть("Оборот");
	ОбластьДолгКонец = Макет.ПолучитьОбласть("Остаток");
	
	ОбластьЗаголовок.Параметры.Валюта = Строка(ПараметрВалюта);
	ОбластьЗаголовок.Параметры.Контрагент = Контрагент;
	Если НЕ ЗначениеЗаполнено(Период.ДатаНачала) И НЕ ЗначениеЗаполнено(КонецПериода) Тогда
		ОбластьЗаголовок.Параметры.Период = НСтр("ru = 'весь период работы'");
	Иначе
		ОбластьЗаголовок.Параметры.Период = ПредставлениеПериода(Период.ДатаНачала, КонецПериода);
	КонецЕсли; 
	Результат.Вывести(ОбластьЗаголовок);
	
	ВыборкаИтоги.Следующий();
	ВыборкаОбороты.Следующий();
	
	Если ЗначениеЗаполнено(Период.ДатаНачала) И ВыборкаИтоги.Количество()>0 И НЕ ВыборкаИтоги.СуммаНачальныйОстаток=0 Тогда
		ШаблонДолг = ?(ЗначениеЗаполнено(ВыборкаИтоги.СуммаНачальныйОстаток) И ВыборкаИтоги.СуммаНачальныйОстаток<0, 
		НСтр("ru = 'Наш долг перед контрагентом на %1'"), НСтр("ru = 'Долг контрагента перед нами на %1'"));
		ОбластьДолгНачало.Параметры.ОписаниеДолга = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонДолг, Контрагент, Формат(Период.ДатаНачала, "ДЛФ=D")); 
		ОбластьДолгНачало.Параметры.Остаток = ?(ВыборкаИтоги.СуммаНачальныйОстаток<0, -ВыборкаИтоги.СуммаНачальныйОстаток, ВыборкаИтоги.СуммаНачальныйОстаток);
		Результат.Вывести(ОбластьДолгНачало);
	КонецЕсли;
	
	Если ВыборкаОбороты.Количество()>0 Тогда
		ОбластьОборот.Параметры.Заполнить(ВыборкаОбороты);
		Результат.Вывести(ОбластьОборот);
	КонецЕсли; 
	
	Если ВыборкаИтоги.Количество()>0 Тогда
		ПредставлениеПериода = ?(ЗначениеЗаполнено(КонецПериода), Формат(КонецПериода, "ДЛФ=D"), НСтр("ru = 'текущий момент'"));
		Если ВыборкаИтоги.СуммаКонечныйОстаток=0 Тогда
			ШаблонДолг = НСтр("ru = 'На %1 долги и авансы отсутствуют'");
			ОбластьДолгКонец.Параметры.ОписаниеДолга = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонДолг, ПредставлениеПериода); 
		Иначе
			ШаблонДолг = ?(ЗначениеЗаполнено(ВыборкаИтоги.СуммаКонечныйОстаток) И ВыборкаИтоги.СуммаКонечныйОстаток<0, 
			НСтр("ru = 'Наш долг перед контрагентом на %1'"), НСтр("ru = 'Долг контрагента перед нами на %1'"));
			ОбластьДолгКонец.Параметры.ОписаниеДолга = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонДолг, ПредставлениеПериода); 
			ОбластьДолгКонец.Параметры.Остаток = ?(ВыборкаИтоги.СуммаКонечныйОстаток<0, -ВыборкаИтоги.СуммаКонечныйОстаток, ВыборкаИтоги.СуммаКонечныйОстаток);
		КонецЕсли; 
		Результат.Вывести(ОбластьДолгКонец);
	КонецЕсли;
	
	Результат.Вывести(ОбластьШапка);

	Результат.НачатьАвтогруппировкуСтрок();
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если ВыборкаДокументы.СуммаОборот = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаПриход = ?(ВыборкаДокументы.СуммаОборот > 0, ВыборкаДокументы.СуммаОборот, 0);
		СуммаРасход = ?(ВыборкаДокументы.СуммаОборот < 0, -ВыборкаДокументы.СуммаОборот, 0);
		
		ОбластьСтрока.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьСтрока.Параметры.ЭквПриход = ?(ЗначениеЗаполнено(СуммаПриход) И ВыборкаДокументы.Эквивалент, НСтр("ru = '(экв)'"), "");
		ОбластьСтрока.Параметры.ЭквРасход = ?(ЗначениеЗаполнено(СуммаРасход) И ВыборкаДокументы.Эквивалент, НСтр("ru = '(экв)'"), "");
		ОбластьСтрока.Параметры.ВалютаПриход = ?(ЗначениеЗаполнено(СуммаПриход), ПредставлениеВалюты, "");
		ОбластьСтрока.Параметры.ВалютаРасход = ?(ЗначениеЗаполнено(СуммаРасход), ПредставлениеВалюты, "");
		ОбластьСтрока.Параметры.СуммаПриход = Формат(СуммаПриход, "ЧДЦ=2; ЧН=' '");
		ОбластьСтрока.Параметры.СуммаРасход = Формат(СуммаРасход, "ЧДЦ=2; ЧН=' '");
		Результат.Вывести(ОбластьСтрока, 1);
		
		ВыборкаДетальныеЗаписи = ВыборкаДокументы.Выбрать();
		РасшифровкаДеньги = "";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.ЗакрытиеМесяца") Тогда
				ВыборкаСодержаниеПроводки.Сбросить();
				Пока ВыборкаСодержаниеПроводки.НайтиСледующий(Новый Структура("Регистратор", ВыборкаДетальныеЗаписи.Регистратор)) Цикл
					РасшифровкаДеньги = РасшифровкаДеньги
					+ ?(ПустаяСтрока(РасшифровкаДеньги), "", "; ")
					+ ВыборкаСодержаниеПроводки.СодержаниеПроводки;
				КонецЦикла;
			ИначеЕсли ВыборкаДетальныеЗаписи.СуммаДенег <> Неопределено Тогда
				// Расшифровка деньги
				ПредставлениеВалютыРасшифровки = УправлениеНебольшойФирмойПовтИсп.ПолучитьСимвольноеПредставлениеВалюты(ВыборкаДетальныеЗаписи.Валюта);
				РасшифровкаДеньги = РасшифровкаДеньги
				+ ?(ПустаяСтрока(РасшифровкаДеньги), "", "; ")
				+ Формат(ВыборкаДетальныеЗаписи.СуммаДенег, "ЧДЦ=2; ЧН=") + " "
				+ ПредставлениеВалютыРасшифровки;
			ИначеЕсли ВыборкаДетальныеЗаписи.Номенклатура <> Неопределено Тогда
				// Расшифровка товары
				ОбластьРасшифровкаТовары.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				ПредставлениеВалютыРасшифровки = УправлениеНебольшойФирмойПовтИсп.ПолучитьСимвольноеПредставлениеВалюты(ВыборкаДетальныеЗаписи.Валюта);
				ОбластьРасшифровкаТовары.Параметры.ВалютаПриход = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СтоимостьПриход), ПредставлениеВалютыРасшифровки, "");
				ОбластьРасшифровкаТовары.Параметры.ВалютаРасход = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СтоимостьРасход), ПредставлениеВалютыРасшифровки, "");
				ОбластьРасшифровкаТовары.Параметры.СтоимостьПриход = Формат(ВыборкаДетальныеЗаписи.СтоимостьПриход, "ЧДЦ=2; ЧН=' '");
				ОбластьРасшифровкаТовары.Параметры.СтоимостьРасход = Формат(ВыборкаДетальныеЗаписи.СтоимостьРасход, "ЧДЦ=2; ЧН=' '");
				ОбластьРасшифровкаТовары.Параметры.Цена = Формат(ВыборкаДетальныеЗаписи.Цена, "ЧДЦ=2; ЧН=' '");
				Результат.Вывести(ОбластьРасшифровкаТовары, 2);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ПустаяСтрока(РасшифровкаДеньги) Тогда
			ОбластьРасшифровкаДеньги.Параметры.РасшифровкаДеньги = РасшифровкаДеньги;
			Результат.Вывести(ОбластьРасшифровкаДеньги, 2);
		КонецЕсли;
	КонецЦикла;
	Результат.ЗакончитьАвтогруппировкуСтрок();
	
	Возврат Результат;
	
КонецФункции

Функция ВалютаДоговора(Контрагент, Договор)
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Если Не ЗначениеЗаполнено(Договор) Тогда
			Возврат Константы.ВалютаУчета.Получить();
		Иначе
			Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВалютаРасчетов");
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСПокупателями.Договор.ВалютаРасчетов КАК ВалютаДоговора
	|ИЗ
	|	РегистрНакопления.РасчетыСПокупателями КАК РасчетыСПокупателями
	|ГДЕ
	|	РасчетыСПокупателями.Контрагент = &Контрагент
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСПоставщиками.Договор.ВалютаРасчетов
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|ГДЕ
	|	РасчетыСПоставщиками.Контрагент = &Контрагент
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСПрочимиКонтрагентами.Договор.ВалютаРасчетов
	|ИЗ
	|	РегистрНакопления.РасчетыСПрочимиКонтрагентами КАК РасчетыСПрочимиКонтрагентами
	|ГДЕ
	|	РасчетыСПрочимиКонтрагентами.Контрагент = &Контрагент");
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Константы.ВалютаУчета.Получить();
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() <> 1 Тогда
		Возврат Константы.ВалютаУчета.Получить();
	КонецЕсли;
	
	Выборка.Следующий();
	
	Возврат Выборка.ВалютаДоговора;
	
КонецФункции

#КонецОбласти

ЭтоОтчетУНФ = Истина;

#КонецЕсли

