#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеПолучениеПатента.Форма.ФормаОтчета";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2014_1";
	Стр.ОписаниеФормы = "В редакции от 17.12.2014 письмо ФНС России N ГД-4-3/26095@";
	Стр.ДатаНачала = Дата("20120101");
	Стр.ДатаКонца = Дата("20150630");
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2015_1";
	Стр.ОписаниеФормы = "В редакции от 01.07.2015 письмо ФНС России N ГД-4-3/11496@";
	Стр.ДатаНачала = Дата("20150701");
	Стр.ДатаКонца = Дата("20151231");
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2016_1";
	Стр.ОписаниеФормы = "В редакции от 22.12.2015 письмо ФНС России N ММВ-7-3/591@";
	Стр.ДатаНачала = Дата("20160101");
	Стр.ДатаКонца = Дата("20500101");
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2015_1" Тогда
		Возврат ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2015_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2016_1" Тогда
		Возврат ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2016_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2015_1" Тогда
		Возврат СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2015_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2016_1" Тогда
		Возврат СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2016_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2015_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2015_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2016_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2016_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2016_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2016_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект)
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("ПФ_MXL_Форма2014_1");
	СтруктураПараметров = Объект.ДанныеУведомления.Получить();
	ЕстьНовыеСтрокиЛистТС = СтруктураПараметров.Свойство("Листы3_0");
	
	Область1 = МакетУведомления.ПолучитьОбласть("Страница1");
	ПараметрыМакета = Область1.Параметры;
	Строка = СтруктураПараметров.Титульный[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_НО, "КОД_НО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ФАМИЛИЯ_ИП, "Фамилия_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ИМЯ_ИП, "Имя_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОТЧЕСТВО_ИП, "Отчество_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОГРНИП, "ОГРН_", ПараметрыМакета, 15);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс, "Индекс_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона, "КодСубъекта_", ПараметрыМакета, 2);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом, "Дом_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус, "Корпус_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира, "Квартира_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район, "Район_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город, "Город_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт, "НаселенныйПункт_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица, "Улица_", ПараметрыМакета, 34);
	ПараметрыМакета.ПризнакПредставителя = Строка.ПРИЗНАК_НП_ПОДВАЛ;
	ВсегоСтраниц = 2+СтруктураПараметров.Листы3.Количество()+СтруктураПараметров.Листы4.Количество();
	
	Попытка
		Если ЗначениеЗаполнено(Строка.ДАТА_НАЧАЛО) Тогда
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_НАЧАЛО, "ДатаПатента_", ПараметрыМакета);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ДАТА_ПОДПИСИ) Тогда
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_ПОДПИСИ, "ДатаПодписи_", ПараметрыМакета);
		КонецЕсли;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ВсегоСтраниц, "НаСтраницах_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_ЛИСТОВ, "ПриложеноЛистов_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_МЕСЯЦЕВ, "СРОК_", ПараметрыМакета, 2);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось заполнить некоторые параметры печатной формы");
	КонецПопытки;
	
	ПечатнаяФорма.Вывести(Область1);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	Область2 = МакетУведомления.ПолучитьОбласть("Страница2");
	ПараметрыМакета = Область2.Параметры;
	Строка = СтруктураПараметров.Страница2[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_2, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОписаниеДеятельности, "Описание_", ПараметрыМакета, 560);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодПредпринимательскойДеятельности, "КодДеятельности_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.СредняяЧисленностьРаботников, "КоличествоРаботников_", ПараметрыМакета, 2, Истина);
	ПараметрыМакета.НаличиеРаботников = Строка.НаличиеРаботников;
	ПечатнаяФорма.Вывести(Область2);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	НомерЛиста = 3;
	Если ЕстьНовыеСтрокиЛистТС Тогда 
		Для Каждого Строка Из СтруктураПараметров.Листы3_0 Цикл 
			Область5 = МакетУведомления.ПолучитьОбласть("Страница5_1");
			ПечатнаяФорма.Вывести(Область5);
			
			Для Инд = 1 По 3 Цикл 
				Область5 = МакетУведомления.ПолучитьОбласть("Страница5_2");
				ПараметрыМакета = Область5.Параметры;
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Индекс"+(Инд+1)], "Индекс_", ПараметрыМакета, 6);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КодРегиона"+(Инд+1)], "КодСубъекта_", ПараметрыМакета, 2);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Дом"+(Инд+1)], "Дом_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Корпус"+(Инд+1)], "Корпус_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Квартира"+(Инд+1)], "Квартира_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Район"+(Инд+1)], "Район_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Город"+(Инд+1)], "Город_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["НаселенныйПункт"+(Инд+1)], "НаселенныйПункт_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Улица"+(Инд+1)], "Улица_", ПараметрыМакета, 34);
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+(Инд+1)], "КодОКТМО_", ПараметрыМакета, 11);
				ПечатнаяФорма.Вывести(Область5);
			КонецЦикла;
			
			Область5 = МакетУведомления.ПолучитьОбласть("Страница5_3");
			ПечатнаяФорма.Вывести(Область5);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Строка Из СтруктураПараметров.Листы3 Цикл 
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_1");
		ПараметрыМакета = Область3.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_3, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(НомерЛиста, "Страница_", ПараметрыМакета, 3);
		ПечатнаяФорма.Вывести(Область3);
		
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_1");
		ПараметрыМакета = Область3.Параметры;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КОД_ТС1"], "Код_", ПараметрыМакета, 2);
		ПечатнаяФорма.Вывести(Область3);
		
		Инд = 0;
		Попытка
			Для Инд = 1 По 3 Цикл
				Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_2");
				ПараметрыМакета = Область3.Параметры;
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ВИН_ТС"+Инд], "ВИН_", ПараметрыМакета, 25);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["МАРКА_ТС"+Инд], "МАРКА_", ПараметрыМакета, 30);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ЗНАК_ТС"+Инд], "ЗНАК_", ПараметрыМакета, 30);
				Если ЕстьНовыеСтрокиЛистТС Тогда 
					Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка["ТОННАЖ_ТС"+Инд], "Груз_", ПараметрыМакета, 4, Ложь);
					Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка["МЕСТ_ТС"+Инд], "Мест_", ПараметрыМакета, 4, Ложь);
				КонецЕсли;
				ПечатнаяФорма.Вывести(Область3);
			КонецЦикла;
		Исключение
			Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_1");
			Пока Инд <= 3 Цикл
				ПечатнаяФорма.Вывести(Область3);
				Инд = Инд + 1;
			КонецЦикла;
			Область3 = МакетУведомления.ПолучитьОбласть("Страница3_3");
			ПечатнаяФорма.Вывести(Область3);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			НомерЛиста = НомерЛиста + 1;
			Прервать;
		КонецПопытки;
		
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_3");
		ПечатнаяФорма.Вывести(Область3);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Для Каждого Строка Из СтруктураПараметров.Листы4 Цикл 
		Область4 = МакетУведомления.ПолучитьОбласть("Страница4");
		ПараметрыМакета = Область4.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_4, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(НомерЛиста, "Страница_", ПараметрыМакета, 3);
		
		Попытка
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_ОБЪЕКТА, "Код_", ПараметрыМакета, 2);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ПРИЗНАК_ОБЪЕКТА, "Признак_", ПараметрыМакета, 1);
			Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка.ПЛОЩАДЬ_ОБЪЕКТА, "Площадь_", ПараметрыМакета, 8);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс1, "Индекс_", ПараметрыМакета, 6);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона1, "КодСубъекта_", ПараметрыМакета, 2);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом1, "Дом_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус1, "Корпус_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира1, "Квартира_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район1, "Район_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город1, "Город_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт1, "НаселенныйПункт_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица1, "Улица_", ПараметрыМакета, 34);
			Если ЕстьНовыеСтрокиЛистТС Тогда
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОКТМО_ОБЪЕКТА, "КодОКТМО_", ПараметрыМакета, 11);
			КонецЕсли;
		Исключение
			ПечатнаяФорма.Вывести(Область4);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			Прервать;
		КонецПопытки;
		
		ПечатнаяФорма.Вывести(Область4);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект)
	
	ПечатнаяФорма = СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
	
КонецФункции

Функция СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2015_1(Объект)
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("ПФ_MXL_Форма2015_1");
	СтруктураПараметров = Объект.ДанныеУведомления.Получить();
	Титульный = СтруктураПараметров.Титульный[0];
	
	Область1 = МакетУведомления.ПолучитьОбласть("Страница1");
	ПараметрыМакета = Область1.Параметры;
	Строка = СтруктураПараметров.Титульный[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_НО, "КОД_НО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ФАМИЛИЯ_ИП, "Фамилия_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ИМЯ_ИП, "Имя_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОТЧЕСТВО_ИП, "Отчество_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОГРНИП, "ОГРН_", ПараметрыМакета, 15);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс, "Индекс_3_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона, "КодСубъекта_3_", ПараметрыМакета, 2);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом, "Дом_3_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус, "Корпус_3_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира, "Квартира_3_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район, "Район_3_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город, "Город_3_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт, "НаселенныйПункт_3_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица, "Улица_3_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Строка.КОЛИЧЕСТВО_МЕСЯЦЕВ, "ЧЦ=2; ЧН=; ЧВН="), "СРОК_", ПараметрыМакета, 2);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_НАЧАЛО, "ДатаПатента_", ПараметрыМакета);
	ВсегоЛистов = 2 + СтруктураПараметров.Листы3_0.Количество() + СтруктураПараметров.Листы3.Количество() + СтруктураПараметров.Листы4.Количество();
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ВсегоЛистов, "НаСтраницах_", ПараметрыМакета, 3, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_ЛИСТОВ, "ПриложеноЛистов_", ПараметрыМакета, 3, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_ПОДПИСИ, "ДатаПодписи_", ПараметрыМакета);
	ПараметрыМакета.ПризнакПредставителя = Строка.ПРИЗНАК_НП_ПОДВАЛ;
	ПечатнаяФорма.Вывести(Область1);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	Область2 = МакетУведомления.ПолучитьОбласть("Страница2");
	ПараметрыМакета = Область2.Параметры;
	Строка = СтруктураПараметров.Страница2[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОписаниеДеятельности, "Описание_", ПараметрыМакета, 560);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодПредпринимательскойДеятельности, "КодДеятельности_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.СредняяЧисленностьРаботников, "КоличествоРаботников_", ПараметрыМакета, 2, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.НАЛОГОВАЯ_СТАВКА, "СтавкаПроцент", ПараметрыМакета, 1, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.СсылкаНаЗакон, "НормаЗакона_", ПараметрыМакета, 80);
	ПараметрыМакета.НаличиеРаботников = Строка.НаличиеРаботников;
	ПечатнаяФорма.Вывести(Область2);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	НомерЛиста = 3;
	Для Каждого Строка Из СтруктураПараметров.Листы3_0 Цикл 
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3");
		ПараметрыМакета = Область3.Параметры;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерЛиста, "ЧЦ=3; ЧН=; ЧВН="), "Страница_", ПараметрыМакета, 3);
		
		Для Инд = 1 По 3 Цикл 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Индекс"+(Инд+1)], "Индекс_"+Инд+"_", ПараметрыМакета, 6);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КодРегиона"+(Инд+1)], "КодСубъекта_"+Инд+"_", ПараметрыМакета, 2);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Дом"+(Инд+1)], "Дом_"+Инд+"_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Корпус"+(Инд+1)], "Корпус_"+Инд+"_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Квартира"+(Инд+1)], "Квартира_"+Инд+"_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Район"+(Инд+1)], "Район_"+Инд+"_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Город"+(Инд+1)], "Город_"+Инд+"_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["НаселенныйПункт"+(Инд+1)], "НаселенныйПункт_"+Инд+"_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Улица"+(Инд+1)], "Улица_"+Инд+"_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+(Инд+1)], "КодОКТМО_"+Инд+"_", ПараметрыМакета, 11, "-");
		КонецЦикла;
		
		НомерЛиста = НомерЛиста + 1;
		ПечатнаяФорма.Вывести(Область3);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
	Для Каждого Строка Из СтруктураПараметров.Листы3 Цикл 
		Область4 = МакетУведомления.ПолучитьОбласть("Страница4");
		ПараметрыМакета = Область4.Параметры;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерЛиста, "ЧЦ=3; ЧН=; ЧВН="), "Страница_", ПараметрыМакета, 3);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КОД_ТС1"], "Код_1_", ПараметрыМакета, 2);
		Для Инд = 1 По 3 Цикл
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ВИН_ТС"+Инд], "ВИН_"+Инд+"_", ПараметрыМакета, 25);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["МАРКА_ТС"+Инд], "МАРКА_"+Инд+"_", ПараметрыМакета, 30);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ЗНАК_ТС"+Инд], "ЗНАК_"+Инд+"_", ПараметрыМакета, 30);
			Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка["ТОННАЖ_ТС"+Инд], "Груз_"+Инд+"_", ПараметрыМакета, 4, Ложь);
			Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка["МЕСТ_ТС"+Инд], "Мест_"+Инд+"_", ПараметрыМакета, 4, Ложь);
		КонецЦикла;
		
		ПечатнаяФорма.Вывести(Область4);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Для Каждого Строка Из СтруктураПараметров.Листы4 Цикл 
		Область5 = МакетУведомления.ПолучитьОбласть("Страница5");
		ПараметрыМакета = Область5.Параметры;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерЛиста, "ЧЦ=3; ЧН=; ЧВН="), "Страница_", ПараметрыМакета, 3);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_ОБЪЕКТА, "Код_", ПараметрыМакета, 2);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ПРИЗНАК_ОБЪЕКТА, "Признак_", ПараметрыМакета, 1);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка.ПЛОЩАДЬ_ОБЪЕКТА, "Площадь_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс1, "Индекс_", ПараметрыМакета, 6);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона1, "КодСубъекта_", ПараметрыМакета, 2);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом1, "Дом_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус1, "Корпус_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира1, "Квартира_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район1, "Район_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город1, "Город_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт1, "НаселенныйПункт_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица1, "Улица_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОКТМО_ОБЪЕКТА, "КодОКТМО_", ПараметрыМакета, 11, "-");
		
		ПечатнаяФорма.Вывести(Область5);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2015_1(Объект)
	
	ПечатнаяФорма = СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2015_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
	
КонецФункции

Функция СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2016_1(Объект)
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("ПФ_MXL_Форма2016_1");
	СтруктураПараметров = Объект.ДанныеУведомления.Получить();
	ЕстьНовыеСтрокиЛистТС = СтруктураПараметров.Свойство("Листы3_0");
	
	Область1 = МакетУведомления.ПолучитьОбласть("Страница1");
	ПараметрыМакета = Область1.Параметры;
	Строка = СтруктураПараметров.Титульный[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_НО, "КОД_НО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ФАМИЛИЯ_ИП, "Фамилия_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ИМЯ_ИП, "Имя_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОТЧЕСТВО_ИП, "Отчество_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОГРНИП, "ОГРН_", ПараметрыМакета, 15);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс, "Индекс_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона, "КодСубъекта_", ПараметрыМакета, 2);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом, "Дом_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус, "Корпус_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира, "Квартира_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район, "Район_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город, "Город_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт, "НаселенныйПункт_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица, "Улица_", ПараметрыМакета, 34);
	ПараметрыМакета.ПризнакПредставителя = Строка.ПРИЗНАК_НП_ПОДВАЛ;
	ВсегоСтраниц = 2+СтруктураПараметров.Листы3.Количество()+СтруктураПараметров.Листы4.Количество();
	
	Попытка
		Если ЗначениеЗаполнено(Строка.ДАТА_НАЧАЛО) Тогда
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_НАЧАЛО, "ДатаПатента_", ПараметрыМакета);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ДАТА_ПОДПИСИ) Тогда
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_ПОДПИСИ, "ДатаПодписи_", ПараметрыМакета);
		КонецЕсли;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ВсегоСтраниц, "НаСтраницах_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_ЛИСТОВ, "ПриложеноЛистов_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_МЕСЯЦЕВ, "СРОК_", ПараметрыМакета, 2);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось заполнить некоторые параметры печатной формы");
	КонецПопытки;
	
	ПечатнаяФорма.Вывести(Область1);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	Область2 = МакетУведомления.ПолучитьОбласть("Страница2");
	ПараметрыМакета = Область2.Параметры;
	Строка = СтруктураПараметров.Страница2[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_2, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОписаниеДеятельности, "Описание_", ПараметрыМакета, 560);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодПредпринимательскойДеятельности, "КодДеятельности_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.СредняяЧисленностьРаботников, "КоличествоРаботников_", ПараметрыМакета, 2, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.НАЛОГОВАЯ_СТАВКА, "СтавкаПроцент", ПараметрыМакета, 1, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.СсылкаНаЗакон, "НормаЗакона_", ПараметрыМакета, 80);
	ПараметрыМакета.НаличиеРаботников = Строка.НаличиеРаботников;
	ПечатнаяФорма.Вывести(Область2);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	НомерЛиста = 3;
	Если ЕстьНовыеСтрокиЛистТС Тогда 
		Для Каждого Строка Из СтруктураПараметров.Листы3_0 Цикл 
			Область5 = МакетУведомления.ПолучитьОбласть("Страница5_1");
			ПечатнаяФорма.Вывести(Область5);
			
			Для Инд = 1 По 3 Цикл 
				Область5 = МакетУведомления.ПолучитьОбласть("Страница5_2");
				ПараметрыМакета = Область5.Параметры;
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Индекс"+(Инд+1)], "Индекс_", ПараметрыМакета, 6);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КодРегиона"+(Инд+1)], "КодСубъекта_", ПараметрыМакета, 2);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Дом"+(Инд+1)], "Дом_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Корпус"+(Инд+1)], "Корпус_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Квартира"+(Инд+1)], "Квартира_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Район"+(Инд+1)], "Район_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Город"+(Инд+1)], "Город_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["НаселенныйПункт"+(Инд+1)], "НаселенныйПункт_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Улица"+(Инд+1)], "Улица_", ПараметрыМакета, 34);
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+(Инд+1)], "КодОКТМО_", ПараметрыМакета, 11);
				ПечатнаяФорма.Вывести(Область5);
			КонецЦикла;
			
			Область5 = МакетУведомления.ПолучитьОбласть("Страница5_3");
			ПечатнаяФорма.Вывести(Область5);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Строка Из СтруктураПараметров.Листы3 Цикл 
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_1");
		ПараметрыМакета = Область3.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_3, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(НомерЛиста, "Страница_", ПараметрыМакета, 3);
		ПечатнаяФорма.Вывести(Область3);
		
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_1");
		ПараметрыМакета = Область3.Параметры;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КОД_ТС1"], "Код_", ПараметрыМакета, 2);
		ПечатнаяФорма.Вывести(Область3);
		
		Инд = 0;
		Попытка
			Для Инд = 1 По 3 Цикл
				Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_2");
				ПараметрыМакета = Область3.Параметры;
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ВИН_ТС"+Инд], "ВИН_", ПараметрыМакета, 25);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["МАРКА_ТС"+Инд], "МАРКА_", ПараметрыМакета, 30);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ЗНАК_ТС"+Инд], "ЗНАК_", ПараметрыМакета, 30);
				Если ЕстьНовыеСтрокиЛистТС Тогда 
					Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка["ТОННАЖ_ТС"+Инд], "Груз_", ПараметрыМакета, 4, Ложь);
					Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка["МЕСТ_ТС"+Инд], "Мест_", ПараметрыМакета, 4, Ложь);
				КонецЕсли;
				ПечатнаяФорма.Вывести(Область3);
			КонецЦикла;
		Исключение
			Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_1");
			Пока Инд <= 3 Цикл
				ПечатнаяФорма.Вывести(Область3);
				Инд = Инд + 1;
			КонецЦикла;
			Область3 = МакетУведомления.ПолучитьОбласть("Страница3_3");
			ПечатнаяФорма.Вывести(Область3);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			НомерЛиста = НомерЛиста + 1;
			Прервать;
		КонецПопытки;
		
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_3");
		ПечатнаяФорма.Вывести(Область3);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Для Каждого Строка Из СтруктураПараметров.Листы4 Цикл 
		Область4 = МакетУведомления.ПолучитьОбласть("Страница4");
		ПараметрыМакета = Область4.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_4, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(НомерЛиста, "Страница_", ПараметрыМакета, 3);
		
		Попытка
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_ОБЪЕКТА, "Код_", ПараметрыМакета, 2);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ПРИЗНАК_ОБЪЕКТА, "Признак_", ПараметрыМакета, 1);
			Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка.ПЛОЩАДЬ_ОБЪЕКТА, "Площадь_", ПараметрыМакета, 8);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс1, "Индекс_", ПараметрыМакета, 6);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона1, "КодСубъекта_", ПараметрыМакета, 2);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом1, "Дом_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус1, "Корпус_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира1, "Квартира_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район1, "Район_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город1, "Город_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт1, "НаселенныйПункт_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица1, "Улица_", ПараметрыМакета, 34);
			Если ЕстьНовыеСтрокиЛистТС Тогда
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОКТМО_ОБЪЕКТА, "КодОКТМО_", ПараметрыМакета, 11);
			КонецЕсли;
		Исключение
			ПечатнаяФорма.Вывести(Область4);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			Прервать;
		КонецПопытки;
		
		ПечатнаяФорма.Вывести(Область4);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2016_1(Объект)
	
	ПечатнаяФорма = СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2016_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
	
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(СведенияОтправки)
	Префикс = "SR_ZPUSN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2015_1(СведенияОтправки)
	Префикс = "SR_ZPUSN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2016_1(СведенияОтправки)
	Префикс = "SR_ZPUSN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор)
	
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	
	Титульный = Данные.Титульный[0];
	Если ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО) Тогда
		ОсновныеСведения.Вставить("ДатаНачПат", Формат(Титульный.ДАТА_НАЧАЛО, "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		ОсновныеСведения.Вставить("КолМес", Формат(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ, "ЧЦ=2; ЧВН="));
	КонецЕсли;
	
	ОсновныеСведения.Вставить("Фамилия", СокрЛП(Титульный.ФАМИЛИЯ_ИП));
	ОсновныеСведения.Вставить("Имя",  СокрЛП(Титульный.ИМЯ_ИП));
	ОсновныеСведения.Вставить("Отчество",  СокрЛП(Титульный.ОТЧЕСТВО_ИП));
	
	Если Не ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнена дата начала патента (страница 1)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнено количество месяцев действия патента (страница 1)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Страница2 = Данные.Страница2[0];
	ОсновныеСведения.Вставить("НаимВД", Страница2.ОписаниеДеятельности);
	ОсновныеСведения.Вставить("КодВД", Страница2.КодПредпринимательскойДеятельности);
	ОсновныеСведения.Вставить("ПрНаемРаб", Страница2.НаличиеРаботников);
	ОсновныеСведения.Вставить("ЧислНаемРаб", Страница2.СредняяЧисленностьРаботников);
	ОсновныеСведения.Вставить("ОГРНИП", Титульный.ОГРНИП);
	ОсновныеСведения.Вставить("ТлфПодп", Титульный.ТЕЛЕФОН);
	
	Если Не ЗначениеЗаполнено(Страница2.ОписаниеДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указано наименование вида деятельности (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.КодПредпринимательскойДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан код вида деятельности (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.НаличиеРаботников) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан признак наличия наемных работников (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.СредняяЧисленностьРаботников) 
		И Страница2.НаличиеРаботников = "1" Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указана средняя численность наемных работников (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	ОсновныеСведения.Вставить("Индекс", Титульный.Индекс);
	ОсновныеСведения.Вставить("КодРегион", Титульный.КодРегиона);
	ОсновныеСведения.Вставить("Район", Титульный.Район);
	ОсновныеСведения.Вставить("Город", Титульный.Город);
	ОсновныеСведения.Вставить("НаселПункт", Титульный.НаселенныйПункт);
	ОсновныеСведения.Вставить("Улица", Титульный.Улица);
	ОсновныеСведения.Вставить("Дом", Титульный.Дом);
	ОсновныеСведения.Вставить("Корпус", Титульный.Корпус);
	ОсновныеСведения.Вставить("Кварт", Титульный.Квартира);
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Процедура Проверить_Форма2015_1(Данные, УникальныйИдентификатор)
	Титульный = Данные.Титульный[0];
	
	Если Не ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнена дата начала патента (страница 1)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнено количество месяцев действия патента (страница 1)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Страница2 = Данные.Страница2[0];
	Если Не ЗначениеЗаполнено(Страница2.ОписаниеДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указано наименование вида деятельности (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.КодПредпринимательскойДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан код вида деятельности (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.НаличиеРаботников) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан признак наличия наемных работников (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.СредняяЧисленностьРаботников) 
		И Страница2.НаличиеРаботников = "1" Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указана средняя численность наемных работников (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.СсылкаНаЗакон) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнена ссылка на норму закона Российской Федерации (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	КоличествоОшибок = 0;
	НомСтр = 0;
	Для Каждого Стр Из Данные.Листы3_0 Цикл 
		НомСтр = НомСтр + 1;
		Для Инд = 2 По 4 Цикл 
			Если ЗначениеЗаполнено(Стр["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+Инд]) И Не ЗначениеЗаполнено(Стр["КодРегиона"+Инд]) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На стр."+НомСтр+" со сведениями о месте деятельности не указан код региона", УникальныйИдентификатор);
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+Инд]) И ЗначениеЗаполнено(Стр["КодРегиона"+Инд]) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На стр."+НомСтр+" со сведениями о месте деятельности не указан код ОКТМО", УникальныйИдентификатор);
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;
		КонецЦикла;
		Если КоличествоОшибок > 3 Тогда 
			ВызватьИсключение "";
		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоОшибок > 0 Тогда 
		ВызватьИсключение "";
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2015_1(Объект, УникальныйИдентификатор)
	
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	
	Титульный = Данные.Титульный[0];
	Проверить_Форма2015_1(Данные, УникальныйИдентификатор);
	Если ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО) Тогда
		ОсновныеСведения.Вставить("ДатаНачПат", Формат(Титульный.ДАТА_НАЧАЛО, "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		ОсновныеСведения.Вставить("КолМес", Формат(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ, "ЧЦ=2; ЧВН="));
	КонецЕсли;
	
	ОсновныеСведения.Вставить("Фамилия", СокрЛП(Титульный.ФАМИЛИЯ_ИП));
	ОсновныеСведения.Вставить("Имя",  СокрЛП(Титульный.ИМЯ_ИП));
	ОсновныеСведения.Вставить("Отчество",  СокрЛП(Титульный.ОТЧЕСТВО_ИП));
	
	Страница2 = Данные.Страница2[0];
	ОсновныеСведения.Вставить("НаимВД", Страница2.ОписаниеДеятельности);
	ОсновныеСведения.Вставить("КодВД", Страница2.КодПредпринимательскойДеятельности);
	ОсновныеСведения.Вставить("ПрНаемРаб", Страница2.НаличиеРаботников);
	ОсновныеСведения.Вставить("ЧислНаемРаб", Страница2.СредняяЧисленностьРаботников);
	ОсновныеСведения.Вставить("ОГРНИП", Титульный.ОГРНИП);
	ОсновныеСведения.Вставить("ТлфПодп", Титульный.ТЕЛЕФОН);
	ОсновныеСведения.Вставить("НалСтавка", Страница2.НАЛОГОВАЯ_СТАВКА);
	ОсновныеСведения.Вставить("ЗакСубРФСтав", Страница2.СсылкаНаЗакон);
	ОсновныеСведения.Вставить("Индекс", Титульный.Индекс);
	ОсновныеСведения.Вставить("КодРегион", Титульный.КодРегиона);
	ОсновныеСведения.Вставить("Район", Титульный.Район);
	ОсновныеСведения.Вставить("Город", Титульный.Город);
	ОсновныеСведения.Вставить("НаселПункт", Титульный.НаселенныйПункт);
	ОсновныеСведения.Вставить("Улица", Титульный.Улица);
	ОсновныеСведения.Вставить("Дом", Титульный.Дом);
	ОсновныеСведения.Вставить("Корпус", Титульный.Корпус);
	ОсновныеСведения.Вставить("Кварт", Титульный.Квартира);
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2015_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Процедура Проверить_Форма2016_1(Данные, УникальныйИдентификатор)
	Титульный = Данные.Титульный[0];
	Ошибок = 0;
	
	Если Не ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО)
		И ЗначениеЗаполнено(Титульный.ОГРНИП) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнена дата начала действия патента (страница 1)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнено количество месяцев действия патента (страница 1)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.КодРегиона) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан адрес на титульной странице", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.П_ИНН_1) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан ИНН", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Страница2 = Данные.Страница2[0];
	Если Не ЗначениеЗаполнено(Страница2.ОписаниеДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указано наименование вида деятельности (страница 2)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.КодПредпринимательскойДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан код вида деятельности (страница 2)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не СтрДлина(СокрЛП(Страница2.КодПредпринимательскойДеятельности)) = 6 Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Код вида деятельности должен иметь длину 6 символов (страница 2)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.НаличиеРаботников) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан признак наличия наемных работников (страница 2)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.СредняяЧисленностьРаботников) 
		И Страница2.НаличиеРаботников = "1" Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указана средняя численность наемных работников (страница 2)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	КоличествоСтр3 = 0;
	КоличествоСтр4 = 0;
	КоличествоСтр5 = 0;
	Для Каждого Стр Из Данные.Листы3 Цикл
		Если ЗначениеЗаполнено(Стр.КОД_ТС1) Тогда 
			КоличествоСтр3 = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.Листы4 Цикл
		Если ЗначениеЗаполнено(Стр.КОД_ОБЪЕКТА) Тогда 
			КоличествоСтр4 = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.Листы3_0 Цикл
		Если ЗначениеЗаполнено(Стр.ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ2)
			Или ЗначениеЗаполнено(Стр.ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ3)
			Или ЗначениеЗаполнено(Стр.ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ4)
			Или ЗначениеЗаполнено(Стр.КодРегиона2)
			Или ЗначениеЗаполнено(Стр.КодРегиона3)
			Или ЗначениеЗаполнено(Стр.КодРегиона4) Тогда 
			
			КоличествоСтр5 = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если (КоличествоСтр3 + КоличествоСтр4 + КоличествоСтр5) <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("В заявлении на получение патенты должны быть указаны либо сведения о месте осуществления предпринимательской деятельности
										|либо сведения о транспортных средствах, либо сведения по объектам", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Ошибок > 0 Тогда
		ВызватьИсключение "";
	КонецЕсли;
	
	Если КоличествоСтр3 = 1 Тогда 
		Для Каждого Стр Из Данные.Листы3 Цикл
			ТекстОш = "";
			ЗаполненыДанныеПоТС = Ложь;
			Для Инд = 1 По 3 Цикл
				Если ЗначениеЗаполнено(Стр["ЗНАК_ТС"+Инд])
					Или ЗначениеЗаполнено(Стр["ВИН_ТС"+Инд])
					Или ЗначениеЗаполнено(Стр["МАРКА_ТС"+Инд]) Тогда 
					
					Если Не ЗначениеЗаполнено(Стр["ЗНАК_ТС"+Инд]) Тогда 
						ТекстОш = "Необходимо заполнить регистрационный номер транспортного средства";
					КонецЕсли;
					Если Не ЗначениеЗаполнено(Стр["ВИН_ТС"+Инд]) Тогда 
						ТекстОш = "Необходимо заполнить вин-номер транспортного средства";
					КонецЕсли;
					Если Не ЗначениеЗаполнено(Стр["МАРКА_ТС"+Инд]) Тогда 
						ТекстОш = "Необходимо заполнить марку транспортного средства";
					КонецЕсли;
					
					ЗаполненыДанныеПоТС = Истина;
				КонецЕсли;
			КонецЦикла;
				
			Если Не ЗаполненыДанныеПоТС Тогда
				ТекстОш = "Не заполнены данные по транспортным средствам (регистрационный знак, марка, вин-код)";
			КонецЕсли;
			
			Если Стр.КОД_ТС1 = "01" Или Стр.КОД_ТС1 = "04" Тогда 
				Для Инд = 1 По 3 Цикл 
					Если ЗначениеЗаполнено(Стр["ЗНАК_ТС"+Инд]) Тогда 
						Если Не ЗначениеЗаполнено(Стр["ТОННАЖ_ТС"+Инд]) Тогда 
							ТекстОш = "Для ТС с кодами 01 и 04 должна быть указана грузоподъемность";
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли Стр.КОД_ТС1 = "02" Или Стр.КОД_ТС1 = "03" Тогда 
				Для Инд = 1 По 3 Цикл 
					Если ЗначениеЗаполнено(Стр["ЗНАК_ТС"+Инд]) Тогда 
						Если Не ЗначениеЗаполнено(Стр["МЕСТ_ТС"+Инд]) Тогда 
							ТекстОш = "Для ТС с кодами 02 и 03 должно быть указано количество посадочных мест";
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекстОш) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении(ТекстОш, УникальныйИдентификатор);
				ВызватьИсключение "";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если КоличествоСтр4 = 1 Тогда
		Для Каждого Стр Из Данные.Листы4 Цикл
			Если Не ЗначениеЗаполнено(Стр.ОКТМО_ОБЪЕКТА) Или Не ЗначениеЗаполнено(Стр.КодРегиона1) Тогда 
				КОД_ОБЪЕКТА = Стр.КОД_ОБЪЕКТА;
				Если Не (КОД_ОБЪЕКТА = "16" Или КОД_ОБЪЕКТА = "17" Или КОД_ОБЪЕКТА = "18" Или КОД_ОБЪЕКТА = "19"
						Или КОД_ОБЪЕКТА = "20" Или КОД_ОБЪЕКТА = "21" Или КОД_ОБЪЕКТА = "22") Тогда
						
					РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Если код объекта лежит вне диапазона 16...22 необходимо указывать ОКТМО и адрес", УникальныйИдентификатор);
					ВызватьИсключение "";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	КоличествоОшибок = 0;
	НомСтр = 0;
	Для Каждого Стр Из Данные.Листы3_0 Цикл 
		НомСтр = НомСтр + 1;
		Для Инд = 2 По 4 Цикл 
			Если ЗначениеЗаполнено(Стр["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+Инд]) И Не ЗначениеЗаполнено(Стр["КодРегиона"+Инд]) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На стр."+НомСтр+" со сведениями о месте деятельности не указан код региона", УникальныйИдентификатор);
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+Инд]) И ЗначениеЗаполнено(Стр["КодРегиона"+Инд]) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На стр."+НомСтр+" со сведениями о месте деятельности не указан код ОКТМО", УникальныйИдентификатор);
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;
		КонецЦикла;
		Если КоличествоОшибок > 3 Тогда 
			ВызватьИсключение "";
		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоОшибок > 0 Тогда 
		ВызватьИсключение "";
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2016_1(Объект, УникальныйИдентификатор)
	
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	
	Титульный = Данные.Титульный[0];
	Проверить_Форма2016_1(Данные, УникальныйИдентификатор);
	Если ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО) Тогда
		ОсновныеСведения.Вставить("ДатаНачПат", Формат(Титульный.ДАТА_НАЧАЛО, "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		ОсновныеСведения.Вставить("КолМес", Формат(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ, "ЧЦ=2; ЧВН="));
	КонецЕсли;
	
	ОсновныеСведения.Вставить("Фамилия", СокрЛП(Титульный.ФАМИЛИЯ_ИП));
	ОсновныеСведения.Вставить("Имя",  СокрЛП(Титульный.ИМЯ_ИП));
	ОсновныеСведения.Вставить("Отчество",  СокрЛП(Титульный.ОТЧЕСТВО_ИП));
	
	Страница2 = Данные.Страница2[0];
	ОсновныеСведения.Вставить("НаимВД", Страница2.ОписаниеДеятельности);
	ОсновныеСведения.Вставить("КодВД", Страница2.КодПредпринимательскойДеятельности);
	ОсновныеСведения.Вставить("ПрНаемРаб", Страница2.НаличиеРаботников);
	ОсновныеСведения.Вставить("ЧислНаемРаб", Страница2.СредняяЧисленностьРаботников);
	ОсновныеСведения.Вставить("НалСтавка", Страница2.НАЛОГОВАЯ_СТАВКА);
	ОсновныеСведения.Вставить("ЗакСубРФСтав", Страница2.СсылкаНаЗакон);
	ОсновныеСведения.Вставить("ОГРНИП", Титульный.ОГРНИП);
	ОсновныеСведения.Вставить("ТлфПодп", Титульный.ТЕЛЕФОН);
	ОсновныеСведения.Вставить("Индекс", Титульный.Индекс);
	ОсновныеСведения.Вставить("КодРегион", Титульный.КодРегиона);
	ОсновныеСведения.Вставить("Район", Титульный.Район);
	ОсновныеСведения.Вставить("Город", Титульный.Город);
	ОсновныеСведения.Вставить("НаселПункт", Титульный.НаселенныйПункт);
	ОсновныеСведения.Вставить("Улица", Титульный.Улица);
	ОсновныеСведения.Вставить("Дом", Титульный.Дом);
	ОсновныеСведения.Вставить("Корпус", Титульный.Корпус);
	ОсновныеСведения.Вставить("Кварт", Титульный.Квартира);
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2016_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2014_1");
	ЗаполнитьДанными_Форма2014_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2015_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2015_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2015_1");
	ЗаполнитьДанными_Форма2015_1(Объект, ОсновныеСведения, СтруктураВыгрузки, УникальныйИдентификатор);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2016_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2016_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2016_1");
	ЗаполнитьДанными_Форма2016_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2014_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(Параметры, ДеревоВыгрузки);
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_ЗПУСН = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "ЗПУСН");
	СвМестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвМестПД");
	МестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(СвМестПД, "МестПД");
	СвТСДеят1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвТСДеят1");
	СвОбДеят2 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвОбДеят2");
	
	Данные = Объект.ДанныеУведомления.Получить();
	Листы3_0 = Данные.Листы3_0;
	Для Каждого Лист3_0 Из Листы3_0 Цикл
		Для Инд = 2 По 4 Цикл
			Если Не ЗначениеЗаполнено(Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]) Тогда 
				Продолжить;
			КонецЕсли;
		
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(МестПД);
			НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрОбРФ");
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист3_0["Индекс" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист3_0["КодРегиона" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист3_0["Район" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист3_0["Город" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист3_0["НаселенныйПункт" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист3_0["Улица" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист3_0["Дом" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист3_0["Корпус" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист3_0["Квартира" + Инд]);
		КонецЦикла;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(МестПД);
	
	Листы3 = Данные.Листы3;
	Для Каждого Лист3 Из Листы3 Цикл
		ЗначКод = Лист3["КОД_ТС1"];
		Если ЗначениеЗаполнено(ЗначКод) Тогда
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвТСДеят1);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодТС", ЗначКод);
			СведТС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "СведТС");
			Для Инд = 1 По 3 Цикл
				Если ЗначениеЗаполнено(Лист3["ВИН_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["МАРКА_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["ЗНАК_ТС" + Инд])
					Или ЗначениеЗаполнено(Лист3["ТОННАЖ_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["МЕСТ_ТС" + Инд]) Тогда 
					НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СведТС);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ИдНомТС", Лист3["ВИН_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "МаркаТС", Лист3["МАРКА_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "РегЗнакТС", Лист3["ЗНАК_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ГрузТС", Лист3["ТОННАЖ_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КолПосадМест", Лист3["МЕСТ_ТС" + Инд]);
				КонецЕсли;
			КонецЦикла;
			РегламентированнаяОтчетность.УдалитьУзел(СведТС);
		КонецЕсли;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(СвТСДеят1);
	
	Листы4 = Данные.Листы4;
	Для Каждого Лист4 Из Листы4 Цикл
		Если Не ЗначениеЗаполнено(Лист4.КОД_ОБЪЕКТА) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвОбДеят2);
		НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрМНОбПП");
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодОбъект", Лист4.КОД_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПризОбъект", Лист4.ПРИЗНАК_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПлощОбъект", Лист4.ПЛОЩАДЬ_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист4.ОКТМО_ОБЪЕКТА);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист4.Индекс1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист4.КодРегиона1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист4.Район1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист4.Город1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист4.НаселенныйПункт1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист4.Улица1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист4.Дом1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист4.Корпус1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист4.Квартира1);
	КонецЦикла;
	
	РегламентированнаяОтчетность.УдалитьУзел(СвОбДеят2);
	
КонецПроцедуры

Процедура ЗаполнитьДанными_Форма2015_1(Объект, Параметры, ДеревоВыгрузки, УникальныйИдентификатор)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(Параметры, ДеревоВыгрузки);
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_ЗПУСН = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "ЗПУСН");
	СвМестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвМестПД");
	МестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(СвМестПД, "МестПД");
	СвТСДеят1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвТСДеят1");
	СвОбДеят2 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвОбДеят2");
	
	Данные = Объект.ДанныеУведомления.Получить();
	Листы3_0 = Данные.Листы3_0;
	ВсегоРазных = 0;
	ВсегоРазных1 = 0;
	Для Каждого Лист3_0 Из Листы3_0 Цикл
		Для Инд = 2 По 4 Цикл
			Если Не ЗначениеЗаполнено(Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]) Тогда 
				Продолжить;
			КонецЕсли;
		
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(МестПД);
			НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрОбРФ");
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист3_0["Индекс" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист3_0["КодРегиона" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист3_0["Район" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист3_0["Город" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист3_0["НаселенныйПункт" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист3_0["Улица" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист3_0["Дом" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист3_0["Корпус" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист3_0["Квартира" + Инд]);
			ВсегоРазных1 = ВсегоРазных1 + 1;
		КонецЦикла;
	КонецЦикла;
	ВсегоРазных = ВсегоРазных + ?(ВсегоРазных1 > 0, 1, 0);
	РегламентированнаяОтчетность.УдалитьУзел(МестПД);
	
	Листы3 = Данные.Листы3;
	ВсегоРазных1 = 0;
	НомЛ3 = 0;
	Для Каждого Лист3 Из Листы3 Цикл
		ЗначКод = Лист3["КОД_ТС1"];
		Если ЗначениеЗаполнено(ЗначКод) Тогда
			НомЛ3 = НомЛ3 + 1;
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвТСДеят1);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодТС", ЗначКод);
			СведТС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "СведТС");
			Для Инд = 1 По 3 Цикл
				Если ЗначениеЗаполнено(Лист3["ВИН_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["МАРКА_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["ЗНАК_ТС" + Инд]) Тогда 
					
					Если (Не ЗначениеЗаполнено(Лист3["ВИН_ТС" + Инд]))
						Или (Не ЗначениеЗаполнено(Лист3["МАРКА_ТС" + Инд])) 
						Или (Не ЗначениеЗаполнено(Лист3["ЗНАК_ТС" + Инд])) Тогда
						
						РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомЛ3+" не заполнены обязательные реквизиты: номер, марка, VIN", УникальныйИдентификатор);
						ВызватьИсключение "";
					КонецЕсли;
					
					Если (ЗначКод = "01" Или ЗначКод = "04") И (Не ЗначениеЗаполнено(Лист3["ТОННАЖ_ТС" + Инд])) Тогда 
						РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомЛ3+" не указана грузоподъемность", УникальныйИдентификатор);
						ВызватьИсключение "";
					КонецЕсли;
					
					Если (ЗначКод = "02" Или ЗначКод = "03") И (Не ЗначениеЗаполнено(Лист3["МЕСТ_ТС" + Инд])) Тогда 
						РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомЛ3+" не указано количество посадочных мест", УникальныйИдентификатор);
						ВызватьИсключение "";
					КонецЕсли;
					НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СведТС);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ИдНомТС", Лист3["ВИН_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "МаркаТС", Лист3["МАРКА_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "РегЗнакТС", Лист3["ЗНАК_ТС" + Инд]);
					
					Если (ЗначКод = "01" Или ЗначКод = "04") Тогда 
						Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ГрузТС", Лист3["ТОННАЖ_ТС" + Инд]);
					ИначеЕсли (ЗначКод = "02" Или ЗначКод = "03") Тогда 
						Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КолПосадМест", Лист3["МЕСТ_ТС" + Инд]);
					КонецЕсли;
					
					ВсегоРазных1 = ВсегоРазных1 + 1;
				КонецЕсли;
			КонецЦикла;
			РегламентированнаяОтчетность.УдалитьУзел(СведТС);
		КонецЕсли;
	КонецЦикла;
	ВсегоРазных = ВсегоРазных + ?(ВсегоРазных1 > 0, 1, 0);
	РегламентированнаяОтчетность.УдалитьУзел(СвТСДеят1);
	
	Листы4 = Данные.Листы4;
	ВсегоРазных1 = 0;
	Для Каждого Лист4 Из Листы4 Цикл
		Если Не ЗначениеЗаполнено(Лист4.КОД_ОБЪЕКТА) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвОбДеят2);
		НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрМНОбПП");
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодОбъект", Лист4.КОД_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПризОбъект", Лист4.ПРИЗНАК_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПлощОбъект", Лист4.ПЛОЩАДЬ_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист4.ОКТМО_ОБЪЕКТА);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист4.Индекс1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист4.КодРегиона1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист4.Район1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист4.Город1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист4.НаселенныйПункт1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист4.Улица1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист4.Дом1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист4.Корпус1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист4.Квартира1);
		ВсегоРазных1 = ВсегоРазных1 + 1;
	КонецЦикла;
	ВсегоРазных = ВсегоРазных + ?(ВсегоРазных1 > 0, 1, 0);
	РегламентированнаяОтчетность.УдалитьУзел(СвОбДеят2);
	
	Если ВсегоРазных > 1 Тогда 
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Должны быть заполнены данные на лисах 3 ЛИБО данные на листах 4 ЛИБО данные на листах 5", УникальныйИдентификатор);
		ВызватьИсключение "";
	ИначеЕсли ВсегоРазных = 0 Тогда 
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены сведения о видах деятельности", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанными_Форма2016_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(Параметры, ДеревоВыгрузки);
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_ЗПУСН = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "ЗПУСН");
	СвМестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвМестПД");
	МестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(СвМестПД, "МестПД");
	СвТСДеят1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвТСДеят1");
	СвОбДеят2 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвОбДеят2");
	
	Данные = Объект.ДанныеУведомления.Получить();
	Листы3_0 = Данные.Листы3_0;
	Для Каждого Лист3_0 Из Листы3_0 Цикл
		Для Инд = 2 По 4 Цикл
			Если Не ЗначениеЗаполнено(Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]) Тогда 
				Продолжить;
			КонецЕсли;
		
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(МестПД);
			НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрОбРФ");
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист3_0["Индекс" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист3_0["КодРегиона" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист3_0["Район" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист3_0["Город" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист3_0["НаселенныйПункт" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист3_0["Улица" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист3_0["Дом" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист3_0["Корпус" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист3_0["Квартира" + Инд]);
		КонецЦикла;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(МестПД);
	
	Листы3 = Данные.Листы3;
	Для Каждого Лист3 Из Листы3 Цикл
		ЗначКод = Лист3["КОД_ТС1"];
		Если ЗначениеЗаполнено(ЗначКод) Тогда
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвТСДеят1);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодТС", ЗначКод);
			СведТС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "СведТС");
			Для Инд = 1 По 3 Цикл
				Если ЗначениеЗаполнено(Лист3["ВИН_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["МАРКА_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["ЗНАК_ТС" + Инд])
					Или ЗначениеЗаполнено(Лист3["ТОННАЖ_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["МЕСТ_ТС" + Инд]) Тогда 
					НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СведТС);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ИдНомТС", Лист3["ВИН_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "МаркаТС", Лист3["МАРКА_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "РегЗнакТС", Лист3["ЗНАК_ТС" + Инд]);
					
					Если ЗначКод = "01" Или ЗначКод = "04" Тогда 
						Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ГрузТС", Лист3["ТОННАЖ_ТС" + Инд]);
					ИначеЕсли ЗначКод = "02" Или ЗначКод = "03" Тогда 
						Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КолПосадМест", Лист3["МЕСТ_ТС" + Инд]);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			РегламентированнаяОтчетность.УдалитьУзел(СведТС);
		КонецЕсли;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(СвТСДеят1);
	
	Листы4 = Данные.Листы4;
	Для Каждого Лист4 Из Листы4 Цикл
		Если Не ЗначениеЗаполнено(Лист4.КОД_ОБЪЕКТА) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвОбДеят2);
		НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрМНОбПП");
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодОбъект", Лист4.КОД_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПризОбъект", Лист4.ПРИЗНАК_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПлощОбъект", Лист4.ПЛОЩАДЬ_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист4.ОКТМО_ОБЪЕКТА);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист4.Индекс1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист4.КодРегиона1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист4.Район1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист4.Город1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист4.НаселенныйПункт1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист4.Улица1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист4.Дом1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист4.Корпус1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист4.Квартира1);
	КонецЦикла;
	
	РегламентированнаяОтчетность.УдалитьУзел(СвОбДеят2);
	
КонецПроцедуры

#КонецОбласти
#КонецЕсли