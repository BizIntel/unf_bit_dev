&НаСервере
Перем мОбъектОтчета;

&НаСервере
Перем ВидДокументаКорректирующий;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Обход ошибки платформы Параметр сеанса отсутствует или удален
	ТабличныйДокумент.Очистить();
	
	СформироватьСтруктуруРеквизитовФормы();
	
	СтруктураРеквизитовФормы.СписокПечатаемыхЛистов = Новый СписокЗначений;

	СтруктураРеквизитовФормы.мЧтоОчищать  			   = "Расчетную ведомость";
	СтруктураРеквизитовФормы.мСоставПоказателей 	   = "СоставПоказателей2010Кв4";
	СтруктураРеквизитовФормы.мПоляПоискаПоказателяВТСП = "КодПоказателяПоСоставу, КодПоказателяПоФорме";
	
	СоответствиеЕдиницыИзмеренияДелителю = Новый Структура;
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1", 1);
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1000", 1000);
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1000000", 1000000);

	МассивБулево = Новый Массив;
	МассивБулево.Добавить(Тип("Булево"));
	СтруктураРеквизитовФормы.мОписаниеТиповБулево = Новый ОписаниеТипов(МассивБулево);
	
	СтруктураРеквизитовФормы.мОписаниеТиповЧислоЕ = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2));
	
	СтруктураРеквизитовФормы.мИдГруппы1 = "П0004100010";
	
	КолИсхСтрокИдГруппы1 = 1;

	КолКолонокИдГруппы1 = 8;
	
	СтрПерваяСтраница = ЭтаФорма.ТаблицаСтраницыРазделаРаздел12.Добавить();
	СтрПерваяСтраница.Представление               = "Новая страница";
	СтрПерваяСтраница.АктивнаяСтраница            = Истина;
	СтрПерваяСтраница.АвтоматическоеПредставление = Истина;

	СтруктураДанныхТитульный   = Новый Структура;
	СтруктураДанныхРаздел30    = Новый Структура;
	СтруктураДанныхРаздел41    = Новый Структура;
	СтруктураДанныхРаздел42    = Новый Структура;
	СтруктураДанныхРаздел43    = Новый Структура;
 	СтруктураДанныхРаздел50    = Новый Структура;

	мСтруктураМногострочныхРазделов = Новый Структура;
	мСтруктураМногострочныхРазделов.Вставить(СтруктураРеквизитовФормы.мИдГруппы1, СтруктураРеквизитовФормы.мИдГруппы1);
		
	мСтруктураМногостраничныхРазделов = Новый Структура;
	мСтруктураМногостраничныхРазделов.Вставить("Раздел12", "ТаблицаСтраницыРазделаРаздел12");
	
	мСтруктураИсхКолвоСтрокРазделов = Новый Структура;
	мСтруктураИсхКолвоСтрокРазделов.Вставить(СтруктураРеквизитовФормы.мИдГруппы1, КолИсхСтрокИдГруппы1);

	мСтруктураКолвоКолонокРазделов  = Новый Структура;
	мСтруктураКолвоКолонокРазделов.Вставить(СтруктураРеквизитовФормы.мИдГруппы1, КолКолонокИдГруппы1);
	
	ЦветЗаполняетсяТолькоВручную        = Новый Цвет(255, 255, 225);
	ЦветЗаполняетсяАвтоКорректир        = Новый Цвет(255, 240, 200);
	ЦветЗаполняетсяАвтоБезКорректир     = Новый Цвет(230, 240, 220);
	ЦветЗаполняетсяАвтоАрифметика       = Новый Цвет(192, 220, 192);     // ЗЕЛЕНЫЙ
	ЦветЗаполняетсяОднозначноВручную    = Новый Цвет(255, 255, 192);     // ЖЕЛТЫЙ
	ЦветЗаполняетсяАвтоматически        = Новый Цвет(255, 255, 255);     // Белый, Ввод запрещен
	СтруктураРеквизитовФормы.ЦветБелый  = Новый Цвет(255, 255, 255);
	СтруктураРеквизитовФормы.ЦветЖелтый = Новый Цвет(255, 255, 192);
	
	мСтруктураЦветовРаскраски = Новый Структура;
	мСтруктураЦветовРаскраски.Вставить("_1", ЦветЗаполняетсяТолькоВручную);
	мСтруктураЦветовРаскраски.Вставить("_2", ЦветЗаполняетсяАвтоКорректир);
	мСтруктураЦветовРаскраски.Вставить("_3", ЦветЗаполняетсяАвтоБезКорректир);
	мСтруктураЦветовРаскраски.Вставить("_4", ЦветЗаполняетсяАвтоАрифметика);
	мСтруктураЦветовРаскраски.Вставить("_0", ЦветЗаполняетсяОднозначноВручную);
	мСтруктураЦветовРаскраски.Вставить("_5", ЦветЗаполняетсяАвтоматически);

	мСтруктураВариантыЗаполнения       = Новый Структура;
	мСтруктураВариантыЗаполненияЭталон = Новый Структура;
		
	// Версия формы.
	СтруктураРеквизитовФормы.мВерсияФормы = "24/01/2011";
	
	// Код отчета (условный).
	СтруктураРеквизитовФормы.мКодОтчета = "1169999";
	
	СтруктураРеквизитовФормы.ВариантыФорматовВыгрузки = Новый СписокЗначений;
	СтруктураРеквизитовФормы.ВариантыФорматовВыгрузки.Добавить(СтруктураРеквизитовФормы.мСоставПоказателей, "Формат 7.00", Истина);
	
	СтруктураРеквизитовФормы.мПечатныеФормы = Новый СписокЗначений;

	ОбъектОтчет = Отчеты[Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7)];
		
	ИмяРаздела = "Титульный";
		
	ЭтаФормаИмя = ЭтаФорма.ИмяФормы;
	ИмяМакета = Сред(ЭтаФормаИмя, СтрНайти(ЭтаФормаИмя, "ФормаОтчета")) + "_" + ИмяРаздела;
	Попытка
		ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФормаИмя).ПолучитьМакет(ИмяМакета));
	Исключение
	КонецПопытки;
	
	СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела;

	СтруктураРеквизитовФормы.мВыбраннаяФорма            		  = Параметры.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета              = Параметры.мДатаКонцаПериодаОтчета;
	СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета             = Параметры.мДатаНачалаПериодаОтчета;
	СтруктураРеквизитовФормы.мСкопированаФорма                    = Параметры.мСкопированаФорма;
	СтруктураРеквизитовФормы.мСохраненныйДок                      = Параметры.мСохраненныйДок;
	СтруктураРеквизитовФормы.Организация 			              = Параметры.Организация;
	СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически = Параметры.СформироватьФормуОтчетаАвтоматически;
	СтруктураРеквизитовФормы.ВидДокумента                         = Параметры.ВидДокумента;
	СтруктураРеквизитовФормы.НеОтображатьПредупреждение           = Параметры.НеОтображатьПредупреждение;
	
	ВидДокументаКорректирующий = ?(СтруктураРеквизитовФормы.ВидДокумента > 0, Истина, Ложь);
	
	ДатаПодписи	= ТекущаяДатаСеанса();
	
	ПорядкиОкругленияОтчетности = Новый Структура;
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1",       Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1000",    Перечисления.ПорядкиОкругленияОтчетности.Окр1000);
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1000000", Перечисления.ПорядкиОкругленияОтчетности.Окр1000000);
	
	Инициализация(Параметры.БезОткрытияФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Заголовок = ЗаголовокРегламентированногоОтчета(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	ОргСтр = " (" + СтруктураРеквизитовФормы.Организация + ")";
	Если СтрНайти(Заголовок, ОргСтр) = 0 Тогда
		Заголовок = Заголовок + ОргСтр;
	КонецЕсли;
	
	Заголовок = Заголовок + ?(СтрНайти(ЭтаФорма.ИмяФормы, "Внешний") > 0, " - внешний отчет", "");
	
	ПодключитьОбработчикОжидания("ВыполнитьПроверкуПередОткрытием", 0.1, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуПередОткрытием()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОткрытиемФормыРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Модифицированность = Ложь;
		Закрыть();
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтаФорма, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
				
		Возврат;
		
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтраницу(Команда)
	
	#Если ВебКлиент Тогда
		ВставитьДополнительнуюСтраницуНаСервере(Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
	#Иначе
		ВставитьДополнительнуюСтраницуИзменитьТаблицуПараметровАвтозаполненияНаСервере(1, Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
	#КонецЕсли
	
	ЗакраситьБелым(ЭтаФорма);	
	ИзменитьФорматОтображенияНуля();
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтроку(Команда)
	
	#Если ВебКлиент Тогда
		
		ДобавитьСтрокуНаСервере(Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
		
	#Иначе
		
		ДобавитьСтрокуНаКлиенте(Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАвто(Команда)
	
	Отказ = Ложь;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Команда", Команда);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьАвтоЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередЗаполнениемРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАвтоЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Команда = ДополнительныеПараметры.Команда;
	
	ЗаполнитьАвтоНаСервере();
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	
	РегламентированнаяОтчетностьКлиент.ОбновитьДеревоРазделовВФормеОтчета(ЭтаФорма);
	
	Если НЕ Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Элементы.РазделыОтчета.ТекущаяСтрока = Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы()[0].ПолучитьИдентификатор();
	КонецЕсли;
	
	Если Элементы.Расшифровать.Видимость Тогда
		Элементы.Расшифровать.Доступность = Истина;
		Элементы.ТабличныйДокументКонтекстноеМенюРасшифровать.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)

	СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация = Истина;
	
	ЗаполнитьСведенияОбОрганизации();	
	    	
	СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация = Ложь;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастроек(Команда)
	
	ОткрытьФормуВыбораСтраниц("ВыбратьДляНастройки");
	    
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезПредставителя(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЧерезПредставителяЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезПредставителяЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиЧерезПредставителяВРегламентированномОтчете(ЭтаФорма, "ПФР");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтчет(Команда)
		
	РегламентированнаяОтчетностьКлиент.МеханизмыОчисткиРегламентированныхОтчетов(ЭтаФорма, "ОчиститьВесьОтчет");
	
	#Если ВебКлиент Тогда
		
		ОчиститьНаСервере();
		
	#Иначе
		
		Если Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Раздел12" Тогда	
			Если ТекущаяСтраницаПервая(ЭтаФорма, "Раздел12") Тогда
				ИзМакета = Ложь;
				ЗакраситьЖелтым(ЭтаФорма);
				
				УстановитьЦветФонаЯчейкиНаКлиенте(,,"Раздел12");
			Иначе 
				ЗакраситьБелым(ЭтаФорма);
			КонецЕсли;
		КонецЕсли; 
		
	#КонецЕсли
	
	РасчетВСтруктуреНаСервере("Раздел12");
	
	ИзменитьФорматОтображенияНуля();
		
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущуюСтраницу(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("ОчиститьТекущуюСтраницуЗавершение", ЭтотОбъект);
	РегламентированнаяОтчетностьКлиент.МеханизмыОчисткиРегламентированныхОтчетов(ЭтаФорма, "ОчиститьТекущийЭкземплярМногостраничногоРаздела" + Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущуюСтраницуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	#Если ВебКлиент Тогда
		
	#Иначе
		
		Если Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Раздел12" Тогда
			
			Если ТекущаяСтраницаПервая(ЭтаФорма, "Раздел12") Тогда
				ИзМакета = Ложь;
				ЗакраситьЖелтым(ЭтаФорма);
				
				УстановитьЦветФонаЯчейкиНаКлиенте(,,"Раздел12");
			Иначе 
				ЗакраситьБелым(ЭтаФорма);
			КонецЕсли;
			
		КонецЕсли; 
		
	#КонецЕсли
	
	РасчетВСтруктуреНаСервере("Раздел12");
	
	ИзменитьФорматОтображенияНуля();
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		
		НомерКорректировки = ТабличныйДокумент.Области.НомерКорректировки.Значение;
		
		СтруктураРеквизитовФормы.ВидДокумента = ?(НомерКорректировки = 0, 0, 1);
		
		УстановитьВидимостьМенюВыгрузкиИОтправки();
		
		ТабличныйДокумент.Области.НомерПачки.Значение = НомерПачки;
		
		ДатаПодписи = ТабличныйДокумент.Области.ДатаПодписи.Значение;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВРабочееМестоПФР(Команда)
	
	Закрыть();	
	
	РегламентированнаяОтчетностьКлиентПереопределяемый.ПерейтиВРабочееМестоПФР(СтруктураРеквизитовФормы.Организация, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланк(Команда)
	
	Отказ = Ложь;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Команда", Команда);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьБланкЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередПечатьюРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланкЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Команда = ДополнительныеПараметры.Команда;
		
	Печать(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернетеЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтаФорма, "ПФР");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьВыгрузкуОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура Расшифровать(Команда)
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			 СтруктураРеквизитовФормы.Организация);
	ПараметрыОтчета.Вставить("мДатаНачалаПериодаОтчета", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ПараметрыОтчета.Вставить("мДатаКонцаПериодаОтчета",  СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	ИДИменПоказателей = Новый Массив();
	ИДИменПоказателей.Добавить(Элементы.ТабличныйДокумент.ТекущаяОбласть.Имя);
	
	РегламентированнаяОтчетностьКлиент.ОткрытьРасшифровкуОтчета(Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7), Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") + 7), ИДИменПоказателей, ПараметрыОтчета)
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьОтчет(Команда)
	
	Если Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтраницуЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru='Удалить текущую страницу?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.РазделыОтчета.ТекущиеДанные;
	
	КопияТекущиеДанные = ТекущиеДанные;
	
	ТекущиеДанные = ТекущиеДанные.ПолучитьРодителя();
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ПолучитьЭлементы().Количество() = 1 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтраницаРазделаПослеУдаления = Неопределено;
	Если КопияТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = ТекущиеДанные.ПолучитьЭлементы().Количество() Тогда
		ТекущаяСтраницаРазделаПослеУдаления = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(ТекущиеДанные.ПолучитьЭлементы(), "КолонкаНомерСтраницыРазделаОтчета", КопияТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета - 1);
	КонецЕсли;
	
	УдалитьДополнительнуюСтраницуНаСервере(Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
	
	ИзменитьФорматОтображенияНуля();
	
	ТекущиеДанные.ПолучитьЭлементы().Удалить(ТекущиеДанные.ПолучитьЭлементы().Индекс(КопияТекущиеДанные));
	
	НомерСтраницы = 1;
	
	Для Каждого СтраницаРаздела Из ТекущиеДанные.ПолучитьЭлементы() Цикл
		
		СтраницаРаздела.КолонкаРазделыОтчета              = "Стр. " + НомерСтраницы;
		СтраницаРаздела.КолонкаНомерСтраницыРазделаОтчета = НомерСтраницы;
		
		НомерСтраницы = НомерСтраницы + 1;
		
	КонецЦикла;
	
	Если НЕ ТекущаяСтраницаРазделаПослеУдаления = Неопределено Тогда
		Элементы.РазделыОтчета.ТекущаяСтрока = ТекущаяСтраницаРазделаПослеУдаления.ПолучитьИдентификатор();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	
	ТекТабличноеПоле = ЭтаФорма["ТабличныйДокумент"];

	ТекущаяОбласть = ТекТабличноеПоле.ТекущаяОбласть;
	ИмяГруппы	   = РегламентированнаяОтчетностьКлиент.РазделТекущейОбласти(ЭтаФорма, ТекущаяОбласть);

	Если ИмяГруппы = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = НСтр("ru='Не выбрана удаляемая строка многострочного раздела.'");
	
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;

	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтрокуЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru='Удалить выбранную строку?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	#Если ВебКлиент Тогда
		
		УдалитьДополнительнуюСтрокуНаСервере();
		
	#Иначе
		
		УдалитьДополнительнуюСтрокуНаКлиенте();
		
	#КонецЕсли
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура СформироватьСтруктуруРеквизитовФормы()
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("ВыводитьСтраницуВТаблДокНаСервере");
	СтруктураРеквизитовФормы.Вставить("НаимТекущегоРаздела");
	СтруктураРеквизитовФормы.Вставить("Организация");
	СтруктураРеквизитовФормы.Вставить("ЕдиницаИзмерения");
	СтруктураРеквизитовФормы.Вставить("ТочностьЕдиницыИзмерения");
	СтруктураРеквизитовФормы.Вставить("КатегорияНалогоплательщика");
	СтруктураРеквизитовФормы.Вставить("ВидДокумента");
	СтруктураРеквизитовФормы.Вставить("ВариантыФорматовВыгрузки");
	СтруктураРеквизитовФормы.Вставить("мАвтоВыборКодов");
	СтруктураРеквизитовФормы.Вставить("Массив1");
	СтруктураРеквизитовФормы.Вставить("мБезОткрытияФормы");
	СтруктураРеквизитовФормы.Вставить("мРежимПечати");
	СтруктураРеквизитовФормы.Вставить("мВариант");
	СтруктураРеквизитовФормы.Вставить("мКодОтчета");
	СтруктураРеквизитовФормы.Вставить("мВерсияФормы");
	СтруктураРеквизитовФормы.Вставить("мВПрограммеИзмененаОрганизация");
	СтруктураРеквизитовФормы.Вставить("мВыбраннаяФорма");
	СтруктураРеквизитовФормы.Вставить("мДатаНачалаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мДелитель");
	СтруктураРеквизитовФормы.Вставить("мДокументВосстановлен");
	СтруктураРеквизитовФормы.Вставить("мЗаписываетсяНовыйДокумент");
	СтруктураРеквизитовФормы.Вставить("мЗаписьЗапрещена");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы1");
	СтруктураРеквизитовФормы.Вставить("мИнтервалАвтосохранения");
	СтруктураРеквизитовФормы.Вставить("мОписаниеТиповБулево");
	СтруктураРеквизитовФормы.Вставить("мОписаниеТиповЧислоЕ");
	СтруктураРеквизитовФормы.Вставить("мПериодичность");
	СтруктураРеквизитовФормы.Вставить("мПечатныеФормы");
	СтруктураРеквизитовФормы.Вставить("мПолноеИмяФайлаВнешнейОбработки");
	СтруктураРеквизитовФормы.Вставить("мПоляПоискаПоказателяВТСП");
	СтруктураРеквизитовФормы.Вставить("мСкопированаИз2010");
	СтруктураРеквизитовФормы.Вставить("мСкопированаФорма");
	СтруктураРеквизитовФормы.Вставить("мСоставПоказателей");
	СтруктураРеквизитовФормы.Вставить("мСохраненныйДок");
	СтруктураРеквизитовФормы.Вставить("мСтрокаФормата");
	СтруктураРеквизитовФормы.Вставить("мСчетчикСтраниц");
	СтруктураРеквизитовФормы.Вставить("мЧтоОчищать");
	СтруктураРеквизитовФормы.Вставить("НомерГода");
	СтруктураРеквизитовФормы.Вставить("ФлагСохранения");
	СтруктураРеквизитовФормы.Вставить("ФлажокОтклАвтоРасчет", Ложь);
	СтруктураРеквизитовФормы.Вставить("ЦветБелый");
	СтруктураРеквизитовФормы.Вставить("ЦветЖелтый");
   	СтруктураРеквизитовФормы.Вставить("СписокПечатаемыхЛистов");
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуЗаполнить", Ложь);
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуРасшифровать", Ложь);
	СтруктураРеквизитовФормы.Вставить("СформироватьФормуОтчетаАвтоматически");
	СтруктураРеквизитовФормы.Вставить("ТекущаяСтрокаРазделовОтчета");
	СтруктураРеквизитовФормы.Вставить("НеОтображатьПредупреждение");
	СтруктураРеквизитовФормы.Вставить("ДанныеОтчетаИзмененыВручную", Ложь);
	СтруктураРеквизитовФормы.Вставить("ОКВЭД",  "");
	СтруктураРеквизитовФормы.Вставить("ОКВЭД2", "");	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета()
	
	СтруктураЗависимыхЯчеекДляАвторасчета = Новый Структура;
	
	// Раздел 1.
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011003", "П000200024103;П000300034103;П000300039103");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011103", "П000200024104;П000300034104;П000300039104");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011203", "П000200024105;П000300034105;П000300039105");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011303", "П000200024106;П000300034106;П000300039106");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011004", "П000200024203;П000300034203;П000300039203");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011104", "П000200024204;П000300034204;П000300039204");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011204", "П000200024205;П000300034205;П000300039205");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011304", "П000200024206;П000300034206;П000300039206");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011005", "П000200024303;П000300034303;П000300039303");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011105", "П000200024304;П000300034304;П000300039304");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011205", "П000200024305;П000300034305;П000300039305");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011305", "П000200024306;П000300034306;П000300039306");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011006", "П000200024403;П000300034403;П000300039403");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011106", "П000200024404;П000300034404;П000300039404");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011206", "П000200024405;П000300034405;П000300039405");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011306", "П000200024406;П000300034406;П000300039406");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011403", "П000100011103;П000100011203;П000100011303;П000200024104;П000300034104;П000300039104;П000200024105;П000300034105;П000300039105;П000200024106;П000300034106;П000300039106");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011404", "П000100011104;П000100011204;П000100011304;П000200024204;П000300034204;П000300039204;П000200024205;П000300034205;П000300039205;П000200024206;П000300034206;П000300039206");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011405", "П000100011105;П000100011205;П000100011305;П000200024304;П000300034304;П000300039304;П000200024305;П000300034305;П000300039305;П000200024306;П000300034306;П000300039306");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100011406", "П000100011106;П000100011206;П000100011306;П000200024404;П000300034404;П000300039404;П000200024405;П000300034405;П000300039405;П000200024406;П000300034406;П000300039406");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100013003", "П000100010003;П000100011003;П000100012003;П000200024103;П000300034103;П000300039103");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100013004", "П000100010004;П000100011004;П000100012004;П000200024203;П000300034203;П000300039203");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100013005", "П000100010005;П000100011005;П000100012005;П000200024303;П000300034303;П000300039303");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100013006", "П000100010006;П000100011006;П000100012006;П000200024403;П000300034403;П000300039403");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100014403", "П000100014103;П000100014203;П000100014303");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100014404", "П000100014104;П000100014204;П000100014304");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100014405", "П000100014105;П000100014205;П000100014305");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100014406", "П000100014106;П000100014206;П000100014306");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100015003", "П000100013003;П000100014003;П000100010003;П000100011003;П000100012003;П000200024103;П000300034103;П000300039103");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100015004", "П000100013004;П000100014004;П000100010004;П000100011004;П000100012004;П000200024203;П000300034203;П000300039203");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100015005", "П000100013005;П000100014005;П000100010005;П000100011005;П000100012005;П000200024303;П000300034303;П000300039303");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000100015006", "П000100013006;П000100014006;П000100010006;П000100011006;П000100012006;П000200024403;П000300034403;П000300039403");
	
	// Раздел 2.
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200020003", "П000200020103;П000200020203");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200020004", "П000200020104;П000200020204");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200020005", "П000200020105;П000200020205");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200020006", "П000200020106;П000200020206");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200021003", "П000200021103;П000200021203");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200021004", "П000200021104;П000200021204");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200021005", "П000200021105;П000200021205");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200021006", "П000200021106;П000200021206");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200021603", "П000200021703;П000200021803");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200021604", "П000200021704;П000200021804");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200021605", "П000200021705;П000200021805");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200021606", "П000200021706;П000200021806");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200022003", "П000200020103;П000200021103;П000200021403;П000200021703");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200022004", "П000200020104;П000200021104;П000200021404;П000200021704");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200022005", "П000200020105;П000200021105;П000200021405;П000200021705");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200022006", "П000200020106;П000200021106;П000200021406;П000200021706");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200022103", "П000200020203;П000200021203;П000200021503;П000200021803");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200022104", "П000200020204;П000200021204;П000200021504;П000200021804");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200022105", "П000200020205;П000200021205;П000200021505;П000200021805");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000200022106", "П000200020206;П000200021206;П000200021506;П000200021806");
	
	// Раздел 3.
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300030003", "П000300030103;П000300030203");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300030004", "П000300030104;П000300030204");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300030005", "П000300030105;П000300030205");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300030006", "П000300030106;П000300030206");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300031003", "П000300031103;П000300031203");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300031004", "П000300031104;П000300031204");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300031005", "П000300031105;П000300031205");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300031006", "П000300031106;П000300031206");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300031603", "П000300031703;П000300031803");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300031604", "П000300031704;П000300031804");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300031605", "П000300031705;П000300031805");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300031606", "П000300031706;П000300031806");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300032003", "П000300030103;П000300031103;П000300031403;П000300031703");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300032004", "П000300030104;П000300031104;П000300031404;П000300031704");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300032005", "П000300030105;П000300031105;П000300031405;П000300031705");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300032006", "П000300030106;П000300031106;П000300031406;П000300031706");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300032103", "П000300030203;П000300031203;П000300031503;П000300031803");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300032104", "П000300030204;П000300031204;П000300031504;П000300031804");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300032105", "П000300030205;П000300031205;П000300031505;П000300031805");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300032106", "П000300030206;П000300031206;П000300031506;П000300031806");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300035003", "П000300035103;П000300035203");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300035004", "П000300035104;П000300035204");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300035005", "П000300035105;П000300035205");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300035006", "П000300035106;П000300035206");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300036003", "П000300036103;П000300036203");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300036004", "П000300036104;П000300036204");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300036005", "П000300036105;П000300036205");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300036006", "П000300036106;П000300036206");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300036303", "П000300036403;П000300036503");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300036304", "П000300036404;П000300036504");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300036305", "П000300036405;П000300036505");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300036306", "П000300036406;П000300036506");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300037003", "П000300035103;П000300036103;П000300036403");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300037004", "П000300035104;П000300036104;П000300036404");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300037005", "П000300035105;П000300036105;П000300036405");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300037006", "П000300035106;П000300036106;П000300036406");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300037103", "П000300035203;П000300036203;П000300036503");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300037104", "П000300035204;П000300036204;П000300036504");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300037105", "П000300035205;П000300036205;П000300036505");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300037106", "П000300035206;П000300036206;П000300036506");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300038003", "П000300035003;П000300036003;П000300036303;П000300035103;П000300035203;П000300036103;П000300036203;П000300036403;П000300036503");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300038004", "П000300035004;П000300036004;П000300036304;П000300035104;П000300035204;П000300036104;П000300036204;П000300036404;П000300036504");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300038005", "П000300035005;П000300036005;П000300036305;П000300035105;П000300035205;П000300036105;П000300036205;П000300036405;П000300036505");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000300038006", "П000300035006;П000300036006;П000300036306;П000300035106;П000300035206;П000300036106;П000300036206;П000300036406;П000300036506");
	
	// Раздел 4.1.
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000410002005", "П000410001005");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000410002006", "П000410001006");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000410002007", "П000410001007");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000410002008", "П000410001008");
	
	// Раздел 4.2.
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042303", "П000420042103;П000420042203");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042304", "П000420042104;П000420042204");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042305", "П000420042105;П000420042205");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042306", "П000420042106;П000420042206");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042603", "П000420042403;П000420042503");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042604", "П000420042404;П000420042504");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042605", "П000420042405;П000420042505");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042606", "П000420042406;П000420042506");
	
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042903", "П000420042703;П000420042803");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042904", "П000420042704;П000420042804");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042905", "П000420042705;П000420042805");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000420042906", "П000420042706;П000420042806");
	
	// Раздел 4.3.
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000430043203", "П000430043003;П000430043103");
			
	// Раздел 5.
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000500053003", "П000500051003;П000500052003");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("П000500053004", "П000500051004;П000500052004");
	
КонецПроцедуры

&НаСервере
Процедура Инициализация(БезОткрытияФормы = Ложь)
	
	СтруктураРеквизитовФормы.мБезОткрытияФормы = БезОткрытияФормы;

	ЗаполнитьНачальныеНастройки();
	
	ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета();
	
	ЗаполнитьМассив();
    	
	ФормироватьСтруктуруСвойствСтраниц();
	
	СформироватьДеревоРазделовОтчетаНаСервере();
    
	Если НЕ БезОткрытияФормы Тогда
		СформироватьСпискиВыбора();
	КонецЕсли;
		
	НачальнаяПодготовкаФормы();
	
	ПроверкаЗакраскиТитульного();		
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	
	ЗаполнитьПустыеСтруктурыДанных();
	
	РегламентированнаяОтчетность.ДобавитьКнопкуПрисоединенныеФайлы(ЭтаФорма);
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма, "ПФР");
	
	Если СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически Тогда
		
		СохрФлажокОтклАвтоРасчет = СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет;
		
		Если СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
			
			СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Ложь;
			
		КонецЕсли;
		
		ЗаполнитьАвтоНаСервере();
		
		СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = СохрФлажокОтклАвтоРасчет;
		
	КонецЕсли;
	
	Если НЕ РегламентированнаяОтчетностьКлиентСерверПереопределяемый.ИмяОсновнойФормыРСВ1() = "ОсновнаяФорма"
	   И СтруктураРеквизитовФормы.ВидДокумента = 0 Тогда
	   
		Элементы.Выгрузить.Видимость                     = Ложь;
		Элементы.ОтправитьВКонтролирующийОрган.Видимость = Ложь;
		Элементы.ПроверитьВыгрузку.Видимость             = Ложь;
		Элементы.ПроверитьВИнтернете.Видимость           = Ложь;
		
		Если НЕ СтруктураРеквизитовФормы.НеОтображатьПредупреждение Тогда
			Элементы.Предупреждение.Видимость = Истина;
		Иначе
			Элементы.Предупреждение.Видимость = Ложь;
		КонецЕсли;
		
	Иначе
		
		Элементы.Предупреждение.Видимость                = Ложь;
		Элементы.Выгрузить.Видимость                     = Истина;
		Элементы.ОтправитьВКонтролирующийОрган.Видимость = Истина;
		Элементы.ПроверитьВыгрузку.Видимость             = Истина;
		Элементы.ПроверитьВИнтернете.Видимость           = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаЗакраскиТитульного()

	Если ТабличныйДокумент.Области.ПрПодп.Значение = "1" Тогда 		
		ТабличныйДокумент.Области.ДокУпПред.Защита = Истина;
		ТабличныйДокумент.Области.ДокУпПред.ЦветФона = СтруктураРеквизитовФормы.ЦветБелый;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачальныеНастройки()
	
	ЭтаФормаИмя = ЭтаФорма.ИмяФормы;
	МакетСоставаПоказателей = ОбъектОтчета(ЭтаФормаИмя).ПолучитьМакет(СтруктураРеквизитовФормы.мСоставПоказателей);
	
	Для Инд = 0 По МакетСоставаПоказателей.Области.Количество() - 1 Цикл
				
		ТекОбласть    = МакетСоставаПоказателей.Области[Инд];
		ИмяСтраницы   = ТекОбласть.Имя;
		
		ЭтаФорма["ТаблицаВариантыЗаполнения" + ИмяСтраницы].Добавить();
		
		Для Ном = ТекОбласть.Верх По ТекОбласть.Низ Цикл
            					
			// Код показателя (по составу показателей) определяется по первой колонке макета.
			КодПоказателя = СокрП(МакетСоставаПоказателей.Область(Ном, 1).Текст);
			ИмяПоказателя = КодПоказателя;

			Если КодПоказателя = "===" Тогда
				Прервать;
			КонецЕсли;

			Если Лев(КодПоказателя, 2) = "//" Тогда
				Продолжить;
			КонецЕсли;

			КодПоказателяПоФорме = СокрЛП(МакетСоставаПоказателей.Область(Ном, 2).Текст);
			ПризнМногострочность = СокрЛП(МакетСоставаПоказателей.Область(Ном, 3).Текст);
			ТипДанныхРеквизита   = СокрЛП(МакетСоставаПоказателей.Область(Ном, 4).Текст);
			стрКолСтрокИсходный  = СокрЛП(МакетСоставаПоказателей.Область(Ном, 5).Текст);
			стрВариантЗаполнения = РегламентированнаяОтчетность.ПолучитьВариантЗаполненияПоказателяРегОтчета(МакетСоставаПоказателей, Ном);
			КодПоказателяПоСтруктуре = СокрЛП(МакетСоставаПоказателей.Область(Ном, 9).Текст);

			чКолСтрокИсходный  = ? (ПустаяСтрока(стрКолСтрокИсходный),  0, Число(стрКолСтрокИсходный));
			чВариантЗаполнения = ? (ПустаяСтрока(стрВариантЗаполнения), 0, Число(стрВариантЗаполнения));

			НоваяСтрока = мТаблицаСоставПоказателей.Добавить();
			НоваяСтрока.ИмяПоляТаблДокумента   = ИмяСтраницы;
			НоваяСтрока.КодПоказателяПоСоставу = КодПоказателя;
			НоваяСтрока.КодПоказателяПоФорме   = КодПоказателяПоФорме;
			НоваяСтрока.ПризнМногострочности   = ПризнМногострочность;
			НоваяСтрока.ТипДанныхПоказателя    = ТипДанныхРеквизита;
			НоваяСтрока.КодПоказателяПоСтруктуре = КодПоказателяпоСтруктуре;

			Если чВариантЗаполнения <> 0 Тогда
				НоваяСтрока = ЭтаФорма["ТаблицаВариантыЗаполнения" + ИмяСтраницы][0].ТаблицаВариантовЗаполнения.Добавить();
				НоваяСтрока.КодПоказателя      = ? (Не ПустаяСтрока(КодПоказателяПоФорме), КодПоказателяПоФорме, КодПоказателя);
				НоваяСтрока.ВариантЗаполнения  = чВариантЗаполнения;
			КонецЕсли;

		КонецЦикла;

		Если ЭтаФорма["ТаблицаВариантыЗаполнения" + ИмяСтраницы][0].ТаблицаВариантовЗаполнения.Количество() > 0 Тогда	
			
			мСтруктураВариантыЗаполнения.Вставить(ИмяСтраницы, ИмяСтраницы);
			мСтруктураВариантыЗаполненияЭталон.Вставить(ИмяСтраницы, ИмяСтраницы);
						
		Конецесли;

	КонецЦикла;
	
	ФормироватьСтруктуруСтраницОтчета();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМассив()
		
	СтруктураРеквизитовФормы.Массив1 = Новый СписокЗначений;
	Для каждого Эл Из мТаблицаСоставПоказателей Цикл
		Показатель = Эл.КодПоказателяПоСоставу;
		Если СтрНайти(Показатель, "П0001") > 0 Тогда
			СтруктураРеквизитовФормы.Массив1.Добавить(Показатель);	
		КонецЕсли;  	
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ФормироватьСтруктуруСвойствСтраниц()
	
	мСвойстваРазделовДекларации.ПолучитьЭлементы().Очистить();

	СтрокаУровня1 = мСвойстваРазделовДекларации.ПолучитьЭлементы().Добавить();

	СтрокаУровня1.ИмяСтраницы                          = "Титульный";
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Ложь;
	СтрокаУровня1.ОчищатьРаздел                        = Ложь;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Ложь;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Ложь;

	СтрокаУровня1 = мСвойстваРазделовДекларации.ПолучитьЭлементы().Добавить();

	СтрокаУровня1.ИмяСтраницы                          = "Раздел12";
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Истина;
	СтрокаУровня1.ОчищатьРаздел                        = Истина;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Ложь;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Истина;

	СтрокаУровня1 = мСвойстваРазделовДекларации.ПолучитьЭлементы().Добавить();

	СтрокаУровня1.ИмяСтраницы                          = "Раздел30";
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Ложь;
	СтрокаУровня1.ОчищатьРаздел                        = Истина;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Ложь;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Истина;
	                           	
	СтрокаУровня1 = мСвойстваРазделовДекларации.ПолучитьЭлементы().Добавить();

	СтрокаУровня1.ИмяСтраницы                          = "Раздел41";
	СтрокаУровня1.СохранятьМногострКакТЗ               = Истина;
	СтрокаУровня1.МногостраничностьВРазделе            = Ложь;
	СтрокаУровня1.ОчищатьРаздел                        = Истина;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Ложь;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Истина;
	
	НовСтр = СтрокаУровня1.МногострочностьВРазделе.Добавить();
	НовСтр.ИдГруппы = СтруктураРеквизитовФормы.мИдГруппы1;
	НовСтр.Область = "МногострочнаяЧасть";
	НовСтр.ВысотаСтроки = 1;

	СтрокаУровня1 = мСвойстваРазделовДекларации.ПолучитьЭлементы().Добавить();

	СтрокаУровня1.ИмяСтраницы                          = "Раздел42";
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Ложь;
	СтрокаУровня1.ОчищатьРаздел                        = Истина;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Ложь;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Ложь;
	
	СтрокаУровня1 = мСвойстваРазделовДекларации.ПолучитьЭлементы().Добавить();

	СтрокаУровня1.ИмяСтраницы                          = "Раздел43";
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Ложь;
	СтрокаУровня1.ОчищатьРаздел                        = Истина;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Ложь;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Ложь;
	
	СтрокаУровня1 = мСвойстваРазделовДекларации.ПолучитьЭлементы().Добавить();
    
	СтрокаУровня1.ИмяСтраницы                          = "Раздел50";
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Ложь;
	СтрокаУровня1.ОчищатьРаздел                        = Истина;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Ложь;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Истина;

КонецПроцедуры

&НаСервере
Процедура СформироватьСпискиВыбора()
	
	МакетСоставаПоказателей = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет("Списки2010Кв4");
	
	КоллекцияСписковВыбора = Новый Соответствие;
	Для Каждого Область Из МакетСоставаПоказателей.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
			ВерхОбласти = Область.Верх;
			НизОбласти = Область.Низ;
			ТаблСписка = Новый ТаблицаЗначений;
			ТаблСписка.Колонки.Добавить("Код",,, МакетСоставаПоказателей.Область(ВерхОбласти, 1, ВерхОбласти, 1).ШиринаКолонки);
			ТаблСписка.Колонки.Добавить("Название",,, МакетСоставаПоказателей.Область(ВерхОбласти, 2, ВерхОбласти, 2).ШиринаКолонки);
			Для НомСтр = ВерхОбласти По НизОбласти Цикл
				КодПоказателя = СокрП(МакетСоставаПоказателей.Область(НомСтр, 1).Текст);
				Если КодПоказателя <> "###" Тогда
					НовСтрока = ТаблСписка.Добавить();
					НовСтрока.Код = КодПоказателя;
					НовСтрока.Название = СокрП(МакетСоставаПоказателей.Область(НомСтр, 2).Текст);
				КонецЕсли;
			КонецЦикла;
			КоллекцияСписковВыбора.Вставить(Область.Имя, ТаблСписка);
		КонецЕсли;
	КонецЦикла;
	
	СвойстваПоказателей.Очистить();
	
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000200001001", 2, , "Выбор тарифа", КоллекцияСписковВыбора["КодыТарифов"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "Тариф", 2, , "Выбор тарифа", КоллекцияСписковВыбора["КодыТарифов"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "ПрПодп", 1, , "Выбор подписанта", КоллекцияСписковВыбора["Подписант"]);
	
КонецПроцедуры

&НаСервере
Процедура НачальнаяПодготовкаФормы()

	Перем ИсходноеКоличествоСтрокГруппы;

	Если СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически Тогда
		СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация = Истина;
	Иначе
		СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация = Ложь;
	КонецЕсли;

	СтруктураРеквизитовФормы.мАвтоВыборКодов       = Ложь;
	СтруктураРеквизитовФормы.ФлагСохранения        = Ложь;
	СтруктураРеквизитовФормы.мРежимПечати          = Ложь;
	СтруктураРеквизитовФормы.ВидДокумента          = 0;
    
	СтруктураРеквизитовФормы.ВидДокумента = 0;
	ТабличныйДокумент.Области.НомерКорректировки.Значение = 0;
	НомерКорректировки = 0;

	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
        		
		НачальныеОперацииСМногострочнымиБлоками();
		
		// Создаем структуру документа, подтверждающего полномочия представителя.
		мСтруктураДокУпПред = Новый Структура;
		мСтруктураДокУпПред.Вставить("НаименованиеУдостоверяющего", " ");
		мСтруктураДокУпПред.Вставить("СерияРимскиеЦифры", " ");
		мСтруктураДокУпПред.Вставить("СерияРусскиеБуквы", " ");
		мСтруктураДокУпПред.Вставить("НомерУдостоверяющего", " ");
		мСтруктураДокУпПред.Вставить("ДатаВыдачи", "");
		мСтруктураДокУпПред.Вставить("КемВыдан", " ");
		
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			
			// Документ скопирован.
			
			ВосстановитьСохраненныеДанные();
			
		Иначе
			
			// Это новый документ.
			
			СтруктураРеквизитовФормы.ЕдиницаИзмерения         = Перечисления.ПорядкиОкругленияОтчетности.Окр1;
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 0;
            ОтобразитьНомерКорректировки(ЭтаФорма);

			КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
			
		КонецЕсли;
		
		Модифицированность = Истина;

	Иначе
		// При открытии или при копировании сохраненного
		// отчета восстанавливаем сохраненные данные.
		
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			Если Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 2010 И Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) > 2010 Тогда
				СтруктураРеквизитовФормы.мСкопированаИз2010 = Истина;
			КонецЕсли;
			ВосстановитьСохраненныеДанные();
			Модифицированность = Истина;
		Иначе
			ВосстановитьСохраненныеДанные();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСкопированаФорма) Тогда
			СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено;
		КонецЕсли;
		
		Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы
           И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
				   
        	ЗаблокироватьДанныеДляРедактирования(СтруктураРеквизитовФормы.мСохраненныйДок, , ЭтаФорма.УникальныйИдентификатор);

        КонецЕсли;

	КонецЕсли;
	
	ТабличныйДокумент.Области.ДатаПодписи.Значение = ДатаПодписи;
	
	РегламентированнаяОтчетность.ПолучитьСведенияОПоказателяхОтчета(ЭтаФорма);
	
	Если НЕ СтруктураРеквизитовФормы.ОтображатьКнопкуЗаполнить Тогда
		Элементы.Заполнить.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ СтруктураРеквизитовФормы.ОтображатьКнопкуРасшифровать Тогда
		Элементы.Расшифровать.Видимость = Ложь;
		Элементы.ТабличныйДокументКонтекстноеМенюРасшифровать.Видимость = Ложь;
	КонецЕсли;
	
	ПоказатьПериод();
    	
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено
	 Или СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация
	 ИЛИ СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически Тогда

		ЗаполнитьДатуВЯчейкахНаСервере();
		ЗаполнитьСведенияОбОрганизации();
		
	Иначе
		
		РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);

	КонецЕсли;

	Для Каждого СтрокаУровня1 Из мСвойстваРазделовДекларации.ПолучитьЭлементы() Цикл
		НазваниеСтраницы          = СтрокаУровня1.ИмяСтраницы;
		МногостраничностьВРазделе = СтрокаУровня1.МногостраничностьВРазделе;

		Если (НазваниеСтраницы = "Титульный") Или (НазваниеСтраницы = "ФизЛица") Тогда
			Продолжить;
		КонецЕсли;

		ДокВосстановлен = ?(СтруктураРеквизитовФормы.мДокументВосстановлен <> Неопределено, СтруктураРеквизитовФормы.мДокументВосстановлен, Ложь);
		
		Если ДокВосстановлен И МногостраничностьВРазделе Тогда
			Продолжить;
		КонецЕсли;

	КонецЦикла;

	Если ВидДокументаКорректирующий Тогда
		СтруктураРеквизитовФормы.ВидДокумента = 1;
		Если НомерКорректировки = 0 Тогда
			ТабличныйДокумент.Области.НомерКорректировки.Значение = 1;
			НомерКорректировки = 1;
		Иначе
			ТабличныйДокумент.Области.НомерКорректировки.Значение = НомерКорректировки;
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Области.НомерПачки.Значение = НомерПачки;
	
КонецПроцедуры

&НаСервере
Процедура НачальныеОперацииСМногострочнымиБлоками()
	Перем ИсходноеКоличествоСтрокГруппы;

	Для Каждого ЭлементСтруктуры Из мСтруктураМногострочныхРазделов Цикл
		ИмяГруппы = ЭлементСтруктуры.Ключ;
		СтруктураГруппы = ЭтаФорма[ЭлементСтруктуры.Значение];
		
		мСтруктураИсхКолвоСтрокРазделов.Свойство(ИмяГруппы, ИсходноеКоличествоСтрокГруппы);

		Для НСтр = 1 По ИсходноеКоличествоСтрокГруппы Цикл

			СтруктураГруппы.Добавить();
            			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоРазделовОтчетаНаСервере()
	
	СформироватьДеревоРазделовОтчета(ЭтаФорма);
			
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДеревоРазделовОтчетаНаКлиенте() Экспорт
	
	СформироватьДеревоРазделовОтчета(ЭтаФорма);
			
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьДеревоРазделовОтчета(Форма)
	
	Форма["РазделыОтчета"].ПолучитьЭлементы().Очистить();
	
	Для Каждого ЭлементДереваСтраницОтчета Из Форма["мДеревоСтраницОтчета"].ПолучитьЭлементы() Цикл
		
		Если ЭлементДереваСтраницОтчета.ПоказатьСтраницу = 1 Тогда
			
			ЭлементРазделовОтчета = Форма["РазделыОтчета"].ПолучитьЭлементы().Добавить();
			ЭлементРазделовОтчета.КолонкаРазделыОтчета         = ЭлементДереваСтраницОтчета.Представление;
			ЭлементРазделовОтчета.КолонкаРазделыОтчетаСокрНаим = ЭлементДереваСтраницОтчета.ИмяСтраницы;
			ЭлементРазделовОтчета.ИндексКартинки               = 1;
			ЭлементРазделовОтчета.РазделМногостраничный        = Ложь;
			ЭлементРазделовОтчета.РазделМногострочный          = РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(Форма, "мТаблицаМногострочныхРазделов");
			
			НайденноеЗначение = Неопределено;
			
			Если Форма["мСтруктураМногостраничныхРазделов"].Свойство(ЭлементРазделовОтчета.КолонкаРазделыОтчетаСокрНаим, НайденноеЗначение) Тогда
				
				Если НЕ НайденноеЗначение = Неопределено Тогда
					
					НайденноеЗначение = Форма[НайденноеЗначение];
					
					ЭлементРазделовОтчета.ИндексКартинки        = 0;
					ЭлементРазделовОтчета.РазделМногостраничный = Истина;
					
					Для НомерСтраницы = 1 По НайденноеЗначение.Количество() Цикл
						
						СтраницаРазделаОтчета = ЭлементРазделовОтчета.ПолучитьЭлементы().Добавить();
						
						СтраницаРазделаОтчета.КолонкаРазделыОтчета              = "Стр. " + НомерСтраницы;
						СтраницаРазделаОтчета.КолонкаРазделыОтчетаСокрНаим      = ЭлементРазделовОтчета.КолонкаРазделыОтчетаСокрНаим;
						СтраницаРазделаОтчета.КолонкаНомерСтраницыРазделаОтчета = НомерСтраницы;
						СтраницаРазделаОтчета.ИндексКартинки                    = 1;
						СтраницаРазделаОтчета.РазделМногостраничный             = ЭлементРазделовОтчета.РазделМногостраничный;
						СтраницаРазделаОтчета.РазделМногострочный               = ЭлементРазделовОтчета.РазделМногострочный;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЕсли;
				
	КонецЦикла;
			
КонецПроцедуры

&НаСервере
Процедура ФормироватьСтруктуруСтраницОтчета()

	мДеревоСтраницОтчета.ПолучитьЭлементы().Очистить();

	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Титульный";
	СтрокаУровня1.Представление            = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;

	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Раздел12";
	СтрокаУровня1.Представление            = "Раздел 1, 2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;

	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Раздел30";
	СтрокаУровня1.Представление            = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Раздел41";
	СтрокаУровня1.Представление            = "Раздел 4.1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;

	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Раздел42";
	СтрокаУровня1.Представление            = "Раздел 4.2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Раздел43";
	СтрокаУровня1.Представление            = "Раздел 4.3";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
    	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Раздел50";
	СтрокаУровня1.Представление            = "Раздел 5";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;

КонецПроцедуры

&НаСервере
Функция ОпределитьТабличноеПолеПоИдМногострочногоРазделаНаСервере(ИдГруппы) Экспорт
	
	ИдГрупп = Новый Структура;
	ИдГрупп.Вставить("мИдГруппы1", СтруктураРеквизитовФормы.мИдГруппы1);
		
	Возврат ОпределитьТабличноеПолеПоИдМногострочногоРаздела(ИдГруппы, ИдГрупп);
	
КонецФункции

&НаКлиенте
Функция ОпределитьТабличноеПолеПоИдМногострочногоРазделаНаКлиенте(ИдГруппы) Экспорт
	
	ИдГрупп = Новый Структура;
	ИдГрупп.Вставить("мИдГруппы1", СтруктураРеквизитовФормы.мИдГруппы1);
		
	Возврат ОпределитьТабличноеПолеПоИдМногострочногоРаздела(ИдГруппы, ИдГрупп);
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОпределитьТабличноеПолеПоИдМногострочногоРаздела(ИдГруппы, ИдГрупп)
	
	Перем ТекТабличноеПоле;
		
	Если ИдГруппы = ИдГрупп.мИдГруппы1 Тогда
		
		ТекТабличноеПоле = "Раздел41";
		
	КонецЕсли;

	Возврат ТекТабличноеПоле;
	
КонецФункции

&НаСервере
Процедура ВосстановитьСохраненныеДанные()
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеМногостраничныхРазделов;
	Перем ДанныеВариановАвтоЗаполнения;
	Перем ПоказателиОтчета;
	Перем ВерсияФормы;
	Перем Автозаполнение;
	Перем ТаблицаМногостраничногоДокумента;

	Если СтруктураРеквизитовФормы.Организация <> СтруктураРеквизитовФормы.мСохраненныйДок.Организация
	   И СтруктураРеквизитовФормы.Организация <> РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа("СправочникСсылка.Организации")
	   И СтруктураРеквизитовФормы.Организация <> Неопределено Тогда
		СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация = Истина;
	Иначе
		СтруктураРеквизитовФормы.Организация = СтруктураРеквизитовФормы.мСохраненныйДок.Организация;
	КонецЕсли;

	ДатаПодписи                    					  = СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи;
	СтруктураРеквизитовФормы.ЕдиницаИзмерения         = СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения;
	СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения;
	Комментарий                    					  = СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий;
	НомерПачки                                        = СтруктураРеквизитовФормы.мСохраненныйДок.НомерПачки;
	НомерКорректировки                                = СтруктураРеквизитовФормы.мСохраненныйДок.Вид;

	// Восстанавливаем сохраненные данные отчета.
	СписокСохранения = СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета.Получить();

	// Список листов, выводимых на печать.
	ДеревоНастройкиСтраниц = СтруктураРеквизитовФормы.мСохраненныйДок.ДеревоНастройкиСтраниц.Получить();
	
	// Установим актуальные представления разделов.
	Если НЕ ДеревоНастройкиСтраниц = Неопределено Тогда
		
		Для Каждого СтрокаДерева Из ДеревоНастройкиСтраниц.Строки Цикл
			Счетчик = ?(Счетчик = Неопределено, 0, Счетчик);
			ЭлементмДеревоСтраницОтчета = мДеревоСтраницОтчета.ПолучитьЭлементы().Получить(Счетчик);
			Если СтрокаДерева.ИмяСтраницы = ЭлементмДеревоСтраницОтчета.ИмяСтраницы Тогда
				Если НЕ СтрокаДерева.Представление = ЭлементмДеревоСтраницОтчета.Представление Тогда
					СтрокаДерева.Представление = ЭлементмДеревоСтраницОтчета.Представление;
				КонецЕсли;
			Иначе
				Продолжить;
			КонецЕсли;
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
		ЗначениеВРеквизитФормы(ДеревоНастройкиСтраниц.Скопировать(), "мДеревоСтраницОтчета");
		
	КонецЕсли;

	// Восстанавливаем сохраненные данные многострочных разделов.
	Если СписокСохранения.Свойство( "ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) Тогда
				
		Для Каждого ЭлементСтруктуры Из ДанныеМногострочныхРазделов Цикл
			
			НайденноеЗначение = Неопределено;
			
			мСтруктураМногострочныхРазделов.Свойство(ЭлементСтруктуры.Ключ, НайденноеЗначение);
			
			Если НЕ НайденноеЗначение = Неопределено Тогда
				
				ЗначениеВДанныеФормы(ЭлементСтруктуры.Значение, ЭтаФорма[НайденноеЗначение])
				
			КонецЕсли;
						
		КонецЦикла;
						
	КонецЕсли;
	
	// Восстанавливаем сохраненные данные многостраничных разделов.
	Если СписокСохранения.Свойство("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов) Тогда
		
		Для Каждого ЭлементСтруктуры Из ДанныеМногостраничныхРазделов Цикл
					
			НайденноеЗначение = Неопределено;
			
			мСтруктураМногостраничныхРазделов.Свойство(ЭлементСтруктуры.Ключ, НайденноеЗначение);
			
			Если НЕ НайденноеЗначение = Неопределено Тогда
				
				НайденноеЗначение = ЭтаФорма[НайденноеЗначение];
				
				ЗначениеВДанныеФормы(ЭлементСтруктуры.Значение, НайденноеЗначение);
				                     				
				Если НайденноеЗначение[0].Свойство("Данные") Тогда
					
					Для Каждого СтрокаТаблЗнач Из НайденноеЗначение Цикл
						
						Если ТипЗнч(СтрокаТаблЗнач.Данные) = Тип("СписокЗначений") Тогда
							
							СтрокаТаблЗнач.Данные.Очистить();
							СтрокаТаблЗнач.Данные.Добавить(ЭлементСтруктуры.Значение[НайденноеЗначение.Индекс(СтрокаТаблЗнач)].Данные);
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
								
				Если НайденноеЗначение[0].Свойство("ДанныеДопСтрок") Тогда
					
					Ном = 0;
					
					Для Каждого СтрокаТаблЗнач Из ЭлементСтруктуры.Значение Цикл
						
						Если ТипЗнч(СтрокаТаблЗнач.ДанныеДопСтрок) = Тип("Структура") Тогда
							
							Для Каждого ЭлСтруктуры Из СтрокаТаблЗнач.ДанныеДопСтрок Цикл
								
								ТаблЗнач = ЭлСтруктуры.Значение;
								
								ЭлСтруктуры.Значение = ЭтаФорма["Хранилище" + ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ЭлементСтруктуры.Ключ)].Добавить().Таблица;
								
								ЗначениеВДанныеФормы(ТаблЗнач, ЭлСтруктуры.Значение);
								
								НайденноеЗначение[Ном].ДанныеДопСтрок.Добавить(ЭлСтруктуры.Значение);
								
							КонецЦикла;
							
						ИначеЕсли ТипЗнч(СтрокаТаблЗнач.ДанныеДопСтрок) = Тип("ТаблицаЗначений") Тогда
							
							СтрокаТаблЗначДанныеДопСтрок = ЭтаФорма["Хранилище" + ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ЭлементСтруктуры.Ключ)].Добавить().Таблица;
														
							ЗначениеВДанныеФормы(СтрокаТаблЗнач.ДанныеДопСтрок, СтрокаТаблЗначДанныеДопСтрок);
							
							НайденноеЗначение[Ном].ДанныеДопСтрок.Добавить(СтрокаТаблЗначДанныеДопСтрок, "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела");
							
						КонецЕсли;
						
						Ном = Ном + 1;
						
					КонецЦикла;
					
				КонецЕсли;
								   				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Восстанавливаем сохраненные данные вариантов автозаполнения ячеек.
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения", ДанныеВариановАвтоЗаполнения) Тогда
		
		Если НЕ ДанныеВариановАвтоЗаполнения = Неопределено Тогда
			
			мСтруктураВариантыЗаполнения.Очистить();
			
			Для Каждого ЭлементСтруктуры Из ДанныеВариановАвтоЗаполнения Цикл
				
				мСтруктураВариантыЗаполнения.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Ключ);
				
				ЭтаФорма["ТаблицаВариантыЗаполнения" + ЭлементСтруктуры.Ключ].Очистить();
				
				Для Каждого ЭлементМассива Из ЭлементСтруктуры.Значение Цикл
										
					ТаблВарЗаполнения = ЭтаФорма["ТаблицаВариантыЗаполнения" + ЭлементСтруктуры.Ключ].Добавить().ТаблицаВариантовЗаполнения;
										
					ЗначениеВДанныеФормы(ЭлементМассива, ТаблВарЗаполнения);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;

	// Восстанавливаем флажок "ПодсчетаСтраниц".
	СписокСохранения.Свойство("ФлПодсчетСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);

	СписокСохранения.Свойство("ФлОтклВыборЗначений", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	Если СтруктураРеквизитовФормы.мАвтоВыборКодов = Неопределено Тогда
		СтруктураРеквизитовФормы.мАвтоВыборКодов = Ложь;
	КонецЕсли;

	СписокСохранения.Свойство("Автозаполнение", Автозаполнение);
	СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Автозаполнение;
	
	СписокСохранения.Свойство("ДанныеОтчетаИзмененыВручную", СтруктураРеквизитовФормы.ДанныеОтчетаИзмененыВручную);
	
	// Восстанавливаем документ, подтверждающий полномочия представителя.
	СписокСохранения.Свойство("ДокументУпПред", мСтруктураДокУпПред);
	Если мСтруктураДокУпПред = Неопределено Тогда
		
		мСтруктураДокУпПред = Новый Структура;
		мСтруктураДокУпПред.Вставить("НаименованиеУдостоверяющего", " ");
		мСтруктураДокУпПред.Вставить("СерияРимскиеЦифры", " ");
		мСтруктураДокУпПред.Вставить("СерияРусскиеБуквы", " ");
		мСтруктураДокУпПред.Вставить("НомерУдостоверяющего", " ");
		мСтруктураДокУпПред.Вставить("ДатаВыдачи", "");
		мСтруктураДокУпПред.Вставить("КемВыдан", " ");
		
	КонецЕсли;	
		
	// Восстанавливаем версию формы.
	Если СписокСохранения.Свойство("ВерсияФормы", ВерсияФормы) Тогда
		Если ВерсияФормы <> СтруктураРеквизитовФормы.мВерсияФормы Тогда
			СтруктураРеквизитовФормы.ФлагСохранения = Истина;
			ОбновитьПользовательскиеНастройки();
		КонецЕсли;
	КонецЕсли;

	// Восстановим сохраненные данные редактируемых ячеек.
	СписокСохранения.Свойство( "ПоказателиОтчета", ПоказателиОтчета );
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	Префикс = "ПолеТабличногоДокумента";
	
	Для Каждого Раздел Из мСвойстваРазделовДекларации.ПолучитьЭлементы() Цикл	
		
		Если НЕ Раздел.МногостраничностьВРазделе Тогда
			ЭтаФорма["СтруктураДанных" + Раздел.ИмяСтраницы] = ПоказателиОтчета[Префикс + Раздел.ИмяСтраницы];
		КонецЕсли;
	
	КонецЦикла;
	    	
	РегламентированнаяОтчетность.ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаФормыРСВ1(ПоказателиОтчета, СтруктураДанныхТитульный);
	
	ЗаполнитьДатуВЯчейкахНаСервере();
		
	ИмяТекРаздела = "Титульный";
	
	Для Каждого ЭлСтруктуры Из ЭтаФорма["СтруктураДанных" + ИмяТекРаздела] Цикл
		Попытка
			ТабличныйДокумент.Области[ЭлСтруктуры.Ключ].Значение = ЭлСтруктуры.Значение;
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	РегламентированнаяОтчетность.КонвертироватьДанныеРаздела12СтарогоОбразцаФормыРСВ1(ЭтаФорма[мСтруктураМногостраничныхРазделов.Раздел12]);
	
	РегламентированнаяОтчетность.ОперацииПриВосстановленииРегламентированногоОтчета(ЭтаФорма);
    	
	КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
    	
	Модифицированность   = Ложь;
   
	СтруктураРеквизитовФормы.мДокументВосстановлен = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьНомерКорректировки(Форма)
	
	НомерКорр = Форма.СтруктураРеквизитовФормы.ВидДокумента * Форма.НомерКорректировки;
	НомерКорректировкиСтрока = Формат(НомерКорр, "ЧН=0; ЧГ=");
	СтрДлинаНомерКорректировкиСтрока = СтрДлина(НомерКорректировкиСтрока);
	НомерКорректировкиСтрока = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(НомерКорректировкиСтрока,3,"0",0);	
	
	Форма.ТабличныйДокумент.Области.НомерКорректировки.Значение = НомерКорректировкиСтрока;
	
Конецпроцедуры

&НаСервере
Процедура ПоказатьПериод()
    	
    НомерМесяца   = Формат(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, "ДФ=М");
	СтруктураРеквизитовФормы.НомерГода = Формат(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, "ДФ=гггг");
	
	Если НЕ (НомерМесяца = "12") Тогда  
		НомерМесяца = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(НомерМесяца,2,0);
	КонецЕсли;
		
	ТабличныйДокумент.Области.Период.Значение = НомерМесяца;
	ТабличныйДокумент.Области.ОтчетГод.Значение = СтруктураРеквизитовФормы.НомерГода;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатуВЯчейкахНаСервере()
    	
	ЗаполнитьДатуВЯчейках(ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДатуВЯчейкахНаКлиенте()
    	
	ЗаполнитьДатуВЯчейках(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДатуВЯчейках(Форма)

	Форма.ТабличныйДокумент.Области.ДатаПодписи.Значение = Форма.ДатаПодписи;
		
КонецПроцедуры

&НаСервере
Процедура УправлениеЛистамиНаСервере(ТипНП = Неопределено)

	УправлениеЛистами(ЭтаФорма, ТипНП);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЛистами(Форма, ТипНП = Неопределено)

	Если ТипНП = Неопределено Тогда
		ТипНП = 0;

		Если (Форма.СтруктураРеквизитовФормы.Организация = Неопределено) Или (Форма.СтруктураРеквизитовФормы.Организация = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа("СправочникСсылка.Организации")) Тогда
			Возврат
		КонецЕсли;

		ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Форма.СтруктураРеквизитовФормы.Организация, Форма.ДатаПодписи, "ТипНП");
		ОргСведения.Свойство("ТипНП", ТипНП);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОбОрганизации(ВПрограммеИзмененаДатаПодписи = Ложь, СменилсяПризнакПодписанта = Ложь)

	Если (СтруктураРеквизитовФормы.Организация = Неопределено) Или (СтруктураРеквизитовФормы.Организация = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа("СправочникСсылка.Организации")) Тогда
		Возврат
	КонецЕсли;

	ПБОЮЛ = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация);

	Сведения = Новый СписокЗначений;

	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда
		
		Сведения.Добавить("", "ИННЮЛ");
		Сведения.Добавить("", "КППЮЛ");
		Сведения.Добавить("", "НаимЮЛПол");
		Сведения.Добавить("", "ОГРН"); 
		Сведения.Добавить("", "ОКАТО");
		Сведения.Добавить("", "ОКПО");
		Сведения.Добавить("", "ОКОПФ");
		Сведения.Добавить("", "ОКФС");
		Сведения.Добавить("", "РегистрационныйНомерФСС");
		Сведения.Добавить("", "АдрЮР");
		Сведения.Добавить("", "АдрФакт");
		Сведения.Добавить("", "АдрМЖ");
		
	КонецЕсли;

	Сведения.Добавить("", "ФИОРук");
	Сведения.Добавить("", "ФИОБух");
	Сведения.Добавить("", "ФИО");
	Сведения.Добавить("", "ФИОИсп");
	Сведения.Добавить("", "ТелИсп");
	Сведения.Добавить("", "ТелОрганизации");
	Сведения.Добавить("", "ТелСлуж");

	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(СтруктураРеквизитовФормы.Организация, ДатаПодписи, Сведения);

	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда

		ИННЮЛ = "";
		КППЮЛ = "";
		НаимЮЛПол = "";
		ОГРН = "";
		ОКАТО = "";
		ОКПО = "";
		ОКОПФ = "";
		ОКФС = "";
		РегистрационныйНомерФСС = "";
		РегНомПФР = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		            СтруктураРеквизитовФормы.Организация, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, "РегНомПФР").РегНомПФР;
        АдрЮР = "";
		АдрФакт = "";
		АдрМЖ = "";

	КонецЕсли;

	ФИОРук = "";
	ФИОБух = "";
	ФИО = "";
	ФИОИсп = "";
	ТелИсп = "";
	ТелОрганизации = "";
    ТелСлуж = "";
	
	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда
		
		ОргСведения.Свойство("ИННЮЛ", ИННЮЛ);
		ОргСведения.Свойство("КППЮЛ", КППЮЛ);
		ОргСведения.Свойство("НаимЮЛПол", НаимЮЛПол);
		ОргСведения.Свойство("ОГРН", ОГРН);
		ОргСведения.Свойство("ОКАТО", ОКАТО);
		ОргСведения.Свойство("ОКПО", ОКПО);
		ОргСведения.Свойство("ОКОПФ", ОКОПФ);
		ОргСведения.Свойство("ОКФС", ОКФС);
		ОргСведения.Свойство("РегистрационныйНомерФСС", РегистрационныйНомерФСС);
		ОргСведения.Свойство("АдрЮР", АдрЮР);
		ОргСведения.Свойство("АдрФакт", АдрФакт);
		ОргСведения.Свойство("АдрМЖ", АдрМЖ);
		
	КонецЕсли;

	ОргСведения.Свойство("ФИОРук", ФИОРук);
	ОргСведения.Свойство("ФИОБух", ФИОБух);
	ОргСведения.Свойство("ФИО", ФИО);
	ОргСведения.Свойство("ФИОИсп", ФИОИсп);
	ОргСведения.Свойство("ТелИсп", ТелИсп);
	ОргСведения.Свойство("ТелОрганизации", ТелОрганизации);
    ОргСведения.Свойство("ТелСлуж", ТелСлуж);
	
	Если ПБОЮЛ Тогда
		
		НаимЮлПол = ФИО;
		Адрес =  АдрМЖ;
		ТелОрганизации = ТелСлуж;
		ФИОРук = ФИО;
		ФИОБух = "";
		ФИОИсп = "";
		ТелИсп = "";
		
	КонецЕсли;

	РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);
	РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(ДатаПодписи,
																	 СтруктураРеквизитовФормы,
																	 ТабличныйДокумент.Области.ОКВЭД.Значение);
																	 
	Если ВПрограммеИзмененаДатаПодписи Тогда

		ТабличныйДокумент.Области.ПрПодп.Значение = "1";
		ТабличныйДокумент.Области.ОргПодписантФамилия.Значение = ФИОРук;
		ЗапретитьВводДокументаПредставителя(ЭтаФорма);

		Возврат;

	КонецЕсли;

	Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) Или (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ОргНазв.Значение)) Тогда
		ТабличныйДокумент.Области.ОргНазв.Значение = НаимЮЛПол;   	
	КонецЕсли;
	
	Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) Или (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ПрПодп.Значение)) Или (СменилсяПризнакПодписанта) Тогда
		ТабличныйДокумент.Области.ПрПодп.Значение = "1"; 
	КонецЕсли;     	    
		
	Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) Или (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ОргПодписантФамилия.Значение)) Или (СменилсяПризнакПодписанта) Тогда
		ТабличныйДокумент.Области.ОргПодписантФамилия.Значение = ФИОРук;    	
	КонецЕсли;
	
    Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) Или (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ДокУпПред.Значение)) Или (СменилсяПризнакПодписанта) Тогда
		ЗапретитьВводДокументаПредставителя(ЭтаФорма);
	КонецЕсли;    

	ИННЮЛ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(ИННЮЛ,12,"0",0);
	КППЮЛ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(КППЮЛ,9,"-",1);
		
	Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) ИЛИ (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ИНН.Значение)) Тогда
		ТабличныйДокумент.Области.ИНН.Значение = ИННЮЛ;
	КонецЕсли;
	
	Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) ИЛИ (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.КПП.Значение)) Тогда
		ТабличныйДокумент.Области.КПП.Значение = КППЮЛ;
	КонецЕсли;
	
	ОГРН = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(ОГРН,15,"0",0);

	Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) ИЛИ (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ОГРН.Значение)) Тогда
		ТабличныйДокумент.Области.ОГРН.Значение = ОГРН;
	КонецЕсли;

	РазрешенныеЗнаки = "0123456789";
	ОткорректированныйНомерТелефона = "";
	Для Инд = 1 По СтрДлина(ТелОрганизации) Цикл
		ТекущийСимвол = Сред(ТелОрганизации, Инд, 1);
		Если СтрНайти(РазрешенныеЗнаки, ТекущийСимвол) <> 0 Тогда
			ОткорректированныйНомерТелефона = ОткорректированныйНомерТелефона + ТекущийСимвол;
		КонецЕсли;
	КонецЦикла;
	ТелОрганизации = ОткорректированныйНомерТелефона;
	
	Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) ИЛИ (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ТелОрганизации.Значение)) Тогда
		ТабличныйДокумент.Области.ТелОрганизации.Значение = ТелОрганизации;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ОКАТО.Значение) Тогда
		ТабличныйДокумент.Области.ОКАТО.Значение = ОКАТО;
	КонецЕсли;
		
	Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) ИЛИ (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ОКПО.Значение)) Тогда
		ТабличныйДокумент.Области.ОКПО.Значение = ОКПО;  
	КонецЕсли;

	Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) ИЛИ (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ОКОПФ.Значение)) Тогда
		ТабличныйДокумент.Области.ОКОПФ.Значение = ОКОПФ;  
	КонецЕсли;

    Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) ИЛИ (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ОКФС.Значение)) Тогда
		ТабличныйДокумент.Области.ОКФС.Значение = ОКФС;  
	КонецЕсли;

	Если (СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация) ИЛИ (НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.НомРег.Значение)) Тогда
		
		Если СтрДлина(РегНомПФР) < 14 Тогда
			Если Сред(РегНомПФР, 4, 1) <> "-" Тогда
				РегНомПФР = Лев(РегНомПФР,3) + "-" + Сред(РегНомПФР, 4);
			КонецЕсли;	
			Если Сред(РегНомПФР, 8, 1) <> "-" Тогда
				РегНомПФР = Лев(РегНомПФР,7) + "-" + Сред(РегНомПФР, 8);
			КонецЕсли;
		КонецЕсли;	
		
		ТабличныйДокумент.Области.НомРег.Значение = РегНомПФР;
		
	КонецЕсли;
	
	Если Не ПБОЮЛ Тогда
		Адрес = ?(ЗначениеЗаполнено(СтрЗаменить(АдрФакт, ",", "")), АдрФакт, АдрЮр);
	КонецЕсли;
	
	СтруктураАдреса = РегламентированнаяОтчетностьКлиентСервер.РазложитьАдрес(Адрес);
	
	Если НЕ СтруктураАдреса = Неопределено Тогда
		
		ТабличныйДокумент.Области.Адрес1.Значение = СтруктураАдреса.Индекс;
		ТабличныйДокумент.Области.Адрес2.Значение = СтруктураАдреса.Регион;
		ТабличныйДокумент.Области.Адрес3.Значение = СтруктураАдреса.Район;
		ТабличныйДокумент.Области.Адрес4.Значение = СтруктураАдреса.Город;
		ТабличныйДокумент.Области.Адрес5.Значение = СтруктураАдреса.НаселенныйПункт;
		ТабличныйДокумент.Области.Адрес6.Значение = СтруктураАдреса.Улица;
		ТабличныйДокумент.Области.Адрес7.Значение = СтруктураАдреса.Дом;
		ТабличныйДокумент.Области.Адрес8.Значение = СтруктураАдреса.Корпус;
		ТабличныйДокумент.Области.Адрес9.Значение = СтруктураАдреса.Квартира;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЦветФонаЯчейкиНаКлиенте(ИмяЯчейки = Неопределено, ВариантЗаполнения = Неопределено, ИмяТекущейСтраницыПанели = "") Экспорт
	
	УстановитьЦветФонаЯчейки(ЭтаФорма, ИмяЯчейки, ВариантЗаполнения, ИмяТекущейСтраницыПанели);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЦветФонаЯчейкиНаСервере(ИмяЯчейки = Неопределено, ВариантЗаполнения = Неопределено, ИмяТекущейСтраницыПанели = "") Экспорт
	
	УстановитьЦветФонаЯчейки(ЭтаФорма, ИмяЯчейки, ВариантЗаполнения, ИмяТекущейСтраницыПанели);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЦветФонаЯчейки(Форма, ИмяЯчейки = Неопределено, ВариантЗаполнения = Неопределено, ИмяТекущейСтраницыПанели = "")
	
	Перем ЦветФона;
	Перем Комментарий;

	Если Форма.СтруктураРеквизитовФормы.мБезОткрытияФормы Или Форма.СтруктураРеквизитовФормы.мРежимПечати Тогда
		Возврат;
	КонецЕсли;
    	
	Если Не ИмяЯчейки = Неопределено Тогда
		#Если НаКлиенте Тогда
			ИмяСтраницыПанели = РегламентированнаяОтчетностьКлиент.ОпределитьСтраницуПанелиПоКодуПоказателяНаКлиенте(Форма, ИмяЯчейки);
		#Иначе
			ИмяСтраницыПанели = РегламентированнаяОтчетностьВызовСервера.ОпределитьСтраницуПанелиПоКодуПоказателяНаСервере(Форма, ИмяЯчейки);
		#КонецЕсли
		
		Если ИмяСтраницыПанели = Неопределено Тогда
			Возврат;
		КонецЕсли;

		ИмяПоляТаблДокумента = "ТабличныйДокумент";

		Ключ = "_" + ВариантЗаполнения;
		Форма.мСтруктураЦветовРаскраски.Свойство(Ключ, ЦветФона);

		Если ВариантЗаполнения = 4 Тогда
			Форма[ИмяПоляТаблДокумента].Области[ИмяЯчейки].Защита = Истина;
		Иначе
			Форма[ИмяПоляТаблДокумента].Области[ИмяЯчейки].Защита = Ложь;
		КонецЕсли;

		Форма[ИмяПоляТаблДокумента].Области[ИмяЯчейки].ЦветФона = ЦветФона;

	Иначе

		ТаблицаВариантыЗаполнения = ПолучитьТаблицуВариантовЗаполнения(Форма, ИмяТекущейСтраницыПанели);
		Если ТаблицаВариантыЗаполнения = Неопределено Тогда
			Возврат;
		КонецЕсли;

		Для Каждого Строка Из ТаблицаВариантыЗаполнения Цикл
			ИмяПоказателя     = Строка.КодПоказателя;
			ВариантЗаполнения = Строка.ВариантЗаполнения;
			Комментарий       = Строка.Комментарий;
			КодПоказателяПоСтруктуре = Строка.КодПоказателяПоСтруктуре;
			
			КолвоСтрокВМногострочнойЧасти = ПоказательВходитВМногострочнуюЧасть(Форма, ИмяПоказателя);
			
			Если КолвоСтрокВМногострочнойЧасти > 0 Тогда
				Многострочность = Истина;
				БазоваяЧасть = ИмяПоказателя;
			Иначе
				Многострочность = Ложь;
				КолвоСтрокВМногострочнойЧасти = 1;
			КонецЕсли;
			
			Для Инд = 1 по КолвоСтрокВМногострочнойЧасти Цикл
				
				Если Многострочность Тогда
					ИмяПоказателя = БазоваяЧасть + "_" + Строка(Инд);
				КонецЕсли;
				
				Попытка
					ТекОбластьЯчеек = Форма.ТабличныйДокумент.Области[ИмяПоказателя];
					Если (Не ПустаяСтрока(Комментарий)) ИЛИ (Не ПустаяСтрока(ТекОбластьЯчеек.Примечание.Текст)) Тогда
						ТекОбластьЯчеек.Примечание.Текст = Комментарий;
					КонецЕсли;
					
					Ключ = "_" + ВариантЗаполнения;
					Форма.мСтруктураЦветовРаскраски.Свойство(Ключ, ЦветФона);
					
					Если ВариантЗаполнения = 4 Тогда
						Форма.ТабличныйДокумент.Области[ИмяПоказателя].Защита = Истина;
					Иначе
						Форма.ТабличныйДокумент.Области[ИмяПоказателя].Защита = Ложь;
					КонецЕсли;
					
					Форма.ТабличныйДокумент.Области[ИмяПоказателя].ЦветФона = ЦветФона;
				Исключение 	КонецПопытки;
				
			КонецЦикла;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВывестиРазделВТабличныйДокументНаКлиенте(ИмяГруппы, СтруктураГруппы) Экспорт
	ВывестиРазделВТабличныйДокумент(ЭтаФорма, ИмяГруппы, СтруктураГруппы);
КонецПроцедуры

&НаСервере
Процедура ВывестиРазделВТабличныйДокументНаСервере(ИмяГруппы, СтруктураГруппы) Экспорт
	ВывестиРазделВТабличныйДокумент(ЭтаФорма, ИмяГруппы, СтруктураГруппы);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВывестиРазделВТабличныйДокумент(Форма, ИмяГруппы, СтруктураГруппы)
	
	Перем ИсходноеКоличествоСтрокГруппы;

	Форма.мСтруктураИсхКолвоСтрокРазделов.Свойство(ИмяГруппы, ИсходноеКоличествоСтрокГруппы);

	ТекущееКоличествоСтрокГруппы = СтруктураГруппы.Количество();

	ТекТабличноеПолеИмя = "ТабличныйДокумент";
	
	ТекТабличноеПоле = Форма[ТекТабличноеПолеИмя];

	Если ТекущееКоличествоСтрокГруппы > ИсходноеКоличествоСтрокГруппы Тогда
		
		Форма.ДобавитьНеобходимоеКоличествоДопСтрокНаСервере(ТекТабличноеПоле, ТекТабличноеПолеИмя, ИсходноеКоличествоСтрокГруппы, ТекущееКоличествоСтрокГруппы, ИмяГруппы, СтруктураГруппы);

		Форма[ТекТабличноеПолеИмя] = ТекТабличноеПоле;
		
	КонецЕсли;

	Для Каждого СтрокаТаблицы Из СтруктураГруппы Цикл
		
		НомерСтрокиВТаблице      = СтруктураГруппы.Индекс(СтрокаТаблицы);
		НомерСтрокиВФормеТаблицы = НомерСтрокиВТаблице + 1;
		
		Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
			
			КолонкаТаблицыИмя = ИмяГруппы + Формат(НомерГрафы, "ЧЦ=2; ЧВН=");
			
			Если СтруктураГруппы[0].Свойство(КолонкаТаблицыИмя) Тогда
				
				ИмяЯчейки                = КолонкаТаблицыИмя + "_" + НомерСтрокиВФормеТаблицы;
				ОбластьЯчейкиТаблицы     = ТекТабличноеПоле.Области[ИмяЯчейки];
				ЗначениеЯчейки           = СтрокаТаблицы[КолонкаТаблицыИмя];
				
				Если ОбластьЯчейкиТаблицы.СодержитЗначение = Истина Тогда
					ОбластьЯчейкиТаблицы.Значение = ЗначениеЯчейки;
				Иначе
					ОбластьЯчейкиТаблицы.Текст = ЗначениеЯчейки;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьНеобходимоеКоличествоДопСтрокНаСервере(ТекТабличноеПоле, ТекТабличноеПолеИмя, ИсходноеКоличествоСтрокГруппы, ТекущееКоличествоСтрокГруппы, ИмяГруппы, СтруктураГруппы) Экспорт
		
	ОбластьДопСтроки = ТекТабличноеПоле.ПолучитьОбласть("МногострочнаяЧасть");
	
	МногострочнаяЧастьВерх = ТекТабличноеПоле.Области.МногострочнаяЧасть.Верх;
			
	ТекТабличноеПоле.ВставитьОбласть(ОбластьДопСтроки.Область(), ТекТабличноеПоле.Область(МногострочнаяЧастьВерх + 1, , МногострочнаяЧастьВерх + ТекущееКоличествоСтрокГруппы - 1), ТипСмещенияТабличногоДокумента.ПоВертикали);
		
	Для НомНовойСтроки = ИсходноеКоличествоСтрокГруппы По ТекущееКоличествоСтрокГруппы Цикл
						
		Для Каждого Область Из ОбластьДопСтроки.Области Цикл
			
			ОбластьТаблДок = ТекТабличноеПоле.Область(МногострочнаяЧастьВерх + ТекущееКоличествоСтрокГруппы - НомНовойСтроки, Область.Лево, МногострочнаяЧастьВерх + ТекущееКоличествоСтрокГруппы - НомНовойСтроки, Область.Право);
			
			Если ОбластьТаблДок.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
				
				Если ОбластьТаблДок.СодержитЗначение Тогда
					ОбластьТаблДок.Очистить();
				КонецЕсли;
				
				ОбластьТаблДок.Имя = Лев(Область.Имя, СтрНайти(Область.Имя, "_")) + Строка(ТекущееКоличествоСтрокГруппы - НомНовойСтроки + 1);
				
			КонецЕсли;
			
		КонецЦикла;
						
	КонецЦикла;	
		
	ТекТабличноеПоле.Область(ТекТабличноеПоле.Области.МногострочнаяЧасть.Верх, , ТекТабличноеПоле.Области.МногострочнаяЧасть.Верх).Имя = "";
	
	ТекТабличноеПоле.Область(МногострочнаяЧастьВерх, , МногострочнаяЧастьВерх).Имя = "МногострочнаяЧасть";
	
КонецПроцедуры

&НаСервере
Функция ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ИмяЛиста = Неопределено) Экспорт
	
	ИдГрупп = Новый Структура;
	ИдГрупп.Вставить("мИдГруппы1", СтруктураРеквизитовФормы.мИдГруппы1);
			
	Возврат ОпределитьИдМногострочногоРазделаПоАктивнойСтранице(ИмяЛиста, , ИдГрупп);
	
КонецФункции

&НаКлиенте
Функция ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаКлиенте(ИмяЛиста = Неопределено) Экспорт
	
	ИдГрупп = Новый Структура;
	ИдГрупп.Вставить("мИдГруппы1", СтруктураРеквизитовФормы.мИдГруппы1);
		
	Возврат ОпределитьИдМногострочногоРазделаПоАктивнойСтранице(ИмяЛиста, , ИдГрупп);

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОпределитьИдМногострочногоРазделаПоАктивнойСтранице(ИмяЛиста = Неопределено, ТекущаяСтраница = Неопределено, ИдГрупп)
	Перем ИмяГруппы;
		
	Если ИмяЛиста = Неопределено Тогда
        ИмяТекущейСтраницыПанели = ТекущаяСтраница.Имя;
	Иначе
		ИмяТекущейСтраницыПанели = ИмяЛиста;
	КонецЕсли;

	Если ИмяТекущейСтраницыПанели = "Раздел41" Тогда
		ИмяГруппы = ИдГрупп.мИдГруппы1;
	КонецЕсли;

	Возврат ИмяГруппы;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПоказательВходитВМногострочнуюЧасть(Форма, ИмяПоказателя)

	ИмяГруппы = Лев(ИмяПоказателя, 11);

	СтруктураГруппы = Неопределено;

	Если НЕ Форма.мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы) Тогда
		Возврат 0;
	Иначе
		СтруктураГруппы = Форма[СтруктураГруппы];
		Возврат СтруктураГруппы.Количество();
	КонецЕсли;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьТаблицуВариантовЗаполнения(Форма, ИмяСтраницыПанели, ПолучитьЭталонную = Ложь)

	#Если НаКлиенте Тогда
		Возврат РегламентированнаяОтчетностьКлиент.ПолучитьТаблицуВариантовЗаполненияНаКлиенте(Форма, ИмяСтраницыПанели, ПолучитьЭталонную);
	#Иначе
		Возврат РегламентированнаяОтчетностьВызовСервера.ПолучитьТаблицуВариантовЗаполненияНаСервере(Форма, ИмяСтраницыПанели, ПолучитьЭталонную);
	#КонецЕсли
	
КонецФункции

&НаСервере
Процедура ОбновитьПользовательскиеНастройки()
	
	Сообщение = Новый СообщениеПользователю;

	Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Изменилась версия формы отчета.%1Выполняется обновление пользовательских настроек.'"), Символы.ПС);

	Сообщение.Сообщить();

	ЕстьИзмененияВариантыЗаполнения = ОбновитьВариантыЗаполнения();
	
	ЕстьИзмененияНастройкаСтраниц = ОбновитьНастройкиСтраниц();

	Если ЕстьИзмененияВариантыЗаполнения ИЛИ ЕстьИзмененияНастройкаСтраниц Тогда
		Модифицированность = Истина;

		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = НСтр("ru='Обновление пользовательских настроек успешно завершено.'");

		Сообщение.Сообщить();

	Иначе
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = НСтр("ru='Изменения в структуре пользовательских настроек не обнаружены.'");

		Сообщение.Сообщить();

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ЗаголовокРегламентированногоОтчета(ДатаНач, ДатаКон, Периодичность = Неопределено)
		
	СтрПериодОтчета = ПредставлениеПериода( НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета), КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП = Истина" );
		
	Если СтрНайти(ЭтаФорма.Заголовок, СтрПериодОтчета) = 0 Тогда
		Возврат ЭтаФорма.Заголовок + " за " + СтрПериодОтчета;
	Иначе
		Возврат ЭтаФорма.Заголовок;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ОбновитьВариантыЗаполнения()
	Перем МассивВариантовЗаполненияСтраниц;

	ЕстьИзменения = Ложь;

	МакетСоставаПоказателей = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(СтруктураРеквизитовФормы.мСоставПоказателей);

	ОписаниеТиповСтрока15   = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15));

	ОписаниеТиповСтрока100  = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100));
	
	ОписаниеТиповСтрока50   = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50));

	ОписаниеТиповЧисло1     = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1));

	ОписаниеТиповЧисло15    = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2));

	ЕстьИзменения = Ложь;

	Для Инд = 0 По МакетСоставаПоказателей.Области.Количество() - 1 Цикл

		ТекОбласть  = МакетСоставаПоказателей.Области[Инд];
		ИмяСтраницы = ТекОбласть.Имя;

		ТаблицаВариантыЗаполнения = Новый ТаблицаЗначений;
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "КодПоказателя",     ОписаниеТиповСтрока15  );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "ВариантЗаполнения", ОписаниеТиповЧисло1    );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "ЗначениеАвто",      ОписаниеТиповЧисло15   );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "Дельта",            ОписаниеТиповЧисло15   );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "Комментарий",       ОписаниеТиповСтрока100 );
        ТаблицаВариантыЗаполнения.Колонки.Добавить( "КодПоказателяПоСтруктуре",       ОписаниеТиповСтрока50 ); 
		
		Для Ном = ТекОбласть.Верх По ТекОбласть.Низ Цикл

			КодПоказателя = СокрП(МакетСоставаПоказателей.Область(Ном, 1).Текст);
			ИмяПоказателя = КодПоказателя;

			Если КодПоказателя = "===" Тогда
				Прервать;
			КонецЕсли;

			Если Лев(КодПоказателя, 2) = "//" Тогда
				Продолжить;
			КонецЕсли;

			КодПоказателяПоФорме = СокрЛП(МакетСоставаПоказателей.Область(Ном, 2).Текст);
			стрВариантЗаполнения = РегламентированнаяОтчетность.ПолучитьВариантЗаполненияПоказателяРегОтчета(МакетСоставаПоказателей, Ном);

			чВариантЗаполнения   = ? (ПустаяСтрока(стрВариантЗаполнения), 0, Число(стрВариантЗаполнения));
			Если чВариантЗаполнения <> 0 Тогда
				НоваяСтрока = ТаблицаВариантыЗаполнения.Добавить();
				НоваяСтрока.КодПоказателя      = ? (Не ПустаяСтрока(КодПоказателяПоФорме), КодПоказателяПоФорме, КодПоказателя);
				НоваяСтрока.ВариантЗаполнения  = чВариантЗаполнения;
			КонецЕсли;

		КонецЦикла;

		Если Не мСтруктураВариантыЗаполнения.Свойство(ИмяСтраницы, МассивВариантовЗаполненияСтраниц) Тогда
			
			МассивВариантовЗаполненияСтраниц = ЭтаФорма["ТаблицаВариантыЗаполнения" + ИмяСтраницы];
			
			Если ТаблицаВариантыЗаполнения.Количество() > 0 Тогда
								
				МассивВариантовЗаполненияСтраниц.Очистить();
				МассивВариантовЗаполненияСтраниц.Добавить(ТаблицаВариантыЗаполнения);

				мСтруктураВариантыЗаполнения.Вставить(ИмяСтраницы, ИмяСтраницы);

				ЕстьИзменения = Истина;				
				
			КонецЕсли;
		Иначе
			
			МассивВариантовЗаполненияСтраниц = ЭтаФорма["ТаблицаВариантыЗаполнения" + ИмяСтраницы];
			
			Если ТаблицаВариантыЗаполнения.Количество() = 0 Тогда
				// Рассмотрим вариант, когда в предыдущей версии формы по данной странице
				// было предусмотрено автозаполнение таблицы, а в текущей версии - отключено.
				// В этом случае из структуры вариантов автозаполнения удаляем элемент,
				// хранящий настройки вариантов автозаполнения текущей станицы.
				мСтруктураВариантыЗаполнения.Удалить(ИмяСтраницы);

				ЕстьИзменения = Истина;
			Иначе
				// Рассмотрим вариант, когда и в предыдущей, и в текущей версии формы было предусмотрено
				// автозаполнение текущей страницы. В этом случае обновляем таблицу значений, содержащей
				// пользовательские настройки вариантов автозаполнения текущей страницы.

				Для каждого ЭлементМассива Из МассивВариантовЗаполненияСтраниц Цикл
					
					ЭлементМассива = ЭлементМассива.ТаблицаВариантовЗаполнения;
					
					Для каждого СтрокаТаблицы Из ТаблицаВариантыЗаполнения Цикл
						КодПоказателя     = СтрокаТаблицы.КодПоказателя;
						ВариантЗаполнения = СтрокаТаблицы.ВариантЗаполнения;

						Если ЭлементМассива.НайтиСтроки(Новый Структура("КодПоказателя", КодПоказателя)).Количество() = 0 Тогда	
							// Рассмотри вариант, когда в новой версии формы список реквизитов,
							// заполняемых автоматически по данным ИБ, дополнен новым реквизитом.
							НоваяСтрока = ЭлементМассива.Добавить();
							НоваяСтрока.КодПоказателя     = КодПоказателя;
							НоваяСтрока.ВариантЗаполнения = ВариантЗаполнения;

							ЕстьИзменения = Истина;
						КонецЕсли;
					КонецЦикла;

					ТаблДляЦикла = ЭлементМассива.Выгрузить();
					
					Для каждого СтрокаТаблицы Из ТаблДляЦикла Цикл
						КодПоказателя = СтрокаТаблицы.КодПоказателя;

						Если ТаблицаВариантыЗаполнения.Найти(КодПоказателя, "КодПоказателя") = Неопределено Тогда
							// Рассмотрим вариант, когда в предыдущей версии отчета для данной страницы
							// было предусмотрено автозаполнение ячейки по коду "КодПоказателя",
							// а в текущей версии - отключено. В этом случае удаляем эту ячейку
							// из таблицы пользовательских настроек вариантов автозаполнения.
							СтрокиВЭлементеМассива = ЭлементМассива.НайтиСтроки(Новый Структура("КодПоказателя", КодПоказателя));
							Если  СтрокиВЭлементеМассива.Количество() > 0 Тогда
								ЭлементМассива.Удалить(СтрокиВЭлементеМассива[0]);
								ЕстьИзменения = Истина;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	Возврат ЕстьИзменения;

КонецФункции

&НаСервере
Функция ОбновитьНастройкиСтраниц()

	ЕстьИзменения = Ложь;

	мПользовательскиеНастройкиСтраниц = РеквизитФормыВЗначение("мДеревоСтраницОтчета").Скопировать();

	ФормироватьСтруктуруСтраницОтчета();

	Для каждого ИсхКолонка Из РеквизитФормыВЗначение("мДеревоСтраницОтчета").Колонки Цикл

		Если мПользовательскиеНастройкиСтраниц.Колонки.Найти(ИсхКолонка.Имя) = Неопределено Тогда
			мПользовательскиеНастройкиСтраниц.Колонки.Добавить(ИсхКолонка.Имя, ИсхКолонка.ТипЗначения, ИсхКолонка.Заголовок, ИсхКолонка.Ширина);
			мПользовательскиеНастройкиСтраниц.ЗагрузитьКолонку(РеквизитФормыВЗначение("мДеревоСтраницОтчета").ВыгрузитьКолонку(ИсхКолонка.Имя), ИсхКолонка.Имя);

			ЕстьИзменения = Истина;
		КонецЕсли;

	КонецЦикла;

	Для каждого ТекКолонка Из мПользовательскиеНастройкиСтраниц.Колонки Цикл

		Если РеквизитФормыВЗначение("мДеревоСтраницОтчета").Колонки.Найти(ТекКолонка.Имя) = Неопределено Тогда
			мПользовательскиеНастройкиСтраниц.Колонки.Удалить(мПользовательскиеНастройкиСтраниц.Колонки.Индекс(ТекКолонка));

			ЕстьИзменения = Истина;
		КонецЕсли;

	КонецЦикла;

	Если мДеревоСтраницОтчета.ПолучитьЭлементы().Количество() <> мПользовательскиеНастройкиСтраниц.Строки.Количество() Тогда

		КолвоКолонок     = РеквизитФормыВЗначение("мДеревоСтраницОтчета").Колонки.Количество();

		Для каждого Строка Из мДеревоСтраницОтчета.ПолучитьЭлементы() Цикл

			Если мПользовательскиеНастройкиСтраниц.Найти(Строка.ИмяСтраницы, "ИмяСтраницы") = Неопределено Тогда

				НоваяСтрока = мПользовательскиеНастройкиСтраниц.Строки.Добавить();
				Для НомКолонки = 0 По (КолвоКолонок - 1) Цикл
				
					НоваяСтрока[НомКолонки] = Строка[НомКолонки];
				
				КонецЦикла;

			КонецЕсли;

			Если Строка.Строки.Количество() > 0 Тогда

				Для каждого Строка2 Из Строка.Строки Цикл

					Если мПользовательскиеНастройкиСтраниц.Найти(Строка2.ИмяСтраницы, "ИмяСтраницы") = Неопределено Тогда

						НоваяСтрока2 = НоваяСтрока.Строки.Добавить();
						Для НомКолонки = 0 По (КолвоКолонок - 1) Цикл

							НоваяСтрока2[НомКолонки] = Строка2[НомКолонки];

						КонецЦикла;

					КонецЕсли;

				КонецЦикла; 

			КонецЕсли; 

		КонецЦикла;

		ЗначениеРеквизитаДеревоСтраницОтчета = РеквизитФормыВЗначение("мДеревоСтраницОтчета");
		
		Для каждого Строка Из мПользовательскиеНастройкиСтраниц Цикл

			Если ЗначениеРеквизитаДеревоСтраницОтчета.Найти(Строка.ИмяСтраницы, "ИмяСтраницы") = Неопределено Тогда

				мПользовательскиеНастройкиСтраниц.Строки.Удалить(мПользовательскиеНастройкиСтраниц.Строки.Индекс(Строка));

			КонецЕсли;

		КонецЦикла;

		ЕстьИзменения = Истина;
	КонецЕсли;

	Для каждого ТекСтрока Из мДеревоСтраницОтчета.ПолучитьЭлементы() Цикл

		НомСтр = мДеревоСтраницОтчета.ПолучитьЭлементы().Индекс(ТекСтрока);

		Если ТекСтрока.Представление <> мПользовательскиеНастройкиСтраниц.Строки[НомСтр].Представление Тогда
			мПользовательскиеНастройкиСтраниц.Строки[НомСтр].Представление = ТекСтрока.Представление;
			ЕстьИзменения = Истина;
		КонецЕсли;

		Если ТекСтрока.ИмяПоляТабличногоДокум <> мПользовательскиеНастройкиСтраниц.Строки[НомСтр].ИмяПоляТабличногоДокум Тогда
			мПользовательскиеНастройкиСтраниц.Строки[НомСтр].ИмяПоляТабличногоДокум = ТекСтрока.ИмяПоляТабличногоДокум;
			ЕстьИзменения = Истина;
		КонецЕсли;

	КонецЦикла; 

	ЗначениеВРеквизитФормы(мПользовательскиеНастройкиСтраниц.Скопировать(), "мДеревоСтраницОтчета");

	Возврат ЕстьИзменения;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗапретитьВводДокументаПредставителя(Форма)
	
	Форма.ТабличныйДокумент.Области.ДокУпПред.Значение = "";
	Форма.мСтруктураДокУпПред.Вставить("НаименованиеУдостоверяющего", " ");
	Форма.мСтруктураДокУпПред.Вставить("СерияРимскиеЦифры", " ");
	Форма.мСтруктураДокУпПред.Вставить("СерияРусскиеБуквы", " ");
	Форма.мСтруктураДокУпПред.Вставить("НомерУдостоверяющего", " ");
	Форма.мСтруктураДокУпПред.Вставить("ДатаВыдачи", "");
	Форма.мСтруктураДокУпПред.Вставить("КемВыдан", " ");
	Форма.ТабличныйДокумент.Области.ДокУпПред.Защита = Истина;
	Форма.ТабличныйДокумент.Области.ДокУпПред.ЦветФона = Форма.СтруктураРеквизитовФормы.ЦветБелый;
	
КонецПроцедуры

&НаСервере
Функция СобратьДанныеТекущегоТаблПоляНаСервере(ИмяТабличногоПоля) Экспорт
	
	Возврат СобратьДанныеТекущегоТаблПоля(ЭтаФорма, ИмяТабличногоПоля);

КонецФункции

&НаКлиенте
Функция СобратьДанныеТекущегоТаблПоляНаКлиенте(ИмяТабличногоПоля) Экспорт
	
	Возврат СобратьДанныеТекущегоТаблПоля(ЭтаФорма, ИмяТабличногоПоля);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СобратьДанныеТекущегоТаблПоля(Форма, ТабличноеПоле)

	СтруктураДанныхПоля = Новый Структура;
	
	Для Инд = 0 По Форма[ТабличноеПоле].Области.Количество() - 1 Цикл
		ТекущаяОбласть = Форма[ТабличноеПоле].Области[Инд];

		Если Не ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			Продолжить;
		КонецЕсли;

		Если ТекущаяОбласть.СодержитЗначение <> Истина Тогда
			Продолжить;
		КонецЕсли;

		ИмяПоказателя      = ТекущаяОбласть.Имя;
		ЗначениеПоказателя = ТекущаяОбласть.Значение;
		СтруктураДанныхПоля.Вставить(ИмяПоказателя, ЗначениеПоказателя);

	КонецЦикла;

	Возврат СтруктураДанныхПоля;
	
КонецФункции

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь, ВыполняемоеОповещение=Неопределено) Экспорт
	
	Если СтруктураДанныхТитульный.Количество() = 0
		ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		СтруктураДанныхТитульный.Вставить("НомерКорректировки", ТабличныйДокумент.Области.НомерКорректировки.Значение);
	КонецЕсли;
	
	Вариант = СтруктураРеквизитовФормы.ВидДокумента * СтруктураДанныхТитульный.НомерКорректировки;
	
	Если НЕ РегламентированнаяОтчетностьКлиент.ПриЗаписиРегламентированногоОтчетаНаКлиенте(ЭтаФорма, , Автосохранение, Вариант) Тогда
		Возврат;
	КонецЕсли;
	
	ПодобныйОтчетСуществует = Ложь;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Ложь;
	
	Если Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		НаименованиеТекущегоРаздела = СтруктураРеквизитовФормы.НаимТекущегоРаздела;
	Иначе
		НаименованиеТекущегоРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	КонецЕсли;
	
	РезультатСохранения = ПередСохранением("не применимо", ПодобныйОтчетСуществует, Вариант, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, Автосохранение, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	ВидДокументаНомерКорректировкиИзменен = Неопределено;
	
	Если ПодобныйОтчетСуществует И Автосохранение Тогда
		Возврат;
	КонецЕсли;
	
	НуженВопросПередСохранением = (ПодобныйОтчетСуществует ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки);
	
	Если НуженВопросПередСохранением Тогда
		
		СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует);
		
	Иначе
		
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует)
	
	Если ПодобныйОтчетСуществует Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, "Сохранить");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отчет с видом %1 уже существует.
			|Сохранить отчет с таким же видом?'"), ?(Вариант = 0, """Первичный""", """Корректирующий/" + Вариант + """"));
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки", Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросСохранитьОтчетСТакимЖеВидомЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , Кнопки.Получить(1).Значение);
		
	Иначе
		
		СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьОтчетСТакимЖеВидомЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = ДополнительныеПараметры.ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки;
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки)
	
	Если ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ВидОтчета", Вариант);
		
		ФормаВопроса = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ВопросПриИзмененииВидаДокументаНомераКорректировки", ПараметрыФормы);
		ФормаВопроса.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение", Автосохранение, Вариант, ВыполняемоеОповещение);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПриИзмененииВидаДокументаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ФормаВопроса.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВопроса.Открыть();
	Иначе
		Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохраняется %1...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Записать);
		РезультатСохранения = Сохранить(Автосохранение, , Вариант, Неопределено, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииВидаДокументаЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	
	Если КодВозврата = КодВозвратаДиалога.Да
		ИЛИ КодВозврата = КодВозвратаДиалога.Нет Тогда
		ВидДокументаНомерКорректировкиИзменен = ?(КодВозврата = КодВозвратаДиалога.Да, Истина, Ложь);
	Иначе
		Возврат;
	КонецЕсли;
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохраняется %1...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Записать);
	РезультатСохранения = Сохранить(Автосохранение, , Вариант, ВидДокументаНомерКорректировкиИзменен, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения)
	
	КлючУникальности = СтруктураРеквизитовФормы.мСохраненныйДок;
	
	Если РезультатСохранения Тогда
		
		РегламентированнаяОтчетностьКлиент.ПослеЗаписиРегламентированногоОтчета(ЭтаФорма);
		
		Если ВыполняемоеОповещение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
		КонецЕсли;
		
	КонецЕсли;
	
	Оповестить("ВыполненоСохранениеФормыРСВ1", СтруктураРеквизитовФормы.мСохраненныйДок, );
	
КонецПроцедуры
// СохранитьНаКлиенте

&НаСервере
Функция ПередСохранением(КодИФНС = "не применимо", ПодобныйОтчетСуществует, Вариант, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, Автосохранение, НаимТекРаздела)
	
	Если РегламентированнаяОтчетность.БылиИзмененыКлючевыеРеквизитыОтчета(ЭтаФорма, КодИФНС)
	   И РегламентированнаяОтчетность.СуществуетДокументСАналогичнымиРеквизитами(ЭтаФорма, КодИФНС) Тогда
		
		ПодобныйОтчетСуществует = Истина;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мЗаписываетсяНовыйДокумент = (СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено);
	
	Если Вариант <> Неопределено И ((СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено) ИЛИ (СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено) ИЛИ (Вариант <> СтруктураРеквизитовФормы.мВариант)) Тогда
		
		Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
						
		ИначеЕсли Вариант <> СтруктураРеквизитовФормы.мВариант Тогда
			
			ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Истина;
								
		КонецЕсли;

	КонецЕсли;
	
	Если ПодобныйОтчетСуществует
	 ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
	 
	 	Возврат Ложь;
		
 	КонецЕсли;
		
	Возврат Сохранить(Автосохранение, , Вариант, , НаимТекРаздела);
		
КонецФункции

&НаСервере
Функция Сохранить(Автосохранение = Ложь, КодИФНС = "не применимо", Вариант, ВидДокументаНомерКорректировкиИзменен = Неопределено, НаимТекРаздела)
	
	ДанныеДляРазблокирования = Неопределено;
	
	Если НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы Тогда
			ДанныеДляРазблокирования = Новый Структура("Ключ,ИдФормы",
			СтруктураРеквизитовФормы.мСохраненныйДок, ЭтаФорма.УникальныйИдентификатор);
		КонецЕсли;
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.ПолучитьОбъект();
	КонецЕсли;
	
	Если НЕ РегламентированнаяОтчетность.ПриЗаписиРегламентированногоОтчетаНаСервере(ЭтаФорма, КодИФНС, Автосохранение, Вариант, ВидДокументаНомерКорректировкиИзменен, СтруктураРеквизитовФормы.мСохраненныйДок) Тогда
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		Возврат Ложь;
	КонецЕсли;
	
	// Установим текущие значения реквизитов документа.
	
	СтруктураРеквизитовФормы.мСохраненныйДок.ИсточникОтчета = Метаданные.Отчеты[Сред(Лев(СтрЗаменить(ЭтаФорма.ИмяФормы, "Внешний", ""), СтрНайти(СтрЗаменить(ЭтаФорма.ИмяФормы, "Внешний", ""), ".Форма.") - 1), 7)].Имя;
	СтруктураРеквизитовФормы.мСохраненныйДок.НаименованиеОтчета = Метаданные.Отчеты[Сред(Лев(СтрЗаменить(ЭтаФорма.ИмяФормы, "Внешний", ""), СтрНайти(СтрЗаменить(ЭтаФорма.ИмяФормы, "Внешний", ""), ".Форма.") - 1), 7)].ОсновнаяФорма.Синоним;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала               = СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания            = СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета;
	СтруктураРеквизитовФормы.мСохраненныйДок.ВыбраннаяФорма           = СтруктураРеквизитовФормы.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мСохраненныйДок.Организация              = СтруктураРеквизитовФормы.Организация;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи              = ДатаПодписи;
	СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения         = СтруктураРеквизитовФормы.ЕдиницаИзмерения;
	СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения;
	СтруктураРеквизитовФормы.мСохраненныйДок.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий              = Комментарий;
	СтруктураРеквизитовФормы.мСохраненныйДок.Вид                      = Вариант;
	СтруктураРеквизитовФормы.мСохраненныйДок.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(СтруктураРеквизитовФормы.мСохраненныйДок.Вид);
	СтруктураРеквизитовФормы.мСохраненныйДок.НомерПачки               = НомерПачки;

	СтруктураРеквизитовФормы.мВариант = Вариант;

	СтруктураРеквизитовФормы.мСохраненныйДок.ФорматВыгрузки = "Автоматически";
	                                                                  		
	СохранитьДанныеРаздела(НаимТекРаздела, Ложь, Ложь);
	
	ЗаполнитьПустыеСтруктурыДанных();
	
	// Сохраняем номер пачки.
	НомерПачкиИзРегистра = РегламентированнаяОтчетность.ПолучитьНомерПачкиВыгруженныхФайловПФР(СтруктураРеквизитовФормы.Организация, Число(СтруктураДанныхТитульный.ОтчетГод));
	
	Если НЕ ЗначениеЗаполнено(НомерПачки) Тогда
		НомерПачки = НомерПачкиИзРегистра + 1;
	КонецЕсли;
			
	СтруктураРеквизитовФормы.мСохраненныйДок.НомерПачки = НомерПачки;
		
	// Формируем данные редактируемых ячеек таблицы.
	ПоказателиОтчета = Новый Структура();
	
	ЗаполнитьПоказателиОтчетаНаСервере(ПоказателиОтчета);
	
	// Формируем список сохранения.
	СписокСохранения = Новый Структура();
    	
	// Вставляем данные редактируемых ячеек таблицы.
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
    	
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого ЭлементСтруктуры Из мСтруктураМногострочныхРазделов Цикл
		
		ДанныеМногострочныхРазделов.Вставить(ЭлементСтруктуры.Ключ, ДанныеФормыВЗначение(ЭтаФорма[ЭлементСтруктуры.Значение], Тип("ТаблицаЗначений")));
		
	КонецЦикла;
	
	// Вставляем данные многострочных разделов.
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	
	МассивТиповНеопределено = Новый Массив; 
	МассивТиповНеопределено.Добавить(Тип("Неопределено"));
	ОписаниеТиповНеопределено = Новый ОписаниеТипов(МассивТиповНеопределено);
	
	Для Каждого ЭлементСтруктуры Из мСтруктураМногостраничныхРазделов Цикл
		
		ДанныеМногостраничныхРазделов.Вставить(ЭлементСтруктуры.Ключ, ДанныеФормыВЗначение(ЭтаФорма[ЭлементСтруктуры.Значение], Тип("ТаблицаЗначений")));
		
		ТаблЗнач = Неопределено;
		
		Если ДанныеМногостраничныхРазделов.Свойство(ЭлементСтруктуры.Ключ, ТаблЗнач) Тогда
						
			Если НЕ ТаблЗнач.Колонки.Найти("Данные") = Неопределено Тогда
												
				ТаблЗнач.Колонки.Удалить("Данные");
				ТаблЗнач.Колонки.Добавить("Данные", ОписаниеТиповНеопределено);
				
				Ном = 0;
				
				Для Каждого СтрокаТаблЗнач Из ТаблЗнач Цикл
					
					СтрокаТаблЗнач.Данные = ЭтаФорма[ЭлементСтруктуры.Значение][Ном].Данные[0].Значение;
					
					Ном = Ном + 1;
					
				КонецЦикла;
				
			КонецЕсли;
						
			Если НЕ ТаблЗнач.Колонки.Найти("ДанныеДопСтрок") = Неопределено Тогда
															
				ТаблЗнач.Колонки.Удалить("ДанныеДопСтрок");
				ТаблЗнач.Колонки.Добавить("ДанныеДопСтрок", ОписаниеТиповНеопределено);
				
				Ном = 0;
				
				Для Каждого СтрокаТаблЗнач Из ТаблЗнач Цикл
						
					Если (ЭтаФорма[ЭлементСтруктуры.Значение][Ном].ДанныеДопСтрок.Количество() > 0)
					   И (ЭтаФорма[ЭлементСтруктуры.Значение][Ном].ДанныеДопСтрок[0].Представление = "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела") Тогда
																			
						СтрокаТаблЗнач.ДанныеДопСтрок = ДанныеФормыВЗначение(ЭтаФорма[ЭлементСтруктуры.Значение][Ном].ДанныеДопСтрок[0].Значение, Тип("ТаблицаЗначений"));
						
						Ном = Ном + 1;
						
						Продолжить;
							
					КонецЕсли;
					
					СтруктураДанныхДопСтрок = Новый Структура;
					
					Для Каждого ЭлСтруктуры Из ЭтаФорма[ЭлементСтруктуры.Значение][Ном].ДанныеДопСтрок Цикл
														
						СтруктураДанныхДопСтрок.Вставить(ДанныеФормыВЗначение(ЭлСтруктуры.Значение, Тип("ТаблицаЗначений")));	
							
					КонецЦикла;
					
					СтрокаТаблЗнач.ДанныеДопСтрок = СтруктураДанныхДопСтрок;
			
					Ном = Ном + 1;
								
				КонецЦикла;
				
			КонецЕсли;
						
		КонецЕсли;
				
	КонецЦикла;
		
	// Вставляем данные многостраничных разделов.
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	ДанныеВариантовАвтоЗаполнения = Новый Структура;
	
	Для Каждого ЭлементСтруктуры Из мСтруктураВариантыЗаполнения Цикл
		
		МассивТаблЗнач = Новый Массив;
		
		ДанныеВариантовАвтоЗаполнения.Вставить(ЭлементСтруктуры.Ключ, МассивТаблЗнач);
			
		Для Каждого ЭлементМассива Из ЭтаФорма["ТаблицаВариантыЗаполнения" + ЭлементСтруктуры.Ключ] Цикл
			
			МассивТаблЗнач.Добавить(ДанныеФормыВЗначение(ЭлементМассива.ТаблицаВариантовЗаполнения, Тип("ТаблицаЗначений")));
			
		КонецЦикла;
			
	КонецЦикла;
	
	// Вставляем данные вариантов автозаполнения ячеек.
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения);

	СписокСохранения.Вставить("Автозаполнение", СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);

	// Вствляем версию формы.
	СписокСохранения.Вставить("ВерсияФормы", СтруктураРеквизитовФормы.мВерсияФормы);
	
	// Вствляем флажок пересчета страниц.
	СписокСохранения.Вставить("ФлПодсчетСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);

	// Вствляем флажок отключения.
	СписокСохранения.Вставить("ФлОтклВыборЗначений", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	
	// Вставляем документ, подтверждающий полномочия представителя.
	СписокСохранения.Вставить("ДокументУпПред", мСтруктураДокУпПред);
	
	СписокСохранения.Вставить("ДанныеОтчетаИзмененыВручную", СтруктураРеквизитовФормы.ДанныеОтчетаИзмененыВручную);
	
	ХранилищеДанных = Новый ХранилищеЗначения(СписокСохранения);
	СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета = ХранилищеДанных;

	// Записываем документ, хранящий данные отчета.
	Попытка
		
		СтруктураРеквизитовФормы.мСохраненныйДок.Записать();
		
		Если НомерПачки > НомерПачкиИзРегистра Тогда
			
			РегламентированнаяОтчетность.УстановитьНомерПачкиВыгруженныхФайловПФР(СтруктураРеквизитовФормы.Организация,
			 Число(СтруктураДанныхТитульный.ОтчетГод), НомерПачки);
			 
			Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
				ТабличныйДокумент.Области.НомерПачки.Значение = НомерПачки;
			КонецЕсли;
			
		КонецЕсли;
		
	Исключение
		Если НЕ Автосохранение Тогда
			
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));

			Сообщение.Сообщить();
						
		КонецЕсли;
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		Возврат Ложь;
	КонецПопытки;
	
	Модифицированность   = Ложь;
	
	СохранитьДеревоНастройкиСтраниц(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
	
	Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы
       И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
				   
    	ЗаблокироватьДанныеДляРедактирования(СтруктураРеквизитовФормы.мСохраненныйДок, , ЭтаФорма.УникальныйИдентификатор);

    КонецЕсли;
	
	Если ДанныеДляРазблокирования <> Неопределено Тогда
		РазблокироватьДанныеДляРедактирования(ДанныеДляРазблокирования.Ключ, ДанныеДляРазблокирования.ИдФормы);
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

&НаСервере
Процедура ЗаполнитьПоказателиОтчетаНаСервере(ПоказателиОтчета)
	
	Префикс = "ПолеТабличногоДокумента";
	
	Для Каждого Раздел Из мСвойстваРазделовДекларации.ПолучитьЭлементы() Цикл
			
		Если НЕ Раздел.МногостраничностьВРазделе Тогда
			ПоказателиОтчета.Вставить(Префикс + Раздел.ИмяСтраницы, ЭтаФорма["СтруктураДанных" + Раздел.ИмяСтраницы]);
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПустыеСтруктурыДанных()
	
	СохрТабличныйДокумент = Новый ТабличныйДокумент;
	
	СохрТабличныйДокумент.Вывести(ТабличныйДокумент);
	
	Для Каждого Раздел Из мСвойстваРазделовДекларации.ПолучитьЭлементы() Цикл
		
		Если НЕ Раздел.МногостраничностьВРазделе
		  И (ЭтаФорма["СтруктураДанных" + Раздел.ИмяСтраницы].Количество() = 0) Тогда
		  
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + Раздел.ИмяСтраницы));
			
			СохранитьДанныеРаздела(Раздел.ИмяСтраницы, Ложь);
			
		ИначеЕсли Раздел.МногостраничностьВРазделе
			    И (ЭтаФорма[мСтруктураМногостраничныхРазделов[Раздел.ИмяСтраницы]][0].Данные.Количество() = 0) Тогда
				
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + Раздел.ИмяСтраницы));
			
			СохранитьДанныеРаздела(Раздел.ИмяСтраницы, Ложь);	
			
		КонецЕсли;
	
	КонецЦикла;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(СохрТабличныйДокумент);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДеревоНастройкиСтраниц(Знач мСохраненныйДок)
	
	Если мСохраненныйДок <> Неопределено Тогда
				
		Если ТипЗнч(мСохраненныйДок) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			мСохраненныйДок = мСохраненныйДок.ПолучитьОбъект();
		КонецЕсли;
		
		Если Не мСохраненныйДок.ЭтоНовый() Тогда
			// Сохраняем выбранные листы для печати в хранилище.
			ХранилищеДанных = Новый ХранилищеЗначения(РеквизитФормыВЗначение("мДеревоСтраницОтчета"));
			мСохраненныйДок.ДеревоНастройкиСтраниц = ХранилищеДанных;
			Попытка
				мСохраненныйДок.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
Конецпроцедуры

&НаСервере
Процедура ОбновитьСтруктуруМногострочногоРазделаНаСервере(ИмяГруппы) Экспорт
	
	ОбновитьСтруктуруМногострочногоРаздела(ЭтаФорма, ИмяГруппы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтруктуруМногострочногоРазделаНаКлиенте(ИмяГруппы) Экспорт
	
	ОбновитьСтруктуруМногострочногоРаздела(ЭтаФорма, ИмяГруппы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСтруктуруМногострочногоРаздела(Форма, ИмяГруппы)
	
	Перем СтруктураГруппы;
	
	Форма.мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы);
	
	СтруктураГруппы = Форма[СтруктураГруппы];
		
	ТекТабличноеПолеИмя = "ТабличныйДокумент";
	
	ТекТабличноеПоле = Форма[ТекТабличноеПолеИмя];
	
	Для НСтр = 1 По СтруктураГруппы.Количество() Цикл
		
		ТекСтрокаТаблицы = СтруктураГруппы[НСтр - 1];
		
		Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
				
			ИмяКолонки = ИмяГруппы + Формат(НомерГрафы, "ЧЦ=2; ЧВН=");
			
			Если СтруктураГруппы[0].Свойство(ИмяКолонки) Тогда	
				
				ИмяЯчейки     = ИмяКолонки + "_" + НСтр;
				ОбластьЯчейки = ТекТабличноеПоле.Области[ИмяЯчейки];
				
				Если ОбластьЯчейки.СодержитЗначение = Истина Тогда
					ЗначениеЯчейки = ОбластьЯчейки.Значение;
				Иначе
					ЗначениеЯчейки = ОбластьЯчейки.Текст;
				КонецЕсли;
				
				ТекСтрокаТаблицы[ИмяКолонки] = ЗначениеЯчейки;
				
			КонецЕсли;	
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыОтчетаПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено
	 ИЛИ Элемент.ТекущаяСтрока = СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета Тогда
		Возврат;
	КонецЕсли;
	
	КМенюРО = Элементы.РазделыОтчета.КонтекстноеМеню;
	КМенюТД = Элементы.ТабличныйДокументКонтекстноеМеню;
	
	КМенюТД.Видимость = Ложь;
	
	КМенюТД.ПодчиненныеЭлементы.ТабличныйДокументКонтекстноеМенюГруппаСтроки.Видимость = Ложь;
	
	СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета = Элемент.ТекущаяСтрока;
		
	Элементы.ОчиститьТекущуюСтраницу.Доступность = Истина;
	
	Если СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере Тогда
		
		Если Элемент.ТекущиеДанные.РазделМногостраничный Тогда
			        
			Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = ?(Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = Неопределено
															        ИЛИ Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = 0, 1, Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
																
		КонецЕсли;														
		
		ЗаголовокРаздела = Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено;
		
		ВывестиМакетСтраницыВТабличныйДокументНаСервере(Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим,
														Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета,
														ЗаголовокРаздела);
		
	Иначе
		
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
		
	КонецЕсли;
		
	Если Элемент.ТекущиеДанные.РазделМногостраничный Тогда
		
		Элемент.Развернуть(Элемент.ТекущаяСтрока);
		
		КМенюРО.Видимость = Истина;
		
		Если Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено
		 ИЛИ Элемент.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы().Количество() = 1 Тогда
			
			Если Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
				Элементы.ОчиститьТекущуюСтраницу.Доступность = Ложь;
			КонецЕсли;
			
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюКнопкаУдалитьСтраницу.Видимость  = Ложь;
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюКнопкаДобавитьСтраницу.Видимость = Истина;
			
		Иначе
			
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюКнопкаУдалитьСтраницу.Видимость  = Истина;
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюКнопкаДобавитьСтраницу.Видимость = Истина;
					
		КонецЕсли;
		
	Иначе
		
		КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюКнопкаУдалитьСтраницу.Видимость  = Ложь;
		КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюКнопкаДобавитьСтраницу.Видимость = Ложь;
		
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Раздел41" Тогда
		
		КМенюТД.Видимость = Истина;
		
		КМенюТД.ПодчиненныеЭлементы.ТабличныйДокументКонтекстноеМенюГруппаСтроки.Видимость = Истина;
		
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Титульный" Тогда
		
		ТабличныйДокумент.Области.НомерПачки.Значение = НомерПачки;
		
		Элементы.Обновить.Доступность = Истина;
		
	Иначе
		
		Элементы.Обновить.Доступность = Ложь;
		
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Раздел12" Тогда
		
  		ИзменитьФорматОтображенияНуля();
		
	КонецЕсли;
	
	Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(1, 1);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеРаздела(НаимРаздела, ОчищатьРазделЕслиЕстьМногострочность, ИзменятьАктивнуюСтраницу = Истина)
	
	// Многостраничные разделы.
	//
	Если НаимРаздела = "Раздел12" Тогда
		
		СтруктураДанных = Новый Структура;
		
		Для Каждого Область Из ТабличныйДокумент.Области Цикл
						
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			   И Область.СодержитЗначение Тогда	
				СтруктураДанных.Вставить(Область.Имя, Область.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
		Если НаимРаздела = "Раздел12" Тогда
			
			НаимТаблицыСтраницы = "ТаблицаСтраницыРазделаРаздел12";
			
		КонецЕсли;
		
		АктивныеСтраницы = ЭтаФорма[НаимТаблицыСтраницы].НайтиСтроки(Новый Структура("АктивнаяСтраница", Истина));
		
		Если АктивныеСтраницы.Количество() > 0 Тогда
			
			АктивнаяСтраница = АктивныеСтраницы[0];
			АктивнаяСтраница.Данные.Очистить();
			АктивнаяСтраница.Данные.Добавить(СтруктураДанных);
			
			Для каждого Страница Из АктивныеСтраницы Цикл
				Страница.АктивнаяСтраница = Ложь;
			КонецЦикла;
			
			Страница.АктивнаяСтраница = НЕ ИзменятьАктивнуюСтраницу;
			
		КонецЕсли; 
		
	// Многострочные разделы.
	//
	ИначеЕсли НаимРаздела = "Раздел41" Тогда
		
		ЭтаФорма["СтруктураДанных" + НаимРаздела] = СобратьДанныеТекущегоТаблПоля(ЭтаФорма, "ТабличныйДокумент");
		
		ИмяГруппы = ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(НаимРаздела);
		
		ОбновитьСтруктуруМногострочногоРаздела(ЭтаФорма, ИмяГруппы);
				
	// Обычные разделы.
	//
	Иначе
		
		ЭтаФорма["СтруктураДанных" + НаимРаздела] = СобратьДанныеТекущегоТаблПоля(ЭтаФорма, "ТабличныйДокумент");
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ВывестиМакетСтраницыВТабличныйДокументНаСервере(ИмяТекРаздела, НомерСтраницыРазделаОтчета, ЗаголовокРаздела = Ложь)
		
 	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела, Истина);
			
	ВывестиМакетВТаблДокНаСервере(ИмяТекРаздела, НомерСтраницыРазделаОтчета, ЗаголовокРаздела);
	
	СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяТекРаздела;
					
КонецПроцедуры

&НаСервере
Процедура ВывестиМакетВТаблДокНаСервере(ИмяТекРаздела, НомерСтраницыРазделаОтчета, ЗаголовокРаздела = Ложь)
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела));
	
	// Многостраничные разделы.
	//
	Если ИмяТекРаздела = "Раздел12" Тогда
		
    	НаимТаблицыСтраницы = "ТаблицаСтраницыРазделаРаздел12";
		
		Для Каждого ТаблицаСтраницы Из ЭтаФорма[НаимТаблицыСтраницы] Цикл
			
			Если ЭтаФорма[НаимТаблицыСтраницы].Количество() = 1 ИЛИ ЗаголовокРаздела Тогда
				
				Для Каждого Область Из ТабличныйДокумент.Области Цикл
					
					Если СтрЧислоВхождений(Область.Имя, "УдалитьСтраницу") > 0 Тогда
						
						Область.Текст = "";
						Область.Гиперссылка = Ложь;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			ТаблицаСтраницы.АктивнаяСтраница = Ложь;
			
		КонецЦикла;
		
	    СтруктураДанных = Новый Структура;
		
		ТаблицаАктивнойСтраницы = ЭтаФорма[НаимТаблицыСтраницы][НомерСтраницыРазделаОтчета - 1];
		
	    СписокДанных = ТаблицаАктивнойСтраницы.Данные;
		
		Для каждого ТаблицаСтраницы Из ЭтаФорма[НаимТаблицыСтраницы] Цикл
			ТаблицаСтраницы.АктивнаяСтраница = Ложь;
		КонецЦикла; 
		
		ТаблицаАктивнойСтраницы.АктивнаяСтраница = Истина;
		
	    Если СписокДанных.Количество() > 0 Тогда
	    	СтруктураДанных = СписокДанных[0].Значение;
	    КонецЕсли;
	     	 
		Для Каждого ЭлСтруктуры Из СтруктураДанных Цикл
			Попытка
				ТабличныйДокумент.Области[ЭлСтруктуры.Ключ].Значение = ЭлСтруктуры.Значение;
			Исключение
			КонецПопытки;
	    КонецЦикла;
						
	// Многострочные разделы.
	//
	ИначеЕсли ИмяТекРаздела = "Раздел41" Тогда
		
		Для Каждого ЭлСтруктуры Из ЭтаФорма["СтруктураДанных" + ИмяТекРаздела] Цикл
			Попытка
				ТабличныйДокумент.Области[ЭлСтруктуры.Ключ].Значение = ЭлСтруктуры.Значение;
			Исключение
			КонецПопытки;
		КонецЦикла;
		
		ИмяГруппы = ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ИмяТекРаздела);
		
		СтруктураГруппы = Неопределено;
		
		мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы);
		
		СтруктураГруппы = ЭтаФорма[СтруктураГруппы];
		
		ВывестиРазделВТабличныйДокумент(ЭтаФорма, ИмяГруппы, СтруктураГруппы);
		
		ЕстьДопСтроки = Ложь;
		
		Для Каждого ОбластьТД Из ТабличныйДокумент.Области Цикл
			Если СтрЧислоВхождений(ОбластьТД.Имя, "_2") > 0 Тогда
				ЕстьДопСтроки = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьДопСтроки Тогда
			Для Каждого ОбластьТД Из ТабличныйДокумент.Области Цикл
				Если СтрЧислоВхождений(ОбластьТД.Имя, "УдалитьСтроку") > 0 Тогда
					ОбластьТД.Гиперссылка = Истина;
					ОбластьТД.Текст = "х";
				КонецЕсли;
			КонецЦикла;
		Иначе
			Для Каждого ОбластьТД Из ТабличныйДокумент.Области Цикл
				Если СтрЧислоВхождений(ОбластьТД.Имя, "УдалитьСтроку") > 0 Тогда
					ОбластьТД.Гиперссылка = Ложь;
					ОбластьТД.Текст = "";
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	// Обычные разделы.
	//	
	Иначе
		
		Для Каждого ЭлСтруктуры Из ЭтаФорма["СтруктураДанных" + ИмяТекРаздела] Цикл
			Попытка
				ТабличныйДокумент.Области[ЭлСтруктуры.Ключ].Значение = ЭлСтруктуры.Значение;
			Исключение
			КонецПопытки;
		КонецЦикла;
		
	КонецЕсли;	
	
	Если ИмяТекРаздела = "Титульный" Тогда
		
		УправлениеЛистамиНаСервере();
		ПроверкаЗакраскиТитульного();
		
	Иначе
		
		УстановитьФорматВыводаВПоляхВводаНаСервере(ИмяТекРаздела);
		
		УстановитьЦветФонаЯчейкиНаСервере(,, ИмяТекРаздела);
		
		Если ИмяТекРаздела = "Раздел12" Тогда
		
			Если ТекущаяСтраницаПервая(ЭтаФорма, "Раздел12") Тогда
		    	ЗакраситьЖелтым(ЭтаФорма);
				УстановитьЦветФонаЯчейкиНаСервере(,, "Раздел12");
			Иначе
				ЗакраситьБелым(ЭтаФорма);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФорматОтображенияНуля(ИмяТекущейСтраницыПанели = Неопределено)
	
	Если ИмяТекущейСтраницыПанели = Неопределено Тогда
		ИмяТекущейСтраницыПанели = СтруктураРеквизитовФормы.НаимТекущегоРаздела;
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.НомерГода = "2010" Тогда
		Если (ИмяТекущейСтраницыПанели = "Раздел12") Тогда
			Если ТекущаяСтраницаПервая(ЭтаФорма, "Раздел12") Тогда
				Для инд = 3 По 6 Цикл  
					ИмяОбласти = "П00010001000"+инд;
					ТабличныйДокумент.Области[ИмяОбласти].Формат = СтрЗаменить(ТабличныйДокумент.Области[ИмяОбласти].Формат, "ЧН=-", "ЧН=");
				КонецЦикла;
			Иначе
				Для инд = 3 По 6 Цикл  
					ИмяОбласти = "П00010001000"+инд;
					ТабличныйДокумент.Области[ИмяОбласти].Формат = СтрЗаменить(ТабличныйДокумент.Области[ИмяОбласти].Формат, "ЧН=;", "ЧН=-;");
				КонецЦикла;
				
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		Если СтруктураРеквизитовФормы.мСкопированаИз2010 = Истина Тогда
			Если (ИмяТекущейСтраницыПанели = "Раздел12") И ТекущаяСтраницаПервая(ЭтаФорма, "Раздел12") Тогда
				Для инд = 3 По 6 Цикл  
					ИмяОбласти = "П00010001000"+инд;
					ТабличныйДокумент.Области[ИмяОбласти].Формат = СтрЗаменить(ТабличныйДокумент.Области[ИмяОбласти].Формат, "ЧН=;", "ЧН=-;");
				КонецЦикла; 
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекущаяСтраницаПервая(Форма, ИмяТекущейСтраницыПанели)
	
	Перем ТаблицаСтраницРаздела;
	
	ИмяТекТабличногоПоля = "ТабличныйДокумент";
	ТекТабличноеПоле     = Форма[ИмяТекТабличногоПоля];
	
	Пр = Форма.мСтруктураМногостраничныхРазделов.Свойство(ИмяТекущейСтраницыПанели, ТаблицаСтраницРаздела); 
	
	ТаблицаСтраницРаздела = Форма[ТаблицаСтраницРаздела];
	
	СтрТаблицаСтраницы = ТаблицаСтраницРаздела.НайтиСтроки(Новый Структура("АктивнаяСтраница", Истина))[0];
	
	Если НЕ СтрТаблицаСтраницы = Неопределено Тогда
	
		НомерТекущейСтраницы = ТаблицаСтраницРаздела.Индекс(СтрТаблицаСтраницы) + 1;
		
		Возврат НомерТекущейСтраницы = 1;
	
	КонецЕсли;      	
	
	Возврат Ложь;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗакраситьЖелтым(Форма)   
		
	Для Каждого Показатель Из Форма.СтруктураРеквизитовФормы.Массив1 Цикл
		
		Область = Форма.ТабличныйДокумент.Области[Показатель.Значение];
		Область.Защита = Ложь;	
		Область.ЦветФона = Форма.СтруктураРеквизитовФормы.ЦветЖелтый; 
		
	КонецЦикла; 

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗакраситьБелым(Форма)
		
	Для Каждого Показатель Из Форма.СтруктураРеквизитовФормы.Массив1 Цикл    		
		
		Область = Форма.ТабличныйДокумент.Области[Показатель.Значение];
		Область.Значение = "";
		Область.Защита = Истина;	
        Область.ЦветФона = Форма.СтруктураРеквизитовФормы.ЦветБелый; 
		
	КонецЦикла; 

КонецПроцедуры

&НаКлиенте
Процедура ВвестиПоказатель(Элемент, Область, КодПоказателя, Знач ЭтоСумма, Знач ТекстВыбора, ТаблицаВыбора, СтандартнаяОбработка, КолонкаПоиска = "Код")
	
	Если ТаблицаВыбора = Неопределено ИЛИ СтруктураРеквизитовФормы.мАвтоВыборКодов Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Область.Имя = КодПоказателя Тогда
		ИсходноеЗначение = ?(ТипЗнч(Область.Значение) = Тип("Строка"), СокрЛП(Область.Значение), Область.Значение);
	Иначе
		Разделитель = ?(Лев(Область.Имя, СтрДлина(КодПоказателя) + 1) = КодПоказателя + "_", "_", "");
		ИндексОбласти = 1;
		ИсходноеЗначение = "";
		Пока ЭтаФорма[ТекущийЭлемент.Имя].Области.Найти(КодПоказателя + Разделитель + Формат(ИндексОбласти, "ЧГ=")) <> Неопределено Цикл
			ИсходноеЗначение = ИсходноеЗначение + Строка(ЭтаФорма[ТекущийЭлемент.Имя].Области[КодПоказателя + Разделитель + Формат(ИндексОбласти, "ЧГ=")].Значение);
			ИндексОбласти = ИндексОбласти + 1;
		КонецЦикла;
		ИсходноеЗначение = СокрЛП(ИсходноеЗначение);
	КонецЕсли;
	
	ОблПрПодписанта = ТабличныйДокумент.Области.Найти("ПрПодп");
	ПрПодписанта = ?(ОблПрПодписанта = Неопределено, "", ОблПрПодписанта.Значение);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          ТекстВыбора);
	ПараметрыФормы.Вставить("ТаблицаЗначений",    ТаблицаВыбора);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура(КолонкаПоиска, ИсходноеЗначение));
	
	ДополнительныеПараметры =  Новый Структура("ИндексОбласти, КодПоказателя, КолонкаПоиска, Область, ПрПодписанта, Разделитель", ИндексОбласти, КодПоказателя, КолонкаПоиска, Область, ПрПодписанта, Разделитель);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиПоказательЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиПоказательЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ИндексОбласти = ДополнительныеПараметры.ИндексОбласти;
	КодПоказателя = ДополнительныеПараметры.КодПоказателя;
	КолонкаПоиска = ДополнительныеПараметры.КолонкаПоиска;
	Область = ДополнительныеПараметры.Область;
	ПрПодписанта = ДополнительныеПараметры.ПрПодписанта;
	Разделитель = ДополнительныеПараметры.Разделитель;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.Имя = КодПоказателя Тогда
		Область.Значение = РезультатВыбора[КолонкаПоиска];
	Иначе
		СтрокаРезультатВыбора = Строка(РезультатВыбора[КолонкаПоиска]);
		Для Инд = СтрДлина(СтрокаРезультатВыбора) + 1 По ИндексОбласти - 1 Цикл
			СтрокаРезультатВыбора = " " + РезультатВыбора[КолонкаПоиска];
		КонецЦикла;
		Для Инд = 1 По ИндексОбласти - 1 Цикл
			ЭтаФорма[ТекущийЭлемент.Имя].Области[КодПоказателя + Разделитель + Формат(Инд, "ЧГ=")].Значение = СокрЛП(Сред(РезультатВыбора[КолонкаПоиска], Инд, 1));
		КонецЦикла;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	РасчетНаКлиенте(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	Если Область.Имя = "ПрПодп" Тогда
		ПрПодписантаНов = ТабличныйДокумент.Области.ПрПодп.Значение;
		СменилсяПрПодписанта = ?(ПрПодписанта = ПрПодписантаНов, Ложь, Истина);
		Если СменилсяПрПодписанта Тогда
			Если ПрПодписантаНов = "1" Тогда
				ЗаполнитьСведенияОбОрганизации(Истина);
			Иначе
				ТабличныйДокумент.Области.ДокУпПред.Защита = Ложь;
				ТабличныйДокумент.Области.ДокУпПред.ЦветФона = СтруктураРеквизитовФормы.ЦветЖелтый;
				ТабличныйДокумент.Области.ОргПодписантФамилия.Значение = "";
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетНаКлиенте(ИмяТекущейСтраницыПанели = "", ОбластьИмя = "") Экспорт

	Расчет(ЭтаФорма, ИмяТекущейСтраницыПанели, ОбластьИмя);

КонецПроцедуры

&НаСервере
Процедура РасчетНаСервере(ИмяТекущейСтраницыПанели = "", ОбластьИмя = "") Экспорт

	Расчет(ЭтаФорма, ИмяТекущейСтраницыПанели, ОбластьИмя);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура Расчет(Форма, ИмяТекущейСтраницыПанели = "", ОбластьИмя = "")
	
	Перем ТаблицаБлока;
	
	Если Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяТекущейСтраницыПанели = "Раздел12" Тогда
		
	ИначеЕсли ИмяТекущейСтраницыПанели = "Раздел30" Тогда // Раздел 3.
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300030003, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300030003.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030103.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030203.Значение);
		КонецЕсли;
 		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300030004, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300030004.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030104.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030204.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300030005, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300030005.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030105.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030205.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300030006, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300030006.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030106.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030206.Значение);
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031003, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300031003.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031103.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031203.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031004, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300031004.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031104.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031204.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031005, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300031005.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031105.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031205.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031006, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300031006.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031106.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031206.Значение);
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031603, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300031603.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031703.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031803.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031604, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300031604.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031704.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031804.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031605, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300031605.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031705.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031805.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031606, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300031606.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031706.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031806.Значение);
 	    КонецЕсли;
															   
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032003, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300032003.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030103.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031103.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031403.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031703.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032004, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300032004.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030104.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031104.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031404.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031704.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032005, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300032005.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030105.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031105.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031405.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031705.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032006, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300032006.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030106.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031106.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031406.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031706.Значение);
		КонецЕсли;
															   
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032103, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300032103.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030203.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031203.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031503.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031803.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032104, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300032104.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030204.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031204.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031504.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031804.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032105, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300032105.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030205.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031205.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031505.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031805.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032106, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300032106.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300030206.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031206.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031506.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300031806.Значение);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300035003, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300035003.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035103.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035203.Значение);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300035004, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300035004.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035104.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035204.Значение);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300035005, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300035005.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035105.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035205.Значение);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300035006, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300035006.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035106.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035206.Значение);
 	    КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036003, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300036003.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036103.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036203.Значение);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036004, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300036004.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036104.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036204.Значение);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036005, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300036005.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036105.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036205.Значение);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036006, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300036006.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036106.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036206.Значение);
 	    КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036303, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300036303.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036403.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036503.Значение);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036304, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300036304.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036404.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036504.Значение);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036305, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300036305.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036405.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036505.Значение);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036306, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300036306.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036406.Значение)
																   + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036506.Значение);
 	    КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037003, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300037003.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035103.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036103.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036403.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037004, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300037004.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035104.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036104.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036404.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037005, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300037005.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035105.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036105.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036405.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037006, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300037006.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035106.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036106.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036406.Значение);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037103, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300037103.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035203.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036203.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036503.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037104, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300037104.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035204.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036204.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036504.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037105, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300037105.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035205.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036205.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036505.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037106, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300037106.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035206.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036206.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036506.Значение);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300038003, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300038003.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035003.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036003.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036303.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300038004, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300038004.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035004.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036004.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036304.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300038005, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300038005.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035005.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036005.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036305.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300038006, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000300038006.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300035006.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036006.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000300036306.Значение);
		КонецЕсли;
        
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(ОбластьИмя, "П000300034") > 0 ИЛИ СтрЧислоВхождений(ОбластьИмя, "П000300039") > 0 Тогда
			
			Форма.РасчетВСтруктуреНаСервере(ИмяТекущейСтраницыПанели, ОбластьИмя);
			
		КонецЕсли;
		
	ИначеЕсли ИмяТекущейСтраницыПанели = "Раздел41" Тогда // Раздел 4.1.
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000410002005, ОбластьИмя) > 0 Тогда
			
			Форма.мСтруктураМногострочныхРазделов.Свойство(Форма.СтруктураРеквизитовФормы.мИдГруппы1, ТаблицаБлока);
			
			ТаблицаБлока = Форма[ТаблицаБлока];
			
			Колонка5 = 0;
			
			Для Ном = 1 По ТаблицаБлока.Количество() Цикл
				
				Колонка5 = Колонка5 + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области["П000410001005_" + Ном].Значение);
				
			КонецЦикла;
			
			Форма.ТабличныйДокумент.Области.П000410002005.Значение = Колонка5;		
			
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000410002006, ОбластьИмя) > 0 Тогда
			
			Форма.мСтруктураМногострочныхРазделов.Свойство(Форма.СтруктураРеквизитовФормы.мИдГруппы1, ТаблицаБлока);
			
			ТаблицаБлока = Форма[ТаблицаБлока];
			
			Колонка6 = 0;
			
			Для Ном = 1 По ТаблицаБлока.Количество() Цикл
				
				Колонка6 = Колонка6 + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области["П000410001006_" + Ном].Значение);
				
			КонецЦикла;
			
			Форма.ТабличныйДокумент.Области.П000410002006.Значение = Колонка6;		
			
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000410002007, ОбластьИмя) > 0 Тогда
			
			Форма.мСтруктураМногострочныхРазделов.Свойство(Форма.СтруктураРеквизитовФормы.мИдГруппы1, ТаблицаБлока);
			
			ТаблицаБлока = Форма[ТаблицаБлока];
			
			Колонка7 = 0;
			
			Для Ном = 1 По ТаблицаБлока.Количество() Цикл
				
				Колонка7 = Колонка7 + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области["П000410001007_" + Ном].Значение);
				
			КонецЦикла;
			
			Форма.ТабличныйДокумент.Области.П000410002007.Значение = Колонка7;		
			
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000410002008, ОбластьИмя) > 0 Тогда
			
			Форма.мСтруктураМногострочныхРазделов.Свойство(Форма.СтруктураРеквизитовФормы.мИдГруппы1, ТаблицаБлока);
			
			ТаблицаБлока = Форма[ТаблицаБлока];
			
			Колонка8 = 0;
			
			Для Ном = 1 По ТаблицаБлока.Количество() Цикл
				
				Колонка8 = Колонка8 + ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области["П000410001008_" + Ном].Значение);
				
			КонецЦикла;
			
			Форма.ТабличныйДокумент.Области.П000410002008.Значение = Колонка8;		
			
		КонецЕсли;
		
	ИначеЕсли ИмяТекущейСтраницыПанели = "Раздел42" Тогда // Раздел 4.2.
			
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042303, ОбластьИмя) > 0 Тогда
			П000420042103 = Форма.ТабличныйДокумент.Области.П000420042103.Значение;
			П000420042203 = Форма.ТабличныйДокумент.Области.П000420042203.Значение;
    		Форма.ТабличныйДокумент.Области.П000420042303.Значение = ? (П000420042103 <> 0, (П000420042203 / П000420042103) * 100, 0);
		КонецЕсли;
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042304, ОбластьИмя) > 0 Тогда
 			П000420042104 = Форма.ТабличныйДокумент.Области.П000420042104.Значение;
			П000420042204 = Форма.ТабличныйДокумент.Области.П000420042204.Значение;
    		Форма.ТабличныйДокумент.Области.П000420042304.Значение = ? (П000420042104 <> 0, (П000420042204 / П000420042104) * 100, 0);
		КонецЕсли;
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042305, ОбластьИмя) > 0 Тогда
			П000420042105 = Форма.ТабличныйДокумент.Области.П000420042105.Значение;
			П000420042205 = Форма.ТабличныйДокумент.Области.П000420042205.Значение;
    		Форма.ТабличныйДокумент.Области.П000420042305.Значение = ? (П000420042105 <> 0, (П000420042205 / П000420042105) * 100, 0);
		КонецЕсли;
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042306, ОбластьИмя) > 0 Тогда
			П000420042106 = Форма.ТабличныйДокумент.Области.П000420042106.Значение;
			П000420042206 = Форма.ТабличныйДокумент.Области.П000420042206.Значение;
    		Форма.ТабличныйДокумент.Области.П000420042306.Значение = ? (П000420042106 <> 0, (П000420042206 / П000420042106) * 100, 0);
		КонецЕсли;
		
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042603, ОбластьИмя) > 0 Тогда
			П000420042403 = Форма.ТабличныйДокумент.Области.П000420042403.Значение;
			П000420042503 = Форма.ТабличныйДокумент.Области.П000420042503.Значение;
    		Форма.ТабличныйДокумент.Области.П000420042603.Значение = ? (П000420042403 <> 0, (П000420042503 / П000420042403) * 100, 0);
		КонецЕсли;
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042604, ОбластьИмя) > 0 Тогда
			П000420042404 = Форма.ТабличныйДокумент.Области.П000420042404.Значение;
			П000420042504 = Форма.ТабличныйДокумент.Области.П000420042504.Значение;
    		Форма.ТабличныйДокумент.Области.П000420042604.Значение = ? (П000420042404 <> 0, (П000420042504 / П000420042404) * 100, 0);
		КонецЕсли;
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042605, ОбластьИмя) > 0 Тогда
			П000420042405 = Форма.ТабличныйДокумент.Области.П000420042405.Значение;
			П000420042505 = Форма.ТабличныйДокумент.Области.П000420042505.Значение;
    		Форма.ТабличныйДокумент.Области.П000420042605.Значение = ? (П000420042405 <> 0, (П000420042505 / П000420042405) * 100, 0);
		КонецЕсли;
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042606, ОбластьИмя) > 0 Тогда
			П000420042406 = Форма.ТабличныйДокумент.Области.П000420042406.Значение;
			П000420042506 = Форма.ТабличныйДокумент.Области.П000420042506.Значение;
    		Форма.ТабличныйДокумент.Области.П000420042606.Значение = ? (П000420042406 <> 0, (П000420042506 / П000420042406) * 100, 0);
		КонецЕсли;
		
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042903, ОбластьИмя) > 0 Тогда
			П000420042703 = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000420042703.Значение);
			П000420042803 = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000420042803.Значение);
    		Форма.ТабличныйДокумент.Области.П000420042903.Значение = ? (П000420042703 <> 0, (П000420042803 / П000420042703) * 100, 0);
		КонецЕсли;
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042904, ОбластьИмя) > 0 Тогда
			П000420042704 = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000420042704.Значение);
			П000420042804 = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000420042804.Значение);
    		Форма.ТабличныйДокумент.Области.П000420042904.Значение = ? (П000420042704 <> 0, (П000420042804 / П000420042704) * 100, 0);
		КонецЕсли;
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042905, ОбластьИмя) > 0 Тогда
			П000420042705 = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000420042705.Значение);
			П000420042805 = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000420042805.Значение);
    		Форма.ТабличныйДокумент.Области.П000420042905.Значение = ? (П000420042705 <> 0, (П000420042805 / П000420042705) * 100, 0);
		КонецЕсли;
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042906, ОбластьИмя) > 0 Тогда
			П000420042706 = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000420042706.Значение);
			П000420042806 = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000420042806.Значение);
    		Форма.ТабличныйДокумент.Области.П000420042906.Значение = ? (П000420042706 <> 0, (П000420042806 / П000420042706) * 100, 0);
		КонецЕсли;
		
	ИначеЕсли ИмяТекущейСтраницыПанели = "Раздел43" Тогда // Раздел 4.3.
		
   		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000430043203, ОбластьИмя) > 0 Тогда
			П000430043003 = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000430043003.Значение);
			П000430043103 = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000430043103.Значение);
    		Форма.ТабличныйДокумент.Области.П000430043203.Значение = ?(П000430043003 <> 0, (П000430043103 / П000430043003) * 100, 0);
		КонецЕсли;
	
	ИначеЕсли  ИмяТекущейСтраницыПанели = "Раздел50" Тогда // Раздел 5.
		
 		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000500053003, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000500053003.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000500051003.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000500052003.Значение);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000500053004, ОбластьИмя) > 0 Тогда
			
			Форма.ТабличныйДокумент.Области.П000500053004.Значение = ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000500051004.Значение)
																   - ОкруглитьЧислоПоФормату(Форма, Форма.ТабличныйДокумент.Области.П000500052004.Значение);
		КонецЕсли;
		
	ИначеЕсли ИмяТекущейСтраницыПанели = "" Тогда
		
		РасчетВСтруктуреВсехРазделов(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РасчетВСтруктуреНаСервере(ИмяРаздела, ОбластьИмя = "", НомерСтраницы = 0) Экспорт

 	 СохранитьДанныеРаздела(ИмяРаздела, Ложь, Ложь);

	 РасчетВСтруктуре(ЭтаФорма, "Раздел12", ОбластьИмя, НомерСтраницы);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РасчетВСтруктуре(Форма, ИмяЛиста, ОбластьИмя = "", НомерСтраницы = 0)
	
	// Расчет осуществляется по структуре многостраничных разделов декларации.
	ТаблицаРаздела = Форма[Форма.мСтруктураМногостраничныхРазделов[ИмяЛиста]];
	
	Для Каждого Страница Из ТаблицаРаздела Цикл
		
		Если (Страница.Данные = Неопределено) ИЛИ (Тип(Страница.Данные) <> Тип("Структура")) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(НомерСтраницы) И (НомерСтраницы - 1 <> ТаблицаРаздела.Индекс(Страница)) Тогда
		    Продолжить;
		КонецЕсли;
		
		Данные = Страница.Данные[0].Значение;
		
		Если ИмяЛиста = "Раздел12" Тогда
			
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200020003, ОбластьИмя) > 0 Тогда
				Данные.П000200020003 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020103) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200020203);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200020003.Значение = Данные.П000200020003;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200020004, ОбластьИмя) > 0 Тогда
				Данные.П000200020004 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020104) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200020204);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200020004.Значение = Данные.П000200020004;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200020005, ОбластьИмя) > 0 Тогда
				Данные.П000200020005 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020105) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200020205);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200020005.Значение = Данные.П000200020005;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200020006, ОбластьИмя) > 0 Тогда
				Данные.П000200020006 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020106) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200020206);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200020006.Значение = Данные.П000200020006;
				КонецЕсли;
			КонецЕсли;
		    
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200021003, ОбластьИмя) > 0 Тогда
				Данные.П000200021003 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200021103) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200021203);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200021003.Значение = Данные.П000200021003;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200021004, ОбластьИмя) > 0 Тогда
				Данные.П000200021004 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200021104) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200021204);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200021004.Значение = Данные.П000200021004;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200021005, ОбластьИмя) > 0 Тогда
				Данные.П000200021005 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200021105) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200021205);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200021005.Значение = Данные.П000200021005;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200021006, ОбластьИмя) > 0 Тогда
				Данные.П000200021006 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200021106) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200021206);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200021006.Значение = Данные.П000200021006;
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200021603, ОбластьИмя) > 0 Тогда
				Данные.П000200021603 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200021703) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200021803);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200021603.Значение = Данные.П000200021603;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200021604, ОбластьИмя) > 0 Тогда
				Данные.П000200021604 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200021704) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200021804);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200021604.Значение = Данные.П000200021604;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200021605, ОбластьИмя) > 0 Тогда
				Данные.П000200021605 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200021705) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200021805);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200021605.Значение = Данные.П000200021605;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200021606, ОбластьИмя) > 0 Тогда
				Данные.П000200021606 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200021706) + ОкруглитьЧислоПоФормату(Форма, Данные.П000200021806);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200021606.Значение = Данные.П000200021606;
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200022003, ОбластьИмя) > 0 Тогда
				Данные.П000200022003 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020103)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021103)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021403)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021703);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200022003.Значение = Данные.П000200022003;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200022004, ОбластьИмя) > 0 Тогда
				Данные.П000200022004 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020104)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021104)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021404)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021704);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200022004.Значение = Данные.П000200022004;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200022005, ОбластьИмя) > 0 Тогда
				Данные.П000200022005 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020105)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021105)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021405)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021705);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200022005.Значение = Данные.П000200022005;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200022006, ОбластьИмя) > 0 Тогда
				Данные.П000200022006 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020106)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021106)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021406)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021706);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200022006.Значение = Данные.П000200022006;
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200022103, ОбластьИмя) > 0 Тогда
				Данные.П000200022103 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020203)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021203)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021503)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021803);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200022103.Значение = Данные.П000200022103;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200022104, ОбластьИмя) > 0 Тогда
				Данные.П000200022104 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020204)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021204)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021504)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021804);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200022104.Значение = Данные.П000200022104;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200022105, ОбластьИмя) > 0 Тогда
				Данные.П000200022105 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020205)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021205)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021505)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021805);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200022105.Значение = Данные.П000200022105;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000200022106, ОбластьИмя) > 0 Тогда
				Данные.П000200022106 = ОкруглитьЧислоПоФормату(Форма, Данные.П000200020206)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021206)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021506)
									 - ОкруглитьЧислоПоФормату(Форма, Данные.П000200021806);
				Если Страница.АктивнаяСтраница Тогда
					Форма.ТабличныйДокумент.Области.П000200022106.Значение = Данные.П000200022106;
				КонецЕсли;
			КонецЕсли;
			
			Если ТаблицаРаздела.Индекс(Страница) = 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011003, ОбластьИмя) > 0 Тогда
					Данные.П000100011003 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024103", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034103)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039103);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011003.Значение = Данные.П000100011003;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011103, ОбластьИмя) > 0 Тогда
					Данные.П000100011103 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024104", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034104)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039104);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011103.Значение = Данные.П000100011103;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011203, ОбластьИмя) > 0 Тогда
					Данные.П000100011203 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024105", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034105)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039105);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011203.Значение = Данные.П000100011203;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011303, ОбластьИмя) > 0 Тогда
					Данные.П000100011303 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024106", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034106)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039106);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011303.Значение = Данные.П000100011303;
					КонецЕсли;
				КонецЕсли;
                
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011004, ОбластьИмя) > 0 Тогда
					Данные.П000100011004 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024203", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034203)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039203);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011004.Значение = Данные.П000100011004;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011104, ОбластьИмя) > 0 Тогда
					Данные.П000100011104 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024204", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034204)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039204);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011104.Значение = Данные.П000100011104;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011204, ОбластьИмя) > 0 Тогда
					Данные.П000100011204 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024205", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034205)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039205);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011204.Значение = Данные.П000100011204;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011304, ОбластьИмя) > 0 Тогда
					Данные.П000100011304 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024206", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034206)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039206);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011304.Значение = Данные.П000100011304;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011005, ОбластьИмя) > 0 Тогда
					Данные.П000100011005 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024303", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034303)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039303);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011005.Значение = Данные.П000100011005;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011105, ОбластьИмя) > 0 Тогда
					Данные.П000100011105 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024304", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034304)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039304);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011105.Значение = Данные.П000100011105;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011205, ОбластьИмя) > 0 Тогда
					Данные.П000100011205 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024305", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034305)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039305);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011205.Значение = Данные.П000100011205;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011305, ОбластьИмя) > 0 Тогда
					Данные.П000100011305 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024306", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034306)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039306);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011305.Значение = Данные.П000100011305;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011006, ОбластьИмя) > 0 Тогда
					Данные.П000100011006 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024403", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034403)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039403);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011006.Значение = Данные.П000100011006;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011106, ОбластьИмя) > 0 Тогда
					Данные.П000100011106 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024404", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034404)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039404);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011106.Значение = Данные.П000100011106;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011206, ОбластьИмя) > 0 Тогда
					Данные.П000100011206 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024405", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034405)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039405);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011206.Значение = Данные.П000100011206;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011306, ОбластьИмя) > 0 Тогда
					Данные.П000100011306 = СуммаПоказателяПоВсемСтраницам(Форма, "Раздел12", "П000200024406", Истина)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300034406)
										 + ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300039406);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011306.Значение = Данные.П000100011306;
					КонецЕсли;
				КонецЕсли;
					
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011403, ОбластьИмя) > 0 Тогда
					Данные.П000100011403 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100011103)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011203)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011303);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011403.Значение = Данные.П000100011403;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011404, ОбластьИмя) > 0 Тогда
					Данные.П000100011404 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100011104)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011204)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011304);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011404.Значение = Данные.П000100011404;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011405, ОбластьИмя) > 0 Тогда
					Данные.П000100011405 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100011105)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011205)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011305);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011405.Значение = Данные.П000100011405;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011406, ОбластьИмя) > 0 Тогда
					Данные.П000100011406 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100011106)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011206)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011306);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011406.Значение = Данные.П000100011406;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100013003, ОбластьИмя) > 0 Тогда
					Данные.П000100013003 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100010003)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011003)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100012003);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100013003.Значение = Данные.П000100013003;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100013004, ОбластьИмя) > 0 Тогда
					Данные.П000100013004 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100010004)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011004)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100012004);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100013004.Значение = Данные.П000100013004;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100013005, ОбластьИмя) > 0 Тогда
					Данные.П000100013005 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100010005)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011005)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100012005);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100013005.Значение = Данные.П000100013005;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100013006, ОбластьИмя) > 0 Тогда
					Данные.П000100013006 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100010006)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100011006)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100012006);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100013006.Значение = Данные.П000100013006;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100014403, ОбластьИмя) > 0 Тогда
					Данные.П000100014403 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100014103)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100014203)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100014303);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100014403.Значение = Данные.П000100014403;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100014404, ОбластьИмя) > 0 Тогда
					Данные.П000100014404 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100014104)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100014204)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100014304);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100014404.Значение = Данные.П000100014404;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100014405, ОбластьИмя) > 0 Тогда
					Данные.П000100014405 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100014105)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100014205)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100014305);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100014405.Значение = Данные.П000100014405;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100014406, ОбластьИмя) > 0 Тогда
					Данные.П000100014406 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100014106)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100014206)
										 + ОкруглитьЧислоПоФормату(Форма, Данные.П000100014306);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100014406.Значение = Данные.П000100014406;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100015003, ОбластьИмя) > 0 Тогда
					Данные.П000100015003 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100013003)
										 - ОкруглитьЧислоПоФормату(Форма, Данные.П000100014003);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100015003.Значение = Данные.П000100015003;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100015004, ОбластьИмя) > 0 Тогда
					Данные.П000100015004 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100013004)
										 - ОкруглитьЧислоПоФормату(Форма, Данные.П000100014004);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100015004.Значение = Данные.П000100015004;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100015005, ОбластьИмя) > 0 Тогда
					Данные.П000100015005 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100013005)
										 - ОкруглитьЧислоПоФормату(Форма, Данные.П000100014005);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100015005.Значение = Данные.П000100015005;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100015006, ОбластьИмя) > 0 Тогда
					Данные.П000100015006 = ОкруглитьЧислоПоФормату(Форма, Данные.П000100013006)
										 - ОкруглитьЧислоПоФормату(Форма, Данные.П000100014006);
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100015006.Значение = Данные.П000100015006;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011003, ОбластьИмя) > 0 Тогда
					Данные.П000100011003 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011003.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011103, ОбластьИмя) > 0 Тогда
					Данные.П000100011103 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011103.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011203, ОбластьИмя) > 0 Тогда
					Данные.П000100011203 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011203.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011303, ОбластьИмя) > 0 Тогда
					Данные.П000100011303 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011303.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011004, ОбластьИмя) > 0 Тогда
					Данные.П000100011004 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011004.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011104, ОбластьИмя) > 0 Тогда
					Данные.П000100011104 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011104.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011204, ОбластьИмя) > 0 Тогда
					Данные.П000100011204 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011204.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011304, ОбластьИмя) > 0 Тогда
					Данные.П000100011304 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011304.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011005, ОбластьИмя) > 0 Тогда
					Данные.П000100011005 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011005.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011105, ОбластьИмя) > 0 Тогда
					Данные.П000100011105 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011105.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011205, ОбластьИмя) > 0 Тогда
					Данные.П000100011205 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011205.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011305, ОбластьИмя) > 0 Тогда
					Данные.П000100011305 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011305.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011006, ОбластьИмя) > 0 Тогда
					Данные.П000100011006 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011006.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011106, ОбластьИмя) > 0 Тогда
					Данные.П000100011106 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011106.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011206, ОбластьИмя) > 0 Тогда
					Данные.П000100011206 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011206.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011306, ОбластьИмя) > 0 Тогда
					Данные.П000100011306 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011306.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011403, ОбластьИмя) > 0 Тогда
					Данные.П000100011403 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011403.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011404, ОбластьИмя) > 0 Тогда
					Данные.П000100011404 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011404.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011405, ОбластьИмя) > 0 Тогда
					Данные.П000100011405 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011405.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100011406, ОбластьИмя) > 0 Тогда
					Данные.П000100011406 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100011406.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100013003, ОбластьИмя) > 0 Тогда
					Данные.П000100013003 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100013003.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100013004, ОбластьИмя) > 0 Тогда
					Данные.П000100013004 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100013004.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100013005, ОбластьИмя) > 0 Тогда
					Данные.П000100013005 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100013005.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100013006, ОбластьИмя) > 0 Тогда
					Данные.П000100013006 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100013006.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100014403, ОбластьИмя) > 0 Тогда
					Данные.П000100014403 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100014403.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100014404, ОбластьИмя) > 0 Тогда
					Данные.П000100014404 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100014404.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100014405, ОбластьИмя) > 0 Тогда
					Данные.П000100014405 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100014405.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100014406, ОбластьИмя) > 0 Тогда
					Данные.П000100014406 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100014406.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100015003, ОбластьИмя) > 0 Тогда
					Данные.П000100015003 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100015003.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100015004, ОбластьИмя) > 0 Тогда
					Данные.П000100015004 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100015004.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100015005, ОбластьИмя) > 0 Тогда
					Данные.П000100015005 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100015005.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000100015006, ОбластьИмя) > 0 Тогда
					Данные.П000100015006 = 0;
					Если Страница.АктивнаяСтраница Тогда
						Форма.ТабличныйДокумент.Области.П000100015006.Значение = 0;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РасчетВСтруктуреВсехРазделов(Форма, ИмяТекущейСтраницыПанели="", ОбластьИмя = "", НомерСтраницы = 0)
	
	Перем ТаблицаБлока;
	
	Если Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяТекущейСтраницыПанели = "Раздел12" Тогда
		
		РасчетВСтруктуре(Форма, "Раздел12", ОбластьИмя, НомерСтраницы);
		
	ИначеЕсли ИмяТекущейСтраницыПанели = "Раздел30" Тогда
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300030003, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300030003 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030103)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030203);
		КонецЕсли;
 		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300030004, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300030004 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030104)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030204);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300030005, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300030005 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030105)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030205);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300030006, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300030006 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030106)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030206);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031003, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300031003 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031103)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031203);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031004, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300031004 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031104)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031204);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031005, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300031005 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031105)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031205);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031006, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300031006 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031106)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031206);
		КонецЕсли;
													
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031603, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300031603 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031703)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031803);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031604, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300031604 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031704)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031804);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031605, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300031605 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031705)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031805);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300031606, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300031606 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031706)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031806);
 	    КонецЕсли;
													
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032003, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300032003 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030103)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031103)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031403)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031703);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032004, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300032004 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030104)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031104)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031404)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031704);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032005, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300032005 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030105)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031105)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031405)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031705);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032006, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300032006 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030106)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031106)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031406)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031706);
		КонецЕсли;
													
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032103, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300032103 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030203)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031203)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031503)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031803);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032104, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300032104 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030204)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031204)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031504)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031804);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032105, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300032105 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030205)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031205)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031505)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031805);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300032106, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300032106 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300030206)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031206)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031506)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300031806);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300035003, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300035003 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035103)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035203);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300035004, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300035004 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035104)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035204);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300035005, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300035005 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035105)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035205);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300035006, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300035006 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035106)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035206);
 	    КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036003, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300036003 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036103)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036203);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036004, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300036004 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036104)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036204);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036005, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300036005 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036105)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036205);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036006, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300036006 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036106)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036206);
 	    КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036303, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300036303 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036403)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036503);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036304, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300036304 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036404)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036504);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036305, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300036305 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036405)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036505);
 	    КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300036306, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300036306 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036406)
														+ ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036506);
 	    КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037003, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300037003 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035103)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036103)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036403);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037004, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300037004 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035104)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036104)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036404);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037005, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300037005 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035105)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036105)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036405);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037006, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300037006 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035106)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036106)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036406);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037103, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300037103 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035203)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036203)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036503);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037104, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300037104 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035204)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036204)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036504);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037105, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300037105 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035205)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036205)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036505);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300037106, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300037106 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035206)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036206)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036506);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300038003, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300038003 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035003)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036003)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036303);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300038004, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300038004 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035004)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036004)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036304);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300038005, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300038005 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035005)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036005)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036305);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000300038006, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел30.П000300038006 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300035006)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036006)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел30.П000300036306);
		КонецЕсли;
        
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(ОбластьИмя, "П000300034") > 0 ИЛИ СтрЧислоВхождений(ОбластьИмя, "П000300039") > 0 Тогда
			
			РасчетВСтруктуре(Форма, "Раздел12", ОбластьИмя);
			
		КонецЕсли;
		
	ИначеЕсли ИмяТекущейСтраницыПанели = "Раздел41" Тогда
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000410002005, ОбластьИмя) > 0 Тогда
			
			Форма.мСтруктураМногострочныхРазделов.Свойство(Форма.СтруктураРеквизитовФормы.мИдГруппы1, ТаблицаБлока);
			
			ТаблицаБлока = Форма[ТаблицаБлока];
			
			Колонка5 = 0;
			
			Для Ном = 1 По ТаблицаБлока.Количество() Цикл
				
				Колонка5 = Колонка5 + ОкруглитьЧислоПоФормату(Форма, ТаблицаБлока[Ном - 1].П000410001005);
				
			КонецЦикла;
			
			Форма.СтруктураДанныхРаздел41.П000410002005 = Колонка5;
			
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000410002006, ОбластьИмя) > 0 Тогда
			
			Форма.мСтруктураМногострочныхРазделов.Свойство(Форма.СтруктураРеквизитовФормы.мИдГруппы1, ТаблицаБлока);
			
			ТаблицаБлока = Форма[ТаблицаБлока];
			
			Колонка6 = 0;
			
			Для Ном = 1 По ТаблицаБлока.Количество() Цикл
				
				Колонка6 = Колонка6 + ОкруглитьЧислоПоФормату(Форма, ТаблицаБлока[Ном - 1].П000410001006);
				
			КонецЦикла;
			
			Форма.СтруктураДанныхРаздел41.П000410002006 = Колонка6;
			
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000410002007, ОбластьИмя) > 0 Тогда
			
			Форма.мСтруктураМногострочныхРазделов.Свойство(Форма.СтруктураРеквизитовФормы.мИдГруппы1, ТаблицаБлока);
			
			ТаблицаБлока = Форма[ТаблицаБлока];
			
			Колонка7 = 0;
			
			Для Ном = 1 По ТаблицаБлока.Количество() Цикл
				
				Колонка7 = Колонка7 + ОкруглитьЧислоПоФормату(Форма, ТаблицаБлока[Ном - 1].П000410001007);
				
			КонецЦикла;
			
			Форма.СтруктураДанныхРаздел41.П000410002007 = Колонка7;
			
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000410002008, ОбластьИмя) > 0 Тогда
			
			Форма.мСтруктураМногострочныхРазделов.Свойство(Форма.СтруктураРеквизитовФормы.мИдГруппы1, ТаблицаБлока);
			
			ТаблицаБлока = Форма[ТаблицаБлока];
			
			Колонка8 = 0;
			
			Для Ном = 1 По ТаблицаБлока.Количество() Цикл
				
				Колонка8 = Колонка8 + ОкруглитьЧислоПоФормату(Форма, ТаблицаБлока[Ном - 1].П000410001008);
				
			КонецЦикла;
			
			Форма.СтруктураДанныхРаздел41.П000410002008 = Колонка8;
			
		КонецЕсли;
		
	ИначеЕсли ИмяТекущейСтраницыПанели = "Раздел42" Тогда
			
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042303, ОбластьИмя) > 0 Тогда
			П000420042103 = Форма.СтруктураДанныхРаздел42.П000420042103;
			П000420042203 = Форма.СтруктураДанныхРаздел42.П000420042203;
			Форма.СтруктураДанныхРаздел42.П000420042303 = ? (П000420042103 <> 0, (П000420042203 / П000420042103) * 100, 0);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042304, ОбластьИмя) > 0 Тогда
			П000420042104 = Форма.СтруктураДанныхРаздел42.П000420042104;
			П000420042204 = Форма.СтруктураДанныхРаздел42.П000420042204;
			Форма.СтруктураДанныхРаздел42.П000420042304 = ? (П000420042104 <> 0, (П000420042204 / П000420042104) * 100, 0);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042305, ОбластьИмя) > 0 Тогда
			П000420042105 = Форма.СтруктураДанныхРаздел42.П000420042105;
			П000420042205 = Форма.СтруктураДанныхРаздел42.П000420042205;
			Форма.СтруктураДанныхРаздел42.П000420042305 = ? (П000420042105 <> 0, (П000420042205 / П000420042105) * 100, 0);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042306, ОбластьИмя) > 0 Тогда
			П000420042106 = Форма.СтруктураДанныхРаздел42.П000420042106;
			П000420042206 = Форма.СтруктураДанныхРаздел42.П000420042206;
			Форма.СтруктураДанныхРаздел42.П000420042306 = ? (П000420042106 <> 0, (П000420042206 / П000420042106) * 100, 0);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042603, ОбластьИмя) > 0 Тогда
			П000420042403 = Форма.СтруктураДанныхРаздел42.П000420042403;
			П000420042503 = Форма.СтруктураДанныхРаздел42.П000420042503;
			Форма.СтруктураДанныхРаздел42.П000420042603 = ? (П000420042403 <> 0, (П000420042503 / П000420042403) * 100, 0);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042604, ОбластьИмя) > 0 Тогда
			П000420042404 = Форма.СтруктураДанныхРаздел42.П000420042404;
			П000420042504 = Форма.СтруктураДанныхРаздел42.П000420042504;
			Форма.СтруктураДанныхРаздел42.П000420042604 = ? (П000420042404 <> 0, (П000420042504 / П000420042404) * 100, 0);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042605, ОбластьИмя) > 0 Тогда
			П000420042405 = Форма.СтруктураДанныхРаздел42.П000420042405;
			П000420042505 = Форма.СтруктураДанныхРаздел42.П000420042505;
			Форма.СтруктураДанныхРаздел42.П000420042605 = ? (П000420042405 <> 0, (П000420042505 / П000420042405) * 100, 0);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042606, ОбластьИмя) > 0 Тогда
			П000420042406 = Форма.СтруктураДанныхРаздел42.П000420042406;
			П000420042506 = Форма.СтруктураДанныхРаздел42.П000420042506;
			Форма.СтруктураДанныхРаздел42.П000420042606 = ? (П000420042406 <> 0, (П000420042506 / П000420042406) * 100, 0);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042903, ОбластьИмя) > 0 Тогда
			П000420042703 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел42.П000420042703);
			П000420042803 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел42.П000420042803);
			Форма.СтруктураДанныхРаздел42.П000420042903 = ? (П000420042703 <> 0, (П000420042803 / П000420042703) * 100, 0);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042904, ОбластьИмя) > 0 Тогда
			П000420042704 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел42.П000420042704);
			П000420042804 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел42.П000420042804);
			Форма.СтруктураДанныхРаздел42.П000420042904 = ? (П000420042704 <> 0, (П000420042804 / П000420042704) * 100, 0);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042905, ОбластьИмя) > 0 Тогда
			П000420042705 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел42.П000420042705);
			П000420042805 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел42.П000420042805);
			Форма.СтруктураДанныхРаздел42.П000420042905 = ? (П000420042705 <> 0, (П000420042805 / П000420042705) * 100, 0);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000420042906, ОбластьИмя) > 0 Тогда
			П000420042706 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел42.П000420042706);
			П000420042806 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел42.П000420042806);
			Форма.СтруктураДанныхРаздел42.П000420042906 = ? (П000420042706 <> 0, (П000420042806 / П000420042706) * 100, 0);
		КонецЕсли;
		
	ИначеЕсли ИмяТекущейСтраницыПанели = "Раздел43" Тогда
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000430043203, ОбластьИмя) > 0 Тогда
			П000430043003 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел43.П000430043003);
			П000430043103 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел43.П000430043103);
			Форма.СтруктураДанныхРаздел43.П000430043203 = ?(П000430043003 <> 0, (П000430043103 / П000430043003) * 100, 0);
		КонецЕсли;
	
	ИначеЕсли  ИмяТекущейСтраницыПанели = "Раздел50" Тогда
		
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000500053003, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел50.П000500053003 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел50.П000500051003)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел50.П000500052003);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьИмя) ИЛИ СтрЧислоВхождений(Форма.СтруктураЗависимыхЯчеекДляАвторасчета.П000500053004, ОбластьИмя) > 0 Тогда
			
			Форма.СтруктураДанныхРаздел50.П000500053004 = ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел50.П000500051004)
														- ОкруглитьЧислоПоФормату(Форма, Форма.СтруктураДанныхРаздел50.П000500052004);
		КонецЕсли;
		
	ИначеЕсли ИмяТекущейСтраницыПанели = "" Тогда
		
		РасчетВСтруктуреВсехРазделов(Форма, "Раздел30");
		РасчетВСтруктуреВсехРазделов(Форма, "Раздел41");
		РасчетВСтруктуреВсехРазделов(Форма, "Раздел42");
		РасчетВСтруктуреВсехРазделов(Форма, "Раздел43");
		РасчетВСтруктуреВсехРазделов(Форма, "Раздел50");
		РасчетВСтруктуреВсехРазделов(Форма, "Раздел12");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОкруглитьЧислоПоФормату(Форма, ИсходноеЧисло)
	
	Форма.СтруктураРеквизитовФормы.мДелитель = Форма.СоответствиеЕдиницыИзмеренияДелителю["Окр" + СтрЗаменить(Форма.СтруктураРеквизитовФормы.ЕдиницаИзмерения, " ", "")];
    	
	ОкругленноеЧисло = Окр(ИсходноеЧисло / Форма.СтруктураРеквизитовФормы.мДелитель, Форма.СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения) * Форма.СтруктураРеквизитовФормы.мДелитель; 

	Возврат ОкругленноеЧисло;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СуммаПоказателяПоВсемСтраницам(Форма, ИмяСтраницы, Показатель, Округлять, Условия = Неопределено)
	
	Результат = 0;
	
	МногостраничностьЕсть = РегламентированнаяОтчетностьКлиентСервер.ПолучитьСвойствоРаздела(Форма, ИмяСтраницы, "МногостраничностьВРазделе");
	
	Если НЕ МногостраничностьЕсть Тогда
		ДанныеТаблПоле = СобратьДанныеТекущегоТаблПоля(Форма, "ТабличныйДокумент");
		Если (Условия = Неопределено) ИЛИ ВыполняютсяУсловияЗаполнения(ДанныеТаблПоле, Условия) Тогда
			Результат = ДанныеТаблПоле.Показатель;	
		КонецЕсли;
		Возврат ?(Округлять, ОкруглитьЧислоПоФормату(Форма, Результат), Результат);
	Иначе
		ТаблицаРаздела = Неопределено;
		
		Форма.мСтруктураМногостраничныхРазделов.Свойство(ИмяСтраницы, ТаблицаРаздела);
		
		ТаблицаРаздела = Форма[ТаблицаРаздела];
		
		Если ТаблицаРаздела <> Неопределено Тогда
			Для Инд = 0 По ТаблицаРаздела.Количество() - 1 Цикл
				ДанныеТаблПоле = ТаблицаРаздела[Инд].Данные[0].Значение;
				Если ((Условия = Неопределено) ИЛИ ВыполняютсяУсловияЗаполнения(ДанныеТаблПоле, Условия)) И НЕ ДанныеТаблПоле = Неопределено Тогда
					Результат = Результат + ОкруглитьЧислоПоФормату(Форма, ДанныеТаблПоле[Показатель]);
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВыполняютсяУсловияЗаполнения(СтруктураДанных, Условия)
	
	Результат = Ложь;
	Для каждого Условие Из Условия Цикл
		Показатель = Условие.Ключ;
		ТребЗначение = Условие.Значение;
		ЗначениеПоказателя = СтруктураДанных[Показатель];
		Если ТребЗначение = Неопределено Тогда
			Результат = (ЗначениеПоказателя <> "");
		Иначе
			Результат = (ЗначениеПоказателя = ТребЗначение);
		КонецЕсли;
		Если НЕ Результат Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УдалитьДополнительнуюСтраницуНаСервере(ИмяТекущейСтраницыПанели = Неопределено)

	ИзменитьТаблицуПараметровАвтозаполненияНаСервере(-1, ИмяТекущейСтраницыПанели);
	РегламентированнаяОтчетность.УдалитьДополнительнуюСтраницуНаСервере(ЭтаФорма, ИмяТекущейСтраницыПанели);
	
	Если ТекущаяСтраницаПервая(ЭтаФорма, ИмяТекущейСтраницыПанели) Тогда
		ИзМакета = Ложь;
		ЗакраситьЖелтым(ЭтаФорма);
		УстановитьЦветФонаЯчейкиНаСервере(,,ИмяТекущейСтраницыПанели);
	Иначе    	
		ЗакраситьБелым(ЭтаФорма);
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура ВставитьДополнительнуюСтраницуИзменитьТаблицуПараметровАвтозаполненияНаСервере(Парам, Лист = Неопределено)
	
	ИзменитьТаблицуПараметровАвтозаполненияНаСервере(Парам, Лист);
	ВставитьДополнительнуюСтраницуНаСервере(Лист);
	
КонецПроцедуры		

&НаСервере
Процедура ИзменитьТаблицуПараметровАвтозаполненияНаСервере(Парам, Лист = Неопределено)
	
	ИзменитьТаблицуПараметровАвтозаполнения(ЭтаФорма, Парам, Лист);
	
	РегламентированнаяОтчетность.ПолучитьСведенияОПоказателяхОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьТаблицуПараметровАвтозаполнения(Форма, Парам, Лист = Неопределено)
	Перем МассивВариантовЗаполненияСтраниц;
	Перем ТаблицаВариантыЗаполнения;
	Перем ТаблицаСтраницРаздела;

	Если Лист = Неопределено Тогда
		ИмяТекущейСтраницыПанели = Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела;
	Иначе
		ИмяТекущейСтраницыПанели = Лист;
	КонецЕсли;

	Если Не Форма.мСтруктураВариантыЗаполнения.Свойство(ИмяТекущейСтраницыПанели, МассивВариантовЗаполненияСтраниц) Тогда
		Возврат;
	КонецЕсли;
	
	МассивВариантовЗаполненияСтраниц = Форма["ТаблицаВариантыЗаполнения" + ИмяТекущейСтраницыПанели];

	НомерТекущейСтраницы = 1;

	Если Форма.мСтруктураМногостраничныхРазделов.Свойство(ИмяТекущейСтраницыПанели, ТаблицаСтраницРаздела) Тогда
		
		ТаблицаСтраницРаздела = Форма[ТаблицаСтраницРаздела];
		
		СтрТаблицаСтраницы = ТаблицаСтраницРаздела.НайтиСтроки(Новый Структура("АктивнаяСтраница", Истина));
		Если СтрТаблицаСтраницы.Количество() > 0 Тогда
			СтрТаблицаСтраницы = СтрТаблицаСтраницы[0];
			НомерТекущейСтраницы = ТаблицаСтраницРаздела.Индекс(СтрТаблицаСтраницы) + 1;
		КонецЕсли;
	КонецЕсли;

	Если Парам = 1 Тогда

		#Если НаКлиенте Тогда
			НоваяТаблицаВариантыЗаполнения = РегламентированнаяОтчетностьКлиент.ПолучитьТаблицуВариантовЗаполненияНаКлиенте(Форма, ИмяТекущейСтраницыПанели, НЕ Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет, Форма.СтруктураРеквизитовФормы.мОписаниеТиповЧислоЕ);
		#Иначе
			НоваяТаблицаВариантыЗаполнения = РегламентированнаяОтчетностьВызовСервера.ПолучитьТаблицуВариантовЗаполненияНаСервере(Форма, ИмяТекущейСтраницыПанели, НЕ Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет, Форма.СтруктураРеквизитовФормы.мОписаниеТиповЧислоЕ);
		#КонецЕсли
		        		
		Если НоваяТаблицаВариантыЗаполнения <> Неопределено Тогда

			ТаблВариантов = МассивВариантовЗаполненияСтраниц.Добавить();	
			
			#Если НаКлиенте Тогда
				КопироватьДанныеФормы(НоваяТаблицаВариантыЗаполнения, ТаблВариантов.ТаблицаВариантовЗаполнения);
			#Иначе
				Если ТипЗнч(НоваяТаблицаВариантыЗаполнения) = Тип("ТаблицаЗначений") Тогда
					ТаблВариантов.ТаблицаВариантовЗаполнения.Загрузить(НоваяТаблицаВариантыЗаполнения);
				Иначе
					ТаблВариантов.ТаблицаВариантовЗаполнения.Загрузить(НоваяТаблицаВариантыЗаполнения.Выгрузить());
				КонецЕсли;
			#КонецЕсли
						
		КонецЕсли;

	Иначе

		Если МассивВариантовЗаполненияСтраниц.Количество() > 1 Тогда 
			МассивВариантовЗаполненияСтраниц.Удалить(НомерТекущейСтраницы - 1);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ВставитьДополнительнуюСтраницуНаСервере(ИмяТекущейСтраницыПанели = Неопределено)

	Перем ТаблицаСтраницРаздела;
	Перем СтруктураДанныхДопСтрокРаздела;

	Если ИмяТекущейСтраницыПанели = Неопределено Тогда
		ИмяТекущейСтраницыПанели = СтруктураРеквизитовФормы.НаимТекущегоРаздела;
	КонецЕсли;
			
	Если Не мСтруктураМногостраничныхРазделов.Свойство(ИмяТекущейСтраницыПанели, ТаблицаСтраницРаздела) Тогда
		Возврат;
	Иначе
		МаксКолвоЭкз = РегламентированнаяОтчетностьКлиентСервер.ПолучитьСвойствоРаздела(ЭтаФорма, ИмяТекущейСтраницыПанели, "МаксКолвоЭкз", 0);
		Если МаксКолвоЭкз <> 0 И ЭтаФорма[мСтруктураМногостраничныхРазделов[ИмяТекущейСтраницыПанели]].Количество() >= МаксКолвоЭкз Тогда
			ЗаголовокСтраницы = ИмяТекущейСтраницыПанели;
						
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В разделе ""%1"" максимальное количество экземпляров страниц равно %2.'"), ЗаголовокСтраницы, МаксКолвоЭкз);

			Сообщение.Сообщить();
			
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	ИмяТекТабличногоПоля     = "ТабличныйДокумент";
	ТекТабличноеПоле         = ЭтаФорма[ИмяТекТабличногоПоля];
		
	СохранитьДанныеМногостраничногоРазделаВактивнойСтраницеНаСервере(ИмяТекущейСтраницыПанели);
	
	ТаблицаСтраницРаздела = ЭтаФорма[ТаблицаСтраницРаздела];
	
	СтрТаблицаСтраницы = ТаблицаСтраницРаздела.НайтиСтроки(Новый Структура ("АктивнаяСтраница", Истина));
	
	Если СтрТаблицаСтраницы.Количество() > 0 Тогда

		СтрТаблицаСтраницы = СтрТаблицаСтраницы[0];
		
		СтрТаблицаСтраницы.АктивнаяСтраница = Ложь;
        		
	КонецЕсли;
	
	СтрНоваяСтраница = ТаблицаСтраницРаздела.Добавить();
	
	СтрНоваяСтраница.Представление = "Новая страница";
	СтрНоваяСтраница.АвтоматическоеПредставление = Истина;
	
	СтрНоваяСтраница.АктивнаяСтраница = Истина;
	
	ПослеДобавленияДопСтрНаСервере(ИмяТекТабличногоПоля, ИмяТекущейСтраницыПанели);
	
	Модифицированность = Истина;
		
КонецПроцедуры

&НаСервере
Процедура ПослеДобавленияДопСтрНаСервере(ИмяТекТабличногоПоля, ИмяТекущейСтраницыПанели)
	
	ОчиститьТабличноеПолеНаСервере(ИмяТекущейСтраницыПанели);
		
	СохранитьДанныеМногостраничногоРазделаВактивнойСтраницеНаСервере(ИмяТекущейСтраницыПанели);
	
	ПослеВставкиДополнительнойСтраницыНаСервере(ИмяТекущейСтраницыПанели);
	
КонецПроцедуры

&НаСервере
Процедура ПослеВставкиДополнительнойСтраницыНаСервере(ИмяТекущейСтраницыПанели)
	
	Если ИмяТекущейСтраницыПанели = "Раздел12" Тогда
		РасчетВСтруктуреНаСервере("Раздел12");
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПослеВставкиДополнительнойСтраницыНаСервере(ЭтаФорма, ИмяТекущейСтраницыПанели);
		
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеМногостраничногоРазделаВактивнойСтраницеНаСервере(ИмяТекущейСтраницыПанели)
	
	РегламентированнаяОтчетностьКлиентСервер.СохранитьДанныеМногостраничногоРазделаВактивнойСтранице(ЭтаФорма, ИмяТекущейСтраницыПанели, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТабличноеПолеНаКлиенте(ВыбТабличноеПолеИмя) Экспорт

	ОчиститьТабличноеПоле(ЭтаФорма, ВыбТабличноеПолеИмя);

КонецПроцедуры

&НаСервере
Процедура ОчиститьТабличноеПолеНаСервере(ВыбТабличноеПолеИмя) Экспорт

	ОчиститьТабличноеПоле(ЭтаФорма, ВыбТабличноеПолеИмя);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОчиститьТабличноеПоле(Форма, ВыбТабличноеПолеИмя)

	РегламентированнаяОтчетностьКлиентСервер.ОчиститьТабличноеПоле(Форма, ВыбТабличноеПолеИмя);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуНаСервере(КолонкаРазделыОтчетаСокрНаим)
	
	ВставитьДополнительнуюСтроку(ЭтаФорма, КолонкаРазделыОтчетаСокрНаим);
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуНаКлиенте(КолонкаРазделыОтчетаСокрНаим)
	
	ВставитьДополнительнуюСтроку(ЭтаФорма, КолонкаРазделыОтчетаСокрНаим);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВставитьДополнительнуюСтроку(Форма, ТекущаяСтраница)
	Перем СтруктураГруппы;
	Перем МаксимальноеКоличествоСтрокГруппы;

	#Если НаКлиенте Тогда
		ИмяГруппы = Форма.ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаКлиенте(ТекущаяСтраница);
	#Иначе
		ИмяГруппы = Форма.ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ТекущаяСтраница);
	#КонецЕсли
		
	Если ИмяГруппы = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю;
			
		Сообщение.Текст = НСтр("ru='Не выбран многострочный раздел, в который необходимо добавить строку.'");
			
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;

	Форма.мСтруктураИсхКолвоСтрокРазделов.Свойство(ИмяГруппы, МаксимальноеКоличествоСтрокГруппы);
    	
	ТекТабличноеПолеИмя = "ТабличныйДокумент";
	
	ТекТабличноеПоле = Форма[ТекТабличноеПолеИмя];
		
	Форма.мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы);
	
	СтруктураГруппы = Форма[СтруктураГруппы];

	КолСтрок = СтруктураГруппы.Количество();
	КолСтрокСтр = Формат(КолСтрок, "ЧГ=0");
	КолСтрокСтр1 = Формат(КолСтрок + 1, "ЧГ=0");
	ИмяПервойЯчейкиПоследнейСтроки = ИмяГруппы + "01_" + КолСтрокСтр;

	ОбластьЯчейки = ТекТабличноеПоле.Области[ИмяПервойЯчейкиПоследнейСтроки];

	НомерВерхЯчейкиОбласти = ОбластьЯчейки.Верх;
	НомерНижнЯчейкиОбласти = ОбластьЯчейки.Низ;
	СдвигСтрок = НомерНижнЯчейкиОбласти - НомерВерхЯчейкиОбласти + 1;

	НомерВерхЯчейкиНовойОбласти = НомерВерхЯчейкиОбласти + СдвигСтрок;
	НомерНижнЯчейкиНовойОбласти = НомерНижнЯчейкиОбласти + СдвигСтрок;

	РегламентированнаяОтчетностьВызовСервера.СпециальногоДобавленияСтроки(ТекТабличноеПоле, ТекТабличноеПолеИмя, ИмяГруппы, НомерВерхЯчейкиОбласти, НомерНижнЯчейкиОбласти);
	
	Форма[ТекТабличноеПолеИмя] = ТекТабличноеПоле;
	
	Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
		
		ИмяКолонки = ИмяГруппы + Формат(НомерГрафы, "ЧЦ=2; ЧВН=");
		
		Если СтруктураГруппы[0].Свойство(ИмяКолонки) Тогда
			
			ИмяОбластиЯчейки    = ИмяКолонки + "_" + КолСтрокСтр;
			ИмяНовОбластиЯчейки = ИмяКолонки + "_" + КолСтрокСтр1;
			
			ОбластьЯчейки = ТекТабличноеПоле.Области[ИмяОбластиЯчейки];
			ОбластьЯчейки.Имя = ИмяНовОбластиЯчейки;
			
			Если Прав(ИмяКолонки, 2) = "01" Тогда
				ТекТабличноеПоле.Области["УдалитьСтроку" + ИмяОбластиЯчейки].Имя = "УдалитьСтроку" + ИмяНовОбластиЯчейки;
			КонецЕсли;
			
			НомерВерхСтрокиЯчейки  = ОбластьЯчейки.Верх - СдвигСтрок;
			НомерНижнСтрокиЯчейки  = ОбластьЯчейки.Низ  - СдвигСтрок;
			
			НомерЛевоКолонкиЯчейки = ОбластьЯчейки.Лево;
			НомерПравКолонкиЯчейки = ОбластьЯчейки.Право;
			
			ОбластьЯчейкиИсходнойОбласти = ТекТабличноеПоле.Область(НомерВерхСтрокиЯчейки, НомерЛевоКолонкиЯчейки, НомерНижнСтрокиЯчейки, НомерПравКолонкиЯчейки);
			ОбластьЯчейкиИсходнойОбласти.Имя = ИмяОбластиЯчейки;
			
			Если Прав(ИмяКолонки, 2) = "01" Тогда
				ТекТабличноеПоле.Область(НомерВерхСтрокиЯчейки, НомерЛевоКолонкиЯчейки - 1, НомерНижнСтрокиЯчейки, НомерПравКолонкиЯчейки - 1).Имя  = "УдалитьСтроку" + ИмяОбластиЯчейки;
			КонецЕсли;
			
			Если ОбластьЯчейки.СодержитЗначение = Истина Тогда
				ОбластьЯчейки.Очистить();
			Иначе
				ИсходныйНомер        = Число("0" + ОбластьЯчейки.Текст);
				НовыйПорядковыйНомер = ИсходныйНомер + 1;
				
				ОбластьЯчейки.Текст  = ? (НЕ НовыйПорядковыйНомер > МаксимальноеКоличествоСтрокГруппы, Строка(НовыйПорядковыйНомер), "");
				
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;

	ИмяТекущейОбласти = ИмяГруппы + "01_" + КолСтрокСтр1;

	Форма.Элементы[ТекТабличноеПолеИмя].ТекущаяОбласть = ТекТабличноеПоле.Области[ИмяТекущейОбласти];

	Форма.ТекущийЭлемент = Форма.Элементы[ТекТабличноеПолеИмя];

	СтруктураГруппы.Добавить();

	Для Каждого ОбластьТД Из ТекТабличноеПоле.Области Цикл
		Если СтрЧислоВхождений(ОбластьТД.Имя, "УдалитьСтроку") > 0 Тогда
			ОбластьТД.Гиперссылка = Истина;
			ОбластьТД.Текст = "х";
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;

КонецПроцедуры

&НаСервере
Процедура УдалитьДополнительнуюСтрокуНаСервере()
	
	УдалитьДополнительнуюСтроку(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДополнительнуюСтрокуНаКлиенте()
	
	УдалитьДополнительнуюСтроку(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УдалитьДополнительнуюСтроку(Форма, СпециальноеДобавление = Ложь, ИмяКолонкиНомера = Неопределено)
	Перем ИсходноеКоличествоСтрокГруппы;
	Перем СтруктураГруппы;
    	
	ТекущаяСтраница = Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела;
	ТекТабличноеПоле = Форма.ТабличныйДокумент;

	ТекущаяОбласть = Форма.Элементы["ТабличныйДокумент"].ТекущаяОбласть;
	
	#Если НаКлиенте ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда
		ИмяГруппы = РегламентированнаяОтчетностьКлиент.РазделТекущейОбласти(Форма, ТекущаяОбласть);
	#Иначе
		ИмяГруппы = РегламентированнаяОтчетностьВызовСервера.РазделТекущейОбластиНаСервере(Форма, ТекущаяОбласть);
	#КонецЕсли

	Форма.мСтруктураИсхКолвоСтрокРазделов.Свойство(ИмяГруппы, ИсходноеКоличествоСтрокГруппы);

	ТекТабличноеПолеИмя = "ТабличныйДокумент";
	
	ТекТабличноеПоле = Форма[ТекТабличноеПолеИмя];
	
	Форма.мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы);
	
	СтруктураГруппы = Форма[СтруктураГруппы];

	ТекущаяОбласть = Форма.Элементы["ТабличныйДокумент"].ТекущаяОбласть;
	ИмяЯчейки = ТекущаяОбласть.Имя;

	НомУдаляемойСтроки = Число(Сред(ИмяЯчейки, СтрНайти(ИмяЯчейки, "_") + 1));
	НомерСтрокиТаблицы = НомУдаляемойСтроки - 1;

	Если СтруктураГруппы.Количество() > ИсходноеКоличествоСтрокГруппы Тогда
				
		ИмяПервойЯчейкиУдаляемойСтроки = "УдалитьСтроку" + ИмяГруппы + "01_" + Формат(НомУдаляемойСтроки, "ЧГ=0");

		ОбластьЯчейки = ТекТабличноеПоле.Области[ИмяПервойЯчейкиУдаляемойСтроки];

		НастройкиМнгЧ = РегламентированнаяОтчетностьКлиентСервер.ПолучитьСвойствоРаздела(Форма, ТекущаяСтраница, "МногострочностьВРазделе").НайтиСтроки(Новый Структура("ИдГруппы", ИмяГруппы))[0];
		ВысотаСтроки = НастройкиМнгЧ.ВысотаСтроки;
		
		НомерВерхЯчейкиОбласти = ОбластьЯчейки.Верх;
		НомерНижнЯчейкиОбласти = ОбластьЯчейки.Верх + ВысотаСтроки - 1;
		
		МногострочностьВРазделе = РегламентированнаяОтчетностьКлиентСервер.ПолучитьСвойствоРаздела(Форма, ТекущаяСтраница, "МногострочностьВРазделе");
		МногострочностьВРазделеТип = ТипЗнч(МногострочностьВРазделе);
		Если МногострочностьВРазделеТип = Тип("Число") Тогда
			ИмяОбластиМнгЧ = "МногострочнаяЧасть";
		ИначеЕсли МногострочностьВРазделеТип = Тип("ДанныеФормыКоллекция") Тогда
			ИмяОбластиМнгЧ = МногострочностьВРазделе.НайтиСтроки(Новый Структура("ИдГруппы", ИмяГруппы))[0].Область;
		КонецЕсли;

		Если ТекТабличноеПоле.Области.Найти(ИмяОбластиМнгЧ) <> Неопределено Тогда
			ОбластьВерх = ТекТабличноеПоле.Области[ИмяОбластиМнгЧ].Верх;
			ОбластьНиз = ТекТабличноеПоле.Области[ИмяОбластиМнгЧ].Низ;
		КонецЕсли;

		Если СпециальноеДобавление Тогда
			
		Иначе
			
			РегламентированнаяОтчетностьВызовСервера.УдалитьОбластьИзТабличногоДокумента(ТекТабличноеПоле, НомерВерхЯчейкиОбласти, НомерНижнЯчейкиОбласти);
		
			Форма[ТекТабличноеПолеИмя] = ТекТабличноеПоле;
			
		КонецЕсли;
		
		ТекТабличноеПоле.Область(ОбластьВерх, 0, ОбластьНиз, 0).Имя = ИмяОбластиМнгЧ;

		КолвоСдвигаемыхСтрок = СтруктураГруппы.Количество() - НомУдаляемойСтроки;

		Если КолвоСдвигаемыхСтрок > 0 Тогда
			
			Для НСтр = НомУдаляемойСтроки + 1 По СтруктураГруппы.Количество() Цикл
				
				ТекСтрока = СтруктураГруппы[НСтр - 1];
				
				НСтрСтр = Формат(НСтр, "ЧГ=0");
				НСтрСтр1 = Формат(НСтр - 1, "ЧГ=0");
				
				Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
					
					Если НомерГрафы = 1 Тогда
						
						КолонкаИмя = "УдалитьСтроку" + ИмяГруппы + Формат(1, "ЧЦ=2; ЧВН=");
												
						ИмяСдвинутойЯчейки = КолонкаИмя + "_" + НСтрСтр;
						НовоеИмяСдвинутойЯчейки = КолонкаИмя + "_" + НСтрСтр1;
						
						ОбластьСдвинутойЯчейки = ТекТабличноеПоле.Области[ИмяСдвинутойЯчейки];
						ОбластьСдвинутойЯчейки.Имя = НовоеИмяСдвинутойЯчейки;
						
						Если ИмяКолонкиНомера <> Неопределено Тогда
							Если ИмяКолонкиНомера = КолонкаИмя Тогда
								// обновляем порядковый номер строки
								
								СтарыйНомер = Число(ТекСтрока[КолонкаИмя]);
								НовыйПорядковыйНомер = Строка(Макс(СтарыйНомер - 1, 0));
								ОбластьСдвинутойЯчейки.Текст = НовыйПорядковыйНомер;
								
								// обновляем значение элемента таблицы значений
								ТекСтрока[КолонкаИмя] = НовыйПорядковыйНомер;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
					КолонкаИмя = ИмяГруппы + Формат(НомерГрафы, "ЧЦ=2; ЧВН=");
					
					Если СтруктураГруппы[0].Свойство(КолонкаИмя) Тогда
						
						ИмяСдвинутойЯчейки = КолонкаИмя + "_" + НСтрСтр;
						НовоеИмяСдвинутойЯчейки = КолонкаИмя + "_" + НСтрСтр1;
						
						ОбластьСдвинутойЯчейки = ТекТабличноеПоле.Области[ИмяСдвинутойЯчейки];
						ОбластьСдвинутойЯчейки.Имя = НовоеИмяСдвинутойЯчейки;
						
						Если ИмяКолонкиНомера <> Неопределено Тогда
							Если ИмяКолонкиНомера = КолонкаИмя Тогда
								
								СтарыйНомер = Число(ТекСтрока[КолонкаИмя]);
								НовыйПорядковыйНомер = Строка(Макс(СтарыйНомер - 1, 0));
								ОбластьСдвинутойЯчейки.Текст = НовыйПорядковыйНомер;
								
								ТекСтрока[КолонкаИмя] = НовыйПорядковыйНомер;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
		КонецЕсли;

		СтруктураГруппы.Удалить(НомерСтрокиТаблицы);

	Иначе
		СтруктураГруппы.Удалить(НомерСтрокиТаблицы);

		ДобавляемаяСтрока = СтруктураГруппы.Добавить();

		Для Каждого СтрокаТаблицы Из СтруктураГруппы Цикл
			НомерСтрокиВТаблице = СтруктураГруппы.Индекс(СтрокаТаблицы);
			НомерСтрокиВФормеТаблицы = Формат(НомерСтрокиВТаблице + 1, "ЧГ=0");
			
			Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
				
				КолонкаТаблицыИмя = ИмяГруппы + Формат(НомерГрафы, "ЧЦ=2; ЧВН=");
				
				Если СтруктураГруппы[0].Свойство(КолонкаТаблицыИмя) Тогда
					
					Если ИмяКолонкиНомера <> Неопределено Тогда
						Если ИмяКолонкиНомера = КолонкаТаблицыИмя Тогда
							СтрокаТаблицы[КолонкаТаблицыИмя] = НомерСтрокиВФормеТаблицы;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;	
				
			КонецЦикла;
			
		КонецЦикла;

		#Если НаКлиенте Тогда
			Форма.ВывестиРазделВТабличныйДокументНаКлиенте(ИмяГруппы, СтруктураГруппы);
		#Иначе
			Форма.ВывестиРазделВТабличныйДокументНаСервере(ИмяГруппы, СтруктураГруппы);
		#КонецЕсли
		
	КонецЕсли;

	НомТекущейСтроки = Мин(НомУдаляемойСтроки, СтруктураГруппы.Количество());
	ИмяТекущейОбласти = ИмяГруппы + "01_" + Формат(НомТекущейСтроки, "ЧГ=0");

	Форма.Элементы[ТекТабличноеПолеИмя].ТекущаяОбласть = ТекТабличноеПоле.Области[ИмяТекущейОбласти];

	ТекущийЭлемент = Форма.Элементы[ТекТабличноеПолеИмя];

	ЕстьДопСтроки = Ложь;
	
	Для Каждого ОбластьТД Из ТекТабличноеПоле.Области Цикл
		Если СтрЧислоВхождений(ОбластьТД.Имя, "_2") > 0 Тогда
			ЕстьДопСтроки = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЕстьДопСтроки Тогда
		Для Каждого ОбластьТД Из ТекТабличноеПоле.Области Цикл
			Если СтрЧислоВхождений(ОбластьТД.Имя, "УдалитьСтроку") > 0 Тогда
				ОбластьТД.Гиперссылка = Ложь;
				ОбластьТД.Текст = "";
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
		
	#Если НаКлиенте Тогда
		Форма.РасчетНаКлиенте("Раздел41");
	#Иначе
		Форма.РасчетНаСервере("Раздел41");
	#КонецЕсли
              
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере()
	
	СтруктураДанныхРаздел30.Очистить();
	СтруктураДанныхРаздел41.Очистить();
	СтруктураДанныхРаздел42.Очистить();
	СтруктураДанныхРаздел43.Очистить();
	СтруктураДанныхРаздел50.Очистить();
		
	ТаблицаСтраницыРазделаРаздел12.Очистить();
	
	СтрПерваяСтраница = ЭтаФорма.ТаблицаСтраницыРазделаРаздел12.Добавить();
	СтрПерваяСтраница.Представление               = "Новая страница";
	СтрПерваяСтраница.АктивнаяСтраница            = Истина;
	СтрПерваяСтраница.АвтоматическоеПредставление = Истина;
    	
	Для Каждого мнгРаздел Из мСтруктураМногострочныхРазделов Цикл
		ЭтаФорма[мнгРаздел.Ключ].Очистить();
	КонецЦикла;
	
	НачальныеОперацииСМногострочнымиБлоками();
	
	ЗаполнитьПустыеСтруктурыДанных();
	
	Если НЕ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		ОчиститьТабличноеПолеНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		РасчетНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	КонецЕсли;
		
	ВывестиМакетСтраницыВТабличныйДокументНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела, 1);
		
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
		
	РегламентированнаяОтчетностьКлиентСервер.ОчиститьВариантыЗаполнения(ЭтаФорма);
	
	РегламентированнаяОтчетность.ПолучитьСведенияОПоказателяхОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(ВыполняемоеОповещение = Неопределено) Экспорт
	
	РегламентированнаяОтчетностьКлиент.Очистить(ЭтаФорма, ВыполняемоеОповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСменыЕдИзмеренияИТочности()
	
	ПроверитьТочность();
	
	УстановитьФорматВыводаВПоляхВводаИРассчитатьНаСервере();
	
	Модифицированность = Истина;
	
    ИзменитьФорматОтображенияНуля();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФорматВыводаВПоляхВводаИРассчитатьНаСервере()
	
	УстановитьФорматВыводаВПоляхВводаНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	РасчетНаСервере();
		
КонецПроцедуры

&НаСервере
Процедура УстановитьФорматВыводаВПоляхВводаНаСервере(НаимРаздела)
	
	УстановитьФорматВыводаВПоляхВвода(ЭтаФорма, НаимРаздела);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьТочность()
	
	Если СтруктураРеквизитовФормы.ЕдиницаИзмерения = ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1 Тогда

		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения > 2 Тогда
									
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1: при выводе сумм в рублях точность не может превышать 2 знака'"), ЭтаФорма.Заголовок);

			Сообщение.Сообщить();
			
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 2;
			
		КонецЕсли;

	ИначеЕсли СтруктураРеквизитовФормы.ЕдиницаИзмерения = ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1000 Тогда

		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения > 3 Тогда
			
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1: при выводе сумм в тысячах рублей точность не может превышать 3 знака'"), ЭтаФорма.Заголовок);

			Сообщение.Сообщить();
			
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 3;
			
		КонецЕсли;

	ИначеЕсли СтруктураРеквизитовФормы.ЕдиницаИзмерения = ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1000000 Тогда

		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения > 6 Тогда
						
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1: при выводе сумм в миллионах рублей точность не может превышать 6 знаков'"), ЭтаФорма.Заголовок);

			Сообщение.Сообщить();
			
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 6;
			
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьФорматВыводаВПоляхВвода(Форма, НаимРаздела)
	Перем СтруктураГруппы;
    	
	Если Форма.СтруктураРеквизитовФормы.ЕдиницаИзмерения = Форма.ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1 Тогда
		Форма.СтруктураРеквизитовФормы.мСтрокаФормата = "ЧЦ = 17; ЧДЦ = " + Форма.СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧС = 0";
	ИначеЕсли Форма.СтруктураРеквизитовФормы.ЕдиницаИзмерения = Форма.ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1000 Тогда
		Форма.СтруктураРеквизитовФормы.мСтрокаФормата = "ЧЦ = 17; ЧДЦ = " + Форма.СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧС = 3";
	ИначеЕсли Форма.СтруктураРеквизитовФормы.ЕдиницаИзмерения = Форма.ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1000000 Тогда
		Форма.СтруктураРеквизитовФормы.мСтрокаФормата = "ЧЦ = 17; ЧДЦ = " + Форма.СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧС = 6";
	КонецЕсли;

	ИмяПоляТаблДокументаСтароеЗначение = "";
	Для Каждого СтрПоказатели Из Форма.мТаблицаСоставПоказателей Цикл

		ИмяПоляТаблДокумента		= СокрП(СтрПоказатели.ИмяПоляТаблДокумента);
		КодПоказателя				= СокрП(СтрПоказатели.КодПоказателяПоСоставу);
		ПризнМногострочность		= СокрП(СтрПоказатели.ПризнМногострочности);
		КодПоказателяПоСтруктуре	= СокрП(СтрПоказатели.КодПоказателяПоСтруктуре);
		КодПоказателяПоФорме		= СокрП(СтрПоказатели.КодПоказателяПоФорме);
		ТипДанныхПоказателя			= СокрП(СтрПоказатели.ТипДанныхПоказателя);
		ИмяПоказателя				= ?(ПустаяСтрока(СтрПоказатели.КодПоказателяПоФорме), КодПоказателя, КодПоказателяПоФорме);

		Если НаимРаздела <> ИмяПоляТаблДокумента Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(КодПоказателя) ИЛИ КодПоказателя = "===" ИЛИ КодПоказателя = "###" ИЛИ Лев(КодПоказателя, 2) = "//" Тогда
			Продолжить;
		КонецЕсли;

		Если ТипДанныхПоказателя = "Е" И ПустаяСтрока(КодПоказателяПоСтруктуре) Тогда
			ТекТабличноеПоле = Форма["ТабличныйДокумент"];
			Если ПризнМногострочность <> "/" Тогда
				ФорматируемаяОбласть = ТекТабличноеПоле.Области[ИмяПоказателя];
				ДопустимыйЗнакПоказателя = ФорматируемаяОбласть.ТипЗначения.КвалификаторыЧисла.ДопустимыйЗнак;
				ЧислоЕЗнак = Форма.СтруктураРеквизитовФормы.мОписаниеТиповЧислоЕ;
				Если ДопустимыйЗнакПоказателя = ДопустимыйЗнак.Неотрицательный Тогда
					ЧислоЕЗнак = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(ЧислоЕЗнак.КвалификаторыЧисла.Разрядность,ЧислоЕЗнак.КвалификаторыЧисла.РазрядностьДробнойЧасти, ДопустимыйЗнакПоказателя));
				КонецЕсли;
				ФорматируемаяОбласть.ТипЗначения = ЧислоЕЗнак;
				ФорматируемаяОбласть.Формат = Форма.СтруктураРеквизитовФормы.мСтрокаФормата;
			Иначе
				НСтр = 1;
				Пока ТекТабличноеПоле.Области.Найти(ИмяПоказателя + "_" + Формат(НСтр, "ЧГ=0")) <> Неопределено Цикл
					ФорматируемаяОбласть = ТекТабличноеПоле.Области[ИмяПоказателя + "_" + Формат(НСтр, "ЧГ=0")];
					ДопустимыйЗнакПоказателя = ФорматируемаяОбласть.ТипЗначения.КвалификаторыЧисла.ДопустимыйЗнак;
					ЧислоЕЗнак = Форма.СтруктураРеквизитовФормы.мОписаниеТиповЧислоЕ;
					Если ДопустимыйЗнакПоказателя = ДопустимыйЗнак.Неотрицательный Тогда
						ЧислоЕЗнак = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(ЧислоЕЗнак.КвалификаторыЧисла.Разрядность,ЧислоЕЗнак.КвалификаторыЧисла.РазрядностьДробнойЧасти, ДопустимыйЗнакПоказателя));
					КонецЕсли;
					ФорматируемаяОбласть.ТипЗначения = ЧислоЕЗнак;
					ФорматируемаяОбласть.Формат = Форма.СтруктураРеквизитовФормы.мСтрокаФормата;
					НСтр = НСтр + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ИмяПоляТаблДокументаСтароеЗначение = ИмяПоляТаблДокумента;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраниц(ВариантВыбора)
    Перем ТекущийРазделОтчетаСокрНаим;
	Перем НомерСтраницыРазделаОтчета;
	
	Если НЕ Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		ТекущийРазделОтчетаСокрНаим = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
		НомерСтраницыРазделаОтчета  = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета;
	КонецЕсли;
	
	мПараметры = Новый Структура;
	мПараметры.Вставить("ПроверкаСоотношений", Ложь);
	мПараметры.Вставить("РазрешитьВстроеннуюПечать", Ложь);
	мПараметры.Вставить("Автосохранение", Ложь);
	мПараметры.Вставить("СчетчикСтраниц", Истина);
	мПараметры.Вставить("Выгрузка", Ложь);
	мПараметры.Вставить("ИмеетсяРеквизитДеревоВыбранныхСтраниц", Истина);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФлажокОтклАвтоРасчет", СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
	ПараметрыФормы.Вставить("мСчетчикСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);
	ПараметрыФормы.Вставить("мАвтоВыборКодов", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	ПараметрыФормы.Вставить("мИнтервалАвтосохранения", СтруктураРеквизитовФормы.мИнтервалАвтосохранения);
	ПараметрыФормы.Вставить("ЕдиницаИзмерения", СтруктураРеквизитовФормы.ЕдиницаИзмерения);
	ПараметрыФормы.Вставить("ТочностьЕдиницыИзмерения", СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения);
	ПараметрыФормы.Вставить("мПараметры", мПараметры);
					
	ФормаНастройкиОтчета = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("НастройкиОтчета", ПараметрыФормы, ЭтаФорма);
    
	мДеревоВыбранныхСтраниц.ПолучитьЭлементы().Очистить();
    
	КопироватьДанныеФормы(мДеревоСтраницОтчета, ФормаНастройкиОтчета.Дерево);
	
	ЗначениеАвторасчета = СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет;
	ЗначениеЕдИзм       = СтруктураРеквизитовФормы.ЕдиницаИзмерения;
	ЗначениеЗпт         = СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения;
	
	ДополнительныеПараметры = Новый Структура("ЗначениеАвторасчета, ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим", ЗначениеАвторасчета, ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуВыбораСтраницЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ФормаНастройкиОтчета.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	ФормаНастройкиОтчета.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаНастройкиОтчета.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраницЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ЗначениеАвторасчета = ДополнительныеПараметры.ЗначениеАвторасчета;
	ЗначениеЕдИзм = ДополнительныеПараметры.ЗначениеЕдИзм;
	ЗначениеЗпт = ДополнительныеПараметры.ЗначениеЗпт;
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	
	Модифицированность = Истина;
	
	флЗначенияИдентичны = Истина;
	
	Для Индекс = 0 По мДеревоСтраницОтчета.ПолучитьЭлементы().Количество() - 1 Цикл
		
		Если НЕ мДеревоСтраницОтчета.ПолучитьЭлементы()[Индекс].ПоказатьСтраницу = мДеревоВыбранныхСтраниц.ПолучитьЭлементы()[Индекс].ПоказатьСтраницу Тогда
			флЗначенияИдентичны = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеАвторасчета <> СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
		
		#Если ВебКлиент Тогда
			
			ИзменитьТаблицуВариантовЗаполненияНаСервере();
			
		#Иначе
			
			Если ТекущийРазделОтчетаСокрНаим = "Раздел12" Тогда
				Если ТекущаяСтраницаПервая(ЭтаФорма, "Раздел12") Тогда
					ИзМакета = Ложь;
					
					УстановитьЦветФонаЯчейкиНаКлиенте(,,"Раздел12");
				КонецЕсли;
			КонецЕсли;
			
			РегламентированнаяОтчетностьКлиентСервер.ИзменитьТаблицуВариантовЗаполнения(ЭтаФорма, НЕ СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
			
			Если ТекущийРазделОтчетаСокрНаим = "Раздел12" Тогда
				Если НЕ ТекущаяСтраницаПервая(ЭтаФорма, "Раздел12") Тогда
					ЗакраситьБелым(ЭтаФорма);
				КонецЕсли;
			КонецЕсли;	
			
		#КонецЕсли
		
	КонецЕсли;
	
	Если ЗначениеЕдИзм <> СтруктураРеквизитовФормы.ЕдиницаИзмерения
		ИЛИ ЗначениеЗпт <> СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения Тогда
		ПослеСменыЕдИзмеренияИТочности();
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПоказатьСтраницыОтчетаНаКлиенте(ЭтаФорма);
	
	Если НЕ флЗначенияИдентичны Тогда
		
		СформироватьДеревоРазделовОтчетаНаКлиенте();
		
		Если НЕ ТекущийРазделОтчетаСокрНаим = Неопределено Тогда
			
			НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(РазделыОтчета.ПолучитьЭлементы(), "КолонкаРазделыОтчетаСокрНаим", ТекущийРазделОтчетаСокрНаим);
			
			Если НЕ НайденнаяСтрока = Неопределено 
				И НЕ НомерСтраницыРазделаОтчета = Неопределено 
				И НайденнаяСтрока.ПолучитьЭлементы().Количество() > 0 Тогда
				
				НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(НайденнаяСтрока.ПолучитьЭлементы(), "КолонкаНомерСтраницыРазделаОтчета", НомерСтраницыРазделаОтчета);
				
			КонецЕсли;
			
			Если НЕ НайденнаяСтрока = Неопределено Тогда
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ИзменитьТаблицуВариантовЗаполненияНаСервере()
	
	ИмяТекущегоРаздела = СтруктураРеквизитовФормы.НаимТекущегоРаздела;
	
	Если ИмяТекущегоРаздела = "Раздел12" Тогда
		Если ТекущаяСтраницаПервая(ЭтаФорма, "Раздел12") Тогда
			ИзМакета = Ложь;
			
			УстановитьЦветФонаЯчейкиНаСервере(,,"Раздел12");
		КонецЕсли;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиентСервер.ИзменитьТаблицуВариантовЗаполнения(ЭтаФорма, НЕ СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
	
	Если ИмяТекущегоРаздела = "Раздел12" Тогда
		Если НЕ ТекущаяСтраницаПервая(ЭтаФорма, "Раздел12") Тогда
			ЗакраситьБелым(ЭтаФорма);
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
			
	РегламентированнаяОтчетность.ПриЗакрытииРегламентированногоОтчета(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчет()
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьОтчетЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтаФорма);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.СформироватьИЗаписать(СпДокОсн);
	
КонецПроцедуры

&НаКлиенте
Функция УниверсальнаяВыгрузка(ТекстВыгрузки = Неопределено, ПроверятьБлокировки = Истина, ВыгружатьСОшибками = Ложь) Экспорт
	
	Перем ПараметрыВыгрузки;
	
	Если Модифицированность Тогда
		ТекстЗаголовка = ЗаголовокРегламентированногоОтчета(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		ОргСтр = " (" + СтруктураРеквизитовФормы.Организация + ")";
		Если СтрНайти(ТекстЗаголовка, ОргСтр) = 0 Тогда
			ТекстЗаголовка = ТекстЗаголовка + ОргСтр;
		КонецЕсли;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Отчет """ + ТекстЗаголовка + """ не сохранен.";
		Сообщение.Сообщить();
		
		Возврат Ложь;
	КонецЕсли;
	
	Если Открыта() Тогда
		Если СтруктураРеквизитовФормы.ЕдиницаИзмерения <> ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1 Тогда
			
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = НСтр("ru='Перед выгрузкой необходимо установить единицу измерения ""в рублях"".'");

			Сообщение.Сообщить();
			
			Возврат Ложь;
			
		КонецЕсли;
		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения <> 0 Тогда
			
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = НСтр("ru='Перед выгрузкой необходимо установить точность ""0"".'");

			Сообщение.Сообщить();
			
			Возврат Ложь;
			
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ УниверсальнаяВыгрузкаНаСервере(ТекстВыгрузки, ПараметрыВыгрузки, ВыгружатьСОшибками) Тогда
		Возврат Ложь;
	КонецЕсли;
	        	
	Возврат Истина;
		
КонецФункции

&НаСервере
Функция УниверсальнаяВыгрузкаНаСервере(ТекстВыгрузки, ПараметрыВыгрузки, ВыгружатьСОшибками = Ложь)
	
	СформироватьСтруктуруПоказателей();
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	ДеревоВыгрузки = ИзвлечьСтруктуруXML();
			
	ВыгрузкаВозможна = ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки);
	
	Если НЕ ВыгружатьСОшибками
	   И НЕ ВыгрузкаВозможна Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗаполнитьДанными(ДеревоВыгрузки, ПараметрыВыгрузки);
		
	ВыгрузкаВозможна = РегламентированнаяОтчетность.ПроверитьДанные(ЭтаФорма, ДеревоВыгрузки);
	
	Если НЕ ВыгружатьСОшибками
	   И НЕ ВыгрузкаВозможна Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстВыгрузки = ВыгрузитьДеревоВXML(ДеревоВыгрузки, ПараметрыВыгрузки);
		
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция СформироватьСтруктуруПоказателей()
	
	мДанныеОтчета = Новый Структура;
	
	СохрСтруктура = СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета.Получить();
	ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
	Для Каждого Раздел Из ПоказателиОтчета Цикл
		мДанныеОтчета.Вставить(Раздел.Ключ, РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
	КонецЦикла;
	
	Для Каждого ЭлементСтруктуры Из СохрСтруктура.ДанныеМногостраничныхРазделов Цикл
		
		НайденноеЗначение = Неопределено;
		
		мСтруктураМногостраничныхРазделов.Свойство(ЭлементСтруктуры.Ключ, НайденноеЗначение);
		
		Если НЕ НайденноеЗначение = Неопределено Тогда
			
			НайденноеЗначение = ЭтаФорма[НайденноеЗначение];
			
			ЗначениеВДанныеФормы(ЭлементСтруктуры.Значение, НайденноеЗначение);
			
			Если НайденноеЗначение[0].Свойство("Данные") Тогда
				
				Для Каждого СтрокаТаблЗнач Из НайденноеЗначение Цикл
					
					Если ТипЗнч(СтрокаТаблЗнач.Данные) = Тип("СписокЗначений") Тогда
						
						СтрокаТаблЗнач.Данные.Очистить();
						СтрокаТаблЗнач.Данные.Добавить(ЭлементСтруктуры.Значение[НайденноеЗначение.Индекс(СтрокаТаблЗнач)].Данные);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если НайденноеЗначение[0].Свойство("ДанныеДопСтрок") Тогда
				
				Ном = 0;
				
				Для Каждого СтрокаТаблЗнач Из ЭлементСтруктуры.Значение Цикл
					
					Если ТипЗнч(СтрокаТаблЗнач.ДанныеДопСтрок) = Тип("Структура") Тогда
						
						Для Каждого ЭлСтруктуры Из СтрокаТаблЗнач.ДанныеДопСтрок Цикл
							
							ТаблЗнач = ЭлСтруктуры.Значение;
							
							ЭлСтруктуры.Значение = ЭтаФорма["Хранилище" + ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ЭлементСтруктуры.Ключ)].Добавить().Таблица;
							
							ЗначениеВДанныеФормы(ТаблЗнач, ЭлСтруктуры.Значение);
							
							НайденноеЗначение[Ном].ДанныеДопСтрок.Добавить(ЭлСтруктуры.Значение);
							
						КонецЦикла;
						
					ИначеЕсли ТипЗнч(СтрокаТаблЗнач.ДанныеДопСтрок) = Тип("ТаблицаЗначений") Тогда
						
						СтрокаТаблЗначДанныеДопСтрок = ЭтаФорма["Хранилище" + ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ЭлементСтруктуры.Ключ)].Добавить().Таблица;
						
						ЗначениеВДанныеФормы(СтрокаТаблЗнач.ДанныеДопСтрок, СтрокаТаблЗначДанныеДопСтрок);
						
						НайденноеЗначение[Ном].ДанныеДопСтрок.Добавить(СтрокаТаблЗначДанныеДопСтрок, "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела");
						
					КонецЕсли;
					
					Ном = Ном + 1;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

	Для Каждого Раздел Из мСтруктураМногостраничныхРазделов Цикл
		ТаблицаЛистовРаздела = ЭтаФорма[Раздел.Значение];
		Для Каждого Лист Из ТаблицаЛистовРаздела Цикл
			Лист.Данные[0].Значение = РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Лист.Данные[0].Значение);
		КонецЦикла;
		мДанныеОтчета.Вставить(Раздел.Ключ, ЭтаФорма[Раздел.Значение]);
	КонецЦикла;
	
	СохрСтруктура.Свойство("ДокументУпПред", мСтруктураДокУпПред);
	
КонецФункции

&НаСервере
Функция СформироватьСтруктуруПараметров()
	
	Титульный = мДанныеОтчета.ПолеТабличногоДокументаТитульный;
	
	ПараметрыВыгрузки = Новый Структура;
	
	ПараметрыВыгрузки.Вставить("НазваниеПрограммы", ВРЕГ(СокрЛП(РегламентированнаяОтчетность.НазваниеПрограммы())));
	ПараметрыВыгрузки.Вставить("ВерсияПрограммы", СокрЛП(РегламентированнаяОтчетность.ВерсияПрограммы()));
	
	ПараметрыВыгрузки.Вставить("ЭтоПБОЮЛ", НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация));
	ПараметрыВыгрузки.Вставить("ЭтоГоловнаяОрганизация", РегламентированнаяОтчетность.ГоловнаяОрганизация(СтруктураРеквизитовФормы.Организация) = СтруктураРеквизитовФормы.Организация);
	                      	
	ПараметрыВыгрузки.Вставить("НомерВПачке", 1);
	ПараметрыВыгрузки.Вставить("РегистрационныйНомерПФР", СокрЛП(Титульный.НомРег));
	ПараметрыВыгрузки.Вставить("НомерКорректировки",
		РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(СокрЛП(Титульный.НомерКорректировки), 3, "0"));
	ПараметрыВыгрузки.Вставить("КодОтчетногоПериода", СокрЛП(Титульный.Период));
	ПараметрыВыгрузки.Вставить("КалендарныйГод", СокрЛП(Титульный.ОтчетГод));
	Если ПараметрыВыгрузки.ЭтоПБОЮЛ Тогда
		ФИОИП = РегламентированнаяОтчетность.РазложитьФИО(ВРЕГ(Титульный.ОргНазв));
		
		ПараметрыВыгрузки.Вставить("ФамилияИП",		ФИОИП.Фамилия);
		ПараметрыВыгрузки.Вставить("ИмяИП",			ФИОИП.Имя);
		ПараметрыВыгрузки.Вставить("ОтчествоИП", 	ФИОИП.Отчество);
		
		ПараметрыВыгрузки.Вставить("ОГРНИП", СокрЛП(Титульный.ОГРН));
	Иначе
		НаимОрг = ВРЕГ(СокрЛП(Титульный.ОргНазв));
		ПараметрыВыгрузки.Вставить("НаименованиеОрганизации", НаимОрг);
		ПараметрыВыгрузки.Вставить("КПП", СокрЛП(СтрЗаменить(Титульный.КПП, "-", "")));
		ПараметрыВыгрузки.Вставить("ОГРН", СокрЛП(Титульный.ОГРН));
	КонецЕсли;
	
	ПараметрыВыгрузки.Вставить("КодПоОКПО", ПредставлениеЧисла(Титульный.ОКПО));
	ПараметрыВыгрузки.Вставить("КодПоОКОПФ", СокрЛП(Титульный.ОКОПФ));
	ПараметрыВыгрузки.Вставить("КодПоОКФС", СокрЛП(Титульный.ОКФС));
	
	ПараметрыВыгрузки.Вставить("РегистрационныйНомерТФОМС", ПредставлениеЧисла(Титульный.НомТФОМС));
	ПараметрыВыгрузки.Вставить("ИНН", СокрЛП(Титульный.ИНН));
	
	ПараметрыВыгрузки.Вставить("КодПоОКАТО", СокрЛП(Титульный.ОКАТО));
	ПараметрыВыгрузки.Вставить("КодПоОКВЭД", СтрЗаменить(СокрЛП(СтрЗаменить(СтрЗаменить(Титульный.ОКВЭД, " ", ""), ".", " ")), " ", "."));
	ПараметрыВыгрузки.Вставить("Телефон", СокрЛП(Титульный.ТелОрганизации));
	
	ПараметрыВыгрузки.Вставить("ЛицоПодтверждающееСведения", ПредставлениеЧисла(Титульный.ПрПодп));
	
	ФИОПодписанта = РегламентированнаяОтчетность.РазложитьФИО(ВРЕГ(Титульный.ОргПодписантФамилия));
	
	ПараметрыВыгрузки.Вставить("ФамилияПодписанта",	ФИОПодписанта.Фамилия);
	ПараметрыВыгрузки.Вставить("ИмяПодписанта",		ФИОПодписанта.Имя);
	ПараметрыВыгрузки.Вставить("ОтчествоПодписанта",ФИОПодписанта.Отчество);	
	
	ПараметрыВыгрузки.Вставить("КоличествоЗЛ", ПредставлениеЧисла(Титульный.КолЗастрахованных));
	ПараметрыВыгрузки.Вставить("СреднесписочнаяЧисленность", ПредставлениеЧисла(Титульный.СрСписЧисл));
	ПараметрыВыгрузки.Вставить("КодУстановленногоТарифа", СокрЛП(Титульный.Тариф));
	
	КоличествоСтраниц = ПредставлениеЧисла(Титульный.СоставленаНа);
	КоличествоСтраниц = ?(КоличествоСтраниц = "0", "1", КоличествоСтраниц);
	ПараметрыВыгрузки.Вставить("КоличествоСтраниц", КоличествоСтраниц);
	ПараметрыВыгрузки.Вставить("КоличествоЛистовПриложения", ПредставлениеЧисла(Титульный.Прил));
	
	ПараметрыВыгрузки.Вставить("ИмяКлючевогоУзлаСодержательнойЧасти", "РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ");
	
	ПараметрыВыгрузки.Вставить("Индекс", СокрЛП(Титульный.Адрес1));
	
	РегионСокращение = "";
	РегионНазвание = РегламентированнаяОтчетность.ПолучитьИмяИАдресноеСокращение(ВРЕГ(СокрЛП(Титульный.Адрес2)), РегионСокращение);
	ПараметрыВыгрузки.Вставить("РегионНазвание", РегионНазвание);
	ПараметрыВыгрузки.Вставить("РегионСокращение", РегионСокращение);
	
	РайонСокращение = "";
	РайонНазвание = РегламентированнаяОтчетность.ПолучитьИмяИАдресноеСокращение(ВРЕГ(СокрЛП(Титульный.Адрес3)), РайонСокращение);
	ПараметрыВыгрузки.Вставить("РайонНазвание", РайонНазвание);
	ПараметрыВыгрузки.Вставить("РайонСокращение", РайонСокращение);
	
	ГородСокращение = "";
	ГородНазвание = РегламентированнаяОтчетность.ПолучитьИмяИАдресноеСокращение(ВРЕГ(СокрЛП(Титульный.Адрес4)), ГородСокращение);
	ПараметрыВыгрузки.Вставить("ГородНазвание", ГородНазвание);
	ПараметрыВыгрузки.Вставить("ГородСокращение", ГородСокращение);
	
	НаселенныйПунктСокращение = "";
	НаселенныйПунктНазвание = РегламентированнаяОтчетность.ПолучитьИмяИАдресноеСокращение(ВРЕГ(СокрЛП(Титульный.Адрес5)), НаселенныйПунктСокращение);
	ПараметрыВыгрузки.Вставить("НаселенныйПунктНазвание", НаселенныйПунктНазвание);
	ПараметрыВыгрузки.Вставить("НаселенныйПунктСокращение", НаселенныйПунктСокращение);
	
	УлицаСокращение = "";
	УлицаНазвание = РегламентированнаяОтчетность.ПолучитьИмяИАдресноеСокращение(ВРЕГ(СокрЛП(Титульный.Адрес6)), УлицаСокращение);
	ПараметрыВыгрузки.Вставить("УлицаНазвание", УлицаНазвание);
	ПараметрыВыгрузки.Вставить("УлицаСокращение", УлицаСокращение);
	
	ДомНомер = ВРЕГ(СокрЛП(Титульный.Адрес7));
	Если ЗначениеЗаполнено(ДомНомер) Тогда
		ПараметрыВыгрузки.Вставить("ДомСокращение", "Д");
		ПараметрыВыгрузки.Вставить("ДомНомер", ДомНомер);
	КонецЕсли;
	
	КорпусНомер = ВРЕГ(СокрЛП(Титульный.Адрес8));
	Если ЗначениеЗаполнено(КорпусНомер) Тогда
		ПараметрыВыгрузки.Вставить("КорпусСокращение", "КОРП");
		ПараметрыВыгрузки.Вставить("КорпусНомер", КорпусНомер);
	КонецЕсли;
	
	КвартираНомер = ВРЕГ(СокрЛП(Титульный.Адрес9));
	Если ЗначениеЗаполнено(КвартираНомер) Тогда
		ПараметрыВыгрузки.Вставить("КвартираСокращение", "КВ");
		ПараметрыВыгрузки.Вставить("КвартираНомер", КвартираНомер);
	КонецЕсли;
	
	ПараметрыВыгрузки.Вставить("НаименованиеУдостоверяющего", ВРЕГ(СокрЛП(мСтруктураДокУпПред.НаименованиеУдостоверяющего)));
	ПараметрыВыгрузки.Вставить("СерияРимскиеЦифры", ВРЕГ(СокрЛП(мСтруктураДокУпПред.СерияРимскиеЦифры)));
	ПараметрыВыгрузки.Вставить("СерияРусскиеБуквы", ВРЕГ(СокрЛП(мСтруктураДокУпПред.СерияРусскиеБуквы)));
	ПараметрыВыгрузки.Вставить("НомерУдостоверяющего", ПредставлениеЧисла(мСтруктураДокУпПред.НомерУдостоверяющего));
	ПараметрыВыгрузки.Вставить("ДатаВыдачи", Формат(мСтруктураДокУпПред.ДатаВыдачи, "ДФ=dd.MM.yyyy"));
	
	КемВыдан = ВРЕГ(СокрЛП(мСтруктураДокУпПред.КемВыдан));
	ПараметрыВыгрузки.Вставить("КемВыдан", КемВыдан);
	
	ПараметрыВыгрузки.Вставить("ДатаЗаполнения", Формат(ДатаПодписи, "ДФ=dd.MM.yyyy"));
	
	ПараметрыВыгрузки.Вставить("ИмяФайла", СформироватьИмяФайла(ПараметрыВыгрузки));
	
	Возврат ПараметрыВыгрузки;
	
КонецФункции

&НаСервере
Функция ИзвлечьСтруктуруXML()
	
	ДеревоСтруктуры = Новый ДеревоЗначений;
	ДеревоСтруктуры.Колонки.Добавить("Код");
	ДеревоСтруктуры.Колонки.Добавить("Тип");
	ДеревоСтруктуры.Колонки.Добавить("Формат");
	ДеревоСтруктуры.Колонки.Добавить("МинРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("МаксРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("Обязательность");
	ДеревоСтруктуры.Колонки.Добавить("Многостраничность");
	ДеревоСтруктуры.Колонки.Добавить("Многострочность");
	ДеревоСтруктуры.Колонки.Добавить("Раздел");
	ДеревоСтруктуры.Колонки.Добавить("Ключ");
	ДеревоСтруктуры.Колонки.Добавить("Условие");
	ДеревоСтруктуры.Колонки.Добавить("ЗначениеПоУмолчанию");
	ДеревоСтруктуры.Колонки.Добавить("Значение");
	ДеревоСтруктуры.Колонки.Добавить("Представление");
	ДеревоСтруктуры.Колонки.Добавить("Показатели");
	
	Макет = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет("СхемаВыгрузки700_2010");
	ВысотаТаблицы = Макет.ВысотаТаблицы;
	
	УчтенныеГруппы = Новый Соответствие;
	
	Для НомерСтроки = 2 По ВысотаТаблицы Цикл
		НомСтр = ВысотаТаблицы - НомерСтроки + 2;
		Если Макет.Область(НомерСтроки, 0, НомерСтроки, 0).Видимость = Неопределено Тогда
						
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), НомерСтроки);

			Сообщение.Сообщить();
			
		КонецЕсли;
	КонецЦикла;
	    	
	Для Уровень = 0 По Макет.КоличествоУровнейГруппировокСтрок() - 1 Цикл
		Макет.ПоказатьУровеньГруппировокСтрок(Уровень);
		Для НомерСтроки = 2 По ВысотаТаблицы Цикл
			НомСтр = ВысотаТаблицы - НомерСтроки + 2;
			Если Макет.Область(НомСтр, 0, НомСтр, 0).Видимость И УчтенныеГруппы.Получить(НомСтр) = Неопределено Тогда
				
				РодительскийУзел = ДеревоСтруктуры;
				Если Уровень <> 0 Тогда
					Для Инд = 1 По НомСтр - 2 Цикл
						Узел = УчтенныеГруппы.Получить(НомСтр - Инд);
						Если Узел <> Неопределено Тогда
							РодительскийУзел = Узел;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				НовСтр = РодительскийУзел.Строки.Вставить(0);
				НовСтр.Код = СокрЛП(Макет.Область(НомСтр, 1, НомСтр, 1).Текст);
				НовСтр.Раздел = СокрЛП(Макет.Область(НомСтр, 2, НомСтр, 2).Текст);
				НовСтр.Ключ = СокрЛП(Макет.Область(НомСтр, 3, НомСтр, 3).Текст);
				НовСтр.Тип = СокрЛП(Макет.Область(НомСтр, 4, НомСтр, 4).Текст);
				НовСтр.Формат = СокрЛП(Макет.Область(НомСтр, 5, НомСтр, 5).Текст);
				МинРазмерность = СокрЛП(Макет.Область(НомСтр, 6, НомСтр, 6).Текст);
				НовСтр.МинРазмерность = ?(ПустаяСтрока(МинРазмерность), ?(НовСтр.Формат = "N", 99999, 0), Число(МинРазмерность));
				МаксРазмерность = СокрЛП(Макет.Область(НомСтр, 7, НомСтр, 7).Текст);
				НовСтр.МаксРазмерность = ?(ПустаяСтрока(МаксРазмерность), 99999, Число(МаксРазмерность));
				НовСтр.Обязательность = СокрЛП(Макет.Область(НомСтр, 8, НомСтр, 8).Текст);
				НовСтр.Многостраничность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 9, НомСтр, 9).Текст);
				НовСтр.Многострочность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 10, НомСтр, 10).Текст);
				НовСтр.Условие = СокрЛП(Макет.Область(НомСтр, 11, НомСтр, 11).Текст);
				НовСтр.ЗначениеПоУмолчанию = СокрЛП(Макет.Область(НомСтр, 12, НомСтр, 12).Текст);
				НовСтр.Представление = СокрЛП(Макет.Область(НомСтр, 13, НомСтр, 13).Текст);
				
				УчтенныеГруппы.Вставить(НомСтр, НовСтр);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДеревоСтруктуры;
	
КонецФункции

&НаСервере
Функция ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки)
	СтатусПроверки = Истина;
	
	Если ПустаяСтрока(ПараметрыВыгрузки.ИНН) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Не задан ИНН организации!", "Титульный", "ИНН1");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если (НЕ ПараметрыВыгрузки.ЭтоПБОЮЛ И ПустаяСтрока(ПараметрыВыгрузки.НаименованиеОрганизации)) ИЛИ (ПараметрыВыгрузки.ЭтоПБОЮЛ И ПустаяСтрока(ПараметрыВыгрузки.ФамилияИП)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Не задан налогоплательщик!", "Титульный", "ОргНазв");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ РегНомерПФРСоответствуетТребованиям(ПараметрыВыгрузки.РегистрационныйНомерПФР) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Значение рег. номера в ПФР не соответствует шаблону:""XXX-XXX-XXXXXX"" (X - любая цифра)!", "Титульный", "НомРег");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ПараметрыВыгрузки.КодПоОКАТО) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Не указан код ОКАТО!", "Титульный", "ОКАТО");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(СокрЛП(СтрЗаменить(ПараметрыВыгрузки.КодПоОКВЭД, ".", ""))) ИЛИ НЕ РегламентированнаяОтчетностьКлиентСервер.ОКВЭДСоответствуетТребованиям(ПараметрыВыгрузки.КодПоОКВЭД) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Некорректное значение кода вида деятельности по ОКВЭД!", "Титульный", "ОКВЭД");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ПараметрыВыгрузки.КодУстановленногоТарифа) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Не указан код тарифа!", "Титульный", "Тариф");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПараметрыВыгрузки.ЛицоПодтверждающееСведения = "0" Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Не указан тип подписанта!", "Титульный", "ПрПодп");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ПараметрыВыгрузки.ФамилияПодписанта) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Не указана фамилия подписанта!", "Титульный", "ОргПодписантФамилия");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ПараметрыВыгрузки.ИмяПодписанта) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Не указано имя подписанта!", "Титульный", "ОргПодписантФамилия");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПараметрыВыгрузки.ЛицоПодтверждающееСведения = "2" Тогда
		Если ПустаяСтрока(ПараметрыВыгрузки.НаименованиеУдостоверяющего) Тогда
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Не указано наименование документа, подтверждающего полномочия представителя!", "Титульный", "ДокУпПред");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		Если ПустаяСтрока(ПараметрыВыгрузки.ДатаВыдачи) Тогда
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Не указана дата выдачи документа, подтверждающего полномочия представителя!", "Титульный", "ДокУпПред");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(ПараметрыВыгрузки.Индекс) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Не задан почтовый индекс адреса регистрации!", "Титульный", "Адрес1");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЛишьОдноИзЗначениеЗаполнено(ПараметрыВыгрузки.РегионНазвание, ПараметрыВыгрузки.РегионСокращение) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Регион не соответствует шаблону (Название Сокращение)!", "Титульный", "Адрес2");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЛишьОдноИзЗначениеЗаполнено(ПараметрыВыгрузки.РайонНазвание, ПараметрыВыгрузки.РайонСокращение) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Район не соответствует шаблону (Название Сокращение)!", "Титульный", "Адрес3");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЛишьОдноИзЗначениеЗаполнено(ПараметрыВыгрузки.ГородНазвание, ПараметрыВыгрузки.ГородСокращение) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Город не соответствует шаблону (Название Сокращение)!", "Титульный", "Адрес4");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
    Если ЛишьОдноИзЗначениеЗаполнено(ПараметрыВыгрузки.НаселенныйПунктНазвание, ПараметрыВыгрузки.НаселенныйПунктСокращение) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Населенный пункт не соответствует шаблону (Название Сокращение)!", "Титульный", "Адрес5");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	 Если ЛишьОдноИзЗначениеЗаполнено(ПараметрыВыгрузки.УлицаНазвание, ПараметрыВыгрузки.УлицаСокращение) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "Улица не соответствует шаблону (Название Сокращение)!", "Титульный", "Адрес6");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Раздел12 = мДанныеОтчета.Раздел12;
	
	Для Каждого ЛистРаздела12 Из Раздел12 Цикл
		НомерЛиста = Раздел12.Индекс(ЛистРаздела12) + 1;
		ДанныеЛиста = ЛистРаздела12.Данные[0].Значение;
		
		КодТарифа = ДанныеЛиста.П000200001001;
		
		Если ПустаяСтрока(КодТарифа) Тогда
			НомерЛиста = Раздел12.Индекс(ЛистРаздела12) + 1;
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "На странице " + НомерЛиста + " раздела 1.2 не задан код тарифа!", "Раздел12", "П000200001001_1", НомерЛиста);			
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ДанныеРаздела41 = мДанныеОтчета.ПолеТабличногоДокументаРаздел41;
	НомСтроки = 1;
	
	ФИОСотрудника = Неопределено;
	ДатаВыдачи = Неопределено;
	ДатаОкончания = Неопределено;
	СуммаВсего = Неопределено;
	Сумма1Месяц = Неопределено;
	Сумма2Месяц = Неопределено;
	Сумма3Месяц = Неопределено;
	
	Пока ДанныеРаздела41.Свойство("П000410001002_" + Формат(НомСтроки, "ЧГ="), ФИОСотрудника) Цикл
		НомерСтроки = Формат(НомСтроки, "ЧГ=");
		
		СтрокаЗаполнена = Ложь;
		ДанныеРаздела41.Свойство("П000410001003_" + НомерСтроки, ДатаВыдачи);
		ДанныеРаздела41.Свойство("П000410001004_" + НомерСтроки, ДатаОкончания);
		ДанныеРаздела41.Свойство("П000410001005_" + НомерСтроки, СуммаВсего);
		ДанныеРаздела41.Свойство("П000410001006_" + НомерСтроки, Сумма1Месяц);
		ДанныеРаздела41.Свойство("П000410001007_" + НомерСтроки, Сумма2Месяц);
		ДанныеРаздела41.Свойство("П000410001008_" + НомерСтроки, Сумма3Месяц);
		
		
		Если ЗначениеЗаполнено(ФИОСотрудника) ИЛИ  ЗначениеЗаполнено(ДатаВыдачи) ИЛИ ЗначениеЗаполнено(ДатаОкончания) ИЛИ ЗначениеЗаполнено(СуммаВсего) 
		ИЛИ ЗначениеЗаполнено(Сумма1Месяц) ИЛИ ЗначениеЗаполнено(Сумма2Месяц) ИЛИ ЗначениеЗаполнено(Сумма3Месяц) Тогда
			СтрокаЗаполнена = Истина;
		КонецЕсли;
					
		Если СтрокаЗаполнена Тогда
			
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ФИОСотрудника);
			Если НЕ ЗначениеЗаполнено(ФИО.Фамилия) Тогда
				РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "В разделе 4.1, в строке " + НомерСтроки + " не указана фамилия сотрудника!", "Раздел41", "П000410001002_" + НомерСтроки);			
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ФИО.Имя) Тогда
				РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "В разделе 4.1, в строке " + НомерСтроки + " не указано имя сотрудника!", "Раздел41", "П000410001002_" + НомерСтроки);			
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ДатаВыдачи) Тогда
				РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, "В разделе 4.1, строке " + НомерСтроки + " не указана дата выдачи справки!", "Раздел41", "П000410001003_" + НомерСтроки);			
				СтатусПроверки = Ложь;
			КонецЕсли;
		КонецЕсли;
		НомСтроки = НомСтроки +1;
	КонецЦикла;
	
	Возврат СтатусПроверки;
			 
КонецФункции

&НаСервере
Процедура ЗаполнитьДанными(ДеревоВыгрузки, ПараметрыВыгрузки)
	
	ОбработатьУсловныеЭлементы(ПараметрыВыгрузки, ДеревоВыгрузки);
	ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, ДеревоВыгрузки);
	ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
	ПостобработкаДереваВыгрузки(ДеревоВыгрузки);
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьДеревоВXML(ДеревоВыгрузки, ПараметрыВыгрузки)
	
	ПотокXML = РегламентированнаяОтчетность.СоздатьНовыйПотокXML("windows-1251");
	ЗаписатьУзелДереваВXML(ДеревоВыгрузки, ПотокXML, ПараметрыВыгрузки);
	ТекстДляЗаписи = ПотокXML.Закрыть();
	Возврат ТекстДляЗаписи;
	
КонецФункции

&НаСервере
Функция ПредставлениеЧисла(Знач ЗначЧисло)
	
	Если ТипЗнч(ЗначЧисло) = Тип("Строка") Тогда
		ЗначЧисло = СокрЛП(ЗначЧисло);	
		ЗначЧисло = ?(ЗначениеЗаполнено(ЗначЧисло) И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЗначЧисло), Число(ЗначЧисло), 0);
	КонецЕсли;
	
	СтрЧисло = Формат(ЗначЧисло, "ЧН=; ЧГ=");	
	
	Возврат СтрЧисло;
	
КонецФункции

&НаСервере
Функция СформироватьИмяФайла(ПараметрыВыгрузки)
			
	СтрНомПачки = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(Формат(НомерПачки, "ЧГ="), 5, "0");
	
	ИмяФайла = "PFR-700-Y-" + ПараметрыВыгрузки.КалендарныйГод + "-ORG-" + ПараметрыВыгрузки.РегистрационныйНомерПФР +
			   "-DCK-" + СтрНомПачки + "-DPT-000000-DCK-00000.XML";
		
	Возврат ИмяФайла;
	
КонецФункции

&НаСервере
Функция РегНомерПФРСоответствуетТребованиям(Знач РегНомерПФР)
	
	Для Инд = 0 По 8 Цикл
		РегНомерПФР = СтрЗаменить(РегНомерПФР, Строка(Инд), "9");
	КонецЦикла;
	
	Возврат РегНомерПФР = "999-999-999999";
	
КонецФункции

&НаСервере
Функция ЛишьОдноИзЗначениеЗаполнено(Значение1, Значение2)
	
	ЕстьЗначение1 = ЗначениеЗаполнено(Значение1);
	ЕстьЗначение2 = ЗначениеЗаполнено(Значение2);
	
	Возврат ЕстьЗначение1 И НЕ ЕстьЗначение2 ИЛИ ЕстьЗначение2 И НЕ ЕстьЗначение1;
	
КонецФункции

&НаСервере
Процедура ОбработатьУсловныеЭлементы(Знач ПараметрыВыгрузки, Узел)
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если Узел.Код = ПараметрыВыгрузки.ИмяКлючевогоУзлаСодержательнойЧасти Тогда
			Возврат;
		КонецЕсли;
		ДополнитьСтруктуруПараметров(ПараметрыВыгрузки, Узел);
	КонецЕсли;
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		ТекСтр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		Если НЕ ПустаяСтрока(ТекСтр.Условие) Тогда
			Если НЕ РегламентированнаяОтчетность.УсловиеВыполнено(ЭтаФорма, ПараметрыВыгрузки, ТекСтр.Условие) Тогда
				Узел.Строки.Удалить(ТекСтр);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		ОбработатьУсловныеЭлементы(ПараметрыВыгрузки, ТекСтр);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Узел, НомерСтроки = Неопределено)
	
	Для Каждого Стр из Узел.Строки Цикл
		Если Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки, "ИмяКлючевогоУзлаСодержательнойЧасти") И ПараметрыВыгрузки.ИмяКлючевогоУзлаСодержательнойЧасти = Стр.Код Тогда
				ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Стр);
				ЗаполнитьСодержательнуюЧасть(ПараметрыВыгрузки, Стр);
			Иначе
				ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Стр);
			КонецЕсли;
		Иначе
			Если ПустаяСтрока(Стр.ЗначениеПоУмолчанию) Тогда
				Если НЕ ПустаяСтрока(Стр.Ключ) И РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки, Стр.Ключ) Тогда
					ВывестиПоказательВXML(Стр, ПараметрыВыгрузки[Стр.Ключ]);
				Иначе
					Стр.Значение = "";
				КонецЕсли;
			ИначеЕсли Лев(Стр.ЗначениеПоУмолчанию, 1) = "&" Тогда
				Ключ = Сред(Стр.ЗначениеПоУмолчанию, 2);
				Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки, Ключ) Тогда
					ВывестиПоказательВXML(Стр, ПараметрыВыгрузки[Ключ]);
				КонецЕсли;
			Иначе
				Стр.Значение = Стр.ЗначениеПоУмолчанию;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОтсечьНезаполненныеНеобязательныеУзлы(Узел)
	
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		Стр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		ОтсечьНезаполненныеНеобязательныеУзлы(Стр);
	КонецЦикла;
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если (СтрНайти(Узел.Обязательность, "Н") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "H") <> 0) И УзелПуст(Узел) Тогда
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		ИначеЕсли (СтрНайти(Узел.Обязательность, "М") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "M") <> 0)
		И УзелПуст(Узел)
		И ?(СтрНайти(Узел.Обязательность, "О") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "O") <> 0, РегламентированнаяОтчетность.ИмеютсяАналогичныеСоседниеУзлыКлюч(Узел), Истина) Тогда
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПостобработкаДереваВыгрузки(ДеревоВыгрузки)
	
	Возврат;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьУзелДереваВXML(СтрокаДерева, ПотокXML, ПараметрыВыгрузки)
	
	Если ТипЗнч(СтрокаДерева) = Тип("ДеревоЗначений") Тогда
		ПотокXML.ЗаписатьНачалоЭлемента("ФайлПФР");
		Для каждого Стр Из СтрокаДерева.Строки Цикл
			ЗаписатьУзелДереваВXML(Стр, ПотокXML, ПараметрыВыгрузки);
		КонецЦикла;
		ПотокXML.ЗаписатьКонецЭлемента();
	Иначе
		Если СтрокаДерева.Тип = "А" ИЛИ СтрокаДерева.Тип = "A" Тогда 
			ПотокXML.ЗаписатьАтрибут(СтрокаДерева.Код, Строка(СтрокаДерева.Значение));
		Иначе
			ПотокXML.ЗаписатьНачалоЭлемента(СтрокаДерева.Код);
			Для каждого Лист из СтрокаДерева.Строки Цикл
				ЗаписатьУзелДереваВXML(Лист, ПотокXML, ПараметрыВыгрузки);
			КонецЦикла;
			ПотокXML.ЗаписатьТекст(Строка(СтрокаДерева.Значение));
			ПотокXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ДополнитьСтруктуруПараметров(ПараметрыВыгрузки, Узел)
	
	Если НЕ ПустаяСтрока(Узел.Раздел) Тогда
		Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(мДанныеОтчета, "ПолеТабличногоДокумента" + Узел.Раздел) Тогда
			ПоказателиРаздела = мДанныеОтчета["ПолеТабличногоДокумента" + Узел.Раздел];
			Для Каждого Эл Из ПоказателиРаздела Цикл
				ПараметрыВыгрузки.Вставить(Эл.Ключ, Эл.Значение);
			КонецЦикла;
		Иначе
			ПоказателиРаздела = мДанныеОтчета[Узел.Раздел];
			Для Каждого Эл Из ПоказателиРаздела Цикл
				ПараметрыВыгрузки.Вставить(Эл.Ключ, Эл.Значение);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСодержательнуюЧасть(ПараметрыВыгрузки, УзелРодитель)
	
	Титульный = мДанныеОтчета.ПолеТабличногоДокументаТитульный;
	Раздел12  = мДанныеОтчета.Раздел12;
	Раздел30  = мДанныеОтчета.ПолеТабличногоДокументаРаздел30;
	Раздел41  = мДанныеОтчета.ПолеТабличногоДокументаРаздел41;
	Раздел42  = мДанныеОтчета.ПолеТабличногоДокументаРаздел42;
	Раздел43  = мДанныеОтчета.ПолеТабличногоДокументаРаздел43;
	Раздел50  = мДанныеОтчета.ПолеТабличногоДокументаРаздел50;
	
	Если ПараметрыВыгрузки.ЭтоПБОЮЛ Тогда
		РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(УзелРодитель, "НаименованиеОрганизации"));
		РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(УзелРодитель, "КПП"));
		РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(УзелРодитель, "ОГРН"));
	Иначе
		РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(УзелРодитель, "ФИОфизическогоЛица"));
		РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(УзелРодитель, "ОГРНИП"));
	КонецЕсли;
	  	
	УзелРасчетСтраховыхВзносовПоУстановленномуТарифуШаблон = ПолучитьПодчиненныйЭлемент(УзелРодитель, "РасчетСтраховыхВзносовПоУстановленномуТарифу");
	Для Каждого ЛистРаздела12 Из Раздел12 Цикл
		
		Если Раздел12.Индекс(ЛистРаздела12) = 0 Тогда
			УзелРасчетПоНачисленнымИуплаченнымСтраховымВзносам = ПолучитьПодчиненныйЭлемент(УзелРодитель, "РасчетПоНачисленнымИуплаченнымСтраховымВзносам");
			ЗаполнитьДаннымиУзел(ЛистРаздела12.Данные[0].Значение, УзелРасчетПоНачисленнымИуплаченнымСтраховымВзносам);
		КонецЕсли;
		
		УзелРасчетСтраховыхВзносовПоУстановленномуТарифу = СкопироватьУзел(УзелРодитель, УзелРасчетСтраховыхВзносовПоУстановленномуТарифуШаблон);
		ЗаполнитьДаннымиУзел(ЛистРаздела12.Данные[0].Значение, УзелРасчетСтраховыхВзносовПоУстановленномуТарифу);
		
		КодТарифа = СокрЛП(ЛистРаздела12.Данные[0].Значение.П000200001001);
		ЗадатьЗначениеЭлемента(УзелРасчетСтраховыхВзносовПоУстановленномуТарифу, "КодТарифа", КодТарифа);
		
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(УзелРасчетСтраховыхВзносовПоУстановленномуТарифуШаблон);
	
	УзелРасчетСтраховыхВзносовПоПониженномуТарифу = ПолучитьПодчиненныйЭлемент(УзелРодитель, "РасчетСтраховыхВзносовПоПониженномуТарифу");
	ЗаполнитьДаннымиУзел(Раздел30, УзелРасчетСтраховыхВзносовПоПониженномуТарифу);
	
	УзелОснованияДляПримененияПониженногоТарифа = ПолучитьПодчиненныйЭлемент(УзелРодитель, "ОснованияДляПримененияПониженногоТарифа");
	УзелСведенияДляПримененияПониженногоТарифа = ПолучитьПодчиненныйЭлемент(УзелОснованияДляПримененияПониженногоТарифа, "СведенияДляПримененияПониженногоТарифа");
	УзелСведенияОработникеИнвалидеШаблон = ПолучитьПодчиненныйЭлемент(УзелСведенияДляПримененияПониженногоТарифа, "СведенияОработникеИнвалиде");
	УзелИтогоВыплат = ПолучитьПодчиненныйЭлемент(УзелСведенияДляПримененияПониженногоТарифа, "ИтогоВыплат");
	
	НомСтр = 1;
	ЧислоВыгруженныхСтрок = 0;
	Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(Раздел41, "П000410001001_" + Формат(НомСтр, "ЧГ=")) Цикл
		
		Если ЗначениеЗаполнено(Раздел41["П000410001002_" + Формат(НомСтр, "ЧГ=")]) Тогда
			
			ЧислоВыгруженныхСтрок = ЧислоВыгруженныхСтрок + 1;
			
			УзелСведенияОработникеИнвалиде = СкопироватьУзел(УзелСведенияДляПримененияПониженногоТарифа, УзелСведенияОработникеИнвалидеШаблон);
			ВыгрузитьСтрокуМногострочнойЧасти(Раздел41, УзелСведенияОработникеИнвалиде, НомСтр);
			
			УзелФИО = ПолучитьПодчиненныйЭлемент(УзелСведенияОработникеИнвалиде, "ФИО");
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ВРЕГ(Раздел41["П000410001002_" + Формат(НомСтр, "ЧГ=")]));
			
			ЗадатьЗначениеЭлемента(УзелФИО, "Фамилия", ФИО.Фамилия);
			ЗадатьЗначениеЭлемента(УзелФИО, "Имя", ФИО.Имя);
			ЗадатьЗначениеЭлемента(УзелФИО, "Отчество", ФИО.Отчество);
			
			ЗадатьЗначениеЭлемента(УзелСведенияОработникеИнвалиде, "НомерПП", ЧислоВыгруженныхСтрок);
			
			УзелСуммыВыплатИвознаграждений = ПолучитьПодчиненныйЭлемент(УзелСведенияОработникеИнвалиде, "СуммыВыплатИвознаграждений");
			
			ВыгрузитьСтрокуМногострочнойЧасти(Раздел41, УзелСуммыВыплатИвознаграждений, НомСтр, , Истина);
			
		КонецЕсли;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	ЗадатьЗначениеЭлемента(УзелСведенияДляПримененияПониженногоТарифа, "КоличествоРаботниковИнвалидов", ЧислоВыгруженныхСтрок);
	Если ЧислоВыгруженныхСтрок > 0 Тогда
		ЗаполнитьДаннымиУзел(Раздел41, УзелИтогоВыплат);
	КонецЕсли;
	
	РегламентированнаяОтчетность.УдалитьУзел(УзелСведенияОработникеИнвалидеШаблон);
	
	УзелРасчетСоответствияУсловийНаПравоПримененияПониженногоТарифаПоСтатьям57и58 = ПолучитьПодчиненныйЭлемент(УзелОснованияДляПримененияПониженногоТарифа, "РасчетСоответствияУсловийНаПравоПримененияПониженногоТарифаПоСтатьям57и58");
	ЗаполнитьДаннымиУзел(Раздел42, УзелРасчетСоответствияУсловийНаПравоПримененияПониженногоТарифаПоСтатьям57и58);
	
	УзелРасчетСоответствияУсловийНаПравоПримененияПониженногоТарифаПоСтатье57 = ПолучитьПодчиненныйЭлемент(УзелОснованияДляПримененияПониженногоТарифа, "РасчетСоответствияУсловийНаПравоПримененияПониженногоТарифаПоСтатье57");
	ЗаполнитьДаннымиУзел(Раздел43, УзелРасчетСоответствияУсловийНаПравоПримененияПониженногоТарифаПоСтатье57);
		
	УзелСведенияОзадолженностиПоСтраховымВзносамНаОПСпоСостояниюНаКонецГода = ПолучитьПодчиненныйЭлемент(УзелРодитель, "СведенияОзадолженностиПоСтраховымВзносамНаОПСпоСостояниюНа31.12.2009");;
	ЗаполнитьДаннымиУзел(Раздел50, УзелСведенияОзадолженностиПоСтраховымВзносамНаОПСпоСостояниюНаКонецГода);
	
КонецПроцедуры

&НаСервере
Функция ВывестиПоказательВXML(Узел, ЗначениеПоказателя)
	
	МинШирина = Узел.МинРазмерность;
	МаксШирина = Узел.МаксРазмерность;
	
	Если Узел.Формат = "T" ИЛИ Узел.Формат = "Т" Тогда
		Если ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
			ЗначениеПоказателяСтр = Формат(ЗначениеПоказателя, "ДФ=dd.MM.yyyy");
		Иначе
			ЗначениеПоказателяСтр = СокрЛП(ЗначениеПоказателя);
		КонецЕсли;
		Узел.Значение = ?(МаксШирина < СтрДлина(ЗначениеПоказателяСтр), СокрЛП(Лев(ЗначениеПоказателяСтр, МаксШирина)), ЗначениеПоказателяСтр);
	ИначеЕсли Узел.Формат = "N" Тогда
		СтрокаФормата = "ЧРД=.; ЧН=; ЧГ=;";
		Если Узел.МаксРазмерность <> 0 И Узел.МаксРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧЦ=" + Формат(Узел.МаксРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Если Узел.МинРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧДЦ=" + Формат(Узел.МинРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, СтрокаФормата));
	ИначеЕсли Узел.Формат = "D" Тогда
		Если ЗначениеЗаполнено(ЗначениеПоказателя) Тогда
			Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, "ДФ=dd.MM.yyyy"));
		Иначе
			Узел.Значение = "";
		КонецЕсли;
	ИначеЕсли Узел.Формат = "gYear" Тогда
		Если ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
			Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, "ДФ=гггг"));
		Иначе
			Узел.Значение = Прав(СокрЛП(ЗначениеПоказателя), 4);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция УзелПуст(Узел)
		
	Для Каждого Стр из Узел.Строки Цикл
		Если НЕ УзелПуст(Стр) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если Узел.Формат = "S" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат ?(Узел.Формат = "N", СокрЛП(Узел.Значение) = "" ИЛИ Число(Узел.Значение) = 0 ИЛИ (НЕ ЗначениеЗаполнено(Узел.Значение)), НЕ ЗначениеЗаполнено(Узел.Значение));
	
КонецФункции

&НаСервере
Функция ПолучитьПодчиненныйЭлемент(Узел, КодЭлемента)
	
	Для Каждого Стр Из Узел.Строки Цикл
		Если Стр.Код = КодЭлемента Тогда
			Возврат Стр;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция СкопироватьУзел(Родитель, Узел)
	
	СтрокиСТемЖеКодом = Родитель.Строки.НайтиСтроки(Новый Структура("Код", Узел.Код), Ложь);
	МаксИндекс = -1;
	Для Каждого СтрокаСТемЖеКодом Из СтрокиСТемЖеКодом Цикл
		ТекИндекс = Родитель.Строки.Индекс(СтрокаСТемЖеКодом);
		Если ТекИндекс > МаксИндекс Тогда
			МаксИндекс = ТекИндекс;
		КонецЕсли;
	КонецЦикла;
	
	ИндексСоздаваемогоУзла = МаксИндекс + 1;
	Если ИндексСоздаваемогоУзла >= Родитель.Строки.Количество() ИЛИ ИндексСоздаваемогоУзла = 0 Тогда
		НовыйУзел = Родитель.Строки.Добавить();
	Иначе
		НовыйУзел = Родитель.Строки.Вставить(ИндексСоздаваемогоУзла);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НовыйУзел, Узел, , "Родитель, Строки");
	Для Каждого Стр из Узел.Строки Цикл
		СкопироватьУзел(НовыйУзел, Стр);
	КонецЦикла;
	Возврат НовыйУзел;
	         	
КонецФункции

&НаСервере
Процедура ЗадатьЗначениеЭлемента(Узел, КодЭлемента, Значение)
	
	ВывестиПоказательВXML(ПолучитьПодчиненныйЭлемент(Узел, КодЭлемента), Значение);
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьСтрокуМногострочнойЧасти(Данные, Узел, НомерСтроки, ПоказателиИсключения = Неопределено, ВыгружатьПустую = Ложь)
	
	Если ПоказателиИсключения = Неопределено Тогда
		СтрИсключения = Новый Структура;
	Иначе
		СтрИсключения = Новый Структура(ПоказателиИсключения);
	КонецЕсли;
	
	СуффиксТекущейСтроки = "_" + Формат(НомерСтроки, "ЧГ=");
	
	СтрокаПустая = Истина;
	Для Каждого Стр Из Узел.Строки Цикл
		Если НЕ ЗначениеЗаполнено(Стр.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ СтрИсключения.Свойство(Стр.Ключ) И ЗначениеПоказателяЗаполнено(Данные[Стр.Ключ + СуффиксТекущейСтроки], Стр) Тогда
			СтрокаПустая = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ СтрокаПустая ИЛИ ВыгружатьПустую Тогда
		Для Каждого Стр Из Узел.Строки Цикл
			Если ЗначениеЗаполнено(Стр.Ключ) Тогда
				ВывестиПоказательВXML(Стр, Данные[Стр.Ключ + СуффиксТекущейСтроки]);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗначениеПоказателяЗаполнено(ЗначениеПоказателя, ЯвляетсяСуммой)
	
	Если ТипЗнч(ЯвляетсяСуммой) = Тип("Булево") Тогда
		ПоказательЯвляетсяСуммой = ЯвляетсяСуммой;
	Иначе
		ПоказательЯвляетсяСуммой = (ЯвляетсяСуммой.Формат = "N" И ЯвляетсяСуммой.МаксРазмерность >= 10 И ЯвляетсяСуммой.МинРазмерность = 99999);
	КонецЕсли;
	
	Возврат ?(ПоказательЯвляетсяСуммой, ЗначениеСуммыЗаполнено(ЗначениеПоказателя), ЗначениеЗаполнено(ЗначениеПоказателя));
	
КонецФункции

&НаСервере
Функция ЗначениеСуммыЗаполнено(ЗначениеСуммы)
	
	Возврат (Окр(ЗначениеСуммы) <> 0)
	
КонецФункции

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчета()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуОтчетаЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчетаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтаФорма);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.Проверить(СпДокОсн);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПоказатели() Экспорт
	
	СформироватьСтруктуруПоказателей();
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	ДеревоВыгрузки = ИзвлечьСтруктуруXML();
	Если НЕ ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	ЗаполнитьДанными(ДеревоВыгрузки, ПараметрыВыгрузки);
	Если НЕ РегламентированнаяОтчетность.ПроверитьДанные(ЭтаФорма, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура АктивизироватьЯчейку(Ячейка) Экспорт
	
	РегламентированнаяОтчетностьКлиент.АктивизироватьЯчейку(ЭтаФорма, Ячейка);
			
КонецПроцедуры

&НаКлиенте
Процедура Печать(ВидПечати, НеИзФормыОтчета = Ложь) Экспорт
    		
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1. Формируется печатная форма...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Печать);
	
	Если НЕ ПечатьНаСервере(ВидПечати) Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(ЭтаФорма, ВидПечати, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере(ВидПечати)
	
	Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = НСтр("ru='Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию!'");

		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ТипЗнч(мДеревоВыбранныхСтраниц) <> Тип("ДанныеФормыДерево") Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
				
	СтруктураРеквизитовФормы.мПечатныеФормы.Очистить();
	СтруктураРеквизитовФормы.мРежимПечати = Истина;
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела, Ложь, Ложь);
				
	сохрТаблДок = ТабличныйДокумент.ПолучитьОбласть();
	
	СтрПоля = "ПолеСверху, ПолеСправа, ПолеСнизу, ПолеСлева";
	ВремПоля = Новый Структура(СтрПоля);
	
	ЗаполнитьЗначенияСвойств(ВремПоля, ТабличныйДокумент, СтрПоля);
	
	ВывестиМакетВТаблДокНаСервере("Титульный", 0);
	
	ОбщиеРеквизитыРазделов = ПолучитьОбщиеРеквизитыСТитульногоЛиста();
	
	Для Каждого СтрокаУровня1 Из мДеревоВыбранныхСтраниц.ПолучитьЭлементы() Цикл
		
		Если СтрокаУровня1.ВыводНаПечать = 0 Тогда
			Продолжить;
		КонецЕсли;

		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НаименованиеЛиста",  СтрокаУровня1.Представление);
		СтруктураПараметров.Вставить("ОриентацияЛиста",    СтрокаУровня1.ОриентацияСтраницы);
		СтруктураПараметров.Вставить("ИмяСтраницы",        СтрокаУровня1.ИмяСтраницы);
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", СтрокаУровня1.ИмяОбластиТабличногоПоля);
		СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);

		Если НЕ мСтруктураМногостраничныхРазделов.Свойство(СтрокаУровня1.ИмяСтраницы) Тогда
			
			ВывестиМакетВТаблДокНаСервере(СтрокаУровня1.ИмяСтраницы, 0);
			ВывестиНаПечатьЛист(СтруктураПараметров, ОбщиеРеквизитыРазделов, СтрПоля);
			
		Иначе
			
			СтруктураПараметров.Вставить("ИмяСтраницыПанели", СтрокаУровня1.ИмяСтраницы);
			ВывестиНаПечатьДополнительныеСтраницы(СтруктураПараметров, ОбщиеРеквизитыРазделов);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(сохрТаблДок);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ВремПоля, СтрПоля);
	
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(ЭтаФорма, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	КопироватьДанныеФормы(мДеревоВыбранныхСтраниц, мДеревоСтраницОтчета);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ВывестиНаПечатьЛист(Парам1, ОбщиеРеквизитыРазделов, СтрПоля = Неопределено)
	
	СоответствиеРазделовМакетам = Новый Соответствие;
	
	СоответствиеРазделовМакетам.Вставить("Титульный",   "ПечатнаяФормаОтчета2010Кв4_Титульный");
	СоответствиеРазделовМакетам.Вставить("Раздел12",    "ПечатнаяФормаОтчета2010Кв4_Раздел12");
	СоответствиеРазделовМакетам.Вставить("Раздел30",    "ПечатнаяФормаОтчета2010Кв4_Раздел30");
	СоответствиеРазделовМакетам.Вставить("Раздел41",    "ПечатнаяФормаОтчета2010Кв4_Раздел41");
	СоответствиеРазделовМакетам.Вставить("Раздел42",    "ПечатнаяФормаОтчета2010Кв4_Раздел42");
	СоответствиеРазделовМакетам.Вставить("Раздел43",    "ПечатнаяФормаОтчета2010Кв4_Раздел43");
	СоответствиеРазделовМакетам.Вставить("Раздел50",    "ПечатнаяФормаОтчета2010Кв4_Раздел50");
	
	ПечатнаяФормаРаздела = СоответствиеРазделовМакетам[Парам1.ИмяСтраницы];
	
	МакетПечатнойФормы = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(ПечатнаяФормаРаздела);
	МакетПечатнойФормы.ПолеСверху = 5;
	МакетПечатнойФормы.ПолеСправа = 5;
	МакетПечатнойФормы.ПолеСнизу  = 5;
	МакетПечатнойФормы.ПолеСлева  = 5;
		
	ИдГруппы = ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(Парам1.ИмяСтраницы);
	
	Если ИдГруппы <> Неопределено Тогда
		
		КолвоСтрокВТаблДок = ЭтаФорма[ИдГруппы].Количество();
		
		ОбластьМнгЧасти              = МакетПечатнойФормы.ПолучитьОбласть("МногострочнаяЧасть");
		ВысотаОбластиМнгЧасти        = МакетПечатнойФормы.ПолучитьОбласть("МногострочнаяЧасть").ВысотаТаблицы;
		ИмяОбластиПоследнейДопСтроки = ОбластьМнгЧасти.ПолучитьОбласть(ВысотаОбластиМнгЧасти, , ВысотаОбластиМнгЧасти).Области[0].Имя;
		
		КолвоСтрокВПечатнойФорме = Число(Сред(ИмяОбластиПоследнейДопСтроки, СтрНайти(ИмяОбластиПоследнейДопСтроки, "_") + 1));
				
		Если КолвоСтрокВТаблДок > КолвоСтрокВПечатнойФорме Тогда
						
			НомерВерхЯчейкиОбласти = МакетПечатнойФормы.Область(ИдГруппы + "01_" + КолвоСтрокВПечатнойФорме).Верх;
			НомерНижнЯчейкиОбласти = МакетПечатнойФормы.Область(ИдГруппы + Формат(мСтруктураКолвоКолонокРазделов[ИдГруппы], "ЧЦ=2; ЧВН=") + "_" + КолвоСтрокВПечатнойФорме).Низ;
				
			ВставляемаяОбласть = МакетПечатнойФормы.Область(НомерВерхЯчейкиОбласти, , НомерНижнЯчейкиОбласти);
			
			КолвоДопСтрок = КолвоСтрокВТаблДок - КолвоСтрокВПечатнойФорме;
									
			Для Ном = 1 По КолвоДопСтрок Цикл
							
				МакетПечатнойФормы.ВставитьОбласть(ВставляемаяОбласть, , ТипСмещенияТабличногоДокумента.ПоВертикали);
													
			КонецЦикла;
			
			Для Каждого Область Из МакетПечатнойФормы.ПолучитьОбласть(НомерВерхЯчейкиОбласти + КолвоДопСтрок, , НомерНижнЯчейкиОбласти + КолвоДопСтрок).Области Цикл
				НайденнаяОбласть = МакетПечатнойФормы.Области.Найти(Область.Имя);
				Если НЕ НайденнаяОбласть = Неопределено Тогда 
					НайденнаяОбласть.Имя = Лев(НайденнаяОбласть.Имя, СтрНайти(НайденнаяОбласть.Имя, "_") - 1) + "_" + Формат(КолвоСтрокВТаблДок, "ЧЦ=3");
				КонецЕсли;
			КонецЦикла;
			
			Для Ном = 0 По КолвоДопСтрок - 1 Цикл
				
				Для Каждого Область Из МакетПечатнойФормы.ПолучитьОбласть(НомерВерхЯчейкиОбласти + КолвоДопСтрок, , НомерНижнЯчейкиОбласти + КолвоДопСтрок).Области Цикл
					НайденнаяОбласть = МакетПечатнойФормы.Область(НомерВерхЯчейкиОбласти + Ном, Область.Лево, НомерВерхЯчейкиОбласти + Ном, Область.Право);
					Если НЕ НайденнаяОбласть = Неопределено Тогда 
						НайденнаяОбласть.Имя = Лев(Область.Имя, СтрНайти(Область.Имя, "_") - 1) + "_" + Формат(КолвоСтрокВПечатнойФорме + Ном, "ЧЦ=3");
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
						
		КонецЕсли;
						
	КонецЕсли;
	
	ЗаполнитьПечатнуюФорму(Парам1, МакетПечатнойФормы, ОбщиеРеквизитыРазделов);
		
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(МакетПечатнойФормы);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, МакетПечатнойФормы, СтрПоля, "Макет");
		
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(ЭтаФорма.Заголовок, Парам1, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
		
КонецПроцедуры

&НаСервере
Функция ПолучитьОбщиеРеквизитыСТитульногоЛиста()
	
	МассивНомРег         = Новый Массив(14);
	МассивНомСтр         = Новый Массив(3);
	МассивДатаПодписи    = Новый Массив(8);
				
	ИсходныйМакет = ТабличныйДокумент;
		
	Область = ИсходныйМакет.Области.Найти("НомРег");
	
	Если НЕ Область = Неопределено Тогда
		
		СтрНомРег = Область.Значение;
		
		Для Ном = 1 По СтрДлина(СтрНомРег) Цикл
			
			МассивНомРег[Ном - 1] = Сред(СтрНомРег, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
		
	Область = ИсходныйМакет.Области.Найти("НомСтр");
	
	Если НЕ Область = Неопределено Тогда
		
		Для Ном = 1 По СтрДлина(Область.Значение) Цикл
			
			МассивНомСтр[Ном - 1] = Сред(Область.Значение, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
			
	Область = ИсходныйМакет.Области.Найти("ДатаПодписи");
	
	Если НЕ Область = Неопределено Тогда
		
		СтрДатаПодписи = Лев(СтрЗаменить(Область.Значение, ".", ""), 8);
		
		Для Ном = 1 По СтрДлина(СтрДатаПодписи) Цикл
			
			Если ЗначениеЗаполнено(ИсходныйМакет.Области.ДатаПодписи.Значение) Тогда
				МассивДатаПодписи[Ном - 1] = Сред(СтрДатаПодписи, Ном, 1);
			КонецЕсли;	
				
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщиеРеквизитыРазделов = Новый Структура;
		
	ОбщиеРеквизитыРазделов.Вставить("НомРег", МассивНомРег);
	ОбщиеРеквизитыРазделов.Вставить("НомСтр", МассивНомСтр);
	ОбщиеРеквизитыРазделов.Вставить("ДатаПодписи", МассивДатаПодписи);
	
	Возврат ОбщиеРеквизитыРазделов;
	
КонецФункции

&НаСервере
Процедура ВывестиНаПечатьДополнительныеСтраницы(СтруктураПараметровСтраницы, ОбщиеРеквизитыРазделов)
	
	Перем ИмяСтраницы;
	Перем ТаблицаСтраницРаздела;
	
	СтруктураПараметровСтраницы.Свойство("ИмяСтраницыПанели", ИмяСтраницы);
	
	Если Не мСтруктураМногостраничныхРазделов.Свойство(ИмяСтраницы, ТаблицаСтраницРаздела) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСтраницРаздела = ЭтаФорма[ТаблицаСтраницРаздела];
	
	МассивПризнаковАктивности = Новый Массив;
	Для Каждого Страница Из ТаблицаСтраницРаздела Цикл
		ТекущийИндекс = ТаблицаСтраницРаздела.Индекс(Страница);
		МассивПризнаковАктивности.Добавить(ТаблицаСтраницРаздела[ТекущийИндекс].АктивнаяСтраница);
	КонецЦикла;
	
	Для Каждого Страница Из ТаблицаСтраницРаздела Цикл
		ТекущийИндекс = ТаблицаСтраницРаздела.Индекс(Страница);
		ВывестиМакетВТаблДокНаСервере(ИмяСтраницы, ТекущийИндекс + 1);
		ВывестиНаПечатьЛист(СтруктураПараметровСтраницы, ОбщиеРеквизитыРазделов);
	КонецЦикла;
	
	Для Каждого Страница Из ТаблицаСтраницРаздела Цикл
		ТекущийИндекс = ТаблицаСтраницРаздела.Индекс(Страница);
		ТаблицаСтраницРаздела[ТекущийИндекс].АктивнаяСтраница = МассивПризнаковАктивности[ТекущийИндекс];
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПечатнуюФорму(ПараметрыПечати, МакетПечатнойФормы, ОбщиеРеквизитыРазделов)
	
	ИсходныйМакет = ТабличныйДокумент;
		
	Для Каждого Область Из ИсходныйМакет.Области Цикл
		
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Область.СодержитЗначение Тогда
			
			Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
				
				Если СтрЧислоВхождений(Область.Имя, "НомРег") > 0 
					  ИЛИ СтрЧислоВхождений(Область.Имя, "НомСтр") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "ДатаПодписи") > 0 Тогда
					
				    Продолжить;
					 
				ИначеЕсли СтрЧислоВхождений(Область.Имя, "ИНН") > 0 Тогда
					
					СтрИНН = Область.Значение;
				 	Если СтрДлина(СтрИНН) = 10 Тогда
						СтрИНН = "00" + СтрИНН;
					КонецЕсли;

					Для Ном = 1 По СтрДлина(СтрИНН) Цикл
						
						МакетПечатнойФормы.Области[Область.Имя + Ном].Значение = Сред(СтрИНН, Ном, 1);
						
					КонецЦикла;
					
					Продолжить;
					
				ИначеЕсли СтрЧислоВхождений(Область.Имя, "Прил") > 0 Тогда
					
					СтрПрил = СокрЛП(Область.Значение);
					СтрПрил = Прав("000" + СтрПрил, 3);

					Для Ном = 1 По СтрДлина(СтрПрил) Цикл
						
						МакетПечатнойФормы.Области[Область.Имя + Ном].Значение = Сред(СтрПрил, Ном, 1);
						
					КонецЦикла;
					
					Продолжить;
					
				ИначеЕсли СтрЧислоВхождений(Область.Имя, "СрСписЧисл") > 0 Тогда
					
					СтрСрСписЧисл = СокрЛП(Область.Значение);
					СтрСрСписЧисл = Прав("     " + СтрСрСписЧисл, 5);

					Для Ном = 1 По СтрДлина(СтрСрСписЧисл) Цикл
						
						МакетПечатнойФормы.Области[Область.Имя + Ном].Значение = Сред(СтрСрСписЧисл, Ном, 1);
						
					КонецЦикла;
					
					Продолжить;
					
				ИначеЕсли СтрЧислоВхождений(Область.Имя, "КолЗастрахованных") > 0 Тогда
					
					СтрКолЗастрахованных = СокрЛП(Область.Значение);
					СтрКолЗастрахованных = Прав("      " + СтрКолЗастрахованных, 6);

					Для Ном = 1 По СтрДлина(СтрКолЗастрахованных) Цикл
						
						МакетПечатнойФормы.Области[Область.Имя + Ном].Значение = Сред(СтрКолЗастрахованных, Ном, 1);
						
					КонецЦикла;
					
					Продолжить;
					
				ИначеЕсли СтрЧислоВхождений(Область.Имя, "КПП") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "НомТФОМС") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "ОГРН") > 0
  					  ИЛИ СтрЧислоВхождений(Область.Имя, "ОКАТО") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "ОКВЭД") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "ОКОПФ") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "ОКПО") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "ОКФС") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "ОтчетГод") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "Период") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "Тариф") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "СоставленаНа") > 0
					  ИЛИ СтрЧислоВхождений(Область.Имя, "ТелОрганизации") > 0 Тогда
					
					Для Ном = 1 По СтрДлина(Область.Значение) Цикл
						
						МакетПечатнойФормы.Области[Область.Имя + Ном].Значение = Сред(Область.Значение, Ном, 1);
						
					КонецЦикла;
					
					Продолжить;
					
				ИначеЕсли СтрЧислоВхождений(Область.Имя, "НомерКорректировки") > 0 Тогда
					
					ЗначениеОбласти = Формат(Область.Значение, "ЧЦ=3; ЧВН=; ЧН=");
					
					Для Ном = 1 По СтрДлина(ЗначениеОбласти) Цикл
						
						МакетПечатнойФормы.Области[Область.Имя + Ном].Значение = Сред(ЗначениеОбласти, Ном, 1);
						
					КонецЦикла;
					
					Продолжить;	
					
				КонецЕсли;	
				
			ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Раздел12" Тогда
				
				Если СтрЧислоВхождений(Область.Имя, "П000200001001") > 0 Тогда
					
					Для Ном = 1 По СтрДлина(Область.Значение) Цикл
						
						МакетПечатнойФормы.Области[Область.Имя + "_" + Ном].Значение = Сред(Область.Значение, Ном, 1);
						
					КонецЦикла;
					
					Продолжить;
					
				КонецЕсли;		
				
			КонецЕсли;
			
			Если НЕ Область.Имя = "НомерПачки" Тогда
				МакетПечатнойФормы.Области[Область.Имя].Значение = Область.Значение;
			КонецЕсли;
						
		КонецЕсли;
		
	КонецЦикла;
		
	Для Каждого Реквизит Из ОбщиеРеквизитыРазделов Цикл
		
		Постфикс = 1;
		Разделитель = Ложь;
		Если Реквизит.Ключ = "НомРег" Тогда
			НаименованиеОбласти = "НомРег";
		ИначеЕсли Реквизит.Ключ = "НомСтр" Тогда
			НаименованиеОбласти = "НомСтр";
		ИначеЕсли Реквизит.Ключ = "ДатаПодписи" Тогда
			НаименованиеОбласти = "ДатаПодписи";
		Иначе
			НаименованиеОбласти = Реквизит.Ключ;
		КонецЕсли;
		
		Если НЕ МакетПечатнойФормы.Области.Найти(НаименованиеОбласти + Постфикс) = Неопределено Тогда
			
			Для Ном = 1 По Реквизит.Значение.Количество() Цикл
				МакетПечатнойФормы.Области[НаименованиеОбласти + ?(Разделитель, "_", "") + Ном].Значение = Реквизит.Значение[Ном - 1];
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
			
КонецПроцедуры

&НаКлиенте
Функция ДобавитьРеквизит(Текст, ДобСтрока, Префикс)
     
	Если ЗначениеЗаполнено(ДобСтрока) Тогда
		Текст = Текст + Префикс + ДобСтрока;
	КонецЕсли;
	
	Возврат Текст;
     
КонецФункции

&НаСервере
Процедура ОчиститьПоказателиОтчетаЗаполняемыеИзИБНаСервере(НазванияМногостраничныхРазделовДляУдаления = "")
	
	РегламентированнаяОтчетностьКлиентСервер.ОчиститьПоказателиОтчетаЗаполняемыеИзИБ(ЭтаФорма, НазванияМногостраничныхРазделовДляУдаления);
		
КонецПроцедуры

&НаСервере
Процедура ОчисткаРегламентированногоОтчетаНаСервере(ИмяСтраницы, ЗапускатьОтдельнуюОбработкуПослеОчисткиЛиста, РежимОчистки, Многостраничность, КолВоСтраницВРазделе) Экспорт
	
	УдалятьсяВсеДопЭкземпляры = Ложь;
	
	Если СтрНайти(РежимОчистки, "ОчиститьТекущийРаздел") > 0 Тогда
		
		Если (Многостраничность) И (КолВоСтраницВРазделе > 1) Тогда
			
			ОчиститьПоказателиОтчетаЗаполняемыеИзИБНаСервере(ИмяСтраницы);
			
			РегламентированнаяОтчетность.ПолучитьСведенияОПоказателяхОтчета(ЭтаФорма);
			
			УдалятьсяВсеДопЭкземпляры = Истина;
			
		Иначе
			
			ОчиститьТабличноеПолеНаСервере(ИмяСтраницы);
			
		КонецЕсли;
		
		СформироватьДеревоРазделовОтчетаНаСервере();
		
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
		
	ИначеЕсли СтрНайти(РежимОчистки, "ОчиститьТекущийЭкземплярМногостраничногоРаздела") > 0 Тогда
		
		ОчиститьТабличноеПолеНаСервере(ИмяСтраницы);
		
	КонецЕсли;
	
	Если ИмяСтраницы = "Титульный" Тогда
		Если Элементы.Найти("ДатаПодписи") = Неопределено Тогда
			Область = ТабличныйДокумент.Области.Найти("ДатаПодписи");
			Если НЕ Область = Неопределено Тогда
				Если ТипЗнч(Область.Значение) = Тип("Строка") Тогда
					ДатаПодписи = Лев(СтрЗаменить(Область.Значение, ".", ""), 8);
				ИначеЕсли ТипЗнч(Область.Значение) = Тип("Дата") Тогда
					Если ЗначениеЗаполнено(Область.Значение) Тогда
						ДатаПодписи = Лев(СтрЗаменить(Формат(Область.Значение, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
					Иначе
						ДатаПодписи = "        ";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиентСервер.ПослеОчисткиРегламентированногоОтчета(ЭтаФорма, ИмяСтраницы, ЗапускатьОтдельнуюОбработкуПослеОчисткиЛиста);
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ОбластьИмя = Область.Имя;
	
	Если СтрЧислоВхождений(ОбластьИмя, "ДобавитьСтраницу") > 0 Тогда
		
		ДобавитьСтраницу("");
		
	ИначеЕсли СтрЧислоВхождений(ОбластьИмя, "УдалитьСтраницу") > 0 И Область.Гиперссылка Тогда
		
		УдалитьСтраницу("");
		
	ИначеЕсли СтрЧислоВхождений(ОбластьИмя, "ДобавитьСтроку") > 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ДобавитьСтроку("");
		
	ИначеЕсли СтрЧислоВхождений(ОбластьИмя, "УдалитьСтроку") > 0 И Область.Гиперссылка Тогда
		
		СтандартнаяОбработка = Ложь;
		
		УдалитьСтроку("");
		
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьКлиент.ВыбраннаяОбластьРегламентированногоОтчетаНеВерна(ЭтаФорма, Область, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(ОбластьИмя, "ДокУпПред") > 0 Тогда
		
		СтандартнаяОбработка = Ложь;		
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СтруктураДокумента", мСтруктураДокУпПред);
		
		ФормаВводаДокументПредставителя = ПолучитьФорму("Отчет.РегламентированныйОтчетРСВ1.Форма.ФормаВводаДокументПредставителя", ПараметрыФормы);
		
		ДополнительныеПараметры = Новый Структура("Область, ОбластьИмя, Элемент", Область, ОбластьИмя, Элемент);
		ОписаниеОповещения = Новый ОписаниеОповещения("ТабличныйДокументВыборЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ФормаВводаДокументПредставителя.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВводаДокументПредставителя.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВводаДокументПредставителя.Открыть();
	Иначе
		ПараметрВводаПоля = СвойстваПоказателей.НайтиСтроки(Новый Структура("Показатель", ОбластьИмя));
		Если ПараметрВводаПоля.Количество() = 0 Тогда
			
			ПараметрВводаПоля = Неопределено;
			
			Для Каждого Стр из СвойстваПоказателей Цикл
				Если Лев(Область.Имя, СтрДлина(Стр.Показатель)) = Стр.Показатель Тогда
					ПараметрВводаПоля = Стр;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ПараметрВводаПоля = ПараметрВводаПоля[0];
		КонецЕсли;
		
		Если ПараметрВводаПоля <> Неопределено И ПараметрВводаПоля.ТаблицаЗначений.Количество() > 0 Тогда
			
			
			ВвестиПоказатель(Элемент, Область, ПараметрВводаПоля.Показатель, Ложь, ПараметрВводаПоля.ТекстПриВыборе, ПараметрВводаПоля.ТаблицаЗначений, СтандартнаяОбработка);
			
			
		КонецЕсли;
		
	КонецЕсли;
	
		
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Область = ДополнительныеПараметры.Область;
	ОбластьИмя = ДополнительныеПараметры.ОбластьИмя;
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если Результат <> Неопределено Тогда
		
		мСтруктураДокУпПред = Результат;    			
		Текст = "";
		
		Текст = ДобавитьРеквизит(Текст, мСтруктураДокУпПред.НаименованиеУдостоверяющего, "");
		Текст = ДобавитьРеквизит(Текст, мСтруктураДокУпПред.СерияРимскиеЦифры, " ");
		Текст = ДобавитьРеквизит(Текст, мСтруктураДокУпПред.СерияРусскиеБуквы, " ");
		Текст = ДобавитьРеквизит(Текст, мСтруктураДокУпПред.НомерУдостоверяющего, " № ");
		Текст = ДобавитьРеквизит(Текст, Формат(мСтруктураДокУпПред.ДатаВыдачи,"ДФ=dd.MM.yyyy"), " от ");
		Текст = ДобавитьРеквизит(Текст, мСтруктураДокУпПред.КемВыдан, " выдан: ");
		
		ТабличныйДокумент.Области.ДокУпПред.Значение = Текст;		
		Модифицированность = Истина;
		
	КонецЕсли;
	ПараметрВводаПоля = СвойстваПоказателей.НайтиСтроки(Новый Структура("Показатель", ОбластьИмя));
	Если ПараметрВводаПоля.Количество() = 0 Тогда
		
		ПараметрВводаПоля = Неопределено;
		
		Для Каждого Стр из СвойстваПоказателей Цикл
			Если Лев(Область.Имя, СтрДлина(Стр.Показатель)) = Стр.Показатель Тогда
				ПараметрВводаПоля = Стр;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ПараметрВводаПоля = ПараметрВводаПоля[0];
	КонецЕсли;
	
	Если ПараметрВводаПоля <> Неопределено И ПараметрВводаПоля.ТаблицаЗначений.Количество() > 0 Тогда
		
		
		ВвестиПоказатель(Элемент, Область, ПараметрВводаПоля.Показатель, Ложь, ПараметрВводаПоля.ТекстПриВыборе, ПараметрВводаПоля.ТаблицаЗначений, Ложь);
		
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	Модифицированность = Истина;
	
	СтруктураРеквизитовФормы.ДанныеОтчетаИзмененыВручную = Истина;

	ИмяРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;

	ИмяОбласти = Область.Имя;;
	
	Если ИмяРаздела = "Титульный"
	   И Область.Имя = "НомерКорректировки" Тогда
		
		НомерКорректировки = ТабличныйДокумент.Области.НомерКорректировки.Значение;
					
		СтруктураРеквизитовФормы.ВидДокумента = ?(Область.Значение = 0, 0, 1);
		
		УстановитьВидимостьМенюВыгрузкиИОтправки();
		
		РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(ДатаПодписи,
																	 СтруктураРеквизитовФормы,
																	 ТабличныйДокумент.Области.ОКВЭД.Значение);
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
	Если ИмяРаздела = "Титульный"
	   И Область.Имя = "НомерПачки" Тогда
			
		НомерПачки = ТабличныйДокумент.Области.НомерПачки.Значение;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
	Если ИмяРаздела = "Титульный"
	   И Область.Имя = "ДатаПодписи" Тогда
	   
		ДатаПодписи = ТабличныйДокумент.Области.ДатаПодписи.Значение;
	   
		ЗаполнитьДатуВЯчейкахНаКлиенте();
		
		ЗаполнитьСведенияОбОрганизации(Истина);
		
		Модифицированность = Истина;
		
	КонецЕсли;	
	
	Если ИмяРаздела = "Раздел12" Тогда
		
		ТаблицаРаздела = Неопределено;
		
		мСтруктураМногостраничныхРазделов.Свойство(ИмяРаздела, ТаблицаРаздела);
		СтраницаРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета;
		ТаблицаРаздела  = ЭтаФорма[ТаблицаРаздела];
		ДанныеСтраницы  = ТаблицаРаздела[СтраницаРаздела-1].Данные[0].Значение;
		
		Если ДанныеСтраницы.Свойство(ИмяОбласти) Тогда
			ДанныеСтраницы[ИмяОбласти] = Область.Значение;
		КонецЕсли;	
		
		РасчетВСтруктуреНаСервере(ИмяРаздела, ИмяОбласти);

	КонецЕсли;

	Если  ИмяРаздела = "Раздел30" 
	  ИЛИ ИмяРаздела = "Раздел41" 
	  ИЛИ ИмяРаздела = "Раздел42" 
	  ИЛИ ИмяРаздела = "Раздел43" 
	  ИЛИ ИмяРаздела = "Раздел50" Тогда
		
		ПозицияПодстроки = СтрНайти(ИмяОбласти, "_");
		
		Если ПозицияПодстроки > 0 Тогда
			ИмяОбласти = Лев(ИмяОбласти, ПозицияПодстроки - 1);
		КонецЕсли;
				
		РасчетНаКлиенте(ИмяРаздела, ИмяОбласти);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриАктивизацииОбласти(Элемент)
	
	Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Доступность = Ложь;
	Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Доступность  = Ложь;
	
	Если СтрЧислоВхождений(Элемент.ТекущаяОбласть.Имя, "П0004100010") > 0
	   И СтрЧислоВхождений(Элемент.ТекущаяОбласть.Имя, "УдалитьСтроку") = 0 Тогда
		
		Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Доступность = Истина;
		
		ПозицияЗнакаПодчеркивания = СтрНайти(Элемент.ТекущаяОбласть.Имя, "_");
		
		Если НЕ ПозицияЗнакаПодчеркивания = Неопределено Тогда
			
			КодОбласти = Лев(Элемент.ТекущаяОбласть.Имя, ПозицияЗнакаПодчеркивания);
			
			Если НЕ ТабличныйДокумент.Области.Найти(КодОбласти + "2") = Неопределено Тогда
				Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Доступность = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьМенюВыгрузкиИОтправки()
	
	Если НЕ РегламентированнаяОтчетностьКлиентСерверПереопределяемый.ИмяОсновнойФормыРСВ1() = "ОсновнаяФорма"
	   И СтруктураРеквизитовФормы.ВидДокумента = 0 Тогда
	   
		Элементы.Выгрузить.Видимость                     = Ложь;
		Элементы.ОтправитьВКонтролирующийОрган.Видимость = Ложь;
		Элементы.ПроверитьВыгрузку.Видимость             = Ложь;
		Элементы.ПроверитьВИнтернете.Видимость           = Ложь;
		
		Если НЕ СтруктураРеквизитовФормы.НеОтображатьПредупреждение Тогда
			Элементы.Предупреждение.Видимость = Истина;
		Иначе
			Элементы.Предупреждение.Видимость = Ложь;
		КонецЕсли;
		
	Иначе
		
		Элементы.Предупреждение.Видимость                = Ложь;
		Элементы.Выгрузить.Видимость                     = Истина;
		Элементы.ОтправитьВКонтролирующийОрган.Видимость = Истина;
		Элементы.ПроверитьВыгрузку.Видимость             = Истина;
		Элементы.ПроверитьВИнтернете.Видимость           = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАвтоНаСервере()
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела, Ложь);
	
	ЗаполнитьПустыеСтруктурыДанных();	
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			СтруктураРеквизитовФормы.Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	ТаблицаСтраницРаздела12 = Новый ТаблицаЗначений;
	ТаблицаСтраницРаздела12.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ТаблицаСтраницРаздела12.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ТаблицаСтраницРаздела12.Колонки.Добавить("Данные", Новый ОписаниеТипов("СписокЗначений"));
	ТаблицаСтраницРаздела12.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрТаблЗнач Из ТаблицаСтраницыРазделаРаздел12 Цикл
		
		Стр = ТаблицаСтраницРаздела12.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		СтрокаСписка = Новый СписокЗначений();
		СтрокаСписка.Вставить(0, СтрТаблЗнач.Данные[0].Значение);
		Стр.Данные = СтрокаСписка;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	Контейнер = Новый Структура();
	Контейнер.Вставить("Титульный", СтруктураДанныхТитульный);
	Контейнер.Вставить("Раздел12",  ТаблицаСтраницРаздела12);
	Контейнер.Вставить("Раздел30",  СтруктураДанныхРаздел30);
	Контейнер.Вставить("Раздел41",  СтруктураДанныхРаздел41);
	Контейнер.Вставить("Раздел41_ДанныеДопСтрок", ДанныеФормыВЗначение(П0004100010, Тип("ТаблицаЗначений")));
	Контейнер.Вставить("Раздел42",  СтруктураДанныхРаздел42);
	Контейнер.Вставить("Раздел43",  СтруктураДанныхРаздел43);
	Контейнер.Вставить("Раздел50",  СтруктураДанныхРаздел50);
	
	ЭтаФормаИмя = ЭтаФорма.ИмяФормы;
	Если СтрЧислоВхождений(ЭтаФормаИмя, "ВнешнийОтчет.") > 0 Тогда
		ЭтаФормаИмя = СтрЗаменить(ЭтаФормаИмя, "ВнешнийОтчет.", "");
	ИначеЕсли СтрЧислоВхождений(ЭтаФормаИмя, "Отчет.") > 0 Тогда
		ЭтаФормаИмя = СтрЗаменить(ЭтаФормаИмя, "Отчет.", "");
	КонецЕсли;
	ЭтаФормаИмя = Лев(ЭтаФормаИмя, СтрНайти(ЭтаФормаИмя, ".Форма.") - 1);
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ЭтаФормаИмя, Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") + 7), ПараметрыОтчета, Контейнер);
	
	ЭтаФорма.ТаблицаСтраницыРазделаРаздел12.Очистить();
	
	Для Каждого СтрТаблЗнач Из Контейнер.Раздел12 Цикл
		
		Стр = ТаблицаСтраницыРазделаРаздел12.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		Стр.Данные.Вставить(0, СтрТаблЗнач.Данные[0].Значение);
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	ЗначениеВДанныеФормы(Контейнер.Раздел41_ДанныеДопСтрок, ЭтаФорма.П0004100010);

	ЗаполнитьПустыеСтруктурыДанных();
	
	Если П0004100010.Количество() = 0 Тогда
		П0004100010.Добавить();
	КонецЕсли; 
	
	ОбновитьСтруктуруДанныхМногострочныхРазделов();
	
	ВывестиМакетВТаблДокНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела, 1);
		
	РасчетНаСервере();
	
	СтруктураРеквизитовФормы.ДанныеОтчетаИзмененыВручную = Ложь;
	
	Модифицированность = Истина;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтруктуруДанныхМногострочныхРазделов()
	
	СохрТабличныйДокумент = Новый ТабличныйДокумент;
	
	СохрТабличныйДокумент.Вывести(ТабличныйДокумент);
	
	Для Каждого Раздел Из мСвойстваРазделовДекларации.ПолучитьЭлементы() Цикл
		
		Если Раздел.МногострочностьВРазделе.Количество() > 0 Тогда
		    			
			ВывестиМакетВТаблДокНаСервере(Раздел.ИмяСтраницы, 0);
			
			СохранитьДанныеРаздела(Раздел.ИмяСтраницы, Ложь);
			
		КонецЕсли;	
			
	КонецЦикла;	
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(СохрТабличныйДокумент);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ПФР");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ПФР");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ПФР");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ПФР");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ПФР");
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОтправкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьВКонтролирующийОрганЗавершение", ЭтотОбъект);
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрганЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтаФорма, "ПФР");
	
КонецПроцедуры

&НаСервере
Функция ОбъектОтчета(ЭтаФормаИмя)
	
	Если мОбъектОтчета = Неопределено Тогда 
		мОбъектОтчета = РегламентированнаяОтчетностьВызовСервера.ОбъектОтчета(ЭтаФормаИмя);
	КонецЕсли;
	
	Возврат мОбъектОтчета;
	
КонецФункции

&НаКлиенте
Процедура  ЗаписатьИЗакрыть(Команда)
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	Оповещение = Новый ОписаниеОповещения("ПослеСохраненияФормыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьНаКлиенте(, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ДополнительныеПараметры.Форма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьОтчетИОткрытьФормуПрисоединенныеФайлы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры