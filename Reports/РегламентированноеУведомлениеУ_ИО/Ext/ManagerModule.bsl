#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеУ_ИО.Форма.Форма2015_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2015_1";
	Стр.ОписаниеФормы = "У-ИО/приказ ФНС от 24.04.2015 № ММВ-7-14/177@";
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Возврат ПечатьСразу_Форма2015_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Возврат СформироватьМакет_Форма2015_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2015_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2015_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция СформироватьМакет_Форма2015_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УведомлениеОСпецрежимах_"+Объект.ВидУведомления.Метаданные().Имя;
	
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("ПФ_MXL_Форма2015_1");
	СтруктураПараметров = Объект.ДанныеУведомления.Получить();
	ПараметрыМакета = МакетУведомления.Параметры;
	
	НомерСтраницы = 2 + ?(РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация),0,1);
	Титульный = СтруктураПараметров.Титульный[0];
	СведФЛ = СтруктураПараметров.СведФЛ;
	СведРО = СтруктураПараметров.СведРО;
	СведИО = СтруктураПараметров.СведИО;
	СведУч = СтруктураПараметров.СведУч;
	СведИС = СтруктураПараметров.СведИС;
	СведИСУч = СтруктураПараметров.СведИСУч;
	МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть;
	
#Область ПечатьЛистФЛ
	Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		СведФЛ = СведФЛ[0];
		ОбластьЛистФЛ = МакетУведомления.ПолучитьОбласть("ЛистФЛ");
		ПараметрыМакета = ОбластьЛистФЛ.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.ФАМИЛИЯ_ИП, "Фамилия_", ПараметрыМакета, 35);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.ИМЯ_ИП, "Имя_", ПараметрыМакета, 35);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.ОТЧЕСТВО_ИП, "Отчество_", ПараметрыМакета, 35);
		ПараметрыМакета.Пол = СведФЛ.Пол;
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(СведФЛ.ДатаРождения, "ДатаРожд_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.МестоРождения, "МестоРожд_", ПараметрыМакета, 80);
		ПараметрыМакета.Гражданство = СведФЛ.Гражданство;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КодСтрИностранец, "КодСтрИнГр_", ПараметрыМакета, 3);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КодВидДок1, "КодВидДок_", ПараметрыМакета, 2);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.СерНомДок1, "СерНомДок_", ПараметрыМакета, 19);
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(СведФЛ.ДатаВыдочиДок1, "ДатаВыдачиДок_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КемВыданДок1, "ВыданДок_", ПараметрыМакета, 35);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КодВидДок2, "КодВидДокРег_", ПараметрыМакета, 2);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.СерНомДок2, "СерНомДокРег_", ПараметрыМакета, 19);
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(СведФЛ.ДатаВыдочиДок2, "ДатаВыдачиДокРег_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КемВыданДок2, "ВыданДокРег_", ПараметрыМакета, 35);
		
		ПараметрыМакета.ПрМЖ = СведФЛ.МЖРФ;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Индекс, "Индекс_", ПараметрыМакета, 6);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КодРегиона, "КодСубъекта_", ПараметрыМакета, 2);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Район, "Район_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Город, "Город_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.НаселенныйПункт, "НаселенныйПункт_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Улица, "Улица_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Дом, "Дом_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Корпус, "Корпус_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Квартира, "Квартира_", ПараметрыМакета, 8);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КодСтраныРегистрации, "КодСтрИнГрМЖ_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.МЖИнГос, "МестоПрож_", ПараметрыМакета, 120);
		
		ПечатнаяФорма.Вывести(ОбластьЛистФЛ);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
#КонецОбласти

#Область ПечатьЛистА
	НомЛистА = 1;
	Для Каждого Свед Из СведИО Цикл
		Если Не ЗначениеЗаполнено(Свед.ИО_Номер) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОбластьЛистА = МакетУведомления.ПолучитьОбласть("ЛистА");
		ПараметрыМакета = ОбластьЛистА.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), "СТР_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомЛистА, "ЧЦ=3; ЧВН=; ЧГ="), "СТРА_", ПараметрыМакета, 3);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Свед.ИО_Номер, "ЧЦ=5; ЧВН=; ЧГ="), "НомА_", ПараметрыМакета, 5);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИО_ПолноеНаименование_RUS, "ОрганизацияНазваниеRUS_", ПараметрыМакета, 160);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИО_ПолноеНаименование_EN, "ОрганизацияНазваниеEN_", ПараметрыМакета, 160);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.КодСтранаРегистрации, "КодСтр_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.РегНом1, "РегНомСтрРег_", ПараметрыМакета, 80);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.КодНом1, "КодНплСтрРег_", ПараметрыМакета, 80);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИнАдр1, "АдрСтрРег_", ПараметрыМакета, 120);
		ПараметрыМакета.ПрУчастие = Свед.ПрУч1;
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Свед.ДатаНач1, "ДатаВознПрава_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Свед.ДатаКон1, "ДатаУтрПрава_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(Свед.ДоляУчастия1, 3, 5, "ДоляУчастия_", ПараметрыМакета);
		
		ПечатнаяФорма.Вывести(ОбластьЛистА);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерСтраницы = НомерСтраницы + 1;
		НомЛистА = НомЛистА + 1;
	КонецЦикла;
#КонецОбласти

#Область ПечатьЛистБ
	НомЛистБ = 1;
	Для Каждого Свед Из СведРО Цикл
		Если Не ЗначениеЗаполнено(Свед.РО_Номер) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОбластьЛистБ = МакетУведомления.ПолучитьОбласть("ЛистБ");
		ПараметрыМакета = ОбластьЛистБ.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), "СТР_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомЛистБ, "ЧЦ=3; ЧВН=; ЧГ="), "СТРА_", ПараметрыМакета, 3);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Свед.РО_Номер, "ЧЦ=5; ЧВН=; ЧГ="), "НомА_", ПараметрыМакета, 5);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ОГРН2, "ОГРНРО_", ПараметрыМакета, 13);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИНН2, "ИННРО_", ПараметрыМакета, 10);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.КПП2, "КППРО_", ПараметрыМакета, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.РО_ПолноеНаименование, "ПолнНазвРО_", ПараметрыМакета, 160);
		
		ПечатнаяФорма.Вывести(ОбластьЛистБ);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерСтраницы = НомерСтраницы + 1;
		НомЛистБ = НомЛистБ + 1;
	КонецЦикла;
#КонецОбласти

#Область ПечатьЛистВ
	НомЛистВ = 1;
	НомЛистВ1 = 1;
	Для Каждого Свед Из СведИС Цикл
		Если Не ЗначениеЗаполнено(Свед.НомерСтруктуры) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОбластьЛистВ = МакетУведомления.ПолучитьОбласть("ЛистВ");
		ПараметрыМакета = ОбластьЛистВ.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), "СТР_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомЛистВ, "ЧЦ=3; ЧВН=; ЧГ="), "СТРА_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Свед.НомерСтруктуры, "ЧЦ=5; ЧВН=; ЧГ="), "НомА_", ПараметрыМакета, 5);
		ПараметрыМакета.ОргФормаКод = Свед.ПрСтр;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИС_ПолноеНаименование_RUS, "ОрганизацияНазваниеRUS_", ПараметрыМакета, 160);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИС_ПолноеНаименование_EN, "ОрганизацияНазваниеEN_", ПараметрыМакета, 160);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИС_ДокНаименование_RUS, "НаимРеквДокRUS_", ПараметрыМакета, 80);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИС_ДокНаименование_EN, "НаимРеквДокEN_", ПараметрыМакета, 80);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.КодСтраныСтр, "КодСтр_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Свед.ДатаРегСтр, "ДатаРегСтр_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.РегНомСтр, "РегНомИд_", ПараметрыМакета, 20);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.СведСтр, "ИныеСвед_", ПараметрыМакета, 240);
		
		ПечатнаяФорма.Вывести(ОбластьЛистВ);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерСтраницы = НомерСтраницы + 1;
		НомЛистВ = НомЛистВ + 1;
		
		СведИСУчТек = СведИСУч.НайтиСтроки(Новый Структура("UID_parent", Свед.UID));
		Для Каждого ЛистВ1 Из СведИСУчТек Цикл
			ОбластьЛистВ1 = МакетУведомления.ПолучитьОбласть("ЛистВ1");
			ПараметрыМакета = ОбластьЛистВ1.Параметры;
			
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), "СТР_", ПараметрыМакета, 3);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомЛистВ1, "ЧЦ=3; ЧВН=; ЧГ="), "СТРА_", ПараметрыМакета, 3);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Свед.НомерСтруктуры, "ЧЦ=5; ЧВН=; ЧГ="), "НомА_", ПараметрыМакета, 5);
			ПараметрыМакета.УчКод = Формат(ЛистВ1.ПрУч, "ЧН=0");
			ПараметрыМакета.КонКод = Формат(ЛистВ1.ПрКон, "ЧН=0");
			ПараметрыМакета.ДохКод = Формат(ЛистВ1.ПрДох, "ЧН=0");
			ПараметрыМакета.УчИнСтр = ЛистВ1.УчИнСтр;
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ЛистВ1.ИС_Статус_RUS, "ОрганизацияНазваниеRUS_", ПараметрыМакета, 160);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ЛистВ1.ИС_Статус_EN, "ОрганизацияНазваниеEN_", ПараметрыМакета, 160);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ЛистВ1.ИС_НаимДок, "ИныеСвед_", ПараметрыМакета, 280);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ЛистВ1.ИС_Основания, "Описание_", ПараметрыМакета, 120);
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(ЛистВ1.ДатаНачИС, "ДатаВознУч_", ПараметрыМакета);
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(ЛистВ1.ДатаКонИС, "ДатаКонУч_", ПараметрыМакета);
			Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(ЛистВ1.ДоляУчастияИС, 3, 5, "ДоляУч_", ПараметрыМакета);
			
			ПечатнаяФорма.Вывести(ОбластьЛистВ1);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			НомерСтраницы = НомерСтраницы + 1;
			НомЛистВ1 = НомЛистВ1 + 1;
		КонецЦикла;
	КонецЦикла;
#КонецОбласти

#Область ПечатьЛистГ
	НомЛистГ = 1;
	Для Каждого Свед Из СведУч Цикл
		Если Не ЗначениеЗаполнено(Свед.НомерУчастника) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОбластьЛистГ = МакетУведомления.ПолучитьОбласть("ЛистГ_Верх");
		ОбластьЛистГМнг = МакетУведомления.ПолучитьОбласть("ЛистГ_Мнг");
		ОбластьНиз = МакетУведомления.ПолучитьОбласть("ЛистГ_Низ");
		
		ПараметрыЛистГ = ОбластьЛистГ.Параметры;
		МногострочнаяЧастьТекущая = МногострочнаяЧасть.НайтиСтроки(Новый Структура("UID", Свед.UID));
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыЛистГ, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыЛистГ, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Сред(Свед.НомерУчастника, 4), "НомА_", ПараметрыЛистГ, 5);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ПолноеНаименование, "ПолнНазвВ_", ПараметрыЛистГ, 160);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Свед.НомерГруппы, "ЧЦ=5; ЧВН=; ЧГ="), "НомГрВ_", ПараметрыЛистГ, 5);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(Свед.ДоляКосвУчастия, 3, 5, "ДолУчКосвВ_", ПараметрыЛистГ);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(Свед.ДоляКосвУчастияГр, 3, 5, "ДолУчКосвГрВ_", ПараметрыЛистГ);
		
		СтрокВМногострочке = МногострочнаяЧастьТекущая.Количество();
		КоличествоЛистовГ = Цел(СтрокВМногострочке / 15) + ?(СтрокВМногострочке % 15 = 0,0,1);
		
		Для Инд = 0 По КоличествоЛистовГ - 1 Цикл
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), "СТР_", ПараметрыЛистГ, 3);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомЛистГ, "ЧЦ=3; ЧВН=; ЧГ="), "СТРА_", ПараметрыЛистГ, 3);
			ПечатнаяФорма.Вывести(ОбластьЛистГ);
			
			Для ИндВн = 0 По 14 Цикл
				ОбластьЛистГМнг = МакетУведомления.ПолучитьОбласть("ЛистГ_Мнг");
				ПарамМнг = ОбластьЛистГМнг.Параметры;
				Сдвиг = Инд * 15 + ИндВн;
				
				Если Сдвиг < СтрокВМногострочке Тогда 
					НУ = СтрЗаменить(МногострочнаяЧастьТекущая[Сдвиг].НомерУчастника,"-","");
					Если ЗначениеЗаполнено(НУ) Тогда 
						Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(НУ, "НомУчГ_", ПарамМнг, 7);
						Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(МногострочнаяЧастьТекущая[Сдвиг].ДоляПрУчастия, 3, 5, "ДоляПрямУчГ_", ПарамМнг);
						Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(МногострочнаяЧастьТекущая[Сдвиг].ДоляКосвУчастия, 3, 5, "ДоляКосвУчГ_", ПарамМнг);
					КонецЕсли;
				КонецЕсли;
				ПечатнаяФорма.Вывести(ОбластьЛистГМнг);
			КонецЦикла;
			
			ПечатнаяФорма.Вывести(ОбластьНиз);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			НомЛистГ = НомЛистГ + 1;
			НомерСтраницы = НомерСтраницы + 1;
		КонецЦикла;
	КонецЦикла;
#КонецОбласти

#Область ПечатьЛистТитульный
	ОбластьЛистТитульный = МакетУведомления.ПолучитьОбласть("Титульный");
	ПараметрыМакета = ОбластьЛистТитульный.Параметры;
	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.КОД_НО, "КодНО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Формат(Титульный.НомерКорректировки, "ЧН=0"), "НомКорр_", ПараметрыМакета, 3);
	ПараметрыМакета.Нпл = Титульный.ПрНпл;
	ПараметрыМакета.Основание = Титульный.Основание;
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.НАИМЕНОВАНИЕ_ОРГАНИЗАЦИИ, "ПолнНазвВ_", ПараметрыМакета, 160);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ОГРН, "ОГРН_", ПараметрыМакета, 13);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(НомерСтраницы - 1, "Страниц_", ПараметрыМакета, 3);
	
	ПараметрыМакета.ПРИЗНАК_НП_ПОДВАЛ = Титульный.ПРИЗНАК_НП_ПОДВАЛ;
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ИНН_ПОДПИСАНТА, "ИНН_ПОДПИСАНТА_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	ПараметрыМакета.EMAIL_ПОДПИСАНТА = Титульный.EMAIL_ПОДПИСАНТА;
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Титульный.ДАТА_ПОДПИСИ, "ДатаПодписи_", ПараметрыМакета);
	
	ПечатнаяФормаИтоговая = Новый ТабличныйДокумент;
	ПечатнаяФормаИтоговая.АвтоМасштаб = Истина;
	ПечатнаяФормаИтоговая.ПолеСверху = 0;
	ПечатнаяФормаИтоговая.ПолеСнизу = 0;
	ПечатнаяФормаИтоговая.ПолеСлева = 0;
	ПечатнаяФормаИтоговая.ПолеСправа = 0;
	ПечатнаяФормаИтоговая.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УведомлениеОСпецрежимах_"+Объект.ВидУведомления.Метаданные().Имя;
	
	ПечатнаяФормаИтоговая.Вывести(ОбластьЛистТитульный);
	ПечатнаяФормаИтоговая.ВывестиГоризонтальныйРазделительСтраниц();
	ПечатнаяФормаИтоговая.Вывести(ПечатнаяФорма);
	ПечатнаяФорма = Неопределено;
#КонецОбласти

	Возврат ПечатнаяФормаИтоговая;
КонецФункции

Функция ПечатьСразу_Форма2015_1(Объект)
	
	ПечатнаяФорма = СформироватьМакет_Форма2015_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
	
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2015_1(СведенияОтправки)
	Префикс = "UT_UVUCHINO";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Процедура Проверить_Форма2015_1(Данные, УникальныйИдентификатор)
	Титульный = Данные.Титульный[0];
	
	Ошибок = 0;
	Если (Не ЗначениеЗаполнено(Титульный.ПрНпл)) Или (Не ЗначениеЗаполнено(Титульный.Основание)) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнен код налогоплательщика, основание подачи уведомления на титульном листе", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	НомСтр = 1;
	Для Каждого СведИО Из Данные.СведИО Цикл 
		Если ЗначениеЗаполнено(СведИО.ИО_Номер) И
			((Не ЗначениеЗаполнено(СведИО.ИО_ПолноеНаименование_RUS))
			Или (Не ЗначениеЗаполнено(СведИО.ИО_ПолноеНаименование_EN))
			Или (Не ЗначениеЗаполнено(СведИО.КодСтранаРегистрации))
			Или (Не ЗначениеЗаполнено(СведИО.РегНом1))
			Или (Не ЗначениеЗаполнено(СведИО.ИнАдр1))
			Или (Не ЗначениеЗаполнено(СведИО.ПрУч1))
			Или (Не ЗначениеЗаполнено(СведИО.ДатаНач1))
			Или (Не ЗначениеЗаполнено(СведИО.ДоляУчастия1))) Тогда 
		
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомСтр+" со сведениями об иностранных организациях не заполнены обязательные показатели:"+Символы.ПС+"строки 2, 3, 4, 6, 7, 8, 9", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
		КонецЕсли;
		НомСтр = НомСтр + 1;
	КонецЦикла;
	
	НомСтр = 1;
	Для Каждого СведРО Из Данные.СведРО Цикл 
		Если ЗначениеЗаполнено(СведРО.РО_Номер) И
			((Не ЗначениеЗаполнено(СведРО.ОГРН2))
			Или (Не ЗначениеЗаполнено(СведРО.ИНН2))
			Или (Не ЗначениеЗаполнено(СведРО.КПП2))
			Или (Не ЗначениеЗаполнено(СведРО.РО_ПолноеНаименование))) Тогда 
		
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомСтр+" со сведениями о российских организациях не заполнены обязательные показатели:"+Символы.ПС+"строки 2, 3, 4, 5", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
		КонецЕсли;
		НомСтр = НомСтр + 1;
	КонецЦикла;
	
	НомСтр = 0;
	Для Каждого СведИС Из Данные.СведИС Цикл 
		Если Не ЗначениеЗаполнено(СведИС.НомерСтруктуры) Тогда 
			Продолжить;
		КонецЕсли;
		НомСтр = НомСтр + 1;
		
		Если (Не ЗначениеЗаполнено(СведИС.ПрСтр))
			Или (Не ЗначениеЗаполнено(СведИС.ИС_ПолноеНаименование_RUS))
			Или (Не ЗначениеЗаполнено(СведИС.ИС_ПолноеНаименование_EN))
			Или (Не ЗначениеЗаполнено(СведИС.ИС_ДокНаименование_RUS))
			Или (Не ЗначениеЗаполнено(СведИС.ДатаРегСтр))
			Или (Не ЗначениеЗаполнено(СведИС.КодСтраныСтр)) Тогда 
		
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомСтр+" со сведениями об иностранных структурах не заполнены обязательные показатели:"+Символы.ПС+"строки 2.1, 2.2, 2.3, 2.4, 2.5", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
		КонецЕсли;
		
		СведИСУч = Данные.СведИСУч.НайтиСтроки(Новый Структура("UID_parent", СведИС.UID));
		НомСтрУч = 1;
		Для Каждого Стр Из СведИСУч Цикл 
			Если (Не ЗначениеЗаполнено(Стр.ИС_Статус_RUS))
				Или (Не ЗначениеЗаполнено(Стр.УчИнСтр))
				Или (Не ЗначениеЗаполнено(Стр.ДатаНачИС)) Тогда
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На листе В1 "+НомСтрУч+", с информацией об иностранной структуре "+НомСтр+" не заполнены обязательные показатели:"+Символы.ПС+"строки 3, 6, 7", УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			НомСтрУч = НомСтрУч + 1;
		КонецЦикла;
	КонецЦикла;
	
	НомСтр = 0;
	ТипЧисло = Новый ОписаниеТипов("Число");
	Для Каждого СведУч Из Данные.СведУч Цикл
		НомСтр = НомСтр + 1;
		Если Не ЗначениеЗаполнено(СведУч.НомерУчастника) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если (Не ЗначениеЗаполнено(СведУч.ПолноеНаименование))
			Или (Не ЗначениеЗаполнено(СведУч.ДоляКосвУчастия))
			Или (Не ЗначениеЗаполнено(СведУч.НомерГруппы))
			Или (Не ЗначениеЗаполнено(СведУч.ДоляКосвУчастияГр)) Тогда
			
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На листе Г "+НомСтр+" не заполнены обязательные показатели:"+Символы.ПС+"строки 1.2, 1.3, 2.1, 2.2", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
		КонецЕсли;
		
		СтрокиМНГ = Данные.МногострочнаяЧасть.НайтиСтроки(Новый Структура("UID", СведУч.UID));
		Для Каждого Стр Из СтрокиМНГ Цикл
			Если (Не ЗначениеЗаполнено(Стр.НомерУчастника)) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На листе Г "+НомСтр+" не заполнены номер участника (строка 2.3.1)", УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если Ошибок > 0 Тогда
		ВызватьИсключение "";
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2015_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация));
	
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Иначе 
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	КонецЕсли;
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	Проверить_Форма2015_1(Данные, УникальныйИдентификатор);
	Титульный = Данные.Титульный[0];
	
	ОсновныеСведения.Вставить("ПрНП", Титульный.ПрНпл);
	ОсновныеСведения.Вставить("ОснУвед", Титульный.Основание);
	ОсновныеСведения.Вставить("НомКорр", Формат(Титульный.НомерКорректировки, "ЧН=0"));
	ОсновныеСведения.Вставить("EmailПодп", Титульный.EMAIL_ПОДПИСАНТА);
	ОсновныеСведения.Вставить("ИННПодп", Титульный.ИНН_ПОДПИСАНТА);
	ОсновныеСведения.Вставить("ТлфПодп", Титульный.ТЕЛЕФОН);
	ОсновныеСведения.Вставить("НаимДок", Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ);
	
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		СведФЛ = Данные.СведФЛ[0];
		
		ОсновныеСведения.Вставить("ИННФЛ", Титульный.П_ИНН);
		
		ОсновныеСведения.Вставить("ПолНП", СведФЛ.Пол);
		ОсновныеСведения.Вставить("ДатаРождНП", Формат(СведФЛ.ДатаРождения, "ДФ=dd.MM.yyyy"));
		ОсновныеСведения.Вставить("МестоРождНП", СведФЛ.МестоРождения);
		ОсновныеСведения.Вставить("ПрГраждНП", СведФЛ.Гражданство);
		ОсновныеСведения.Вставить("ОКСМНП", СведФЛ.КодСтрИностранец);
		
		ОсновныеСведения.Вставить("ПрАдрРФНП", СведФЛ.МЖРФ);
		ОсновныеСведения.Вставить("ОКСМНП_Ино", СведФЛ.КодСтрИностранец);
		ОсновныеСведения.Вставить("АдрИно_НП", СведФЛ.КодСтраныРегистрации);
		
		ОсновныеСведения.Вставить("КодВидДок", СведФЛ.КодВидДок1);
		ОсновныеСведения.Вставить("СерНомДок", СведФЛ.СерНомДок1);
		ОсновныеСведения.Вставить("ДатаДокУдЛичн", Формат(СведФЛ.ДатаВыдочиДок1, "ДФ=dd.MM.yyyy"));
		ОсновныеСведения.Вставить("ВыдДок", СведФЛ.КемВыданДок1);
		ОсновныеСведения.Вставить("Доп_КодВидДок", СведФЛ.КодВидДок2);
		ОсновныеСведения.Вставить("Доп_СерНомДок", СведФЛ.СерНомДок2);
		ОсновныеСведения.Вставить("Доп_ДатаДок", Формат(СведФЛ.ДатаВыдочиДок2, "ДФ=dd.MM.yyyy"));
		ОсновныеСведения.Вставить("Доп_ВыдДок", СведФЛ.КемВыданДок2);
		
		ОсновныеСведения.Вставить("ИндексНП", СведФЛ.Индекс);
		ОсновныеСведения.Вставить("КодРегионНП", СведФЛ.КодРегиона);
		ОсновныеСведения.Вставить("РайонНП", СведФЛ.Район);
		ОсновныеСведения.Вставить("ГородНП", СведФЛ.Город);
		ОсновныеСведения.Вставить("НаселПунктНП", СведФЛ.НаселенныйПункт);
		ОсновныеСведения.Вставить("УлицаНП", СведФЛ.Улица);
		ОсновныеСведения.Вставить("ДомНП", СведФЛ.Дом);
		ОсновныеСведения.Вставить("КорпусНП", СведФЛ.Корпус);
		ОсновныеСведения.Вставить("КвартНП", СведФЛ.Квартира);
		
		ОсновныеСведения.Вставить("Фамилия", СведФЛ.Фамилия_ип);
		ОсновныеСведения.Вставить("Имя", СведФЛ.Имя_ип);
		ОсновныеСведения.Вставить("Отчество", СведФЛ.Отчество_ип);
	Иначе
		ОсновныеСведения.Вставить("НаимОргЮЛ", Титульный.НАИМЕНОВАНИЕ_ОРГАНИЗАЦИИ);
		ОсновныеСведения.Вставить("ИННЮЛЮЛ", Титульный.П_ИНН);
		ОсновныеСведения.Вставить("КППЮЛ", Титульный.П_КПП);
		ОсновныеСведения.Вставить("ОГРНЮЛ", Титульный.ОГРН);
	КонецЕсли;
	
	ОсновныеСведения.Вставить("ПрПодп",  Титульный.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("Тлф",     Титульный.ТЕЛЕФОН);
	ОсновныеСведения.Вставить("НаимДок", Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ);
	ОсновныеСведения.Вставить("ДатаДок", Формат(Титульный.ДАТА_ПОДПИСИ, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("email",   Титульный.EMAIL_ПОДПИСАНТА);
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2015_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2015_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2015_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2015_1");
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(ОсновныеСведения, СтруктураВыгрузки);
	ЗаполнитьДанными_Форма2015_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2015_1(Объект, Параметры, ДеревоВыгрузки)
	Данные = Объект.ДанныеУведомления.Получить();
	ЛистыИО = Данные.СведИО;
	ЛистыРО = Данные.СведРО;
	ЛистыИС = Данные.СведИС;
	СведИСУч = Данные.СведИСУч;
	ЛистыУч = Данные.СведУч;
	МнгУч = Данные.МногострочнаяЧасть;
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_УведУчИО = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "УведУчИО");
	
	Узел_СведИО = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_УведУчИО, "СведИО");
	Для Каждого ЛистИО Из ЛистыИО Цикл
		Если Не ЗначениеЗаполнено(ЛистИО.ИО_Номер) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_ЛистИО = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведИО);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "НомерИО", "ИО-" + Формат(ЛистИО.ИО_Номер, "ЧЦ=5; ЧВН=; ЧГ="));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "НаимОрг", ЛистИО.ИО_ПолноеНаименование_RUS);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "НаимОргЛат", ЛистИО.ИО_ПолноеНаименование_EN);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "СтрРег", ЛистИО.КодСтранаРегистрации);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "РегНомер", ЛистИО.РегНом1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "КодНПРег", ЛистИО.КодНом1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "АдрСтрРег", ЛистИО.ИнАдр1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "Участие", ЛистИО.ПрУч1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "ДатаВознУч", Формат(ЛистИО.ДатаНач1, "ДФ=dd.MM.yyyy"));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "ДоляУч", ЛистИО.ДоляУчастия1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "ДатаКонУч", Формат(ЛистИО.ДатаКон1, "ДФ=dd.MM.yyyy"));
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_СведИО);
	
	Узел_СведРос = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_УведУчИО, "СведРос");
	Для Каждого ЛистРО Из ЛистыРО Цикл
		Если Не ЗначениеЗаполнено(ЛистРО.РО_Номер) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_СведРос = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведРос);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведРос, "НомерРО", "РО-" + Формат(ЛистРО.РО_Номер, "ЧЦ=5; ЧВН=; ЧГ="));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведРос, "НаимОрг", ЛистРО.РО_ПолноеНаименование);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведРос, "ОГРН", ЛистРО.ОГРН2);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведРос, "ИННЮЛ", ЛистРО.ИНН2);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведРос, "КПП", ЛистРО.КПП2);
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_СведРос);
	
	Узел_СведИСБезЮЛ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_УведУчИО, "СведИСБезЮЛ");
	Для Каждого ЛистИС Из ЛистыИС Цикл
		Если Не ЗначениеЗаполнено(ЛистИС.НомерСтруктуры) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_СведИСБезЮЛ = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведИСБезЮЛ);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведИСБезЮЛ, "НомерИС", "ИС-" + Формат(ЛистИС.НомерСтруктуры, "ЧЦ=5; ЧВН=; ЧГ="));
		
		Узел_СведИС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_СведИСБезЮЛ, "СведИС");
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "ОргФорм", ЛистИС.ПрСтр);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "НаимОрг", ЛистИС.ИС_ПолноеНаименование_RUS);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "НаимОргЛат", ЛистИС.ИС_ПолноеНаименование_EN);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "НаимДокУчр", ЛистИС.ИС_ДокНаименование_RUS);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "НаимДокУчрЛат", ЛистИС.ИС_ДокНаименование_EN);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "ДатаУчр", Формат(ЛистИС.ДатаРегСтр, "ДФ=dd.MM.yyyy"));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "СтранаУчрИС", ЛистИС.КодСтраныСтр);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "РегНомерИС", ЛистИС.РегНомСтр);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "ИныеСведИС", ЛистИС.СведСтр);
		
		Узел_СведУчИС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведИС, "СведУчИС");
		СтрокиИСУч = СведИСУч.НайтиСтроки(Новый Структура("UID_parent", ЛистИС.UID));
		Для Каждого СтрИСУч Из СтрокиИСУч Цикл
			НовыйУзел_СведУчИС = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведУчИС);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ОснУчред", Формат(СтрИСУч.ПрУч, "ЧН=0"));
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ОснОсущКонтр", Формат(СтрИСУч.ПрКон, "ЧН=0"));
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ОснПравДоход", Формат(СтрИСУч.ПрДох, "ЧН=0"));
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "СтатУчаст", СтрИСУч.ИС_Статус_RUS);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "СтатУчастЛат", СтрИСУч.ИС_Статус_EN);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ДокОснКонтр", СтрИСУч.ИС_НаимДок);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ОписОснКонтр", СтрИСУч.ИС_Основания);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "УчастИС", СтрИСУч.УчИнСтр);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ДатаВознУчаст", Формат(СтрИСУч.ДатаНачИС, "ДФ=dd.MM.yyyy"));
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ДоляУчаст", СтрИСУч.ДоляУчастияИС);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ДатаКонУчаст", Формат(СтрИСУч.ДатаКонИС, "ДФ=dd.MM.yyyy"));
		КонецЦикла;
		РегламентированнаяОтчетность.УдалитьУзел(Узел_СведУчИС);
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_СведИСБезЮЛ);
	
	Узел_РаскрУчИОКосв = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_УведУчИО, "РаскрУчИОКосв");
	Для Каждого ЛистУч Из ЛистыУч Цикл
		Если Не ЗначениеЗаполнено(ЛистУч.НомерУчастника) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_РаскрУчИОКосв = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_РаскрУчИОКосв);
		
		Узел_СвУчКосвИО = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_РаскрУчИОКосв, "СвУчКосвИО");
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СвУчКосвИО, "НомерИО", Формат(ЛистУч.НомерУчастника, "ЧЦ=5; ЧВН=; ЧГ="));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СвУчКосвИО, "НаимОрг", ЛистУч.ПолноеНаименование);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СвУчКосвИО, "ДоляУчКосвИт", ЛистУч.ДоляКосвУчастия);
		
		Узел_РаскрУчИО = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_РаскрУчИОКосв, "РаскрУчИО");
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РаскрУчИО, "НомерПосл", Формат(ЛистУч.НомерГруппы, "ЧЦ=5; ЧВН=; ЧГ="));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РаскрУчИО, "ДоляКосвПослИт", ЛистУч.ДоляКосвУчастияГр);
		
		СтрокиМнг = МнгУч.НайтиСтроки(Новый Структура("UID", ЛистУч.UID));
		Узел_СведУчПосл = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_РаскрУчИО, "СведУчПосл");
		Для Каждого Стр Из СтрокиМнг Цикл
			НовыйУзел_СведУчПосл = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведУчПосл);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчПосл, "НомерУч", Стр.НомерУчастника);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчПосл, "ДоляУчПрям", Стр.ДоляПрУчастия);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчПосл, "ДоляУчКосв", Стр.ДоляКосвУчастия);
		КонецЦикла;
		РегламентированнаяОтчетность.УдалитьУзел(Узел_СведУчПосл);
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_РаскрУчИОКосв);
КонецПроцедуры

#КонецОбласти
#КонецЕсли