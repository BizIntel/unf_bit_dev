#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ПередЗаписью набора записей.
//
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
  ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
  ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Установка исключительной блокировки текущего набора записей регистратора.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыПоНалогам.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Отбор.Регистратор.Значение);
	Блокировка.Заблокировать();
	
	Если НЕ СтруктураВременныеТаблицы.Свойство("ДвиженияРасчетыПоНалогамИзменение")
		ИЛИ СтруктураВременныеТаблицы.Свойство("ДвиженияРасчетыПоНалогамИзменение")
	   И НЕ СтруктураВременныеТаблицы.ДвиженияРасчетыПоНалогамИзменение Тогда
		
		// Если временная таблица "ДвиженияРасчетыПоНалогамИзменение" не существует или не содержит записей
		// об изменении набора, значит набор записывается первый раз или для набора был выполнен контроль остатков.
		// Текущее состояние набора помещается во временную таблицу "ДвиженияРасчетыПоНалогамПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно текущего.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РасчетыПоНалогам.НомерСтроки КАК НомерСтроки,
		|	РасчетыПоНалогам.Организация КАК Организация,
		|	РасчетыПоНалогам.ВидНалога КАК ВидНалога,
		|	ВЫБОР
		|		КОГДА РасчетыПоНалогам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыПоНалогам.Сумма
		|		ИНАЧЕ -РасчетыПоНалогам.Сумма
		|	КОНЕЦ КАК СуммаПередЗаписью
		|ПОМЕСТИТЬ ДвиженияРасчетыПоНалогамПередЗаписью
		|ИЗ
		|	РегистрНакопления.РасчетыПоНалогам КАК РасчетыПоНалогам
		|ГДЕ
		|	РасчетыПоНалогам.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	Иначе
		
		// Если временная таблица "ДвиженияРасчетыПоНалогамИзменение" существует и содержит записи
		// об изменении набора, значит набор записывается не первый раз и для набора не был выполнен контроль остатков.
		// Текущее состояние набора и текущее состояние изменений помещаются во временную таблцу "ДвиженияРасчетыПоНалогамПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно первоначального.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияРасчетыПоНалогамИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыПоНалогамИзменение.Организация КАК Организация,
		|	ДвиженияРасчетыПоНалогамИзменение.ВидНалога КАК ВидНалога,
		|	ДвиженияРасчетыПоНалогамИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью
		|ПОМЕСТИТЬ ДвиженияРасчетыПоНалогамПередЗаписью
		|ИЗ
		|	ДвиженияРасчетыПоНалогамИзменение КАК ДвиженияРасчетыПоНалогамИзменение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыПоНалогам.НомерСтроки,
		|	РасчетыПоНалогам.Организация,
		|	РасчетыПоНалогам.ВидНалога,
		|	ВЫБОР
		|		КОГДА РасчетыПоНалогам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыПоНалогам.Сумма
		|		ИНАЧЕ -РасчетыПоНалогам.Сумма
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.РасчетыПоНалогам КАК РасчетыПоНалогам
		|ГДЕ
		|	РасчетыПоНалогам.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	КонецЕсли;
	
	// Временная таблица "ДвиженияРасчетыПоНалогамИзменение" уничтожается
	// Удаляется информация о ее существовании.
	
	Если СтруктураВременныеТаблицы.Свойство("ДвиженияРасчетыПоНалогамИзменение") Тогда
		
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияРасчетыПоНалогамИзменение");
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		СтруктураВременныеТаблицы.Удалить("ДвиженияРасчетыПоНалогамИзменение");
	
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ПриЗаписи набора записей.
//
Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
  ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
  ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу "ДвиженияРасчетыПоНалогамИзменение".
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ДвиженияРасчетыПоНалогамИзменение.НомерСтроки) КАК НомерСтроки,
	|	ДвиженияРасчетыПоНалогамИзменение.Организация КАК Организация,
	|	ДвиженияРасчетыПоНалогамИзменение.ВидНалога КАК ВидНалога,
	|	СУММА(ДвиженияРасчетыПоНалогамИзменение.СуммаПередЗаписью) КАК СуммаПередЗаписью,
	|	СУММА(ДвиженияРасчетыПоНалогамИзменение.СуммаИзменение) КАК СуммаИзменение,
	|	СУММА(ДвиженияРасчетыПоНалогамИзменение.СуммаПриЗаписи) КАК СуммаПриЗаписи
	|ПОМЕСТИТЬ ДвиженияРасчетыПоНалогамИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияРасчетыПоНалогамПередЗаписью.НомерСтроки КАК НомерСтроки,
	|		ДвиженияРасчетыПоНалогамПередЗаписью.Организация КАК Организация,
	|		ДвиженияРасчетыПоНалогамПередЗаписью.ВидНалога КАК ВидНалога,
	|		ДвиженияРасчетыПоНалогамПередЗаписью.СуммаПередЗаписью КАК СуммаПередЗаписью,
	|		ДвиженияРасчетыПоНалогамПередЗаписью.СуммаПередЗаписью КАК СуммаИзменение,
	|		0 КАК СуммаПриЗаписи
	|	ИЗ
	|		ДвиженияРасчетыПоНалогамПередЗаписью КАК ДвиженияРасчетыПоНалогамПередЗаписью
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРасчетыПоНалогамПриЗаписи.НомерСтроки,
	|		ДвиженияРасчетыПоНалогамПриЗаписи.Организация,
	|		ДвиженияРасчетыПоНалогамПриЗаписи.ВидНалога,
	|		0,
	|		ВЫБОР
	|			КОГДА ДвиженияРасчетыПоНалогамПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ДвиженияРасчетыПоНалогамПриЗаписи.Сумма
	|			ИНАЧЕ ДвиженияРасчетыПоНалогамПриЗаписи.Сумма
	|		КОНЕЦ,
	|		ДвиженияРасчетыПоНалогамПриЗаписи.Сумма
	|	ИЗ
	|		РегистрНакопления.РасчетыПоНалогам КАК ДвиженияРасчетыПоНалогамПриЗаписи
	|	ГДЕ
	|		ДвиженияРасчетыПоНалогамПриЗаписи.Регистратор = &Регистратор) КАК ДвиженияРасчетыПоНалогамИзменение
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияРасчетыПоНалогамИзменение.Организация,
	|	ДвиженияРасчетыПоНалогамИзменение.ВидНалога
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДвиженияРасчетыПоНалогамИзменение.СуммаИзменение) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВидНалога");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	// Новые изменения были помещены во временную таблицу "ДвиженияРасчетыПоНалогамИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияРасчетыПоНалогамИзменение", ВыборкаИзРезультатаЗапроса.Количество > 0);
	
	// Временная таблица "ДвиженияРасчетыПоНалогамПередЗаписью" уничтожается
	Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияРасчетыПоНалогамПередЗаписью");
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#КонецЕсли