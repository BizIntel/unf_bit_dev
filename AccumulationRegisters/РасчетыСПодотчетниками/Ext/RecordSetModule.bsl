#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ПередЗаписью набора записей.
//
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
  ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
  ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Установка исключительной блокировки текущего набора записей регистратора.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПодотчетниками.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Отбор.Регистратор.Значение);
	Блокировка.Заблокировать();
	
	Если НЕ СтруктураВременныеТаблицы.Свойство("ДвиженияРасчетыСПодотчетникамиИзменение")
	    ИЛИ СтруктураВременныеТаблицы.Свойство("ДвиженияРасчетыСПодотчетникамиИзменение")
	   И НЕ СтруктураВременныеТаблицы.ДвиженияРасчетыСПодотчетникамиИзменение Тогда
		
		// Если временная таблица "ДвиженияРасчетыСПодотчетникамиИзменение" не существует или не содержит записей
		// об изменении набора, значит набор записывается первый раз или для набора был выполнен контроль остатков.
		// Текущее состояние набора помещается во временную таблицу "ДвиженияРасчетыСПодотчетникамиПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно текущего.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РегистрРасчетыСПодотчетниками.НомерСтроки КАК НомерСтроки,
		|	РегистрРасчетыСПодотчетниками.Организация КАК Организация,
		|	РегистрРасчетыСПодотчетниками.Сотрудник КАК Сотрудник,
		|	РегистрРасчетыСПодотчетниками.Валюта КАК Валюта,
		|	РегистрРасчетыСПодотчетниками.Документ КАК Документ,
		|	ВЫБОР
		|		КОГДА РегистрРасчетыСПодотчетниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РегистрРасчетыСПодотчетниками.Сумма
		|		ИНАЧЕ -РегистрРасчетыСПодотчетниками.Сумма
		|	КОНЕЦ КАК СуммаПередЗаписью,
		|	ВЫБОР
		|		КОГДА РегистрРасчетыСПодотчетниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РегистрРасчетыСПодотчетниками.СуммаВал
		|		ИНАЧЕ -РегистрРасчетыСПодотчетниками.СуммаВал
		|	КОНЕЦ КАК СуммаВалПередЗаписью
		|ПОМЕСТИТЬ ДвиженияРасчетыСПодотчетникамиПередЗаписью
		|ИЗ
		|	РегистрНакопления.РасчетыСПодотчетниками КАК РегистрРасчетыСПодотчетниками
		|ГДЕ
		|	РегистрРасчетыСПодотчетниками.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	Иначе
		
		// Если временная таблица "ДвиженияРасчетыСПодотчетникамиИзменение" существует и содержит записи
		// об изменении набора, значит набор записывается не первый раз и для набора не был выполнен контроль остатков.
		// Текущее состояние набора и текущее состояние изменений помещаются во временную таблцу "ДвиженияРасчетыСПодотчетникамиПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно первоначального.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияРасчетыСПодотчетникамиИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Организация КАК Организация,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Сотрудник КАК Сотрудник,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Валюта КАК Валюта,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Документ КАК Документ,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью
		|ПОМЕСТИТЬ ДвиженияРасчетыСПодотчетникамиПередЗаписью
		|ИЗ
		|	ДвиженияРасчетыСПодотчетникамиИзменение КАК ДвиженияРасчетыСПодотчетникамиИзменение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрРасчетыСПодотчетниками.НомерСтроки,
		|	РегистрРасчетыСПодотчетниками.Организация,
		|	РегистрРасчетыСПодотчетниками.Сотрудник,
		|	РегистрРасчетыСПодотчетниками.Валюта,
		|	РегистрРасчетыСПодотчетниками.Документ,
		|	ВЫБОР
		|		КОГДА РегистрРасчетыСПодотчетниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РегистрРасчетыСПодотчетниками.Сумма
		|		ИНАЧЕ -РегистрРасчетыСПодотчетниками.Сумма
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА РегистрРасчетыСПодотчетниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РегистрРасчетыСПодотчетниками.СуммаВал
		|		ИНАЧЕ -РегистрРасчетыСПодотчетниками.СуммаВал
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.РасчетыСПодотчетниками КАК РегистрРасчетыСПодотчетниками
		|ГДЕ
		|	РегистрРасчетыСПодотчетниками.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	КонецЕсли;
	
	// Временная таблица "ДвиженияРасчетыСПодотчетникамиИзменение" уничтожается
	// Удаляется информация о ее существовании.
	
	Если СтруктураВременныеТаблицы.Свойство("ДвиженияРасчетыСПодотчетникамиИзменение") Тогда
		
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияРасчетыСПодотчетникамиИзменение");
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		СтруктураВременныеТаблицы.Удалить("ДвиженияРасчетыСПодотчетникамиИзменение");
	
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ПриЗаписи набора записей.
//
Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
  ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
  ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу "ДвиженияРасчетыСПодотчетникамиИзменение".
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ДвиженияРасчетыСПодотчетникамиИзменение.НомерСтроки) КАК НомерСтроки,
	|	ДвиженияРасчетыСПодотчетникамиИзменение.Организация КАК Организация,
	|	ДвиженияРасчетыСПодотчетникамиИзменение.Сотрудник КАК Сотрудник,
	|	ДвиженияРасчетыСПодотчетникамиИзменение.Валюта КАК Валюта,
	|	ДвиженияРасчетыСПодотчетникамиИзменение.Документ КАК Документ,
	|	СУММА(ДвиженияРасчетыСПодотчетникамиИзменение.СуммаПередЗаписью) КАК СуммаПередЗаписью,
	|	СУММА(ДвиженияРасчетыСПодотчетникамиИзменение.СуммаИзменение) КАК СуммаИзменение,
	|	СУММА(ДвиженияРасчетыСПодотчетникамиИзменение.СуммаПриЗаписи) КАК СуммаПриЗаписи,
	|	СУММА(ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалПередЗаписью) КАК СуммаВалПередЗаписью,
	|	СУММА(ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалИзменение) КАК СуммаВалИзменение,
	|	СУММА(ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалПриЗаписи) КАК СуммаВалПриЗаписи
	|ПОМЕСТИТЬ ДвиженияРасчетыСПодотчетникамиИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияРасчетыСПодотчетникамиПередЗаписью.НомерСтроки КАК НомерСтроки,
	|		ДвиженияРасчетыСПодотчетникамиПередЗаписью.Организация КАК Организация,
	|		ДвиженияРасчетыСПодотчетникамиПередЗаписью.Сотрудник КАК Сотрудник,
	|		ДвиженияРасчетыСПодотчетникамиПередЗаписью.Валюта КАК Валюта,
	|		ДвиженияРасчетыСПодотчетникамиПередЗаписью.Документ КАК Документ,
	|		ДвиженияРасчетыСПодотчетникамиПередЗаписью.СуммаПередЗаписью КАК СуммаПередЗаписью,
	|		ДвиженияРасчетыСПодотчетникамиПередЗаписью.СуммаПередЗаписью КАК СуммаИзменение,
	|		0 КАК СуммаПриЗаписи,
	|		ДвиженияРасчетыСПодотчетникамиПередЗаписью.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
	|		ДвиженияРасчетыСПодотчетникамиПередЗаписью.СуммаВалПередЗаписью КАК СуммаВалИзменение,
	|		0 КАК СуммаВалПриЗаписи
	|	ИЗ
	|		ДвиженияРасчетыСПодотчетникамиПередЗаписью КАК ДвиженияРасчетыСПодотчетникамиПередЗаписью
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРасчетыСПодотчетникамиПриЗаписи.НомерСтроки,
	|		ДвиженияРасчетыСПодотчетникамиПриЗаписи.Организация,
	|		ДвиженияРасчетыСПодотчетникамиПриЗаписи.Сотрудник,
	|		ДвиженияРасчетыСПодотчетникамиПриЗаписи.Валюта,
	|		ДвиженияРасчетыСПодотчетникамиПриЗаписи.Документ,
	|		0,
	|		ВЫБОР
	|			КОГДА ДвиженияРасчетыСПодотчетникамиПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ДвиженияРасчетыСПодотчетникамиПриЗаписи.Сумма
	|			ИНАЧЕ ДвиженияРасчетыСПодотчетникамиПриЗаписи.Сумма
	|		КОНЕЦ,
	|		ДвиженияРасчетыСПодотчетникамиПриЗаписи.Сумма,
	|		0,
	|		ВЫБОР
	|			КОГДА ДвиженияРасчетыСПодотчетникамиПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ДвиженияРасчетыСПодотчетникамиПриЗаписи.СуммаВал
	|			ИНАЧЕ ДвиженияРасчетыСПодотчетникамиПриЗаписи.СуммаВал
	|		КОНЕЦ,
	|		ДвиженияРасчетыСПодотчетникамиПриЗаписи.СуммаВал
	|	ИЗ
	|		РегистрНакопления.РасчетыСПодотчетниками КАК ДвиженияРасчетыСПодотчетникамиПриЗаписи
	|	ГДЕ
	|		ДвиженияРасчетыСПодотчетникамиПриЗаписи.Регистратор = &Регистратор) КАК ДвиженияРасчетыСПодотчетникамиИзменение
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияРасчетыСПодотчетникамиИзменение.Организация,
	|	ДвиженияРасчетыСПодотчетникамиИзменение.Сотрудник,
	|	ДвиженияРасчетыСПодотчетникамиИзменение.Валюта,
	|	ДвиженияРасчетыСПодотчетникамиИзменение.Документ
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ДвиженияРасчетыСПодотчетникамиИзменение.СуммаИзменение) <> 0
	|		ИЛИ СУММА(ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалИзменение) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Сотрудник,
	|	Валюта,
	|	Документ");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	// Новые изменения были помещены во временную таблицу "ДвиженияРасчетыСПодотчетникамиИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияРасчетыСПодотчетникамиИзменение", ВыборкаИзРезультатаЗапроса.Количество > 0);
	
	// Временная таблица "ДвиженияРасчетыСПодотчетникамиПередЗаписью" уничтожается
	Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияРасчетыСПодотчетникамиПередЗаписью");
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#КонецЕсли