#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ПередЗаписью набора записей.
//
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
  ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
  ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Установка исключительной блокировки текущего набора записей регистратора.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПерсоналом.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Отбор.Регистратор.Значение);
	Блокировка.Заблокировать();
	
	Если НЕ СтруктураВременныеТаблицы.Свойство("ДвиженияРасчетыСПерсоналомИзменение") ИЛИ
		СтруктураВременныеТаблицы.Свойство("ДвиженияРасчетыСПерсоналомИзменение") И НЕ СтруктураВременныеТаблицы.ДвиженияРасчетыСПерсоналомИзменение Тогда
		
		// Если временная таблица "ДвиженияРасчетыСПерсоналомИзменение" не существует или не содержит записей
		// об изменении набора, значит набор записывается первый раз или для набора был выполнен контроль остатков.
		// Текущее состояние набора помещается во временную таблицу "ДвиженияРасчетыСПерсоналомПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно текущего.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РасчетыСПерсоналом.НомерСтроки КАК НомерСтроки,
		|	РасчетыСПерсоналом.Организация КАК Организация,
		|	РасчетыСПерсоналом.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	РасчетыСПерсоналом.Сотрудник КАК Сотрудник,
		|	РасчетыСПерсоналом.Валюта КАК Валюта,
		|	РасчетыСПерсоналом.ПериодРегистрации КАК ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА РасчетыСПерсоналом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПерсоналом.Сумма
		|		ИНАЧЕ -РасчетыСПерсоналом.Сумма
		|	КОНЕЦ КАК СуммаПередЗаписью,
		|	ВЫБОР
		|		КОГДА РасчетыСПерсоналом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПерсоналом.СуммаВал
		|		ИНАЧЕ -РасчетыСПерсоналом.СуммаВал
		|	КОНЕЦ КАК СуммаВалПередЗаписью
		|ПОМЕСТИТЬ ДвиженияРасчетыСПерсоналомПередЗаписью
		|ИЗ
		|	РегистрНакопления.РасчетыСПерсоналом КАК РасчетыСПерсоналом
		|ГДЕ
		|	РасчетыСПерсоналом.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	Иначе
		
		// Если временная таблица "ДвиженияРасчетыСПерсоналомИзменение" существует и содержит записи
		// об изменении набора, значит набор записывается не первый раз и для набора не был выполнен контроль остатков.
		// Текущее состояние набора и текущее состояние изменений помещаются во временную таблцу "ДвиженияРасчетыСПерсоналомПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно первоначального.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияРасчетыСПерсоналомИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыСПерсоналомИзменение.Организация КАК Организация,
		|	ДвиженияРасчетыСПерсоналомИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ДвиженияРасчетыСПерсоналомИзменение.Сотрудник КАК Сотрудник,
		|	ДвиженияРасчетыСПерсоналомИзменение.Валюта КАК Валюта,
		|	ДвиженияРасчетыСПерсоналомИзменение.ПериодРегистрации КАК ПериодРегистрации,
		|	ДвиженияРасчетыСПерсоналомИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПерсоналомИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью
		|ПОМЕСТИТЬ ДвиженияРасчетыСПерсоналомПередЗаписью
		|ИЗ
		|	ДвиженияРасчетыСПерсоналомИзменение КАК ДвиженияРасчетыСПерсоналомИзменение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыСПерсоналом.НомерСтроки,
		|	РасчетыСПерсоналом.Организация,
		|	РасчетыСПерсоналом.СтруктурнаяЕдиница,
		|	РасчетыСПерсоналом.Сотрудник,
		|	РасчетыСПерсоналом.Валюта,
		|	РасчетыСПерсоналом.ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА РасчетыСПерсоналом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПерсоналом.Сумма
		|		ИНАЧЕ -РасчетыСПерсоналом.Сумма
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА РасчетыСПерсоналом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПерсоналом.СуммаВал
		|		ИНАЧЕ -РасчетыСПерсоналом.СуммаВал
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.РасчетыСПерсоналом КАК РасчетыСПерсоналом
		|ГДЕ
		|	РасчетыСПерсоналом.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	КонецЕсли;
	
	// Временная таблица "ДвиженияРасчетыСПерсоналомИзменение" уничтожается
	// Удаляется информация о ее существовании.
	
	Если СтруктураВременныеТаблицы.Свойство("ДвиженияРасчетыСПерсоналомИзменение") Тогда
		
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияРасчетыСПерсоналомИзменение");
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		СтруктураВременныеТаблицы.Удалить("ДвиженияРасчетыСПерсоналомИзменение");
	
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ПриЗаписи набора записей.
//
Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
  ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
  ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу "ДвиженияРасчетыСПерсоналомИзменение".
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ДвиженияРасчетыСПерсоналомИзменение.НомерСтроки) КАК НомерСтроки,
	|	ДвиженияРасчетыСПерсоналомИзменение.Организация КАК Организация,
	|	ДвиженияРасчетыСПерсоналомИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ДвиженияРасчетыСПерсоналомИзменение.Сотрудник КАК Сотрудник,
	|	ДвиженияРасчетыСПерсоналомИзменение.Валюта КАК Валюта,
	|	ДвиженияРасчетыСПерсоналомИзменение.ПериодРегистрации КАК ПериодРегистрации,
	|	СУММА(ДвиженияРасчетыСПерсоналомИзменение.СуммаПередЗаписью) КАК СуммаПередЗаписью,
	|	СУММА(ДвиженияРасчетыСПерсоналомИзменение.СуммаИзменение) КАК СуммаИзменение,
	|	СУММА(ДвиженияРасчетыСПерсоналомИзменение.СуммаПриЗаписи) КАК СуммаПриЗаписи,
	|	СУММА(ДвиженияРасчетыСПерсоналомИзменение.СуммаВалПередЗаписью) КАК СуммаВалПередЗаписью,
	|	СУММА(ДвиженияРасчетыСПерсоналомИзменение.СуммаВалИзменение) КАК СуммаВалИзменение,
	|	СУММА(ДвиженияРасчетыСПерсоналомИзменение.СуммаВалПриЗаписи) КАК СуммаВалПриЗаписи
	|ПОМЕСТИТЬ ДвиженияРасчетыСПерсоналомИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияРасчетыСПерсоналомПередЗаписью.НомерСтроки КАК НомерСтроки,
	|		ДвиженияРасчетыСПерсоналомПередЗаписью.Организация КАК Организация,
	|		ДвиженияРасчетыСПерсоналомПередЗаписью.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ДвиженияРасчетыСПерсоналомПередЗаписью.Сотрудник КАК Сотрудник,
	|		ДвиженияРасчетыСПерсоналомПередЗаписью.Валюта КАК Валюта,
	|		ДвиженияРасчетыСПерсоналомПередЗаписью.ПериодРегистрации КАК ПериодРегистрации,
	|		ДвиженияРасчетыСПерсоналомПередЗаписью.СуммаПередЗаписью КАК СуммаПередЗаписью,
	|		ДвиженияРасчетыСПерсоналомПередЗаписью.СуммаПередЗаписью КАК СуммаИзменение,
	|		0 КАК СуммаПриЗаписи,
	|		ДвиженияРасчетыСПерсоналомПередЗаписью.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
	|		ДвиженияРасчетыСПерсоналомПередЗаписью.СуммаВалПередЗаписью КАК СуммаВалИзменение,
	|		0 КАК СуммаВалПриЗаписи
	|	ИЗ
	|		ДвиженияРасчетыСПерсоналомПередЗаписью КАК ДвиженияРасчетыСПерсоналомПередЗаписью
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРасчетыСПерсоналомПриЗаписи.НомерСтроки,
	|		ДвиженияРасчетыСПерсоналомПриЗаписи.Организация,
	|		ДвиженияРасчетыСПерсоналомПриЗаписи.СтруктурнаяЕдиница,
	|		ДвиженияРасчетыСПерсоналомПриЗаписи.Сотрудник,
	|		ДвиженияРасчетыСПерсоналомПриЗаписи.Валюта,
	|		ДвиженияРасчетыСПерсоналомПриЗаписи.ПериодРегистрации,
	|		0,
	|		ВЫБОР
	|			КОГДА ДвиженияРасчетыСПерсоналомПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ДвиженияРасчетыСПерсоналомПриЗаписи.Сумма
	|			ИНАЧЕ ДвиженияРасчетыСПерсоналомПриЗаписи.Сумма
	|		КОНЕЦ,
	|		ДвиженияРасчетыСПерсоналомПриЗаписи.Сумма,
	|		0,
	|		ВЫБОР
	|			КОГДА ДвиженияРасчетыСПерсоналомПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ДвиженияРасчетыСПерсоналомПриЗаписи.СуммаВал
	|			ИНАЧЕ ДвиженияРасчетыСПерсоналомПриЗаписи.СуммаВал
	|		КОНЕЦ,
	|		ДвиженияРасчетыСПерсоналомПриЗаписи.СуммаВал
	|	ИЗ
	|		РегистрНакопления.РасчетыСПерсоналом КАК ДвиженияРасчетыСПерсоналомПриЗаписи
	|	ГДЕ
	|		ДвиженияРасчетыСПерсоналомПриЗаписи.Регистратор = &Регистратор) КАК ДвиженияРасчетыСПерсоналомИзменение
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияРасчетыСПерсоналомИзменение.Организация,
	|	ДвиженияРасчетыСПерсоналомИзменение.СтруктурнаяЕдиница,
	|	ДвиженияРасчетыСПерсоналомИзменение.Сотрудник,
	|	ДвиженияРасчетыСПерсоналомИзменение.Валюта,
	|	ДвиженияРасчетыСПерсоналомИзменение.ПериодРегистрации
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ДвиженияРасчетыСПерсоналомИзменение.СуммаИзменение) <> 0
	|		ИЛИ СУММА(ДвиженияРасчетыСПерсоналомИзменение.СуммаВалИзменение) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтруктурнаяЕдиница,
	|	Сотрудник,
	|	Валюта,
	|	ПериодРегистрации");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	// Новые изменения были помещены во временную таблицу "ДвиженияРасчетыСПерсоналомИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияРасчетыСПерсоналомИзменение", ВыборкаИзРезультатаЗапроса.Количество > 0);
	
	// Временная таблица "ДвиженияРасчетыСПерсоналомПередЗаписью" уничтожается
	Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияРасчетыСПерсоналомПередЗаписью");
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#КонецЕсли